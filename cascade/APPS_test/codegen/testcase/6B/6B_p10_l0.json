[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"5\\n1 8 6\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1 3\"\nassert solution(\"5\") == \"1 3\"\nassert solution(\"6\") == \"1 3\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n5 7\n5 8\n''') == '1 8 6'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n7 9\n7 10\n''') == '8'\nassert solution('''\n4\n1 2\n2 3\n1 4\n''') == '4'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n7 9\n7 10\n''') == '8'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n3 9\n4 10\n5 6\n7 8\n9 10\n''') == '1 8 6'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n4 6\n''') == '5'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6\n''') == '1 8 6'\nassert solution('''4\n1 2\n2 3\n3 4\n3 5\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 5\n4 5\n7 4\n''') == '1 5 4'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 5\n4 5\n7 4\n''') == '1 5 4'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 5\n4 5\n7 4\n''') == '1 5 4'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 5\n4 5\n7 4\n''') == '1 5 4'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5'\n\nassert solution('2') == '1 2'\n\nassert solution('2\\n3') == '1 2 3'\n\nassert solution('2\\n3\\n1 2') == '1 2 3'\n\nassert solution('2\\n3\\n1 2\\n1 3') == '1 2 3'"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"\nassert solution(\"2\\n1 2\") == \"1 2\"\nassert solution(\"10\\n2 3\") == \"1 3\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\") == \"1 4\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"1 4\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\"\n'''\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 1 2 3 3 4 4 5\") == \"1 1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 1\"\nassert solution(\"1 1 2 1 2 3 3 4 4 5 6 7 8 9 10\") == \"1 1\"\nassert solution(\"1 1 2 1 2 3 3 4 4 5 6 7 8 9 10\") == \"1 1\"\nassert solution(\"1 1 2 2 1 2 3 3 4 4 5 6 7 8 9 10\") == \"1 2\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '1 1'\nassert solution('3\\n1\\n') == '3 4'\nassert solution('3\\n2\\n') == '1 6'\nassert solution('4\\n2\\n') == '6 3'\nassert solution('2\\n2\\n') == '2 1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n\nn = int(input())\n\ndivisors = [0] * 101\n\nfor x in map(int, input().split()):\n    for y in map(int, input().split()):\n        divisors[x] += 1\n        divisors[y] += 1\n\nfor x in range(1, len(divisors)):\n    if divisors[x] > 1:\n        print(x, end=' ')"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''10\n10 2 8 1 2 4 1 19 4 5''') == '20 8'\nassert solution('''10\n10 2 8 1 2 4 1 19 4 5''') == '20 8'\nassert solution('''10\n10 2 8 1 2 4 1 19 4 5''') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n'''\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '10\\n10 2 8 1 2 4 1 20 4 5'\n    ) == '20 8'\nassert solution(\n    '10\\n10 2 8 1 2 4 1 20 4 5'\n    ) == '20 8'\nassert solution(\n    '10\\n10 2 8 1 2 4 1 20 4 5'\n    ) == '20 8'\nassert solution(\n    '10\\n10 2 8 1 2 4 1 20 4 5'\n    ) == '20 8'\nassert solution(\n    '10\\n10 2 8 1 2 4 1 20 4 5'\n    ) == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n    ans = []\n    N = int(stdin.readline())\n    S = stdin.readline()\n    a = []\n    for c in S:\n        if c not in a:\n            a.append(c)\n    div = a\n    print(div)\n    while len(div) > 1:\n        for i in range(len(div)):\n            if i % 2 == 0:\n                print('even')\n                a = []\n                for j in range(len(div)):\n                    if j % 2 == 0:\n                        a.append(div[j])\n                div = a\n                print(div)\n            else:\n                print('odd')\n                a = []\n                for j in range(len(div)):\n                    if j % 2!= 0:\n                        a.append(div[j])\n                div = a\n                print(div)\n    return ''.join(div)\nassert solution('''4\n4 2 1 1''') == '1 1'\nassert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''10\n5 2 1 1''') == '1 1'\nassert solution('''10\n5 1 1''') == '1 1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"5\") == \"1 3\"\nassert solution(\"10\") == \"2 5\"\nassert solution(\"50\") == \"2 4\"\nassert solution(\"1000\") == \"4 3\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''10\n4 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''14\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''27\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''26\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''20\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\n'''\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\n\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n'''\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"24\"\n\"\"\"\n\n\"\"\"\nIn this problem, we want to find the largest possible sum of elements divisible by $k$ among all the rows in the given matrix.\n\nWe choose the largest possible sum of elements divisible by $k$ among all the rows in the given matrix.\n\nAs a result, we want to find the largest possible sum of elements divisible by $k$ among all the rows, among all possible rows.\n\nIf you start from the beginning of the matrix, you can see that all rows begin with a sum of zero. We want to find a row that has a maximum possible sum of elements divisible by $k$.\n\nIf you start with the last row of the matrix, it is also possible that the sum of all elements is divisible by $k$, we want to find a row that has a maximum possible sum of elements divisible by $k$.\n\nWe can choose one of the two starting rows and then we will apply two kinds of greedy algorithms to find the best possible sum of elements divisible by $k$.\n\nIn the first greedy algorithm, we choose the first element of the first row and then we will remove it from the first row. The sum of the first row becomes $sum_0 = sum(a[0])$ and we can choose the element from the second row.\n\nIn the second greedy algorithm, we choose the last element of the second row and then we will remove it from the second row. The sum of the second row becomes $sum_1 = sum(a[1])$ and we can choose the element from the first row.\n\nFinally, we can count the sum of the remaining rows.\n\nIn the second case, if the sum of the first row is less than the sum of the second row, then we choose the elements from the first row.\n\nIn the first case, if the sum of the first row is larger than the sum of the second row, then we choose the elements from the second row.\n\nIf we run the algorithm for the first time, the maximum possible sum of elements divisible by $k$ is $0$ and the maximum possible sum of elements divisible by $k$ among all the rows is $0$. If we run the algorithm for the second time, the maximum possible sum of elements divisible by $k$ is $sum_0 = sum(a[0]) = sum(a[1]) = sum(a[2]) = sum(a[3]) = sum(a[4]) = 0$.\n\nIn the third time, we can count the sum of the remaining rows. If we run the algorithm for the third time, the maximum possible sum of elements divisible by $k$ among all the rows is $sum_1 = sum(a[1]) = sum(a[2]) = sum(a[3]) = sum(a[4]) = sum(a[5]) = sum(a[6]) = sum(a[7]) = sum(a[8]) = sum(a[9]) = sum(a[10]) = sum(a[11]) = sum(a[12]) = sum(a[13]) = sum(a[14]) = sum(a[15]) = sum(a[16]) = sum(a[17]) = sum(a[18]) = sum(a[19]) = sum(a[20]) = sum(a[21]) = sum(a[22]) = sum(a[23]) = sum(a[24]) = sum(a[25]) = sum(a[26]) = sum(a[27]) = sum(a[28]) = sum(a[29]) = sum(a[30]) = sum(a[31]) = sum(a[32]) = sum(a[33]) = sum(a[34]) = sum(a[35]) = sum(a[36]) = sum(a[37]) = sum(a[38]) = sum(a[39]) = sum(a[40]) = sum(a[41]) = sum(a[42]) = sum(a[43]) = sum(a[44]) = sum(a[45]) = sum(a[46]) = sum(a[47]) = sum(a[48]) = sum(a[49]) = sum(a[50]) = sum(a[51]) = sum(a[52]) = sum(a[53]) = sum(a[54]) = sum(a[55]) = sum(a[56]) = sum(a[57]) = sum(a[58]) = sum(a[59]) = sum(a[60]) = sum(a[61]) = sum(a[62]) = sum(a[63]) = sum(a[64]) = sum(a[65]) = sum(a[66]) = sum(a[67]) = sum(a[68]) = sum(a[69]) = sum(a[70]) = sum(a[71]) = sum(a[72]) = sum(a[73]) = sum(a[74]) = sum(a[75]) = sum(a[76]) = sum(a[77]) = sum(a[78]) = sum(a[79]) = sum(a[80]) = sum(a[81]) = sum(a[82]) = sum(a[83]) = sum(a[84]) = sum(a[85]) = sum(a[86]) = sum(a[87]) = sum(a[88]) = sum(a[89]) = sum(a[90]) = sum(a[91]) = sum(a[92]) = sum(a[93]) = sum(a[94]) = sum(a[95]) = sum(a[96]) = sum(a[97]) = sum(a[98]) = sum(a[99]) = sum(a[100]) = sum(a[101]) = sum(a[102]) = sum(a[103]) = sum(a[104]) = sum(a[105]) = sum(a[106]) = sum(a[107]) = sum(a[108]) = sum(a[109]) = sum(a[110]) = sum(a[111]) = sum(a[112]) = sum(a[113]) = sum(a[114]) = sum(a[115]) = sum(a[116]) = sum(a[117]) = sum(a[118]) = sum(a[119]) = sum(a[120]) = sum(a[121]) = sum(a[122]) = sum(a[123]) = sum(a[124]) = sum(a[125]) = sum(a[126]) = sum(a[127]) = sum(a[128]) = sum(a[129]) = sum(a[130]) = sum(a[131]) = sum(a[132]) = sum(a[133]) = sum(a[134]) = sum(a[135]) = sum(a[136]) = sum(a[137]) = sum(a[138]) = sum(a[139]) = sum(a[140]) = sum(a[141]) = sum(a[142]) = sum(a[143])"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\nassert solution('3 4 3\\n1 1 1 2\\n2 1 2 1\\n3 3 2 1\\n4 3 1 2\\n5 4 2 1\\n6 2 1 1\\n') == '60'\n\n\n-----"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\n\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '56'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\nassert solution('1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\nassert solution('3 3 2\\n1 2 1\\n2 2 1\\n1 2 1\\n2 2 1\\n1 2 1\\n1 2 1\\n2 2 1\\n1 2 1\\n') == '4'\nassert solution('3 3 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\nassert solution('3 3 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == '40'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4 3''') == '24'\nassert solution('''5 5 4''') == '56'\nassert solution('''7 1 1 4''') == '56'\nassert solution('''8 7 1 2''') == '56'\nassert solution('''8 4 7 1 6''') == '56'\n'''\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"1 2 4 3 2\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"LRLRRR\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"LLRR\"\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"RRLR\"\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'LRRR'\nassert solution(stdin) == 'LLRL'\nassert solution(stdin) == 'R'\nassert solution(stdin) == 'RLL'\nassert solution(stdin) == 'LRLRL'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == \"4\"\nassert solution('''1 2 4 3 2''') == \"4\"\nassert solution('''7''') == \"6\"\nassert solution('''1 3 5 6 5 4 2''') == \"6\"\nassert solution('''3''') == \"1\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 4 3 2') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 5 4 2') == '6\\nLRLRRR'\nassert solution('3\\n2 2 2') == '1\\nR'\nassert solution('4\\n1 2 4 3') == '4\\nLLRR'\nassert solution('7\\n1 3 5 6 5 4 2') == '6\\nLRLRRR'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'LLRL'\nassert solution(stdin) == 'RLRR'\nassert solution(stdin) == 'RRLL'\nassert solution(stdin) == 'RRLL'\nassert solution(stdin) == 'LRLRL'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n\"\"\"\n\nfrom sys import stdin,stdout\n\nn = int(stdin.readline().strip())\narr = list(map(int,stdin.readline().strip().split(' ')))\nk = 0\nprev = arr[0]\nfor i in range(1,len(arr)):\n    if arr[i]<prev:\n        k = max(k,i)\n    else:\n        prev = arr[i]\nprint(k)\nl = [str(arr[i]) for i in range(len(arr))]\nl.sort()\nl.reverse()\nprint(''.join(l))\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n4\\n7\\n4\\n1') == '3'\nassert solution('1\\n4\\n4\\n7\\n4\\n1') == '3'\nassert solution('1\\n4\\n4\\n7\\n4\\n1') == '3'\nassert solution('1\\n4\\n4\\n7\\n4\\n1') == '3'\nassert solution('1\\n4\\n4\\n7\\n4\\n1') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"3\"\nassert solution(\"1\\n4\\n3\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n\") == \"-1\"\nassert solution(\"1\\n4\\n3\\n\") == \"-1\"\nassert solution(\"4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\\\n5\n2 2 5 2 5\n''') == '3'\nassert solution('''\\\n4\n1 3 3 7\n''') == '-1'\nassert solution('''\\\n2\n2 8\n''') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n3\\n') == '2'\nassert solution('1\\n4\\n') == '3'\nassert solution('1\\n5\\n') == '4'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\") == \"3\"\nassert solution(\"5\\n2 2 5 2 5\") == \"3\"\nassert solution(\"4\\n1 3 3 7\") == \"-1\"\nassert solution(\"2\\n2 8\") == \"3\"\nassert solution(\"3\\n1 3 3 7\") == \"-1\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '-1'\nprint(solution(stdin))\n\n\n\"\"\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5\n2 2 5 2 5\n''') == '3'\nassert solution('''\n4\n1 3 3 7\n''') == '-1'\nassert solution('''\n2\n2 8\n''') == '3'\nassert solution('''\n1000\n1234\n''') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('2 2 5 2 5') == '3'\nassert solution('2 2 2 2 2') == '-1'\nassert solution('2 8') == '3'\nassert solution('2 3 3 7') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n4 4 4 7 4 1') == '3'\nassert solution('2\\n2 2 5 2 5') == '3'\nassert solution('3\\n1 3 3 7') == '-1'\nassert solution('4\\n1 3 3 7') == '-1'\nassert solution('5\\n2 2 5 2 5') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n') == '3'\nassert solution('1\\n2\\n') == '-1'\nassert solution('2\\n2\\n') == '-1'\nassert solution('2\\n4\\n') == '-1'\nassert solution('2\\n5\\n') == '-1'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'NO'\nassert solution('3 1 5 5') == 'YES'\nassert solution('0 0 4 6') == 'YES'\nassert solution('0 0 7 4') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2 4 4''') == 'NO'\nassert solution('''1 1 3 5''') == 'YES'\nassert solution('''3 1 5 5''') == 'YES'\nassert solution('''5 2 10 5''') == 'YES'\nassert solution('''0 0 1000000 1000000''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('0 0 4 6') == 'YES'\nassert solution('0 0 7 4') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 2 4 4\n1 1 3 5\n3 1 5 5\n'''\n) == 'NO'\n\nassert solution(\n'''5 2 10 5\n3 1 7 6\n8 1 11 7\n'''\n) == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\") == \"YES\"\nassert solution(\"0 0 499999 1000000\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2 2 4 4\n1 1 3 5\n3 1 5 5''') == 'NO'\nassert solution(\n'''2 2 4 4\n1 1 3 5\n3 1 5 5''') == 'YES'\nassert solution(\n'''5 2 10 5\n3 1 7 6\n8 1 11 7\n\n5 2 10 5\n3 1 7 6\n8 1 11 7''') == 'YES'\nassert solution(\n'''5 2 10 5\n0 0 4 6\n0 0 7 4\n\n5 2 10 5\n0 0 4 6\n0 0 7 4''') == 'YES'\nassert solution(\n'''1 1 1 1\n1 1 1 1\n1 1 1 1''') == 'YES'\n\n'''\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('11') == '0'\nassert solution('13') == '1'\nassert solution('15') == '0'\nassert solution('10099') == '101'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\"\nassert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"5\") == \"5 3 1 2 4\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\n\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\n\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n\nassert solution('''6\n7 4 0 3 0 5 1 6\n''') == '7 4 2 3 6 5 1 6'"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n0\\n2\\n4\\n5') == '1 4 2 3 5'\nassert solution('4\\n0\\n1\\n1\\n3') == '1 3 2 1 3'\nassert solution('7\\n0\\n1\\n2\\n3\\n4\\n5\\n6') == '7 3 2 1 4 5 6'\nassert solution('7\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '7 3 2 1 4 5 6 7'\nassert solution('8\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '7 3 2 1 4 5 6 7 8'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\nassert solution('''7\n2 1 0 0 1 4 0 6\n''') == '2 1 4 3 5 6 5 1'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('2 1 2 3') == 'NO'\nassert solution('3 2 1 2 3') == 'YES\\n2 1 1 2 1'\nassert solution('5 2') == 'NO'\nassert solution('3 2 1 2 3') == 'YES\\n2 1 1 2 1'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\n1 2 2 3''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1''') == 'NO'\nassert solution('''5 2\n2 1 1 2 1''') == 'YES'\nassert solution('''5 2\n2 1 1 2 2''') == 'YES'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin\nstdin = stdin.readlines()"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES' or solution(stdin) == 'NO'\n\"\"\"\nfrom typing import List, Tuple\nimport sys\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"4 2\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\") == \"YES\\n2 1 1 2 1\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\n'''\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('3 2\\n2 1 2 1') == 'YES\\n2 1 1 2 1'\nassert solution('4 2\\n1 2 2 3') == 'NO'\nassert solution('5 2\\n3 2 1 2 3') == 'NO'\nassert solution('5 2\\n2 1 1 2 1') == 'NO'"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''11 5 2''') == '1'\nassert solution('''11 5 1''') == '3'\nassert solution('''11 10 2''') == '1'\nassert solution('''11 100 2''') == '1'\nassert solution('''11 1000 2''') == '0'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\n\"\"\"\n\nn, x, y = [int(x) for x in stdin.split()]\na = int(stdin)\nb = a % 10**x\nc = 10**y\nprint(min(b // c, n - b // c))\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1'\nassert solution('11 5 1\\n11010100101\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1'\nassert solution('11 5 1\\n11010100101\\n') == '3'\n\"\"\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\nimport sys\nassert sys.argv[1:] == ['--stdin']\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 10 31') == '1'\nassert solution('11 1 31') == '2'\nassert solution('11 10 0') == '1'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1'\nassert solution('11 5 1\\n11010100101\\n') == '3'\nassert solution('11 5 7\\n11010100101\\n') == '9'\n\"\"\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[len(stdin)-1]\nassert solution(\"11 0 1\") == \"1\"\nassert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 15 1\") == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 5 7\") == \"13\"\nassert solution(\"11 7 1\") == \"13\"\nassert solution(\"11 7 3\") == \"13\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12') == 'NO'\nassert solution('1234') == 'YES'\nassert solution('1234') == 'NO'\nassert solution('1 2 2') == 'YES'\nassert solution('123') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''4''') == 'YES'\nassert solution('''5''') == 'YES'\nassert solution('''6''') == 'NO'\nassert solution('''1''') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\"\"\") == \"\"\"NO\nYES\nNO\nYES\nNO\"\"\"\n\nassert solution(\"\"\"3\n3\n1 1 2\n3\n1 1 2 1\n2\n1 2\n2\"\"\") == \"\"\"YES\nNO\nNO\"\"\""
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nNO\\nNO\\nYES\\nNO'\n\n'''\n\n'''\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n' + str(len('1\\n')) + '\\n' + '1\\n') == 'YES'\nassert solution('2\\n' + str(len('2\\n')) + '\\n' + '1\\n' + '1\\n' + '2\\n' + str(len('2\\n')) + '\\n' + '1\\n') == 'YES'\nassert solution('3\\n' + str(len('3\\n')) + '\\n' + '1\\n' + '2\\n' + '1\\n' + '3\\n' + str(len('3\\n')) + '\\n' + '1\\n') == 'NO'\nassert solution('4\\n' + str(len('4\\n')) + '\\n' + '1\\n' + '2\\n' + '2\\n' + '1\\n' + '3\\n' + str(len('4\\n')) + '\\n' + '1\\n') == 'NO'\nassert solution('5\\n' + str(len('5\\n')) + '\\n' + '1\\n' + '2\\n' + '2\\n' + '1\\n' + '3\\n' + str(len('5\\n')) + '\\n' + '1\\n') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nYES\\nNO\\nYES\\nNO'\nassert solution('''5\n2\n1 2\n1\n1 1\n1\n1 2\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nNO\\nYES\\nNO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nYES\\nNO\\nYES'\nassert solution('''5\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'NO'"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''5\n4\n1 2 2 1\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''5\n4\n1 2 2 1\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''3\n4\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''3\n4\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('2\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'NO\\nNO\\nNO\\nYES\\nNO'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1553'\nassert solution(\n'''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution(\n'''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution(\n'''10\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '999999'\nassert solution(\n'''11\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '99999999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''6\n11\n1 1 1 1 1 1 1 1\n''') == '99999'\nassert solution('''7\n11\n1 1 1 1 1 1 1 1\n''') == '99999'\nassert solution('''8\n5\n1 1 1 1 1 1 1 1\n''') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1337\\n1 2 5 4 6 6 3 1 9\\n') == '1553'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1\\n') == '99999'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1\\n') == '33'"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('11111') == '99999'\nassert solution('11111') == '99999'\nassert solution('11111') == '99999'\nassert solution('11111') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[:-2]\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''\n2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''\n3\n11111\n9 8 7\n1 1 1 1 1 1 1 1\n''') == '111'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1337') == '1557'\nassert solution('11111') == '99999'\nassert solution('9 8 7 6 5 4 3 2 1') == '33'\nassert solution('987654321') == '987654321'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '''1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48'''\n\nassert solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '''1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48'''\n\nassert solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '''1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48'''\n\nassert solution('''3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '''1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48'''\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"1 1 1\"\nassert solution(\"1\\n1\\n1\") == \"1 1 1\"\nassert solution(\"1\\n2\\n3\") == \"1 1 1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1 1 1\\n1 1 1\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1\\n123 321\\n') == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nassert solution('2\\n1 2 3\\n123 321\\n') == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nassert solution('3\\n1 2 3\\n123 321\\n') == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nassert solution('4\\n1 2 3\\n123 321\\n') == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\nassert solution('5\\n1 2 3\\n123 321\\n') == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3''') == '1'\nassert solution('''123 321 456''') == '1 1 3'\nassert solution('''5 10 15''') == '4'\nassert solution('''15 18 21''') == '4'\nassert solution('''100 100 101''') == '4'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '114 228 456'\nassert solution('15 18 21') == '4'\nassert solution('100 100 101') == '4 8 16'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"5 10 15\") == \"114 228 456\"\nassert solution(\"15 18 21\") == \"4\"\nassert solution(\"100 100 101\") == \"4 8 16\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''4 2 1\n123312334\n1 1 2\n0 0 0\n1 1 2\n1 1 1\n1 1 2\n3 2 3\n2 2 1\n1 1 2\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"1 100000\") == \"0\"\nassert solution(\"10 15 17 26\") == \"3\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n100000') == '0'\nassert solution('1\\n1000000') == '0'\nassert solution('1\\n1000000000') == '0'\nassert solution('1\\n1000000000000000000000000') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 3 3 7\") == \"\"\nassert solution(\"1 3 3 7 \") == \"\"\nassert solution(\"1 3 3 7 \") == \"\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 3 7\\n') == '2'\nassert solution('2\\n1 100000\\n') == '0'\nassert solution('3\\n2 1 1\\n') == '2'\nassert solution('4\\n1 0 1 0\\n') == '0'\nassert solution('10\\n
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''3\n1 1000000\n5 1000000\n7 1000000''') == '0'\nassert solution('''4\n1 1000000\n3 1 3 7''') == '2'\nassert solution('''4\n1 3 3 7''') == '2'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf') == \"4\\n\"\nassert solution('2\\n1\\n100000\\n') == \"0\\n\"\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5\n1 3 3 7\n\"\"\"\n) == '2'\n\n\nassert solution(\n\"\"\"\n2\n1 100000\n\"\"\"\n) == '0'\n\n\nassert solution(\n\"\"\"\n2\n1 4\n\"\"\"\n) == '0'\n\n\nassert solution(\n\"\"\"\n3\n1 7 6\n\"\"\"\n) == '2'\n\n\nassert solution(\n\"\"\"\n4\n1 7 6 4\n\"\"\"\n) == '2'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 3 3') == '2'\nassert solution('2\\n1 100000') == '0'\nassert solution('2\\n1 100000\\n1 100000') == '0'\n\"\"\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''10\n1 1000000000''') == '0'\nassert solution('''100\n10000000000''') == '0'\nassert solution('''1000\n100000000000''') == '0'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 2\\n1 1') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('1 1\\n1 1\\n1 1') == '-1'\nassert solution('3 2\\n1 3 1\\n1 2 1') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('1 1\\n1 1\\n1 1') == '-1'\nassert solution('10 2\\n4 7 2\\n1 10 3\\n8 9 1') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('1 2 1') == '1 2 1'\nassert solution('1 1 1') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n1 5 1') == '2 2 2 1 1 0 3 3 4 4'\nassert solution('1 2 1\\n1 10 1') == '-1'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1') == '2 2 2 1 1 0 3 3 4 4'\nassert solution('5 2\\n1 3 1') == '1 2 0 3 0'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1') == '-1'"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1\\n1 3 1\\n1 5 1\\n') == '1 2 3 0 3'\nassert solution('3 2\\n1 3 1\\n1 2 1\\n') == '-1'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '2 2 2 1 1 0 4 3 4 4'\n\n\n\n'''\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('5 3') == '1 2 3 0 0'\nassert solution('4 4') == '0 0 0 0 0'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1') == '1 2 3 0 3'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1') == '-1'\nassert solution('5 2\\n1 3 1\\n1 5 1') == '1 2 3 0 3'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('4 7 2') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('3 2') == '-1'\nassert solution('10 9 1') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n5 2') == '1 2 3 0 3'\nassert solution('2\\n1 3 1') == '1 2 1 0'\nassert solution('2\\n1 3 1') == '-1'\nassert solution('2\\n1 3 1') == '-1'\nassert solution('2\\n1 3 1') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\n\n'''\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('120 51840') == '7'\nassert solution('-1 -1') == '-1'\nassert solution('42 -1') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"42 42\") == \"0\"\nassert solution(\"120 51840\") == \"7\"\nassert solution(\"48 72\") == \"-1\"\nassert solution(\"180 250\") == \"-1\"\nassert solution(\"20 40\") == \"-1\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'\nassert solution('4 5') == '4'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba', 4, 'ababababa') == 'ababababa'\nassert solution('cat', 2, 'catcat') == 'catcat'\n\n\n\n-----Template------"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nprint(solution(stdin))\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\naba''') == 'ababababa'\nassert solution('''3 2\ncat''') == 'catcat'\nassert solution('''3 3\nasdf\n''') == 'asdfasdfasdf'\nassert solution('''3 2\nabcdef\n''') == 'abcdef'\nassert solution('''3 2\ncctttt\n''') == 'cctttt'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aba', 4, 2) == 'ababababa'\nassert solution('cat', 3, 2) == 'catcat'\nassert solution('baa', 3, 2) == 'baa'\nassert solution('bcat', 2, 2) == 'bcat'\nassert solution('cat', 3, 4) == 'catcatcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'catcat'"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\naba\n''') == 'ababababa'\nassert solution('''\n3 2\ncat\n''') == 'catcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4\naba\n''') == 'ababababa'\nassert solution('''3 2\ncat\n''') == 'catcat'\nassert solution('''6 4\nbig\n''') == 'bigbigbigbigbigbigbigbig'\nassert solution('''5 3\nabcde\n''') == 'aabcde'\nassert solution('''5 4\nabcde\n''') == 'abcdabc'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\""
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('10') == '0'\nassert solution('1 1 1 1 1') == ''\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\nassert stdin == ''"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '0\\n0'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '0\\n0'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '0\\n0'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '0\\n0'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '0\\n0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4 8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5 8 3 2 4\") == \"0\"\nassert solution(\"2 1 2 4 3\") == \"0\"\n\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 5 1 2 2\\n') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2\\n') == '2\\n1 4'\n\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''5\n1 5 1 1 1\n''') == '1'\nassert solution('''5\n2 1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3\\n4 1 5'\nassert solution('''4\n8 3 5 2\n''') == '2\\n1 4'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n''') == '0'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n2 5 1 2 2\n\"\"\") == \"\"\"3\n4 1 5\"\"\"\n\nassert solution(\"\"\"4\n8 3 5 2\n\"\"\") == \"\"\"2\n1 4 \n\"\"\"\n\nassert solution(\"\"\"5\n2 1 2 4 3\n\"\"\") == \"\"\"0\n\"\"\"\n\nassert solution(\"\"\"7\n2 2 2 2 2 2\n\"\"\") == \"\"\"0\n\"\"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 0\nassert solution('abcabcd') == 4\nassert solution('abcabcd') == -1\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"asdf\") == \"4\"\nassert solution(\"aaaaa\") == \"-1\"\nassert solution(\"ajihiushda\") == \"233\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"asdf\") == \"4\"\nassert solution(\"asdfjkhljhfkjhkfjhkfkfjhkf\") == \"-1\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"aaaaa\") == \"15\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('asdf') == '4'\nassert solution('asd') == '3'\nassert solution('adf') == '2'\nassert solution('asf') == '1'\nassert solution('sdf') == '0'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('a') == '0'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('asdf') == '4'\nassert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == '4'\nassert solution('aa') == '3'\nassert solution('aaaaa') == '15'\nassert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''5 5 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''3 3 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''2 2 1\n1 2\n1 3\n2 3\n''') == 'YES'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5 1') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3') == 'YES\\n1 2\\n1 3\\n1 4\\n'\nassert solution('4 5 1') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 4 3') == 'NO\\n'\nassert solution('1 2\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 4\\n2 3\\n'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO\\n'\n\"\"\"\n\n\"\"\"\nPROBLEM STATEMENT:\n\nYou are given an undirected unweighted graph with $n$ vertices and $m$ edges. You are also given a list of $n$ integers, $a_1,a_2,\\ldots,a_n$ (0\u2264ai\u2264n\u22121) representing the indices of vertices you want to be connected, in some order.\n\nIt is guaranteed that the graph is connected and the elements of $a_i$ are distinct for each $i$.\n\nThe graph is undirected, the vertices are labeled from $1$ to $n$, and each edge is represented by a pair of vertices.\n\nDetermine whether it is possible to add edges to the graph to produce a tree with the specified degree sequence.\n\nInput\n\nThe first line contains two integers, $n$ and $m$ (1\u2264m\u2264min(10^5,n(n\u22121)/2)) \u2014 the number of vertices and edges. The next line contains $m$ integers, $a_1,a_2,\\ldots,a_m$ (1\u2264ai\u2264n\u22121), where $a_i$ is the index of a vertex you want to connect.\n\nOutput\n\nIf it is possible to add edges to the graph to produce a tree with the specified degree sequence, print \"YES\" (without quotes). Otherwise, print \"NO\".\n\nExample\n\nInput:\n\n4 5\n1 2\n1 3\n1 4\n2 3\n3 4\n\nOutput:\n\nYES\n\nExample\n\nInput:\n\n5 4\n2 3\n1 2\n1 3\n1 4\n3 4\n\nOutput:\n\nNO\n\nExample\n\nInput:\n\n6 4\n4 2\n1 2\n1 3\n1 4\n1 5\n2 3\n3 4\n3 5\n\nOutput:\n\nYES\n\nExample\n\nInput:\n\n5 4\n3 1\n1 2\n1 3\n1 4\n2 3\n3 4\n\nOutput:\n\nNO\n\nExample\n\nInput:\n\n5 4\n5 5\n2 3\n1 2\n1 3\n1 4\n2 3\n3 4\n3 5\n\nOutput:\n\nYES\n\nExample\n\nInput:\n\n6 4\n1 2\n1 3\n1 4\n1 5\n2 3\n3 4\n3 5\n\nOutput:\n\nYES\n\n\"\"\"\n\nfrom collections import defaultdict\n\nn, m = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\nc = defaultdict(int)\n\nfor i in range(m):\n    a[i] -= 1\n    c[a[i]] += 1\n\nprint(c)\n\nv = 0\n\nfor k, v in c.items():\n    if v == 0:\n        print(\"NO\")\n        break\n\nelse:\n    print(\"YES\")\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5 1''') == 'YES'\nassert solution('''4 5 3''') == 'NO'\nassert solution('''5 4 3''') == 'YES'\nassert solution('''1 2''') == 'NO'\nassert solution('''1 4''') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4''') == 'NO'\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4\n2 2\n4 2''') == 'NO'\n'''\n'''"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'YES'\n\nassert solution(\n'''\n3 2 1\n1 2\n1 3\n2 3\n''') == 'YES'\n\nassert solution(\n'''\n4 3 1\n1 2\n1 3\n2 3\n''') == 'NO'\n\nassert solution(\n'''\n7 7 1\n1 2\n1 3\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == 'YES'\n\nassert solution(\n'''\n10 10 1\n2 7\n2 8\n1 9\n3 10\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n''') == 'YES'"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5 1') == 'NO'\nassert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'YES'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'YES'\nassert solution('4 5 1\\n2 3\\n3 4\\n') == 'NO'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:00\\n11:00') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'\nassert solution('01:02\\n03:02') == '02:02'\nassert solution('10:10\\n11:12') == '10:11'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10:00\n11:00''') == '10:30'\nassert solution('''11:10\n11:12''') == '11:11'\nassert solution('''01:02\n03:02''') == '02:02'\nassert solution('''10:00\n11:00\n01:00\n05:59''') == '10:30'\nassert solution('''11:10\n11:12\n01:02\n05:59''') == '11:11'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '01:02'\nassert solution(input()) == '02:02'\nassert solution(input()) == '12:02'\nassert solution(input()) == '02:02'\nassert solution(input()) == '12:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == expected\nprint('Test success!')\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '10:30'\nassert solution('01:00') == '02:00'\nassert solution('03:00') == '02:00'\nassert solution('03:10') == '02:11'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == expected\nprint('Passed')\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '02:02'\nassert solution(input()) == '11:11'\nassert solution(input()) == '02:02'\nassert solution(input()) == '11:11'\nassert solution(input()) == '04:09'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"\nassert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '03:02'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nassert solution(69) == 10\nprint(\"All set?\")\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(42) == 6\nassert solution(27) == 5\nassert solution(2) == 1\nassert solution(4) == 2\nassert solution(5) == 5\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\nassert solution('wap3') == -1\n\"\"\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '2'\nassert solution('''27''') == '5'\nassert solution('''42''') == '6'\nassert solution('''7''') == '7'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123\") == \"6\"\nassert solution(\"456\") == \"7\"\nassert solution(\"1234\") == \"15\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 1\nassert solution(7) == 1\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\n'''"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n1 3\n2 6\n0 4\n3 3\n'''\n    ) == '1'\n\nassert solution(\n'''5\n2 6\n1 3\n0 4\n1 20\n0 4\n'''\n    ) == '2'\n\nassert solution(\n'''3\n4 5\n1 2\n9 20\n'''\n    ) == '0'\n\nassert solution(\n'''2\n3 10\n1 5\n'''\n    ) == '7'\n\nassert solution(\n'''10\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n5 6\n7 8\n9 10\n1 2\n3 4\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\n\n-----Answer-----\n\nWe can do a greedy algorithm. We need to find the left endpoint of the segments with the maximum length, and then the right endpoint.\n\nWe start from the left endpoint of the maximal segment. Then we move forward to find the right endpoint of the next maximal segment, and repeat the process until we reach the end of the sequence.\n\nIf at any point we find two segments with the same maximum length but different left and right endpoints, we can get an interval between them. If we remove the segment of the same maximum length we get an interval with a length of zero. We cannot remove the segment with the same maximum length from the remaining segments.\n\nWe keep removing the segments with the same maximum length until we reach the end of the sequence. The length of the resulting interval is the maximal length.\n\n\"\"\""
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '4\\n'\n    '1 3\\n'\n    '2 6\\n'\n    '0 4\\n'\n    '3 3\\n'\n) == '1'\n\nassert solution(\n    '5\\n'\n    '2 6\\n'\n    '1 3\\n'\n    '0 4\\n'\n    '1 20\\n'\n    '0 4\\n'\n) == '2'\n\nassert solution(\n    '3\\n'\n    '4 5\\n'\n    '1 2\\n'\n    '9 20\\n'\n) == '0'\n\nassert solution(\n    '2\\n'\n    '3 10\\n'\n    '1 5\\n'\n) == '7'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3\n1 3\n2 6\n0 4\n3 3\n'''\n) == '1'\n\n\nassert solution(\n'''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n'''\n) == '2'\n\n\nassert solution(\n'''\n2\n3 10\n1 5\n'''\n) == '0'\n\n\nassert solution(\n'''\n3\n4 5\n1 2\n9 20\n'''\n) == '7'\n\n\nassert solution(\n'''\n1\n9 9\n1 1\n'''\n) == '0'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '2'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '7'\n\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''\n2\n3 10\n1 5\n''') == '7'\n\n\n-----Solution 1-----\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_txt) == output_txt\n\"\"\""
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1\n3\n2 6\n0 4\n3 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"2\n1 3\n2 6\n0 4\n3 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3\n4 5\n1 2\n9 20\n\"\"\") == \"0\"\n\nassert solution(\"\"\"3\n4 5\n1 2\n9 20\n1 3\n0 4\n1 20\n0 4\n\"\"\") == \"7\"\n\nassert solution(\"\"\"3\n4 5\n1 2\n9 20\n1 3\n0 4\n1 20\n0 4\n1 3\n0 4\n1 20\n0 4\n\"\"\") == \"2\""
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '3'\nassert solution('''4''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '0'\nassert solution('''5''') == '2'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 1\\n2 1\") == \"YES\"\nassert solution(\"2\\n3 1\\n3 1\") == \"NO\"\nassert solution(\"2\\n3 1\\n3 1\") == \"YES\"\nassert solution(\"3\\n3 1 3\\n3 1 3\") == \"YES\"\nassert solution(\"3\\n1 1 3\\n1 1 3\") == \"NO\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2 1 1 2\\n3 4 5 3') == 'YES'\nassert solution('4\\n10 10 10 10\\n10 10 10 10') == 'NO'\nassert solution('4\\n10 10 10 10\\n10 10 10 10') == 'NO'\nassert solution('4\\n10 10 10 10\\n1 1 1 1 1\\n1 1 1 1 1') == 'YES'\nassert solution('4\\n10 10 10 10\\n10 10 10 10') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''2 1 1 2 5''') == 'YES'\nassert solution('''3''') == 'NO'\nassert solution('''4 5 3''') == 'NO'\nassert solution('''10 10''') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 2 5') == \"YES\"\nassert solution('3\\n4 5 3') == \"NO\"\nassert solution('2\\n10 10') == \"YES\"\nassert solution('2\\n10 10\\n2 1 1 2 5') == \"NO\"\nassert solution('2\\n10 10\\n2 1 1 2 5\\n1 1 1 1 1') == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n2 1 1 2 5\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"3\n4 5 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"2\n10 10\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n2\n1\n\"\"\") == \"NO\""
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1\\n') == 'YES'\nassert solution('2\\n1 1\\n2 1\\n') == 'YES'\nassert solution('2\\n1 1\\n2 3\\n') == 'YES'\nassert solution('2\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"1\\n1\\n\") == \"YES\"\nassert solution(\"10\\n10\\n\") == \"YES\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aaa\") == \"0\"\nassert solution(\"aaab\") == \"2\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == '1'\nassert solution('aa') == '2'\nassert solution('aaa') == '2'\nassert solution('aaab') == '2'\nassert solution('aabaa') == '4'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('asdf', 5, 5) == 4\nassert solution('asdf', 5, 6) == -1\nassert solution('aaaaa', 5, 7) == 15\nassert solution('aaaaa', 5, 9) == -1\nassert solution('aaaaa', 5, 10) == -1\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('asdfasdf') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5\nasdf\n''') == '4'\n\nassert solution('''5 6\naaaaa\n''') == '15'\n\nassert solution('''5 7\naaaaa\n''') == '-1'\n\nassert solution('''10 100\najihiushda\n''') == '233'\n'''"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == -1\nassert solution('asdf') == -1"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5\nasdf\n''') == '4'\nassert solution('''5 6\naaaaa\n''') == '15'\nassert solution('''5 7\naaaaa\n''') == '-1'\nassert solution('''10 100\najihiushda\n''') == '233'\nprint(solution(input()))\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('10 10 1') == '2'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\nassert solution('1 100 1') == '3'\nassert solution('10 100 1') == '7'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"1 100 2\") == \"5\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1 1''') == '4'\nassert solution('''3 2 2''') == '7'\nassert solution('''1 100 1''') == '3'\nassert solution('''30 20 10''') == '39'\nassert solution('''1 10 1''') == '1'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\nassert solution('100 1 1') == '3'\nassert solution('30 22 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('30 30 30') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\nassert solution('5 2 1') == '6'\nassert solution('11 6 6') == '10'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"\\n1\\n1\\n1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"YES\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == open(\"output.txt\").read()\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == \"YES\"\n'''\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n\"\"\""
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"2 2\") == \"NO\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 1\\n1 1\\n2 2\\n2 2') == 'YES'\nassert solution('1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == expected\n\n\"\"\""
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\nfrom sys import stdin,stdout\nn = int(stdin.readline().strip())\n\nsumA, sumB = 0, 0\na = 0\nb = 0\na = sum(range(1, n+1))\nfor i in range(n):\n    a -= i + 1\n    if a < b:\n        b = a\n    else:\n        b += i + 1\nstdout.write(str(b - a))"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n') == '0'\nassert solution('5\\n') == '1'\nassert solution('6\\n') == '1'"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '0'\nassert solution('1 2 4 5') == '1'\nassert solution('1 4 5') == '1'\nassert solution('2 3 4 5 6') == '1'\nassert solution('2 3 4 5 1') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6') == '1'\nassert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('1') == '0'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1,2,3,4,5,6\") == \"\"\nassert solution(\"1,2,3,4,5,6,7,8\") == \"\"\nassert solution(\"1,2,3,4,5,6,7,8,9,10\") == \"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n\"\"\"\n\nn = int(input())\n\nA = set()\nB = set()\ns = 0\nfor i in range(1, n+1):\n    s += i\n    if s % 2 == 0:\n        A.add(i)\n    else:\n        B.add(i)\n\nprint(abs(s-sum(A)-sum(B)))"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n\n\n-----My Submission-----\n\n\"\"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('100') == '0'\nassert solution('101') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6') == '0'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('((()))())') == '5'\nassert solution('(()()))()') == '4'\nassert solution('((()))()') == '4'\nassert solution('(()(()))()') == '4'\nassert solution('()((()))()') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('()') == '0'\nassert solution('()()') == '4'\nassert solution('(()())') == '8'\nassert solution('(()((()' ) == '8'\nassert solution('(()' ) == '0'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('((()))()') == '4'\nassert solution('(((()))())()') == '5'\nassert solution('()((()))()') == '1'\nassert solution('((()))())()') == '5'\nassert solution('((()()))()') == '2'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"()()\") == \"0\"\nassert solution(\"((()))())\") == \"5\"\nassert solution(\"((()))()\") == \"4\"\nassert solution(\"((()))\") == \"4\"\nassert solution(\"((()))\") == \"4\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('()') == '1'\nassert solution('(()') == '2'\nassert solution('()()') == '4'\nassert solution('(()())') == '12'\nassert solution('(()))()') == '3'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5\n()))()\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n3\n(((\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n2\n(((\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n2\n(((\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n2\n(((\n\"\"\") == \"0\""
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n'''"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''(()())((()()))()''') == '1'\nassert solution('''())(())''') == '0'\nassert solution('''()(()())()''') == '0'\nassert solution('''()()()''') == '0'\nassert solution('''(((())))()''') == '3'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\"\"\""
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n\n\n\"\"\""
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"102102\") == \"2\"\nassert solution(\"101001\") == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"123456\") == \"-1\"\nassert solution(\"547890123456\") == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"1\"\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 1 2 3'\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2 1'\nassert solution('abacbecfd') == '2'\nassert solution('abcde') == '1 1 1 1 1 1'\nassert solution('aaabbbcccddd') == '1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('abcdebc') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('aaabbbbc') == '1 1 1 1 1 1 1 1 1 1 1 1 1'\nassert solution('aaabbbbccc') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'\nassert solution('abcdedc') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abacbecfd') == '2\\n1 1 2 1 2 1 2 1 2'\nassert solution('aaabbcbb') == '2\\n1 2 1 2 1 2 1 2 1 2'\nassert solution('abcdedc') == '3\\n1 1 1 1 1 1 2 3'\nassert solution('abcde') == '1\\n1 1 1 1 1'\nassert solution('asdfghjkl') == '4\\n1 1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 1 1 1 1'\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2 1'\nassert solution('abacbecfd') == '2'\nassert solution('ac') == '1 1 1 1'\nassert solution('aaaaa') == '1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('aaabbcbb') == '2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabcde') == '1 1 1 1 1'\nassert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '1 1 1 1 1'\nassert solution('abcde') == '1 1 1 1 1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == '1'\nassert solution('ab') == '2'\nassert solution('abc') == '1'\nassert solution('abcde') == '2'\nassert solution('bbacdee') == '3'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('abac') == ''\nassert solution('abcdef') == '1'\nassert solution('aabbcc') == '1'\nassert solution('aaabbcc') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('abc') == '1'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin,stdout\nfrom functools import reduce\n\nn = int(stdin.readline())\ninputs = [stdin.readline().strip() for _ in range(n)]\ninputs = set(inputs)"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == 'NO'\nassert solution('''a''') == 'YES'\nassert solution('''aba''') == 'YES'\nassert solution('''abacaba''') == 'YES'\nassert solution('''ba''') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('abab') == 'NO'\nassert solution('codeforces') == 'NO'\nassert solution('zxcvbnm') == 'YES'\nassert solution('qawfuhwdrjh') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('ba') == 'YES'\nassert solution('abab') == 'NO'\nassert solution('qwerty') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'NO'\nassert solution('aba') == 'NO'\nassert solution('abacaba') == 'YES'\nassert solution('ba') == 'NO'\nassert solution('abab') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n5\nabacaba\nba\naba\nabab\n\n''') == 'YES\\n' \\\n    'abacaba\\n' \\\n    'ba\\n' \\\n    'aba\\n' \\\n    'abab\\n'\n\nassert solution('''\\\n2\nabc\nabc\n\n''') == 'NO\\n'\n\nassert solution('''\\\n3\nabc\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"NO\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\n'''\n5\na\naba\nabacaba\nba\naba\n\n'''\n)) == 'YES\\n' \\\n       'a\\nb\\na\\na\\na\\n'\n\nassert solution(input(\n'''\n3\nqwerty\nqwerty\nqwerty\n\n'''\n)) == 'NO\\n' \\\n       'qwerty\\nqwerty\\nqwerty\\n'\n\nassert solution(input(\n'''\n5\na\nabacaba\nba\naba\nabab\n\n'''\n)) == 'YES\\n' \\\n       'a\\na\\nabab\\nabacaba\\naba\\n'\n\nassert solution(input(\n'''\n1\na\n\n'''\n)) == 'YES\\na\\n'"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout\nn = int(stdin.readline())\nstrings = [stdin.readline().strip() for _ in range(n)]\nstrings.sort(key=len)\nfor s in strings:\n    stdout.write(s+'\\n')\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") is None\nassert solution(\"4\") == \"NO\"\nassert solution(\"4\\na\") == \"YES\"\nassert solution(\"4\\na\\na\") == \"YES\"\nassert solution(\"4\\na\\na\\na\") == \"YES\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5'\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 4''') == '5'\nassert solution('''5 2''') == '0'\nassert solution('''5 100''') == '5'\nassert solution('''12 34 55 43 21''') == '5'\nassert solution('''5 10''') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\n\n\n\n\"\"\""
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\nassert solution('1 2 3 4 5 6 7 8') == '7'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1'\nassert solution('2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('7 4\\n2 1 3 1 2 3 1') == '5'\nassert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('3 1\\n1 1') == '1'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n'''\n\n'''\nimport sys\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '14'\nassert solution('506 2708') == '3218'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 9') == '14'\nassert solution('6 8') == '14'\nassert solution('506 2708') == '3218'\n\n\"\"\"\nfrom math import ceil\n\na,b = map(int, stdin.split())\n\nt = (a+b) // 2\nr = (a+b) % 2\n\ns = (t - (a - (r//2))) * (t - (b - (r//2)))"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 4') == '3'\nassert solution('4 5') == '4'\nassert solution('5 6') == '4'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n\") == \"12\"\nassert solution(\"3 9\\n\") == \"14\"\nassert solution(\"3 6\\n\") == \"12\"\nassert solution(\"506 2708\\n\") == \"3218\"\n\"\"\""
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcde') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'NO'\nassert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'NO'\nassert solution('abacbe') == 'NO'\nassert solution('aab') == 'YES'\nassert solution('abcde') == 'NO'\nassert solution('abcdebc') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1\n1\n2\n2\n3\n3\n3\n4\n4\n4\n5\n5\n5\n6\n6\n7\n7\n7\n8\n8\n8\n9\n9\n9\n10\n10\n10\n11\n11\n11\n12\n12\n12\n13\n13\n13\n14\n14\n15\n15\n15\n16\n16\n16\n17\n17\n17\n18\n18\n18\n19\n19\n19\n20\n20\n20\n21\n21\n21\n22\n22\n22\n23\n23\n23\n24\n24\n25\n25\n26\n26\n26\n27\n27\n27\n28\n28\n28\n29\n29\n29\n30\n30\n30\n31\n31\n31\n32\n32\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n37\n38\n38\n38\n39\n39\n39\n40\n40\n41\n41\n41\n41\n42\n42\n42\n43\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n47\n48\n48\n49\n49\n49\n50\n50\n50\n51\n51\n52\n52\n53\n53\n54\n54\n55\n55\n56\n56\n56\n57\n57\n57\n58\n58\n58\n59\n59\n59\n60\n60\n61\n61\n62\n62\n63\n63\n64\n64\n65\n65\n66\n66\n66\n67\n67\n68\n68\n68\n69\n69\n69\n70\n70\n70\n71\n71\n72\n72\n73\n73\n74\n74\n75\n75\n76\n76\n77\n77\n78\n78\n78\n79\n79\n79\n80\n80\n81\n81\n81\n82\n82\n83\n83\n83\n84\n84\n84\n85\n85\n86\n86\n86\n87\n87\n88\n88\n89\n89\n89\n90\n90\n90\n91\n91\n91\n92\n92\n93\n93\n94\n94\n94\n95\n95\n95\n96\n96\n96\n97\n97\n98\n98\n99\n99\n99\n100\n100\n100\n101\n101\n102\n102\n103\n103\n104\n104\n105\n105\n106\n106\n107\n107\n108\n108\n109\n109\n110\n110\n111\n111\n112\n112\n113\n113\n114\n114\n115\n115\n116\n116\n117\n117\n119\n119\n120\n120\n121\n121\n122\n122\n123\n123\n124\n124\n125\n125\n126\n126\n127\n127\n128\n128\n129\n129\n130\n130\n131\n131\n132\n132\n133\n133\n134\n134\n135\n135\n136\n136\n137\n137\n138\n138\n139\n139\n140\n140\n141\n141\n142\n142\n143\n143\n144\n144\n145\n145\n146\n146\n147\n147\n148\n148\n149\n149\n150\n150\n151\n151\n152\n152\n153\n153\n154\n154\n155\n155\n156\n156\n157\n157\n158\n158\n159\n159\n160\n160\n161\n161\n162\n162\n163\n163\n164\n164\n165\n165\n166\n166\n167\n167\n168\n168\n169\n169\n170\n170\n171\n171\n172\n172\n173\n173\n174\n174\n175\n175\n176\n176\n177\n177\n178\n178\n179\n179\n180\n180\n181\n181\n182\n182\n183\n183\n184\n184\n185\n185\n186\n186\n187\n187\n188\n188\n189\n189\n190\n190\n191\n191\n192\n192\n193\n193\n194\n194\n195\n195\n196\n196\n197\n197\n198\n198\n199\n199\n200\n200\n200\n201\n201\n202\n202\n203\n203\n204\n204\n205\n205\n206\n206\n207\n207\n208\n208\n209\n209\n210\n210\n211\n211\n212\n212\n213\n213\n214\n214\n215\n215\n216\n216\n217\n217\n218\n218\n219\n219\n220\n220\n221\n221\n222\n222\n223\n223\n224\n224\n225\n225\n226\n226\n227\n227\n228\n228\n229\n229\n230\n230\n231\n231\n232\n232\n233\n233\n234\n234\n235\n235\n236\n236\n237\n237\n238\n238\n239\n239\n240\n240\n241\n241\n242\n242\n243\n243\n244\n244\n245\n245\n246\n246\n247\n247\n248\n248\n249\n249\n250\n250\n251\n251\n252\n252\n253\n253\n254\n254\n255\n255\n256\n256\n257\n257\n258\n258\n259\n259\n260\n260\n261\n261\n262\n262\n263\n263\n264\n264\n265\n265\n266\n266\n267\n267\n268\n268\n269\n269\n270\n270\n271\n271\n272\n272\n273\n273\n274\n274\n275\n275\n276\n276\n277\n277\n278\n278\n279\n279\n280\n280\n281\n281\n282\n282\n283\n283\n284\n284\n285\n285\n286\n286\n287\n287\n288\n288\n289\n289\n290\n290\n291\n291\n292\n292\n293\n293\n294\n294\n295\n295\n296\n296\n297\n297\n298\n298\n299\n299\n300\n300\n301\n301\n302\n302\n303\n303\n304\n304\n305\n305\n306\n306\n307\n307\n308\n308\n309\n309\n310\n310\n311\n311\n312\n312\n313\n313\n314\n314\n315\n315\n316\n316\n317\n317\n318\n318\n319\n319\n320\n320\n321\n321\n322\n322\n323\n323\n324\n324\n325\n325\n326\n326\n327\n327\n328\n328\n329\n329\n330\n330\n331\n331\n332\n332\n333\n333\n334\n334\n335\n335\n336\n336\n337\n337\n338\n338\n339\n339\n340\n340\n341\n341\n342\n342\n343\n343\n344\n344\n345\n345\n346\n346\n347\n347\n348\n348\n349\n349\n350\n350\n351\n351\n352\n352\n353\n353\n354\n354\n355\n355\n356\n356\n357\n357\n358\n358\n359\n359\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aaabbcbb') == 'YES\\n01011011'\nassert solution('abacbecfd') == 'NO'\nassert solution('aaabbcbb') == 'YES\\n001010101'\nassert solution('abcdedc') == 'YES\\n00000'\nassert solution('abcde') == 'YES\\n01011011'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abc') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcaa') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcd') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n9\nabacbecfd\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n8\naaabbcbb\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n7\nabcdedc\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n5\nabcde\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n3\naa\n\"\"\"\n) == \"NO\""
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abacbecfd') == \"YES\"\nassert solution('aaabbcbb') == \"YES\"\nassert solution('abcdedc') == \"NO\"\nassert solution('abcde') == \"YES\"\nassert solution('a') == \"YES\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '25'\n\n\"\"\"\n\nA, B = map(int, stdin.split())"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()\n\n-----\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '25'\nassert solution('6 1') == '-1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 2') == '-1'\nassert solution('3 1') == '0'\nassert solution('3 2') == '1'\nassert solution('10 1') == '5'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 2'''\n) == '25'\n\nassert solution(\n'''100 200'''\n) == '-1'\n\nassert solution(\n'''3 5'''\n) == '5'\n\nassert solution(\n'''100 1000'''\n) == '1000'\n\nassert solution(\n'''1000 1000000'''\n) == '-1'"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '25'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == '25'\nassert solution('''1 1''') == '-1'\nassert solution('''2 2''') == '25'\nassert solution('''3 3''') == '-1'\nassert solution('''0 0''') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == 25\nassert solution('1 2') == -1\nassert solution('0 2') == -1\nassert solution('2 1') == -1\nassert solution('-2 -1') == -1\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '25'"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''26 6''') == 'YES\\n1 2 4 5 6 8'\nassert solution('''8 3''') == 'NO\\n'\nassert solution('''1 1''') == 'YES\\n1'\nassert solution('''9 4''') == 'NO\\n'\nassert solution('''7 2''') == 'NO\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"26 6\\n\") == \"YES\\n1 2 4 5 6 8\\n\"\nassert solution(\"8 3\\n\") == \"NO\\n\"\nassert solution(\"1 1\\n\") == \"YES\\n1\\n\"\nassert solution(\"9 4\\n\") == \"NO\\n\"\nprint(\"Tests passed successfully.\")\n\n\"\"\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''26 6\n''') == \"YES\\n1 2 4 5 6 8\\n\"\nassert solution('''8 3\n''') == \"NO\\n\"\nassert solution('''1 1\n''') == \"YES\\n1\\n\"\nassert solution('''9 4\n''') == \"NO\\n\"\nassert solution('''8 8\n''') == \"NO\\n\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\\n\"\nassert solution(\"8 3\") == \"NO\\n\"\nassert solution(\"1 1\") == \"YES\\n1\\n\"\nassert solution(\"9 4\") == \"NO\\n\"\nassert solution(\"10 2\") == \"YES\\n1\\n\"\n\nprint(solution(stdin.readline().strip()))\n-----"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"26 6\\n\") == \"NO\\n\"\nassert solution(\"8 3\\n\") == \"YES\\n1 2 4 5 6 8\\n\"\nassert solution(\"1 1\\n\") == \"YES\\n1\\n\"\nassert solution(\"9 4\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == 'YES\\n9'\nassert solution('1 1') == 'NO\\n'\nassert solution('1') == 'NO\\n'\nassert solution('1 2 3 4 5 6 7 8 9 10') == 'NO\\n'\nassert solution('1 1') == 'NO\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4\\n4 6\\n10 -2\\n8 -1\\n') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3'\nassert solution('5 10\\n450 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 6\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''5 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''6 7\n6 7\n6 7\n6 7\n6 7\n6 7\n5 -7\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''5 2\n300 -300\n1 299\n1 123\n40 -45\n''') == '3'"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123') == '3'\nassert solution('3 2\\n40 -45\\n34 -15\\n10 34\\n1 27\\n300 -300') == '5'\nassert solution('3 2\\n40 -45\\n34 -15\\n10 34\\n1 27\\n300 -300\\n1 299') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"5\"\n\n\"\"\""
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n100 -200\n10 -1''') == '3'\nassert solution('''5 2\n300 -200\n1 299\n1 123\n40 -45\n''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n40 -45\n''') == '3'\nassert solution('''3 2\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n''') == '2'\nassert solution('''3 2\n-1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n''') == '2'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\n\n\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 6\\n4 6\\n10 -2\\n8 -1') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1''') == 'YES'\nassert solution('''4\n1 1 1 1 1 3 3 3 3 3''') == 'YES'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1''') == 'NO'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1''') == 'NO'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1''') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\nassert solution(\"4\\n1 1 1 1 1 3 3 3 3 3\\n\") == \"NO\\n\"\nassert solution(\"1\\n10\\n\") == \"YES\\n10\\n\"\nassert solution(\"1\\n1\\n\") == \"YES\\n1\\n\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\\n\"\n\n\n\n-----Best Practice-----"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\nfrom typing import Iterator, Tuple\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"YES\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz123456789\") == \"NO\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz12345678910\") == \"NO\"\nassert solution(\"0123456789\") == \"YES\"\nassert solution(\"012345678910\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1''') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('''3\n1 1 1 1 1 3 3 3 3 3\n''') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'\nassert solution('''4\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == 'YES\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1'\nassert solution('''4\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == 'YES\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"YES\"\n\"\"\""
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"3 10\") == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2') == 'YES'\nassert solution('1 2\\n1 1\\n1 1\\n1 1') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''100 100 100''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\\n2\\n\") == \"NO\"\nassert solution(\"10 1 5\\n2\\n\") == \"NO\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 3 2\") == \"YES\"\nassert solution(\"10 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nassert solution(\"10 1 7\") == \"YES\"\nassert solution(\"7 1 7\") == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nassert solution(\"10 1 4\") == \"NO\"\nassert solution(\"10 1 4\") == \"YES\"\nassert solution(\"9 1 4\") == \"NO\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 3 2\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 3 2''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''10 1 11''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''10 1 5''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('''10 1 1''') == 'NO'\nassert solution('''10 1 2''') == 'NO'\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"\", \"\") == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"b\"\n\"\"\""
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"bbaba\nbb\"\"\"\n) == 3\nassert solution(\n\"\"\"baaba\nab\"\"\"\n) == 2\nassert solution(\n\"\"\"abcde\nabcde\"\"\"\n) == 0\nassert solution(\n\"\"\"asdfasdf\nfasd\"\"\"\n) == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''bbaba\nbb'''\n) == '3'\n\nassert solution(\n'''baaba\nab'''\n) == '2'\n\nassert solution(\n'''abcde\nabcde'''\n) == '0'\n\nassert solution(\n'''asdfasdf\nfasd'''\n) == '3'\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''bbaba\nbb\n\n''') == '3'\n\nassert solution('''baaba\nab\n\n''') == '2'\n\nassert solution('''abcde\nabcde\n\n''') == '0'\n\nassert solution('''asdfasdf\nfasd\n\n''') == '3'\n\nassert solution('''bbabababab\nbb\n\n''') == '4'"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bbaba', 'bb', 'asdfasdf', 'fasd') == 3\nassert solution('baaba', 'ab', 'asdfasdf', 'fasd') == 2\nassert solution('abcde', 'abcde', 'asdfasdf', 'fasd') == 0\nassert solution('asdfasdf', 'fasd', 'asdfasdf', 'fasd') == 3\nassert solution('bbaba', 'bb', 'bbaba', 'bb') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"dsffgggdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfgdfg"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('a') == 0\nassert solution('bb') == 1\nassert solution('bba') == 2\nassert solution('aaba') == 2\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('5.0') == '1 1'\nassert solution('7.9999') == '1 1'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n\n\"\"\""
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n\n\"\"\""
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\""
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n'''"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('8.52') == '3 9'\nassert solution('9.1') == '1 1'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1.200000''') == '3 2'\nassert solution('''2.572479''') == '10 3'\nassert solution('''4.024922''') == '9 9'\n'''\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"7 2 3\") == \"NO\"\n\n-----"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n6 10\\n8 2\\n4 3\\n5 6\\n7 8\\n\"\nassert solution(\"8 1 2\") == \"YES\\n1 2\\n\"\n\n\"\"\""
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\") == \"NO\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n6 10\\n8 2\\n4 3\\n5 6\\n\"\nassert solution(\"8 4 3\") == \"NO\\n\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''3 1 3''') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n7 7\\n\""
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''4 5 1''') == 'NO'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"-1 -1 1\") == \"-1\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\na,b,x = map(int, stdin.split())\n\ns = ['0']*a\n\nfor i in range(b):\n    s[i] = '1'\n\ns = ''.join(s)"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('10 5 4') == '11111111111101'\nassert solution('99 99 9') == '1100001111'\n\n\n\"\"\"\n\na,b,x = map(int,stdin.split())\n\nans = ['0'] * (a+b)\n\nfor i in range(a):\n    ans[i] = '0'\n\nfor i in range(a,a+b):\n    ans[i] = '1'\n\nfor i in range(a+b,a+b+x):\n    ans[i] = '0'\n\nprint(''.join(ans))\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"010100\"\nprint(solution(\"5 3 6\"))"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n'''\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\nab\nbc\n''') == 'YES'\nassert solution('''3\naa\nbc\n''') == 'YES'\nassert solution('''1\ncb\nac\n''') == 'YES'\nassert solution('''1\nb\nc\n''') == 'NO'\nassert solution('''1\na\nb\n''') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('c') == 'c'\nassert solution('ab') == 'ab'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\nacbbac'\nassert solution('''3\naa\nbc\n\n''') == 'YES\\ncacbacbab'\nassert solution('''1\ncb\nac''') == 'YES\\ncbacbacbac'\nassert solution('''4\naa\nbc\n''') == 'NO'\nassert solution('''7\nbcc\n''') == 'YES\\nbbccbccbac'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == 'YES'\nassert solution('''3''') == 'NO'\nassert solution('''3\na''') == 'YES'\nassert solution('''3\nb''') == 'NO'\nassert solution('''3\nc''') == 'YES'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES\\nacbacbab'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES\\nabc'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES\\ndef'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"ab\nbc\"\"\") == \"\"\"YES\nacbbac\"\"\", \"First\"\nassert solution(\"\"\"ab\nbc\"\"\") == \"\"\"NO\"\"\", \"Second\"\nassert solution(\"\"\"ca\nbb\ncb\"\"\") == \"\"\"YES\ncacbacbab\"\"\", \"Third\"\nassert solution(\"\"\"aa\nba\nca\"\"\") == \"\"\"NO\"\"\", \"Fourth\"\nassert solution(\"\"\"bb\ncc\nac\"\"\") == \"\"\"NO\"\"\", \"Fifth\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\nacbbac'\nassert solution('''2\naa\nbc''') == 'NO'\nassert solution('''3\nab\nbc\n\n''') == 'YES\\ncacbacbab'\nassert solution('''3\nbb\nac\n\n''') == 'NO'\nassert solution('''4\nab\nbc\n\n''') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ab\") == \"NO\"\nassert solution(\"ca\") == \"YES\"\nassert solution(\"bb\") == \"YES\"\nassert solution(\"abca\") == \"YES\"\nassert solution(\"abc\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\nacbbac'\nassert solution('''2\naa\nbc''') == 'YES\\ncacbacbab'\nassert solution('''1\ncb\nac''') == 'YES\\ncb'\nassert solution('''3\nab\nbc\n''') == 'YES\\nacbbac'\nassert solution('''1\ncb\nac''') == 'YES\\ncb'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''7\n2 2 2 2 2 2 2\n''') == '2 2 2 2 2 2 2'\nassert solution('''2\n1 1\n''') == '1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''15\n-7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -7 -"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2'\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5'\nassert solution('4\\n-1 2 2\\n') == '-1'\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5'\nassert solution('4\\n2 2 2\\n') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n-2 1') == '3 1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('4\\n-1 2 2') == '-1'\nassert solution('4\\n-1 2 2\\n-1 2 2') == '-1'\nassert solution('4\\n-1 2 2\\n-1 2 2\\n-1 2 2') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n-2 1''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('''11\n1 1 1 1 1 1 1 1 1 1 1''') == '1 2 3 4 5 6 7 8 9 10 11'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2\\n'\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n-1 2 2\\n') == '-1\\n'\nassert solution('2\\n1 1\\n') == '1\\n'\nassert solution('4\\n1 1 1 1\\n') == '1 2 3 4\\n'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1') == '3 1 2'\nassert solution('4\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('5\\n1 1 1 1 1') == '1 2 3 4 5'\nassert solution('6\\n1 1 1 1 1 1') == '1 2 3 4 5'\nassert solution('7\\n1 1 1 1 1 1') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n') == '1'\nassert solution('5\\n2 2 2 3 3\\n') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n1 2 3'''\n) == '1'\n\nassert solution(\n'''5\n2 2 2 3 3'''\n) == '2'"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5'''\n    ) == '1'\n\nassert solution(\n'''3'''\n    ) == '1'\n\nassert solution(\n'''2'''\n    ) == '2'\n\nassert solution(\n'''1'''\n    ) == '0'\n\nassert solution(\n'''1'''\n    ) == '0'"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n3') == '0'\nassert solution('4\\n4') == '0'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 2 1') == '2'\nassert solution('2 2 2 3 3') == '2'\nassert solution('2 3 2 1 3 2 1') == '2'\nassert solution('2 1 2 1 2 2 1 2 1 2') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50') == '1'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('3\\n1\\n') == '1'\nassert solution('5\\n2\\n1\\n2\\n2\\n') == '2'\nassert solution('7\\n7\\n1\\n1\\n2\\n2\\n2\\n2\\n') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1\n1 2 3\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5\n2 2 2 3 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n2 2 2 3 3\") == \"2\"\nassert solution(\"3\\n2 2 2 3 3\\n1 1 1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '25'\nassert solution('1000') == '250'\nassert solution('10000') == '500'\nassert solution('1000000') == '1000'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == 5\nassert solution('100') == 12\nassert solution('1000') == 31\nassert solution('10000') == 61\nassert solution('1000000') == 121\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n''') == '5'\n\nassert solution('''14\n''') == '7'\n\nassert solution('''9\n''') == '4'\n\nassert solution('''25\n''') == '5'\n\nassert solution('''11\n''') == '8'"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"20\") == \"7\"\nassert solution(\"50\") == \"11\"\nassert solution(\"100\") == \"17\"\nassert solution(\"1000\") == \"31\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == 5\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10\") == 5\nassert solution(\"2\") == 2\nassert solution(\"10\") == 5\nassert solution(\"1\") == 1\nassert solution(\"100\") == 17\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\n\"\"\""
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n') == '5'\nassert solution('15\\n') == '10'\nassert solution('10000\\n') == '6425'\nassert solution('2\\n') == '1'\nassert solution('12\\n') == '2'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2') == '0 1'\nassert solution('1 1 1') == '0 1'\nassert solution('0 1 1') == '0 1'\nassert solution('1 1 0') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\nfrom sys import stdin, stdout\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))\n\na_wins = sum(a[i] > a[i - 1] for i in range(1, n))\nb_wins = sum(b[i] > b[i - 1] for i in range(1, n))\n\nstdout.write(str(max(0, a_wins - b_wins)) +'' + str(max(a_wins, b_wins)))"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n0\\n0\\n0\\n') == '0\\n0'\nassert solution('1\\n1\\n1\\n1\\n') == '1\\n1'\nassert solution('2\\n0\\n0\\n0\\n') == '0\\n1'\nassert solution('2\\n1\\n1\\n1\\n') == '1\\n2'\nassert solution('3\\n0\\n0\\n0\\n') == '0\\n2'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '0 1'\nassert solution('2\\n2\\n2') == '0 1'\nassert solution('2\\n2\\n1') == '1 0'\nassert solution('1\\n2\\n3') == '0 1'\nassert solution('2\\n0\\n1') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\"\n) == \"0 1\"\nassert solution(\n    \"15\"\n) == \"0 15\"\nassert solution(\n    \"3\"\n) == \"0 1\"\nassert solution(\n    \"686\"\n) == \"0 15\"\nassert solution(\n    \"319\"\n) == \"119 226\"\n\"\"\"\n\n\"\"\"\n5\n0 1 1\n1 1 0\n\n8\n0 0 1\n1 0 0\n\n9\n0 0 1\n0 0 1\n\n1\n0 0 1\n0 0 1\n\"\"\"\n\nfrom math import ceil, floor, sqrt"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == '0 1'\nassert solution('''0 1 1''') == '0 1'\nassert solution('''1 1 0''') == '0 1'\nassert solution('''0 0 3''') == '0 1'\nassert solution('''3 0 0''') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == expect\n\n\"\"\"\n\nn = int(input())\na1,a2,a3 = map(int, input().split())\nb1,b2,b3 = map(int, input().split())"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2''') == '0 1'\nassert solution('''15''') == '0 15'\nassert solution('''3''') == '3 3'\nassert solution('''186''') == '119 226'\nassert solution('''686''') == '22 334'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1\") == \"0 1\"\nassert solution(\"1 1 0\") == \"0 1\"\nassert solution(\"0 3 1\") == \"0 3\"\nassert solution(\"1 3 0\") == \"0 3\"\nassert solution(\"1 3 1\") == \"0 1\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 2 1\\n') == '3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2\\n'\nprint(solution(stdin))\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"-1\\n\")) == \"-1\"\nassert solution(input(\"1\\n\")) == \"1\"\nassert solution(input(\"1 2 3 4 5\\n\")) == \"1 2\"\nassert solution(input(\"1 2 3 4 5 6\\n\")) == \"2 3\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '''3\n7 7\n2 3\n4 5'''\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '''2\n3 4\n1 1\n2 2\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10'''\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '''2\n3 4\n1 1\n2 2\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10'''"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"3\\n7 7\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5\\n6 6\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '2\\n'\nassert solution('4\\n1 2 2 1\\n') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('3\\n3\\n3\\n3\\n') == '3\\n3\\n3\\n3\\n'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n'"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n1') == '1'\nassert solution('5\\n1') == '1 1 1 1 1'\nassert solution('5\\n-1') == '1'\nassert solution('5\\n-4') == '4 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '1'\nassert solution('3\\n2') == '2'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n1 2 3\"\"\") == \"NO\"\nassert solution(\"\"\"3\n3 1 2\"\"\") == \"YES\"\nassert solution(\"\"\"3\n3 2 1\"\"\") == \"NO\"\nassert solution(\"\"\"3\n3 2 1\"\"\") == \"YES\"\nassert solution(\"\"\"4\n1 2 3 4\"\"\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 3') == 'YES'\nassert solution('2\\n1 2') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2\\n') == 'YES'\nassert solution('2\\n2 1\\n') == 'NO'\nassert solution('2\\n3 1\\n2\\n') == 'YES'\nassert solution('2\\n1 2\\n3\\n') == 'YES'\nassert solution('2\\n1 2\\n3\\n2\\n') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\nassert solution('6\\n1 2 3 4 5 6') == 'YES'\nassert solution('10\\n5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == 'YES'\nassert solution('20\\n7 6 5 4 3 2 1') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 1\\n\") == \"YES\"\nassert solution(\"2\\n1 1\\n1 1\\n\") == \"YES\"\nassert solution(\"2\\n3 1\\n1 3\\n\") == \"NO\"\nassert solution(\"2\\n3 1\\n1 3\\n1 1\\n1 3\\n1 3\\n1 1\\n1 1\\n1 3\\n1 3\\n1 3\\n1 1\\n1 3\\n1 3\\n1 1\\n1 1\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 1\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n3\\n2') == 'YES'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('1\\n2\\n3\\n1') == 'YES'\n\n\n\n\n\"\"\""
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''3\n2 2 2''') == 'YES'\nassert solution('''3\n2 2 1''') == 'YES'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcdef\") == \"abdfec\"\nassert solution(\"abdfec\") == \"abdfec\"\nassert solution(\"abdcef\") == \"abdfec\"\nassert solution(\"abdfec\") == \"abdfec\"\nassert solution(\"abdfec\") == \"abdfec\"\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\n-----Add test cases-----\n\n1.    \"abcd\"\n2.    \"accd\"\n3.    \"abcd\"\n4.    \"abcd\"\n5.    \"abcd\"\n6.    \"abcd\"\n7.    \"abcd\"\n8.    \"abcd\"\n9.    \"abcd\"\n10.    \"abcd\"\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\nabcdef\nabdfec''') == \"4\"\nassert solution('''4\nabcd\naccd''') == \"-1\"\nassert solution('''4\nabc\nab\n''') == \"0\"\nassert solution('''6\nabcdef\nabdfec''') == \"4\"\nassert solution('''3\nabc\nab\n''') == \"0\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"-1\"\nassert solution(input(\"6\\nabcdef\\nabdfec\\n\")) == \"4\\n3 5 4 5\"\nassert solution(input(\"4\\nabcd\\naccd\\n\")) == \"0\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == result\nprint(result)\n\"\"\""
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\\n\")) == \"-1\"\nassert solution(input(\"\\n\\na\\na\\n\\n\")) == \"a\"\nassert solution(input(\"\\nab\\n\\nab\\n\\na\")) == \"ab\"\nassert solution(input(\"\\nab\\na\")) == \"ab\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcdef') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\nassert solution('abdcfe') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '4'\nassert solution('''\n4\nabcd\naccd\n''') == '-1'"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"P\"\nassert solution(\"b\") == \"S\"\nassert solution(\"aa\") == \"S\"\nassert solution(\"abc\") == \"SPPSPSPS\"\nassert solution(\"a\") == \"P\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'\nassert solution('1') == 'P'\nassert solution('2') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\na\\naa\\naaa\\naaaa\\naaaaa\\naaaaaa\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\") == \"PSPSPSP\"\nassert solution(\"3\\na\\naa\\naaa\") == \"P\"\nassert solution(\"2\\na\\naa\") == \"PS\"\nassert solution(\"3\\naa\") == \"P\"\nassert solution(\"2\\na\") == \"P\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ab\") == \"SP\"\nassert solution(\"a\") == \"PS\"\nassert solution(\"aabb\") == \"SPPSPS\"\nassert solution(\"aabbb\") == \"PSPSPS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abab') == 'PPSPSPS'\nassert solution('a') == 'PPSS'\nassert solution('c') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abacab\") == \"SPPSPSPS\"\nassert solution(\"abcba\") == \"PSPSPSP\"\nassert solution(\"a\") == \"PS\"\nassert solution(\"bbaaa\") == \"PSSPSP\"\nassert solution(\"aa\") == \"PSS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '''PPSSPSPS'''\nassert solution('''3''') == '''PS'''\nassert solution('''2''') == '''PS'''\nassert solution('''aa''') == '''PS'''\nassert solution('''c''') == '''PS'''\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"PPSSPS\"\nassert solution(stdin) == \"PS\"\nassert solution(stdin) == \"SP\"\nassert solution(stdin) == \"PPSS\"\nassert solution(stdin) == \"PSP\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1'\nassert solution('0') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10\n4 8 10 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100''') == '1'\nassert solution('''2 4 6 8 10\n4 8 10 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98''') == '1'\nassert solution('''2 4 6 8 10\n2 4 6 8 10\n4 8 10 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98''') == '1'\nassert solution('''2 4 6 8 10\n2 4 6 8 10\n4 8 10 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98''') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''0 0 0 0 0 0''') == '0'\nassert solution('''2 2 2 2 2 2''') == '1'\nassert solution('''2 3 2 2 4''') == '3'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('3 5 4 4 2') == '1'\nassert solution('0 0 0 0 0') == '1'\nassert solution('1 1 1 1 1') == '2'\nassert solution('0 0 0 0 0') == '2'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\n\"\"\"\nimport sys\n\nDEBUG = False\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\nassert solution('1 2 3 4 5') == \"1\"\nassert solution('2 4 6 8 10') == \"1\"\nassert solution('2 3 4 1 5') == \"4\"\nassert solution('1 5 2 7 3') == \"3\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4') == '1'\nassert solution('5 4 3 2 1') == '1'\nassert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n10\n1 1 0 1 1 0 1 0 1 0\n\"\"\") == '2'\n\nassert solution(\n\"\"\"\n5\n1 1 0 0 0\n\"\"\") == '0'\n\nassert solution(\n\"\"\"\n4\n1 1 1 1\n\"\"\") == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('10\\n1 1 0 0 0 0 0 0 0 0') == '7'\nassert solution('4\\n1 1 1 1') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1 1 1') == '0'\nassert solution('5\\n1 1 1 0 0') == '2'\nassert solution('10\\n1 1 0 0 0 0 0 0 0 0') == '2'\nassert solution('4\\n1 1 1 1') == '0'\nassert solution('5\\n1 1 1 0 0') == '2'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 0 0 0\\n') == '0'\nassert solution('4\\n1 1 1 1\\n') == '0'\n\"\"\""
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\n\nassert solution('''5\n1 1 0 0 0\n''') == '0'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nassert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"1 1 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\") == \"0\"\n\"\"\""
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''5\n1 1 0 0 0''') == '0'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''7\n1 1 1 1 1 1 1 1''') == '0'\nassert solution('''2\n1 1''') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '1'\nassert solution('''6''') == '4'\nassert solution('''90 12 18 30 18''') == '4'\n\n'''\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('5\\n6\\n7\\n8\\n9\\n10') == '4'\nassert solution('100\\n123456789\\n987654321\\n987654321') == '1'\nassert solution('100\\n123456789\\n987654321\\n987654321') == '1'\nassert solution('2\\n2\\n2\\n2\\n2') == '5'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('3\\n3\\n') == '3'\nassert solution('4\\n4\\n') == '4'\nassert solution('5\\n5\\n') == '5'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('3\\n3') == '1'\nassert solution('4\\n4') == '2'\nassert solution('5\\n5') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('2\\n3\\n4\\n5') == '2'\nassert solution('3\\n4\\n5') == '3'\nassert solution('4\\n5') == '1'\nassert solution('5\\n6') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n2\\n3\\n4\\n') == '2'\nassert solution('1\\n1\\n2\\n4\\n5\\n') == '1'\nassert solution('1\\n1\\n2\\n3\\n5\\n') == '1'\nassert solution('1\\n1\\n2\\n4\\n6\\n') == '3'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\n\n'''"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 2 4 3 3 2\n    \"\"\") == 2\nassert solution(\n    \"\"\"\n    1\n    100\n    \"\"\") == 1"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''6\n1 2 4 3 3 2'''\n) == '2'\n\nassert solution(\n'''1\n100'''\n) == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n2') == '1'\nassert solution('3\\n3') == '2'\nassert solution('4\\n4') == '3'\nassert solution('5\\n5') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n2 2') == '1'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n1 1 1') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n'''\n\nn = int(input())\na = list(map(int, input().split()))\n\nused = [0] * (max(a) + 1)\n\nfor i in a:\n    used[i] += 1\n\nprint(used.count(0))\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''4\n1 2 4 3''') == '2'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''10\n10 10 10 10 10 10 10 10 10''') == '0'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n1 2 4 3 3 2\n''') == '2'\nassert solution('''1\n100\n''') == '1'\n\nassert solution('''6\n1 2 4 3 3 2\n''') == '2'\n\nassert solution('''1\n100\n''') == '1'\n\nassert solution('''1\n1\n''') == '1'"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 3') == '2'\nassert solution('1 1') == '2'\nassert solution('1 3 4') == '3'\nassert solution('1 3 5') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution(\n'''5 3\n1 0 0 0 1\n''') == '2'\n\nassert solution(\n'''5 10\n0 0 0 0 0 0\n''') == '-1'\n\nassert solution(\n'''10 3\n0 0 1 1 0 1 0 0 1\n''') == '3'\n\nassert solution(\n'''6 3\n0 0 1 0 0 1\n''') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == '3'\nassert solution('5 3\\n0 0 0 0 0\\n0 0 0 0 0') == '2'\nassert solution('5 10\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0') == '3'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == '3'\nassert solution('10 10\\n0 0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0') == '3'\n\n\n\n\n-----Best Practice-----\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n0 0 1 1') == '3'\nassert solution('2 3\\n0 0 0 1 1') == '2'\nassert solution('5 10\\n0 0 1 1 0 1 0 0 1') == '3'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == '2'\nassert solution('6 3\\n0 0 1 1 0 1 1\\n0 0 0 1 1 0 1 1') == '2'"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n\n\nfrom sys import stdin"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '-1'\nassert solution('2\\n2') == '1'\nassert solution('1\\n1') == '0'\nassert solution('2\\n2') == '1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2', '0 1 1 0 0 1') == '3'\nassert solution('1 10', '0 0 1 1 0 1 0 0 1') == '2'\nassert solution('10 3', '0 0 1 1 0 1 0 0 1') == '-1'\nassert solution('10 3', '0 0 1 1 0 1 0 0 1') == '-1'\nassert solution('100000 10', '0 0 1 1 0 1 0 0 1') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 3') == '3'\nassert solution('5 10') == '2'\nassert solution('2 3') == '-1'\nassert solution('4 5') == '3'\nassert solution('6 10') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n0 1 1\\n1 0 0') == '3'\nassert solution('3\\n0 0 1\\n1 0 0') == '2'\nassert solution('3\\n0 0 1\\n1 0 1\\n1 1 0') == '-1'\nassert solution('10\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0') == '-1'\nassert solution('10\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1''') == '3'\nassert solution('''5 3\n0 0 0 0 0''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1''') == '3'"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('7') == '1'\nassert solution('10') == '5'\nassert solution('15') == '7'\nassert solution('20') == '13'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\\n\") == \"3\"\nassert solution(\"7\") == \"0\"\nassert solution(\"2\\n4\\n6\") == \"2\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3\n''') == '3'\n\nassert solution('''\n5\n''') == '3'\n\nassert solution('''\n10\n''') == '5'\n\nassert solution('''\n11\n''') == '6'\n\nassert solution('''\n15\n''') == '8'"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('10') == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('3 1') == '3'\nassert solution('3 4') == '3'\nassert solution('3 1 4') == '3'\nassert solution('10') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(((())\") == 3\nassert solution(\"()()()\") == 0\nassert solution(\")(\") == 0\nassert solution(\"((()\")) == 1\nassert solution(\"((())((()))\") == 3\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"(()(\") == \"0\"\nassert solution(\")()())\") == \"0\"\nassert solution(\"((())(\") == \"1\"\nassert solution(\"())()())\") == \"2\"\nassert solution(\"))((((((\") == \"0\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(((()'\n    ==\n    '''\n    # for n >= 10 ** 6\n    n = int(input())\n    s = list(input())\n    i = 0\n    j = len(s)-1\n    n = 0\n    while i < j:\n        if s[i] == '(':\n            n += 1\n            if s[j] == ')':\n                n -= 1\n                j -= 1\n            else:\n                j -= 1\n        else:\n            n -= 1\n            if s[j] == '(':\n                n += 1\n                j -= 1\n            else:\n                j -= 1\n        i += 1\n    print(n)\n    '''\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('()()()') == '0'\nassert solution('((()') == '3'\nassert solution(')(') == '0'\nassert solution('((()))') == '0'\nassert solution('((()))') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('(((()' == solution(input()))\nassert solution('((()' == solution(input()))\nassert solution('((()' == solution(input()))"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('(((()' == solution('''((()'''))\nassert solution('()()()' == solution(''')))('''))\nassert solution('(((()' == solution(''')))'''))\nassert solution('()()()' == solution(''')))('''))\nassert solution(')))((((((' == solution('''))))))'''))\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(((())))') == 3\nassert solution('()()()') == 0\nassert solution(')(') == 0\nassert solution('(((()))') == 3\nassert solution('()()()') == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('(((()' == solution(')('))\nassert solution('()()()' == solution(')((()'))\nassert solution('()()' == solution(')))('))\nassert solution('())(' == solution(')))('))\nassert solution('()()' == solution('((()'))\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('(((())') == '0'\nassert solution('((()))') == '3'\nassert solution(')))((((') == '0'\nassert solution('((()' == '0'\nassert solution('(((((') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"()\") == \"\"\nassert solution(\"()(\") == \"\"\nassert solution(\"()()\") == \"\"\nassert solution(\"()()(\") == \"\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('bbabba', 'bb') == 3"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"a\", \"a\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('aaabbbaaaaaabaaabaaaa', 'ab') == 4\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''bbaba\nbb\n''') == 3\nassert solution('''baaba\nab\n''') == 2\nassert solution('''abcde\nabcde\n''') == 0\nassert solution('''asdfasdf\nfasd\n''') == 3\nassert solution('''abcd\nef\n''') == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"baaba\", \"ab\") == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('qwerty', 'qwerty') == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('bbaba', 'bb') == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bdba\", \"b\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 2 2 2') == '4'\nassert solution('1 5 1 5') == '5'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 4') == '0'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"2 1 1 1\") == \"2\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"1 1 1 1\") == \"8\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 2 1 1\") == \"4\"\nassert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"1 1 1 1\") == \"8\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 4 3 2') == '8'\nassert solution('1 3 1 2') == '3'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"-4 -2 -1 2\") == \"0\"\nassert solution(\"2 0 -1 0\") == \"0\"\nassert solution(\"2 0 1 0\") == \"0\"\nassert solution(\"1 0 0 2\") == \"0\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '4'\nassert solution('1 1 1 2') == '2'\nassert solution('1 1 2 2') == '2'\nassert solution('2 2 2 2') == '8'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 2 1 1\"\n) == \"2\"\nassert solution(\n    \"1 1000000 1 1\"\n) == \"1000000\"\nassert solution(\n    \"1 10000000 1 1\"\n) == \"1\"\nassert solution(\n    \"1 1000000 10 1\"\n) == \"0\"\nassert solution(\n    \"1 10000000 10 1\"\n) == \"0\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 5 2\") == \"4\"\nassert solution(\"2 2 2 2\") == \"1\"\nassert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 2 1\") == \"0\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'\nassert solution('6\\n1 1 1 1 1 1\\n') == '1'\nassert solution('6\\n8 9 3 3 3 3 3\\n') == '3'\n\n'''\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\n9 1 4 4 6 7\n''') == '2'\nassert solution('''\n6\n9 1 4 4 6 7\n''') == '2'\nassert solution('''\n6\n9 1 4 4 7\n''') == '2'\nassert solution('''\n6\n9 1 4 4 7\n''') == '2'\nassert solution('''\n6\n9 1 4 4 7\n''') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6\") == \"\"\nassert solution(\"1 1 1 1 1 1\") == \"\"\nassert solution(\"1 1 1 1 1 2\") == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\\n\") == \"2\"\nassert solution(\"2\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"\n\"\"\"\nfrom collections import Counter\nfrom math import ceil"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('6\\n9 1 4 4 6 7\\n5 2 3 5 4 6') == '1'\nassert solution('6\\n9 1 4 4 6 7\\n8 4 4 7 8 4') == '0'\nassert solution('6\\n9 1 4 4 6 7\\n8 4 4 7 8 4\\n7 5 7 5 7 7') == '3'\nassert solution('6\\n9 1 4 4 6 7\\n8 4 4 7 8 4\\n7 5 7 5 7 7\\n5 8 8 8 8 8') == '0'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('6\\n1 2 2 4 4 6') == '0'\nassert solution('6\\n1 2 2 4 4 6') == '0'\nassert solution('6\\n9 9 9 9 9 9') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\n\"\"\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 1 3\") == \"2\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"6\\n9 1 4 4 6 9\") == \"0\"\nassert solution(\"3\\n6 1 2\") == \"0\"\nassert solution(\"6\\n6 1 2\") == \"0\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_arr) == output_arr\nprint(\"Test case 1: Passed\")\n\ninput_arr = input_arr.split(' ')\nprint(input_arr)\n\nprint(len(input_arr))\nprint(len(input_arr[0]))\n\ninput_arr = [int(elem) for elem in input_arr]\nprint(input_arr)\n\nprint(input_arr)"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nassert solution('''14 23 19 21 17\n16 17 14 20 20 11 22''') == '3'\nassert solution('''14 23 19 21 17\n16 17 14 20 20 11 22''') == '3'\nassert solution('''14 22 19 17\n16 17 14 20 20 11 22''') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == '3'\n\"\"\"\n\nfrom functools import lru_cache\n\nN, H, L, R = map(int, stdin.split())\nA = list(map(int, stdin.split()))\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"7 24 21 23\\n16 17 14 20 20 11 22\"\n) == '3'\nassert solution(\n    \"2 0 3 1\\n8 2 4 8 8 4\"\n) == '3'\nassert solution(\n    \"8 0 4 1 2 1 3 1 3 4 1\\n2 1 4 3 4 4 1 1 2 1 1 1 2\"\n) == '4'\n\n\"\"\""
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 19 14 19''') == '1'\nassert solution('''5 4 2 3''') == '2'\nassert solution('''0 0 0 0 0 0''') == '0'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 22''') == '0'\nassert solution('''16 17 14 20 20 11 22''') == '0'\nassert solution
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 22''') == '0'\nassert solution('''16 17 14 20 20 11 22''') == '0'\nassert solution('''16 17 14 20 17 14 11 22''') == '0'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"n h l r\\na_1 a_2 a_3 a_4 a_5 a_6 a_7\")) == \"3\"\nprint(solution(input(\"n h l r\\na_1 a_2 a_3 a_4 a_5 a_6 a_7\")))\n\"\"\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n1 2 3 4 5 6''') == '2'\nassert solution('''4\n1 2 3 4''') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n\n'''\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\n\n\n\n\"\"\""
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('inputs/hard/hard-1.txt') == '2'\nassert solution('inputs/hard/hard-2.txt') == '2'\nassert solution('inputs/hard/hard-3.txt') == '1'\nassert solution('inputs/hard/hard-4.txt') == '3'\nassert solution('inputs/hard/hard-5.txt') == '5'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n2 2') == '2'\nassert solution('2\\n1 2 3') == '3'\nassert solution('2\\n1 2 3 4') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('input/07-test') == '3'\nassert solution('input/07-test2') == '1'\nassert solution('input/07-test3') == '1'\nassert solution('input/07-test4') == '2'\nassert solution('input/07-test5') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10''') == '4'\nassert solution('''5''') == '1'\nassert solution('''6''') == '3'\nassert solution('''4 7 12 100 150 199''') == '1'\nassert solution('''1 2 5 6 7 10 21 23 24 49''') == '4'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''5\n2 10 50 110 250\n''') == '1'\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'\n'''\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('2\\n1 1 2\\n') == '1'\nassert solution('3\\n1 2 3 4\\n') == '1'\nassert solution('3\\n1 2 2 3 4\\n') == '2'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('4 7 12 100 150 199') == '3'\nassert solution('2 10 50 110 250') == '1'\nassert solution('6 4 7 12 100 150 199') == '3'\n\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nm = a[0]\nfor i in range(1, len(a)):\n    if a[i] > m*2:\n        m = a[i]\nprint(m)"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''5\n5 2 11 3 7\n''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2\n''') == '1 4'\nassert solution('''3\n1 2 3\n''') == '2 1'\nassert solution('''10\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '2 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 4\\n') == '1 2\\n1 4'\nassert solution('1 2\\n1 4\\n') == '1 4'\nassert solution('1 2\\n1 4\\n') == '1 4'\nassert solution('1 2\\n1 4\\n') == '1 4'\nassert solution('1 2\\n1 4\\n') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"   \") == \"\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"1 2\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''1\n1''') == '1 1'\nassert solution('''1\n1''') == '1 1'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 2') == '2 1'\nassert solution('2\\n2 3') == '2 1'\nassert solution('2\\n2 4') == '2 2'\nassert solution('2\\n2 5') == '2 2'\nassert solution('2\\n3 2') == '2 1'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('1\\n5') == '5 4'\nassert solution('1\\n10') == '1 9'\nassert solution('2\\n1') == '1 1'\nassert solution('1\\n1') == '1 1'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''9\n9 2 8 6 3 4 1 5 7''') == '2 4'\nassert solution('''10\n10 2 9 7 6 3 4 5 1''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n') == '1 2\\n'\nassert solution('2 4\\n') == '1 2\\n'\nassert solution('2 4\\n') == '1 2\\n'\nassert solution('1 2\\n') == '1 2\\n'\nassert solution('5\\n2 4 8 3 6\\n') == '1 2\\n'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"2 4\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n1') == '1 2'\nassert solution('2\\n2') == '1 2'\nassert solution('2\\n3') == '1 2'\nassert solution('2\\n4') == '1 2'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'\nassert solution('120120') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'\nassert solution('1201100') == '1201200'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('11') == '01'\nassert solution('101') == '02'\nassert solution('11101') == '1201'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('121') == '021'\nassert solution('211200') == '120120'\nassert solution('120110') == '120120'"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('110101') == '010111'\nassert solution('11010101011101') == '1101010101110101'\nassert solution('110101010111010101010101') == '11010101011101010101010101'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"021\") == \"021\"\nassert solution(\"000000\") == \"211200\"\nassert solution(\"000000\") == \"211200\"\nassert solution(\"000000\") == \"211200\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'abc'\nassert solution('0') == '0'\nassert solution('100') == '01'\nassert solution('101') == '10'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123') == '132'\nassert solution('20') == '20'\nassert solution('200') == '20'\nassert solution('20200') == '20200'\nassert solution('00012') == '00120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"000000\") == \"001122\"\nassert solution(\"211200\") == \"211200\"\nassert solution(\"120110\") == \"120120\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 1') == '4'\nassert solution('3 1') == '1'\nassert solution('6 2') == '4'\nassert solution('6 3') == '5'\nassert solution('6 4') == '7'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3') == '4'\nassert solution('2\\n2') == '4'\nassert solution('3\\n2') == '8'\nassert solution('3\\n3') == '9'\nassert solution('4\\n2') == '10'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"1\"\nassert solution(\"6 3\") == \"0\"\nassert solution(\"6 4\") == \"0\"\nassert solution(\"6 5\") == \"0\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"\nassert solution(\"10 1\\n3\\n\") == \"8\"\nassert solution(\"20 5\\n6 8\\n9 9\\n10 11\\n12 13\\n13 14\\n14 15\\n15 16\\n17 17\\n18 19\\n19 20\") == \"6660\"\n\"\"\"\n\nfrom functools import lru_cache\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[4]\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 1\\n3') == '4'\nassert solution('6 1\\n3') == '4'\nassert solution('10 1000\\n
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 1\n3\n''') == '4'\nassert solution('''6 1\n3\n''') == '4'\nassert solution('''6 1\n3\n''') == '4'\nassert solution('''6 1\n3\n''') == '4'\nassert solution('''6 1\n3\n''') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"5 1\") == \"8\"\nassert solution(\"4 2\") == \"4\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 1''') == '4'\nassert solution('''6 2''') == '8'\nassert solution('''6 3''') == '10'\nassert solution('''6 4''') == '14'\nassert solution('''6 5''') == '18'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2 4''') == '2'\nassert solution('''5 2 2''') == '0'\nassert solution('''5 2 2''') == '0'\nassert solution('''10 10 1''') == '1'\nassert solution('''1000 1 1000''') == '1'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2 4''') == '2'\nassert solution('''6 2 -4''') == '2'\nassert solution('''1 1 1''') == '0'\nassert solution('''1 10 10''') == '9'\nassert solution('''20 20 10''') == '9'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('10 3 4') == '5'\nassert solution('7 1 2') == '4'\nassert solution('20 9 4') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('7 3 4') == '2'\nassert solution('10 10 10') == '0'\nassert solution('-10 -10 -10') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2 6') == '2'\nassert solution('3 1 4') == '1'\nassert solution('2 1 2') == '0'\nassert solution('2 2 3') == '2'\nassert solution('2 2 1') == '-1'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 2 4''') == '2'\nassert solution('''-6 2 4''') == '2'\nassert solution('''-6 -2 4''') == '2'\nassert solution('''7 2 4''') == '0'\nassert solution('''4 3 5''') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:4]"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"7 4 4\") == \"3\"\nassert solution(\"10 6 4\") == \"3\"\nassert solution(\"-10 -6 -4\") == \"-3\"\nassert solution(\"-10 -6 -4\") == \"-3\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"10\"\nassert solution(2128506) == \"3\"\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 2\n\n\"\"\""
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2128506') == 3\nassert solution('11') == 2\nassert solution('14') == 0\nassert solution('571576') == 10\nassert solution('61441') == 2\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('11') == '2'\nassert solution('14') == '0'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution(' ') is None\nassert solution('\\t') is None\nassert solution('1') == 1\nassert solution('2') == 2\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"10\"\nassert solution(2128506) == \"3\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution(1) == 1\nassert solution(3) == 3\nassert solution(5) == 5\nassert solution(30) == 27\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == 27\nassert solution('''28''') == 43\nassert solution('''30''') == 48\n'''\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '27'\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"27\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == 27\nassert solution(\"2\") == 3\nassert solution(\"13\") == 719\nassert solution(\"30\") == 93\nassert solution(\"1\") == 1\n\"\"\""
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"27\"\n\nInput\n8\n\nOutput\n512\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == 27\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 8\nassert solution(3) == 27\nassert solution(4) == 91\nassert solution(5) == 179\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 27\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution('3') == 3\nassert solution('2') == 2\nassert solution('1') == 1\n\"\"\""
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nprint(\"Testcase 1 passed.\")\n\"\"\""
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('13') == 1\nassert solution('927') == 1\nassert solution('48') == 0\nassert solution('4565') == 0\nassert solution('1299') == 1\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\nassert solution(5) == 0\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"9\") == \"9\"\nassert solution(\"13\") == \"13\"\nassert solution(\"25\") == \"1\"\nassert solution(\"35\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\nassert solution(\"42\") == \"1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '0110'\nassert solution('2 2 3 3') == '0101'\nassert solution('5 5 5 5') == '0'\nassert solution('5 5 5 5 1') == '1001'\nassert solution('5 5 5 5 2') == '0110'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\n\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2 3 1''') == '4'\nassert solution('''1\n3''') == '1'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n0''') == '0'\nassert solution('''2\n2 3 1''') == '2'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5 3 1') == 4\nassert solution('2 3 3 2 2') == 2\nassert solution('1 1 1 1 1') == 1\nassert solution('1 1 1 1 1 1') == 1\nassert solution('1 1 1 1 1 1 1') == 1\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n2 5 3 1') == 4\n\n'''\n\nfrom typing import List"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 5 3 1''') == 4\nassert solution('''5\n1 2 3 4 5''') == 0\nassert solution('''11\n9 2 3 4 5 6 7 8 9 10 11''') == 9\nassert solution('''10\n9 2 3 4 5 6 7 8 9 10''') == 0\nassert solution('''10\n1 2 3 4 5 6 7 8 9''') == 0\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n5 3 1') == '4'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1 2 3 4 5') == '5'\nassert solution('1\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('1\\n1 2 3 4 5 6 7 8 9 10') == '10'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 5 1\") == 1\nassert solution(\"3 6 1\") == 1\nassert solution(\"4 6 1\") == 0\nassert solution(\"1 2 3\") == 0\nassert solution(\"5 3 5 4 5\") == 1\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n2 5 3 1') == '4'\nassert solution('5\\n3 2 1 4') == '4'\nassert solution('1\\n1') == '1'\nassert solution('3\\n3 1 3') == '1'\nassert solution('2\\n1 1') == '2'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n2\\n2\\n1') == '5'\nassert solution('1\\n8\\n2\\n1') == '8'\nassert solution('1\\n8\\n2\\n1\\n1') == '9'\nassert solution('1\\n8\\n2\\n1\\n1\\n1') == '1'\nassert solution('1\\n8\\n2\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    n,k = map(int,sys.stdin.readline().split())\n    ans = 0\n    # if n%k==0:\n    #     ans = n//k\n    # else:\n    #     ans = n//k + 1\n    ans = n // k if n % k == 0 else n // k + 1\n    print(ans)"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '8'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\n'''\n\"\"\"\n\nimport sys\nfrom typing import List\n\nsys.setrecursionlimit(10000)\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == input\nassert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 0\nassert solution('ab') == 1\nassert solution('abcd') == 1\nassert solution('abcde') == 3\nassert solution('abcdefghi') == 0"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n2\\n4\\n4\\n7') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\n\nassert solution('''8 1\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '8'\n\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\n\nassert solution('''5 10\n6 7\n4 9\n1 2\n8 9\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(''.join(sample)) == ''.join(output)\n'''\n\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\\n4 4\") == \"\"\nassert solution(\"2\\n4 4\\n4 4\") == \"\"\nassert solution(\"2\\n4 4\\n4 4\\n4 4\") == \"\"\nassert solution(\"2\\n4 4\\n4 4\\n4 4\\n4 4\") == \"\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == result"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 2\\n2 1 2\\n1 2\\n1 1') == '2'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '2'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 1\n2 1''') == '1'\nassert solution('''4 2\n2 1 2\n1 2\n0 1\n2 1''') == '0'\nassert solution('''4 2\n2 1 2\n1 2\n0 1\n0 1''') == '4'\nassert solution('''2 2\n2 1 2\n1 2\n0 1\n2 1\n1 2''') == '2'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2') == '1'\nassert solution('2 2\\n2 1 2\\n1 2') == '1'\nassert solution('2 2\\n2 1 2\\n1 2') == '1'\nassert solution('2 2\\n2 1 2\\n1 2') == '1'\nassert solution('2 2\\n2 1 2\\n1 2') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n1 1\n''') == '2'\nassert solution('''2 2\n2 1 2\n1 2\n''') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('0 1') == '1'\nassert solution('1 2 2') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 3\\n1 1 2\\n2 1 3\") == \"0\"\nassert solution(\"2 3\\n1 1 2\\n2 1 3\\n1 3 2\") == \"1\"\nassert solution(\"3 2\\n1 2 3\\n2 1 3\") == \"0\"\nassert solution(\"3 2\\n1 2 3\\n2 1 3\\n2 2 1\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == 1\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\") == 1\nassert solution(\"2 2\\n2 1 2\\n1 2\") == 1\nassert solution(\"3 4\\n1 2 3\\n2 3 4\\n3 4 5\") == 1\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 1\n\"\"\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"5.00000000000000000000\"\n'''\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 4 5\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"10 3 4 1\") == \"9.00000000000000000000\"\nassert solution(\"1 10 11 2\") == \"1.00000000000000000000\"\nassert solution(\"1 0 9 0\") == \"1.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 10 0') == '9.00000000000000000000'\nassert solution('3 4 11 0') == '10.00000000000000000000'\nassert solution('3 4 12 0') == '11.00000000000000000000'\nassert solution('3 4 13 0') == '12.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 0 0') == '5.00000000000000000000'\nassert solution('4 5 8 0') == '11.999999999999969'\nassert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 8 0') == '10.00000000000002'\nassert solution('1 0 0 0') == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '3 4 9 0'\n) == '5.00000000000000000000'"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 9 0''') == '5.00000000000000000000'\nassert solution('''1000 2 0 0''') == '0.00000000000000000000'\nassert solution('''10 1 12 0''') == '11.500000000000001'\nassert solution('''10 1 6 0''') == '11.500000000000001'\nassert solution('''1000 0 0 0''') == '0.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5.00000000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(\"1 2 2 2\") == \"\"\nassert solution(\"1 2 2 3\") == \"3.141593\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 0 0 0\") == \"2.23606797\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\nassert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 4\n1 4 5 60 4\n\"\"\") == \"8\"\n\nassert solution(\"\"\"3 1\n1 1 1\n\"\"\") == \"6\"\n\nassert solution(\"\"\"15 2\n1 2 3 1 2 3 1 2 3 1 2 3\n\"\"\") == \"97\"\n\"\"\"\nSimilar Problems\nProblem 1\nFind the number of distinct words in a file.\n\nProblem 2\nThe first one is a simple one, but the second one is trickier, remember to check the case where the words are unique, and also the case when there are multiple unique words.\n\nProblem 3\nFind the most frequent word in a text file.\n\nProblem 4\nThe first one is a simple one, but the second one is trickier, remember to check the case where the words are unique, and also the case when there are multiple unique words.\n\nProblem 5\nThe first one is a simple one, but the second one is trickier, remember to check the case where the words are unique, and also the case when there are multiple unique words.\n\nProblem 6\nFind the number of distinct words in a text file.\n\nProblem 7\nFind the most frequent word in a text file.\n\nProblem 8\nFind the number of distinct words in a text file.\n\nProblem 9\nFind the number of distinct words in a text file.\n\nProblem 10\nFind the number of distinct words in a text file.\n\nProblem 11\nFind the number of distinct words in a text file.\n\nProblem 12\nFind the number of distinct words in a text file.\n\nProblem 13\nFind the number of distinct words in a text file.\n\nProblem 14\nFind the number of distinct words in a text file.\n\nProblem 15\nFind the number of distinct words in a text file.\n\nProblem 16\nFind the number of distinct words in a text file.\n\nProblem 17\nFind the number of distinct words in a text file.\n\nProblem 18\nFind the number of distinct words in a text file.\n\nProblem 19\nFind the number of distinct words in a text file.\n\nProblem 20\nFind the number of distinct words in a text file.\n\nProblem 21\nFind the number of distinct words in a text file.\n\nProblem 22\nFind the number of distinct words in a text file.\n\nProblem 23\nFind the number of distinct words in a text file.\n\nProblem 24\nFind the number of distinct words in a text file.\n\nProblem 25\nFind the number of distinct words in a text file.\n\nProblem 26\nFind the number of distinct words in a text file.\n\nProblem 27\nFind the number of distinct words in a text file.\n\nProblem 28\nFind the number of distinct words in a text file.\n\nProblem 29\nFind the number of distinct words in a text file.\n\nProblem 30\nFind the number of distinct words in a text file.\n\nProblem 31\nFind the number of distinct words in a text file.\n\nProblem 32\nFind the number of distinct words in a text file.\n\nProblem 33\nFind the number of distinct words in a text file.\n\nProblem 34\nFind the number of distinct words in a text file.\n\nProblem 35\nFind the number of distinct words in a text file.\n\nProblem 36\nFind the number of distinct words in a text file.\n\nProblem 37\nFind the number of distinct words in a text file.\n\nProblem 38\nFind the number of distinct words in a text file.\n\nProblem 39\nFind the number of distinct words in a text file.\n\nProblem 40\nFind the number of distinct words in a text file.\n\nProblem 41\nFind the number of distinct words in a text file.\n\nProblem 42\nFind the number of distinct words in a text file.\n\nProblem 43\nFind the number of distinct words in a text file.\n\nProblem 44\nFind the number of distinct words in a text file.\n\nProblem 45\nFind the number of distinct words in a text file.\n\nProblem 46\nFind the number of distinct words in a text file.\n\nProblem 47\nFind the number of distinct words in a text file.\n\nProblem 48\nFind the number of distinct words in a text file.\n\nProblem 49\nFind the number of distinct words in a text file.\n\nProblem 50\nFind the number of distinct words in a text file.\n\nProblem 51\nFind the number of distinct words in a text file.\n\nProblem 52\nFind the number of distinct words in a text file.\n\nProblem 53\nFind the number of distinct words in a text file.\n\nProblem 54\nFind the number of distinct words in a text file.\n\nProblem 55\nFind the number of distinct words in a text file.\n\nProblem 56\nFind the number of distinct words in a text file.\n\nProblem 57\nFind the number of distinct words in a text file.\n\nProblem 58\nFind the number of distinct words in a text file.\n\nProblem 59\nFind the number of distinct words in a text file.\n\nProblem 60\nFind the number of distinct words in a text file.\n\nProblem 61\nFind the number of distinct words in a text file.\n\nProblem 62\nFind the number of distinct words in a text file.\n\nProblem 63\nFind the number of distinct words in a text file.\n\nProblem 64\nFind the number of distinct words in a text file.\n\nProblem 65\nFind the number of distinct words in a text file.\n\nProblem 66\nFind the number of distinct words in a text file.\n\nProblem 67\nFind the number of distinct words in a text file.\n\nProblem 68\nFind the number of distinct words in a text file.\n\nProblem 69\nFind the number of distinct words in a text file.\n\nProblem 70\nFind the number of distinct words in a text file.\n\nProblem 71\nFind the number of distinct words in a text file.\n\nProblem 72\nFind the number of distinct words in a text file.\n\nProblem 73\nFind the number of distinct words in a text file.\n\nProblem 74\nFind the number of distinct words in a text file.\n\nProblem 75\nFind the number of distinct words in a text file.\n\nProblem 76\nFind the number of distinct words in a text file.\n\nProblem 77\nFind the number of distinct words in a text file.\n\nProblem 78\nFind the number of distinct words in a text file.\n\nProblem 79\nFind the number of distinct words in a text file.\n\nProblem 80\nFind the number of distinct words in a text file.\n\nProblem 81\nFind the number of distinct words in a text file.\n\nProblem 82\nFind the number of distinct words in a text file.\n\nProblem 83\nFind the number of distinct words in a text file.\n\nProblem 84"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''3 1\n1 1 1''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\n'''\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '6'\nassert solution('1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('1 1 1') == '8'\nassert solution('1 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('3 4 5 1 2 3') == '8'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1 1\\n') == '1'\nassert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\n\"\"\""
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\nn,m = map(int,stdin.readline().split())\na = list(map(int,stdin.readline().split()))"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('1\\n2\\n2') == '2'\nassert solution('4\\n4') == '1'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 4 5 60 4''') == '8'\nassert solution('''3 1''') == '6'\nassert solution('''15 2''') == '97'\nassert solution('''1 1 1''') == '9'\nassert solution('''1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\nassert solution('''1 0\n1000000\n\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 0') == '0'\nassert solution('5 0') == '0'\nassert solution('5 6') == '7'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution(\n'''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\nassert solution(\n'''1 0\n1000000\n\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1000000') == '6'\nassert solution('2\\n1000000') == '7'\nassert solution('3\\n1000000') == '0'\nassert solution('1\\n1000000\\n1000000\\n1000000') == '6'\nassert solution('2\\n1000000\\n1000000\\n1000000') == '7'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6'\nassert solution('1 0\\n1000000\\n') == '0'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '6'\nassert solution('1000000') == '0'\nassert solution('-2 3 1 2') == '6'\nassert solution('3 5') == '2'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 7"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '2'\nassert solution('''2 1\n1000000\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '2 2'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n3 4\n2 4\n2 5\n''') == '3 2'\n'''\n    pass\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbacd') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbacd\\naa') == 'No\\nNo\\nNo\\nYes\\nYes\\nYes\\nNo\\n'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbacd\\naa') == 'No\\nNo\\nNo\\nYes\\nYes\\nYes\\nNo\\n'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbacd\\naa\\naa') == 'No\\nNo\\nNo\\nYes\\nYes\\nYes\\nNo\\n'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naa') == 'No\\nNo\\nNo\\nNo\\nYes\\nNo\\nNo\\n'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('fced') == \"Yes\"\nassert solution('xyz') == \"Yes\"\nassert solution('r') == \"Yes\"\nassert solution('dabcef') == \"Yes\"\nassert solution('az') == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"No\"\nassert solution(\"abcddc\") == \"Yes\"\nassert solution(\"adcbc\") == \"Yes\"\nassert solution(\"bccbc\") == \"No\"\nassert solution(\"ccad\") == \"Yes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('yz') == 'Yes'\nassert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == 'Yes'\nassert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n\n\n\n-----Answer-----"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('az\\naa\\nbad\\nbabc') == 'No\\nNo\\nNo\\nNo'\nassert solution('aa\\nbad\\nbabc') == 'No\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('inputs/00.in') == '7\\n2\\n1 2'\nassert solution('inputs/01.in') == '4\\n2\\n1 3\\n2 5'\nassert solution('inputs/02.in') == '2\\n1 3\\n4 5'\nassert solution('inputs/03.in') == '7\\n2\\n1 2'\nassert solution('inputs/04.in') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6\\n2\\n4 1 \\n'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7\\n2\\n3 2 \\n'\nassert solution('''1 0\n1000000\n''') == '0\\n0\\n'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\n\"\"\"\nThe array $a$ contains consecutive integers from $1$ to $n$.\nThe segments are defined as the indices $l_1, l_2, \\dots, l_m$ of the array and $r_1, r_2, \\dots, r_m$ of the array.\nThe value $a_i$ of the array is the value of the $i$-th element of the array.\nIt is guaranteed that the value of the array is positive.\n\nIn the given example the array $a$ is $[1, 2, 3, 4, 5, 6]$.\nThe array $b$ is the array obtained by applying the segments to the array $a$:\n\n$b_1 = a_1 - a_2 = -2$\n$b_2 = a_3 - a_4 = 3$\n$b_3 = a_5 - a_6 = -1$\n\nThe array $b$ is the array obtained by applying the segments to the array $a$:\n\n$b_1 = a_1 - a_3 = -3$\n$b_2 = a_2 - a_4 = 1$\n$b_3 = a_5 - a_6 = 2$\n\nThe value $\\max\\limits_{i=1}^{n}b_i - \\min\\limits_{i=1}^{n}b_i$ is the maximum possible value of the array $b$ minus the minimum possible value of the array $b$.\n\nThe number of segments is 4 and the segments are indicated in the following table:\n\n| Segment index | Value of the segment |\n| :-------------|:------------------|\n| 1             | $l_1$               |\n| 2             | $l_2$               |\n| 3             | $l_3$               |\n| 4             | $r_1$               |\n| 5             | $r_2$               |\n| 6             | $r_3$               |\n| 7             | $r_4$               |\n\nThe array $b$ is the array obtained by applying the segments to the array $a$:\n\n$b_1 = a_1 - a_3 = -3$\n$b_2 = a_2 - a_4 = 1$\n$b_3 = a_5 - a_6 = 2$\n\nIn the second example the array $b$ is the array obtained by applying the segments to the array $a$:\n\n$b_1 = a_1 - a_4 = -3$\n$b_2 = a_2 - a_5 = 1$\n\nThe value $\\max\\limits_{i=1}^{n}b_i - \\min\\limits_{i=1}^{n}b_i$ is the maximum possible value of the array $b$ minus the minimum possible value of the array $b$.\n\nIn the third example the array $b$ is the array obtained by applying the segments to the array $a$:\n\n$b_1 = a_1 - a_5 = -1$\n\nIn the fourth example the array $b$ is the array obtained by applying the segments to the array $a$:\n\n$b_1 = a_1 - a_5 = -1$\n\nIn the fifth example the array $b$ is the array obtained by applying the segments to the array $a$:\n\n$b_1 = a_1 - a_5 = -1$\n\nIn the sixth example the array $b$ is the array obtained by applying the segments to the array $a$:\n\n$b_1 = a_1 - a_5 = -1$\n\nThe answer is $0$ in this case.\n\"\"\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '1 2'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '0'\nassert solution('1 3 2 4 5') == '7'\nassert solution('2 -2 3 1 4') == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin)\n\n\"\"\""
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n100\\n') == '0'\nassert solution('2\\n0\\n10\\n10\\n3\\n3\\n') == '-2'\nassert solution('2\\n0\\n10\\n10\\n3\\n3\\n') == '2'\nassert solution('2\\n0\\n10\\n10\\n3\\n3\\n') == '2'\nassert solution('1\\n100\\n') == '-2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"2 1 5 4 3\") == \"4\"\nassert solution(\"7\") == \"LRLRLLL\"\nassert solution(\"1 3 5 6 7 4 2\") == \"LRLRLLL\"\nassert solution(\"3\") == \"LLL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3') == '3\\nLLL'\nassert solution('4\\n1 2 4 3') == '4\\nLLRL'\nassert solution('7\\n1 3 5 6 7 4 2') == '7\\nLRLRLLL'\n\n\n-----Solution Details-----\n\n\"\"\"\n###############################################################################\n##    Copyright 2016 The HighwaySimulator Authors\n##    https://github.com/HighwaySimulator/\n##            highway_simulator/blob/master/highway_simulator/\n##            probability/probability_continuous.py\n##\n##    Please see the accompanying LICENSE file for copyright and license terms.\n##\n###############################################################################"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('1 2 3') == 'LRRR'\nassert solution('2 1 5 4 3') == '4'\nassert solution('1 2 4 3') == 'LRLRLLL'\nassert solution('1 2 4') == 'LLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2\\n') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3\\n') == '3\\nLLL'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL'\n\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == 'LLL'\nassert solution('1\\n3\\n2') == 'LLL'\nassert solution('1\\n2\\n1') == 'LLL'\nassert solution('1\\n2\\n2') == 'LLRL'\nassert solution('1\\n1\\n1') == 'LLR'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('2 1 5 4 3') == '4'\nassert solution('7') == 'LRLRLLL'\nassert solution('1 3 5 6 7 4 2') == '7'\nassert solution('3') == 'LLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"\n\n\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == 'LLL'\nassert solution('''3\n1 2 3''') == 'LLL'\nassert solution('''4\n1 2 4 3''') == 'LLRL'\nassert solution('''4\n4 3 5 6 7''') == 'LLRL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '4'\nassert solution('6 5 4 3 2 4 3') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n1 2 5 3 4\\n4\\n2 3\\n2 4 3 1 4\\n2\\n2 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"\nassert solution(\"2\\n1 2\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\n'''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''4\n1 2 3 4\n''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 5 3 4') == '4'\nassert solution('2\\n1 2') == '2'\nassert solution('7\\n6 5 4 3 2 4 3') == '2'\nassert solution('1\\n1') == '1'\nassert solution('10\\n
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n'''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('1 2 5 3 4') == '4'\nassert solution('1 2') == '2'\nassert solution('1 2 3 4') == '4'\nassert solution('6 5 4 3 2 4 3') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1 2') == '1'\nassert solution('1\\n1 2 2') == '2'\nassert solution('1\\n1 2 2 4') == '1'\nassert solution('1\\n1 2 2 4 5') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 3 3') == '0'\nassert solution('1 2 3 3 3 4') == '1'\nassert solution('1 2 3 3 3 3') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('5\\n1 2 2 4 5\\n1 2 2 4 5') == '1'\nassert solution('5\\n1 2 3 3 3\\n1 2 3 3 3') == '0'\nassert solution('5\\n1 2 3 3 3\\n1 2 3 3 3') == '0'\nassert solution('5\\n5 5 5 5 5\\n1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(f\"Finished running '{sys.argv[0]}'\")"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 2 4 5\\n') == '1'\nassert solution('1 2 3 4 5\\n') == '2'\nassert solution('1 2 3 3 3\\n') == '0'\nassert solution('1 2 3 3 3 3\\n') == '0'"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''9 3\n1 2 3 3 4 5 6 7 8 9''') == '4'\nassert solution('''2 3\n1 2''') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '2'\nassert solution('1\\n5') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 3 3\") == \"0\"\nassert solution(\"1 2 3 3 3 3\") == \"0\"\nassert solution(\"1 2 3 3 3 3\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''6 3\n1 2 3 4 5 6''') == '2'\nassert solution('''4 4\n1 2 3 4 5''') == '1'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10''') == '6'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 10') == '5'\nassert solution('8 9 9') == '2'\nassert solution('8 9 9') == '2'\nassert solution('100 1000 100') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('6 3 5') == '2'\nassert solution('10 3 10') == '5'\nassert solution('1 0 0') == '0'\nassert solution('100 0 0') == '1'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('2 7 2') == '2'\nassert solution('10 9 5') == '4'\nassert solution('10 9 2') == '6'\nassert solution('20 10 4') == '2'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 1 1') == '0'\nassert solution('10 10 10') == '9'\nassert solution('100 10 10') == '99'\nassert solution('101 100 1') == '100'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\n\"\"\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 9 8\") == \"4\"\nassert solution(\"8 9 8\") == \"4\"\nassert solution(\"10 100 100\") == \"10000\"\nassert solution(\"9 23 34\") == \"0\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 3 0') == '0'\nassert solution('2 4 4') == '3'\nassert solution('2 4 1') == '1'\nassert solution('2 3 1') == '1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3''') == '48'\nassert solution('''1\n8''') == '-1'\nassert solution('''2\n8\n1''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3''') == '48'\nassert solution('''2\n8''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"4\"\nassert solution(\"1\\n2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"-1\"\nassert solution(\"2\\n2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"2\"\nassert solution(\"2\\n4\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"-1\"\nassert solution(\"2\\n4\\n8\\n8 2 12 6 4 24 16 3\\n1\\n3\\n\") == \"3\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n2\\n1\") == \"1\"\nassert solution(\"1\\n1\\n2\\n1\") == \"1\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n5\n6 4 3 2 1\n1\n2\n''') == '-1'\nassert solution('''8\n7\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\nassert solution('''8\n10\n7 3 5 1 2 4 6 8\n1\n1\n''') == '-1'\nassert solution('''8\n10\n9 3 2 1 4 7 5 6\n1\n1\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2\n2 2\n2 2\n2\n2\n2 2\n2 2\n2\n2\n''') == '4'\nassert solution('''8\n8 2 12 6 4 24 16 3\n4\n2\n2\n2 2\n2 2\n2 2\n2 2\n2 2\n2\n2\n''') == '2'\nassert solution('''8\n8 2 12 6 4 24 16 3\n4\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n4\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8''') == '48'\nassert solution('''8 2 12 6 4 24 16 3''') == '48'\nassert solution('''1''') == '-1'\nassert solution('''2''') == '-1'\nassert solution('''1 2''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2 2\n''') == '4'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n1 2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2 2\n1 2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n1 2\n2 2\n1 2\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1\n1''') == '1'\n\nassert solution('''3\n1\n2\n4''') == '-1'\n\nassert solution('''3\n3\n2 3 2\n1\n3''') == '3'\n\nassert solution('''3\n3\n4 4 2 3\n2\n1 1''') == '1'\n\nassert solution('''2\n3\n3 2\n2\n1 2''') == '2'"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n10\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n1\n1\n''') == '4'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"8\n8 2 12 6 4 24 16 3\n1\n2\n\"\"\") == \"48\"\nassert solution(\n\"\"\"2\n8\n8 2 12 6 4 24 16 3\n1\n2\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n\"\"\"\n\n\"\"\"\n    Notes:\n    1. In this solution I was interested in understanding the result from removing the same element more than once. I came up with the approach below.\n    2. We can use the second approach if we don't care about duplicates. However the second approach is more readable.\n    3. If you are interested in seeing the complexity of the second approach, the best way to solve the problem is to reverse the logic.\n    4. The complexity of the second approach is O(n log n) due to the sorting algorithm used. It is not bad for large input.\n    5. There is another approach I found which is O(n) in time and O(1) in space. I took it.\n\"\"\"\n\"\"\"\n    Two things to keep in mind:\n    1. We want to find the first occurrence of a number.\n    2. We need to sort the array.\n    3. If the occurrence is one we want to keep the rightmost one.\n    4. If the occurrence is more than one we need to find the rightmost occurrence.\n\n    Following is the implementation:\n    1. We start with a counter variable.\n    2. We use a for-loop to iterate over the array.\n    3. We update the counter variable by one.\n    4. We check if the counter variable is equal to the number we are looking for (1). If yes then we return the counter variable.\n    5. If the counter variable is not equal to the number we are looking for we increment the counter variable by one.\n    6. After the first loop we return the counter variable because we already found the number that we are looking for.\n    7. However if the number we are looking for is less than one we need to find the rightmost occurrence.\n    8. We start with a counter variable.\n    9. We use a for-loop to iterate over the array.\n    10. We update the counter variable by one.\n    11. We check if the counter variable is equal to the number we are looking for (1). If yes we update the rightmost counter variable.\n    12. If the counter variable is not equal to the number we are looking for we increment the counter variable by one.\n    13. After the first loop we return the rightmost counter variable.\n\n    Complexity:\n    Time: O(n)\n    Space: O(n)\n\"\"\""
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n\n'''"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\n2\\n2\\n3\\n1') == '2\\n1\\n2\\n3'\nassert solution('2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1') == '2\\n1'\nassert solution('2\\n1\\n2\\n2\\n3\\n1\\n1') == '2\\n1\\n2\\n3'\nassert solution('2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1') == '2\\n1\\n1\\n1'\nassert solution('2\\n1\\n2\\n2\\n3\\n1\\n1\\n1\\n1\\n1') == '2\\n1\\n2\\n3'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n6 6 6 6 6') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 3 4\n''') == \"3\"\n\nassert solution('''4\n1 2 3 4\n''') == \"3\"\n\nassert solution('''10\n1 2 2 4 2 4 2 4 1\n''') == \"2\"\nassert solution('''10\n5 6 5 6 5 6 5 6 5\n''') == \"5\"\nassert solution('''10\n6 6 6 6 6 6 6 6 6\n''') == \"1\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5 5 1 6 1') == '3', 'first test'\nassert solution('2 4 2 4 4') == '2','second test'\nassert solution('6 6 6 6 6') == '1', 'third test'\nassert solution('6 6 6 6 6') == '1', 'fourth test'\nassert solution('1 1 1 1 1') == '0', 'fifth test'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6\\n6\\n6\\n6\\n6\") == \"1\\n6\\n\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"2\\n\"\nassert solution(\"3\\n3\\n3\\n3\\n3\") == \"3\\n3\\n\"\nassert solution(\"4\\n4\\n4\\n4\\n4\") == \"4\\n\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"5\\n\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 2 4 4') == '2'\nassert solution('1 5 5 1 6 1') == '3'\nassert solution('6 6 6 6 6 6') == '1'\nassert solution('6 6 6 6 6 6 6') == '1'\nassert solution('2 4 2 4 4') == '2'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\\n\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\\n\") == \"1\\n6\"\nassert solution(\"5\\n6 6 6 6 6\\n\") == \"1\\n6\"\nassert solution(\"5\\n6 6 6 6 6\\n\") == \"1\\n6\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''432''') == '435'\nassert solution('''99''') == '103'\nassert solution('''237''') == '237'\nassert solution('''42''') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n\"\"\""
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n432\n''') == '435'\nassert solution(\n'''\n99\n''') == '103'\nassert solution(\n'''\n237\n''') == '237'\nassert solution(\n'''\n42\n''') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''432''') == '435'\nassert solution('''99''') == '103'\nassert solution('''237''') == '237'\nassert solution('''42''') == '44'\n\nprint('all tests passed successfully')\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n\n\"\"\""
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\t\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"\\n1\") == \"1\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44\n\n\"\"\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n\nprint('Test cases passed')"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abba\") == \"codeforces\"\n\n\n-----Best Speed-----\n\n- 79.62%\n\n-----Average Speed-----\n\n- 61.36%\n\n-----Note for submissions-----\n\nFor each test case, the string $s$ will be of length between $1$ and $50$.\n\nFor each test case, the length of the array $b$ will be between $1$ and $30$\n\nThe sum of all the elements of the array $b$ will be between $1$ and $10$\n\nThe sum of all the elements of the array $b$ will be between $1$ and $10$\n\nNote that the string $s$ can be arbitrary.\n\nNote that the array $b$ can be arbitrary.\n\n-----Template------"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n---\n\nThis is a famous problem in the world of competitive programming. We have a string $s$ containing only lowercase Latin letters ('a'-'z'). We have a sequence of integers, $b_1, b_2, \\ldots, b_m$, where $b_i$ is the sum of the distances $|i-j|$ from the index $i$ to all such indices $j$ that $s_j > s_{i-1}$. Your task is to find the last index of the string $s$ such that the distance from it to all other indices is the least possible.\n\nFor example, for the string $s$ = \"abz\", the distance between the index $0$ and all other indices is $|0-1|+|0-2|+|0-3|=2+1+0=2$ and the distance between the index $1$ and all other indices is $|1-0|+|1-2|+|1-3|=1+2+3=6$. The index of the string $s$ with the least distance is the last index, so $s_1$ is the last index of $s$ (since $s_1>s_0$). \n\nFor the example above, the answer is $1$, which corresponds to the index $0$.\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 10^5$) \u2014 the number of test cases. Each test case contains a single string $s$ of length $n$, consisting of lowercase English letters ('a'-'z'). The second line contains $n$ integers, $b_1, b_2, \\ldots, b_n$, where $b_i$ is the sum of the distances from $i$ to all such indices $j$ that $s_j > s_{i-1}$. \n\nIt is guaranteed that in each test case an answer exists.\n\n-----Output-----\n\nOutput $n$ lines \u2014 the last index of the string $s$ which corresponds to the answer to the $i$-th test case.\n\n\n-----Example-----\nInput\n5\na\n1\n2\n3\n4\n5\n\nOutput\n2\n0\n3\n1\n2\n0\n\nNote\n\nThe first line contains a single integer $q$ \u2014 the number of test cases in the test.\n\nEach test case contains a single string $s$ of length $n$, consisting of lowercase English letters ('a'-'z').\n\nThe second line contains $n$ integers, $b_1, b_2, \\ldots, b_n$, where $b_i$ is the sum of the distances from $i$ to all such indices $j$ that $s_j > s_{i-1}$.\n\nIt is guaranteed that in each test case an answer exists.\n\n\n------\n\n[Euler's Theorem]:\n\n$S_n=\\sum_{i=1}^n \\sum_{j=1}^{n}[n-j] \\times |n-j|$\n\nIf the sum is $m$, then the difference between $m$ and $S_n$ is the minimum possible difference.\n\n---\n\nThe last index of the string $s$ such that the distance from it to all other indices is the least possible is the last index of $s$ such that the distance from it to all other indices is the smallest possible.\n\nIf there are several such indices, the last index is the last index with the smallest distance.\n\nFor example, for the string $s$ = \"abz\", the distance between the index $0$ and all other indices is $|0-1|+|0-2|+|0-3|=2+1+0=2$ and the distance between the index $1$ and all other indices is $|1-0|+|1-2|+|1-3|=1+2+3=6$. The index of the string $s$ with the smallest distance is the last index, so $s_1$ is the last index of $s$ (since $s_1>s_0$). \n\nFor the example above, the answer is $1$, which corresponds to the index $0$.\n\n-----Input-----\n\nThe first line contains a single integer $q$ \u2014 the number of test cases in the test.\n\nEach test case contains a single string $s$ of length $n$, consisting of lowercase English letters ('a'-'z').\n\nThe second line contains $n$ integers, $b_1, b"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''a\n2\n1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\nassert solution('''a\n2\n1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'a'\nassert solution('''a\n2\n1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\nassert solution('''a\n2\n1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'a'\nassert solution('abc') == 'a'\nassert solution('aab') == 'b'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n    \n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"input/1.txt\").read()) == open(\"output/1.txt\").read()\nassert solution(open(\"input/2.txt\").read()) == open(\"output/2.txt\").read()\nassert solution(open(\"input/3.txt\").read()) == open(\"output/3.txt\").read()\nassert solution(open(\"input/4.txt\").read()) == open(\"output/4.txt\").read()\nassert solution(open(\"input/5.txt\").read()) == open(\"output/5.txt\").read()\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ecoosdcefr') == 'codeforces'\nassert solution('fdsfdsfdsfdsfdsffd') == 'fdsfdsfdsfdsfdsffd'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n\n\n\n\"\"\"\n----SOLUTION----"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdefghijklmnopqrstuvwxyz') == 'bcdefghijklmnopqrstuvwxyz'\nassert solution('a') == 'a'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'bcdekhi'\nassert solution('abcdefghijklmnopqrstuvwxyz'*10) == 'bcdekhi'\nassert solution('abcdefghijklmnopqrstuvwxyz'*100) == 'bcdekhi'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2') == 'b'\nassert solution('1000000000000001') == 'dog'\nassert solution('27') == 'ab'\nassert solution('701') == 'aac'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == 'a'\nassert solution('27') == 'az'\nassert solution('5') == 'z'\nassert solution('100') == 'zy'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == 'b'\nassert solution('''26''') == 'z'\nassert solution('''701''') == 'zy'\nassert solution('''18277''') == 'zzz'\nassert solution('''475253''') == 'zzzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n''') == 'b'\nassert solution('''26\n''') == 'z'\nassert solution('''27\n''') == 'aa'\nassert solution('''728\n''') == 'zy'\nassert solution('''18278\n''') == 'zzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n''') == 'b'\n\nassert solution('''2\n''') == 'ab'\n\nassert solution('''3\n''') == 'abc'\n\nassert solution('''4\n''') == 'abcd'\n\nassert solution('''5\n''') == 'abcdee'"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2]"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 'b'\nassert solution('2') == 'a'\nassert solution('3') == 'c'\nassert solution('4') == 'd'\nassert solution('5') == 'e'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123') == 'b'\nassert solution('5') == 'a'\nassert solution('2') == 'z'\nassert solution('3') == 'z'\nassert solution('4') == 'a'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 'b'\nassert solution('100') == 'z'\nassert solution('101') == 'aa'\nassert solution('3') == 'ba'\nassert solution('26') == 'z'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''to be or not to be\n''') == '12'\n\nassert solution('''a ab a a b ab a a b c\n''') == '13'\n\nassert solution('''aa bb aa aa bb bb\n''') == '11'"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''to be or not to be\n''') == '12'\nassert solution(\n'''a ab a a b ab a a b c\n''') == '13'\nassert solution(\n'''aa bb aa aa bb bb\n''') == '11'\nassert solution(\n'''aa bb aa aa bb bb\n''') == '11'\nassert solution(\n'''aa bb aa aa bb bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\nto be or not to be\n''') == '12'\n\nassert solution('''10\na ab a a b ab a a b c\n''') == '13'\n\nassert solution('''6\naa bb aa aa bb bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n6\nto be or not to be\n\n''') == '12'\n\nassert solution('''\n10\na ab a a b ab a a b c\n\n''') == '13'\n\nassert solution('''\n6\naa bb aa aa bb bb\n\n''') == '11'\n\nassert solution('''\n8\na ab aa aa bb bb aa aa bb\n\n''') == '17'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(30000)\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a bb aa aa bb bb') == 'a AAAB AAAB c'\nassert solution('aa bb aa aa bb bb') == 'a AAAB AAAB c'\nassert solution('aa bb aa aa bb bb') == 'a AAAB AAAB c'\nassert solution('aa bb aa aa aa bb bb') == 'a AAAB AAAB c'\nassert solution('aa bb aa aa aa aa bb bb') == 'a AAAB AAAB c'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4000\\n2 2'\n\"\"\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nres = 0\n\nfor i in range(1, n):\n    res += max(a[i - 1:i + k])\nprint(res)\nfor i in range(k):\n    print(a[i], end=\" \")\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('input') == '4000'\n'''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n8 3\n5 4 2 6 5 1 9 2\n\"\"\") == \"20\"\n\nassert solution(\n\"\"\"\n5 1\n1 1 1 1 1\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n4 2\n1 2000 2000 2\n\"\"\") == \"4000\"\n\nassert solution(\n\"\"\"\n5 1\n1 1 1 1 1\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n5 1\n1 3 4 2\n\"\"\") == \"2\""
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('2\\n1\\n1\\n1\\n') == '4000\\n2 2\\n'\nassert solution('3\\n1\\n1\\n1\\n1') == '4000\\n1 1 1 1\\n1\\n'\nassert solution('2\\n1\\n1\\n1\\n2') == '4000\\n2 2\\n'\nassert solution('4\\n1\\n1\\n1\\n2') == '4000\\n2 2\\n'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3\\n5 4 2 6 5 1 9 2') == '20\\n3 2 3'\nassert solution('5 1\\n1 1 1 1 1') == '1\\n5'\nassert solution('4 2\\n1 2000 2000 2') == '4000\\n2 2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '5050\\n7 7'\nassert solution('5\\n1 1 1 1 1') == '1\\n5'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3\\n5 4 2 6 5 1 9 2') == '20\\n3 2 3'\nassert solution('5 1\\n1 1 1 1 1') == '1\\n5'\nassert solution('4 2\\n1 2000 2000 2') == '4000\\n2 2'\nassert solution('3 4\\n1 1 1 1') == '1\\n2 2'\nassert solution('5 3\\n1 1 1 1 1') == '1\\n2 2'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4000'\n\n'''\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nassert solution('''10 1\n1 1 1 1 1 1 1 1 1 1''') == '1'\nassert solution('''20 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 2\") == '20\\n3 2 3'\nassert solution(\"5 1\") == '1\\n5'\nassert solution(\"4 2\") == '4000\\n2 2'\nassert solution(\"1000 1000\") == '20002000'\nassert solution(\"2 2\") == '2000 2000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2 3'\nassert solution('2 1') == '1'\nassert solution('5 1') == '5'\nassert solution('1 2') == '1 2'\nassert solution('10 11') == '10 11'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4\n1 -5 3 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"5\n4 -2 3 -9 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"9\n-1 1 -1 1 -1 1 1 -1 -1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"8\n16 -5 -11 -15 10 5 4 -4\n\"\"\") == \"3\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 -5 3 2\n''') == '1'\n\nassert solution('''\n4\n1 -5 3 2\n''') == '0'\n\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\nassert solution('''\n4\n-3 3 -2 2\n''') == '0'"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1''') == ''\nassert solution('''2''') == ''\nassert solution('''3''') == ''\nassert solution('''4''') == ''\nassert solution('''5''') == ''\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n1 -5 3 2\n''') == '1'\nassert solution(\n'''\n5\n4 -2 3 -9 2\n''') == '0'\nassert solution(\n'''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution(\n'''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\nimport sys\nsys.setrecursionlimit(10000)\nn = int(input())\na = [int(x) for x in input().split()]\nres = [float('inf')]\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\nassert solution('''1\n1\n-1 -1\n''') == '0'"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n'''\nassert solution('''1\n1\n''') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\nassert solution('''8\n2 1 -1 1 -1 1 -1 1 1\n''') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n'''"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 -5 3 2\\n') == '1'\nassert solution('5\\n4 -2 3 -9 2\\n') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n100\\n') == '0'\nassert solution('2\\n2\\n') == '2'\nassert solution('5\\n5\\n') == '0'\nassert solution('2\\n2000000000\\n') == '1000000000'\nassert solution('1\\n1000000000\\n') == '0'\n\n\n\n\"\"\""
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2\\n10\\n1000000000\\n2000000000'\nassert solution('''10\n1 100\n2 1000000000\n3 10000000000\n4 10000000000000\n5 1000000000000000\n6 10000000000000000\n7 100000000000000000\n8 1000000000000000000\n9 1000000000000000000000\n''') == '0\\n10\\n1000000000000000000\\n1000000000000000000000\\n1000000000000000000000000\\n100000000000000000000000000000000000\\n100000000000000000000000000000000000000\\n10000000000000000000000000000000000000000000'\n'''\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1\n1\n3''') == '0\\n1\\n3'\nassert solution('''2\n3\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n'''\n------Description------\n\nWrite a function that takes as input an array of non-negative integers representing the values of a histogram (i.e. an array such that each value is the number of times that value appears in the array) and returns a boolean value that indicates if the input array is a histogram (i.e. if the value each array element represents is the number of occurrences of the value in the array).\n\nA histogram is a type of frequency distribution. It is often used in statistics to examine a numerical array. An array is a histogram if the value of each element in the array is equal to the number of times that element occurs in the array.\n\nFor example, consider the array $a=[0, 1, 2, 2, 2, 3]$, which is a histogram. The value each element represents is the number of times that that element is in the array.\n\nIn the above array, the value 0 occurs 1 times. The value 1 occurs 3 times. The value 2 occurs 3 times. The value 3 occurs 2 times. The sum of the values in the array is 3+2+3+2+2+3 = 18.\n\nThe input array is guaranteed to be a histogram.\n\nYour function should return a boolean value that indicates if the input array is a histogram or not.\n\nIf the input array is a histogram, your function should return the value $true$; otherwise it should return the value $false$.\n\nFor example, the input array $a=[0, 1, 2, 2, 2, 3]$ is a histogram, so your function should return the value true.\n\nThe input array $a=[0, 1, 2, 3]$ is not a histogram, so your function should return the value false.\n\nWe can assume that all the input values in the array will be integers in the range [0, 1000] and that the number of elements in the array will be between 0 and 1000.\n\n--\n\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1\n2 2''') == '0'\nassert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\nassert solution('''1 100\n2 1000000000\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''1 100\n2 100\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\nassert solution('''1 100\n2 200\n5 5\n2 1000000000\n1000000000 1000000000''') == '1000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == '1 2 1 2 1 2 1 2 1 2'\nassert solution('9') == '0'\nassert solution('1 1000000000') == '0'\nassert solution('100000000000 1000000000') == '0'\nassert solution('1000000000000 1000000000') == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 100\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"2 1000000000\") == \"2\"\nassert solution(\"1000000000 1000000000\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n'''\n\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n'''\n\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n\nassert solution('''6\n1 1000\n2 1000000\n3 100000\n4 100\n5 100\n6 1000000\n''') == '0\\n2\\n10\\n2\\n20\\n2\\n20'\n'''\nNote: This solution runs in O(N log(N)) time for a sufficiently large $N$.\n'''\n\nfrom sys import stdin\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"77\") == \"4\"\nassert solution(\"777\") == \"4\"\nassert solution(\"7777\") == \"4\"\nassert solution(\"77777\") == \"4\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('101') == 4\nassert solution('7') == 1\nassert solution('77') == 2\nassert solution('777') == 3\nassert solution('7777') == 4\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\") == -1\nassert solution(\"7\") == 4\nassert solution(\"101\") == 4\nassert solution(\"101\") == -1\nassert solution(\"9999\") == -1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('101') == '4'\nassert solution('101') == '4'\nassert solution('101') == '4'\nassert solution('101') == '4'\nassert solution('101') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == '4'\nassert solution('7') == '4'\nassert solution('7777') == '4'\nassert solution('777777') == '4'\nassert solution('77777777') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4'\nassert solution(stdin) == '4'\n\n\"\"\""
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '7'\nassert solution('77') == '77'\nassert solution('777') == '77'\nassert solution('7777') == '77'\nassert solution('7777777') == '77'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[-1]\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'\n\nassert solution('101') == '4'\n\nassert solution('100') == '-1'\n\nassert solution('11') == '1'\n\nassert solution('12') == '2'"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n'\n\n\"\"\""
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0\\n'\nassert solution('2\\n1') == '0\\n'\nassert solution('3\\n1') == '0\\n'\nassert solution('4\\n1') == '0\\n'\nassert solution('5\\n1') == '0\\n'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1') == '1'\nassert solution('3\\n1') == '0'\nassert solution('3\\n2') == '0'\nassert solution('3\\n3') == '0'\nassert solution('3\\n4') == '1'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4''') == '4'\nassert solution('''5 5''') == '1'\nassert solution('''15 8''') == '48'\nassert solution('''1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\nassert solution('''15 1 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n15\\n1 2 3 4 5') == '48'\nassert solution('1\\n15\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '1'\nassert solution('2\\n9\\n5 6 4 3 2 1') == '10'\nassert solution('2\\n9\\n4 3 2 1') == '10'\nassert solution('2\\n9\\n1 3 2 4 5') == '10'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\nassert solution('15 15\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\nassert solution('3 4\\n1 2 3') == '2'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\nassert solution('15 8\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '48'\nassert solution('15 8\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '0\\n'\nassert solution('2\\n2') == '1\\n'\nassert solution('2\\n1') == '0\\n'\nassert solution('5\\n4') == '4\\n'\nassert solution('15\\n8') == '48\\n'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5\\n1 2 3 4 5') == '1'\nassert solution('2 4 5 3 1\\n1 2 3 4 5') == '4'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\nassert solution('1 4 5 3 2 6\\n1 2 3 4 5 6') == '1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 15') == '1'\nassert solution('5 26') == '-1'\nassert solution('5 26') == '-1'\n\n\n'''\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n5 5 5 5 5') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1 1 2') == '4'\nassert solution('7 10') == '2'\nassert solution('5 15') == '1'\nassert solution('5 26') == '-1'\nassert solution('5 26') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '2'\nassert solution('2\\n3\\n') == '3'\nassert solution('2\\n4\\n') == '3'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('7 16\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n24 21 14 10') == '3'\nassert solution('2\\n500 500') == '0'\nassert solution('3\\n14 5 1') == '-1'\nassert solution('5\\n1 3 6 9 12') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n24 21 14 10''') == '3'\nassert solution('''2\n500 500''') == '0'\nassert solution('''3\n14 5 1''') == '-1'\nassert solution('''5\n1 3 6 9 12''') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\"\nassert solution(\"2\\n500 500\") == \"0\"\nassert solution(\"5\\n1 3 6 9 12\") == \"-1\"\nassert solution(\"2\\n14 5 1\") == \"1\"\nassert solution(\"3\\n14 5 1\") == \"0\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2') == '0'\nassert solution('2\\n1') == '-1'\nassert solution('2\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n1') == '-1'\nassert solution('2\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3') == '0'\nassert solution('1\\n1') == '-1'\nassert solution('1\\n2') == '-1'\nassert solution('1\\n5') == '-1'\nassert solution('1\\n42') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n\nassert solution('''6\n1 3 6 9 12 17\n''') == '5'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n22 2') == '0'\nassert solution('2\\n22 21 14') == '3'\nassert solution('2\\n222 222') == '-1'\nassert solution('2\\n222 222') == '-1'\nassert solution('2\\n11 11 11') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('24 21 14 10\\n4\\n24 21 14 10') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n9') == '0'\nassert solution('1\\n2\\n3\\n5') == '1'\nassert solution('2\\n1\\n2') == '2'\nassert solution('1\\n1\\n2') == '0'\nassert solution('2\\n2\\n1') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\n24 21 14 10\n''') == '3'\n\nassert solution(\n'''2\n500 500\n''') == '0'\n\nassert solution(\n'''3\n14 5 1\n''') == '-1'\n\nassert solution(\n'''5\n1 3 6 9 12\n''') == '1'\n\nassert solution(\n'''6\n1 1 1 1 1 1\n''') == '0'"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5') == '5'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6') == '6'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '7'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n1\\n2\\n3\\n4') == '3'\nassert solution('2\\n2\\n4\\n2\\n2\\n1\\n1') == '2'\nassert solution('4\\n2\\n1\\n1\\n1\\n2\\n1\\n2') == '2'\nassert solution('3\\n2\\n3\\n1\\n2\\n1\\n2') == '2'\nassert solution('2\\n2\\n1\\n1') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == \"5\"\nassert solution('''6 1\n36 4 1 25 9 16\n''') == \"2\"\nassert solution('''4 4\n1 10 100 1000\n''') == \"4\"\nassert solution('''4 5\n3 2 4 8 11\n''') == \"3\"\nassert solution('''5 5\n3 2 4 8 11\n''') == \"3\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '2'\nassert solution('5\\n1') == '3'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"8 10 3 6\") == \"8\"\nassert solution(\"9 10 2 8 9\") == \"-1\"\nassert solution(\"5 10 0 5\") == \"-1\"\nassert solution(\"5 11 22 4 3 2\") == \"5\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('10 10 5\\n10 5 3 6') == '7'\nassert solution('10 10 5\\n10 5 3 6') == '-1'\nassert solution('1 100 1\\n100 1') == '100'\nassert solution('1 100 1\\n100 1') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('5 1 0\\n0') == '-1'\nassert solution('5 10 7\\n8 10 3 6\\n6') == '7'\nassert solution('5 10 7\\n8 10 3 6\\n4') == '-1'\nassert solution('5 10 7\\n8 10 3 6\\n5') == '7'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str\n\n\"\"\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 10 7\") == \"8\"\nassert solution(\"3 6 5\") == \"-1\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 1 8\") == \"5\"\nassert solution(\"5 100 5\") == \"5\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"8 10 3 6\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 8 7\") == \"-1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('0 1 2') == '-1'\nassert solution('3 5 6') == '4'\nassert solution('5 2 6') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 6') == '-1'\nassert solution('2 2 1') == '2'\nassert solution('6 6 7') == '5'\nassert solution('6 7 4') == '4'\nassert solution('7 7 4') == '4'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n4\\n\") == \"No\\nNo\\nYes\\nNo\\nYes\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n4\\n5\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nYes\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n4\\n5\\n6\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\nYes\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n4\\n5\\n6\\n7\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nYes\\nNo\\nYes\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"3 2 2\\n3\\n3\\n\") == \"No\\nNo\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"2 1 1\\n1\\n1\\n\") == \"No\\nNo\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"3 4 4\\n3\\n3\\n1\\n2\\n2\\n\") == \"No\\nYes\\nNo\\nNo\\nYes\\nNo\"\nassert solution(\"1 1 1\\n1\\n1\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('5 2 1\\n1\\n3\\n2\\n3\\n') == 'No\\nNo\\nYes\\nNo\\nNo'\nassert solution('3 5 2\\n1\\n3\\n2\\n3\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('3 4 3\\n3\\n1\\n3\\n2\\n') == 'Yes\\nNo\\nYes\\nYes\\nNo\\n'\nassert solution('3 4 3\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nNo\\nYes\\nNo\\n'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''3 3 4\n1\n1\n2\n''') == 'Yes\\nYes\\nNo'\nassert solution('''3 3 4\n1\n2\n2\n''') == 'Yes\\nYes\\nYes'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''6 3 4\n3\n3\n3\n3\n2\n2\n''') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('2 3 4\\n2\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('1 3 3\\n1\\n1\\n1\\n1\\n1') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo'\nassert solution('1 3 3\\n1\\n1\\n1\\n1\\n1') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo'\nassert solution('1 3 3\\n1\\n1\\n1\\n1\\n1') == 'No\\nNo\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4\") == \"No\"\nassert solution(\"3 2 4\") == \"No\"\nassert solution(\"3 3 4\") == \"No\"\nassert solution(\"3 4 1\") == \"No\"\nassert solution(\"3 4 4\") == \"Yes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''3 1 2\n2\n1\n2\n''') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo'\nassert solution('''3 1 2\n2\n1\n3\n''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == \"YES\"\n\nassert solution('''3 4\n0 0 0 0\n0 0 0 0\n1 1 1 1\n''') == \"NO\"\n\nassert solution('''3 3\n0 0 0\n0 0 0\n1 1 1\n''') == \"YES\"\n\nassert solution('''3 4\n1 1 1 1\n1 1 1 1\n0 0 0 0\n''') == \"NO\"\n\nassert solution('''3 3\n1 1 1\n1 1 1\n0 0 0\n''') == \"NO\""
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1''') == 'YES'\nassert solution('''4 3\n0 0 0 0\n0 0 0 0\n1 1 1 1\n0 0 0 0''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"NO\\n000\\n000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"YES\\n010\\n0000\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"YES\\n01\\n01\"\nassert solution(\"2\\n2\\n1\\n\") == \"YES\\n10\\n00\"\nassert solution(\"4\\n2\\n1\\n0\\n\") == \"NO\\n10\\n11\"\nassert solution(\"3\\n3\\n1\\n1\\n1\\n\") == \"NO\\n11\\n01\"\nassert solution(\"3\\n2\\n1\\n1\\n1\\n\") == \"NO\\n11\\n01\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == \"YES\"\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == \"YES\"\nassert solution('''3 4\n0 0 0\n1 0 1\n1 1 0''') == \"NO\"\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == \"NO\""
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''3 4\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\nassert solution('''3 2\n0 0\n1 0\n1 1\n''') == 'YES'\nassert solution('''2 2\n0 1\n1 0\n''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'NO'\nassert solution('''2 2\n0 0 0\n0 0 0\n1 1 1''') == 'YES'\nassert solution('''2 2\n0 0 1\n0 0 1\n1 1 0''') == 'NO'\nassert solution('''1 1\n0 0''') == 'YES'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"Yes\"\nassert solution(\"200\") == \"No\"\nassert solution(\"369\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"101\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"36\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"1234\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('6') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\nassert solution('123456789') == \"No\"\nassert solution('12345678901') == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3738\") == \"Yes\"\nassert solution(\"237\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"101\") == \"No\"\nassert solution(\"0\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"100\") == \"No\"\nassert solution(\"200\") == \"Yes\"\nassert solution(\"10001100\") == \"Yes\"\nassert solution(\"1201\") == \"No\"\nassert solution(\"987654321\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"368\") == \"Yes\"\nassert solution(\"874\") == \"No\"\nassert solution(\"879\") == \"Yes\"\nassert solution(\"324\") == \"Yes\"\nassert solution(\"234\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\nassert solution('1') == \"Yes\"\nassert solution('9') == \"No\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 1''') == '5'\nassert solution('''6 2 1''') == '3'\nassert solution('''10 5 1''') == '3'\n'''\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('2 2 1') == 3\nassert solution('2 1 1') == 2\nassert solution('2 1 0') == 2\nassert solution('2 1 0 1') == 3\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2 1\") == \"5\"\nassert solution(\"6 2 1\") == \"3\"\nassert solution(\"9 3 0\") == \"4\"\nassert solution(\"9 4 0\") == \"3\"\nassert solution(\"9 5 0\") == \"2\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1''') == '3'\nassert solution('''1000000000 1 2 1''') == '10 ** 9'\n'''\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('10 2 1') == '5'\nassert solution('10 2 1') == '5'\nassert solution('10 2 1') == '5'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('7 2 1') == '4'\nassert solution('8 2 1') == '5'\nassert solution('9 2 1') == '6'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''3 5 2\n1 0 0 1 0\n''') == '3'\nassert solution('''4 7 3\n1 0 0 1 0\n''') == '3'\nassert solution('''1 2 1\n1 1 1 1\n''') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('6 2 1') == '3'\nassert solution('7 2 1') == '4'\nassert solution('7 2 1') == '4'\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\nassert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"112-37\") == 375\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n8-7+6-5+4-3+2-1-0\n''') == '4'\nassert solution(\n'''\n112-37\n''') == '375'\nassert solution(\n'''\n4+2+4+3-1+3-5-5-6+4+7-3-3\n''') == '6'\nassert solution(\n'''\n2+2\n''') == '-46'\nassert solution(\n'''\n2-5-2-2\n''') == '-10'\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nprint(solution(input()))\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\nassert solution('12*5-5') == 35\nassert solution('12*(5-5)') == 25\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('112-37') == 375\nassert solution('2+2') == -46\nassert solution('0') == 0\nassert solution('-35') == 35\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(read_input('''8-7+6-5+4-3+2-1-0\n''')) == read_input('''4\n''')\nassert solution(read_input('''2+2\n''')) == read_input('''-46\n''')\nassert solution(read_input('''112-37\n''')) == read_input('''375\n''')\nassert solution(read_input('''8-7+6-5+4-3+2-1-0\n''')) == read_input('''4\n''')\nassert solution(read_input('''2+2\n''')) == read_input('''-46\n''')\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\nassert solution(\"22*3\") == \"18\"\nassert solution(\"1+2+3\") == \"6\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nprint(solution(input()))\n\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''5 3''') == 'YES'\nassert solution('''5 4''') == 'YES'\nassert solution('''7 3''') == 'YES'\nassert solution('''3 1''') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('1 3') == 'YES'\nassert solution('1 4') == 'YES'\nassert solution('1 5') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"10 2\") == \"YES\\n2 1\\n1 3\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == 'YES'\nassert solution(input) == 'NO'\nassert solution(input) == 'NO'\nassert solution(input) == 'NO'\nassert solution(input) == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('13 4') == 'NO'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n''') == 'YES'\nassert solution('''10 4\n''') == 'YES'\nassert solution('''13 4\n''') == 'NO'\nassert solution('''26 6\n''') == 'NO'\nassert solution('''4 6\n''') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES\\n1 1\\n1 3\\n3 1\\n3 2\\n2 3\\n2 4\\n4 1\\n1 4\\n4 3\\n3 2\\n2 4\\n1 3'\n\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''10 4''') == 'YES'\nassert solution('''13 4''') == 'NO'\nassert solution('''15 4''') == 'NO'\nassert solution('''15 2''') == 'NO'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18\\n'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100\\n'\nassert solution('4 1 5\\n1 100 1 1\\n') == '-1\\n'\nassert solution('2 1 3\\n1 100 1 1\\n') == '-1\\n'\nassert solution('5 3 1\\n1 100 1 1\\n') == '-1\\n'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nassert solution('''1 10 30 30 70 10 10''') == '100'\nassert solution('''10 2 4 1''') == '10'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''10 30 30 70 10 10''') == '100'\nassert solution('''5 1 3''') == '18'\nassert solution('''7 2 4''') == '10'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 2 3\n5 1 3 10 1''') == '18'\n\nassert solution(\n'''6 1 5\n10 30 30 70 10 10''') == '-1'\n\nassert solution(\n'''4 3 1\n1 100 1 1''') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''10 30 30 70 10 10''') == '100'\n\n\n'''\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '100'\nassert solution('4 3 1\\n1 100 1 1\\n') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nassert solution('''5 5 5 5''') == '100'\nassert solution('''3 3 2''') == '18'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"12 6\") == \"15\"\nassert solution(\"011111\") == \"4\"\nassert solution(\"0011\") == \"4\"\nassert solution(\"10011\") == \"9\"\nassert solution(\"11000\") == \"4\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5 2\n00100\n\"\"\") == '3'\nassert solution(\n\"\"\"6 1\n000000\n\"\"\") == '21'\nassert solution(\n\"\"\"4 1\n0011\n\"\"\") == '4'\nassert solution(\n\"\"\"12 6\n000010000100\n\"\"\") == '15'\nassert solution(\n\"\"\"10 9\n00000001100000\n\"\"\") == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 2\") == \"\"\nassert solution(\"5 2\\n00100\") == \"\"\nassert solution(\"5 2\\n00100\\n00100\") == \"\"\nassert solution(\"5 2\\n00100\\n00100\\n00100\") == \"\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n01001') == '3'\nassert solution('1 1\\n1') == '1'\nassert solution('2 1\\n000000') == '4'\nassert solution('12 6\\n000010000100') == '15'\n\n\n-----\n\nFor tests, the function do not have to be written. It's also fine to have comments in this function.\n\"\"\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == '3'\nassert solution('5 2') == '3'\nassert solution('4 1') == '4'\nassert solution('6 1') == '15'\nassert solution('12 6') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '21'\nassert solution('''4 1\n0011''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '21'\nassert solution('''4 1\n0011''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\nassert solution('''9 1\n00000001000000''') == '18'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1,10') == '1'\nassert solution('10') == '1'\nassert solution('1,1,0,0,0') == '2'\nassert solution('0011') == '4'\nassert solution('000010000100') == '15'"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n0111') == '3'\nassert solution('3 2\\n0011') == '4'\nassert solution('6 1\\n000000') == '15'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\n\n\n\n##hexa\n\n\"\"\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n00100\\n') == '3'\nassert solution('6 1\\n000000\\n') == '21'\nassert solution('12 6\\n000010000100\\n') == '15'\nassert solution('4 1\\n0011\\n') == '4'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"crosby\") == \"No\"\nassert solution(\"racer\") == \"No\"\nassert solution(\"crosby\") == \"No\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('apple') == 'No'\nassert solution('appl') == 'No'\nassert solution('app') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\nassert solution('axzle') == 'Yes'\nassert solution('azzel') == 'Yes'\nassert solution('bazzel') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\nprint(\"Asserts passed\")\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('ddd') == 'No'\nassert solution('z') == 'Yes'\nassert solution('zz') == 'No'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('eagle') == 'No'\nassert solution('elephant') == 'No'\nassert solution('z') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('abcde') == 'No'\nassert solution('apple') == 'No'\nassert solution('x') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('abba') == 'No'\nassert solution('aba') == 'Yes'\nassert solution('zzz') == 'Yes'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2 3 5 4\\n'\n'1 4 3 2 4\\n'\n'1 2 2 1 4\\n'\n'1 1 1 1 2\\n'\n'1 1 2 2 1\\n'\n'1 1 1 1 1') == '6\\n1'\nassert solution('0 2 3 5 4\\n'\n'1 4 3 2 4\\n'\n'1 2 2 1 4\\n'\n'1 1 1 1 2\\n'\n'1 1 2 2 1\\n'\n'1 1 1 1 1') == '5\\n1'\nassert solution('0 2 3 4 4\\n'\n'2 4 2 3 3\\n'\n'2 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1') == '3\\n0'\nassert solution('0 2 3 4 4\\n'\n'2 4 2 3 3\\n'\n'2 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1') == '3\\n0'\nassert solution('0 2 3 4 4\\n'\n'2 4 2 3 3\\n'\n'2 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1\\n'\n'1 1 1 1 1') == '3\\n0'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n10 3\n5 2\n''') == '4'\n\nassert solution('''5 3\n7 3\n2 1\n2 3\n1 2\n''') == '3'\n\nassert solution('''3 2\n1 2\n1 2\n1 2\n''') == '-1'\n\nassert solution('''4 3\n1 2\n1 2\n1 2\n1 2\n''') == '-1'\n\nassert solution('''5 4\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == '-1'"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\nassert solution('''\n1 2 3\n1 2 3\n1 2 3\n''') == '10'\nassert solution('''\n100000 2 2 1\n100000 2 2 1\n100000 2 2 1\n''') == '18'\nassert solution('''\n10 0 0\n0 0 0\n0 0 0\n''') == '0'\nassert solution('''\n10 0 0\n0 0 0\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 7\\n1 3 6\\n2 5 10') == '2\\n1\\n2'\nassert solution('3 3\\n1 3 4\\n1 2 2\\n3 1 3') == '3\\n1\\n2\\n3'\nassert solution('1 1\\n2 1\\n1 1') == '2\\n1\\n1'\nassert solution('3 2\\n1 2 3\\n2 1 2\\n2 1 3') == '3\\n1\\n2\\n2'\nassert solution('4 4\\n1 2 3 4\\n1 3 4 1\\n1 4 3 1\\n2 4 2\\n2 3 2\\n3 4 1\\n3 2 2\\n4 1 4') == '3\\n1\\n1\\n1'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"The minimum amount of money needed is 3100 yen.\"\n\"\"\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n3 1 1\\n1 1 1\\n1 1 1\\n3 1 1\\n1 1 1\"\n) == \"0\\n3 1 1\\n3 1 1\\n2 2 2\"\nassert solution(\n    \"6\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\"\n) == \"3\\n3 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n3 1 1\"\nassert solution(\n    \"7\\n3 3 3\\n3 3 3\\n3 3 3\\n3 3 3\\n3 3 3\\n3 3 3\"\n) == \"4\\n3 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n3 1 1\""
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n1') == '1\\n1'\nassert solution('3\\n2\\n1') == '1\\n1'\nassert solution('4\\n3\\n2\\n1') == '1\\n2'\nassert solution('4\\n4\\n1\\n2') == '0'\nassert solution('4\\n3\\n2\\n1') == '2\\n3'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '10'\nassert solution('''\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '1'\nassert solution('''\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '100'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n'\n                '2 1\\n'\n                '3 2\\n'\n                '4 3\\n'\n                '1 5\\n'\n                '2 1\\n'\n                '3 2\\n'\n                '4 3') == '26'\nassert solution('5\\n'\n                '3 1\\n'\n                '1 1\\n'\n                '2 1\\n'\n                '5 1\\n'\n                '5 5') == '-1'\nassert solution('5\\n'\n                '2 2\\n'\n                '1 1\\n'\n                '2 1\\n'\n                '4 1\\n'\n                '3 1') == '5'\nassert solution('4\\n'\n                '2 2\\n'\n                '1 1\\n'\n                '2 1\\n'\n                '1 1') == '-1'\nassert solution('2\\n'\n                '1 1') == '0'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 700\n3 500\n5 800\n'''\n) == '4'\n\nassert solution(\n'''2 700\n3 500\n5 800\n'''\n) == '1'\n\nassert solution(\n'''2 700\n3 500\n5 800\n'''\n) == '1'\n\nassert solution(\n'''2 710\n3 500\n5 800\n'''\n) == '3'\n\nassert solution(\n'''2 710\n3 500\n5 800\n'''\n) == '2'"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 1') == ''\nassert solution('1 0') == ''\nassert solution('1 100') == '1'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''2 700\n3 500\n5 800\n3 300\n2 100''') == '2'\nassert solution('''2 700\n3 500\n5 800\n3 300\n2 100\n2 100\n1 100''') == '3'\nassert solution('''2 700\n3 500\n5 800\n3 300\n2 100\n2 100\n2 100''') == '3'\nassert solution('''2 700\n3 500\n5 800\n3 300\n2 100\n2 100\n2 100\n2 100''') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '1'\nassert solution('2 10') == '0'\nassert solution('5 1000') == '0'\nassert solution('1 10') == '0'\nassert solution('5 8') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 4') == '2'\nassert solution('4 5') == '2'\nassert solution('5 6') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5') == '4'\nassert solution('2 6') == '1'\nassert solution('2 10') == '4'\nassert solution('2 100') == '5'\nassert solution('2 200') == '6'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '1'\nassert solution('5 800') == '5'\nassert solution('3 1') == '2'\nassert solution('3 10') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('1 0\\n0 0') == '1'\nassert solution('2 100\\n3 500\\n5 800') == '5'\nassert solution('5 100\\n3 500\\n5 800') == '5'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 10') == '1'\nassert solution('7 10') == '1'\nassert solution('7 15') == '2'\nassert solution('9 100') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('7\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('6\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('5\\n4 8 8 7 8 4 4 5\\n') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('3\\n2') == '1'\nassert solution('4\\n3') == '2'\nassert solution('5\\n3') == '1'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7''') == '2'\nassert solution('''8''') == '2'\nassert solution('''9''') == '3'\nassert solution('''4 8 8 7 8 4 4 5''') == '2'\nassert solution('''2 3 4 2 2 3 2 2 4''') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('5\\n1 4 3 3 3') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('2\\n2 2') == '2'\nassert solution('10\\n1') == '0'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 4 3 3') == '2'\nassert solution('5\\n4 5 3 5 5 5 6') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 4 3 3') == '1'\nassert solution('4\\n1 4 3 3') == '1'\nassert solution('6\\n2 4 3 1 4 1') == '1'\nassert solution('6\\n2 4 3 1 4 1') == '0'\nassert solution('8\\n3 2 3 2 4 2 5 3') == '2'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '100'\nassert solution('''4 3 1\n1 100 1 1''') == '-1'\nassert solution('''1 3 2\n1 1 2 3''') == '1'\nassert solution('''1 3 2\n2 1 2 3''') == '2'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\nassert solution('''5 2 4\n5 1 4 10 1''') == '8'\nassert solution('''3 2 3\n10 30 30''') == '18'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 2 3\n5 1 3 10 1\n\"\"\") == \"18\"\nassert solution(\"\"\"6 1 5\n10 30 30 70 10 10\n\"\"\") == \"100\"\nassert solution(\"\"\"4 3 1\n1 100 1 1\n\"\"\") == \"-1\"\nassert solution(\"\"\"5 3 3\n1 1 1 1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"2 4 2\n1 1 1 1 1\n1 1 1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n100\") == \"1\"\nassert solution(\"1\\n100\\n1\") == \"100\"\nassert solution(\"1\\n100\\n100\\n1\") == \"100\"\nassert solution(\"1\\n100\\n1\\n1\") == \"100\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 4 4 4\") == \"No\"\nassert solution(\"1 1 1 2 2\") == \"Yes\"\nassert solution(\"1 4 4 1 1 4\") == \"Yes\"\nassert solution(\"1 4 4 1 1 1 4\") == \"No\"\nassert solution(\"1 4 4 1 1 1 1 1\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"2 2 2\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == \"Yes\"\nassert solution('1') == \"No\"\nassert solution('0') == \"No\"\nassert solution('10') == \"Yes\"\nassert solution('11') == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == 'No'\nassert solution('0') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('4 5') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n11\\n') == 'Yes'\nassert solution('3\\n11\\n') == 'No'\nassert solution('4\\n9\\n') == 'No'\nassert solution('4\\n8\\n') == 'No'\nassert solution('4\\n1\\n') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11') == 'Yes'\nassert solution('2') == 'No'\nassert solution('21') == 'Yes'\nassert solution('100') == 'Yes'\nassert solution('101') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11') == 'Yes'\nassert solution('10') == 'No'\nassert solution('0') == 'Yes'\nassert solution('1') == 'No'\nassert solution('0') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"7\\n\"\n    \"1 4\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 1\\n\"\n    \"4 5\\n\"\n    \"4 4\\n\"\n    \"4 3\\n\"\n    \"4 2\\n\"\n    \"4 1\\n\"\n    \"4 0\\n\"\n    \"5 2\\n\"\n    \"5 3\\n\"\n    \"5 4\\n\"\n    \"5 1\\n\"\n    \"5 0\\n\"\n    \"5 1\\n\"\n    \"5 2\\n\"\n    \"5 3\\n\"\n    \"5 4\\n\"\n    \"5 5\\n\"\n    \"3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"1 5\\n\"\n    \"1 6\\n\"\n    \"1 7\\n\"\n    \"1 8\\n\"\n    \"1 9\\n\"\n    \"1 10\\n\"\n    \"1 11\\n\"\n    \"1 12\\n\"\n    \"1 13\\n\"\n    \"1 14\\n\"\n    \"1 15\\n\"\n    \"1 16\\n\"\n    \"1 17\\n\"\n    \"1 18\\n\"\n    \"1 19\\n\"\n    \"1 20\\n\"\n    \"1 21\\n\"\n    \"1 22\\n\"\n    \"1 23\\n\"\n    \"1 24\\n\"\n    \"1 25\\n\"\n    \"1 26\\n\"\n    \"1 27\\n\"\n    \"1 28\\n\"\n    \"1 29\\n\"\n    \"1 30\\n\"\n    \"1 31\\n\"\n    \"1 32\\n\"\n    \"1 33\\n\"\n    \"1 34\\n\"\n    \"1 35\\n\"\n    \"1 36\\n\"\n    \"1 37\\n\"\n    \"1 38\\n\"\n    \"1 39\\n\"\n    \"1 40\\n\"\n    \"1 41\\n\"\n    \"1 42\\n\"\n    \"1 43\\n\"\n    \"1 44\\n\"\n    \"1 45\\n\"\n    \"1 46\\n\"\n    \"1 47\\n\"\n    \"1 48\\n\"\n    \"1 49\\n\"\n    \"1 50\\n\"\n    \"1 51\\n\"\n    \"1 52\\n\"\n    \"1 53\\n\"\n    \"1 54\\n\"\n    \"1 55\\n\"\n    \"1 56\\n\"\n    \"1 57\\n\"\n    \"1 58\\n\"\n    \"1 59\\n\"\n    \"1 60\\n\"\n    \"1 61\\n\"\n    \"1 62\\n\"\n    \"1 63\\n\"\n    \"1 64\\n\"\n    \"1 65\\n\"\n    \"1 66\\n\"\n    \"1 67\\n\"\n    \"1 68\\n\"\n    \"1 69\\n\"\n    \"1 70\\n\"\n    \"1 71\\n\"\n    \"1 72\\n\"\n    \"1 73\\n\"\n    \"1 74\\n\"\n    \"1 75\\n\"\n    \"1 76\\n\"\n    \"1 77\\n\"\n    \"1 78\\n\"\n    \"1 79\\n\"\n    \"1 80\\n\"\n    \"1 81\\n\"\n    \"1 82\\n\"\n    \"1 83\\n\"\n    \"1 84\\n\"\n    \"1 85\\n\"\n    \"1 86\\n\"\n    \"1 87\\n\"\n    \"1 88\\n\"\n    \"1 89\\n\"\n    \"1 90\\n\"\n    \"1 91\\n\"\n    \"1 92\\n\"\n    \"1 93\\n\"\n    \"1 94\\n\"\n    \"1 95\\n\"\n    \"1 96\\n\"\n    \"1 97\\n\"\n    \"1 98\\n\"\n    \"1 99\\n\"\n    \"1 100\\n\"\n    \"2\\n\"\n    \"0 4\\n\"\n    \"1 2\\n\"\n    \"3 5\\n\"\n    \"1 4\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"2 4\\n\"\n    \"3 4\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\""
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\n5\n1 2 5\n2 1 5\n2 2 5\n3 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\n6\n3 2 5\n3 2 5\n4 3 5\n4 3 5\n4 3 5\n5 4 5\n5 4 5\n''') == '3 2 6'\nassert solution('''\n1\n3\n5\n7\n9\n11\n13\n15\n17\n19\n21\n23\n25\n27\n29\n31\n33\n35\n37\n39\n41\n43\n45\n47\n49\n51\n53\n55\n57\n59\n61\n63\n65\n67\n69\n71\n73\n75\n77\n79\n81\n83\n85\n87\n89\n91\n93\n95\n97\n99\n''') == '3 2 6'\n'''\nFor the purpose of this problem, there is no need to implement the exact solution. \nAny solution that passes the above test cases will be accepted.\n'''\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0 0 1\"\nassert solution(\"1\\n2\") == \"0 0 2\"\nassert solution(\"1\\n2\\n3\") == \"0 0 3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"0 0 4\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nassert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n2 1 4\n1 3 5\n3 2 5''') == '-1 -1 -1'\nassert solution('''5\n1 2 4\n1 3 5\n1 4 7\n2 1 4\n3 2 5\n2 2 5\n3 2 5''') == '2 2 5'\nassert solution('''3\n2 3 4\n1 2 5\n1 3 5\n2 1 4\n1 3 5\n3 2 5\n1 2 3\n2 1 5\n1 3 5\n3 2 5\n2 1 4\n1 3 5''') == '-1 -1 -1'\nassert solution('''5\n3 2 5\n2 1 4\n1 3 5\n3 2 5\n2 1 4\n1 3 5\n2 1 4\n2 1 5\n3 2 5\n1 1 4\n3 2 5\n2 1 4\n1 3 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n1 1 4\n2 1 5\n1 3 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n1 3 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n3 2 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5\n2 1 4\n2 1 5"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n1\\n3') == '2 2 6'\nassert solution('2\\n2\\n2\\n2') == '2 2 2'\nassert solution('2\\n2\\n1\\n1') == '0 0 0'\nassert solution('2\\n2\\n1\\n1\\n1') == '0 0 0'\nassert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nprint('All test cases passed successfully.')\n\"\"\""
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('1\\n1 0 0\\n1 0 0\\n1 0 0') == '1 1 0'\nassert solution('3\\n1 1 1\\n2 1 1\\n2 1 1') == '1 0 0'\nassert solution('4\\n1 2 3 4\\n1 1 1 1\\n2 1 1 1\\n1 2 1 1') == '1 1 1'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n2 1 1 1 1\\n1 2 1 1 1\\n1 2 1 1 1') == '1 0 0'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n1') == '1 1'\nassert solution('1\\n1\\n1') == '1 1'\nassert solution('1\\n1\\n1\\n1') == '1 1'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open('test_input.txt').read()) == '2 2 6'\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\"\"\"\n) == '2 2 6'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\\\n1\n1 1\n1 1\n1 1\n''') == '1 1 1'\nassert solution('''\\\n6\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n''') == '0 0 0'\nassert solution('''\\\n6\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1 1 1'\nassert solution('''\\\n6\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1 1 1'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"2\\n2 1 5\\n2 1 5\") == \"2 2 6\"\nassert solution(\"3\\n1 2 3\\n2 1 2\\n2 1 3\") == \"1 1 4\"\nassert solution(\"3\\n1 2 3\\n3 2 1\\n3 2 3\") == \"1 1 4\"\nassert solution(\"3\\n2 2 2\\n2 1 2\\n2 3 2\") == \"1 2 2\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('redcoder') == 1\nassert solution('cc') == 0\nassert solution('teccod') == 1\nassert solution('ccccc') == 2\nassert solution('ccccc') == 2\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('redcoder') == \"1\"\nassert solution('ibatiprov') == \"2\"\nassert solution('abbaa') == \"3\"\nassert solution('abbaba') == \"2\"\nassert solution('abbbaba') == \"2\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('redcoder') == '1'\nassert solution('takahashi') == '5'\nassert solution('ccccc') == '7'\nassert solution('zzzzz') == '1'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '0'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('redcoder') == 1\nassert solution('raddog') == 4\nassert solution('aabcd') == 2\nassert solution('aabcc') == 3\nassert solution('aabcdd') == 2\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('racecar') == 1\nassert solution('lobster') == 0\nassert solution('plumbus') == 2\nassert solution('aacaacca') == 5\nassert solution('caracara') == 3\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('redcoder') == 1\nassert solution('tacocat') == 2\nassert solution('hohohohohohohohoohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohohoh"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"brbr\") == \"1\"\nassert solution(\"robber\") == \"3\"\nassert solution(\"rbr\") == \"1\"\nassert solution(\"rbrrbbrrbbrbbrrbbrrbbr\") == \"1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('redcoder') == 1\nassert solution('lz') == 2\nassert solution('level') == 3\nassert solution('steal') == 2\nassert solution('stealer') == 1\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('15') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10''') == 'Yes'\nassert solution('''1''') == 'No'\nassert solution('''1 2''') == 'No'\nassert solution('''1 1''') == 'Yes'\nassert solution('''1 1 2''') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == 'Yes'\nassert solution('5') == 'No'\nassert solution('-10') == 'No'\nassert solution('5.5') == 'No'\nassert solution('111') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"11\") == \"No\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"13\") == \"Yes\"\nassert solution(\"14\") == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('9') == 'No'\nassert solution('912') == 'No'\nassert solution('1234') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"5 4 9 7 5\") == \"5\"\nassert solution(\"5 5 5 5\") == \"5\"\nassert solution(\"5 5 5 5\") == \"5\"\nassert solution(\"5 5 5 5\") == \"5\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 9 7 5\\n') == '5'\nassert solution('5\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n4 4 9 7 5\n''') == '5'\nassert solution('''\n2\n1 1\n''') == '1'\nassert solution('''\n2\n1 1\n''') == '2'\nassert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n3\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'\nassert solution('2\\n1 2') == '0'\nassert solution('3\\n1 2 3') == '0'\nassert solution('4\\n1 2 3 4') == '3'\nassert solution('5\\n1 2 3 4 5') == '4'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 4 2 3 4\") == \"5\"\nassert solution(\"1 4 2 7 5\") == \"7\"\nassert solution(\"1 4 2 7 5\") == \"7\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''5\n5 5 5 5 5''') == '1'\nassert solution('''5\n6 9 7 4 8''') == '4'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4 4 9 7 5\\n\") == \"5\"\nassert solution(\"4\\n4 4 9 7 5\\n\") == \"5\"\nassert solution(\"1\\n2 2 2 2 2\\n\") == \"10\"\nassert solution(\"2\\n2 2 2 2 2\\n\") == \"10\"\nassert solution(\"3\\n3 3 3 3 3\\n\") == \"15\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5') == '10'\nassert solution('2 4') == '8'\nassert solution('3 2') == '3'\nassert solution('4 5') == '-1'\nassert solution('5 8') == '5'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5') == '10'\nassert solution('1 4') == '-1'\nassert solution('5 4') == '10'\nassert solution('1 3') == '-1'\nassert solution('5 4') == '10'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '10'"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5') == '10'\nassert solution('4 7') == '-1'\nassert solution('3 1') == '-1'\nassert solution('0 1') == '-1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5') == '10'\nassert solution('0 0') == '-1'\nassert solution('3 4') == '12'\nassert solution('10 10') == '100'\nassert solution('20 19') == '1870'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5') == 10\nassert solution('2 1') == -1\nassert solution('1 100') == -1\nassert solution('1 2') == -1\nassert solution('1 101') == -1\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5') == '10'\n'''\n'''"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"6 3\") == \"-1\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"5 5\") == \"25\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('1 3\\n5 4') == '2'\nassert solution('5 3\\n5 5 1 1 2') == '2'\nassert solution('5 3\\n5 5 1 1 2\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1') == '3'\nassert solution('1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n4 5\") == \"5\"\nassert solution(\"3 6\\n-1 -2 -5 2 5\") == \"7\"\nassert solution(\"8 8\\n10 10 11 12 13 14\\n-2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\") == \"12\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\n'''\n'''"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''1 1\n1 1''') == '0'\nassert solution('''1 10\n2 3 4 5 6 7 8 9 10''') == '11'\nassert solution('''2 10\n1 3 4 5 6 7 8 9 10''') == '6'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 5') == '5'\nassert solution('2 3') == '2'\nassert solution('4 4') == '1'\nassert solution('1 5') == '2'\nassert solution('5 3') == '1'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\n\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\n\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\n\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\n\"2 5\\n10 12 1 2 14\") == \"5\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == expected_output\n'''\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\") == \"0\"\nassert solution(\"5 5\\n5 5 5 5 5\") == \"0\"\nassert solution(\"5 5\\n5 5 5 5 5\") == \"0\"\nassert solution(\"10 7\\n5 6 7 8 9 10\") == \"4\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 5\n10 12 1 2 14\n\"\"\"\n) == \"5\"\nassert solution(\n\"\"\"\n2 3\n1 3\n2 2\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n1 5\n3 6 3 9 4\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n2 3\n2 2\n2 2\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n2 3\n2 2\n2 2\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 4\\n1 2\\n3 4\\n5 6\") == \"1\"\nassert solution(\"2 4\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"1\"\nassert solution(\"2 4\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\") == \"6\"\nassert solution(\"3 4\\n1 2 3\\n4 5 6\\n7 8 9\") == \"2\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 4 3\n1 2\n2 3\n1 4\n4 3'''\n    ) == '2'\n\nassert solution(\n'''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5'''\n    ) == '1'\n\nassert solution(\n'''8 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n2 5\n2 6\n2 7\n4 5\n5 6\n6 7\n'''\n    ) == '2'\n\nassert solution(\n'''15 6 3\n1 2\n1 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 9\n3 10\n4 9\n4 10\n4 11\n5 9\n5 10\n5 11\n5 12\n5 13\n6 9\n6 10\n6 11\n6 12\n6 13\n6 14\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n11 11\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n11 20\n12 11\n12 12\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n12 20\n12 21\n13 11\n13 12\n13 13\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n13 21\n13 22\n14 11\n14 12\n14 13\n14 14\n14 15\n14 16\n14 17\n14 18\n14 19\n14 20\n14 21\n14 22\n14 23\n15 11\n15 12\n15 13\n15 14\n15 15\n15 16\n15 17\n15 18\n15 19\n15 20\n15 21\n15 22\n15 23\n15 24\n16 11\n16 12\n16 13\n16 14\n16 15\n16 16\n16 17\n16 18\n16 19\n16 20\n16 21\n16 22\n16 23\n16 24\n16 25\n17 11\n17 12\n17 13\n17 14\n17 15\n17 16\n17 17\n17 18\n17 19\n17 20\n17 21\n17 22\n17 23\n17 24\n17 25\n17 26\n18 11\n18 12\n18 13\n18 14\n18 15\n18 16\n18 17\n18 18\n18 19\n18 20\n18 21\n18 22\n18 23\n18 24\n18 25\n18 26\n18 27\n19 11\n19 12\n19 13\n19 14\n19 15\n19 16\n19 17\n19 18\n19 19\n19 20\n19 21\n19 22\n19 23\n19 24\n19 25\n19 26\n19 27\n19 28\n20 11\n20 12\n20 13\n20 14\n20 15\n20 16\n20 17\n20 18\n20 19\n20 20\n20 21\n20 22\n20 23\n20 24\n20 25\n20 26\n20 27\n20 28\n20 29\n21 11\n21 12\n21 13\n21 14\n21 15\n21 16\n21 17\n21 18\n21 19\n21 20\n21 21\n21 22\n21 23\n21 24\n21 25\n21 26\n21 27\n21 28\n21 29\n21 30\n22 11\n22 12\n22 13\n22 14\n22 15\n22 16\n22 17\n22 18\n22 19\n22 20\n22 21\n22 22\n22 23\n22 24\n22 25\n22 26\n22 27\n22 28\n22 29\n22 30\n22 31\n23 11\n23 12\n23 13\n23 14\n23 15\n23 16\n23 17\n23 18\n23 19\n23 20\n23 21\n23 22\n23 23\n23 24\n23 25\n23 26\n23 27\n23 28\n23 29\n23 30\n23 31\n23 32\n24 11\n24 12\n24 13\n24 14\n24 15\n24 16\n24 17\n24 18\n24 19\n24 20\n24 21\n24 22\n24 23\n24 24\n24 25\n24 26\n24 27\n24 28\n24 29\n24 30\n24 31\n24 32\n24 33\n25 11\n25 12\n25 13\n25 14\n25 15\n25 16\n25 17\n25 18\n25 19\n25 20\n25 21\n25 22\n25 23\n25 24\n25 25\n25 26\n25 27\n25 28\n25 29\n25 30\n25 31\n25 32\n25 33\n26 11\n26 12\n26 13\n26 14\n26 15\n26 16\n26 17\n26 18\n26 19\n26 20\n26 21\n26 22\n26 23\n26 24\n26 25\n26 26\n26 27\n26 28"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4 3''') == '''2\n1110\n1011\n'''\nassert solution('''4 6 3''') == '''1\n101001\n'''\nassert solution('''5 6 2''') == '''1\n111100\n110110\n'''\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('5 6 2') == ''\nassert solution('4 4 3') == ''\nassert solution('1 2\\n1 3\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3') == '1110\\n1011\\n'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3''') == '''2\n1110\n1011\n'''\n\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '''1\n101001\n110110\n'''\n\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''2\n111100\n110110\n'''\n\nassert solution('''4 5 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '''1\n101001\n110110\n'''\n\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n1 4\n''') == '''2\n111100\n110110\n'''"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3\\n1 4\\n4 3') == '2'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '2'\nassert solution('1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '1'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1110'\nassert solution(stdin) == '1011'\nassert solution(stdin) == '110110'\nassert solution(stdin) == '111100'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"2\"\nassert solution(\"5 6 2\") == \"1\"\nassert solution(\"5 7 2\") == \"1\"\nassert solution(\"5 8 2\") == \"2\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\n\\n\\n\\n') == 'YES'\nassert solution('2\\n10\\n5\\n3\\n4\\n2\\n1\\n6\\n7\\n8\\n9\\n10\\n\\n') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\\n') == 'NO'\nassert solution('3\\n3\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n\\n') == 'NO'\nassert solution('4\\n3\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n\\n') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'YES'\nassert solution('''2\n10 10''') == 'YES'\nassert solution('''3\n1 2 3''') == 'NO'\nassert solution('''1\n1''') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 1') == 'YES'\nassert solution('3\\n2 1 1') == 'YES'\nassert solution('3\\n1 1 1') == 'NO'\nassert solution('5\\n1 1 1 2 5') == 'YES'\nassert solution('5\\n2 1 1 2 5') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'YES'\nassert solution('''2\n10 10''') == 'YES'\nassert solution('''3\n1 2 3''') == 'NO'\nassert solution('''1\n10 10''') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'YES'\nassert solution('2\\n10 10') == 'YES'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 2 5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''3\n4 5 3\n''') == 'YES'\n\nassert solution('''2\n10 10\n''') == 'YES'\n\nassert solution('''3\n1 2 3\n''') == 'NO'\n\nassert solution('''6\n2 3 1 2 3 4\n''') == 'YES'"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n2 1 1\\n') == 'NO'\nassert solution('2\\n1 1\\n') == 'NO'\nassert solution('3\\n1 1 1\\n') == 'YES'\nassert solution('3\\n1 1 1\\n') == 'NO'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == str(4999999999996)\n\nassert solution(input) == str(-1)\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''1000 3\n-1 -4 -3 -2''') == '1'\nassert solution('''1000 3\n2 4 4 2''') == '1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''-100 -200 -300 125 77 -4''') == '9'\nassert solution('''-1 0 0 0 0''') == '-1'\nassert solution('''-1 0 0 0 0''') == '-1'\nassert solution('''-1 0 0 0 0''') == '-1'\nassert solution('''-1 0 0 0 0''') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('2 4') == None\nassert solution('3 4') == None\nassert solution('-10 -11 -9 -3 -1') == '-9'\nassert solution('1 2 3 4') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''4 4\n-1 -1 -1 -1''') == '-1'\nassert solution('''5 5\n-1 0 0 0 0''') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4\\n') == '9\\n'\nassert solution('1000000000000 5\\n-1 0 0 0 0\\n') == '4999999999996\\n'\nassert solution('10 4\\n-3 -6 5 4\\n') == '-1\\n'\nassert solution('1000 6\\n-1 0 0 0 0\\n') == '4999999999996\\n'\nassert solution('10 4\\n-3 -6 5 4\\n') == '-1\\n'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'\nassert solution('11 4\\n-3 -6 5 4') == '-1'\nassert solution('11 4\\n-3 -6 5 4') == '-1'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\nassert solution('ABBABBA') == 'AB'\nassert solution('AABBAABBB') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"BAAABBBA\") == \"AB\"\nassert solution(\"BAAABBBABA\") == \"AB\"\nassert solution(\"AAABBBBA\") == \"AB\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"7\nABACABA\n\"\"\") == \"AB\"\n\nassert solution(\n    \"\"\"5\nZZZAA\n\"\"\") == \"ZZ\"\n\nassert solution(\n    \"\"\"3\nAAA\n\"\"\") == \"AAA\"\n\nassert solution(\n    \"\"\"10\nABCBBABCC\n\"\"\") == \"ABC\"\n\nassert solution(\n    \"\"\"10\nABCBABABC\n\"\"\") == \"ABC\""
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\nassert solution('AZAAAZ') == 'AZ'\nassert solution('AAAZAA') == 'AA'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\nassert solution('AAAA') == 'AAAA'\nassert solution('AA') == 'AA'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''ABACABA\n''') == 'AB'\n\nassert solution('''ZZZAA\n''') == 'ZZ'\nassert solution('''AA\n''') == 'AA'\nassert solution('''AAB\n''') == 'AA'\nassert solution('''BA\n''') == 'BA'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ABCDEF') == 'AB'\nassert solution('ABCDEFGHIJKLMNOP') == 'AB'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''ABACABA''') == 'AB'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''ABCDAA''') == 'AB'\nassert solution('''ABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'ABCD'\nassert solution('''ABABABBABABABBA''') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ab\") == \"a\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"test\") == \"test\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('west') == 'east'\nassert solution('codeforces') == 'es'\nassert solution('test') == 'test'\nassert solution('b') == ''\nassert solution('ab') == 'a'\n\n\n\"\"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"test\") == 2\nassert solution(\"west\") == 2\nassert solution(\"codeforces\") == 8\nassert solution(\"yes\") == 9\nassert solution(\"b\") == 1\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n\nassert solution(stdin) == '2'\n\nassert solution(stdin) == '7'\n\nassert solution(stdin) == '9'\n\nassert solution(stdin) == '10'"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\n-----Reference-----\n\n- https://www.codechef.com/submit/TMSS001\n\"\"\""
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"west\") == \"east\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"test\"\nassert solution(\"b\") == \"b\"\nassert solution(\"ab\") == \"ab\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"test\") == \"east\"\nassert solution(\"east\") == \"\"\nassert solution(\"b\") == \"b\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"b\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(test) == \"yes\"\nassert solution(west) == \"west\"\nassert solution(codeforces) == \"codeforces\"\nassert solution(b) == \"b\"\nassert solution(a) == \"\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\nassert solution('2 2\\n1 2') == '1'\nassert solution('1 1\\n1 1') == '1'\nassert solution('3 1\\n2 3') == '2'\nassert solution('10 10\\n2 2') == '5'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '4'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '6'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"5 2 1 8\") == \"2\"\nassert solution(\"3 2 1 5\") == \"2\"\nassert solution(\"2 1 3 4\") == \"4\"\nassert solution(\"4 2 1 3\") == \"4\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 7 11\") == \"2\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 8 8\") == \"2\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\nassert solution('3 2\\n1 7 11') == '0'\nassert solution('4 3\\n1 7 11 9 11') == '2'\nassert solution('4 4\\n1 7 11 9 11 9 11') == '0'\nassert solution('3 3\\n2 2 2') == '0'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"aadaa\") == \"Yes\"\nassert solution(\"ab\") == \"No\"\nassert solution(\"aa\") == \"Yes\"\nassert solution(\"abc\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aba') == 'Yes'\nassert solution('abca') == 'No'\nassert solution('aba') == 'Yes'\nassert solution('abca') == 'No'\nassert solution('abca') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('asakakasakasakasaka') == 'Yes'\nassert solution('asakasaka') == 'No'\nassert solution('asakasakasakasakasaka') == 'No'\nassert solution('asakasakasakasakasakasaka') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"asdf\") == \"Yes\"\nassert solution(\"akasaka\") == \"Yes\"\nassert solution(\"lalal\") == \"No\"\nassert solution(\"alal\") == \"No\"\nassert solution(\"ali\") == \"No\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"kkasak\") == \"Yes\"\nassert solution(\"ssak\") == \"Yes\"\nassert solution(\"sak\") == \"No\"\nassert solution(\"kasak\") == \"No\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abccba\") == \"Yes\"\nassert solution(\"tacocat\") == \"Yes\"\nassert solution(\"test\") == \"No\"\nassert solution(\"a\") == \"No\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('babab') == 'Yes'\nassert solution('bbbbbbb') == 'No'\nassert solution('aba') == 'No'\nassert solution('bbbbbbbbbbbbbbb') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akkq') == 'No'\nassert solution('abcdcba') == 'Yes'\nassert solution('abcdef') == 'No'\nassert solution('abcd') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'No'\nassert solution('a') == 'No'\nassert solution('abba') == 'Yes'\nassert solution('aabaa') == 'Yes'\nassert solution('aaabaa') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('aaaa') == 'Yes'\nassert solution('aaaaa') == 'Yes'\nassert solution('baabaa') == 'Yes'\nassert solution('baaabb') == 'No'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('2 1.10') == '217'\nassert solution('8 1.10') == '1'\nassert solution('0 1.10') == '0'\nassert solution('1 0.1') == '0'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('1.0 1') == '1'\nassert solution('1.1 1') == '2'\nassert solution('0.1 1') == '0'\nassert solution('2.0 1') == '2'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('8 1') == '8'\nassert solution('8 1.5') == '10'\nassert solution('7 10') == '10'\nassert solution('1000000008 1') == '1000000008'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0') == '0'\nassert solution('1 1') == '1'\nassert solution('100 0') == '0'\nassert solution('1 0.0') == '0'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('198 1.10') == '217'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:-2]\n\n\"\"\"\nfrom fractions import Fraction"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 0.1') == '3'\nassert solution('1 10') == '10'\nassert solution('10 0.1') == '10'\nassert solution('10 1') == '10'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('0 1') == '0'\nassert solution('1 10') == '217'\nassert solution('1000 1') == '217'\nassert solution('9 0.9') == '0'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('32 0.3') == '32'\nassert solution('-32 0.3') == '-32'\nassert solution('10 0.3') == '10'\nassert solution('10 0.2') == '10'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('hackerank.com') == 'Hackerrank'\nassert solution('codewars.com') == 'Codewars'\nassert solution('hackerrank.com') == 'Hackerrank'\nassert solution('hackerrank.com') == 'Hackerrank'\nassert solution('codewars.com') == 'Codewars'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n7''') == '3'\n\nassert solution('''1\n2\n3''') == '0'\n\nassert solution('''2000000000\n763243547''') == '1'\n\n'''\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '0'\nassert solution('''2\n4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '999999999'\nassert solution('''3\n3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '381621773'\n'''\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('asdf') == 0\n\n\"\"\"\n\n\"\"\"\na = b = n = int(stdin.readline().strip())"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('2\\n2') == '2'\nassert solution('10\\n2000000000') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n7') == '3'\nassert solution('1\\n2') == '0'\nassert solution('3\\n2000000000') == '1'\nassert solution('763243547') == '381621773'"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n9\\n1\\n2\\n1\\n3\\n2\\n3\\n4\\n1\\n5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n7\\n1\\n2\\n3\\"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''3 4 2\n1 2\n2 3\n1 3\n''') == '2'\nassert solution('''2 1 3\n1 3\n1 2\n1 3\n2 3\n''') == '0'\nassert solution('''8 8 7\n6 1\n1 2\n7 3\n6 4\n1 7\n1 8\n7 6\n1 2\n2 3\n3 4\n5 6\n7 8\n5 8\n''') == '4'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9 9 1') == '3'\nassert solution('5 4 5') == '1'\n\"\"\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"\nassert solution(\"5 4 5\") == \"1\"\nassert solution(\"4 3 2\") == \"2\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\nassert solution('7 1\\n5 1\\n6 1\\n8 1\\n8 1\\n8 1\\n8 1\\n8 1\\n7 1\\n') == '1'\nassert solution('3 10 7\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '2'\nassert solution('1 10 7\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('1 2\\n2 3\\n3 4\\n4 1\\n7 8\\n9 8\\n7 1') == '3'\nassert solution('4 9 1\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n7 5\\n8 9') == '0'\nassert solution('3 2 1\\n1 3\\n2 3') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9 9 1''') == '3'\nassert solution('''5 4 5''') == '1'\n\n\n\n'''\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1''') == '1'\n\n\n\n\n\"\"\"\n\nfrom collections import defaultdict\nfrom bisect import bisect_left\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_out\n\n\"\"\"\n\n__author__ = '__L1n__w@tch'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n5 4 5\n1 2\n2 3\n3 4\n4 1\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n5 5 5\n1 2\n2 3\n3 4\n4 5\n1 5\n5 2\n2 3\n3 4\n4 5\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n1 2\n2 3\n3 4\n4 5\n5 6\n6 1\n1 8\n9 8\n7 1\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n6 4 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n6 8\n7 8\n1 4\n4 8\n5 6\n2 4\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 1\") == \"2\"\nassert solution(\"3\\n2 2 1\") == \"3\"\nassert solution(\"3\\n2 2 2\") == \"3\"\nassert solution(\"3\\n1 1 1\") == \"3\"\nassert solution(\"3\\n1 1 2\") == \"3\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\nassert solution('''10\n6 5 4 3 2 1''') == '4'\nassert solution('''150000\n1 1 1 4 4 4 4''') == '4'\nassert solution('''150000\n4 4 4 4 4 4 4 4''') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('4\\n3 2 4 1') == '5'\nassert solution('4\\n1 1 1 4 4 4') == '5'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\n\n\n\n'''\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\n\n\n\"\"\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4\n3 2 4 1'''\n) == '4'\n\nassert solution(\n'''6\n1 1 1 4 4 4'''\n) == '5'\n\nassert solution(\n'''9\n1 4 4 7 1 1 5 1 1'''\n) == '8'\n\nassert solution(\n'''30\n
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('7\\n1 1 1 4 4 4 4') == '6'\nassert solution('1000\\n2 3 4 1 3 4 4') == '10'\nassert solution('1000\\n1 1 1 4 4 4') == '11'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 2 4 1\\n') == '4'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5'"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n3 2 4 1\\n') == '4'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5'\nassert solution('1\\n1\\n') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"5 4\\n1 2\\n2 4\\n3 4\\n4 5\\n4 5\") == \"000001000002\\n000002000001\\n000001000001\\n000002000429\\n000002000441\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '000001000002\\n000002000001\\n000001000001'\n\"\"\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output\nprint(solution(input_string))\n\n\"\"\""
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\\n\") == \"000001000002\\n000002000001\\n000001000001\"\n\"\"\"\n\nN, M = list(map(int, stdin.split()))"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == ''\nassert solution('2 1') == '000002'\nassert solution('2 2') == '000001'\nassert solution('2 3') == '000001000001'\nassert solution('3 2') == '000001000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''3 3\n1 32\n2 63\n1 12''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''1 1\n1 1''') == '000001000002'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n2 3 4 5 6 7 8 9 10\n3 4 5 6 7 8 9 10\n4 5 6 7 8 9 10\n5 6 7 8 9 10\n6 7 8 9 10\n7 8 9 10\n8 9 10\n9 10\n1 11\n1 12\n2 13\n2 14\n3 15\n3 16\n3 17\n3 18\n3 19\n4 20\n4 21\n4 22\n4 23\n4 24\n4 25\n5 26\n5 27\n5 28\n5 29\n5 30\n5 31\n5 32\n6 33\n6 34\n6 35\n6 36\n6 37\n6 38\n7 39\n7 40\n7 41\n7 42\n7 43\n7 44\n7 45\n7 46\n7 47\n7 48\n7 49\n7 50\n7 51\n7 52\n7 53\n7 54\n7 55\n7 56\n8 57\n8 58\n8 59\n8 60\n8 61\n8 62\n8 63\n8 64\n8 65\n8 66\n8 67\n8 68\n8 69\n8 70\n8 71\n8 72\n8 73\n8 74\n8 75\n8 76\n8 77\n8 78\n8 79\n8 80\n8 81\n8 82\n8 83\n8 84\n8 85\n8 86\n8 87\n8 88\n8 89\n8 90\n8 91\n8 92\n8 93\n8 94\n8 95\n8 96\n8 97\n8 98\n8 99\n8 100\n9 101\n9 102\n9 103\n9 104\n9 105\n9 106\n9 107\n9 108\n9 109\n9 110\n9 111\n9 112\n9 113\n9 114\n9 115\n9 116\n9 117\n9 118\n9 119\n9 120\n9 121\n9 122\n9 123\n9 124\n9 125\n9 126\n9 127\n9 128\n9 129\n9 130\n9 131\n9 132\n9 133\n9 134\n9 135\n9 136\n9 137\n9 138\n9 139\n9 140\n9 141\n9 142\n9 143\n9 144\n9 145\n9 146\n9 147\n9 148\n9 149\n9 150\n9 151\n9 152\n9 153\n9 154\n9 155\n9 156\n9 157\n9 158\n9 159\n9 160\n9 161\n9 162\n9 163\n9 164\n9 165\n9 166\n9 167\n9 168\n9 169\n9 170\n9 171\n9 172\n9 173\n9 174\n9 175\n9 176\n9 177\n9 178\n9 179\n9 180\n9 181\n9 182\n9 183\n9 184\n9 185\n9 186\n9 187\n9 188\n9 189\n9 190\n9 191\n9 192\n9 193\n9 194\n9 195\n9 196\n9 197\n9 198\n9 199\n9 200\n''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''1 1\n1 1\n2 2\n1 2\n2 3''') == '000001000002\\n000002000001\\n000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002'\nassert solution('''2 3\n1 32\n2 63\n1 12''') == '000002000001'\nprint('Test cases passed.')\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '000001\\n000002'\nassert solution('\\n') == ''\nassert solution('\\n1\\n2\\n3') == '000001\\n000002\\n000001\\n000003'\nassert solution('2\\n1\\n2') == '000001\\n000002\\n000001\\n000003'\nassert solution('3\\n2\\n1') == '000001\\n000002\\n000001\\n000003'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '000001000002'\nassert solution('2 3') == '000002000001'\nassert solution('2 3') == '000001000001'\nassert solution('1 2') == '000001000002'\nassert solution('2 3') == '000002000001'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\n\"\"\"\nGithub:\n\nTest.assert_equals(solution(stdin), \"2\")\n\"\"\""
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10 10 8 40\") == \"2\"\nassert solution(\"1\\n10 10 8 40\") == \"1\"\nassert solution(\"2\\n10 10 8 40\") == \"1\"\nassert solution(\"2\\n10 10 8 40\") == \"2\"\nassert solution(\"2\\n10 10 8 40\") == \"2\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 10 8 40\n''') == '2'\n\nassert solution('''5\n2 1 1 2 1\n''') == '4'\n\nassert solution('''4\n2 1 1 2 1\n''') == '2'\n\nassert solution('''10\n8 7 6 5 4 3 2 1\n''') == '7'\n\nassert solution('''4\n8 7 6 5 4 3 2 1\n''') == '7'"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 10 8 40''') == '2'\nassert solution('''5\n4 4 5 5 4''') == '3'\nassert solution('''5\n100 100 100 100 100''') == '0'\nassert solution('''5\n100 100 100 100 100''') == '0'\nassert solution('''1\n100''') == '100'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\nassert solution('1 2 3 4 5') == '1'\nassert solution('10 10 1') == '1'\nassert solution('1 1000000000') == '1'\nassert solution('1 10000000000') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 1') == '0'\nassert solution('2\\n1 10') == '0'\nassert solution('3\\n2 1 1') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 10 8 40') == '2'\nassert solution('3\\n5 10 30 20') == '1'\nassert solution('1\\n1') == '0'\nassert solution('5\\n100 100 100 100 100') == '100'\nassert solution('5\\n1 100 100 100 100') == '1'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"?(_-<___>__):-__>__,_____<__. \") == \"0101\"\nassert solution(\"?(____/_____):-__>__,_____<__. \") == \"false\"\nassert solution(\"?(____/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. \") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__. \") == \"false\"\nassert solution(\"?(__________/-_____):-__>__,_____<__. \") == \"false\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('?(_-_/___*__):-___>__') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n\"\"\""
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nprint(\"Testcases passed successfully.\")"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nprint(solution(input()))\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('?(_-_/___*__):-___>__') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == False\nassert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(____________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n\n\n\"\"\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n\nassert solution('''\n2 2 1\n1 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n\nassert solution('''\n4 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"3\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == \"3\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\") == \"3\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\") == \"3\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\") == \"3\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1\") == \"3\"\nassert solution(\"2 3 11\") == \"3\"\nassert solution(\"2 1 5\") == \"3\"\nassert solution(\"3 4 0\") == \"3\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 2 3 4 5') == '1'\nassert solution('7 10 0 12 6 4') == '5'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\""
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(7)\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 5') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n\"\"\"\n\n\nfrom math import sqrt\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('codeforces') == 'codeforces'\nassert solution('rocesfedoc') == 'orcesfedoc'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\n\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('codeforces') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n\n\n-----"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\nassert solution('acb') == 'bca'\nassert solution('abcd') == 'abcd'\n\n\n-----My Solution-----\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''rocesfedoc\n''') == 'codeforces'\nassert solution('''plmaetwoxesisiht\n''') == 'thisisexampletwo'\nassert solution('''z\n''') == 'z'\nassert solution('''rajrthyexyzflfrj\n''') == 'rajrthyexyzflfrj'\n'''\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n\n'''\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 14\") == 19\nassert solution(\"381 492\") == 873\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nprint(\"Test cases passed successfully.\")\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('14 8') == '20'\nassert solution('11 5') == '7'\nassert solution('10 15') == '26'\nassert solution('2 1') == '2'\nassert solution('1 10') == '11'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == 2\nassert solution(\"10 10\") == 20\nassert solution(\"123 564\") == 651\nassert solution(\"9 0\") == 10\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"873\"\n\"\"\"\na, b = [int(x) for x in stdin.split()]\nprint(a + b)\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5 14\n\"\"\") == \"19\"\nassert solution(\n\"\"\"\n381 492\n\"\"\") == \"873\"\nassert solution(\n\"\"\"\n-5 -15\n\"\"\") == \"-10\"\nassert solution(\n\"\"\"\n12 -3\n\"\"\") == \"7\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('151 966') == 1290\nassert solution('0 0') == 0\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\n\"\"\""
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '>'\nassert solution('1+2') == '<+>'\nassert solution('9-7') == '+++++++++>'\nassert solution('2+3') == '++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"8+2-8+1\") == \"++++++++>\\n>[<++>-]<++>\\n>-]>-]>-]>\\n>+]>+]>+]>-]>-]>\\n>-]>-]>\\n++++++++>\\n\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '<[-]>'\nassert solution('1+1') == '++>'\nassert solution('1+2+3+4+5+6+7') == '+++++++++>'\nassert solution('1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100+101+102+103+104+105+106+107+108+109+110+111+112+113+114+115+116+117+118+119+120+121+122+123+124+125+126+127+128+129+130+131+132+133+134+135+136+137+138+139+140+141+142+143+144+145+146+147+148+149+150+151+152+153+154+155+156+157+158+159+160+161+162+163+164+165+166+167+168+169+170+171+172+173+174+175+176+177+178+179+180+181+182+183+184+185+186+187+188+189+190+191+192+193+194+195+196+197+198+199+200+201+202+203+204+205+206+207+208+209+210+211+212+213+214+215+216+217+218+219+220+221+222+223+224+225+226+227+228+229+230+231+232+233+234+235+236+237+238+239+240+241+242+243+244+245+246+247+248+249+250+251+252+253+254+255+256+257+258+259+260+261+262+263+264+265+266+267+268+269+270+271+272+273+274+275+276+277+278+279+280+281+282+283+284+285+286+287+288+289+290+291+292+293+294+295+296+297+298+299+300+301+302+303+304+305+306+307+308+309+310+311+312+313+314+315+316+317+318+319+320+321+322+323+324+325+326+327+328+329+330+331+332+333+334+335+336+337+338+339+340+341+342+343+344+345+346+347+348+349+350+351+352+353+354+355+356+357+358+359+360+361+362+363+364+365+366+367+368+369+370+371+372+373+374+375+376+377+378+379+380+381+382+383+384+385+386+387+388+389+390+391+392+393+394+395+396+397+398+399+400+401+402+403+404+405+406+407+408+409+410+411+412+413+414+415+416+417+418+419+420+421+422+423+424+425+426+427+428+429+430+431+432+433+434+435+436+437+438+439+440+441+442+443+444+445+446+447+448+449+450+451+452+453+454+455+456+457+458+459+460+461+462+463+464+465+466+467+468+469+470+471+472+473+474+475+476+477+478+479+480+481+482+483+484+485+486+487+488+489+490+491+492+493+494+495+496+497+498+499+500+501+502+503+504+505+506+507+508+509+510+511+512+513+514+515+516+517+518+519+520+521+522+523+524+525+526+527+528+529+530+531+532+533+534+535+536+537+538+539+540+541+542+543+544+545+546+547+548+549+550+551+552+553+554+555+556+557+558+559+560+561+562+563+564+565+566+567+568+569+570+571+572+573+574+575+576+577+578+579+580+581+582+583+584+585+586+587+588+589+590+591+592+593+594+595+596+597+598+599+600+601+602+603+604+605+606+607+608+609+610+611+612+613+614+615+616+617+618+619+620+621+622+623+624+625+626+627+628+629+630+631+632+633+634+635+636+637+638+639+640+641+642+643+644+645+646+647+648+649+650+651+652+653+654+655+656+657+658+659+660+661+662+663+664+665+666+667+668+669+670+671+672+673+674+675+676+677+678+679+680+681+682+683+684+685+686+687+688+689+690+691+692+693+694+695+696+697+698+699+700+701+702+703+704+705+706+707+708+709+710+711+712+713+714+715+716+717+718+719+720+721+722+723+724+725+726+727+728+729+730+731+732+733+734+735+736+737+738+739+740+741+742+743+744+745+746+747+748+749+750+751+752+753+754+755+756+757+758+759+760+"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"2+5+6\") == \"++++++>\\n++++++>\\n+[<->]<\\n++++++>\\n++++++>\\n++++++>\\n++++++>\\n++++++>\\n++++++>\\n+[<->]<\\n+++++++++>\\n+++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<->]<\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+++++++++>\\n+[<"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1+2+3+4') == '+>++>+++>+<+'\nassert solution('1+2-3') == '++>+++>+<+'\nassert solution('1+2-3-4') == '++>++>++<+<'\nassert solution('1+2-3-4+5') == '++>++>++<+<+'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('2+3') == ''\nassert solution('9-7') == ''\nassert solution('9-7') == ''\nassert solution('2+3') == ''\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7+3-2') == '+++++++++++++++++++++++++++++++++++++++++>'\nassert solution('2+3-4') == '+++++++++++++++++++++++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2+3''') == '++>', 'no proper output'\nassert solution('''9-7''') == '+++++++++>', 'no proper output'\nassert solution('''6+8''') == '>>>>>>>>>>>', 'no proper output'\nassert solution('''-2+4''') == '>>>>>>>>>>>', 'no proper output'\nassert solution('''7+1''') == '++++++>', 'no proper output'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == '++>'\nassert solution(\"9-7\") == '+++++++++>'\nassert solution(\"9-7\") == '+++++++++>'\nassert solution(\"9-7\") == '+++++++++>'\nassert solution(\"9-7\") == '+++++++++>'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56\n''') == '1\\n2\\n5\\n2\\n0\\n'\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '8\\n2\\n4\\n1\\n0\\n'\nassert solution('''3\n3\n1\n2\n3\n''') == '1\\n2\\n3\\n'\nassert solution('''2\n0\n3\n''') == '0\\n3\\n'\nassert solution('''1\n1\n2\n3\n4\n5\n''') == '5\\n4\\n3\\n2\\n1\\n'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('112123123412345$\\dots$') == '112123123412345'\nassert solution('123456789123456789') == '123456789'\nassert solution('1234567891234567891') == '123456789'\nassert solution('12345678912345678912') == '123456789'\nassert solution
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nq = int(stdin.readline().strip())\nfor i in range(q):\n    k = int(stdin.readline().strip())\n    s = \"\".join(str(x) for x in range(1, k+1))\n    stdout.write(s[k-1])\n    stdout.write(\"\\n\")"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"0\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"2\\n3\") == \"2\"\nassert solution(\"2\\n4\") == \"0\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6''') == '12345'\nassert solution('''2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100\n102\n104\n106\n108\n110\n112\n114\n116\n118\n120\n122\n124\n126\n128\n130\n132\n134\n136\n138\n140\n142\n144\n146\n148\n150\n152\n154\n156\n158\n160\n162\n164\n166\n168\n170\n172\n174\n176\n178\n180\n182\n184\n186\n188\n190\n192\n194\n196\n198\n200\n202\n204\n206\n208\n210\n212\n214\n216\n218\n220\n222\n224\n226\n228\n230\n232\n234\n236\n238\n240\n242\n244\n246\n248\n250\n252\n254\n256\n258\n260\n262\n264\n266\n268\n270\n272\n274\n276\n278\n280\n282\n284\n286\n288\n290\n292\n294\n296\n298\n300\n302\n304\n306\n308\n310\n312\n314\n316\n318\n320\n322\n324\n326\n328\n330\n332\n334\n336\n338\n340\n342\n344\n346\n348\n350\n352\n354\n356\n358\n360\n362\n364\n366\n368\n370\n372\n374\n376\n378\n380\n382\n384\n386\n388\n390\n392\n394\n396\n398\n400\n402\n404\n406\n408\n410\n412\n414\n416\n418\n420\n422\n424\n426\n428\n430\n432\n434\n436\n438\n440\n442\n444\n446\n448\n450\n452\n454\n456\n458\n460\n462\n464\n466\n468\n470\n472\n474\n476\n478\n480\n482\n484\n486\n488\n490\n492\n494\n496\n498\n500\n502\n504\n506\n508\n510\n512\n514\n516\n518\n520\n522\n524\n526\n528\n530\n532\n534\n536\n538\n540\n542\n544\n546\n548\n550\n552\n554\n556\n558\n560\n562\n564\n566\n568\n570\n572\n574\n576\n578\n580\n582\n584\n586\n588\n590\n592\n594\n596\n598\n600\n602\n604\n606\n608\n610\n612\n614\n616\n618\n620\n622\n624\n626\n628\n630\n632\n634\n636\n638\n640\n642\n644\n646\n648\n650\n652\n654\n656\n658\n660\n662\n664\n666\n668\n670\n672\n674\n676\n678\n680\n682\n684\n686\n688\n690\n692\n694\n696\n698\n700\n702\n704\n706\n708\n710\n712\n714\n716\n718\n720\n722\n724\n726\n728\n730\n732\n734\n736\n738\n740\n742\n744\n746\n748\n750\n752\n754\n756\n758\n760\n762\n764\n766\n768\n770\n772\n774\n776\n778\n780\n782\n784\n786\n788\n790\n792\n794\n796\n798\n800\n802\n804\n806\n808\n810\n812\n814\n816\n818\n820\n822\n824\n826\n828\n830\n832\n834\n836\n838\n840\n842\n844\n846\n848\n850\n852\n854\n856\n858\n860\n862\n864\n866\n868\n870\n872\n874\n876\n878\n880\n882\n884\n886\n888\n890\n892\n894\n896\n898\n900\n902\n904\n906\n908\n910\n912\n914\n916\n918\n920\n922\n924\n926\n928\n930\n932\n934\n936\n938\n940\n942\n944\n946\n948\n950\n952\n954\n956\n958\n960\n962\n964\n966\n968\n970\n972\n974\n976\n978\n980\n982\n984\n986\n988\n990\n992\n994\n996\n998\n1000\n''') == '12345678901'\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n3\n20\n38\n56''') == '1'\nassert solution('''2132\n506\n999999999999999999\n1000000000000000000''') == '8'\nassert solution('''5\n1\n3\n20\n38\n56''') == '1'\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000''') == '8'\nassert solution('''1\n1\n1\n1\n1''') == '0'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('575') == '4'"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\n''') == '0'\nassert solution('''1\n''') == '0'\nassert solution('''10\n''') == '1'\nassert solution('''49\n''') == '4'\nassert solution('''50\n''') == '0'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('876') == '4'\nassert solution('13579') == '4'\nassert solution('177725') == '4'\nassert solution('5973') == '4'\nassert solution('9789') == '4'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''575''') == '4'\nassert solution('''7957''') == '4'\nassert solution('''7995''') == '4'\nassert solution('''8990''') == '4'\nassert solution('''999999''') == '4'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12345') == '4'\nassert solution('1234') == '0'\nassert solution('123456789') == '1'\nassert solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890') == '0'\nassert solution('12356') == '1'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"1000\") == \"0\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('575') == '4'\nassert solution('8') == '1'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00\") == \"0\"\nassert solution(\"110\") == \"1\"\nassert solution(\"010\") == \"1\"\nassert solution(\"101\") == \"2\"\nassert solution(\"1110\") == \"2\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('000') == 1\nassert solution('0') == 0\nassert solution('0' * 10) == 10\nassert solution('0' * 100) == 0\nassert solution('0' * 1000) == 0\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\" * 10) == 0\nassert solution(\"0\" * 11) == 1\nassert solution(\"1\" * 10) == 0\nassert solution(\"1\" * 11) == 1\nassert solution(\"0\" * 100) == 0\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('000') == 1\nassert solution('1010101') == 3\nassert solution('0101') == 1\nassert solution('1') == 0\nassert solution('0') == 1\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('000') == 1\nassert solution('001') == 2\nassert solution('011') == 3\nassert solution('101') == 4\nassert solution('111') == 5\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('000') == 1\nassert solution('0') == 1\nassert solution('1') == 1\nassert solution('0 0 1 1') == 2\nassert solution('1 1 1 1') == 1\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"00110110101100111100010100\") == 3\nassert solution
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('010101') == ''\nassert solution
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('000') == 1\nassert solution('1') == 1\nassert solution('010') == 2\nassert solution('0101010') == 1\nassert solution('01010101') == 0\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('000') == 1\nassert solution('00') == 1\nassert solution('0101') == 2\nassert solution('0100101110100011110100111') == 6\nassert solution('0100001000000110100111100111100111111') == 11\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == 'APPROVED'\nassert solution('2 2 2 2 2 2 2 2 2') == 'DENIED'\n\"\"\""
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 7 9 10 31') == 'DENIED'\nassert solution('8 8 8 8 8 8 8') == 'APPROVED'\nassert solution
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"DENIED\"\nassert solution(\"2 4 6 8 10\") == \"DENIED\"\nassert solution(\"3 6 9 12 15\") == \"APPROVED\"\nassert solution(\"5 6 8 9 10 13 14 15 16 17\") == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 'APPROVED'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 'DENIED'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == 'DENIED'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == 'DENIED'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == 'DENIED'\nassert solution('2') == 'DENIED'\nassert solution('3') == 'DENIED'\nassert solution('4') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 7 9 10 31') == 'DENIED'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 7 9 10 22') == 'DENIED'\nassert solution('6 7 9 10 22 3') == 'APPROVED'\nassert solution('6 7 9 10 22 3 4') == 'DENIED'\nassert solution('6 7 9 10 22 3 4 5') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'APPROVED'\nassert solution(\"3 2\") == 'DENIED'\nassert solution(\"1 2 1 3\") == 'APPROVED'\nassert solution(\"7 6 5 4\") == 'DENIED'\nassert solution(\"8 4 1 2\") == 'APPROVED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'APPROVED'\n\"\"\"\n\nN = int(input())\nL = [int(input()) for _ in range(N)]\n\nfor n in L:\n    if n % 2 == 0:\n        if n % 3 == 0 or n % 5 == 0:\n            print(\"APPROVED\")\n        else:\n            print(\"DENIED\")\n    else:\n        print(\"DENIED\")\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''3\n6 7 9 10 31''') == 'DENIED'\nassert solution('''1\n2 3 4 5''') == 'DENIED'\nassert solution('''2\n2 2''') == 'APPROVED'\nassert solution('''3\n3 3 3''') == 'APPROVED'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Yes'\nassert solution('UD') == 'Yes'\nassert solution('RUDLR') == 'Yes'\nassert solution('RUDUDDLLRLLUUUDDUDUDDURDDLLRURDDUDUULDURDLRLDDR') == 'Yes'\nassert solution('URUDUDDRLL') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RDRUDUUDRR\") == \"No\"\nassert solution(\"RDRUD\") == \"Yes\"\nassert solution(\"RDR\") == \"Yes\"\nassert solution(\"RDRUDUDUUDR\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('RUDLR') == 'Yes'\nassert solution('RUULD') == 'No'\nassert solution('LL') == 'Yes'\nassert solution('RDD') == 'No'\nassert solution('RRDD') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RUDUDDLDRR') == 'Yes'\nassert solution('RUDUDUDUUDD') == 'No'\nassert solution('RUDUDUDUDU') == 'No'\nassert solution('RUDUDUDUDUDUDD') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RUDLRUDUDDL\") == \"Yes\"\nassert solution(\"LUDUDUDDL\") == \"No\"\nassert solution(\"UDUDUDDL\") == \"No\"\nassert solution(\"UUUUDDLDDDUDUUUU\") == \"Yes\"\nassert solution(\"RRDDUDLDDUUUUDDLRR\") == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RLLUD') == 'No'\nassert solution('RUL') == 'Yes'\nassert solution('L') == 'Yes'\nassert solution('R') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == \"Yes\"\nassert solution('RUDRUDR') == \"Yes\"\nassert solution('RDRUDDDUDRRDRUDDUUDUDD') == \"No\"\nassert solution('RUDDUDUD') == \"No\"\nassert solution
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('RUDLUDR') == \"Yes\"\nassert solution('ULR') == \"Yes\"\nassert solution('LDRU') == \"No\"\nassert solution('RUL') == \"No\"\nassert solution('LDULR') == \"No\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == expect\n\n\"\"\"\n\nN = int(input())\nA = int(input())\nB = int(input())\nC = int(input())\nD = int(input())\nE = int(input())"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '5\\n'\n    '3\\n'\n    '2\\n'\n    '4\\n'\n    '3\\n'\n    '5\\n'\n) == '7'\nassert solution(\n    '5\\n'\n    '3\\n'\n    '2\\n'\n    '4\\n'\n    '3\\n'\n    '5\\n'\n) == '7'\nassert solution(\n    '5\\n'\n    '3\\n'\n    '2\\n'\n    '4\\n'\n    '3\\n'\n    '5\\n'\n) == '7'\nassert solution(\n    '5\\n'\n    '3\\n'\n    '2\\n'\n    '4\\n'\n    '3\\n'\n    '5\\n'\n) == '7'\nassert solution(\n    '5\\n'\n    '3\\n'\n    '2\\n'\n    '4\\n'\n    '3\\n'\n    '5\\n'\n) == '7'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n1\\n2\\n2\\n3\\n3\\n3\\n4\\n2\\n2\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 1 3') == '3'\nassert solution('1 3 1 1') == '1'\nassert solution('3 2 1 2') == '4'\nassert solution('2 2 2 2') == '2'\nassert solution('1 2 1 2') == '3'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9') == '7\\n'\n\nprint(solution('1\\n1\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9'))\n\"\"\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('10\\n10\\n10\\n10\\n10') == '45'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '45'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\n\"\"\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''5\n3\n2\n4\n3\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0''') == '5e8'"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('01') == ''\nassert solution('9') == ''\nassert solution('10') == '0'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"2\"\n) == \"2\"\nassert solution(\n\"5\"\n) == \"3\"\nassert solution(\n\"7\"\n) == \"2\"\nassert solution(\n\"9\"\n) == \"1\"\nassert solution(\n\"10\"\n) == \"0\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"8\"\nassert solution(\"7\") == \"10\"\nassert solution(\"8\") == \"12\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\n'''\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\n\"\"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('9') == ''\nassert solution('9,0') == ''\nassert solution('0,0,0') == ''\nassert solution('0,9,0') == '0,0'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''0\n''') == '2'\nassert solution('''1\n2\n''') == '4'\nassert solution('''3\n3\n3\n3\n''') == '6'\nassert solution('''2\n2\n''') == '0'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20') == '23'\nassert solution('1000') == '999'\nassert solution('10000') == '9997'\nassert solution('123456789') == '1234567899'\nassert solution('1000000000') == '9999999999'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20') == '23'\nassert solution('23') == '23'\nassert solution('35') == '37'\nassert solution('15') == '17'\nassert solution('17') == '17'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '7'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8''') == 8\nassert solution('''12''') == 13\nassert solution('''2''') == 3\nassert solution('''5''') == 7\nassert solution('''10''') == 11\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"20\") == \"23\"\nassert solution(\"10\") == \"11\"\nassert solution(\"100\") == \"101\"\nassert solution(\"1000\") == \"1001\"\nassert solution(\"10000000\") == \"10000001\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20') == 23\nassert solution('20\\n') == 23\nassert solution('20\\n23') == 23\nassert solution('2\\n') == 3\nassert solution('23\\n') == 23\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20') == '23'\nassert solution('1') == ''\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == ''\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20') == '23'\nassert solution('10') == '11'\nassert solution('30') == '29'\nassert solution('1000') == '1001'\nassert solution('100000000') == '2'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20''') == '23'\nassert solution('''8''') == '23'\nassert solution('''21''') == '23'\nassert solution('''1000''') == '23'\nassert solution('''10000''') == '23'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"3\"\nassert solution(4) == \"5\"\nassert solution(5) == \"5\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\nassert solution('''5\n1 1 1 1 1''') == '0'\nassert solution('''5\n1 1 1 1 1''') == '0'\nassert solution('''6\n1 1 1 1 1 1''') == '2'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"2\\n1\") == \"0\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"4\\n3 1 3 1\") == \"0\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1 3 2\") == \"1\"\nassert solution(\"3 1 3 2\") == \"1\"  # Check for the corner case where the last two elements are the same.\nassert solution(\"4 1 3 2\") == \"2\"\nassert solution(\"4 1 3 2\") == \"2\"  # Check for the corner case where the last two elements are the same.\nassert solution(\"7 2 3 4 5 6 7\") == \"4\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('5 4 3 2 1') == '2'\nassert solution('10 8 5 6 7 4 9 2 1 3 4 5 6') == '3'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('6 5 4 3 2 1') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 3') == '1'\nassert solution('3\\n1 3 2') == '1'\nassert solution('3\\n3 2 1') == '2'\nassert solution('5\\n3 2 1 3 4') == '2'\nassert solution('5\\n3 1 3 4 5') == '3'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n'''\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n5 100 90 80\n98\n40\n30\n21\n80\n''') == \"23\"\n\nassert solution(\n'''\n5 2 3 2\n1\n2\n3\n4\n5\n''') == \"2\"\n\nassert solution(\n'''\n1 2 3\n1\n2\n3\n4\n5\n''') == \"5\"\n\nassert solution(\n'''\n6 2 3 5 4\n1\n1\n2\n2\n3\n3\n''') == \"9\"\n\nassert solution(\n'''\n5 4 2 1\n1\n1\n2\n2\n3\n''') == \"5\""
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 100 100 1') == '4'\nassert solution('1 2 3 4') == '10'\nassert solution('1 100 90 80') == '23'\n\"\"\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"7 1 7 7\") == \"13\"\nassert solution(\"7 7 1\") == \"10\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"4 1 2 3\") == \"5\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 100 90 80''') == '23'\nassert solution('''9 100 50 5''') == '23'\nassert solution('''10 90 80''') == '23'\nassert solution('''10 100 90 50''') == '23'\nassert solution('''2 2 2''') == '4'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"3 1 1 1\") == \"6\"\nassert solution(\"4 2 1 1\") == \"5\"\nassert solution(\"4 1 1 1\") == \"6\"\nassert solution(\"4 1 1 2\") == \"4\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 9 8') == '2'\nassert solution('100 90 80') == '23'\nassert solution('1') == '0'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6') == '0'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 100 90 80\n98\n40\n30\n21\n80\"\"\"\n) == \"23\"\n\nassert solution(\n\"\"\"4 10 17 19\n3\n5\n10\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"3 1 1 1\n100\n1\n1000\n\"\"\"\n) == \"50\"\n\nassert solution(\n\"\"\"4 10 19\n10\n2\n10\n10\n\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"4 10 19\n10\n2\n10\n10\n\"\"\"\n) == \"4\""
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution(\n'''5 100 90 80\n98\n40\n30\n25\n21\n80''') == '35'\nassert solution(\n'''5 100 90 80\n40\n70\n20\n30\n10\n80''') == '55'\nassert solution(\n'''5 100 90 80\n40\n80\n20\n70\n10\n50\n10\n80''') == '75'\nassert solution(\n'''5 100 90 80\n40\n80\n20\n70\n10\n50\n10\n100''') == '125'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 100 90 80''') == '23'\nassert solution('''100 90 80''') == '23'\nassert solution('''5 1 2 3''') == '1'\nassert solution('''1 2 3 4''') == '0'\nassert solution('''5 9 7 8''') == '4'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ZY') == 'X'\nassert solution('AB') == 'AB'\nassert solution('AA') == 'BB'\nassert solution('XX') == 'AB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('abcxyz') == 'cdezab'\nassert solution('cdezab') == 'ABCXYZ'"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('A') == 'B'\nassert solution('XYZ') == 'AZ'\nassert solution('ABCDE') == 'ABCD'\nassert solution('ABCDEFG') == 'ABCD'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"AABCDEEFFG\") == \"FFGGBBBCDEF\"\nassert solution(\"ZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"I am the best!@#\") == \"ZYXWVUTSRQPONMLKJIHGFEDCBA\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[2:7]\n\"\"\""
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[2:-2]\n\"\"\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZABC') == 'ZABCDE'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABC') == 'C'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('HELLO') == 'NOPQRST'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'CDEHIJKLMNOPQRSTUWXYZAB'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('TEST') == 'ZST'\nassert solution('Abc') == 'Zb'\nassert solution('ABC') == 'Zc'\nassert solution('Z') == 'A'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZABC') == 'DEABCAB'\nassert solution('ZABCDEF') == 'EFGHADAB'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == 'YLBHGPBDFRHWKTUIQNTLJKGAWMCQDVOF'\nassert solution('ABCD') == 'BDA'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n2750131 199999\n''') == '199999'\nassert solution('''1\n3 6\n''') == '6'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''1\n3 6''') == '6'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''1\n3 6''') == '6'\nassert solution('''2\n1 6\n7 1''') == '6 7'\nassert solution('''3\n1 6\n7 1''') == '6 7'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n2750131 199999\n''') == '199999'\nassert solution('''1\n3 6\n''') == '6'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 2\") == \"\"\nassert solution(\"3 2 1\") == \"\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\n\nassert solution('''1\n2750131 199999\n''') == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 5 2 3 2 4\\n3\\n3 5 2 3 2 4') == '3 4 2'\nassert solution('1\\n2750131 199999\\n3\\n3 5 2 3 2 4') == '199999'\nassert solution('1\\n3 6\\n3\\n3 5 2 3 2 4') == '6'"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n5\\n') == '3'\nassert solution('2\\n3\\n5\\n') == '6'\nassert solution('2\\n3\\n5\\n1') == '3'\nassert solution('2\\n3\\n5\\n0') == '6'\nassert solution('2\\n3\\n5\\n9') == '9'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''2\n2 1\n1 2''') == '1 2'\nassert solution('''3\n6 7 8 4 9 10\n2 3 5 7 10 9''') == '7 8 4 9 10'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == '67 89 109 105 109 113 115 121 131 131 139 139 141 143 143 145 147 147 147 148 149 150 151 152 153 154 155 156 157 157 158 157 158 159 157 160 157 162 157 164 157 165 157 166 157 167 157 168 157 169 157 170 157 171 157 173 158 174 157 175 157 176 157 177 158 178 157 179 157 180 157 181 157 182 157 183 157 184 157 185 157 186 157 187 157 188 157 189 157 190 157 191 157 192 157 193 158 194 157 195 157 196 157 197 157 198 157 199 157 200 158 19 159 194 159 195 157 201 157 202 158 203 157 204 158 205 157 206 158 207 157 208 157 209 157 210 158 211 157 212 158 213157 207 214158 207 215157 216 158 217 157 218 157 219157 220 158 221 157 222 158 223 157 224 158 225 157 226 157 227 158 228 158 229 157 230 158 231 157 232 158 233157 223 158 234 158 235 157 236 158 237 158 238 157 239 157 240 157 241 158 242 157 243 157 244 157 245 157 246 157 247 158 248157 219 158 249157 220 157 251 157 252 158 253157 253158 254159 15'''"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n3 5 2 3 2 4\n\"\"\") == \"3 4 2\"\nassert solution(\"\"\"\n1\n2750131 199999\n\"\"\") == \"199999\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[10]\nassert solution(stdin) == stdin[13]\nassert solution(stdin) == stdin[16]\nassert solution(stdin) == stdin[21]\nassert solution(stdin) == stdin[25]\n\n\n\"\"\""
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n2 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 2\n2 4 5 3 1\"\"\") == \"11111\"\nassert solution(\"\"\"5 1\n2 1 3 5 4\"\"\") == \"22111\"\nassert solution(\"\"\"7 1\n7 2 1 3 5 4 6\"\"\") == \"1121122\"\nassert solution(\"\"\"5 1\n2 4 5 3 1\"\"\") == \"21112\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1\\n2 4 5 3 1') == '21112'\n\"\"\""
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1121122'\nassert solution('2 1 3 5 4') == '111122'\nassert solution('5 1') == '221122'\nassert solution('7 1') == '1121122'\nassert solution('7 1 2 1 3 5 4 6') == '11211222'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"2 4 5 3 1\\n\"\n) == \"11111\"\n\nassert solution(\n    \"5 1\\n\"\n    \"2 1 3 5 4\\n\"\n) == \"22111\"\n\nassert solution(\n    \"7 1\\n\"\n    \"7 2 1 3 5 4 6\\n\"\n) == \"1121122\"\n\nassert solution(\n    \"5 1\\n\"\n    \"2 4 5 3 1\\n\"\n) == \"21112\"\n\nassert solution(\n    \"7 1\\n\"\n    \"7 2 1 3 5 4 6\\n\"\n) == \"1121122\""
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"22111\"\nassert solution(\"2 1\") == \"22112\"\nassert solution(\"4 1\") == \"11211\"\nassert solution(\"5 1\") == \"11112\"\nassert solution(\"7 1\") == \"1121122\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('1 2 1 2 3') == '1'\nassert solution('100 1') == '1'\nassert solution('100 101 100 1') == '1'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 1 2 3\n''') == '2'\nassert solution('''\n2\n1 3\n''') == '2'\nassert solution('''\n4\n1 3 3 7\n''') == '4'"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n1 2 1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"2\n100 1\n\"\"\") == \"2\"\nassert solution(\"\"\"4\n1 3 3 7\n\"\"\") == \"4\"\nassert solution(\"\"\"1\n100\n\"\"\") == \"1\"\nassert solution(\"\"\"10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '4'\nassert solution('''2\n1 3 3 7\n''') == '4'\nassert solution('''10\n1 2 1 2 3\n''') == '5'\nassert solution('''2\n1 2 1\n''') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1') == '1'\nassert solution('3\\n2\\n2\\n2\\n1') == '1'\nassert solution('4\\n1\\n2\\n2\\n1') == '1'\nassert solution('5\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1\n''') == '4'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 1 2 3') == '2'\nassert solution('2\\n100 1') == '2'\nassert solution('4\\n1 3 3 7') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('100 1') == '2'\nassert solution('1001 1') == '2'\nassert solution('1001 1 1') == '2'\nassert solution('1001 1 1 1') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('100 1') == '2'\nassert solution('3 3 3 7') == '4'\nassert solution('1 3 3 7') == '4'\nassert solution('2 3 1 2') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 2 1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"2\n1 3 1 4\n\"\"\") == \"0\"\nassert solution(\"\"\"3\n1 2 3 4 5\n\"\"\") == \"5\"\nassert solution(\"\"\"10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"0\"\nassert solution(\"\"\"10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\n\n'''\n\n'''\n\n'''\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n16\\n') == '0'\nassert solution('1\\n1\\n1\\n1023\\n') == '1'\nassert solution('1\\n1\\n1\\n4\\n') == '2'\nassert solution('1\\n1\\n1\\n16\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\n\n\n\n\"\"\""
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\\n2\\n2\\n2\\n2\\n2\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"2\\n1 2\\n1 1\") == \"1\\n1\\n1\"\nassert solution(\"4\\n1 1 1 1\\n1 1 1 1\") == \"1\\n0\\n0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n0\\n0\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n4 7 1 5 4 9\n''') == '1'\n\nassert solution('''5\n1 2 3 4 5\n''') == '2'\n\nassert solution('''1\n16\n''') == '1'\n\nassert solution('''4\n1 1 1 1023\n''') == '0'\n\nassert solution('''3\n1 2 3 4\n''') == '2'"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\n\nassert solution('''5\n1 2 3 4 5''') == '2'\n\nassert solution('''1\n16\n''') == '1'\n\nassert solution('''4\n1 1 1 1023\n''') == '0'\n\nassert solution('''6\n1 2 3 4 5 6\n''') == '3'\n'''\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n16') == '1'\nassert solution('1\\n1 2 3 4 5') == '2'\nassert solution('1\\n1 2 3 4') == '2'\nassert solution('1\\n1 2 3 4\\n1 2 3 4') == '0'\nassert solution('1\\n1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1010\") == \"2\"\nassert solution(\"0000\") == \"0\"\nassert solution
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0011') == '4'\nassert solution('101111') == '1'\nassert solution('1111110101110') == '1'\nassert solution
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"0111\") == 3\nassert solution(\"11111\") == 5\nassert solution(\"00000\") == 0\nassert solution(\"01100\") == 3\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('0011') == 4\nassert solution('101010101') == 2\nassert solution('1111') == 1\nassert solution('1') == 0\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0011') == 4\nassert solution('1010101010101') == 1\nassert solution
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"00101\") == \"01000\"\nassert solution(\"00111\") == \"01000\"\nassert solution(\"0001\") == \"0000\"\nassert solution(\"001\") == \"0000\"\nassert solution(\"01\") == \"00\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"0000\") == \"0\"\nassert solution(\"00100\") == \"1\"\nassert solution(\"10100\") == \"2\"\nassert solution(\"1010011100\") == \"3\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"0111\") == 2\nassert solution(\"1011\") == 3\nassert solution(\"1111\") == 1\nassert solution(\"000\") == 0\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('01110101100011000110001101') == 10\nassert solution('11101010110001100011000110') == 8\nassert solution('10101010110001100011000110') == 6\nassert solution('01010101010101010101010101') == 2\nassert solution('11111111110101010101010101') == 1\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0011') == 4\nassert solution('0000') == 0\nassert solution('0010111') == 5\nassert solution('1111111111') == 1\nassert solution('1110111101') == 4\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 6\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"10 100\") == \"0\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n1 3\n2 4\n''') == '2'\nassert solution('''7 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '7'\nassert solution('''2 2\n1 2\n1 2\n''') == '0'\nassert solution('''8 8\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == '0'\nassert solution('''8 8\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == '1'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('4 2') == '2'\nassert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('4 2\\n1 3\\n2 4\\n3 4') == '0'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5') == '0'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 2') == '2'\nassert solution('4 2') == '2'\nassert solution('4 2') == '2'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '2'\nassert solution('2 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4\\n1 3\\n2 4') == '2'\nassert solution('2 4\\n1 3\\n2 4\\n1 4') == '0'\nassert solution('4 5\\n1 3\\n2 3\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4') == '0'\nassert solution('5 4\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3') == '0'\nassert solution('4 1\\n1 1') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"10 10\") == \"9\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 2 1''') == 2\nassert solution('''5\n1 2 2 1 1''') == 3\nassert solution('''10\n1 2 2 1 1 1 1 1 1 1''') == 9\nassert solution('''100\n
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 1') == 2\nassert solution('2 3 4 5') == 2\nassert solution('1 4 4 1 1') == 4\nassert solution('4') == 0\nassert solution('1 2 2 1') == 2\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 1\") == \"2\"\nassert solution(\"2 1 2 1\") == \"2\"\nassert solution(\"2 2 2 2\") == \"0\"\nassert solution(\"1 2 2 1 4\") == \"4\"\nassert solution(\"1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"4\"\n\"1 2 2 1\") == \"2\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('4') == '0'\nassert solution('1 2 2 1') == '2'\nassert solution('5') == '0'\nassert solution('1 2 3 4 5') == '3'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4\\n2 4 1 2') == '2'\nassert solution('4 10\\n2 4 1 2') == '4'\nassert solution('1 1\\n-1 1') == '1'\nassert solution('1 1\\n1 -1') == '1'\nassert solution('3 10\\n2 4 1 2') == '4'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 5\n2 1 -3''') == '3'\nassert solution(\n'''2 4\n-1 1''') == '4'\nassert solution(\n'''4 10\n2 4 1 2''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 1 -3''') == '3'\nassert solution('''2 4\n-1 1''') == '4'\nassert solution('''4 10\n2 4 1 2''') == '2'\nassert solution('''4 10\n2 4 1 2''') == '2'\nassert solution('''4 10\n1 1''') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1\\n2\\n3\\n4'\nassert solution('2\\n2\\n3\\n4') == '2\\n2\\n3\\n4'\nassert solution('2\\n1\\n1\\n1') == '3\\n2\\n1\\n1'\nassert solution('1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4\\n-1 1') == '4'\nassert solution('3 5\\n2 1 -3') == '3'\nassert solution('2 4\\n2 1 -3') == '4'\nassert solution('4 10\\n2 4 1 2') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 1 -3''') == '3'\nassert solution('''2 4\n-1 1''') == '4'\nassert solution('''4 10\n2 4 1 2''') == '2'\nassert solution('''3 10\n2 4 1 2''') == '0'\nassert solution('''4 10\n2 4 1 2''') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 10\\n2 4 1 2') == '2'\nassert solution('4 10\\n2 4 1 2 3') == '0'\nassert solution('4 10\\n2 -3 1 -2 -1') == '4'\nassert solution('2 4\\n-1 1') == '0'\nassert solution('2 4\\n1 1') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\n\nassert solution('''\n2 4\n-1 1\n''') == '4'\n\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1 2 3 4 5'\nassert solution('4\\n1 2 3 4') == '1 2 3 4'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 4 5'\nassert solution('5\\n2 3 4 5 6') == '2 3 4 5 6'\nassert solution('5\\n3 4 5 6') == '3 4 5 6'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\nassert solution(\"3\\n10000000000000000000 2000000000000000000000\") == \"2000000000000000000000 10000000000000000000\"\nassert solution(\"4\\"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('8') == '4'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9 3 6 12 4 8\") == \"9 3 6 12 4 8\"\nassert solution(\"42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\n\n\n\n\"\"\""
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 8 6 3 12 9\\n4 8 6 3 12 9\\n\") == \"9 3 6 12 4 8\\n\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\\n\"\nassert solution(\"1\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\\n\"\nassert solution(\"3\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\\n\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\\n\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('1000000000000000000 1000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\nassert solution('12 8 7 4 9 6 3') == '9 3 6 12 4 8'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126\\n') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\n\n\"\"\""
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\nassert solution('''4\n42 28 84 126\n''') == '126 42 84 28'\nassert solution('''2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'\n'''\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5 6 7\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\nfrom math import ceil\n\nn = int(stdin.readline().strip())\n\ns = list(map(int, stdin.readline().strip().split()))\n\ns = [x - (x % 3) for x in s]\n\ns = s[::-1]\n\nfor i in range(1, n):\n    if s[i] % 2 == 0:\n        s[i] *= 2\n    else:\n        s[i] = s[i] // 3\n\ns = s[::-1]\n\nprint(\" \".join(map(str, s)))\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"4\\n1 2 4 4\") == \"3\"\nassert solution(\"4\\n1 2 4 4\\n3 2 5\") == \"1\"\nassert solution(\"4\\n1 2 4 4\\n3 2 5\") == \"1\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n3 5 4 7 10 12\\n') == '3\\n7 3 5\\n'\nassert solution('5\\n-1 2 5 8 11\\n') == '1\\n8'\nassert solution('5\\n1 2 1 2 2\\n') == '2\\n2 1 1'\nassert solution('5\\n1 1 1 1 1\\n') == '0\\n'\nassert solution('5\\n1 1 1 1 2\\n') == '3\\n1 1 1 1 2\\n'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\n\nassert solution('''1\n-1\n''') == '1'\nassert solution('''2\n1 1\n''') == '1'\nassert solution('''1\n2\n''') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n-2') == '2'\nassert solution('2\\n-2\\n1') == '1'\nassert solution('2\\n1\\n-1') == '2'\nassert solution('2\\n1\\n-1\\n1') == '2'\nassert solution('2\\n1\\n-1\\n1\\n2') == '2'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '6\\n'\n    '3 5 4 7 10 12'\n) == '3\\n' + '7 3 5\\n'\nassert solution(\n    '5\\n'\n    '-1 2 5 8 11'\n) == '1\\n' + '8\\n'"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n\n\"\"\"\nfrom math import log2\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 3') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 3''') == '0 2'\nassert solution('''2 3 1''') == '0 1'\nassert solution('''2 3 2''') == '0 1'\nassert solution('''2 0 0''') == '0 0'\nassert solution('''2 0 1''') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 3') == '0 2'\n\"\"\"\n\nA, B, K = map(int, stdin.split())"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '0 0'\nassert solution('1 1 1') == '0 0'\nassert solution('9 9 9') == '0 0'\nassert solution('10 10 10') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2 4') == '0 2'\nassert solution('2 2 1') == '0 2'\nassert solution('10 10 10') == '0 0'\nassert solution('1 2 10') == '0 2'\nassert solution('10 10 1') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 2 1') == '0 1'\nassert solution('2 2 1') == '1 1'\nassert solution('2 2 1') == '0 1'\nassert solution('2 2 1') == '0 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 2 2') == '0 1'\nassert solution('5 5 6') == '1 2'\nassert solution('7 3 3') == '1 0'\nassert solution('7 3 7') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 3') == '0 2'\n\nprint(solution('2 3 3'))\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 3') == '0 2'\n\"\"\"\n\n\"\"\"\nnotes:\n- each action has a turn to choose\n\"\"\"\nfrom __future__ import annotations\n\nfrom collections import Counter\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"0\"\nassert solution(\"11\") == \"1\"\nassert solution(\"13\") == \"2\"\nassert solution(\"100\") == \"0\"\nassert solution(\"104\") == \"1\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3\n\"\"\"\n\nX = int(input())"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('103') == '3'\nassert solution('3') == '1'\nassert solution('10') == '2'\nassert solution('100') == '4'\nassert solution('1000') == '9'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('102\\n') == 3\nassert solution('101\\n') == 1\nassert solution('103\\n') == 0\nassert solution('110\\n') == 2\nassert solution('103\\n') == 0\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100') == '3'\nassert solution('100000000') == '32'\nassert solution('10') == '1'\nassert solution('101') == '2'\nassert solution('1000000000000') == '33'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100\\n') == '3'\nassert solution('100\\n') == '3'\nassert solution('101\\n') == '1'\nassert solution('1000\\n') == '0'\nassert solution('100000000\\n') == '1'\n\"\"\""
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('100') == ''\nassert solution('999') == ''\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('103') == 3\nassert solution('7') == 1\nassert solution('103') == 3\nassert solution('7') == 1\nassert solution('10') == 2\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''100''') == '1'\nassert solution('''101''') == '2'\nassert solution('''10''') == '1'\nassert solution('''10''') == '1'\nassert solution('''1000000''') == '10000'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 2\nassert solution('5') == 1\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"18\"\nassert solution(\"10\") == \"36\"\n\n\"\"\""
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '1'\nassert solution('5\\n') == '1'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1\\n') == None\nassert solution('1\\n1') == None\nassert solution('1\\n1\\n1') == None\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"18\"\nassert solution(\"4\") == \"36\"\nassert solution(\"5\") == \"105\"\nassert solution(\"6\") == \"120\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '9'\n\n\"\"\""
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n2') == '9'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"36\"\nassert solution(\"4\") == \"84\"\nassert solution(\"5\") == \"125\"\nassert solution(\"6\") == \"60\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"15\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"9\"\nassert solution(\"5\") == \"18\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 6') == 10\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'\nassert solution('3\\n3 4 6\\n') == '10'\nassert solution('3\\n3 4 6\\n') == '10'\nassert solution('3\\n3 4 6\\n') == '10'\nassert solution('3\\n3 4 6\\n') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4 6\") == 10\nassert solution(\"3\\n3 4 6\") == 10\nassert solution(\"3\\n3 4 6\") == 10\nassert solution(\"3\\n3 4 6\") == 10\nassert solution(\"3\\n3 4 6\") == 10\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('3\\n3 4 2') == '2'\nassert solution('5\\n2 4 5 4 3') == '12'\nassert solution('4\\n2 4 2 3') == '0'\nassert solution('4\\n2 4 3 1') == '0'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"\nassert solution(\"4\\n1 2 3 4\") == \"6\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n1 2\") == \"3\"\nassert solution(\"3\\n1\") == \"1\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '3'\nassert solution('3\\n2\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('2\\n2 2') == '0'\nassert solution('3\\n3 3') == '0'\nassert solution('3\\n3 3 3') == '0'\nassert solution('3\\n3 3 3 3') == '0'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n3 4 6\n\"\"\") == \"10\"\n\nassert solution(\n\"\"\"\n1000\n3 4 6\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n1000\n1 1 1\n\"\"\") == \"1000\"\n\nassert solution(\n\"\"\"\n500\n123 456 678\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n1000\n1 1 1\n\"\"\") == \"1\""
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''10\n2 3 4 5 6 7 8 9''') == '37'\n'''"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 2') == 'No'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 2\\n3 2') == 'No'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 2\\n3 2\\n3 2') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == 'Yes'\nassert solution('2 3\\n1 2\\n3 3\\n1 2\\n3 2\\n') == 'Yes'\nassert solution('3 4\\n2 3\\n2 3\\n1 1\\n1 3\\n') == 'No'\nassert solution('5\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('6 6') == 'Yes'\nassert solution('4 4') == 'No'\nassert solution('3 3') == 'Yes'\nassert solution('3 2') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n6 6\\n4 4') == 'Yes'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'No'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n5 5') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n5 5') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n6 6') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'No'\nassert solution('1 2\\n6 6\\n1 1') == 'No'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 1') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2') == 'No'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n1 2\\n1 3\\n3 4\\n2 4\\n3 4') == 'Yes'\nassert solution('1\\n1') == 'No'\nassert solution('4\\n4 4') == 'No'\nassert solution('4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4\\n3 3\\n2 1') == 'No'\nassert solution('5\\n6 6\\n4 4\\n3 3\\n2 1') == 'No'\nassert solution('3\\n6 6\\n4 4\\n3 3\\n2 1') == 'Yes'\nassert solution('3\\n6 6\\n4 4\\n3 3\\n2 2') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"6 6\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"3 2\") == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '12'\nassert solution('4') == '16'\nassert solution('5') == '25'\nassert solution('100') == '5050'"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('4') == '8'\nassert solution('8') == '16'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '16'\nassert solution('5') == '17'\nassert solution('6') == '18'\nassert solution('100') == '9592'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == str(int(input()))\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == 4\nassert solution(\"3\") == 6\nassert solution(\"10\") == 25\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"25\"\nassert solution(\"6\") == \"36\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input('')) == output('')\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(2) == 4\nassert solution(3) == 6\nassert solution(4) == 8\nassert solution(5) == 10\nassert solution(6) == 12\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n3 8 5 1\n'''\n) == 'Yes'\n\nassert solution(\n'''\n3\n3 8 5 1\n'''\n) == 'No'\n\nassert solution(\n'''\n5\n3 8 5 1\n'''\n) == 'Yes'\n\nassert solution(\n'''\n6\n3 8 5 1\n'''\n) == 'Yes'\n\nassert solution(\n'''\n7\n3 8 5 1\n'''\n) == 'No'"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('4\\n8 5 1') == 'No'\nassert solution('4\\n5 8 1') == 'No'\nassert solution('4\\n5 3 1') == 'No'\nassert solution('4\\n5 8 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n3 8 5 1\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"\n1\n100\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"\n10\n4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"No\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('3 5 2 7') == 'Yes'\nassert solution('4 4 1 1') == 'No'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('1 1 3 3') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"5\\n3 4 7 5\") == \"Yes\"\nassert solution(\"7\\n3 4 5 6 7\") == \"Yes\"\nassert solution(\"4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"7\\n4 6 7 8 9\") == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '4\\n'\n    '3 8 5 1'\n) == 'Yes'\nassert solution(\n    '4\\n'\n    '2 2 3 3'\n) == 'No'\nassert solution(\n    '4\\n'\n    '2 1 2 2'\n) == 'No'\nassert solution(\n    '4\\n'\n    '4 4 4 4'\n) == 'No'\nassert solution(\n    '4\\n'\n    '4 4 4 4'\n) == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\nassert solution('3\\n8 5 1') == stdin\nassert solution('5\\n1 1 1 1 1') == stdin\nassert solution('4\\n3 8 5 1') == stdin\nassert solution('5\\n1 1 1 1 1') == stdin\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n3 8 5 1''') == 'Yes'\nassert solution('''3\n5 1 2 3''') == 'No'\nassert solution('''3\n2 1 1''') == 'Yes'\nassert solution('''5\n10 1 1 1 1''') == 'Yes'\nassert solution('''4\n10 1 1 1''') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 8 5 1') == \"Yes\"\nassert solution('4\\n3 8 5 1') == \"Yes\"\nassert solution('4\\n6 5 1 2') == \"No\"\nassert solution('5\\n1 2 3 4 5') == \"Yes\"\nassert solution('2\\n2 2') == \"No\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3 3\n1 7\n3 2\n1 7\n''') == '702'\nassert solution(\n'''\n10 10\n1 9\n9 7\n5 6\n3 3\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3 2\n1 7\n3"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"5 3\") == \"702\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"-1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"1 7\") == \"7\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"1 7\") == \"7\"\nassert solution(\"3 2\") == \"-1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == '1'\nassert solution(\"1 7\") == '7'\nassert solution(\"3 2\") == '2'\nassert solution(\"2 5\") == '3'\nassert solution(\"3 6\") == '5'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 7\\n3 2\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n1 7\\n3 2\\n1 7\\n1 7\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n1 7\\n3 2\\n1 7\\n1 7\\n1 7\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n1 7\\n3 2\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n1 7\\n3 2\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7') == '702'"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == '702'\n\nassert solution('3 2') == '702'\n\nassert solution('3 7') == '702'\n\nassert solution('3 2') == '702'\n\nassert solution('1 7') == '702'"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"3 3\n1 7\n3 2\n1 7\"\"\") == '702'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"2 4\\n8 6\\n8 3\\n9 4\\n0 9\\n9 9\\n9 7\\n7 8\") == \"2\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == '702'\nassert solution('3 3') == '702'\nassert solution('1 3') == '702'\nassert solution('3 3') == '702'\nassert solution('1 3') == '702'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == '9'\nassert solution(\"2 2\") == '6'\nassert solution(\"10 22\") == '6'\nassert solution(\"20 10\") == '6'\nassert solution(\"10 30\") == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '9'"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"9 5\") == \"0\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '9'\nassert solution('5 3') == '0'\nassert solution('5 10') == '0'\nassert solution('1 1') == '0'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nExample:\n\n4 2\n\n9\n\nExplanation:\n(a,b,c) 1,1,1 1,1,3 1,3,1 3,3,3 satisfy the condition, so there are 9 triples.\n\n\"\"\"\n\nN, K = map(int, input().split())\ncnt = 0\nfor a in range(1, N):\n    for b in range(a, N):\n        c = (b + a) % K\n        if c == 0:\n            cnt += 1\nprint(cnt)\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '9'\nassert solution('10 10') == '0'\nassert solution('1 2') == '1'\nassert solution('4 0') == '6'\nassert solution('2 7') == '4'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '9'\nassert solution('3 2') == '9'\nassert solution('1 3') == '4'\nassert solution('1 3 2') == '5'\nassert solution('1 3 2 1') == '5'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1011\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('-9') == '1011'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('8') == '1001'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"-9\") == \"1011\""
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('-9') == '1011'\nassert solution('') == '0'\nassert solution('-9') == '1011'\nassert solution('-9.4') == '1010101001'\nassert solution('-9.4') == '1010101001'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('-9') == '1011'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-9') == '1011'\n'''\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(0) == \"0\"\nassert solution(1) == \"1\"\nassert solution(2) == \"10\"\nassert solution(3) == \"11\"\nassert solution(4) == \"100\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"-9\") == \"1011\"\nprint(solution(\"-9\"))\nassert solution(\"13\") == \"1101\"\nprint(solution(\"13\"))\nassert solution(\"1000\") == \"1111\"\nprint(solution(\"1000\"))\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-9') == '1011'\nassert solution('8') == '1100'\nassert solution('-10') == '1101'\nassert solution('-100') == '101010101010'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"11\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n4 9\\n2 4') == '12'\nassert solution('3 4\\n4 9\\n2 4') == '12'\nassert solution('3 4\\n4 9\\n2 4\\n1 1') == '1'\nassert solution('3 4\\n4 9\\n2 4\\n1 5') == '6'\nassert solution('3 4\\n4 9\\n2 4\\n5 6') == '9'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '9'\n\"\"\""
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 5\n4 9\n2 4\n\"\"\"\n) == '12'\nassert solution(\n\"\"\"\n2 1\n4 2\n\"\"\"\n) == '2'\nassert solution(\n\"\"\"\n5 2\n8 10\n9 7\n9 3\n\"\"\"\n) == '11'\nassert solution(\n\"\"\"\n7 2\n4 10\n5 9\n5 7\n5 3\n5 1\n5 0\n\"\"\"\n) == '4'\nassert solution(\n\"\"\"\n8 3\n10 10\n11 8\n15 9\n19 2\n20 1\n21 0\n\"\"\"\n) == '6'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"2 5\n4 9\n2 4\"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"2 5\n4 9\n2 4\"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"2 5\n4 9\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n2 4\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('1000000 1000\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 5\n4 9\n2 4''') == '12'\n'''\nThe first line of the input contains two space-separated integers N and M (1 \\leq N, M \\leq 10^5) representing the number of stores and the quantity of energy drinks, respectively.\nThe next N lines of the input contain two space-separated integers A_i B_i (1 \\leq A_i \\leq 10^9, 1 \\leq B_i \\leq 10^5) representing the cost of one can of energy drink in store i.\n\n-----Example-----\n\nThe minimum amount of money with which Takahashi can buy M cans of energy drinks is 12 yen.\n\n1 5\n4 9\n2 4\n3 4\n4 8\n5 4\n1 6\n1 9\n1 4\n1 9\n1 6\n1 8\n1 2\n\n'''\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 5\\n4 9\\n2 4\"\n) == \"12\"\n\nassert solution(\n    \"2 6\\n4 9\\n2 4\"\n) == \"8\"\n\nassert solution(\n    \"2 5\\n4 9\\n2 5\"\n) == \"10\"\n\nassert solution(\n    \"2 5\\n4 9\\n2 4\"\n) == \"12\"\n\nassert solution(\n    \"2 5\\n4 9\\n2 6\"\n) == \"6\""
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nfrom typing import List\nfrom collections import namedtuple\n\nCans = namedtuple('Cans', ['currency', 'amount'])"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('1\\n1') == '1'\nassert solution('5\\n1000000000 1000000000') == '1'\nassert solution('1000\\n1000000000 1000000000') == '1'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 4 8 7 3') == '2'\nassert solution('5') == '1'\nassert solution('10 4 8 7 3') == '2'\nassert solution('2 3 4 1 3 4') == '5'\nassert solution('10 5 1 3 5 3 4') == '3'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[8]\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 4 8 7 3') == '2'\nassert solution('9 4 8 7 3') == '2'\nassert solution('0 1 3 5 9') == '1'\nassert solution('0 1 3 2 4') == '2'\nassert solution('0 1 3 2') == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n10 4 8 7 3''') == 2\nassert solution('''10\n
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n10 4 8 7 3\"\n) == 2\n\nassert solution(\n    \"5\\n4 5 5 4 4\"\n) == 2\n\nassert solution(\n    \"5\\n2 4 5 4 4\"\n) == 2\n\nassert solution(\n    \"5\\n2 2 2 2 2\"\n) == 4\n\nassert solution(\n    \"5\\n2 2 2 2 3\"\n) == 4"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('10 4 8 7 3') == '2'\nassert solution
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == ''\n\"\"\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n10') == '2'\nassert solution('2\\n10') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(1)\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n3\\n') == '2'\nassert solution('1\\n4\\n') == '3'\nassert solution('1\\n5\\n') == '3'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"2\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 3\n1 2 2 4 5'''\n) == '1', 'easy'\n\nassert solution(\n'''5 3\n1 2 3 4 5'''\n) == '2', 'easy'\n\nassert solution(\n'''5 3\n1 2 3 3 3'''\n) == '0', 'easy'\n\nassert solution(\n'''5 1\n1 2 3 4 5'''\n) == '0', 'easy'\n\nassert solution(\n'''7 3\n1 2 3 4 5 6 7'''\n) == '2', 'easy'"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('3 3 2 1 1 1 3') == '4'\nassert solution('3 1 1 3 1 2') == '2'\nassert solution('4 1 1 3 1 2') == '4'\nassert solution('6 1 1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('1\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 2 4 2 3''') == '3'\nassert solution('''1 2 2 4 2 3''') == '4'\nassert solution('''1 2 2 4 2 3''') == '4'\nassert solution('''1 2 2 4 2 3''') == '4'\nassert solution('''1 2 2 4 2 3''') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 1') == '1'\nassert solution('4 2 2 1 3') == '2'\nassert solution('2 3 1') == '2'\nassert solution('5 5 3 2 1') == '2'\nassert solution('7 4 5 3 2 1') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 5''') == '3'\nassert solution('''7 5''') == '4'\nassert solution('''8 5''') == '3'\nassert solution('''10 10''') == '4'\nassert solution('''11 10''') == '3'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('1\\n3\\n5') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '10'\nassert solution('2\\n3\\n3') == '2'\nassert solution('3\\n3') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'\nassert solution('1000000000000 42 88\\n10 1 3\\n7 3 2\\n1 1000 1') == '10\\n9\\n1000\\n42000000000000'\n\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == \"10\\n9\\n1000\\n42000000000000\"\n'''\n    return '\\n'.join(map(str, result))\n    '''"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n5 10 1 3\n2 8 9 2\n1 1 1 1 1''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n5 10 1 3\n2 8 9 2\n1 1 1 1 1\n1 1 1 1 1\n2 3 1 1 1''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n5 10 1 3\n2 8 9 2\n1 1 1 1 1\n1 1 1 1 1\n2 3 1 1 1''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n5 10 1 3\n2 8 9 2\n1 1 1 1 1\n2 3 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n2 3 1 1 1''') == '10\\n9\\n1000\\n42000000000000'"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n42000000000000'\n'''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1000000000000000 48 89\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1000000000000000 48 89\n100000000000000 49 90\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1000000000000000 48 89\n100000000000000 49 90\n1000000000000000 49 91\n''') == '10\\n9\\n1000\\n42000000000000'"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '26\\n41\\n51\\n37\\n33\\n18\\n16\\n14\\n11\\n9\\n7\\n5\\n4\\n3\\n2\\n1\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '26\\n41\\n51\\n37\\n33\\n18\\n16\\n14\\n11\\n9\\n7\\n5\\n4\\n3\\n2\\n1\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '26\\n41\\n51\\n37\\n33\\n18\\n16\\n14\\n11\\n9\\n7\\n5\\n4\\n3\\n2\\n1\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '26\\n41\\n51\\n37\\n33\\n18\\n16\\n14\\n11\\n9\\n7\\n5\\n4\\n3\\n2\\n1\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '26\\n41\\n51\\n37\\n33\\n18\\n16\\n14\\n11\\n9\\n7\\n5\\n4\\n3\\n2\\n1\\n'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4') == '10'\nassert solution('2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '10'\nassert solution('1\\n100 100\\n100 1000\\n100 1000000') == '100'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '100'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '10'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"4\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"4\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\"\"\"\n) == \"\"\"10\n9\n1000\n42000000000000\"\"\"\n\nassert solution(\n\"\"\"4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n2\n10 1 1\n7 2 1\n1 1 1\n1000000000000 1 1\"\"\"\n) == \"\"\"10\n1\n1\n1\n1000000000000\"\"\"\n\nassert solution(\n\"\"\"1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == \"10\\n9\\n1000\\n42000000000000\\n\"\n\nassert solution('''\\\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == \"10\\n9\\n1000\\n42000000000000\\n\"\n\nassert solution('''\\\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1 1 3\n1 100 1\n1 100000 1\n1 1000000 1\n1 10000000 1\n1 100000000 1\n1 1000000000 1\n1 10000000000 1\n1 1000000000000 1\n1 10000000000000 1\n1 100000000000000 1\n1 1000000000000000000 1\n1 100000000000000000000 1\n1 1000000000000000000000 1\n1 100000000000000000000000 1\n1 1000000000000000000000000 1\n1 10000000000000000000000000 1\n1 100000000000000000000000000 1\n1 10000000000000000000000000000 1\n1 100000000000000000000000000000 1\n1 1000000000000000000000000000000 1\n1 10000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n1 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 10 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 100 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 100 1\n1000000000000 88 88\n''') == '10\\n9\\n1000\\n42000000000000'"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 6\"\n) == \"2\"\nassert solution(\n    \"3 6\"\n) == \"2\"\nassert solution(\n    \"4 5 6\"\n) == \"4\"\nassert solution(\n    \"10 15 10\"\n) == \"6\"\nassert solution(\n    \"1 2 1\"\n) == \"1\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 6\\n3 4 5\\n') == '2\\n'\nassert solution('3 4\\n3 4\\n') == '1\\n'\nassert solution('2 2\\n2 1\\n') == '2\\n'\nassert solution('3 1\\n3 2\\n3 3\\n') == '4\\n'\nassert solution('1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n1000000 1\\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6\\n3 4 5') == '2'\nassert solution('3 6\\n3 5 4') == '1'\nassert solution('3 6\\n3 4 2') == '0'\nassert solution('3 6\\n3 2 4') == '1'\nassert solution('3 6\\n3 1 4') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6') == '2'\nassert solution('3 4 5') == '2'\nassert solution('3 2 1') == '2'\nassert solution('3 4') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 6\\n3 4 5') == '2'\nassert solution('2 2\\n1 1') == '1'\nassert solution('2 2\\n3 3') == '0'\nassert solution('2 2\\n3 3\\n2 3') == '1'\nassert solution('5 5\\n1 1 1 1 1 1') == '5'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 6\\n3 4 5') == '2\\n'"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 6') == '2'\nassert solution('3 6') == '2'\nassert solution('10 5') == '7'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 1\n3 4 5\n''') == '1'\nassert solution('''3 10\n3 4 5\n''') == '5'\nassert solution('''30 1\n3 4 5\n''') == '7'\nassert solution('''30 100\n3 4 5\n''') == '7'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n\"hogehoge\"\\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample1) == \"Yes\"\nassert solution(sample2) == \"No\"\nassert solution(sample3) == \"Yes\"\nassert solution(sample4) == \"Yes\"\nassert solution(sample5) == \"No\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\nhoge\nenglish\nhoge\nenigma\n\n\"\"\"\n) == 'Yes'\n\nassert solution(\n\"\"\"\n3\nhoge\nenglish\nhoge\n\n\"\"\"\n) == 'Yes'\n\nassert solution(\n\"\"\"\n3\nhoge\nenglish\nhogehoge\n\n\"\"\"\n) == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma''') == 'No'\nassert solution('''3\nhogehoge\nenglish\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma''') == 'Yes'\nassert solution('''6\nhello\nworld\nbyebye\nhello\nworld\nhello\nworld\nbyebye\nhello\nworld\nhello\nworld\nhello\nworld\nhello\nworld''') == 'Yes'\nassert solution('''1\nhogehoge\nenglish\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma\nenigma''') == 'Yes'\nassert solution('''10\nfukuru\ndekiru\nfukuru\ndekiru\nfukuru\ndekiru\nfukuru\ndekiru\nfukuru\ndekiru\nfukuru\ndekiru\nfukuru''') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hoge') == 'No'\nassert solution('english') == 'Yes'\nassert solution('hogehoge') == 'No'\nassert solution('enigme') == 'Yes'\nassert solution('enigma') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\nhoge\\n') == 'Yes'\nassert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'No'\nassert solution('1\\nhogehoge\\n') == 'No'\nassert solution('10\\nhogehogehogehogehoge\\n') == 'Yes'\nassert solution('2\\nhogehoge\\n') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma''') == 'No'\nassert solution('''2\nhoge\nenglish''') == 'Yes'\nassert solution('''1\nhoge''') == 'Yes'\nassert solution('''1\nhogehoge''') == 'Yes'\nassert solution('''5\nhogehogehoge''') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma') == 'No'\nassert solution('4\\nhogehoge\\nenglish\\nhogehoge\\nenigma') == 'Yes'\nassert solution('4\\nenglish\\nhogehoge\\nenglish\\nenglish\\nhogehoge\\nenglish\\nenglish\\nhogehoge\\nenglish') == 'Yes'\nassert solution('4\\nhogehoge\\nenglish\\nhogehoge\\nenigma') == 'No'\nassert solution('4\\nhogehoge\\nenglish\\nhogehoge\\nenigma') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\nimport sys\nfrom io import StringIO"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n') == '6'\n\"\"\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 3\\n2 3') == '6'\nassert solution('1 1\\n1 1\\n1 1\\n2 3\\n2 3\\n2 3') == '8'\nassert solution('1 2\\n1 2\\n2 2\\n1 2\\n1 2\\n2 2\\n1 2\\n1 2\\n1 2\\n1 2\\n2 2') == '8'\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(None)\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n-----100.0%-----\n\n-----6/20/2021-----\n\n-----https://www.codewars.com/kata/515de2f23e1cf2d1a20000e9/train/python-----\n\n-----100%-----\n\n\"\"\""
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\n\"\"\"\n\n\"\"\"\nWhen we have six snack pieces, each guest can take three pieces if we have two guests, and each guest can take two if we have three guests.\n\"\"\"\n\nA,B = map(int,input().split())"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'\n\n\"\"\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3''') == '6'\nassert solution('''2 4''') == '2'\nassert solution('''2 10''') == '6'\nassert solution('''2 10''') == '6'\nassert solution('''2 4''') == '2'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"5 10\") == \"10\"\nassert solution(\"2 3\") == \"6\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('1 10') == '10'\nassert solution('2 3') == '6'\nassert solution('3 5') == '10'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 3') == '7'\nassert solution('3 4') == '8'\nassert solution('4 4') == '10'\nassert solution('6 6') == '12'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n') == '6'\nassert solution('3 5\\n') == '15'\nassert solution('3 5\\n') == '15'\nassert solution('3 5\\n') == '15'\nassert solution('10 10\\n') == '500'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('sss') == 'xxxxxxx'\nassert solution('_') == 'xxxxxxx'\nassert solution('sdf') == 'xxxxxxx'\nassert solution('\\n') == '\\n'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\nprint('Testcase 1 passed')\n\nstdin = 'a'\nassert solution(stdin) == 'ax'\n\nprint('Testcase 2 passed')\n\nstdin = 'abc'\nassert solution(stdin) == 'abc'\n\nprint('Testcase 3 passed')\n\nstdin = 'abcde'\nassert solution(stdin) == 'abcdex'\n\nprint('Testcase 4 passed')\n\nstdin = 'abcdef'\nassert solution(stdin) == 'abcdef'\n\nprint('Testcase 5 passed')\n\nstdin = 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('skateboard') == 'xxxxxxxx'\nassert solution('dddd') == 'dddd'\nassert solution('skateboard') == 'xxxxxxxx'\nassert solution('ddddd') == 'dddddddddd'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"mississippi\") == \"xxxxxxx\"\nassert solution(\"z\") == \"z\"\nassert solution(\"qqqqq\") == \"qqqqq\"\nassert solution(\"bbbbbbbb\") == \"bbbbbbbb\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"unlikely\") == \"xxxxxxxx\"\nassert solution(\"abracadabra\") == \"abrackdabra\"\nassert solution(\"aaaaaaaa\") == \"xxxxxxxx\"\nassert solution(\"mettatttatttgattiouoollll\") == \"metttattttattxiouolll\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"xxxxxxx\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\"\"\""
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input('')) == 'Yes'\nassert solution(input('0')) == 'Yes'\nassert solution(input('1')) == 'Yes'\nassert solution(input('2')) == 'Yes'\nassert solution(input('3')) == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 2 1\") == \"Yes\"\nassert solution(\"4\\n5 4 3 2 1\") == \"Yes\"\nassert solution(\"3\\n1 2 1\") == \"No\"\nassert solution(\"10\\n10 1 8 7 7 1 1 8\") == \"No\"\nassert solution(\"10\\n5 5 1 2 2 1 5\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n---ONLINE CHALLENGE---\nAnkit is a very good boy. He likes playing with different numbers. He recently got interested in a game of Pigeonhole Sort.\n\nPigeonhole Sort\nThe Pigeonhole Sort is a sorting algorithm that works as follows:\n1. Fill the pigeonholes, from left to right, with the smaller elements.\n2. Sort the elements in the ascending order.\nInput\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a positive integer N denoting the number of elements in the array A.\nThe second line contains N space-separated integers A1, A2,..., AN denoting the elements of the array.\nOutput\nFor each test case, print a single line containing Case #x: y, where x is the test case number (starting from 1) and y is the sorted array.\n\nExamples\nInput\n3\n3\n1 2 3\n3\n1 2 3\n5\n1 2 3 4 5\n\nOutput\nCase #1: 1 2 3\nCase #2: 1 2 3\nCase #3: 1 2 3 4 5\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5\n1 2 1 1 3\n''') == \"Yes\"\n\nassert solution(\n'''\n4\n1 2 1 1\n''') == \"No\"\n\nassert solution(\n'''\n5\n1 2 2 2 1\n''') == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('2 3 3 2 1') == 'No'\nassert solution('1 2 1 2 3') == 'Yes'\nassert solution('1 2 3 4 5') == 'Yes'\nassert solution('1 2 3 4 5') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 2 1 2 3') == 'No'\nassert solution('3 2 3 2 1') == 'Yes'\nassert solution('3 2 3 1 2') == 'No'\nassert solution('1 2 3 2 1') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1 3\\n') == 'Yes'\nassert solution('1 2 1 1 3\\n') == 'No'\nassert solution('1 2 1 1 3\\n') == 'Yes'\nassert solution('1 2 1 1 3\\n') == 'Yes'\nassert solution('1 2 1 1 3\\n') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('1 1 2 3 4') == 'No'\nassert solution('1 2 1 1') == 'No'\nassert solution('1 1 2 1 1') == 'Yes'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 -2\\n') == '2'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 -2\\n1 2 3\\n') == '2'\nassert solution('3 4 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n1 2 -1\\n') == '2'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '1'\nassert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '0'\nassert solution('''2 3 -10\n1 2 3\n1 1 1\n3 2 1\n1 2 2\n''') == '0'\n'''\n'''\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n') == '2'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 3\\n1 2 3\\n') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 3\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 3\\n1 2 3\\n3 2 1\\n1 2 2\\n3 2 3\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '1'\nassert solution('1 2 1') == '0'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '1'\nassert solution('1 2 2') == '0'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '2'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n3 2 1') == '1'\nassert solution('1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('1 2 3\\n3 2 1\\n1 2 2\\n2 2 1') == '0'\nassert solution('1 2 3\\n3 2 1\\n1 2 2\\n2 2 1\\n2 2 1') == '2'\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 2') == '2'\n\"\"\"\n\n\"\"\"\nA = [-1,-2,2,5,1,8,7,3,4,6]\nB = [4,3,1,6,1,3,4,5,4,2]\nC = 6\n\nsum_A = sum(A)\nsum_B = sum(B)\nans = 0\nfor i in range(len(A)):\n    ans += min(C, A[i]*B[i])\nprint(ans)\n\"\"\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '4'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1 -10\") == \"1\"\nassert solution(\"2 3 -10\") == \"1\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"1 2 2\") == \"1\"\nassert solution(\"3 2 1\") == \"1\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1900''') == '100'\n'''\nThe first line contains an integer T denoting the number of test cases.\nThe next T lines each contain an integer N.\n'''\n\n'''\n-----Template------\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('1000') == '1'\nassert solution('2000') == '2'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"100\"\n\"\"\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"10000\") == \"1\"\nassert solution(\"99999\") == \"10\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"100\") == \"100\"\nassert solution(\"3\") == \"3\"\nassert solution(\"300000000000000000000\") == \"300000000000000000000\"\nassert solution(\"300000000000000000001\") == \"300000000000000000001\"\nassert solution(\"700000000000000000000000\") == \"700000000000000000000000\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('100') == '100'\nassert solution('100') == '100'\nassert solution('1000') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"6\") == \"0\"\nassert solution(\"4000\") == \"2000\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000') == '100'\nassert solution('1900') == '100'\nassert solution('0') == '0'\nassert solution('-1') == '-1'\nassert solution('10000') == '0'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('123') == '999'\nassert solution('1') == '1'\nassert solution('12345') == '54321'\nassert solution('1337') == '733'\nassert solution('88888') == '888999'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'\nassert solution('2\\n3 5 2\\n4 5\\n1 3\\n2 3') == '7'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n9\n''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'\nassert solution('2\\n4 5\\n3 5') == '9'\nassert solution('2\\n3 3\\n3 3') == '0'\nassert solution('2\\n2 1\\n1 2') == '1'\nassert solution('2\\n3 4\\n3 4') == '0'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n2\n3 5 2\n4 5\n'''\n    ) == '9'\n\nassert solution(\n'''\n1\n1\n'''\n    ) == '1'\n\nassert solution(\n'''\n100\n50\n'''\n    ) == '50'\n\nassert solution(\n'''\n1\n100\n'''\n    ) == '100'\n\nassert solution(\n'''\n1\n1\n'''\n    ) == '1'"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3 5 2') == '9'\nassert solution('2\\n4 5') == '12'\nassert solution('2\\n3 3') == '6'\nassert solution('3\\n3 4 4') == '12'\nassert solution('4\\n2 1 1 3') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'\nassert solution('3\\n1 2 3\\n4 5') == '10'\nassert solution('4\\n1 2 3 4\\n2 2 2 2') == '4'\nassert solution('4\\n1 2 3 4\\n3 3 2 2') == '6'\nassert solution('4\\n1 2 3 4\\n4 4 3 2') == '4'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5\\n') == '9'\nassert solution('1 1 2 2 2\\n') == '6'\nassert solution('2 3 4\\n') == '3'\nassert solution('2 3\\n') == '2'\nassert solution('2 3\\n') == '2'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"4 5 2 10 15\\n1 2 4 8 19\\n3 9 2 3 17\\n1 2 4 8 19\") == \"War\"\nassert solution(\"2 2 1 1\\n1 1 1 1\") == \"No War\"\nassert solution(\"1 2 1 1\\n1 1 1 1\") == \"War\"\nassert solution(\"1 2 1 1\\n1 1 1 1\") == \"No War\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n4 4 4 4 4 4\\n4 4 4 4 4 4\\n4 4 4 4 4 4\\n4 4 4 4 4 4\\n4 4 4 4 4 4\\n4 4 4 4 4 4\\n4 4 4 4 4 4\\n4 4 4 4 4 4') == 'War'\n\"\"\"\nfrom __future__ import annotations\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 19\n8 15 13\n16 22''') == 'War'\nassert solution('''3 3 3 3\n1 1 1 1\n1 2 3 4\n1 1 1 1''') == 'War'\nassert solution('''3 3 3 3\n1 1 1 1\n1 2 3 4\n1 1 1 1''') == 'War'\nassert solution('''3 3 3 3\n-1 -1 -1 -1\n-1 2 3 4\n-1 -1 -1 -1''') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"No War\"\n\"\"\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == 'War'\nassert solution('2 3 4 6') == 'War'\nassert solution('2 3 4 6') == 'No War'\nassert solution('3 4 6 8') == 'War'\nassert solution('3 4 6 8') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 16') == 'War'\nassert solution('3 2 10 19\\n8 15 13\\n16 16') == 'War'\nassert solution('3 2 10 19\\n8 15 13\\n16 17') == 'War'\nassert solution('3 2 10 19\\n8 15 13\\n16 19') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.replace('\\n', '')\n\n'''\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 2 10 20\n8 15 13\n16 22\n\"\"\".strip()) == \"No War\"\n\nassert solution(\n\"\"\"\n3 2 10 20\n8 15 13\n16 22\n\"\"\".strip()) == \"War\"\n\nassert solution(\n\"\"\"\n3 2 10 -3\n8 15 13\n16 22\n\"\"\".strip()) == \"War\"\n\nassert solution(\n\"\"\"\n3 2 10 -3\n8 15 13\n16 22\n\"\"\".strip()) == \"War\"\n\nassert solution(\n\"\"\"\n3 2 10 20\n8 15 13\n16 22\n\"\"\".strip()) == \"No War\""
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''4\n2\n3\n4\n5\n6''') == '6'\nassert solution('''3\n1\n2\n3\n4\n5\n6''') == '6'\nassert solution('''5\n1\n1\n1\n1\n1\n1''') == '6'\nassert solution('''4\n2\n2\n2\n2''') == '12'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2') == '3'\nassert solution('3\\n3\\n3') == '9'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''2\n1000000\n1000000''') == '1000000'\nassert solution('''2\n1000000\n2\n1000000''') == '1000000'\nassert solution('''2\n2\n3\n2\n1000000\n1000000''') == '6'\nassert solution('''1\n2\n1\n1''') == '0'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''5\n3\n2\n1\n3\n4''') == '11'\nassert solution('''2\n2\n3\n2\n1''') == '3'\nassert solution('''1\n3\n2\n2\n1''') == '3'\nassert solution('''4\n3\n4\n3\n4''') == '9'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''3\n2\n3''') == '9'\nassert solution('''3\n3\n3''') == '12'\nassert solution('''10\n2\n3''') == '33'\nassert solution('''4\n2\n3''') == '36'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n3') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''4\n1\n2\n3\n4''') == '5'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n2\n2\n2\n2\n2''') == '8'\nassert solution('''10\n5\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '36'\nassert solution('''100\n40\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '70440'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3\\n4') == '6'\nassert solution('10\\n4\\n10') == '12'\nassert solution('3\\n5\\n7') == '7'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1''') == '3'\nassert solution('''2\n2''') == '4'\nassert solution('''2\n3''') == '5'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 1\nassert solution('1 2 3 4 5') == 2\nassert solution('1 2 3 4 5 6') == 3\nassert solution('1 2 3 4 5 6 7') == 4\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '1'\nassert solution('2 4 5 6') == '3'\nassert solution('1 2 3 4 5 6') == '0'\nassert solution('3 9 5 8 4 2') == '6'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == 0\nassert solution('1 2 3 4 5') == 1\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 0\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 1\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 0\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2 3\") == \"0\"\nassert solution(\"2\\n1 2 3\\n1 2 1\") == \"0\"\nassert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"2\\n1 2 3\\n1 2 1\") == \"0\"\nassert solution(\"3\\n1 2 3\\n1 2 1\") == \"0\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2 3') == '0'\nassert solution('2\\n1 2 3') == '0'\nassert solution('2\\n1 2 3') == '0'\nassert solution('2\\n1 2 3') == '0'\nassert solution('2\\n1 2 3') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 0\n\"\"\"\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == 0\nassert solution(\"2 1 3\") == 0\nassert solution(\"3 2 1\") == 2\nassert solution(\"1 2 3 4\") == 3\nassert solution(\"4 1 3 4\") == 3\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('1 2 3\\n4 5 6') == '0'\nassert solution('3 4\\n1 2 3\\n4 5 6') == '2'\nassert solution('3 4\\n1 2 3\\n4 5 6\\n7 8 9') == '0'\nassert solution('3 4\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '2'"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('2 3 1') == '0'\nassert solution('3 4 1 2 3 4 1') == '0'\nassert solution('4 3 2 1 4 2 1 3') == '2'\nassert solution('3 4 2 1 4 2 1 3') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3''') == '6'\nassert solution('''4 3''') == '0'\nassert solution('''3 4''') == '2'\nassert solution('''4 4''') == '0'\nassert solution('''3 5''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == ''\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\n\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '6'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '0'\nassert solution('3 4\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '2'\n\n\"\"\""
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3''') == '6'\nassert solution('''3 4''') == '0'\nassert solution('''3 4''') == '2'\nassert solution('''3 4''') == '0'\nassert solution('''3 4''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'\nassert solution('4 5\\n1 2 3 4\\n5 6 7 8\\n9 2 11 12\\n13 14 15 16\\n17 18 19 20\\n') == '2'\nassert solution('5 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20 21\\n22 23 24 25 26\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 4 4 4') == '1'\nassert solution('7\\n1 10 100 100 100 100 100') == '4'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n1 1') == '99'\nassert solution('6\\n10 22 4 17 16 22 4') == '5'\n\n\n-----\n\n## solution"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n1 100\\n1 100') == '99'\nassert solution('2\\n1 100\\n1 100\\n1 100') == '99'\nassert solution('2\\n1 100\\n1 100\\n1 100\\n1 100') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n5 10 2 3 14 5\n''') == '5'\n\nassert solution('''\n2\n1 100\n''') == '99'\n\nassert solution('''\n7\n1 100 2 2 3 3 4 4\n''') == '6'\nassert solution('''\n7\n1 100 2 2 3 3 4 4\n''') == '6'\n\nassert solution('''\n1\n1\n''') == '1'"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\n\"\"\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == answer\n\n\n\n\n\n'''\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\n\n\"\"\""
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\\n\") == \"5\\n\"\nassert solution(\"2\\n1 100\\n\") == \"99\\n\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 100') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('1\\n100') == '99'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n1 1') == '1'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('6\\n2 1 4 3 2 3\\n') == '7'\nassert solution('3\\n1 100 1 100\\n') == '4'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('6\\n5 10 2 3 14 5\\n') == '5'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'\n\"\"\"\n\nfrom collections import deque\nimport sys"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == output\n\n\"\"\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 0 0') == '0'\nassert solution('1 0 1 0 1') == '2'\nassert solution('1 0 1 1 1 0') == '3'\nassert solution('1 0 1 1 1 0 1') == '4'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 0 1 0 1''') == '2'\nassert solution('''6\n0 1 0 1 1 0''') == '2'\nassert solution('''7\n1 0 1 1 1 0 1''') == '3'\nassert solution('''3\n0 0 0''') == '0'\nassert solution('''7\n0 1 0 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'\nassert solution('3\\n0 0 0\\n') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '2'\nassert solution('''1 0 1 0 1''') == '2'\nassert solution('''6''') == '2'\nassert solution('''0 1 0 1 1 0''') == '2'\nassert solution('''7''') == '3'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('12') == '0'\nassert solution('7') == '0'\nassert solution('13') == '1'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('343535') == ''\nassert solution('aaaa') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('16') == '1'\n\nassert solution('1 1 1 1 1 1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1 1 1 1 2') == '1'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 1\nassert solution('1') == 0\nassert solution('0') == 1\nassert solution('1 0 1 1') == 1\nassert solution('3') == 0\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 1\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 1\nassert solution('5') == 1\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == input()\n\"\"\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('3') == 1\nassert solution('5') == 0\nassert solution('2') == 1\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '9\\n'\n    'brie soft\\n'\n    'camembert soft\\n'\n    'feta soft\\n'\n    'goat soft\\n'\n    'muenster soft\\n'\n    'asiago hard\\n'\n    'cheddar hard\\n'\n    'gouda hard\\n'\n    'swiss hard'\n) == '3'\nassert solution(\n    '6\\n'\n    'parmesan hard\\n'\n    'emmental hard\\n'\n    'edam hard\\n'\n    'colby hard\\n'\n    'gruyere hard\\n'\n    'asiago hard'\n) == '4'\nprint('passed')\n\"\"\""
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"test\") == \"test\"\nassert solution(\"brie\\nsoft\\ncamembert\\nhard\\nfeta\\nsoft\\ngoat\\nsoft\\nmuenster\\nhard\\nasiago\\ncheddar\\ngouda\\nhard\\nswiss\\n\") == \"brie\\ncamembert\\nfeta\\ngoat\\nmuenster\\nasiago\\ncheddar\\ngouda\\nswiss\"\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3'\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == '4'\n\"\"\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"brie\") == \"brie\"\nassert solution(\"parmesan\") == \"parmesan\"\nassert solution(\"feta\") == \"feta\"\nassert solution(\"cameron\") == \"cameron\"\nassert solution(\"cedar\") == \"cedar\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard''') == \"3\"\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == \"4\"\nassert solution('''1\nlee soft''') == \"1\"\nassert solution('''8\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\nedam hard''') == \"8\"\nassert solution('''5\ncami hard\ngruszka soft\ndunner hard\nswielok hard\nturntow hard''') == \"7\""
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n') == '3'\nassert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n') == '4'\nassert solution('parmesan hard\\nemmel hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == '4'\nassert solution('parmesan soft\\nemmel soft\\nedam soft\\ncolby soft\\ngruyere soft\\nasiago soft\\n') == '5'\nassert solution('parmesan soft\\nemmel soft\\nedam soft\\ncolby soft\\ngruyere soft\\nasiago soft\\n') == '6'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n') == '3'\nassert solution('parmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasago hard\\n') == '4'\nassert solution('kahlua hard\\ncajamaro hard\\njagger hard\\ngorgonhard\\nswiss hard\\n') == '5'\n\n\n-----My Solution-----\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9\\n'\n'brie soft\\n'\n'camembert soft\\n'\n'feta soft\\n'\n'goat soft\\n'\n'muenster soft\\n'\n'asiago hard\\n'\n'cheddar hard\\n'\n'gouda hard\\n'\n'swiss hard') == '3'\nassert solution('6\\n'\n'parmesan hard\\n'\n'emmental hard\\n'\n'edam hard\\n'\n'colby hard\\n'\n'gruyere hard\\n'\n'asiago hard\\n') == '4'\nassert solution('5\\n'\n'grannys soft\\n'\n'chorizo soft\\n'\n'apricot soft\\n'\n'larder soft\\n'\n'camembert hard') == '2'\nassert solution('1\\n'\n'ricotta soft') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9\\n'\n'brie soft\\n'\n'camembert soft\\n'\n'feta soft\\n'\n'goat soft\\n'\n'muenster soft\\n'\n'asiago hard\\n'\n'cheddar hard\\n'\n'gouda hard\\n'\n'swiss hard') == '3'\nassert solution('6\\n'\n'parmesan hard\\n'\n'emmental hard\\n'\n'edam hard\\n'\n'colby hard\\n'\n'gruyere hard\\n'\n'asiago hard\\n') == '4'\nassert solution('3\\n'\n'chicken soft\\n'\n'camembert soft\\n'\n'cheese'\n'cheese hard\\n'\n'swiss hard') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3'\nassert solution('parmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == '4'\nassert solution('brie') == '1'\nassert solution('brie soft') == '1'\nassert solution('emmental') == '2'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom functools import reduce\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n3') == '0 1 2'\nassert solution('2\\n3\\n2') == '3 2 1'\nassert solution('1\\n1\\n1') == '0 0 0'\nassert solution('2\\n2\\n2') == '2 1 0'\nassert solution('3\\n3\\n3') == '0 1 2'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2\\n'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\nprint(solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n'))\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '0 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2\\n'\nassert solution('3\\n0 1 2 1\\n3 2 1 1\\n') == '0 0 0 1\\n'\nassert solution('3\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\nassert solution('4\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\nassert solution('4\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\n\n\n\"\"\""
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 2 1\\n3 2 1 1\\n') == '0 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\nassert solution('7\\n2 4 3 5 6 5 1\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\nassert solution('3\\n1 2 3\\n1 3 2\\n') == '0 1 2 1'\nassert solution('3\\n1 2 3\\n1 3 2\\n') == '1 1 1 0'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\n0 1 2 1\n3 2 1 1\n''') == '0 0 0 2'\nassert solution(\n'''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution(\n'''8\n1 1 2 1 1 1 1\n1 1 1 1 1 1 1\n''') == '0 0 0 1 0 2 4'\nassert solution(\n'''6\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '0 0 0 1 0 2 4'\nassert solution(\n'''8\n3 1 1 1 1 1 1\n1 1 1 1 1 1 1\n''') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n1\\n1\\n0') == 0\nassert solution('1\\n0\\n1\\n0') == 1\nassert solution('1\\n1\\n1\\n0') == 1\nassert solution('0\\n0\\n0\\n1') == 0\n\n-----Alternate way to test-----"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nprint(\"Test passed.\")\n\n\n-----Answer-----\n\n\"\"\"\n\nfrom functools import lru_cache\n\n\n@lru_cache(None)\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(0) == 0\nassert solution(1) == 1\nassert solution(1) == 1\nassert solution(0) == 0\nassert solution(1) == 1\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n1\\n0') == '1'\nassert solution('0\\n1\\n0\\n0') == '0'\nassert solution('0\\n1\\n0\\n1') == '1'\nassert solution('1\\n1\\n0\\n0') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(0) == 1\nassert solution(1) == 1\nassert solution(0) == 1\nassert solution(0) == 0\nassert solution(1) == 0\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[0]\nprint(\"Test passed!\")\n\"\"\""
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '0'\n    '1'\n    '1'\n    '0'\n) == '0'\n'''\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n1\\n1\\n0\\n') == '0'\nassert solution('0\\n0\\n0\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n') == '0'\n\n\n-------\n\nTo debug:\n\n- cProfile.run(solution('1\\n1\\n1\\n1\\n'))\n\n\"\"\"\n\nimport cProfile"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1000 15 80'''\n) == 'Yes'\nassert solution(\n'''1000 10 10'''\n) == 'No'\nassert solution(\n'''1000 30 70'''\n) == 'No'\nassert solution(\n'''1000 100 50'''\n) == 'Yes'\nassert solution(\n'''1000 10 10'''\n) == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 30 90\") == \"No\"\nassert solution(\"1000 15 90\") == \"No\"\nassert solution(\"1000 10 10\") == \"Yes\"\nassert solution(\"0 0 0\") == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('100000 10 10') == 'Yes'\nassert solution('100000 100 10') == 'No'\nassert solution('1000 1000 10') == 'No'\nassert solution('1000 1 10') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 1') == 'No'\nassert solution('1000 1 1') == 'Yes'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 1 100') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 15 80') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000 15 80') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"\nassert solution(\"6 4 17\\n19 5 6\\n7 17 8\\n7 14 8\\n14 9 1\\n4 16 1\\n16 8 4\\n6 7 15\\n16 4 9\\n19 3 5\\n18 9 2\\n16 1 7\\n6 19 7\\n14 8 9\\n9 7 10\\n12 9 6\\n14 1 9\\n19 4 6\\n18 7 5\\n8 19 8\\n5 19 7\\n9 19 3\\n19 5 15\\n17 15 2\\n6 8 12\\n2 10 4\\n10 15 1\\n13 15 7\\n5 19 4\\n18 7 19\\n15 5 4\\n18 1 7\\n15 19 2\\n8 18 6\\n1 15 11\\n5 7 13\\n6 19 1\\n1 16 7\\n8 19 4\\n4 17 8\\n5 19 6\\n9 19 2\\n17 19 1\\n5 19 7\\n1 19 3\\n7 19 5\\n14 19 1\\n1 19 3\\n1 19 4\\n8 19 6\\n7 19 7\\n9 19 3\\n19 19 1\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 3\\n1 19 4\\n1 19 5\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n17 19 5\\n1 19 7\\n1 19 3\\n1 19 4\\n19 19 3\\n1 19 4\\n1 19 5\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n19 19 5\\n1 19 7\\n1 19 3\\n1 19 4\\n19 19 3\\n1 19 4\\n1 19 5\\n19 19 5\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n19 19 5\\n1 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n5 19 7\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3\\n1 19 4\\n19 19 1\\n1 19 3"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12\\n') == 'No'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n') == 'Yes'\n\n'''"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'Yes'\nassert solution('''15 24 22\n22 21 20\n21 17 17\n17 19 19\n19 14 17\n18 17 19\n17 12 19\n19 16 17\n16 17 19\n17 16 19\n16 19 19\n15 19 19\n15 19 19\n15 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19\n14 19 19"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'Yes'\nassert solution('''64 51 68\n67 52 67\n61 61 61\n7\n67\n66\n56\n46\n44\n34\n42\n32\n30''') == 'No'\nassert solution('''25 59 76\n69 77 79\n67 78 79\n67 79 79\n67 79 79\n68 78 79\n67 78 79\n67 78 79\n67 79 79\n66 78 79\n65 78 79\n65 78 79\n64 78 79\n63 78 79\n62 78 79\n61 78 79\n60 78 79\n59 78 79\n58 78 79\n57 78 79\n56 78 79\n45 78 79\n44 78 79\n43 78 79\n42 78 79\n41 78 79\n40 78 79\n39 78 79\n38 78 79\n37 78 79\n36 78 79\n35 78 79\n34 78 79\n33 78 79\n32 78 79\n31 78 79\n30 78 79\n29 78 79\n28 78 79\n27 78 79\n26 78 79\n25 78 79\n24 78 79\n23 78 79\n22 78 79\n21 78 79\n20 78 79\n19 78 79\n18 78 79\n17 78 79\n16 78 79\n15 78 79\n14 78 79\n13 78 79\n12 78 79\n11 78 79\n10 78 79\n9 78 79\n8 78 79\n7 78 79\n6 78 79\n5 78 79\n4 78 79\n3 78 79\n2 78 79\n1 78 79\n0 78 79''') == 'Yes'\nassert solution('''46 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n45 42 43\n45 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44 42 43\n44 42 43\n45 42 43\n45 42 43\n44 42 43\n44"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"\nassert solution(\"42 48 72\\n36 40 59\\n17 35 36\\n3 5 17\\n3\\n5\\n3\") == \"No\"\nassert solution(\"11 33 22\\n33 44 37\\n22 22 19\\n1 3 12\\n1\\n1\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"\nassert solution(\"42 48 72\\n36 40 59\\n17 35 36\\n3 5 17\\n3\\n5\\n3\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 6 89') == 'Yes'\nassert solution('7 6 89 79 89 11 61 59 7') == 'No'\nassert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'No'\nassert solution('7 9 7') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"Yes\"\nassert solution(\"79 89 11\\n61 59 7\\n7\") == \"Yes\"\nassert solution(\"61 59 7\\n7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 30\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('41 2') == '30'\nassert solution('21 1') == '-1'\nassert solution('21 1') == '-1'\nassert solution('21 1') == '-1'\nassert solution('21 1') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('41 2') == '30'\nassert solution('1 2') == '-1'\nassert solution('1234 5678') == '-1'\nassert solution('1012 1234567') == '-1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''41 2\n5 6''') == '30'\n'''\nimport sys\nlines = sys.stdin.readlines()\nn, m = [int(x) for x in lines[0].split()]\na = [int(x) for x in lines[1].split()]\n\nres = 0\nremaining = m\nfor d in range(n):\n    if remaining >= a[d]:\n        remaining -= a[d]\n        res += 1\n    else:\n        break"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('41 2') == '30'\nassert solution('5 6') == '30'\nassert solution('5 1') == '-1'\nassert solution('10 2') == '-1'\nassert solution('5 10') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 30\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"41 2\n5 6\"\"\"\n) == 30\n\nassert solution(\n\"\"\"1 2\n1\"\"\"\n) == -1\n\nassert solution(\n\"\"\"1 2\n1\"\"\"\n) == -1\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"41 2\") == 30\nassert solution(\"5 6\") == 30\nassert solution(\"1 2\") == -1\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41\") == 30\nassert solution(\"5 4\") == -1\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('41 2') == '30'\nassert solution('1 10') == '-1'\nassert solution('1 100') == '-1'\nassert solution('100 2') == '-1'\nassert solution('1 10 2') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n5 6') == '30'\n\"\"\"\n\nfrom functools import lru_cache\nfrom typing import List"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1\n''') == '100'\nassert solution('''0 1\n''') == '1'\nassert solution('''0 1\n''') == '10'\nassert solution('''1 1\n''') == '1'\nassert solution('''1 1\n''') == '100'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 1\") == \"1\"\nassert solution(\"0 2\") == \"2\"\nassert solution(\"0 3\") == \"3\"\nassert solution(\"0 4\") == \"4\"\nassert solution(\"0 5\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0 1') == '1'\nassert solution('0 2') == '1'\nassert solution('0 5') == '1'\nassert solution('0 10') == '2'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input().split()) == ''\n\n\"\"\"\nimport sys\n\ninput = sys.stdin.readline\n\nd, n = map(int, input().split())\n\nmin_d = int(n / 100) * 100"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0''') == ''\nassert solution('''1 1''') == '1'\nassert solution('''2 2''') == '10'\nassert solution('''0 1''') == '11'\nassert solution('''4 3''') == '1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 5''') == '5'\nassert solution('''1 1''') == '100'\nassert solution('''2 2''') == '10'\nassert solution('''1 3''') == '300'\nassert solution('''2 3''') == '30'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 0') == '100'\nassert solution('0 1') == '101'\nassert solution('0 2') == '102'\nassert solution('0 3') == '103'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2') == '1'\nassert solution('1 1') == '2'\nassert solution('2 2') == '4'\nassert solution('3 1') == '10'\nassert solution('2 3') == '60'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n\"\"\"\n\n\"\"\"\nWe can use binary search to find the solution\n\"\"\"\n\nn, k = [int(i) for i in input().split()]"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\"\"\"\n\"\"\""
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1') == '1'\nassert solution('2\\n3') == '1'\nassert solution('2\\n3 2') == '1'\nassert solution('2\\n4') == '1'\nassert solution('2\\n4 1') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"3\\n7 6 8\") == '2'\n\nassert solution(\n\"3\\n4 1 2\") == '1'\n\nassert solution(\n\"3\\n4 4 4\") == '4'\n\nassert solution(\n\"3\\n4 2 3\") == '2'\n\nassert solution(\n\"3\\n4 2 1\") == '1'"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n7 6 8''') == '2'\nassert solution('''7\n7 6 8''') == '2'\nassert solution('''2\n7 6 8''') == '1'\nassert solution('''5\n7 6 8 9 10''') == '2'\nassert solution('''1\n2''') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n7 6 8''') == '2'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''5\n3 5 7 9 2''') == '3'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10''') == '1'\nassert solution('''10000\n1 2 3 4 5 6 7 8 9 10''') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('3\\n4 5 6') == '1'\nassert solution('3\\n5 6 7') == '1'\nassert solution('3\\n8 9 10') == '1'\nassert solution('3\\n5 6 7 8') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 2"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nassert solution(\"3\\n7 2 6\") == \"1\"\nassert solution(\"5\\n1 1 2 3 4 5\") == \"5\"\nassert solution(\"5\\n1 1 2 3 4 5\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 6 8') == '2'\nassert solution('4 1 2') == '1'\nassert solution('5 8 7') == '1'\nassert solution('1 100 1') == '100'\nassert solution('100 990 9') == '99'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n1 3 2') == '3 1 2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n2 3 1''') == '3 1 2'\nassert solution('''5\n4 5 4 3 2''') == '4 3 2 5'\nassert solution('''100\n
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 3 1\n''') == '3 1 2'\nassert solution('''\n10\n7 4 3 1 2 5 6 9 8 10\n''') == '7 4 3 1 2 5 6 9 8 10'\nassert solution('''\n10\n2 3 1 4 5 6 7 8 9 10\n''') == '9 8 10 7 4 3 1 2'\n'''\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('1\\n2 3 4') == '2 3 1'\nassert solution('1\\n1') == '1'\nassert solution('5\\n3 2 1 2 4') == '3 2 1 4 2'\nassert solution('4\\n2 2 2 2') == '2 2 2 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n2 3 1') == '3 1 2'\nassert solution('1\\n1 1 1') == '1'\nassert solution('1\\n2 1 1') == '2'\nassert solution('1\\n3 1 1') == '3'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 1') == '3 1 2'\nassert solution('4 2 1 2 3') == '3 1 2 4'\nassert solution('6 2 1 4 2 3 3') == '3 1 2 4 6'\nassert solution('7 3 1 4 2 3 2 3 4') == '3 1 2 4 6 7'\nassert solution('8 3 1 4 2 3 2 3 4 5') == '3 1 2 4 6 7 8'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\nassert solution(\"3\\n2 3 1\") == \"3 1 2\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"1 2\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n3 1\\n1 2') == '3 1 2'\nassert solution('1\\n1') == '1'\nassert solution('5\\n1 2 3 4 5') == '5 4 3 2 1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\nassert solution(\"3\\n1 3 2\") == \"1 3 2\"\nassert solution(\"4\\n1 1 1 1\") == \"1 1 4\"\nassert solution(\"4\\n1 1 2 2\") == \"1 2 4\"\nassert solution(\"4\\n1 2 1 1\") == \"2 1 4\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"7 8 9\") == \"9\"\nassert solution(\"3 6 9\") == \"9\"\nassert solution(\"12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"99999888899\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"99999888899\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('100000 200000 10000') == '50000'\nassert solution('1 2 3') == '0'\nassert solution('3 2 2') == '2'\nassert solution('5 6 10') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('1 2 3') == '0'\nassert solution('10 7 100') == '9'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4 5') == '15'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 10') == '0'\nassert solution('10 7 20') == '19'\nassert solution('10 7 110') == '99'\nassert solution('10 7 20') == '19'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('10 7 100') == '9'\nassert solution('10 5 25') == '4'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('5 6 10') == '9'\nassert solution('10 0 100') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"10 7 100\"\"\") == \"9\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 3') == '0'\nassert solution('2 4') == '1'\nassert solution('2 5') == '2'\nassert solution('2 6') == '0'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 150') == 2\nassert solution('4 300') == 0\nassert solution('4 150') == 2\nassert solution('5 100') == 1\nassert solution('8 300') == 1\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '2'\nassert solution('2 3') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1 2') == '1'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 2 3') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('2 4 7 1 2') == '2'\nassert solution('1 2 1 1') == '0'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 150\n150 140 100 200''') == '2'\nassert solution('''1 2\n1''') == '1'\nassert solution('''1 2\n3''') == '2'\nassert solution('''10 100\nn''') == '0'\n\nassert solution('''4 10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 150\n150 140 100 200\n''') == '2'\n'''\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"4 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"2 1\") == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1''') == 'Yes'\nassert solution('''4 1\n5 4 2 1''') == 'Yes'\nassert solution('''4 1\n5 5 2 1''') == 'Yes'\nassert solution('''4 1\n5 4 2 1\n5 2 1''') == 'No'\nassert solution('''4 1\n4 4 2 1\n4 2 1''') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('10 100') == 'No'\nassert solution('1 1') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 1\\n5 4 2 1\\n2 2 2 2 2 2\") == \"No\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n'''\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, m = map(int, stdin.split())\n\na = [int(x) for x in stdin.split()]\n\nk = a.count(m)"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == 'Yes'\nassert solution('1 2\\n1 2 1') == 'Yes'\nassert solution('2\\n2') == 'Yes'\nassert solution('2 1\\n1 2') == 'Yes'\nassert solution('1 1\\n2') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('4 2') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('4 2') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom __future__ import print_function\n\n__author__ = \"mysti\"\n__email__ = \"mariya@mariya-home.dev\"\n__version__ = \"2016.10.11\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('1 1 1\\n#') == '1'\nassert solution('1 1 1\\n#') == '1'\nassert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('2 3 2\\n..#\\n###') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('HW 2 2') == '5'\nassert solution('#HW 2 2') == '5'\nassert solution('..#') == '5'\nassert solution('#.#') == '5'\nassert solution('##.##') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\n\nassert solution('''2 3 2\n.#\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"..#\\n###\") == \"5\"\nassert solution(\"\\n\") == \"0\"\nassert solution(\"\\n\\n\") == \"0\"\nassert solution(\"1\\n2\\n3\") == \"0\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\\n\") == \"5\"\nassert solution(\"2 3 2\\n..#\\n###\\n#..\\n#.#\\n#.#\\n\") == \"3\"\nassert solution(\"2 3 2\\n#..\\n###\\n#..\\n#.#\\n#.#\\n#.\\n\") == \"2\"\nassert solution(\"1 1 1\\n#.\\n#.\\n#.\\n#.\\n\") == \"0\"\nassert solution(\"1 2 2\\n.\\n.#\\n.#\\n#.\\n\") == \"1\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''1 2 2\n..\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 3 2'''\n'''..#'''\n'''###'''\n) == '5'\nassert solution(\n'''4 6 1'''\n'''....#'\n'''.#...'''\n'''#...#'''\n'''#.#.#'''\n'''#.#.#'''\n) == '5'\nassert solution(\n'''2 3 2'''\n'''#...'''\n'''#...'''\n) == '2'\nassert solution(\n'''3 4 4'''\n'''....#'''\n'''#....'''\n'''#...#'''\n'''#...#'''\n'''#.#.#'''\n'''#.#.#'''\n) == '6'\nassert solution(\n'''1 2 1'''\n'''#.#'''\n'''#.#'''\n) == '3'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 2 2\n..#\n###\"\"\") == \"5\"\nassert solution(\"\"\"1 1 5\n.......\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\") == \"5\"\nassert solution(\"5 5 3\\n...#.\\n....#\\n#.###\\n#.#.##\") == \"3\"\nassert solution(\"2 4 2\\n..##.\\n###.#\\n#####\\n....#\") == \"0\"\nassert solution(\"2 2 1\\n.#.\\n#.\") == \"1\"\nassert solution(\"2 5 2\\n....#.\\n....#.\\n#..##.\\n#.##.#\\n#.####\\n.#.#..\\n.#.####\") == \"3\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('1 2 1') == '0'\nassert solution('1 2 1') == '0'\nassert solution('1 2 1') == '0'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == ''\n\n'''\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2020 2040') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2040') == '2'\nassert solution('20 50') == '0'\nassert solution('20 100') == '0'\nassert solution('20 123') == '0'\nassert solution('20 233') == '0'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"Atcoder\") == \"WA\"\nassert solution(\"AC\") == \"AC\"\nassert solution(\"AtcoderC\") == \"WA\"\nassert solution(\"AtCoderC#\") == \"AC\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abc\") == \"WA\"\nassert solution(\"a\") == \"WA\"\nassert solution(\"c\") == \"AC\"\nassert solution(\"AC\") == \"AC\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('abc') == 'WA'\nassert solution('abC') == 'WA'\nassert solution('a1c') == 'WA'\nassert solution('a1C') == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'WA'\nassert solution('A') == 'WA'\nassert solution('Aa') == 'WA'\nassert solution('AaC') == 'AC'\nassert solution('AaB') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"AC\"\nassert solution(input()) == \"WA\"\nassert solution(input()) == \"WA\""
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('Atcoder') == 'WA'\nassert solution('GatCoder') == 'WA'\nassert solution('garCoder') == 'WA'\nassert solution('gatcoder') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('atcoder') == 'WA'\nassert solution('atcOdeR') == 'WA'\nassert solution('aTCodeEr') == 'WA'\nassert solution('acDEer') == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('AtCODe') == 'WA'\nassert solution('AtCODe') == 'WA'\nassert solution('AtCODe') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"C\"\n) == \"AC\"\nassert solution(\n    \"AtCoder\"\n) == \"AC\"\nassert solution(\n    \"AtCoD\"\n) == \"WA\"\nassert solution(\n    \"AlZ\"\n) == \"WA\"\nassert solution(\n    \"AaCdE\"\n) == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('TgCdeF') == 'WA'\nassert solution('TgCdeFgGg') == 'WA'\nassert solution('aaCDEe') == 'WA'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('2211', 4) == '1'\nassert solution('123456789', 4) == '5'\nassert solution('1324', 4) == '22'\nassert solution('1111', 4) == '0'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"1214\"\n) == \"2\"\n\nassert solution(\n    \"1214\"\n) == \"2\"\n\nassert solution(\n    \"1214\"\n) == \"2\"\n\nassert solution(\n    \"1214\"\n) == \"2\"\n\nassert solution(\n    \"1214\"\n) == \"2\""
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('123456789', 2) == '5'\nassert solution
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('121314', 4) == '2'\nassert solution('12131415', 4) == '2'\nassert solution('1213141516', 4) == '2'\nassert solution('121314151617', 4) == '2'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[4]\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == stdout.rstrip()\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1122', 4) == '2'\nassert solution('1221', 4) == '2'\nassert solution('1112222222', 10**18) == '7777777777'\nassert solution('1122', 1) == '1'\n\"\"\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"14\", 4) == \"2\"\nassert solution(\"1214\", 4) == \"2\"\nassert solution(\"1222214444444444444444\", 4) == \"2\"\nassert solution(\"12222222214444444444444444444444444444444444444444444444444444444444444444\", 4) == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[-1]\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 2 3 4 1''') == 'YES'\nassert solution('''5\n5 4 3 2 1''') == 'NO'\nassert solution('''5\n5 4 3 2''') == 'NO'\nassert solution('''5\n1 2 3 4 5''') == 'YES'\nassert solution('''6\n2 1 3 4 5 6''') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n'''\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('5 2 3 4 1') == 'YES'\nassert solution('5 2 3 4 1\\n') == 'YES'\nassert solution('1\\n5') == 'NO'\nassert solution('1\\n5 2 3 4 1') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5 2 3 4 1\n''') == 'YES'\nassert solution('''\n3\n1 3 2\n''') == 'NO'\nassert solution('''\n5\n1 3 2 4 5\n''') == 'YES'\nassert solution('''\n2\n1 1\n''') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 1 4') == 'NO'\nassert solution('5\\n5 2 3 1') == 'NO'\nassert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 4') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 2 3 4 1''') == 'YES'\nassert solution('''5\n5 4 3 2 1''') == 'YES'\nassert solution('''2\n1''') == 'NO'\nassert solution('''10\n5 2 3 4 1 6 7 8 9 10''') == 'YES'\nassert solution('''6\n5 2 3 4 1 6 7''') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"NO\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\"\n'''\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n5\n5 2 3 4 1\n'''\n) == 'YES'\nassert solution(\n'''\n5\n1 2 3 4 5\n'''\n) == 'NO'\nassert solution(\n'''\n5\n5 2 1 4 3\n'''\n) == 'NO'\nassert solution(\n'''\n5\n1 2 3 4 5\n'''\n) == 'NO'\nassert solution(\n'''\n4\n1 2 3 4\n'''\n) == 'YES'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"6\"\nassert solution(\"12345678\") == \"6\"\nassert solution(\"1234567\") == \"5\"\nassert solution(\"12345\") == \"3\"\nassert solution(\"123\") == \"2\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123') == '123'\nassert solution('1') == '1'\nassert solution('123456789') == '123456789'\nassert solution('12') == '12'\nassert solution('1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890') == '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('3141') == '2'\nassert solution('3123') == '2'\nassert solution('31234567') == '3'\nassert solution('3123456789') == '3'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3121') == '2'\nassert solution(\n    '6') == '1'\nassert solution(\n    '201920181') == '4'\nassert solution(\n    '1234567890') == '1'\nassert solution(\n    '12345678901') == '0'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3121') == 2\nassert solution('6') == 1\nassert solution('1000000000000000000000000000000000') == 33\nassert solution('201920181') == 4\nassert solution('12345678901234567890') == 0\n\n\n\"\"\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('999999999999') == '33'\nassert solution('10001') == '1'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\nassert solution(\"8\") == \"1\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('1213') == '1213'\nassert solution('123') == '23'\nassert solution('1234') == '34'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''3\n13 37 39\n1 2 3\n''') == '0'\nassert solution('''4\n0 0 0 0\n1 2 3 4\n''') == '0'\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '3'\n'''"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('4\\n1 2 3 4\\n1 2 3 4\\n') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '2'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 3 4\n2 4 7 11 3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3\n13 37 39\n1 2 3\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4\n0 0 0 0\n1 2 3 4\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n3\n1 2 -1\n-6 -12 6\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n2 4 7 11 3\n\"\"\") == \"0\""
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3') == '2'\nassert solution('3\\n13 37 39\\n1 2 3') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6') == '3'\nassert solution('4\\n0 0 0 0\\n1 2 3 4') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('133739') == '3'\nassert solution('1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''3\n13 37 39\n1 2 3\n''') == '0'\n\nassert solution('''4\n0 0 0 0\n1 2 3 4\n''') == '0'\n\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '3'\n'''"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '2'\n\n\n\"\"\"\n\n\"\"\"\nApproach:\n    We can find the max number of zeroes we can get by choosing any number d, and using this d to multiply the array by d.\n    We can choose d as the max(abs(a_i)) for all a_i.\n    We want to find the max d to make the number of zeroes the most, so we can use binary search to find the max d we can achieve.\n    To find the max d, we find the number of zeroes of each number (divide and conquer), and compare the results.\n    We can keep track of the max number of zeroes we can achieve, and the max d we can achieve.\n    We use the max number of zeroes to divide, and the max d to combine.\n\n\"\"\""
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\\\n10\ncodeforces\ndodivthree\n''') == '5'\n\nassert solution('''\\\n7\nabaca?b\nzabbbcc\n''') == '5'\n\nassert solution('''\\\n9\nbambarbia\nhellocode\n''') == '0'\n\nassert solution('''\\\n10\ncode??????\n??????test\n''') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''9\nbambarbia\nhellocode\n''') == '10'\nassert solution('''\n''') == '0'\nassert solution('''\n1\nabac?a\nbaacaa\n''') == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('code?test') == '0'\nassert solution('codeforces') == '5'\nassert solution('zabbbcc') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('test') == 'test'\nassert solution('code') == 'code'\nassert solution('code?') == 'code'\nassert solution('bambarbia') == 'bambarbia'\nassert solution('hellocode') == 'hellocode'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"10\ncodeforces\ndodivthree\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"7\nabaca?b\nzabbbcc\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"9\nbambarbia\nhellocode\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"10\ncode??????\n??????test\n\"\"\") == \"10\""
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expect\nprint(solution(input()))\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''10\ncodeforces\ndodivthree'''\n) == '5'\n\nassert solution(\n'''7\nabaca?b\nzabbbcc'''\n) == '5'\n\nassert solution(\n'''9\nbambarbia\nhellocode'''\n) == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\ncode?fg\nfgfrf\n''') == '5'\nassert solution('''9\nbambarbi?a\nbambjbc\n''') == '10'\nassert solution('''5\na???\nbabbb\n''') == '5'\nassert solution('''7\ncbbbcc\nccbccc\n''') == '5'\nassert solution('''10\ncccbcbcb\ncbcbcbcb\n''') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '5'\nassert solution('code??????') == '10'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == solution(input())\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10''') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10'\nassert solution('''10\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n-5') == '1 1'\nassert solution('2\\n1\\n-5') == '3 4'\nassert solution('7\\n4 1 2 2 1 5 3\\n') == '3 7'\nassert solution('4\\n1 1 1 1\\n') == '4 4'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2 3 4 5'\nprint(solution(stdin))\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2'\nassert solution('11\\n1 1 1 1\\n') == '4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1 1\\n1 1\\n1 1\\n1 1\\n1 1\"\nassert solution(\"2\\n1 1\") == \"1 1\"\nassert solution(\"5\\n1 1 2 2 1 5 3\") == \"1 1\\n1 1\\n1 1\\n1 1\\n1 1\"\nassert solution(\"2\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11\") == \"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\") == \"1\\n1\"\nassert solution(\"2\\n1 1\") == \"2\\n1 1\"\nassert solution(\"3\\n1 1 1\") == \"3\\n1 1 1\"\nassert solution(\"3\\n-1 -1 -1\") == \"3\\n-1 -1 -1\"\nassert solution(\"3\\n-1 -1 -2\") == \"3\\n-1 -1 -2\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 2\\n1 1 1 1\") == \"3\\n4 4\\n1 1\\n2 2\\n3 3\\n\"\nassert solution(\"2\\n2 2\\n1 1 1 1\") == \"2\\n3 3\\n4 4\\n1 1\\n\"\nassert solution(\"6\\n2 2 4 4 2 2\") == \"1\\n1 1\\n1 1\\n2 2\\n2 2\\n4 4\\n\"\nassert solution(\"7\\n2 2 4 4 2 2 1\") == \"3\\n3 3\\n4 4\\n1 1\\n2 2\\n2 2\\n1 1\\n\"\nassert solution(\"8\\n2 2 4 4 2 2 1 1\") == \"3\\n3 3\\n4 4\\n1 1\\n2 2\\n2 2\\n1 1\\n1 1\\n\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2 3\") == \"\"\nassert solution(\"4 5\") == \"\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n6 11\n45 1 10 12 11 7\n''') == \"7\"\n\nassert solution(\n'''\n4 2\n2 78 4 10\n''') == \"12\"\n\nassert solution(\n'''\n5 2\n3 7 19 3 3\n''') == \"0\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7\\n') == '7'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7') == '7'\nassert solution('4 2\\n2 78 4 10') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '0'\nassert solution('8 3\\n1 2 3 4 5 6 7 8') == '12'\nassert solution('8 5\\n2 3 4 5 6 7 8 9') == '6'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '0'\nassert solution('2\\n1\\n2\\n1') == '0'\nassert solution('2\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nfrom math import ceil,log10\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2 3\\n') == '0'\nassert solution('6 5\\n3 7 19 3 3\\n') == '7'\nassert solution('3 2\\n2 78 4 10\\n') == '12'\n\n\n\n\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\nassert solution('5 3\\n2 7 19 3 3\\n') == '0'\nassert solution('6 3\\n45 1 10 12 11 7\\n') == '7'\n\n\n\"\"\"\n\n\nimport sys\nfrom collections import defaultdict\nfrom collections import deque\n\nclass Node:\n    def __init__(self, i, j, k, data):\n        self.data = data\n        self.i = i\n        self.j = j\n        self.k = k"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '9'"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n5') == \"9\"\nassert solution('1\\n2\\n3') == \"6\"\nassert solution('1\\n2\\n3\\n4') == \"10\"\nassert solution('1\\n2\\n3\\n4\\n5') == \"15\"\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == \"16\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"2\\n2\\n\") == \"2\"\nassert solution(\"2\\n2\\n3\\n1\") == \"3\"\nassert solution(\"1\\n1\\n2\\n1\\n2\\n1\\n1\\n2\\n1\\n2\\n1\\n1\") == \"6\"\nassert solution(\"5\\n3\\n4\\n3\\n2\\n1\") == \"6\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '9'"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"5\"\nassert solution(\"10\") == \"25\"\nassert solution(\"9\") == \"9\"\nassert solution(\"15\") == \"39\"\nassert solution(\"32\") == \"59\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 5\n''') == '9'\nassert solution('''\n2\n-3\n''') == '-3'\nassert solution('''\n2\n-3\n4\n-2\n''') == '4'\nassert solution('''\n2\n-3\n2\n-1\n''') == '2'\nassert solution('''\n3\n2 5\n''') == '9'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n5\\n') == '9'\nassert solution('2\\n1\\n') == '-1'\nassert solution('2\\n2\\n') == '5'\nassert solution('2\\n2\\n3\\n') == '7'\nassert solution('2\\n2\\n3\\n4\\n') == '7'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5\\n2 5') == '9'\nassert solution('2 5\\n-1 -2 -3') == '-3'\nassert solution('2 5\\n2 2 5') == '9'\nassert solution('2 5\\n2 2 2 2') == '12'\nassert solution('2 5\\n1 3 4 2') == '9'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"2 5\") == \"9\"\nassert solution(\"2 1 5\") == \"9\"\nassert solution(\"-1 -2 -3\") == \"-1\"\nassert solution(\"1 1 1 1\") == \"5\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4 3''') == '110'\nassert solution('''1 3 3 100''') == '110'\nassert solution('''1 2 2 10''') == '110'\nassert solution('''2 3 2 10''') == '110'\nassert solution('''1 2 3 4''') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3\") == \"110\"\nassert solution(\"2 4 4\") == \"110\"\nassert solution(\"2 4 5\") == \"110\"\nassert solution(\"2 10 10\") == \"110\"\nassert solution(\"2 2 2\") == \"1\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\""
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 3') == '110'\nassert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '110'\nassert solution('2 3 2 10') == '110'\nassert solution('2 4 3') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\nassert solution('''3 3 1\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\nassert solution('''3 4 2\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '105'\nassert solution('''3 3 1\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\nassert solution('''4 4 4\n1 3 3 100\n1 2 2 10\n2 3 2 10\n1 4 4 100\n1 3 3 9\n1 2 2 10\n2 3 2 10''') == '310'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == 110\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == 110\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n1 3 1 100\n1 4 1 100''') == 110\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n1 3 1 100\n1 4 1 100''') == 110\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n1 3 1 100\n1 4 1 100\n1 5 1 100''') == 110\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4 3''') == 110\nassert solution('''1 3 3 100''') == 110\nassert solution('''1 2 2 10''') == 110\nassert solution('''2 3 2 10''') == 110\nassert solution('''1 5 2 3 4''') == 150\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == 110\n\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == 110\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 3\\n1 2 2 10\\n2 3 2 10') == '110'\n'''"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"1 4 6 -3\") == \"5\"\nassert solution(\"1 4 6 3 2 4\") == \"2\"\nassert solution(\"1 2 3 4 5 6\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 4 6 3') == '5'"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"2 4 6 3\") == \"5\"\nassert solution(\"1 9 3 3\") == \"4\"\nassert solution(\"2 1 3 4\") == \"1\"\nassert solution(\"2 5 6 1\") == \"2\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 4 6 3') == '5'"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 4 6 3''') == '5'\nassert solution('''6\n1 4 6 3 3 4''') == '3'\nassert solution('''6\n1 4 6 3 5 7''') == '4'\nassert solution('''6\n1 4 6 3 7 9''') == '8'\nassert solution('''6\n1 4 6 3 7 10''') == '9'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n1 4 6 3\n\"\"\"\n) == \"5\"\nassert solution(\n\"\"\"\n5\n-5 -4 1 2 3\n\"\"\"\n) == \"-2\"\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n4\\n6\\n3') == '5'\nassert solution('1\\n4\\n6\\n3\\n4\\n5\\n7') == '2'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('1 2\\n0 0\\n1 1') == '2.676326736'\nassert solution('2 3\\n0 0\\n1 1\\n1 3\\n3 2\\n3 2') == '2.76400729'\nassert solution('4 4\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 1\\n1 2\\n1 3\\n2 0\\n2 1\\n2 2\\n2 3\\n3 0\\n3 1\\n3 2\\n3 3') == '2.82654708'\nassert solution('1 1\\n0 0\\n1 1\\n1 1') == '2.82654708'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"1 1\\n1 1\\n1 1\\n\") == \"2.732051\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n1 1\\n0 1\\n\") == \"2.732051\"\nassert solution(\"3\\n-1 -2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''0 0\n1 0\n0 1''') == '2.2761423749'\n\nassert solution(\n'''3\n0 0\n1 0\n0 1''') == '2.2761423749'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"0 0\\n1 0\\n0 1\\n1 0\\n0 0\\n0 0\\n0 0\") == \"2.2761423749\"\nassert solution(\"0 0\\n1 1\\n0 1\") == \"3.2628435714\"\nassert solution(\"0 0\\n0 0\\n0 0\") == \"3.2628435714\"\nassert solution(\"1 2\\n1 3\") == \"2.8284271247\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n1 0\n0 1\n''') == '2.2761423749'\nassert solution('''1\n1\n''') == '0'\nassert solution('''0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\n\n-----\n\nfrom math import sqrt, pow\n\nn = int(input())\nfor _ in range(n):\n    x, y = map(int, input().split())\n    print(sqrt(pow(x, 2) + pow(y, 2)) * 2)\n\n-----"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '2.2761423749'\n'''\nSample Input 1:\n3\n0 0\n1 0\n0 1\n\nSample Output 1:\n2.2761423749\n\nSample Input 2:\n4\n0 0\n1 0\n0 1\n-1 1\n\nSample Output 2:\n4.83814689928\n'''\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 0\\n0 1') == 2.2761423749\nassert solution('2 2\\n1 1') == 2.2761423749\nassert solution('2 2\\n0 0') == 2.2761423749\nassert solution('3 3\\n0 0\\n1 0\\n2 0') == 2.2761423749\nassert solution('3 3\\n0 0\\n1 0\\n2 0') == 2.2761423749\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n1 0\") == 2.2761423749\nassert solution(\"0 0\\n0 0\") == 0\nassert solution(\"1 2\\n0 1\") == 1.4142135623730949\nassert solution(\"1 2\\n1 2\") == 1.414213562373095\nassert solution(\"1 2\\n1 2\") == 1.414213562373095\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.2761423749\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"8 6\") == \"8\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"12 3\") == \"3\"\nassert solution(\"12 2\") == \"2\"\nassert solution(\"12 1\") == \"1\"\nassert solution(\"4 3\") == \"1\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12 4') == '4'\nassert solution('10 4') == '10'\nassert solution('12 12') == '8'\nassert solution('10 11') == '9'\nassert solution('20 22') == '20'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"12 16\") == \"16\"\nassert solution(\"42 16\") == \"16\"\nassert solution(\"11 4\") == \"6\"\nassert solution(\"101 0\") == \"0\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 4\") == \"4\"\nassert solution(\"5 4\") == \"1\"\nassert solution(\"10 4\") == \"4\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"30 15\") == \"0\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4') == '4'\nassert solution('11 4') == '5'\nassert solution('2 2') == '0'\nassert solution('3 3') == '1'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 4\") == \"4\"\nassert solution(\"12 4\") == \"4\"\nassert solution(\"15 4\") == \"5\"\nassert solution(\"100 5\") == \"5\"\nassert solution
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12 4') == '4'\nassert solution('12 25') == '20'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 4') == 4\n\"\"\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10000\\n') == '3'\nassert solution('2\\n') == '1'\nassert solution('1000000\\n') == '1'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100') == '3'\nassert solution('100000000') == '5'\nassert solution('10') == '2'\nassert solution('101') == '3'\nassert solution('10001') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10000\") == \"3\""
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''10000\n''') == '3'\n\nassert solution(\n'''3\n''') == '3'\n\nassert solution(\n'''111\n''') == '2'\n\nassert solution(\n'''11111\n''') == '2'\n\nassert solution(\n'''1110000\n''') == '4'"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10000''') == '3'\nassert solution('''123456789''') == '2'\nassert solution('''100000''') == '2'\nassert solution('''999999999''') == '1'\nassert solution('''1000000000''') == '3'\n'''"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(10000) == \"3\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('100') == '1'\nassert solution('10000') == '3'\nassert solution('1000') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10000') == 3\nassert solution('100000') == 0\nassert solution('100000') == 1\nassert solution('100000') == 0\nassert solution('100000000') == 1\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(10000) == \"3\"\nassert solution(3) == \"3\"\nassert solution(100) == \"3\"\nassert solution(1) == \"3\"\nassert solution(2) == \"3\""
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == stdout\n\nTest Case 1\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n\nCase 2\n3 4\n2 1 2\n3 1 1 2\n2 2 3\n\nCase 3\n2 2\n1 1\n\n\"\"\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Katsusando loves omelette rice.\\n' +\n'Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n' +\n'To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n' +\n'The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n' +\n'Find the number of the foods liked by all the N people.\\n') == '1'\nassert solution('2 4\\n' +\n'2 1 3\\n' +\n'3 1 2 3\\n' +\n'2 3 2\\n') == '1'\nassert solution('2 3\\n' +\n'2 1 2\\n' +\n'3 2 2\\n') == '0'\nassert solution('3 3\\n' +\n'2 1 2\\n' +\n'2 2 2\\n' +\n'2 3 2\\n') == '1'\nassert solution('4 4\\n' +\n'2 1 2\\n' +\n'2 2 2\\n' +\n'2 3 2\\n' +\n'2 4 2\\n') == '0'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('Katsusando loves omelette rice.\\n' +\n'Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n' +\n'To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n' +\n'The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n' +\n'Find the number of the foods liked by all the N people.\\n') == '1'\nassert solution('Katsusando loves omelette rice.\\n' +\n'Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n' +\n'To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n' +\n'The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n' +\n'Find the number of the foods liked by all the N people.\\n') == '1'\nassert solution('Katsusando loves omelette rice.\\n' +\n'Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n' +\n'To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n' +\n'The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n' +\n'Find the number of the foods liked by all the N people.\\n') == '1'\nassert solution('Katsusando loves omelette rice.\\n' +\n'Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n' +\n'To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n' +\n'The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n' +\n'Find the number of the foods liked by all the N people.\\n') == '1'\nassert solution('Katsusando loves omelette rice.\\n' +\n'Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n' +\n'To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n' +\n'The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n' +\n'Find the number of the foods liked by all the N people.\\n') == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 1 3') == '1'\nassert solution('3 1 2 3') == '1'\nassert solution('2 3 2') == '1'\nassert solution('3 3 3') == '0'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n1 2 3 4\n3 1 2 3''') == '1'\nassert solution('''3 2\n1 2 3\n2 3 2''') == '1'\nassert solution('''3 2\n1 2 3\n2 1 2''') == '0'\nassert solution('''3 2\n1 2 2\n1 2 2''') == '1'\nassert solution('''3 2\n1 2 2\n3 1 2''') == '0'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''\n3 4\n1 1 1\n1 2 2\n1 3 3\n''') == '3'\nassert solution('''\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '2'\nassert solution('''\n3 3\n1 1 1\n1 2 2\n1 3 3\n''') == '2'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('1 1\\n2 2') == '1'\nassert solution('1 1\\n1 2') == '0'\nassert solution('2 3\\n1 1 1\\n2 1 2\\n1 3 3') == '1'\nassert solution('2 2\\n1 1') == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\"\n) == \"1\"\nassert solution(\n\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\"\n) == \"1\"\nassert solution(\n\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\"\n) == \"1\"\nassert solution(\n\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\"\n) == \"1\"\nassert solution(\n\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\"\n) == \"1\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '0.5000000000'\nassert solution('''10''') == '0.000000001'\nassert solution('''100''') == '0.9999999999'\nassert solution('''1000''') == '0.9999999999'\nassert solution('''10000''') == '1.000000001'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '0.25'\nassert solution('1\\n2\\n') == '0.5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\n') == '0.125'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\n') == '0.16667'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\n') == '0.125'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4''') == '0.5'\nassert solution('''3''') == '0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == 0.5\nassert solution('1') == 1\nassert solution('1000') == 1\nassert solution('10002') == 0.4928\nassert solution('2') == 0.16666666666666666\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('1') == '0.5'\nassert solution('2') == '0.25'\nassert solution('3') == '0.1666666666666667'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '0.5000000000'\nassert solution('1') == '0.5000000000'\nassert solution('2') == '0.2500000'\nassert solution('3') == '0.1666667'\nassert solution('4') == '0.083333'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.25'\nassert solution('3') == '0.166666666666667'\nassert solution('4') == '0.08333333333333333'\nassert solution('5') == '0.04666666666666667'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(4) == 0.5\nassert solution(10) == 0.1666666667\nassert solution(100) == 0.05\nassert solution(1000) == 0.005\nassert solution(10000) == 0.0005\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0\n0''') == '0.5000000000'\nassert solution('''4\n4''') == '0.5000000000'\nassert solution('''5\n5''') == '0.16666666667'\nassert solution('''100\n100''') == '0.16666666667'\nassert solution('''1000\n1000''') == '0.16666666667'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('1') == '0.50000000'\nassert solution('10') == '0.0000000000000000000001'\nassert solution('10') == '0.0000000000000000000001'\nassert solution('100') == '0.00000000000000000001'\n\nprint('Test Successful')\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''4\n1\n2 2\n1\n2 2\n1\n2 2\n''') == '2'\nassert solution('''8\n1\n2 1\n1\n2 1\n1\n2 1\n1\n2 1\n''') == '2'\nassert solution('''5\n1\n2 1\n1\n2 1\n1\n2 1\n''') == '4'\nassert solution('''5\n1\n2 1\n1\n2 1\n2\n2 1\n''') == '3'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '4'\nassert solution('10\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '6'\nassert solution('15\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '8'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 2\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 3\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 2\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 1\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == 0\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n2') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution(\n'''\n4\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '3'\nassert solution(\n'''\n5\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '4'\nassert solution(\n'''\n7\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '5'\nassert solution(\n'''\n7\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '6'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n1 1 1\\n1\\n1 0\\n2 0\\n') == '2'\nassert solution('2 3\\n3 1 2\\n1 1 0\\n1\\n0 1\\n0\\n1 2') == '3'\nassert solution('2 3\\n1 2 2\\n1 1 0\\n1\\n0 1\\n0\\n1 2') == '1'\nassert solution('2 3\\n3 1 1\\n1 1 0\\n1\\n0 1\\n0\\n1 2') == '2'\nassert solution('2 3\\n3 1 1\\n1 1 0\\n1\\n0 1\\n0\\n0') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\nassert solution('2\\n2\\n2\\n') == '2'\nassert solution('3\\n2\\n2\\n') == '2'\nassert solution('4\\n2\\n2\\n2\\n') == '4'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"1\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"2\\n2\\n1 1\\n2 1\\n1 1\\n2 0\\n1 1\\n2 1\") == \"2\"\nassert solution(\"2\\n2\\n1 1\\n2 1\\n1 1\\n2 0\\n1 1\\n2 1\") == \"2\"\nassert solution(\"3\\n3\\n1 1\\n2 1\\n1 1\\n2 0\\n1 1\\n2 1\\n1 1\") == \"2\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nniokaandsolstice') == 'nikoand...'\nassert solution('9\\nabcbansal') == 'abcbansal'\nassert solution('100\\n') == ''\n\"\"\"\nimport sys"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 'niko'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\nassert solution('123456789') == '123456789'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\\nnikoandsolstice has a length of 15, which exceeds K=7. We should extract the first 7 characters in this string, append... to the end of them, and print the result nikoand....\"\nassert solution(\"4\\nabcd\") == \"abcd\\nabcd has a length of 4, which is less than K=4. We should extract the first 4 characters in this string, append... to the end of them, and print the result abcd...\"\nassert solution(\"5\\nabcd\") == \"abcd\\nabcd has a length of 5, which is less than K=5. We should extract the first 5 characters in this string, append... to the end of them, and print the result abcd...\"\nassert solution(\"6\\nabcd\") == \"abcd\\nabcd has a length of 6, which is less than K=6. We should extract the first 6 characters in this string, append... to the end of them, and print the result abcd...\"\nassert solution(\"7\\nabcd\") == \"abcd\\nabcd has a length of 7, which is less than K=7. We should extract the first 7 characters in this string, append... to the end of them, and print the result abcd...\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n1234\\n') == '1234'\nassert solution('2\\nabcd\\n') == 'abcd'\nassert solution('5\\n1234567\\n') == '1234567'\nassert solution('1\\na\\n') == 'a'\nassert solution('2\\nabcd\\n') == 'abcd'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\nnikoandsolstice\") == \"nikoand...\\nnikoand...\"\nassert solution(\"4\\ntesra\") == \"t...\\nt...\\ntesra\"\nassert solution(\"10\\nnikoandsolstice\") == \"nikoand...\\nnikoand...\\nnikoand...\\nnikoand...\\nnikoand...\\nnikoand...\\nnikoand...\\nnikoand...\"\nassert solution(\"15\\ntesra\") == \"t...\\nt...\\ntesra\"\nassert solution(\"17\\ntesra\") == \"t...\\nt...\\ntesra\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10\\nabcabcabcabcab') == 'abcabcabcabcab'\nassert solution('10\\nabcabcabcabcab') == 'abcabcabcabcab'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\\nnikoandsolstice has a length of 15, which exceeds K=7.\"\nassert solution(\"4\\nxxxxxx\\n\") == \"xxxxxx\\nnxxxxx... has a length of 4, which exceeds K=4.\"\n\"\"\"\n\n\"\"\"\n@staticmethod\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('hello') == 'hello'\nassert solution('hello world') == 'hello'\nassert solution('hello world world') == 'hello world'\nassert solution('hello world world' * 2) == 'hello world' * 2\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\nnikoandsolstice\\n') == 'nikoand...\\n'\nassert solution('7\\nnikoandsolstice\\n') == 'nikoand...\\n'\nassert solution('7\\nAbcdefg\\n') == 'Abcdefg\\n'\nassert solution('8\\nhi\\n') == 'hi\\n'\nassert solution('5\\nabcd\\n') == 'abcd\\n'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"meat\") == \"meats\"\nassert solution(\"yoda\") == \"yodas\"\nassert solution(\"zoo\") == \"zoos\"\n\n\"\"\""
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('apple') == 'apples'\nassert solution('root') == 'roots'\nassert solution('trie') == 'tries'\nassert solution('mat') =='matches'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"apricot\") == \"apricot\"\nassert solution(\"wasabi\") == \"wasabis\"\nassert solution(\"tomato\") == \"tomatoes\"\nassert solution(\"pizza\") == \"pizzas\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('fire') == 'fires'\nassert solution('orange') == 'oranges'\nassert solution('hello') == 'hellos'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('apple') == 'apples'\n'''"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\n\"\"\""
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apricot') == 'apples'\nassert solution('ampel') == 'ampels'\nassert solution('banana') == 'bananas'\nassert solution('apple') == 'apples'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'a'\nassert solution('a b') == 'a b'\nassert solution('a b c') == 'a b c'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"potato\") == \"potatoes\"\nassert solution(\"ball\") == \"balls\"\nassert solution(\"apple\") == \"apples\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1') == '0'\nassert solution('1 3') == '1'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n1 3\\n3') == '2'\nassert solution('3 2\\n2\\n1 3\\n3') == '2'\nassert solution('3 2\\n2\\n1 3\\n3') == '2'\nassert solution('3 2\\n2\\n1 3\\n3') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('5 3\\n3\\n1 2 3 4 5') == '3'\nassert solution('7 2\\n1\\n1 2 3 4 5 6 7') == '3'\nassert solution('3 2\\n2\\n1 3') == '1'\nassert solution('5 3\\n3\\n1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 2') == '0'\nassert solution('3 1') == '0'\nassert solution('2 1') == '1'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 1') == '1'\nassert solution('1 2') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 10') == '1'\nassert solution('2 1') == '0'\nassert solution('3 1') == '0'\nassert solution('3 10') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3') == '1'\nassert solution('3 2\\n2\\n1 2\\n1') == '0'\nassert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n1 2\\n1') == '0'\nassert solution('3 2\\n2\\n1 3\\n1') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aabbbbaacaa') == '5'\nassert solution('abcba') == '2'\nassert solution('aab') == '2'\nassert solution('aa') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"abaca\"\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aaabbbba\") == \"aababbbba\"\nassert solution(\"aabbbbbba\") == \"aaabbbbbba\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('bbaaababaaaa') == '2'\nassert solution('baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aaabaaaab') == '3'\nassert solution('aabababaa') == '8'\nassert solution('aabaabaabb') == '8'\nassert solution('aabbbbbaa') == '9'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aabbbbaaca\") == \"5\"\nassert solution(\"baaaaaaa\") == \"5\"\nassert solution(\"aabbbbaa\") == \"5\"\nassert solution(\"bbaaaaaa\") == \"5\"\nassert solution(\"aabbbbaaa\") == \"5\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"10\naabbbbaaca\"\"\") == \"5\"\nassert solution(\n    \"\"\"100\naababaaabaabbbababaaaaabbababbbabaaaaaabbbbaaaaaaaaaaaababbbbaabababaabbbba\"\"\") == \"5\"\nassert solution(\n    \"\"\"1000\naabaaaaabbabaaaaaabbbbaaaabaababaaaaabbbbbabbaaaabaabaaabbbbaaabaaaabaabbbbbaaaabaabaaabaabbbaaaaaaabaaabbbaaabaaabaaaaaabaaababbbbbabaaaaaabbbaaaaaaabbbbaaabaabbbbaaabaaababaabababbbaaaabababaaabbbbaaaaaaabaaaaaabbbbabbbaaabaaabbbaabaaabbabbbbaaaaabbbbaaaabbbaaaababbabaaabbbabababbaaaaaabaaaaaaabaaaaabbbbbbaaaaaaabbbaabaaaababababaaabbbababaaaabbbabbbbaaabbbbaaaabababaaaabaaaabbbbaaaaabaaababbaaaaabbbbabaaaabbbabaaababbbbbaaaabbbbbbaaababaaaaaabaaaababbbbaaabaabbbbaaaabaaabaabbaaaaababaaababbbbbbaaaabbbaaaabbbbaaabababaaaaaabbabaaaababbaaabbaaaaaabaaabaababaaaabbbababbaaabbaaabaaaaabbaaabbbbbaaaaabbbaaabaaabbbbbbbaaaabbbbbbaaaababababbabababaaabbbbaaaaaabbaaaaaabababbbabbaaaaaabbbbaaaabbbbbaaaaabbbbbbaaaabbbbaaaaaaaabbbbbbaaabaaabaabbbbbbaaaababbbbaaaaabbbbaaabababaabaaabaabaabbaaaababaaabaaabaababbbbbabaaabaaaaaabaaabbaaaaaabbbbaaaaaabbbbaaaababaaaaaabbbbbbaaabababbbaaaaabbbbbaaaaaaabaaaababbbbaaabaaabaabbbbbbaaabbabababbaaaaaabaaaaaabbabbbaababbaaaaaaabbabaaaababbaaabaaabbabbbabaaababbbaaabbaaabababaaababbbbaaabaabaabbbaaabaaabbbbababaaabbbbaaaaaabbbbabbabaaabaaabbbaaaabbbaaaaababaaababaabbbbbbaaaababbbbaaabaabaaabbbbbbbaaabbbbbaaabaabbaaaaaaaaaabbababababbaaabbbabbbaaabbabababababbbababbbaaaaaaabbbbaaabbbbbaaabaaabaabbaaababaaababbbbbbaaaababbbbaaaaaaaabaabbababaaabaaabababbbaaaaaaaabbbbaaaababaaaaaabababbbbbaaaaaabaabbabaaaabaaabbbbbbbabababbbaaaaabababaaababbbaaaababbbbaaabbbbbaaaaaaabbbbbbaaababbbbbbaaaaaaaababababaaabbbbbbaaaabaabbbbaaaaabbbbbbaaaabababaaababbbbbbaaaabababbaaaaaabaaabbbbbababaaabbbbbbaaaaaaaabbababaaabbabaaabbbbbbaaaaaaaaababaaabbbbaaaabaabbaaaaaabbbbbbaaaaaaaabbbbbbaaaabababbbbaaaaaaaaababababababbbbbbaaaaaabaaabbbbaaaababaaabbbbbbaaaabababbaaababaaabbbaaabaaabbabaaaabababbbaaaababaaabbbbbbaaaaaaaaaaaabbbbbbbabababbbaaaaabbbbbbaaabaaababbbabbbbbbaaaababbaaaaaaabbaaabbbbbbbaaaaaaabaaabbbbbbbbaaaaababbbbabbbababababaaaaaaaabbbabbabaaaaaabbbaabaaababaaabababbbaaaaaabbbabababbbbbbaaaaaaabaaabababababbbabababbbaaaaabbabaaaabababaaabbbbaaababbbbabaaaabbabbaaabbbbbbbababababbbbaaaaaaabababbbbbbaaaaaaaaabaaabbbbbbaaaaaaabaaabbbaaaabababaaabbbbaaaaaaaabababaaaababaaabbbbaaabbbbbaaaaabbbbbbaaaaaabababaaaabbbbaaaabababaabaaabbbbbbaaaaaaaabbbbaaaaaaaabbbbbbaaaaaaaabbbbbbaaaaaabababaaaaabbbbaaaaaaaabbbbbbaaaaaaababbbbbbaaaaaaaabbbbaaaaaaaabbbbbbaaaaaaaaabbbbbbbaaaaaaaaaabbbbaaaaaaaaaaaabbbbbbbaaaaaaaaaaabbbbbbbabababbaaaaaaaababbbbbbbbaaababbbbbbaaaaaaaaababbbbaaaaaaaaaaabbbbbbbaaaaaaaabbbbbbbbaaaaaaaabbbbbbbbbababababbaaaaaaaabbbbaaaaaaaabbbbbbbaaaaaaaaaaabbbbbbbaaaaaaaabbbbbbbbbabababbababbbbbbaaaaaaaaabbbbaaaaaaaabbbbbbbbbbaaaaaaaaabbbbbbbbaaaaaaaaabbbbbbbbbabababaaaabbbbbbbbbbaaaaaaaaaaaabbbbbbbbaaaaaaaabbbbbbbbbbaaaaaaaaaabbbbbbbbbabababaaabaaabbbbbbbbbaaaaaaaaaabbbbbbbbbbaaaaaaaaabbbbbbbbbbaaaaaaaaaaababbbbaaaaaaaaaabbbbbbbbbbaaaaaaaaaabbbbbbbbbabababaaaabaaabbbbbbbbaaaaaaaaaababbbbbbbbbbaaaaaaaaababbbbbbbbaaaaaaaaaabbbbbbbbbbaaaaaaaaaabbbbbbbbbabababaaababbbbbbbbbaaaaaaaaaababbbbbbbbbbaaaaaaaaaaabbbbbbbbbbaaaaaaaaaaabbbbbbbbbbaaaaaaaaaababbbbbbbbbbaaaaaaaaaababbbbbbbbbbaaaaaaaaaababbbbbbbbbbaaaaaaaaaaabbbbbbbbbbaaaaaaaaaaabbbbbbbbbbbbaaaaaaaaaaabaaabaaaabababaaababaaabbbbaaaaaaaaaaaabaaabbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabbbbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaaabaaabbbbbbbbaaaaaaaaaa"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aabbbbaaca\") == \"5\"\nassert solution(\"aabbbbbbbba\") == \"6\"\nassert solution(\"aabbbaaaa\") == \"4\"\nassert solution(\"aaabbbbaaa\") == \"5\"\nassert solution(\"abaaaaba\") == \"5\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10\\naabbbbaaca') == '5'\nassert solution('5\\naabbbbaaca') == '5'\nassert solution('2\\naa') == '2'\nassert solution('2\\nab') == '1'\nassert solution('5\\nbaaaaa') == '10'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aabbbba') == '5'\nassert solution('baaa') == '1'\nassert solution('aaab') == '2'\nassert solution('aaaa') == '0'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\") == 3\nassert solution(\"1 2 3 4 4\") == 0\nassert solution(\"1 2 3 3\") == 3\nassert solution(\"1 2 3 3 2\") == 0\nassert solution(\"1 2 3 3 1\") == 3\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\nassert solution(\"5 5 5\") == \"3\"\nassert solution(\"5 5 5 5\") == \"4\"\nassert solution
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''4\n1 2 3 4''') == '0'\nassert solution('''2\n1 1''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''7\n1 2 3 4 5 6 7''') == '5'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n3') == '0'\nassert solution('4\\n4') == '0'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n5 2 4''') == \"3\"\nassert solution('''3\n5 2 4''') == \"3\"\nassert solution('''10\n2 3 4 5 6 7 8 9 10''') == \"2\"\nassert solution('''10\n2 3 4 5 6 7 8 9 10''') == \"2\"\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == \"5\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('1\\n1 1 1 1') == '1'\nassert solution('1\\n2 1 1') == '1'\nassert solution('1\\n1 2 1') == '1'\nassert solution('1\\n2 2 1') == '1'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 3 3 3') == '1'\nassert solution('-1 -1 -1 -1') == '-1'\nassert solution('2 -1 -1 -1') == '-1'\nassert solution('1 -1 -1 -1') == '0'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 2 1 3') == '2'\nassert solution('2 2 2 3') == '2'\nassert solution('1 1 1 3') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 0 1') == '2'\nassert solution('1 0 0 0') == '0'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('5 4 3 2 1') == '5'\nassert solution('5 4 3 2 5') == '10'\nassert solution('3 3 3 3 3 3') == '3'\n\"\"\"\n\n\"\"\"\nWe have A cards, each of which has an integer 1 written on it. Similarly, we also have B cards with 0s and C cards with -1s.\nWe will pick up K among these cards. What is the maximum possible sum of the numbers written on the cards chosen?\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B C K\n\n-----Output-----\nPrint the maximum possible sum of the numbers written on the cards chosen.\n\n-----Sample Input-----\n2 1 1 3\n\n-----Sample Output-----\n2\n\nConsider picking up two cards with 1s and one card with a 0.\nIn this case, the sum of the numbers written on the cards is 2, which is the maximum possible value.\n\n-----Sample Input-----\n5 4 3 2 1\n\n-----Sample Output-----\n10\n\nConsider picking up five cards with numbers on them.\nIn this case, the sum of the numbers written on the cards is 2, which is the maximum possible value.\n\n-----Sample Input-----\n5 4 3 2 5\n\n-----Sample Output-----\n10\n\n-----Sample Input-----\n5 4 3 2 5\n\n-----Sample Output-----\n10\n\n-----Sample Input-----\n5 4 3 2 5\n\n-----Sample Output-----\n10\n\"\"\""
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 1 1 4') == '2'\nassert solution('2 1 1 4') == '2'\nassert solution('2 1 1 3') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 1 1 0') == '2'\nassert solution('2 1 1 -1') == '2'\nassert solution('2 1 2 -1') == '2'\nassert solution('2 1 1 1') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 1 3''') == '2'\nassert solution('''3 1 1 3''') == '3'\nassert solution('''4 1 1 3''') == '4'\nassert solution('''5 1 1 3''') == '5'\nassert solution('''6 1 1 3''') == '6'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 5\") == \"4\"\nassert solution(\"2 1 1 1\") == \"4\"\nassert solution(\"2 1 1 2\") == \"5\"\nassert solution(\"2 1 1 3\") == \"5\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n\n'''\n\nA, B, C, K = [int(x) for x in stdin.strip().split(' ')]"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"10 2\") == \"Yes\"\nassert solution(\"1 100\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"2 7\") == \"No\"\nassert solution(\"2 4\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('10 10') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"2 2\") == \"Yes\""
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 9\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 9\") == \"No\"\nassert solution(\"9 9\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"2 1\") == \"No\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\nassert solution('3 3\\n1 2\\n2 3\\n1 3') == '1'\nassert solution('3 3\\n1 2\\n2 3\\n2 1') == '0'\nassert solution('4 5\\n1 2\\n3 4\\n4 5\\n1 3\\n2 4') == '0'\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"1 3\") == \"0\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n\") == 2\n\n\n\"\"\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '2'\nassert solution('1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n') == '2'\nassert solution('1 1\\n2 3\\n3 4\\n4 5\\n5 1\\n') == '2'\nassert solution('1 1\\n1 3\\n3 4\\n4 5\\n5 1\\n') == '2'\nassert solution('1 1\\n1 3\\n3 4\\n4 5\\n5 1\\n') == '2'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3') == 2\nassert solution('3 3') == 2\nassert solution('1 2') == 2\nassert solution('1 3') == 2\nassert solution('2 3') == 2\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''3 3\n1 2\n2 3\n2 4''') == '1'\nassert solution('''3 3\n1 2\n1 3\n1 4\n2 3\n2 4''') == '2'\nassert solution('''3 3\n1 2\n2 3\n2 4''') == '2'\nassert solution('''3 3\n1 2\n1 3\n1 4\n2 3\n3 4''') == '1'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"2\"\n\"\"\""
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '18'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '18'\n'''\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"20 17\") == \"19\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"-1 1\") == \"0\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 -5\") == \"1\"\nassert solution(\"2 -4\") == \"2\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('2 1') == None\nassert solution('3 1') == None\nassert solution('3 0') == None\nassert solution('5 10') == None\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == 18"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '18'\nassert solution('10 9') == '23'\nassert solution('10 19') == '28'\nassert solution('10 29') == '36'\nassert solution('10 40') == '45'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2''') == \"18\"\nassert solution('''5 1''') == \"5\"\nassert solution('''5 6''') == \"14\"\nassert solution('''10 10''') == \"46\"\nassert solution('''100 1''') == \"100\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == '6'\nassert solution(\"5 2\") == '18'\nassert solution(\"8 3\") == '27'\nassert solution(\"10 -4\") == '-1'\nassert solution(\"20 -5\") == '15'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('2.5') == None\nassert solution('0') == None\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"15\") == 60\nassert solution(\"15\\n\") == 60\n\"\"\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '60'\n\n\"\"\""
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('15') == 60\nassert solution('30') == 720\nassert solution('1000') == 183600\nassert solution('10001') == 76576500\nassert solution('5') == 7\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('\\n'.join([\n    '15',\n    '',\n    ''\n])) == '60', '15'\n\nassert solution('\\n'.join([\n    '1',\n    '',\n    '0'\n])) == '1', '0'\n\nassert solution('\\n'.join([\n    '4',\n    '',\n    '0'\n])) == '0', '0'\n\nassert solution('\\n'.join([\n    '11',\n    '',\n    '0'\n])) == '0', '0'\n\nassert solution('\\n'.join([\n    '13',\n    '',\n    '0'\n])) == '0', '0'"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''15''') == '60'\nassert solution('''1''') == '1'\nassert solution('''1,2,3,4,5,6,7,8,9,10,11,12,13,14,15''') == '60'\n'''\n-----\n'''\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == 'Fizz'\nassert solution('3 3') == 'Fizz'\nassert solution('5 5') == 'Fizz'\nassert solution('1 1') == 'Fizz'\nassert solution('1 2') == 'Fizz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('15') == '60'\nassert solution('5') == 'Buzz'\nassert solution('1') == 'Fizz'\nassert solution('9') == 'Fizz'\nassert solution('99') == 'Fizz'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"8\"\nassert solution(\"2 3 4 5 6\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7\") == \"8\"\nassert solution(\"2 3 4 5 6 7\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"6\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4\\n2 3') == '3'\nassert solution('2 4\\n2 3') == '2'\nassert solution('1 3\\n1 2') == '2'\nassert solution('1 1\\n1 1') == '1'\nassert solution('1 2\\n1 1') == '1'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '8'\n\"\"\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 7 10 6 5\") == \"8\"\nassert solution(\"6 5\") == \"8\"\nassert solution(\"8 5\") == \"8\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"3 5\") == \"5\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 5\") == \"8\"\nassert solution(\"4 7 10 6 5\") == \"8\"\nassert solution(\"6 7 10 6 5\") == \"8\"\nassert solution(\"6 7 8 10 6 5\") == \"8\"\nassert solution(\"6 7 8 10 6 5\") == \"8\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1') == '1'\nassert solution('2 1\\n1') == '1'\nassert solution('2 2\\n1') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('8 7\\n1 2 3 4 5 6 7 8') == '4'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"8\"\nassert solution(\"-12 0\") == \"-12\"\nassert solution(\"-12 15\") == \"-9\"\nassert solution(\"11 6\") == \"9\"\nassert solution(\"-11 9\") == \"-11\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\nassert solution(\"3 2\\n2 1\") == \"1\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 2') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input('')) == input('')\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == 1\nassert solution('3 4') == 5\nassert solution('2 4') == 1\nassert solution('2 1') == 2\nassert solution('1 1') == 1\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '1'\nassert solution('4 1') == '1'\nassert solution('8 1') == '1'\nassert solution('6 6') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2''') == '1'\nassert solution('''10 10''') == '1'\nassert solution('''5 6''') == '4'\nassert solution('''2 3''') == '1'\nassert solution('''1 1''') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 4') == '3'\nassert solution('2 1') == '1'\nassert solution('2 3') == '3'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_out"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '1'\nassert solution('6 2') == '2'\nassert solution('8 2') == '2'\nassert solution('10 1') == '9'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\n\n\n\n-------"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"-1\"\n\"\"\"\n\nn,k = map(int, stdin.split())\na = list(map(int, stdin.split()))\n\nfor x in range(1, 10**9+1):\n    if all(a[i] <= x for i in range(k)):\n        print(x)\n        break\nelse:\n    print(-1)"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('10 6\\n5 1 4 3 2 6 7 9 8') == '1'\nassert solution('7 2\\n2 3 4 5 6 7 8 9 10') == '-1'\nassert solution('2 2\\n2 2 2') == '1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\""
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7 4 2 1 3 3 3 7 5 1 10 3 20') == '6'\nassert solution('7 2 4 3 7 5 1 10 3 20') == '-1'\nassert solution('7 2 4 3 7 5 1 10 3 20') == '-1'\nassert solution('7 2 4 3 7 5 1 10 3 20') == '-1'\nassert solution('7 2 4 3 7 5 1 10 3 20') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn,k = map(int, stdin.readline().strip().split())\nsequence = [int(x) for x in stdin.readline().strip().split()]\n\nans = -1\nfor i in range(10**9):\n    s = set()\n    for j in range(n):\n        if sequence[j] <= i:\n            s.add(sequence[j])\n    if len(s) == k:\n        ans = i\n        break\nprint(ans)"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\n\n\n\"\"\"\n\n\"\"\"\nAnother solution"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\nassert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 1 2 3 4 5 6 7''') == '-1'\nassert solution('''7 2\n3 2 1 3 4 5 6 7''') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 1\\n3 7 5 1 10 3 20') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == \"3\"\n\nassert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == \"-1\"\n\nassert solution(\n'''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == \"3\"\n\nassert solution(\n'''3 3\n*.*\n.*.\n*.*''') == \"3\"\n\nassert solution(\n'''7 7\n*.......\n*.*.***.\n.*.*.*.*\n.*.*.*.*\n*.*.*.*.*\n*.*.*.*.*\n*.*.*.*.*''') == \"3\""
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 8''') == '3'\nassert solution('''3 3''') == '3'\nassert solution('''5 5''') == '3'\nassert solution('''5 3''') == '-1'\nassert solution('''3 3''') == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 8') == '3'\nassert solution('3 3') == '2 2 1'\nassert solution('5 5') == '3 3 1'\nassert solution('5 5') == '-1'\nassert solution('5 5') == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\n*.*\\n.*.\\n*.*\\n') == '2\\n3 3 1'\nassert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3\\n3 4 1\\n3 5 2\\n3 5 1'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3\\n2 2 1\\n3 3 1\\n3 4 1'\n\n\n-----Template-----\n\n\"\"\""
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    3 3\n    *.*\n    .*.\n    *.*\n    ''') == '2'\n\nassert solution('''\n    5 5\n    .*...\n    *.*.\n    .*.*.\n    .*.*.\n    .....\n    ''') == '3'\n\nassert solution('''\n    5 5\n    .*.*.\n    *.*.*.\n    .*.*.*.\n    .*.*.*.\n    .....\n    ''') == '-1'\n\nassert solution('''\n    3 3\n    *.*\n    .*.\n    *.*\n    ''') == '3'\n\nassert solution('''\n    3 3\n    *.*\n    .*.\n    *.*\n    ''') == '2'"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 8''') == '3'\nassert solution('''5 5''') == '3'\nassert solution('''3 3''') == '-1'\nassert solution('''5 5''') == '-1'\nassert solution('''5 4''') == '2'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('5 5') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n*.*\\n.*.\\n*.*') == '3'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...') == '3'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.....') == '-1'\nassert solution('3 3\\n*.*\\n.*.\\n*.*') == '3'\nassert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...') == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n*.*\\n.*.\\n.*.\\n*.*') == '2\\n3 3 1'\nassert solution('3 3\\n*.*\\n.*.\\n.*.\\n*.*') == '2\\n3 3 1'\nassert solution('5 5\\n.*...\\n.*.\\n.*.\\n.*.\\n.....') == '3\\n3 4 1\\n3 5 2'\nassert solution('5 5\\n.*...\\n.*.\\n.*.\\n.*.\\n.*') == '3\\n3 4 1\\n3 5 2'\nassert solution('3 3\\n*.*\\n.*.\\n.*.\\n*.*') == '2\\n3 3 1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == '-1'\nassert solution('2 2 1') == '3 3 1'\nassert solution('3 3 1') == '3 4 1'\nassert solution('5 5') == '3'\nassert solution('5 4') == '2 2 1'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('good') == '0'\nassert solution('aa') == '1'\nassert solution('aabc') == '2'\nassert solution('aaa') == '0'\nassert solution('abcdefgh') == '8'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('good') == 0\nassert solution('aaa') == 3\nassert solution('abc') == 2\nassert solution('abcabc') == 0\nassert solution('abcabcabc') == 3\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\ngood\n''') == '0'\nassert solution('''\n5\naaaa\n''') == '4'\nassert solution('''\n3\nabc\n''') == '2'\nassert solution('''\n5\nabcdefg\n''') == '0'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"\"\nassert solution(\"ab\") == \"ab\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('good') == ''\nassert solution('a') == 'a'\nassert solution('aaa') == 'a'\nassert solution('abc') == 'a'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(good) == 0\nassert solution(string) == 0\nassert solution(xyyx) == 3\nassert solution(bad) == 2\nassert solution(aaaa) == 0\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abacddb\") == \"bacddb\"\nassert solution(\"abacddb\") == \"bacddb\"\nassert solution(\"aaabb\") == \"bbaa\"\nassert solution(\"aaabb\") == \"baa\"\nassert solution(\"aaaa\") == \"\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('good') == 0\nassert solution('aabc') == 2\nassert solution('aaa') == 3\nassert solution('asd') == 0\nassert solution('x') == 1\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\", \"String is empty\"\nassert solution(\"good\") == \"\", \"String is good\"\nassert solution(\"good\") == \"\", \"String is good\"\nassert solution(\"a\") == \"\", \"String is a\"\nassert solution(\"aa\") == \"\", \"String is aa\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == \"YES\"\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == \"NO\"\n'''\n\"\"\"\n\"\"\"\n\n\"\"\"\n-----\n\"\"\"\n\"\"\"\nThe first line contains two space separated integers $n$ and $m$ representing the number of vertices and edges respectively.\n\nThe following line contains $m$ space separated integers representing pairs of vertices.\n\nThe second line contains a positive integer, $n - 1 \\le m \\le 2n-1$ representing the number of edges.\n\nIt's guaranteed that there are no edges with length greater than or equal to 2.\n\nYou are given the edges in the form of a pair of vertices.\n\nReturn a string \"YES\" (without the quotes), if it is possible to direct the edges of the given graph in the desired manner. Otherwise, return \"NO\".\n\nNote:\nA path is a subset of edges that joins two vertices. A path with length $k$ is called a $k$-path.\n\"\"\"\n\"\"\"\n\"\"\""
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\n\n\n\n\"\"\"\n\nfrom typing import Dict, Set, Tuple\nfrom collections import deque, defaultdict\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n\n----\n\nThis is a very interesting problem. It's quite difficult to do it in a naive way, which results in runtime error in the worst case. On the other hand, I can implement it in a better way.\n\nI can use any hashmap and create a directed graph. The key of the hashmap is the starting vertex, and the value is the destination vertex.\n\nThen, for each edge, we can add the destination vertex to the destinations list of the key of the hashmap. If the destination vertex is already in the destinations list, we know that the current edge leads to a cycle.\n\n\n\"\"\"\n\n\nimport sys\n\nn, m = [int(x) for x in sys.stdin.readline().split()]\ngraph = {i: [] for i in range(1, n + 1)}\n\nfor _ in range(m):\n    u, v = [int(x) for x in sys.stdin.readline().split()]\n    graph[u].append(v)\n    graph[v].append(u)\n\nvisited = [False] * (n + 1)\n\nfor u in range(1, n + 1):\n    if visited[u]:\n        continue\n    visited[u] = True\n    queue = [u]\n    next_queue = []\n    while queue:\n        u = queue.pop()\n        for v in graph[u]:\n            if visited[v]:\n                continue\n            visited[v] = True\n            next_queue.append(v)\n        queue = next_queue"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == 'YES'\nassert solution(input2) == 'YES'\nassert solution(input3) == 'NO'\nassert solution(input4) == 'NO'\nassert solution(input5) == 'NO'\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4\\n5 1') == \"NO\"\nassert solution('1 2\\n3 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 6\\n1 4\\n4 2\\n4 1\\n1 2\\n1 3\\n1 5\\n1 4\\n2 1\\n2 3\\n3 4\\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n------\n\n>>> from micro_pipeline.text_files import stdin_to_test_file, read_test_file\n\n>>> test_file = stdin_to_test_file('solution', test_file)\n>>> output = read_test_file(test_file)\n\n>>> assert output == stdin\n>>> assert len(output.splitlines()) == 1\n\n\"\"\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    stdin=\"\"\"6 5\n1 5\n2 1\n1 4\n3 1\n6 1\"\"\") == \"\"\"YES\n10100\"\"\"\n\nassert solution(\n    stdin=\"\"\"1 2\n2 1\n3 1\n4 1\n5 1\n6 1\"\"\") == \"\"\"NO\"\"\"\n\nassert solution(\n    stdin=\"\"\"6 9\n1 5\n2 3\n4 5\n4 6\n1 2\n1 3\n2 4\n1 5\n3 4\n3 5\n4 5\n5 6\n6 5\n4 7\n5 7\n7 6\n6 7\n6 8\n5 8\n5 9\n4 9\n3 9\n1 9\n1 10\n2 10\n2 11\n1 11\n3 11\n3 12\n1 12\n1 13\n2 13\n2 14\n1 14\n1 15\n2 15\n3 14\n3 15\n3 16\n2 16\n2 17\n1 17\n2 18\n1 18\n3 19\n1 19\n3 20\n2 20\n2 21\n1 21\n3 22\n1 22\n3 23\n1 23\n3 24\n1 24\n3 25\n1 25\n3 26\n1 26\n1 27\n2 27\n2 28\n3 28\n3 29\n3 29\n4 29\n1 29\n1 30\n2 30\n1 31\n1 32\n2 32\n2 33\n1 33\n3 33\n3 34\n1 34\n1 35\n2 35\n1 36\n2 36\n2 37\n1 37\n2 38\n1 38\n1 39\n2 39\n3 39\n1 39\n1 40\n2 40\n1 41\n1 42\n2 42\n3 42\n1 42\n1 43\n2 43\n1 44\n1 45\n2 45\n1 46\n1 47\n2 47\n1 48\n1 49\n2 49\n1 49\n1 50\n2 50\n1 51\n1 52\n2 52\n1 52\n1 53\n2 53\n1 54\n1 55\n2 55\n1 56\n1 57\n2 57\n1 57\n1 58\n2 58\n3 58\n1 58\n1 59\n2 59\n1 59\n1 60\n2 60\n1 61\n1 62\n2 62\n1 62\n1 63\n2 63\n1 63\n1 64\n2 64\n1 64\n1 65\n2 65\n1 65\n1 66\n2 66\n1 66\n3 66\n1 66\n1 67\n2 67\n1 67\n1 68\n2 68\n1 68\n3 68\n1 68\n1 69\n2 69\n1 69\n1 70\n2 70\n1 70\n3 70\n1 70\n1 71\n2 71\n1 71\n1 72\n2 72\n1 72\n1 73\n2 73\n1 73\n1 74\n2 74\n1 74\n1 75\n2 75\n1 75\n1 76\n2 76\n1 76\n1 77\n2 77\n1 77\n1 78\n2 78\n1 78\n1 79\n2 79\n1 79\n1 80\n2 80\n1 80\n1 81\n2 81\n1 81\n1 82\n2 82\n1 82\n1 83\n2 83\n1 83\n1 84\n2 84\n1 84\n1 85\n2 85\n1 85\n1 86\n2 86\n1 86\n1 87\n2 87\n1 87\n1 88\n2 88\n1 88\n1 89\n2 89\n1 89\n1 90\n2 90\n1 90\n1 91\n2 91\n1 91\n1 92\n2 92\n1 92\n1 93\n2 93\n1 93\n1 94\n2 94\n1 94\n1 95\n2 95\n1 95\n1 96\n2 96\n1 96\n1 97\n2 97\n1 97\n1 98\n2 98\n1 98\n1 99\n2 99\n1 99\n1 100\n2 100\n1 100\n1 101\n2 101\n1 101\n1 102\n2 102\n1 102\n1 103\n2 103\n1 103\n1 104\n2 104\n1 104\n1 105\n2 105\n1 105\n1 106\n2 106\n1 106\n1 107\n2 107\n1 107\n1 108\n2 108\n1 108\n1 109\n2 109\n1 109\n1 110\n2 110\n1 110\n1 111\n2 111\n1 111\n1 112\n2 112\n1 112\n1 113\n2 113\n1 113\n1 114\n2 114\n1 114\n1 115\n2 115\n1 115\n1 116\n2 116\n1 116\n1 117\n2 117\n1 117\n1 118\n2 118\n1 118\n1 119\n2 119\n1 119\n1 120\n2 120\n1 120\n1 121\n2 121\n1 121\n1 122\n2 122\n1 122\n1 123\n2 123\n1 123\n1 124\n2 124\n1 124\n1 125\n2 125\n1 125\n1 126\n2 126\n1 126\n1 127\n2 127\n1 127\n1 128\n2 128\n1 128\n1 129\n2 129\n1 129\n1 130\n2 130\n1 130\n1 131\n2 131\n1 131\n1 132\n2 132\n1 132\n1 133\n2 133\n1 133\n1 134\n2 134\n1 134\n1 135\n2 135\n1 135\n1 136\n2 136\n1 136\n1 137\n2 137\n1 137\n1 138\n2 138\n1 138\n1 139\n2 139\n1 139\n1 140\n2 140\n1 140\n1 141\n2 141\n1 141\n1 142\n2 142\n1 142\n1 143\n2 143\n1 143\n1 144\n2 144\n1 144\n1 145\n2 145\n1 145\n1 146\n2 146\n1 146\n1 147\n2 147\n1 147\n1 148\n2 148\n1 148\n1 149\n2 149\n1 149\n1 150\n2 150\n1 150\n1 151\n2 151\n1 151\n1 152\n2 152\n1 152\n1 153\n2 153\n1 153\n1 154\n2 154\n1 154\n1 155\n2 155\n1 155\n1 156\n2 156\n1 156\n1 157\n2 157\n1 157\n1 158\n2 158\n1 158\n1 159\n2 159\n1 159\n1 160\n2 160\n1 160\n1 161\n2 161\n1 161\n1 162\n2 162\n1 162\n1 163\n2 163\n1 163\n1 164\n2 164\n1 164\n1 165\n2 165\n1 165\n1 166\n2 166\n1 166\n1 167\n2 167\n1 167\n1 168\n2 168\n1 168\n1 169\n2 169\n1 169\n1 170\n2 170\n1 170\n1 171\n2 171\n1 171\n1 172\n2 172\n1 172\n1 173\n2 173\n1 173\n1 174\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'YES'\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'NO'\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n3 2\n2 3\n3 4\n1 5\n2 1\n2 3\n1 4\n3 1\n6 1''') == 'NO'\n'''\n'''\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"NO\"\n\n\"\"\"\n\n\"\"\"\nAccepted\n72/72 cases passed (3844 ms)\nYour runtime beats 39.00 % of python3 submissions\nYour memory usage beats 39.25 % of python3 submissions (14.1 MB)\n\"\"\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n3 1') == 'NO'\nassert solution('1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1') == 'NO'\nassert solution('1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1') == 'NO'\nassert solution('1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1') == 'NO'\nassert solution('1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1') == 'NO'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2\\n'\nassert solution('1 2') == '3 4\\n'\nassert solution('5 5') == '0\\n'\nassert solution('1 2\\n1 2') == '0\\n'\nassert solution('1 1\\n1 1') == '0\\n'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\nassert solution('''3 8\n2 2\n1 2\n4 2\n6 6\n3 3\n4 3\n''') == '1 2'\nassert solution('''3 8\n2 2\n1 2\n4 2\n6 6\n5 5\n3 3\n''') == '1 2 4 5'\nassert solution('''5 5\n3 3\n5 4\n3 2\n3 4\n2 2\n1 1\n''') == '2'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4'\nassert solution('''1 7\n1 7''') == '0'\nassert solution('''7 8\n1 2\n2 3\n3 4\n5 6\n6 7''') == '4'\nassert solution('''4 2\n1 2\n4 5\n1 1\n7 6''') == '0'\nassert solution('''8 3\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\") == \"2\\n3 4\"\nassert solution(\"1 7\\n1 7\") == \"0\"\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('1 7\\n5 7\\n') == '0\\n'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2\\n3 4\\n'\nassert solution('''1 7\n1 7\n''') == '0\\n'\nassert solution('''1 7\n1 7\n1 7\n1 7\n1 7\n''') == '0\\n'\nassert solution('''1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n''') == '0\\n'\n\n\n-----"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5') == '2\\n3 4'\nassert solution('1 7') == '0'\nassert solution('2 7') == '0'\nassert solution('3 4') == '1 2'\n\n\n\"\"\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('1 3\\n4 4\\n') == '0\\n'\nassert solution('1 4\\n4 2\\n') == '0\\n'\n\n\n\n\n\"\"\""
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 2\\n3 4') == '0'\nassert solution('1 7\\n1 7\\n3 4') == '0'\nassert solution('1 2\\n2 1\\n1 2') == '2'\nassert solution('1 2\\n2 2\\n2 3\\n3 2') == '2'\nassert solution('1 2\\n2 1\\n1 3\\n3 2') == '2'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 2\\n') == '0'\nassert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0'\nassert solution('7 1\\n7 1\\n') == '0'\nassert solution('1 1\\n2 2\\n') == '0'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"[Hint: Go to this website](https://projecteuler.net/problem=81) to see an example of expected output in a language other than English]\"\"\"\n\nfrom sys import stdin\nstdin = stdin.read().splitlines()\nprint(solution(stdin))\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(2)\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"4 9 2 2\") == \"1\"\nassert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"4 9 2 3\") == \"2\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('3 2 3 1') == '1'\nassert solution('2 5 7 2') == '0'\nassert solution('5 5 5 5') == '1'\nassert solution('2 5 7 3') == '2'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(123456789) == \"Yes\"\n\n\"\"\"\n\"\"\"\n\nfrom itertools import accumulate\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'Yes'\nassert solution('1234567890123456789012345678901234567890') == 'No'\nassert solution('1234567890123456789012345678901234567890') == 'No'\n\nassert solution('1234567890123456789012345678901234567890') == 'No'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123456789') == \"Yes\"\nassert solution('123456789') == \"Yes\"\nassert solution('123456789') == \"Yes\"\nassert solution('123456789') == \"Yes\"\nassert solution('123456789') == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('987654321') == 'No'\nassert solution('1234567890') == 'Yes'\nassert solution('12345678901') == 'No'\nassert solution('98765432101') == 'No'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(0) == \"Yes\"\nassert solution(12345678) == \"No\"\nassert solution(12345) == \"Yes\"\nassert solution(12) == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(112) == 'Yes'\nassert solution(12345) == 'No'\nassert solution(124) == 'Yes'\nassert solution(2034) == 'No'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789abcdef\") == \"No\"\nassert solution(\"83973\") == \"Yes\"\nassert solution(\"91349\") == \"No\"\nassert solution(\"2752\") == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456') == 'No'\nassert solution('1') == 'Yes'\nassert solution('0') == 'No'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"0123456789\") == \"No\"\nassert solution(\"1223456789\") == \"No\"\nassert solution(\"01234567890123456789\") == \"No\"\nassert solution(\"012345678901234567890123456789\") == \"Yes\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == expected\n\"\"\""
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"-1\\n\") == \"0\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"0\"\nassert solution(\"3\\n\") == \"1\"\nassert solution(\"4\\n\") == \"1\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('127') == '4'\nassert solution('100000') == '100000'\n\n\"\"\""
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('13') == '3'\nassert solution('4444') == '9'\nassert solution('999999999') == '999999999'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('128') == 4\nassert solution('129') == 5\nassert solution('1314') == 7\nassert solution('1316') == 8\nassert solution('131616161616') == 13\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12\\n') == '4'\nassert solution('2\\n') == '1'\nassert solution('8\\n') == '3'\nassert solution('1000\\n') == '39'\nassert solution('10\\n') == '5'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('3') == 2\nassert solution('10') == 3\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(12) == \"4\"\nassert solution(0) == \"0\"\nassert solution(0) == \"0\"\nassert solution(123) == \"10\"\nassert solution(512) == \"42\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"9\") == \"\"\nassert solution(\"99\") == \"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"kyoto\"\n) == \"Yes\"\n\nassert solution(\n    \"tokyo\"\n) == \"Yes\"\n\nassert solution(\n    \"k\"\n) == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"kyoto\ntokyo\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"toronto\nto\nort\nnan\na\nn\na\nn\na\nt\ny\nao\nno\nta\no\nn\no\nr\nn\"\"\"\n) == \"No\"\n\nassert solution(\n\"\"\"\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"kyoto\") == \"tokyo\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('kyoto') == 'Yes'\n\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('hello') == 'No'\nassert solution('lintcode') == 'Yes'\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('kyoto', 'tokyo') == 'Yes'\nassert solution('kyoto', 'tokyo') == 'No'\nassert solution('tokyo', 'kyoto') == 'Yes'\nassert solution('tokyo', 'kyoto') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nprint(\"tests passed\")\n\"\"\""
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('kotyota') == 'No'\nassert solution('koty') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('okay') == 'No'\nassert solution('tokyo') == 'Yes'\nassert solution('okay') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('kk') == 'No'\nassert solution('k') == 'No'\nassert solution('tk') == 'Yes'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('abcab') == '1'\nassert solution('abab') == '0'\nassert solution('abababab') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"xxxxxx\") == \"0\"\nassert solution(\"abcabccc\") == \"0\"\nassert solution(\"abcabcccx\") == \"3\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''cabacc''') == 1\nassert solution('''abc''') == 0\nassert solution('''a''') == 0\nassert solution('''a''') == 0\nassert solution('''a''') == 0\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[2:4]\n\n'''"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('abacabac') == 0\nassert solution('aba') == 2\nassert solution('abacabac') == 2\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcabcab\") == \"0\"\nassert solution(\"abcabcabcabcabcab\") == \"0\"\nassert solution(\"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('abcd') == 3\nassert solution('aaab') == 0\nassert solution('aabcbc') == 2\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('gfhgf') == 0\nassert solution('bcabc') == 0\nassert solution('abcbc') == 0\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cabacc', 'abc') == 1\nassert solution('abc', 'abc') == 0\nassert solution('abca', 'abc') == 1\nassert solution('abca', 'abca') == 0\nassert solution('abc', 'abc') == 0\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 1\nassert solution('5 7 8') == 1\nassert solution('5 9 7') == 1\nassert solution('1 2 2') == 1\nassert solution('5 9 2') == 2\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''8 12 3''') == '3'\nassert solution('''1 1 3''') == '1'\nassert solution('''2 1 3''') == '1'\nassert solution('''4 2 3''') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 4\") == 2\nassert solution(\"8 12 2\") == 2\nassert solution(\"10 100 1\") == 1\nassert solution(\"100 100 1\") == 1\nassert solution(\"8 9 2\") == 1\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"4 10 1\") == \"2\"\nassert solution(\"4 10 2\") == \"2\"\nassert solution(\"2 6 1\") == \"2\"\nassert solution(\"2 6 2\") == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split()[2]"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '2'\nassert solution('8 12 2') == '2'\nassert solution('5 11 1') == '1'\nassert solution('2 5 1') == '1'\nassert solution('5 1 1') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n8 12 2\n'''\n) == '2'\n\nassert solution(\n'''\n8 12 2\n'''\n) == '2'\n\nassert solution(\n'''\n8 16 2\n'''\n) == '4'\n\nassert solution(\n'''\n8 4 2\n'''\n) == '2'\n\nassert solution(\n'''\n7 100 1\n'''\n) == '1'"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1024') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('1') == None\nassert solution('10') == None\nassert solution('100') == None\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1000') == '5000'\nassert solution('1000000') == '1000000000'\nassert solution('243845') == '2483845'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2020\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2') == '1'\nassert solution('3\\n1') == '2'\nassert solution('4\\n1') == '2'\nassert solution('6\\n1') == '2'\nassert solution('9\\n1') == '2'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1024\") == \"2020\"\n'''"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"100\"\nassert solution(\"100\") == \"500\"\nassert solution(\"1000\") == \"5000\"\nassert solution(\"9999\") == \"999999\"\nassert solution(\"10\") == \"500\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 0\nassert solution('10') == 0\nassert solution('100') == 0\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '2020'\nassert solution('1000') == '10000'\nassert solution('10^5') == '10000'\nassert solution('10^10') == '10'\nassert solution('10^1000') == '1'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4') == 5\nassert solution('1\\n4\\n2\\n3\\n4') == 14\nassert solution('1\\n4\\n2\\n3\\n5') == 17\nassert solution('1\\n4\\n2\\n3\\n5\\n7\\n11') == 30\nassert solution('1\\n4\\n2\\n3\\n5\\n6\\n8') == 36\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4') == '5'\nassert solution('2 10') == '5'\nassert solution('1 1') == '0'\nassert solution('2 100') == '200'\nassert solution('7 10') == '45'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"5\\n1 4 2 3 4\") == \"30\"\nassert solution(\"4\\n1 4 2 3\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2\n1 4'''\n) == '5'\n\nassert solution(\n'''10\n-6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6'''\n) == '36'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1 4''') == '5'\nassert solution('''10\n1 4 5 9 2 3 8 6 7 10''') == '75'\nassert solution('''13\n3 2 8 5 1 4 4 9 7 6 9 6 2''') == '102'\nassert solution('''3\n1 1 1''') == '4'\nassert solution('''15\n4 1 5 4 6 3 5 2 3 7 5''') == '34'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"5\"\nassert solution(\"2\") == \"5\"\nassert solution(\"1 10\") == \"20\"\nassert solution(\"1 100\") == \"200\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('5\\n1 4 5 3 2') == '10'\nassert solution('7\\n1 2 3 4 5 6 7') == '50'\n\"\"\""
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4') == '5'\nassert solution('2 1 4') == '5'\nassert solution('3 1 4') == '8'\nassert solution('4 1 4') == '8'\nassert solution('5 1 4') == '10'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n1 2 3\") == \"4\"\nassert solution(\"4\\n1 2 3 4\") == \"6\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"12\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"24\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 10') == '3'\n\"\"\"\n\nA, B = map(int, input().split())"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 10\\n') == '3'\nassert solution('5 5\\n') == '5'\nassert solution('1 10\\n') == '0'\nassert solution('1 1\\n') == '0'\nassert solution('1 1\\n') == '0'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"A 10\") == 3\nassert solution(\"1 1\") == 1\nassert solution(\"4 1\") == 1\nassert solution(\"5 10\") == 2\nassert solution(\"20 1\") == 2\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 10''') == '3'\nassert solution('''4 9''') == '3'\nassert solution('''4 10''') == '3'\nassert solution('''4 10''') == '3'\nassert solution('''2 2''') == '0'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"4 10\n\"\"\") == 3\n\nassert solution(\n\"\"\"10 20\n\"\"\") == 3\n\nassert solution(\n\"\"\"11 21\n\"\"\") == 3\n\nassert solution(\n\"\"\"13 22\n\"\"\") == 3\n\nassert solution(\n\"\"\"12 22\n\"\"\") == 2"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 10') == '3'\nassert solution('2 2') == '2'\nassert solution('1 1') == '0'\nassert solution('7 2') == '4'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 10\") == \"3\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CS') == '1'\nassert solution('SR') == '1'\nassert solution('R') == '1'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('CS') == '0'\nassert solution('CSS') == '1'\nassert solution('CSC') == '2'\nassert solution('CSCS') == '0'\nassert solution('CSRS') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n        \"CSR\"\n        \"CSS\"\n    ) == \"2\"\n\nassert solution(\n        \"CSS\"\n        \"CSR\"\n    ) == \"2\"\n\nassert solution(\n        \"CSS\"\n        \"CSS\"\n    ) == \"0\"\n\nassert solution(\n        \"CSR\"\n        \"CSS\"\n    ) == \"0\"\n\nassert solution(\n        \"CSR\"\n        \"CSR\"\n    ) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('CSS') == \"2\"\nassert solution('CSR') == \"2\"\nassert solution('CSSCSR') == \"2\"\nassert solution('CSSCSRS') == \"2\"\nassert solution('CSSS') == \"0\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSRS') == '1'\nassert solution('CSSRS') == '2'\nassert solution('CSRSS') == '3'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"CSR\") == \"2\"\nassert solution(\"CSS\") == \"2\"\nassert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSRS\") == \"3\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''CSS''') == '0'\nassert solution('''CSR''') == '2'\nassert solution('''CSRS''') == '3'\nassert solution('''CSSR''') == '2'\nassert solution('''CSSR''') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''5\n2 1 3 4 5''') == '1'\nassert solution('''5\n2 1 4 3 5''') == '3'\nassert solution('''8\n2 1 4 3 5 6 7 8''') == '5'\nassert solution('''7\n2 1 4 3 5 6 7''') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"2 3 4 1 5\") == \"2\"\nassert solution(\"1 5 2 4 3\") == \"3\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 3') == '1'\nassert solution('3 1 2') == '1'\nassert solution('1 3 2') == '2'\nassert solution('1 3 1') == '1'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''6\n1 2 4 3 5 6''') == '2'\nassert solution('''7\n1 2 4 3 5 6 7''') == '3'\nassert solution('''20\n7 17 1 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '0'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 3 5 4 2\n''') == '2'\nassert solution('''\n7\n1 3 5 4 2 6 7\n''') == '0'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\n'''\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == '3'\nassert solution('1 2 3 4 5 6 7') == '4'\nassert solution('1 2 3 4 5 6 7 8') == '5'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 5 4 2') == 2\nassert solution('2 3 4 1 5') == 2\nassert solution('5 4 3 2 1') == 1\nassert solution('3 1 5 4 2') == 0\nassert solution('2 1 5 4 3') == 1\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"1 3 5 4 7\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"5 4 3 2 1\") == \"2\"\nassert solution(\"2 3 1 4 5\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''4\n1 2 3 4''') == '1'\nassert solution('''15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15''') == '12'\n'''\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\") == \"6.720\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == '5.410'\nassert solution('6\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == '5.480'\nassert solution('8\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06') == '6.040'\nassert solution('7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n-1.14 1.14\\n-1.14 1.14\\n-1.14 1.14\\n-1.14 1.14\\n-1.14 1.14') == '2.0'\nassert solution('1\\n0.0 1.0\\n-1.0 1.0\\n-1.0 1.0\\n-1.0 1.0\\n-1.0 1.0\\n-1.0 1.0') == '2.0'\nassert solution('2\\n-0.914 -0.278\\n-0.914 -0.278\\n-0.914 -0.278\\n-0.914 -0.278\\n-0.914 -0.278\\n-0.914 -0.278') == '3.0'\nassert solution('3\\n-1.05 1.14\\n-1.25 1.38\\n-1.05 1.14\\n-1.05 1.14\\n-1.05 1.14\\n-1.05 1.14') == '3.0'\nassert solution('4\\n-1.05 1.14\\n-1.25 1.38\\n-1.05 1.14\\n-1.05 1.14\\n-1.05 1.14\\n-1.05 1.14') == '3.0'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n-1.14 0.70\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n') == 5.410\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == 5.620\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == 5.480\nassert solution('7\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == 6.040\nassert solution('9\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == 6.720\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n') == '6.040'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == '6.720'"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\") == \"5.480\"\nassert solution(\"8\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\") == \"6.040\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\") == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62''') == '5.410'\nassert solution('''-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1."
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == 5.410\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == 5.620\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\") == 5.480\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\") == 6.040\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\") == 6.720\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 10\\n5 5 5 5 5') == '2'\nassert solution('5 15\\n5 5 5 5 5') == '1'\nassert solution('7 26\\n5 5 5 5 5 5') == '-1'\nassert solution('1 2 3 4 5 6\\n5 5 5 5 5 5') == '1'\nassert solution('1 2 3 4 5 6\\n7 7 7 7 7 7') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n1 3 4 2 1 4 2\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n1 3 4 2 1 4 2\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n5 5 5 5 5\") == \"-1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n5 5 5 5 5\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n5 5 5 5 5\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5\\n5 5 5 5 5') == '2'\nassert solution('3 2\\n1 3 4') == '-1'\nassert solution('2 3\\n1 3 4') == '-1'\nassert solution('3 3\\n1 3 4') == '-1'\nassert solution('3 9\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 10\\n5 5 5 5 5') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('7 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4\\n'\nassert solution('5 15\\n5 5 5 5 5\\n') == '2\\n'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1\\n'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2\\n'\nassert solution('7 16\\n5 5 5 5 5 5\\n') == '2\\n'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''5 15\n5 5 5 5 5\n''') == '1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''7 21\n5 5 5 5 5 5\n''') == '1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 15\n5 5 5 5 5\n''') == '2'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''5 17\n5 5 5 5 5\n''') == '2'\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '4'\nassert solution('''7 11\n1 3 4 2 1 4 2\n''') == '2'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == '1 2 3 4 5 6 7'\nassert solution('1 3 2 4 5 6 7 8 9') == '1 3 2 4 5 6 7'\nassert solution('1 3 2 4 5 6 7 8 9') == '1 3 2 4 5 6 7'\nassert solution('1 2 3 4 5 6 7 8 9') == '1 3 2 4 5 6 7'\nassert solution('1 2 3 4 5 6 7 8 9') == '1 3 2 4 5 6 7'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 3''') == '7 3 1 3'\nassert solution('''10 4''') == '1 1'\nassert solution('''15 2''') == '7 3 1 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 2 4 3 1\") == \"1 2 3\"\nassert solution(\"3\\n1 2 3\") == \"1 2 3\"\nassert solution(\"3\\n1 2 3 1 2 3\") == \"1 3\"\nassert solution(\"15\\n1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1 1 1 1\n''') == '1 1'\nassert solution('''7 3\n1 3 1 3 1 1 1\n''') == '1 3 1 3'\n\n'''"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1 1 1''') == '1 1'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1 1 1''') == '1 1'\nassert solution('''2 10\n1 2 1 2 1 2 1 2 1 2 1 1''') == '1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 1 1 1 1 1 1\\n') == '1 1'\nassert solution('15 4\\n1 3 1 3 1 3 1 3 1 1 1 1 1 1 1 1\\n') == '1 1 1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1''') == '1 1'\nassert solution('''15 2\n1 3 1 1 3 10 3 7 7 12 3''') == '1 3 1 3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('15 2\\n1 2 1 1 1 1 2 1 1 1 1 1\\n') == '1 1'\n\"\"\"\nfrom typing import Tuple"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 3''') == '''1 2 3 \n\n'''\n\nassert solution('''10 4''') == '''7 3 1 3 \n\n'''\n\nassert solution('''15 2''') == '''7 3 1 3 \n\n'''\n\nassert solution('''1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '''1 1 \n\n'''\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '0'\nassert solution('4 6\\n2 4 4 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9\\n10 10 10 10\\n11 11 11 11\\n12 12 12 12\\n13 13 13 13\\n14 14 14 14\\n15 15 15 15\\n16 16 16 16') == '3'\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 6') == '0'\nassert solution('1 2 3 4 5 6 7') == '3'\nassert solution('1 2 3 4 5 6 7 8') == '3'\nassert solution('1 2 3 4 5 6 7 8 9') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15 16') == '3'\nassert solution('4 2\\n1 2 3 4\\n10 3 7 3') == '0'\nassert solution('2 1\\n1') == '0'\nassert solution('2 3\\n1 2 3\\n4 5 6') == '3'\nassert solution('6 1\\n3') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'\nassert solution('3 3\\n3 3 3\\n3 3 3\\n3 3 3\\n3 3 3') == '0'\n\n\"\"\"\n\nimport sys\n\nclass Traversal:\n    def __init__(self, n, m, grid):\n        self.n = n\n        self.m = m\n        self.grid = grid\n        self.t = {}\n        for i in range(n):\n            for j in range(m):\n                self.t[(i, j)] = i * m + j + 1\n\n    def __getitem__(self, key):\n        return self.t[key]\n\n    def __setitem__(self, key, value):\n        self.t[key] = value\n\n    def is_k_acceptable(self, k):\n        n = self.n\n        m = self.m\n        for i in range(n):\n            for j in range(m):\n                for x in range(1, m):\n                    if abs(self.grid[i][j] - self.grid[i][x]) >= k:\n                        return False\n                for y in range(i + 1, n):\n                    if abs(self.grid[i][j] - self.grid[y][j]) >= k:\n                        return False\n        return True\n\n    def print_grid(self, grid):\n        n = self.n\n        m = self.m\n        for i in range(n):\n            for j in range(m):\n                sys.stdout.write(str(grid[i][j]) +'')\n            print()\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input('')) == output('')\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'\nassert solution('7 3\\n1 2 3 4 5 6 7\\n2 2 2 3 2 4 3\\n3 2 3 3 2 2 4\\n') == '3'\nassert solution('8 6\\n1 2 3 4 5 6 7 8\\n2 2 2 3 2 4 3\\n3 2 3 3 2 2 4\\n4 2 3 2 3 2 2 5\\n5 2 3 2 3 2 2 6\\n6 2 3 2 3 2 2 7\\n') == '0'\n\n\n\"\"\""
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '0'\nassert solution('''2 2\n1 2\n2 1\n''') == '0'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"xxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxxxxxxxxx\") == \"8\"\nassert solution(\"xxxxxiiii\") == \"5\"\nassert solution(\"xxoxxiii\") == \"3\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxxiiix') == '7'\nassert solution('xxoxxiiix') == '7'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"exxxii\") == 1\nassert solution(\"xxxiii\") == 1\nassert solution(\"xxoxx\") == 0\nassert solution(\"xxxxxxxxxx\") == 8\nassert solution(\"xxxxxx\") == 1\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxxxxii') == '7'\nassert solution('xxxxxxxxxii') == '6'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('xxxiii') == 1\nassert solution('xxoxx') == 0\nassert solution('xxoxox') == 0\nassert solution('xxxx') == 0\nassert solution('xxxxxxxxxx') == 8\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxoxxii') == '1'\nassert solution('xxxxxiii') == '3'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdefg') == '0'\nassert solution('xxabcdefg') == '1'\nassert solution('xxaxxcc') == '0'\nassert solution('xxaxxccdd') == '2'\nassert solution('xxaxxccddef') == '4'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\n'''\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('xxxxx') == 0\nassert solution('xxxxxx') == 2\nassert solution('xxxxxxiii') == 1\nassert solution('xxxxxxiiixxxxiii') == 6\nassert solution('xxxxxxiiiixxxxiii') == 5\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('xx3x') == '1'\nassert solution('xxii') == '0'\nassert solution('xxoxx') == '8'\nassert solution('xxxxxx') == '8'\nassert solution('xxxxx') == '7'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '12'\nassert solution('3') == '18'\nassert solution('4') == '24'\nassert solution('5') == '60'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n''') == '4'\nassert solution('''4\n''') == '16'\nassert solution('''3\n''') == '9'\nassert solution('''9\n''') == '243'\n\nassert solution('''1\n''') == '3'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == '48'\nassert solution('15') == '243'\nassert solution('25') == '1848'\nassert solution('40') == '5320'\nassert solution('60') == '1260'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8') == '24'\nassert solution('4') == '48'\nassert solution('2') == '36'\nassert solution('1') == '12'\nassert solution('100') == '10864'\n\nprint('Tests passed')\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(4) == 48\nassert solution(5) == 60\nassert solution(6) == 72\nassert solution(7) == 84\nassert solution(8) == 96\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4''') == '48'\n'''\nfrom math import pow\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '48'\nassert solution('4') == '36'\nassert solution('1') == '36'\nassert solution('0') == '36'\nassert solution('2') == '72'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '48'\nassert solution('5') == '55'\nassert solution('2') == '4'\nassert solution('1') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\") == 48\nassert solution(\"1\") == 3\nassert solution(\"3\") == 9\nassert solution(\"4\") == 16\nassert solution(\"6\") == 22\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"unsafe\"\n\"\"\""
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4') =='safe'\nassert solution('10 4') == 'unsafe'\nassert solution('0 0') =='safe'\nassert solution('5 10') == 'unsafe'\nassert solution('1 3') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'unsafe'\n\"\"\""
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(4,5) == \"unsafe\"\nassert solution(4,5) == \"safe\"\nassert solution(3,3) == \"safe\"\nassert solution(10,7) == \"safe\"\nassert solution(7,1) == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == \"unsafe\"\nassert solution('3 2') == \"safe\"\nassert solution('4 3') == \"unsafe\"\nassert solution('4 5') == \"safe\"\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"safe\"\nassert solution(\"9 3\") == \"unsafe\"\nassert solution(\"10 0\") == \"unsafe\"\nassert solution(\"1 2\") == \"safe\"\nassert solution(\"0 0\") == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'unsafe'\n\n\nfrom typing import List"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"7 5\") == \"safe\"\nassert solution(\"1 1\") == \"safe\"\nassert solution(\"1 2\") == \"unsafe\"\nassert solution(\"2 1\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0') == 'unsafe'\nassert solution('4 5') == 'unsafe'\nassert solution('2 3') =='safe'\nassert solution('10 4') == 'unsafe'\nassert solution('0 0') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output(input())\n'''\n\n'''\n------\u77e5\u8bc6\u70b9-------\n1. a,b,c,d,...,z = 1,2,3,...,26\n2. a.isupper() is False\n3. print(format('%c', 97)) = 'a'\n4. format('%s', 'abc') = 'abc'\n5. format('%d', 10) = '10'\n6. format('%s', chr(97)) = 'a'\n7. input() returns str\n8. input() returns str\n9. input() returns str\n10. input() returns str\n11. input() returns str\n12. input() returns str\n13. input() returns str\n14. input() returns str\n15. input() returns str\n16. input() returns str\n17. input() returns str\n18. input() returns str\n19. input() returns str\n20. input() returns str\n21. input() returns str\n22. input() returns str\n23. input() returns str\n24. input() returns str\n25. input() returns str\n26. input() returns str\n27. input() returns str\n28. input() returns str\n29. input() returns str\n30. input() returns str\n31. input() returns str\n32. input() returns str\n33. input() returns str\n34. input() returns str\n35. input() returns str\n36. input() returns str\n37. input() returns str\n38. input() returns str\n39. input() returns str\n40. input() returns str\n41. input() returns str\n42. input() returns str\n43. input() returns str\n44. input() returns str\n45. input() returns str\n46. input() returns str\n47. input() returns str\n48. input() returns str\n49. input() returns str\n50. input() returns str\n51. input() returns str\n52. input() returns str\n53. input() returns str\n54. input() returns str\n55. input() returns str\n56. input() returns str\n57. input() returns str\n58. input() returns str\n59. input() returns str\n60. input() returns str\n61. input() returns str\n62. input() returns str\n63. input() returns str\n64. input() returns str\n65. input() returns str\n66. input() returns str\n67. input() returns str\n68. input() returns str\n69. input() returns str\n70. input() returns str\n71. input() returns str\n72. input() returns str\n73. input() returns str\n74. input() returns str\n75. input() returns str\n76. input() returns str\n77. input() returns str\n78. input() returns str\n79. input() returns str\n80. input() returns str\n81. input() returns str\n82. input() returns str\n83. input() returns str\n84. input() returns str\n85. input() returns str\n86. input() returns str\n87. input() returns str\n88. input() returns str\n89. input() returns str\n90. input() returns str\n91. input() returns str\n92. input() returns str\n93. input() returns str\n94. input() returns str\n95. input() returns str\n96. input() returns str\n97. input() returns str\n98. input() returns str\n99. input() returns str\n100. input() returns str\n101. input() returns str\n102. input() returns str\n103. input() returns str\n104. input() returns str\n105. input() returns str\n106. input() returns str\n107. input() returns str\n108. input() returns str\n109. input() returns str\n110. input() returns str\n111. input() returns str\n112. input() returns str\n113. input() returns str\n114. input() returns str\n115. input() returns str\n116. input() returns str\n117. input() returns str\n118. input() returns str\n119. input() returns str\n120. input() returns str\n121. input() returns str\n122. input() returns str\n123. input() returns str\n124. input() returns str\n125. input() returns str\n126. input() returns str\n127. input() returns str\n128. input() returns str\n129. input() returns str\n130. input() returns str\n131. input() returns str\n132. input() returns str\n133. input() returns str\n134. input() returns str\n135. input() returns str\n136. input() returns str\n137. input() returns str\n138. input() returns str\n139. input() returns str\n140. input() returns str\n141. input() returns str\n142. input() returns str\n143. input() returns str\n144. input() returns str\n145. input() returns str\n146. input() returns str\n147. input() returns str\n148. input() returns str\n149. input() returns str\n150. input() returns str\n151. input() returns str\n152. input() returns str\n153. input() returns str\n154. input() returns str\n155. input() returns str\n156. input() returns str\n157. input() returns str\n158. input() returns str\n159. input() returns str\n160. input() returns str\n161. input() returns str\n162. input() returns str\n163. input() returns str\n164. input() returns str\n165. input() returns str\n166. input() returns str\n167. input() returns str\n168. input() returns str\n169. input() returns str\n170. input() returns str\n171. input() returns str\n172. input() returns str\n173. input() returns str\n174. input() returns str\n175. input() returns str\n176. input() returns str\n177. input() returns str\n178. input() returns str\n179. input() returns str\n180. input() returns str\n181. input() returns str\n182. input() returns str\n183. input() returns str\n184. input() returns str\n185. input() returns str\n186. input() returns str\n187. input() returns str\n188. input() returns str\n189. input() returns str\n190. input() returns str\n191. input() returns str\n192. input() returns str\n193. input() returns str\n194. input() returns str\n195. input() returns str\n196. input() returns str\n197. input() returns str\n198. input() returns str\n199. input() returns str\n200. input() returns str\n201. input() returns str\n202. input() returns str\n203. input() returns str\n204. input() returns str\n205. input() returns str\n206. input() returns str\n207. input() returns str\n208. input() returns str\n209. input() returns str\n210. input() returns str\n211. input() returns str\n212. input() returns str\n213. input() returns str\n214. input() returns str\n215. input() returns str\n216. input() returns str\n217. input() returns str\n218. input() returns str\n219. input() returns str\n220. input() returns str\n221. input() returns str\n222. input() returns str\n223. input() returns str\n224. input() returns str\n225. input() returns str\n226. input() returns str\n227. input() returns str\n228. input() returns str\n229. input() returns str\n230. input() returns str\n231. input() returns str\n232. input() returns str\n233. input() returns str\n234. input() returns str\n235. input() returns str\n236. input() returns str\n237. input() returns str\n238. input() returns str\n239. input() returns str\n240. input() returns str\n241. input() returns str\n242. input() returns str\n243. input() returns str\n244. input() returns str\n245. input() returns str\n246. input() returns str\n247. input() returns str\n248. input() returns str\n249. input() returns str\n250. input() returns str\n251. input() returns str\n252. input() returns str\n253. input() returns str\n254"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('2 3 4') == '3'\nassert solution('2 3 4 2') == '3'\nassert solution('4 5 2') == '6'\nassert solution('2 4 5') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == 6\nprint(solution(input(\"\")))\n\"\"\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '3 4 5') == '6'\nassert solution(\n    '3 4 6') == '6'\nassert solution(\n    '3 4 6 4') == '4'\nassert solution(\n    '3 4 6 4 3') == '8'\nassert solution(\n    '2 2 2') == '2'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('2 1 1') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 2 1') == '0'\nassert solution('1 1 2') == '0'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('1 2 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''0 0 0''') == '0'\nassert solution('''0 0 100''') == '100'\nassert solution('''0 0 100''') == '100'\nassert solution('''0 0 100''') == '100'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 4 1') == '1'\nassert solution('3 4 3') == '3'\nassert solution('1 1 1') == '0'\nassert solution('1 2 3') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == 6\nassert solution('5 2 1') == 3\nassert solution('1 2 3 4 5') == 3\nassert solution('1 2 3') == 3\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\") == 6\nassert solution(\"1 2 3\") == 6\nassert solution(\"1 1 1\") == 1\nassert solution(\"1 1 1 1\") == 1\n\"\"\"\n\nfrom math import sqrt\nfrom sys import stdin,stdout"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 11 4') == '4'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 11 4') == '4'\nassert solution('3 10 2') == '7'\nassert solution('2 10 1') == '5'\nassert solution('2 10 1') == '5'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"5 7 6\") == \"1\"\nassert solution(\"2 3 4\") == \"1\"\nassert solution(\"3 4 2\") == \"2\"\nassert solution(\"2 4 3\") == \"1\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 11 6') == '5'\nassert solution('2 11 10') == '9'\nassert solution('1 2 3') == '0'\nassert solution('3 3 3') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 10 5') == '4'\nassert solution('10 11 5') == '1'\nassert solution('10 11 10') == '0'\nassert solution('0 1 0') == '0'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 11 4') == '4'\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 11 4') == '4'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 100 1\") == \"0\"\nassert solution(\"2 100 1\") == \"1\"\nassert solution(\"1 10 1\") == \"1\"\nassert solution(\"2 10 1\") == \"0\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 11 4') == '4'\nassert solution('1 100 1') == '0'\nassert solution('1 100 1') == '0'\nassert solution('1 100 1') == '0'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 10\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5\\n') == '10'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 1') == '1'\nassert solution('3 4') == '12'\nassert solution('4 5') == '20'\nassert solution('2 2') == '4'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5') == 10\nassert solution('2 3') == 6\nassert solution('10 8') == 80\nassert solution('2 1') == 2\nassert solution('100 100') == 1000\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5') == 10\n'''\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 3\") == \"12\"\n\"\"\"\nfrom math import gcd"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n\") == 10\n\"\"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == 10\nassert solution('10 15') == 150\nassert solution('10 15') == 150\nassert solution('1 1') == 1\nassert solution('101 100') == 101\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5') == 10\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n\") == 10\nprint(\"Passed. (Add more tests to be more sure!)\")\n\"\"\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"0 10 10\") == \"0\"\nassert solution(\"0 0 10\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"1 10 1\") == \"0\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"5\"\nassert solution(\"5 4 2\") == \"8\"\nassert solution(\"3 4 3\") == \"9\"\nassert solution(\"8 6 3\") == \"3\"\nassert solution(\"10 10 10\") == \"1\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 6\") == \"0\"\nassert solution(\"3 4 6\") == \"5\"\nassert solution(\"5 9 15\") == \"15\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 3\") == \"4\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 7') == '10'\nassert solution('3 5 7') == '10'\nassert solution('2 4 10') == '16'\nassert solution('2 3 4') == '9'\nassert solution('2 3 2') == '0'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 5 7''') == '10'\nassert solution('''1 2 5''') == '3'\nassert solution('''20 30 30''') == '10'\nassert solution('''5 10 10''') == '2'\nassert solution('''1 1 1''') == '2'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 7') == '10'\n'''\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 10\n\"\"\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(10)\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 5') == '10'\nassert solution('1 2 3') == '5'\nassert solution('1 10 10') == '15'\nassert solution('0 0 0') == '0'\nassert solution('1 0 0') == '0'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7'\n    '500 600'\n    ) == 'OK'\nassert solution('2'\n    '500 600'\n    ) == 'OK'\nassert solution('10'\n    '500 600'\n    ) == 'OK'\nassert solution('20'\n    '500 600'\n    ) == 'OK'\nassert solution('50'\n    '500 600'\n    ) == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\\n\"\n\n\"\"\""
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"500 600\") == \"OK\"\nassert solution(\"7 500 600\") == \"OK\"\nassert solution(\"500 600\") == \"OK\"\nassert solution(\"100 300\") == \"OK\"\nassert solution(\"7 300\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n500 600\\n') == 'OK'\nassert solution('7\\n500 100\\n') == 'NG'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == 'OK'\nassert solution('500 600') == 'OK'\nassert solution('7 4') == 'NG'\nassert solution('12 2') == 'OK'\nassert solution('12 6') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == 'OK'\nassert solution('9') == 'OK'\nassert solution('8') == 'NG'\nassert solution('10') == 'OK'\nassert solution('4') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"OK\"\n\"\"\""
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Takahashi the Jumbo will practice golf.\\nHis objective is to get a carry distance that is a multiple of K, while he can only make a carry distance of between A and B (inclusive).\\nIf he can achieve the objective, print OK; if he cannot, print NG.\\n') == 'OK'\nassert solution('500 600\\n') == 'OK'\nassert solution('500 600\\n7 7\\n') == 'OK'\nassert solution('500 600\\n10 13\\n') == 'OK'\nassert solution('500 600\\n13 11\\n') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"OK\"\nassert solution(\"2\") == \"OK\"\nassert solution(\"7\") == \"OK\"\nassert solution(\"6\") == \"NG\"\nassert solution(\"5\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"500 600\") == \"OK\"\nassert solution(\"500600\") == \"OK\"\nassert solution(\"5006\") == \"NG\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3') == '2.6666666667'\n\n'''"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 3''') == '2.6666666667'\nassert solution('''6 3''') == '3.0'\nassert solution('''2 1''') == '1.0'\nassert solution('''2 3''') == '2.0'\nassert solution('''100 3''') == '33.3333333333'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\n\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 3''') == '2.6666666667'\nassert solution('''8 4''') == '4.0'\nassert solution('''9 2''') == '3.5'\nassert solution('''10 1000000''') == '11.5'\n'''"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3') == '2.6666666667'\n\"\"\"\n\nfrom sys import stdin,stdout\n\nT,X = map(int,stdin.readline().split())\nprint(float(T)/X)\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 3''') == '2.6666666667'\n\nprint(solution('''2 1''')) # 2.5\n'''\nprint(solution('''6 3''')) # 2.5\n'''\nprint(solution('''10 1''')) # 4.0\n'''\nprint(solution('''100 1''')) # 6.0\n'''\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''8 3''') == '2.6666666667'\n\nassert solution(\n'''10 9''') == '10.5'\n\nassert solution(\n'''25 10''') == '5.0'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 3\\n') == '2.6666666667'\nassert solution('2 5\\n') == '2.16'\nassert solution('2 5\\n') == '2.16'\nassert solution('10 10\\n') == '10.0'\nassert solution('1 5\\n') == '5.0'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\n\"\"\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == '2.6666666667'\nassert solution('8 3') == '2.6666666667'\nassert solution('8 0') == '0'\nassert solution('8 1') == '8'\nassert solution('8 0') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"2 3 4\") == \"1\"\nassert solution(\"8 5 7\") == \"2\"\nassert solution(\"1 4 5\") == \"0\"\nassert solution(\"12 7 8\") == \"3\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 3 4') == '2'\nassert solution('3 4 5') == '2'\nassert solution('10 10 10') == '0'\nassert solution('1 10 10') == '9'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 0 0') == '0'\nassert solution('2 1 1') == '1'\nassert solution('1 2 1') == '1'\nassert solution('1 1 2') == '2'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\nassert solution(\"5 3 4\") == \"2\"\nassert solution(\"5 3 4\") == \"2\"\nassert solution(\"5 1 1\") == \"0\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"20 30 40\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 2') == '1'\nassert solution('6 4 3') == '1'\nassert solution('4 2 1') == '0'\nassert solution('8 2 4') == '2'\nassert solution('8 6 4') == '2'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('5 4 2') == '5'\nassert solution('2 4 3') == '-1'\nassert solution('4 5 3') == '2'\nassert solution('3 1 4') == '3'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('3 4 2') == '1'\nassert solution('1 10 10') == '9'\nassert solution('1 10 3') == '2'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()[2]\n'''\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('1 3 2 3') == '2'\nassert solution('3 1 2 3') == '2'\nassert solution('1 3 2 3 4') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '2 - 1'\nassert solution('2 3 1') == '2 - 1'\nassert solution('1 2 3') == '2 - 1'\nassert solution('2 3 1') == '2 - 1'\nassert solution('1 3 2') == '3 - 2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2\\n') == '3'\nassert solution('3\\n1 3 2\\n3 1 2\\n') == '0'\nassert solution('3\\n1 3 2\\n3 1 2\\n3 1 2\\n') == '0'\nassert solution('3\\n3 1 2\\n3 1 2\\n') == '0'\nassert solution('3\\n3 1 2\\n3 1 2\\n3 1 2\\n') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''2\n1 3\n3 1''') == '3'\nassert solution('''4\n1 3 2 4\n3 1 2 4\n2 1 4 3\n4 3 1 2''') == '1'\nassert solution('''4\n4 1 2 3 4\n2 1 4 3 4\n1 3 4 2 1\n3 4 1 2 3''') == '3'\nassert solution('''5\n3 1 2 4 5\n2 1 4 5 3\n1 3 4 2 5\n4 5 3 1 2\n5 3 1 4 2''') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'\nassert solution('2\\n1 1\\n1 2\\n2 1\\n2 2\\n2 2\\n2 2') == '0'\nassert solution('1\\n1 1\\n1 1\\n1 1\\n1 1') == '0'\nassert solution('1\\n2\\n1') == '0'\nassert solution('3\\n1 2 3\\n3 1 2\\n2 1 3') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('4 3 2') == '5'\nassert solution('1 2 3') == '1'\nassert solution('1 3 2') == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('3 1 2') == '2'\nassert solution('3 1 2') == '2'\nassert solution('4 1 2 3') == '4'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'\nassert solution('2\\n1 3\\n1 3') == '0'\nassert solution('3\\n1 3 2\\n3 1 2') == '0'\nassert solution('3\\n1 3 2\\n3 1 2') == '0'\nassert solution('3\\n3 1 2\\n1 3 2') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"3\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"2 3 1\") == \"3\"\nassert solution(\"2 1 3\") == \"3\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('2\\n2\\n2') == '0'\nassert solution('3\\n3\\n3') == '0'\nassert solution('4\\n4\\n4') == '0'\nassert solution('5\\n5\\n5') == '0'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ATCODER\") == 3\nassert solution(\"ACGT\") == 0\nassert solution(\"\") == 0\nassert solution(\"A\") == 1\nassert solution(\"ACTGT\") == 2\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ACGT') == 3\nassert solution('ACGTACGT') == 3\nassert solution('ACGTACGTGT') == 5\nassert solution('ATCODER') == 3\nassert solution('AGTACGT') == 4\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"AGC\") == \"\"\nassert solution(\"ACGT\") == \"ACGT\"\nassert solution(\"AGT\") == \"AGT\"\nassert solution(\"ACGTAG\") == \"ACGT\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"CCAGTTCCG\") == \"AT\"\nassert solution(\"ATTCTATACAAATCTATACCCGGTCGCATAGCTAATTCGAAAGGACATGATGAAATGCACGCGTGCCTCCTGCCTGGGCTGAGGGCTATCCATTTTGCTGTCCTGCCTGTGCTCAGCATAGGAGGCTATACGGACACGGTGAACGAGCTTCTTGCCTACATGAGGCTACGTCCAGGGCGTGACGGTAAGCCTACGCATGAGCGCCTCATGTGAGCTCGGTATGAGGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGGCGTGAGAGAGCTATACGGTGAACGAGCTTCTTGCCTACGTGAGCTGAGGGCTATACGTAGGGTGAACGAGCTTCTTGCCTACATGAGGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAGGCTATACGTAGGGTGAGCGTCTAGCCTGAGGATTCGAGGCAGAGATAGGAG"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('A') == 1\nassert solution('ACGT') == 1\nassert solution('GTCAT') == 2\nassert solution('ATCODER') == 3\nassert solution('GTCAGT') == 4\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ACGT') == 3\nassert solution('AGTCTATAG') == 4\nassert solution('TCGTCGCAT') == 2\nassert solution('CTATTCGA') == 3\nassert solution('AGCTATCGT') == 4\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('CODE') == 'CODE'\nassert solution('A') == 'A'\nassert solution('ACGT') == 'ACGT'\nassert solution('ATT') == 'ATT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"AATCODER\") == \"ATC\"\nassert solution(\"AATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATC\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\nassert solution('AAAAAAAAAA') == ''\nassert solution('AAAAA') == 'A'\nassert solution('ATTAAAGGTT') == 'ATT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"A\") == \"A\"\nassert solution(\"A\") == \"A\"\nassert solution(\"GATCODER\") == \"ATC\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('123') == '2'\nassert solution('99999') == '100'\nassert solution('9') == '0'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('asdasd') == ''\nassert solution('2345') == '2'\nassert solution('12345') == '2'\nassert solution('1234') == '1'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == '9'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''11''') == '9'\n'''"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('10') == '6'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"123\") == \"\"\nassert solution(\"12345\") == \"\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('11') == '9'\nassert solution('23') == '10'\nassert solution('34') == '10'\nassert solution('45') == '11'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '9'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50''') == '10'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cupofcoffee') == 4\nassert solution('cupofhottea') == 4\nassert solution('cupofpeshottea') == 6\nassert solution('cupofpepsi') == 7\nassert solution('cipofcoffee') == 4\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[::-1]\n\"\"\"\nimport sys"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[1:] + stdin[0]\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('abcabc') == 'abcabc'\nassert solution('abcabcab') == 'abcabcabc'\nassert solution('abccba') == 'abccba'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abcd\", \"bcde\") == 2\nassert solution(\"abc\", \"cde\") == 1\nassert solution(\"abc\", \"bcde\") == 2\nassert solution(\"abc\", \"cde\") == 1\nassert solution(\"c\", \"c\") == 0\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cuppo', 'cupofhottea') == 4\nassert solution('cuppo', 'cupofcoffee') == 0\nassert solution('cupof', 'cuppoofhottea') == 4\nassert solution('cupof', 'cuppoofcoffee') == 3\nassert solution('cupof', 'cuppofcoffee') == 1\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('test') == 'testtest'\nassert solution('abbbc') == 'bababab'\nassert solution('aabbb') == 'aabbbaaa'\nassert solution('abc') == 'cba'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"caramel\") == \"caravel\"\nassert solution(\"apple\") == \"applle\"\nassert solution(\"abcdefg\") == \"abcdefgh\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofcoffee\") == \"cupofhottea\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n'''\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 7\n''') == '5 6 7 8 9'\nassert solution('''2 3\n''') == '1 2'\nassert solution('''5 3\n''') == '1 2'\nassert solution('''3 7\n''') == '5 6 7 8 9'\nassert solution('''10 9\n''') == '1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n\"\"\"\n\nn, k = [int(x) for x in stdin.split()]\nresult = []\nfor i in range(n, k, -1):\n    if (i - 1) % 3 == 0:\n        result.append(str(i - 1))\nfor j in range(k, n + 1, 3):\n    if (j - 1) % 3 == 0:\n        result.append(str(j - 1))\nprint(\" \".join(result))\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\""
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2 5') == '5'\nassert solution('5 3') == '5'\nassert solution('1 3') == '5'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('1 1') == '0'\nassert solution('5 5') == '0 1 2 3 4'\nassert solution('2 4') == '0 1 2 3'\nassert solution('3 4') == '0 1 2'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 7\") == \"5 6 7 8 9\"\nassert solution(\"2 7\") == \"5 6 7 8 9\"\nassert solution(\"1 3\") == \"0 1 2 3\"\nassert solution(\"3 5\") == \"0 1 2 4 5\"\nassert solution(\"6 5\") == \"0 1 2 3 5 6\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('25') == 'No'\nassert solution('20') == 'No'\nassert solution('30') == 'Yes'\nassert solution('32') == 'No'\nassert solution('0') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''25''') == 'No'\nassert solution('''-40''') == 'No'\nassert solution('''30''') == 'Yes'\nassert solution('''30''') == 'Yes'\nassert solution('''35''') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n\nassert solution(\n'''0'''\n) == 'No'\n\nassert solution(\n'''25'''\n) == 'No'\n\nassert solution(\n'''30'''\n) == 'Yes'\n\nassert solution(\n'''35'''\n) == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('25') == 'No'\nassert solution('-40') == 'Yes'\nassert solution('100') == 'No'\nassert solution('40') == 'Yes'\nassert solution('50') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\""
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"39\") == \"No\"\nassert solution(\"40\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"0\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"40\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"70\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"-12\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('25') == 'Yes'\nassert solution('-40') == 'No'\nassert solution('-30') == 'Yes'\nassert solution('50') == 'Yes'\nassert solution('40') == 'Yes'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 4') == '2'\nassert solution('1 2\\n5 5') == '1'\nassert solution('1 2\\n5 8') == '2'\nassert solution('1 2\\n5 8\\n1 2') == '2'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8\n5 1\n0 4\n-1 2\n1 3\n-2 0\n-3 3''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8\n3 1\n0 4\n-1 2\n1 3\n-2 0\n-3 3''') == '2'\nassert solution('''3 2\n1 2\n5 5\n-2 8\n3 1\n0 4\n-1 2\n1 3\n-2 0\n-3 3\n-1 -2\n-1 3''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8\n3 1\n0 4\n-1 2\n1 3\n-2 0\n-3 3\n-1 -2\n-1 3''') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n5 5\\n-2 8') == '1'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8') == '1'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8\\n1 1\\n5 5\\n-2 8') == '1\\n1'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8\\n-2 8') == '0\\n0'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8\\n-2 8\\n1 1\\n5 5\\n-2 8') == '0\\n0'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n5 5\\n-2 8\\n') == '1'\nassert solution('2 2\\n1 2\\n5 5\\n-2 8\\n') == '0'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8\\n') == '1'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8\\n') == '0'\nassert solution('3 2\\n1 2\\n5 5\\n-2 8\\n') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == \"1\"\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == \"1\"\nassert solution('''3 2\n1 2\n5 5\n1 2''') == \"1\"\nassert solution('''3 2\n1 2\n5 5\n1 1''') == \"0\"\nassert solution('''3 2\n1 2\n5 5\n1 -1''') == \"1\"\n'''\nprint(solution('''3 2\n1 2\n5 5\n-2 8'''))\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3 2\n1 2\n5 5\n-2 8'''\n) == '1'\n\nassert solution(\n'''3 3\n-1 -1\n1 1\n1 1'''\n) == '0'\n\nassert solution(\n'''2 4\n2 4\n5 6\n2 3'''\n) == '2'\n\nassert solution(\n'''8 1\n2 1\n3 2\n4 3\n5 3\n6 4\n7 4\n7 2'''\n) == '2'\n\nassert solution(\n'''5 1\n1 1\n5 5\n5 5\n5 -1'''\n) == '1'"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3') == '1'\nassert solution('5 5\\n-2 8') == '1'\nassert solution('3 2\\n1 2\\n5 5') == '1'\nassert solution('1 2\\n1 1') == '0'\nassert solution('10 10\\n1 1') == '9'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n5 5') == '1'\nassert solution('1 2\\n5 5\\n-2 8') == '1'\nassert solution('2 3\\n1 2\\n5 5') == '1'\nassert solution('1 2\\n5 5\\n2 1') == '1'\nassert solution('1 2\\n5 5\\n2 1\\n2 3') == '2'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3776') == 'Good'\nassert solution('5576') == 'Good'\nassert solution('3781') == 'Good'\nassert solution('3789') == 'Good'\nassert solution('3799') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('5777') == 'Good'\nassert solution('3776') == 'Bad'\nassert solution('5777') == 'Good'\nassert solution('3776') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Bad\"\nassert solution(input()) == \"Good\""
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split(' ')[0][0] == 'G'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3776) == \"Good\"\nassert solution(3777) == \"Good\"\nassert solution(3778) == \"Good\"\nassert solution(3779) == \"Good\"\nassert solution(3780) == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('3754') == 'Good'\nassert solution('3125') == 'Good'\nassert solution('6789') == 'Good'\nassert solution('9996') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12345678') == 'Good'\nassert solution('12345679') == 'Bad'\nassert solution('12345678') == 'Good'\nassert solution('12345679') == 'Bad'\nassert solution('123456789') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('3176') == 'Good'\nassert solution('3376') == 'Good'\nassert solution('3776') == 'Good'\nassert solution('2776') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Bad\"\nassert solution(input()) == \"Good\""
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Good'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('2\\n3 4\\n5 6') == '3.5'\nassert solution('5\\n2 3 4 5 6') == '6.5'\nassert solution('7\\n2 3 4 5 6 7') == '4.5'\nassert solution('9\\n2 3 4 5 6 7 8 9') == '7.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2\") == \"\"\nassert solution(\"3 2\") == \"\"\nassert solution(\"3 4\") == \"3.5\"\nassert solution(\"3 4\") == \"3.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3 4\\n') == 3.5\n\"\"\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == '3.5'\nassert solution('2 4') == '3.5'\nassert solution('1 2') == '1.5'\nassert solution('3') == '2'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 4') == '3.5'\nassert solution('2\\n3 4') == '3.5'\nassert solution('3\\n2 3 4') == '3.5'\nassert solution('1\\n2 3 4') == '3.5'\nassert solution('2\\n3 4\\n4 3 2') == '3.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn = int(stdin.readline())\n\ningredients = list(map(float, stdin.readline().split()))\n\nprevious = 0\ncurrent = ingredients[0]\nfor index in range(1, n):\n    new = ingredients[index]\n    previous = (previous + current) / 2\n    current = new\n\nprint(previous)\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"2\n3 4\n\"\"\"\n) == '3.5'\n\nassert solution(\n\"\"\"1\n2\n\"\"\"\n) == '1.5'\n\nassert solution(\n\"\"\"5\n45454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"3\\n4 4\") == \"2.5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3.5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3.5\"\nassert solution(\"5\\n5 5 5 5 5\") == \"5.0\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '14'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '14'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '14'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '14'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[29:-3]\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('2\\n5 5\\n3 3\\n3 3') == '30'\nassert solution('4\\n2 1 5 4\\n2 3 5\\n1 3 7') == '37'\nassert solution('4\\n2 1 1 1\\n2 3 1 1\\n1 3 1 1') == '40'\nassert solution('3\\n1 2 3\\n2 1 2\\n3 1 3') == '16'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\n\nassert solution('2\\n5 1 6\\n2 2 3') == '10'\nassert solution('2\\n5 1 6\\n2 2 3') == '10'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('1\\n100\\n100') == '100'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\n\nassert solution('''1\n1 2\n2 5 4\n3 6''') == '0'\n\nassert solution('''3\n3 1 2\n2 5 4\n3 6\n''') == '10'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"5\\n5 1 2 4 3\\n3 4 6 5\\n6 5 6 7 8 9\\n1 3 2 5\") == \"100\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nZABCDBABCQ''') == '2'\nassert solution('''7\nYUKYUBAKABYKUBAQQA\n''') == '1'\nassert solution('''20\nYUKYUBAKABYKUBAQQA\n''') == '0'\nassert solution('''20\nZYAUBSREYALKWCEWYKWUSIQH\n''') == '2'\nassert solution('''100\nABA\n''') == '1'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('Z') == ''\nassert solution('a') == ''\nassert solution('ab') == ''\nassert solution('abcd') == ''\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('ZABCDBABCQQ') == '2'\nassert solution('ZABCDBABCQQW') == '2'\nassert solution('ZABCDBABCQQWW') == '2'\nassert solution('ZABCDBABCQQWXY') == '2'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''20\n
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''3\nAB''') == '0'\nassert solution('''7\nABACADAEAF''') == '6'\nassert solution('''7\nABACADAEAFBB''') == '3'\nassert solution('''9\nABACADAEAFBBBC''') == '2'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ZABCDBABCQ') == 2\n\"\"\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'abc'\nassert solution('abcabc') == 'abc'\nassert solution('abcabcdefg') == 'abc'\nassert solution('abcabcdefgh') == 'abc'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10\\nZABCDBABCQ') == '2'"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''14\n
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\n'''"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('\\n'.join(('MASHIKE', 'RUMOI', 'OBIRA', 'HABORO', 'HOROKANAI'))) == '2'\nassert solution('\\n'.join(('MASHIKE', 'RUMOI', 'OBIRA', 'HABORO', 'HOROKANAI'))) == '2'\nassert solution('\\n'.join(('MASHIKE', 'RUMOI', 'OBIRA', 'HABORO', 'HOROKANAI'))) == '2'\nassert solution('\\n'.join(('MASHIKE', 'RUMOI', 'OBIRA', 'HABORO', 'HOROKANAI'))) == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\nassert solution('''\n10\nGABRIEL\nTOLUDO\nBRITTANIE\nLIZETTE\nOLLIE\nOSWIE\nANDREW\nMARVEL\nSHIRLEY\n''') == '7'\nassert solution('''\n3\nHARIS\nHIRS\nMADLI\n''') == '3'\nassert solution('''\n20\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n''') == '5'\nassert solution('''\n8\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\n''') == '5'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == '2'\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == '2'\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == '2'\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == '2'\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\nassert solution('''\n3\nMASHIKE\nRUMOI\nOBIRA\n''') == '1'\nassert solution('''\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '0'\nassert solution('''\n4\nMASHIKE\nRUMOI\nOBIRA\nHABORO\n''') == '2'\nassert solution('''\n5\nHABORO\nRUMOI\nOBIRA\nMASHIKE\nHOROKANAI\n''') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"3 5\") == \"Yes\"\nassert solution(\"1 0\") == \"Yes\"\nassert solution(\"4 1\") == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 0') == 'Yes'\n\"\"\"\nfrom sys import stdin\nstdin: str = stdin.readline()\nN, M = list(map(int, stdin.split(' ')))\nfor _ in range(M):\n    stdin: str = stdin.readline()\n    passed: bool = False\n    for i in range(N):\n        stdin: str = stdin.strip()\n        if passed:\n            break\n        if int(stdin) <= i:\n            passed = True\n            break\nprint('Yes' if passed else 'No')\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"0 1\") == \"Yes\"\nassert solution(\"1 0\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\"\n\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"1 0\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 5\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"7 3\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2 3\n'''\n) == 'Yes'\n\nassert solution(\n'''3 3\n'''\n) == 'No'\n\nassert solution(\n'''2 1\n'''\n) == 'Yes'\n\nassert solution(\n'''3 2\n'''\n) == 'No'\n\nassert solution(\n'''2 3\n'''\n) == 'Yes'"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('kipp') == 'No'\nassert solution('sipp') == 'No'\nassert solution('kk') == 'No'\nassert solution('sippuu') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('pprt') == 'No'\nassert solution('pppuuu') == 'Yes'\nassert solution('ppppp') == 'No'\nassert solution('sipp') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippt') == 'No'\nassert solution('sippu') == 'Yes'\nassert solution('sipp') == 'Yes'\nassert solution('sip') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippul') == 'No'\nassert solution('sippsipp') == 'Yes'\nassert solution('sipp') == 'No'\nassert solution('sipppsippsipppp') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('yyyy') == 'No'\nassert solution('aabccc') == 'Yes'\nassert solution('aaaaa') == 'No'\nassert solution('bbbbb') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sppii') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('sippu') == 'No'\nassert solution('sippu') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sippuu) == \"Yes\"\nassert solution(sipp) == \"No\"\nassert solution(cmz) == \"Yes\"\nassert solution(coucou) == \"No\"\nassert solution(couc) == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('Su') == 'No'\nassert solution('Suiippuu') == 'Yes'\nassert solution('Suiiippuu') == 'No'\nassert solution('sippuu') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sdft') == 'No'\nassert solution('sd') == 'Yes'\nassert solution('sdftdft') == 'Yes'\nassert solution('sdftddf') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('eee') == 'No'\nassert solution('aabbc') == 'No'\nassert solution('abbcdd') == 'No'\nassert solution('aabbcc') == 'Yes'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == input(\"\")\nassert solution(input(\"\\n\")) == input(\"\")\nassert solution(input(\"\\n\\n\")) == input(\"\")\nassert solution(input(\"\\n\\n\\n\")) == input(\"\")\nassert solution(input(\"\\n\\n\\n\\n\")) == input(\"\")\n\n'''"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == 'TLE'\nassert solution('4 50') == 'TLE'\nassert solution('2 40') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 1\nassert solution('1 2 3') == 2\nassert solution('1 2 3 4') == 2\nassert solution('1 2 3 4 5') == 3\nassert solution('1 2 3 4 5 6') == 3\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"5 10\") == \"TLE\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n7 60\\n1 80\\n4 50') == 4\nassert solution('3\\n70\\n60\\n1 80\\n4 50') == 70\nassert solution('3\\n70\\n60\\n1 80\\n4 50') == 70\nassert solution('5\\n50\\n30\\n15\\n10\\n5\\n0\\n10\\n5\\n5') == 5\nassert solution('2\\n1\\n1\\n1\\n1') == 1\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50''') == '4'\nassert solution('''10 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '8'\nassert solution('''10 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '8'\nassert solution('''10 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '8'\nassert solution('''10 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '8'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == '7'\nassert solution('4 50') == '4'\nassert solution('0 0') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 3\\n\") == 3\nassert solution(\"2 1\\n1 3\\n\") == 3\nassert solution(\"3 1\\n1 3\\n\") == 3\nassert solution(\"4 1\\n1 3\\n\") == 3\nassert solution(\"5 1\\n1 3\\n\") == 3\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10') == '1'\nassert solution('2 11') == '2'\nassert solution('3 9') == '3'\nassert solution('3 10') == 'TLE'\nassert solution('3 100') == 'TLE'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"10 4 17\") == \"32\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"10 10 10\") == \"30\"\nassert solution(\"1 1001\") == \"101\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[9:]\n\"\"\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 9') == '8'\nassert solution('4 2 9') == '8'\nassert solution('5 3 9') == '11'\nassert solution('5 5 9') == '10'\nassert solution('5 15 9') == '25'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"5 7 12\") == \"18\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 5\") == \"3\"\nassert solution(\"2 2 2\") == \"2\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('2 1 4') == '2'\nassert solution('5 5 5') == '0'\nassert solution('10 2 50') == '100'\nassert solution('1 100 1') == '1'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('1 2 3') == '1'\nassert solution('4 1 1') == '1'\nassert solution('10 1 50') == '100'\nassert solution('5 10 5') == '0'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"3 2 3\") == \"2\"\nassert solution(\"4 3 9\") == \"10\"\nassert solution(\"1 0 0\") == \"0\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 3 10') == '10'\nassert solution('3 3 4') == '5'\nassert solution('1 1 1') == '0'\nassert solution('100 200 1000') == '20000'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''acornistnt\npeanutbomb\nconstraint''') == '1'\nassert solution('''11\n12\n13\n14\n15\n16\n17\n18\n19\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n''') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(solution(input()))\n\"\"\"\n\nN = int(input())\n\nans = 0\n\nfor _ in range(N):\n    a = input()\n    for _ in range(N):\n        b = input()\n        if a == b:\n            ans += 1\n\nprint(ans)\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    3\n    acornistnt\n    peanutbomb\n    constraint\n    ''') == '1'\nassert solution('''\n    1\n    hb\n    ha\n    ''') == '2'\nassert solution('''\n    6\n    tortuga\n    apex\n    zxzxz\n    xzxzx\n    ''') == '6'\nassert solution('''\n    5\n    snowball\n    snow\n    snows\n    snow\n    ''') == '2'\nassert solution('''\n    7\n    xbrac\n    xbrac\n    xbrac\n    xbrac\n    xbrac\n    xbrac\n    xbrac\n    xbrac\n    ''') == '3'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n\n''') == '1'\nassert solution('''\n3\neecceeee\naacccea\ncccceccc\n\n''') == '6'\nassert solution('''\n10\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n\n''') == '25'\n'''\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''acornistnt\npeanutbomb\nconstraint''') == '1'\nassert solution('''a\nb\nc\nd\ne\nf\ng\nh\ni\nj''') == '10'\nassert solution('''a\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '120'\nassert solution('''abcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz''') == '240'\nprint('All test cases passed successfully.')\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''acornistnt\npeanutbomb\nconstraint''') == '1'\nassert solution('''abcedfhrl\nvbhxngvjzg\ndhnumjkvs\n''') == '3'\nassert solution('''mimvbsb\nrekkikcg\nbibwpnrs\n''') == '4'\nassert solution('''yczwhfkj\nwvybtdcbv\ntjybwcqzv\n''') == '2'\nassert solution('''vzbcsxswf\njxsbuoohd\neibkzvsyw\n''') == '3'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\nassert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\nassert solution('''\n10\nacornistnt\npeanutbomb\nconstraint\n''') == '0'\nassert solution('''\n1\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\nassert solution('''\n10\nacornistnt\npeanutbomb\nconstraint\n''') == '0'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('acornistnt') == '1'\nassert solution('peanutbomb') == '1'\nassert solution('constraint') == '1'\nassert solution('acornistnt') == '1'\nassert solution('peanutbomb') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"acornistnt\\npeanutbomb\\nconstraint\") == \"1\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\\n3\\n20\\n38\\n56\"\nassert solution(\"4\") == \"2132\\n506\\n999999999\\n1000000000\"\n\n\n\"\"\""
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1\n1\n1\n1\n1\n\"\"\") == \"112\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n1\n1\n\"\"\"\n) == \"123\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n1\n1\n\"\"\"\n) == \"456\"\n\nassert solution(\n\"\"\"\n1\n2\n1\n2\n1\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n1\n3\n1\n2\n1\n\"\"\"\n) == \"5\""
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"23\"\nassert solution(\"1 2 3 4\") == \"34\"\nassert solution(\"1 1 2 2 3 3\") == \"12\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"\nassert solution(\"123 456\") == \"45\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == '1'\nassert solution('''4\n2132\n506\n999999999\n1000000000\n''') == '8'\n'''\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"62\"\n\"\"\""
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('123') == '2'\nassert solution('112123123412345') == '5'\nassert solution
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('112123123412345$\\dots$') == '1'\nassert solution('11212312341234512345612345671234567812345678912345678910') == '5'\nassert solution('1213141516171819') == '7'\nassert solution('12131415161718191213141516171819') == '7'\nassert solution('121314151617181912131415161718191213141516171819') == '7'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import Iterator"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('112123123412345$\\dots$') == '112123'\nassert solution('112123123412345$\\dots$1234512345$\\dots$') == '112123'\nassert solution('1234512345$\\dots$112123123412345$\\dots$') == '112123'\nassert solution('123412345$\\dots$112123123412345$\\dots$1234512345$\\dots$') == '112123'\nassert solution('1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$112123123412345$\\dots$1234512345$\\dots$11212312"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1 2 1 1'\nassert solution('2 2') == '1 1'\nassert solution('10 3') == '1 1 1'\nassert solution('10 10') == '1 1 1 1 1 1 1 1 1'\nassert solution('10 10') == '1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\nassert solution('''100 2\n101 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 10\n3 11\n4 12\n4 13\n4 14\n5 15\n5 16\n5 17\n6 18\n6 19\n6 20\n7 21\n7 22\n7 23\n8 24\n8 25\n8 26\n9 27\n9 28\n9 29\n10 30\n10 31\n10 32\n10 33\n10 34\n10 35\n10 36\n10 37\n10 38\n10 39\n10 40\n10 41\n10 42\n10 43\n10 44\n10 45\n10 46\n10 47\n10 48\n10 49\n10 50\n10 51\n10 52\n10 53\n10 54\n10 55\n10 56\n10 57\n10 58\n10 59\n10 60\n10 61\n10 62\n10 63\n10 64\n10 65\n10 66\n10 67\n10 68\n10 69\n10 70\n10 71\n10 72\n10 73\n10 74\n10 75\n10 76\n10 77\n10 78\n10 79\n10 80\n10 81\n10 82\n10 83\n10 84\n10 85\n10 86\n10 87\n10 88\n10 89\n10 90\n10 91\n10 92\n10 93\n10 94\n10 95\n10 96\n10 97\n10 98\n10 99\n10 100\n11 101\n11 102\n11 103\n11 104\n11 105\n11 106\n11 107\n11 108\n11 109\n11 110\n11 111\n11 112\n11 113\n11 114\n11 115\n11 116\n11 117\n11 118\n11 119\n11 120\n11 121\n11 122\n11 123\n11 124\n11 125\n11 126\n11 127\n11 128\n11 129\n11 130\n11 131\n11 132\n11 133\n11 134\n11 135\n11 136\n11 137\n11 138\n11 139\n11 140\n11 141\n11 142\n11 143\n11 144\n11 145\n11 146\n11 147\n11 148\n11 149\n11 150\n11 151\n11 152\n11 153\n11 154\n11 155\n11 156\n11 157\n11 158\n11 159\n11 160\n11 161\n11 162\n11 163\n11 164\n11 165\n11 166\n11 167\n11 168\n11 169\n11 170\n11 171\n11 172\n11 173\n11 174\n11 175\n11 176\n11 177\n11 178\n11 179\n11 180\n11 181\n11 182\n11 183\n11 184\n11 185\n11 186\n11 187\n11 188\n11 189\n11 190\n11 191\n11 192\n11 193\n11 194\n11 195\n11 196\n11 197\n11 198\n11 199\n11 200\n11 201\n11 202\n11 203\n11 204\n11 205\n11 206\n11 207\n11 208\n11 209\n11 210\n11 211\n11 212\n11 213\n11 214\n11 215\n11 216\n11 217\n11 218\n11 219\n11 220\n11 221\n11 222\n11 223\n11 224\n11 225\n11 226\n11 227\n11 228\n11 229\n11 230\n11 231\n11 232\n11 233\n11 234\n11 235\n11 236\n11 237\n11 238\n11 239\n11 240\n11 241\n11 242\n11 243\n11 244\n11 245\n11 246\n11 247\n11 248\n11 249\n11 250\n11 251\n11 252\n11 253\n11 254\n11 255\n11 256\n11 257\n11 258\n11 259\n11 260\n11 261\n11 262\n11 263\n11 264\n11 265\n11 266\n11 267\n11 268\n11 269\n11 270\n11 271\n11 272\n11 273\n11 274\n11 275\n11 276\n11 277\n11 278\n11 279\n11 280\n11 281\n11 282\n11 283\n11 284\n11 285\n11 286\n11 287\n11 288\n11 289\n11 290\n11 291\n11 292\n11 293\n11 294\n11 295\n11 296\n11 297\n11 298\n11 299\n11 300\n11 301\n11 302\n11 303\n11 304\n11 305\n11 306\n11 307\n11 308\n11 309\n11 310\n11 311\n11 312\n11 313\n11 314\n11 315\n11 316\n11 317\n11 318\n11 319\n11 320\n11 321\n11 322\n11 323\n11 324\n11 325\n11 326\n11 327\n11 328\n11 329\n11 330\n11 331\n11 332\n11 333\n11 334\n11 335\n11 336\n11 337\n11 338\n11 339\n11 340\n11 341\n11 342\n11 343\n11 344\n11 345\n11 346\n11 347\n11 348\n11 349\n11 350\n11 351\n11 352\n11 353\n11 354\n11 355\n11 356\n11 357\n11 358\n11 359\n11 360\n11 361\n11 362\n11 363\n11 364\n11 365\n11 366\n11 367\n11 368\n11 369\n11 370\n11 371\n11 372\n11 373\n11 374\n11 375\n11 376\n11 377\n11 378\n11 379\n11 380\n11 381\n11 382\n11 383\n11 384\n11 385\n11 386\n11 387\n11 388\n11 389\n11 390\n11 391\n11 392\n11 393\n11 39"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 1 1 1 2'\nassert solution('10 2') == '1 1 1 2 2 1 1 1 1 1 1 1'\nassert solution('10 3') == '1 1 1 2 2 2 1 1 1 1 1 1 1'\nassert solution('10 4') == '1 1 1 2 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1 1 1 1 2 1 2 1 3 1 1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('1 1 2 1 1 2') == '1 2 1 2 1 1'\nassert solution('1 1 2 3 3 3 3') == '2'\nassert solution('1 1 2 1 1 2') == '1'\nassert solution('1 1 2 1 1 2 1 2') == '1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n2 3') == '1'\nassert solution('6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2') == '2'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '1'\nassert solution('10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '2'"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\") == \"2\\n1 2 1 1 2\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"1\\n1 1 1 1 1 1 1 1 1\"\nassert solution(\"3 2\\n1 4\\n1 2\\n\") == \"1\\n1 1 1\"\nassert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\") == \"2\\n1 2 1 1 2\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\nassert solution('''100 100\n1 10\n2 50\n3 20\n4 100\n5 50\n6 70\n7 40\n8 80\n9 40\n10 10\n''') == '2'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6 2\"\"\") == \"\"\"2\"\"\"\nassert solution(\"\"\"4 2\"\"\") == \"\"\"1 2 1 1 2\"\"\"\nassert solution(\"\"\"10 2\"\"\") == \"\"\"1 1 1 1 1 1 1 1 1 1\"\"\"\nassert solution(\"\"\"10 3\"\"\") == \"\"\"1 1 1 1 1 1 1 1 1 1\"\"\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\nassert solution('''10 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\nassert solution('''2 2\n1 1\n1 2\n2 1\n''') == '2'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2 4\"\nassert solution(\"7\") == \"3 6\"\nassert solution(\"9\") == \"3 8\"\nassert solution(\"4\") == \"2 4\"\nassert solution(\"1\") == \"1 1\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4''') == '2 4'\nassert solution('''9''') == '3 8'\nassert solution('''7''') == '3 6'\nassert solution('''1''') == '1 1'\nassert solution('''2''') == '2 2'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\nassert solution('7\\n1 1 8 8 8 4 4 4 4\\n') == '3 6'\nassert solution('7\\n1 1 8 8 8 4 4 4 4\\n') == '3 6'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom collections import defaultdict\nfrom typing import List\n\nOPENING_INDENT = \".\"\nCLOSING_INDENT = \"*\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4\\n'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8\\n'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6\\n'\n\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom typing import List\n\nn = int(stdin.readline().strip())\nhouses = list(map(int, stdin.readline().strip().split()))"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('10\\n5 1 5 5 1 5 5 1 5 5 5') == '2 6'\nassert solution('10\\n5 1 1 5 5 1 5 5 1 5 5 5') == '2 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 1 2 4'\n\nassert solution('''2\n3 1\n1 2\n''') == '3 1 2'\n\nassert solution('''9\n2 4\n1 3\n4 5\n6 7\n1 3\n4 5\n2 6\n3 7\n1 4\n5 6\n7 8\n3 4\n5 6\n2 7\n8 9\n3 4\n5 6\n1 7\n2 8\n''') == '4 5 2 3 1 6 7 8 9 5 4'\nassert solution('''10\n2 4\n1 3\n4 5\n6 7\n1 3\n4 5\n2 6\n3 7\n1 4\n5 6\n2 7\n3 8\n1 5\n4 6\n5 7\n2 8\n3 9\n6 7\n5 4\n3 2\n8 1\n7 9\n6 5\n5 4\n4 3\n3 1\n2 2\n2 3\n2 1\n''') == '3 1 2 4 5'\nassert solution('''10\n3 5\n1 4\n2 4\n1 5\n2 3\n3 4\n4 5\n2 6\n2 7\n1 8\n2 9\n1 9\n3 8\n1 2\n2 3\n3 4\n4 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 4\n2 3\n3 4\n3 3\n4 4\n2 5\n3 1\n4 1\n2 6\n1 7\n1 8\n3 9\n1 9\n3 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 4\n2 3\n3 4\n3 3\n4 4\n2 5\n3 1\n4 1\n2 6\n1 7\n1 8\n3 9\n1 9\n3 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4\n3 2\n2 1\n2 4\n3 3\n3 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 2\n2 1\n2 3\n2 4\n3 4"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3\\n1 2\\n1 2\\n1 2') == '1 2 3'\nassert solution('5\\n3\\n1 4\\n2 4\\n1 5\\n2 3') == '1 2 3 4 5'\nassert solution('3\\n3\\n1 2\\n1 2\\n1 2') == '1 2 3'\nassert solution('6\\n1 4\\n2 4\\n1 5\\n2 3\\n1 5') == '1 2 3 4 5'\nassert solution('6\\n1 2\\n1 2\\n1 2\\n1 2') == '1 2 3'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/test_1.txt') == '1 2 3 4 5'\nassert solution('inputs/test_2.txt') == '1 2 3 4 5'\nassert solution('inputs/test_3.txt') == '1 2 4 3 5'\nassert solution('inputs/test_4.txt') == '1 2 3 4 5'\nassert solution('inputs/test_5.txt') == '1 2 3 4 5'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '3 2 4 1 5'\nassert solution('''3''') == '3 1 2'\nassert solution('''10''') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('''100''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'\nassert solution('''1000''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''10\n1 2\n1 3\n2 1\n2 3\n3 1\n3 2\n4 1\n4 2\n5 1\n5 2\n6 1\n6 2\n7 1\n7 2\n8 1\n8 2\n9 1\n9 2\n''') == '1 3 2 4 6 8 9 5 7'\nprint('All tests past!')\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 1 4 5'\nassert solution('''6\n6 1\n1 5\n3 1\n5 6\n1 3\n2 4\n3 1\n4 2\n3 4\n1 2\n''') == '3 1 5 4 2'\nassert solution('''2\n1 1\n''') == '1'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''\n3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n''') == '1 2 3 4 5 6 7 8 9 10 11'\nassert solution('''\n5\n7\n3 8\n1 2\n9 6\n4 10\n5 9\n6 4\n''') == '3 8 1 2 9 6 4'\nassert solution('''\n4\n4\n2 3\n1 1\n3 2\n''') == '2 3 1 1'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n3 5\n1 4\n2 4\n1 5\n2 3\"\"\") == \"\"\"3 2 4 1 5\"\"\"\nassert solution(\"\"\"3\n2 3\n3 1\n1 2\n\"\"\") == \"\"\"3 1 2\"\"\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"\"\"\"\"\""
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '5'\nassert solution('10') == '10'\nassert solution('16') == '10'\nassert solution('17') == '11'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"6\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"1\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"\nassert solution(\"2\\n1 100 2\\n100 200 1002\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '4'\n\n\"\"\""
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 10 17 12 15\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\nassert solution('6\\n1 1000 1000 1000 1000 1000\\n') == '1'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '1'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10 17 12 15 2') == '3'\nassert solution('6') == '1'\nassert solution('10') == '1'\nassert solution('1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '10'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"15 5 3 2\") == \"-1\"\nassert solution(\"15 5 4 3\") == \"5\"\nassert solution(\"15 5 2 1\") == \"2\"\nassert solution(\"15 5 5 1\") == \"0\"\nassert solution(\"16 7 5 2\") == \"1\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_text) == output_text\n'''\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n15 5 5 1\n15 5 5 1\n14 9 5 2\n14 9 5 2\n14 9 5 2\n14 9 5 2\n15 5 5 1\n15 5 5 1\n16 9 5 2\n16 9 5 2\n16 9 5 2\n16 9 5 2\n17 9 5 2\n17 9 5 2\n17 9 5 2\n17 9 5 2\n18 9 5 2\n18 9 5 2\n18 9 5 2\n18 9 5 2\n19 9 5 2\n19 9 5 2\n19 9 5 2\n19 9 5 2\n20 9 5 2\n20 9 5 2\n20 9 5 2\n''') == '-1'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n15 5 5 1\n15 5 5 1\n14 9 5 2\n14 9 5 2\n14 9 5 2\n14 9 5 2\n15 5 5 1\n15 5 5 1\n16 9 5 2\n16 9 5 2\n16 9 5 2\n16 9 5 2\n17 9 5 2\n17 9 5 2\n17 9 5 2\n17 9 5 2\n18 9 5 2\n18 9 5 2\n18 9 5 2\n18 9 5 2\n19 9 5 2\n19 9 5 2\n19 9 5 2\n19 9 5 2\n20 9 5 2\n20 9 5 2\n20 9 5 2\n''') == '5'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n15 5 5 1\n15 5 5 1\n14 9 5 2\n14 9 5 2\n14 9 5 2\n14 9 5 2\n15 5 5 1\n15 5 5 1\n16 9 5 2\n16 9 5 2\n16 9 5 2\n16 9 5 2\n17 9 5 2\n17 9 5 2\n17 9 5 2\n17 9 5 2\n18 9 5 2\n18 9 5 2\n18 9 5 2\n18 9 5 2\n19 9 5 2\n19 9 5 2\n19 9 5 2\n19 9 5 2\n20 9 5 2\n20 9 5 2\n20 9 5 2\n''') == '0'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n15 5 5 1\n15 5 5 1\n14 9 5 2\n14 9 5 2\n14 9 5 2\n14 9 5 2\n15 5 5 1\n15 5 5 1\n16 9 5 2\n16 9 5 2\n16 9 5 2\n16 9 5 2\n17 9 5 2\n17 9 5 2\n17 9 5 2\n17 9 5 2\n18 9 5 2\n18 9 5 2\n18 9 5 2\n18 9 5 2\n19 9 5 2\n19 9 5 2\n19 9 5 2\n19 9 5 2\n20 9 5 2\n20 9 5 2\n20 9 5 2\n''') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''10 7 5 3\n10 7 4 3\n10 7 3 1\n10 7 5 1\n12 7 5 2\n15 7 5 3\n18 7 5 4\n19 7 5 5\n20 7 6 1\n23 7 7 2\n26 7 8 3\n29 7 9 4\n32 7 10 5\n35 7 11 6\n39 7 12 7\n42 7 13 8\n45 7 14 9\n48 7 15 10\n51 7 16 11\n54 7 17 12\n57 7 18 13\n60 7 19 14\n63 7 20 15\n66 7 21 16\n69 7 22 17\n72 7 23 18\n75 7 24 19\n78 7 25 20\n81 7 26 21\n84 7 27 22\n87 7 28 23\n90 7 29 24\n93 7 30 25\n96 7 31 26\n99 7 32 27\n102 7 33 28\n105 7 34 29\n108 7 35 30\n111 7 36 31\n114 7 37 32\n117 7 38 33\n120 7 39 34\n123 7 40 35\n126 7 41 36\n129 7 42 37\n132 7 43 38\n135 7 44 39\n138 7 45 40\n141 7 46 41\n144 7 47 42\n147 7 48 43\n150 7 49 44\n153 7 50 45\n156 7 51 46\n159 7 52 47\n162 7 53 48\n165 7 54 49\n168 7 55 50\n171 7 56 51\n174 7 57 52\n177 7 58 53\n180 7 59 54\n183 7 60 55\n186 7 61 56\n189 7 62 57\n192 7 63 58\n195 7 64 59\n198 7 65 60\n201 7 66 61\n204 7 67 62\n207 7 68 63\n210 7 69 64\n213 7 70 65\n216 7 71 66\n219 7 72 67\n222 7 73 68\n225 7 74 69\n228 7 75 70\n231 7 76 71\n234 7 77 72\n237 7 78 73\n240 7 79 74\n243 7 80 75\n246 7 81 76\n249 7 82 77\n252 7 83 78\n255 7 84 79\n258 7 85 80\n261 7 86 81\n264 7 87 82\n267 7 88 83\n270 7 89 84\n273 7 90 85\n276 7 91 86\n279 7 92 87\n282 7 93 88\n285 7 94 89\n288 7 95 90\n291 7 96 91\n294 7 97 92\n297 7 98 93\n300 7 99 94\n303 7 100 95\n306 7 101 96\n309 7 102 97\n312 7 103 98\n315 7 104 99\n318 7 105 100\n321 7 106 101\n324 7 107 102\n327 7 108 103\n330 7 109 104\n333 7 110 105\n336 7 111 106\n339 7 112 107\n342 7 113 108\n345 7 114 109\n348 7 115 110\n351 7 116 111\n354 7 117 112\n357 7 118 113\n360 7 119 114\n363 7 120 115\n366 7 121 116\n369 7 122 117\n372 7 123 118\n375 7 124 119\n378 7 125 120\n381 7 126 121\n384 7 127 122\n387 7 128 123\n390 7 129 124\n393 7 130 125\n396 7 131 126\n399 7 132 127\n402 7 133 128\n405 7 134 129\n408 7 135 130\n411 7 136 131\n414 7 137 132\n417 7 138 133\n420 7 139 134\n423 7 140 135\n426 7 141 136\n429 7 142 137\n432 7 143 138\n435 7 144 139\n438 7 145 140\n441 7 146 141\n444 7 147 142\n447 7 148 143\n450 7 149 144\n453 7 150 145\n456 7 151 146\n459 7 152 147\n462 7 153 148\n465 7 154 149\n468 7 155 150\n471 7 156 151\n474 7 157 152\n477 7 158 153\n480 7 159 154\n483 7 160 155\n486 7 161 156\n489 7 162 157\n492 7 163 158\n495 7 164 159\n498 7 165 160\n501 7 166 161\n504 7 167 162\n507 7 168 163\n510 7 169 164\n513 7 170 165\n516 7 171 166\n519 7 172 167\n522 7 173 168\n525 7 174 169\n528 7 175 170\n531 7 176 171\n534 7 177 172\n537 7 178 173\n540 7 179 174\n543 7 180 175\n546 7 181 176\n549 7 182 177\n552 7 183 178\n555 7 184 179\n558 7 185 180\n561 7 186 181\n564 7 187 182\n567 7 188 183\n570 7 189 184\n573 7 190 185\n576 7 191 186\n579 7 192 187\n582 7 193 188\n585 7 194 189\n588 7 195 190\n591 7 196 191\n594 7 197 192\n597 7 198 193\n600 7 199 194\n603 7 200 195\n606 7 201 196\n609 7 202 197\n612 7 203 198\n615 7 204 199\n618 7 205 200\n621 7 206 201\n624 7 207 202\n627 7 208 203\n630 7 209 204\n633 7 210 205\n636 7 211 206\n639 7 212 207\n642 7 213 208\n645 7 214 209\n648 7 215 210\n651 7 216 211\n654 7 217 212\n657 7 218 213\n660 7 219 214\n663 7 220 215\n666 7 221 216\n669 7 222 217\n672 7 223 218\n675 7 224 219\n678 7 225 220\n681 7 226 221\n684 7 227 222\n687 7 228 223\n690 7 229 224\n693 7 230 225\n696 7 231 226\n699 7 232 227\n702 7 233 228\n705 7 234 229\n708 7 235 230\n711 7 236 231\n714 7 237 232\n717 7 238 233\n720 7 239 234\n723 7 240 235\n726 7 241 236\n729 7 242 237\n732 7 243 238\n735 7 244 239\n738 7 245 240\n741 7 246 241\n744 7 247 242\n747 7 248 243\n750 7 249 244\n753 7 250 245\n756 7 251 246\n759 7 252 247\n762 7 253 248"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8') == '-1'\nassert solution('9') == '5'\nassert solution('1') == '0'\nassert solution('10') == '2'\nassert solution('100') == '0'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('10') == '-1'\nassert solution('100') == '1'\nassert solution('1000') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"15 5 3 2\") == \"4\"\nassert solution(\"15 5 4 3\") == \"-1\"\nassert solution(\"15 5 2 1\") == \"5\"\nassert solution(\"15 5 5 1\") == \"0\"\nassert solution(\"16 7 5 2\") == \"1\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''15 5 3 2''') == '4'\nassert solution('''15 5 4 3''') == '-1'\nassert solution('''15 5 2 1''') == '5'\nassert solution('''15 5 5 1''') == '0'\nassert solution('''16 7 5 2''') == '1'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == 0\nassert solution(\"ac?b?c\") == 24\nassert solution(\"????????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"????????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a?c?b?c\") == \"46\"\nassert solution(\"a??c??b??c\") == \"46\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6\nac?b?c\n''') == '24'\n\nassert solution('''\n7\n???????\n''') == '2835'\n\nassert solution('''\n9\ncccbbbaaa\n''') == '0'\n\nassert solution('''\n5\na???c\n''') == '46'\n\nassert solution('''\n7\nac?b?c?d\n''') == '2835'"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ac?b?c') == '24'\nassert solution('???????') == '2835'\nassert solution('cccbbbaaa') == '0'\nassert solution('a???c') == '46'\nassert solution('z') == '0'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\n'''\n\nimport sys\ninput = sys.stdin.readline"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"????????\") == \"2835\"\nassert solution(\"a???c\") == \"46\"\nassert solution(\"???cccbbbaaa\") == \"0\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46\nassert solution(\"????????\") == 2835\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ac?b?c') == 24\nassert solution('???????') == 2835\nassert solution('cccbbbaaa') == 0\nassert solution('a???c') == 46\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"ac?b?c?\") == 24\nassert solution(\"ac?b?c\") == 24\nassert solution(\"ac?b?c\") == 24\nassert solution(\"ac?b?c\") == 24\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\nassert solution('5 4') == '18'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"4 0\") == \"16\"\nassert solution(\"5 4\") == \"18\"\nassert solution(\"4 0\") == \"16\"\nassert solution(\"5 4\") == \"18\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 3 3 7\\n2 3 5\\n2 1 1\\n') == '5'\nassert solution('1 1\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n') == '16'\nassert solution('2 0\\n1 3 3 7\\n2 3 5\\n2 1 1\\n') == '18'\nassert solution('3 0\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n') == '18'\nassert solution('3 0\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n') == '18'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 2''') == '5'\n\nassert solution(\n'''4 0''') == '16'\n\nassert solution(\n'''5 4''') == '18'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2''') == '5'\nassert solution('''4 0''') == '16'\nassert solution('''5 4''') == '18'\n'''\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2\\n1\\n3') == '2'\nassert solution('1\\n3\\n4\\n5\\n1') == '4'\n\n\n\n\n-----"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n7\\n2\\n2\\n2\\n1\\n3\\n3\\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n    6 4\n    1 3 3 7\n    2 3 5\n    2 1 1\n    ''') == '5'\n\nassert solution('''\n    5 4\n    1 2 3 4 5\n    1 2 8\n    1 3 10\n    1 4 7\n    1 5 15\n    ''') == '18'\n\nassert solution('''\n    3 5\n    1 2 3 4 5\n    1 2 8\n    1 3 10\n    1 4 7\n    1 5 15\n    ''') == '18'\n\nassert solution('''\n    4 0\n    1 3 3 7\n    2 3 5\n    2 1 1\n    ''') == '16'\n\nassert solution('''\n    2 1\n    1 3 3\n    2 1 1\n    ''') == '16'"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0\\n3\\n3\\n5\\n7\\n7\\n10\\n11\\n15\\n1') == '5'\nassert solution('3\\n1\\n3\\n3\\n5\\n7\\n7\\n10\\n11\\n15\\n1') == '16'\nassert solution('4\\n1\\n3\\n3\\n5\\n7\\n7\\n10\\n11\\n15\\n1') == '18'\nassert solution('5\\n1\\n3\\n3\\n5\\n7\\n7\\n10\\n11\\n15\\n1') == '18'\nassert solution('6\\n1\\n2\\n3\\n4\\n5\\n7\\n7\\n10\\n11\\n15\\n1') == '18'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '5'\nassert solution('2\\n2\\n1') == '6'\nassert solution('1\\n3\\n4') == '7'\nassert solution('1\\n4') == '6'\nassert solution('2\\n1') == '6'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\n\n\n-----Answer-----"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('2 1 2') == '4'\nassert solution('0 1 0') == '-1'\nassert solution('1 10') == '-1'\nassert solution('10 9') == '45'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 7 4') == '14'\nassert solution('3 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('0 9 0') == '45'\nassert solution('0 0 0') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n0 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n0 10\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n0 10\\n3 4\") == \"45\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 2 4\") == \"-1\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"-1\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\n'''"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 1 1\n0 9\n0 5\n''') == '45'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 2 4''') == '14'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 2 2''') == '-1'\nassert solution('''1 2 1''') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 2 4\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"1 1\") == \"45\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''10 1 1\n0 9\n0 5\n''') == '45'\nassert solution(\n'''10 1 1\n0 9\n1 5\n''') == '-1'\nassert solution(\n'''10 1 1\n0 9\n1 5\n''') == '45'\nassert solution(\n'''10 1 1\n0 9\n1 5\n''') == '-1'\nassert solution(\n'''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\n\nprint(solution(input()))"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('3 3 3') == 'No'\nassert solution('5 5 5') == 'Yes'\nassert solution('3 2 1') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 2 1\") == \"No\"\nassert solution(\"5 7 7\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"7 7 7\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == 'No'\nassert solution('1 2 1') == 'Yes'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('5 7 5') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'Yes'\nassert solution('2 2 2') == 'Yes'\nassert solution('4 4 4') == 'No'\nassert solution('5 7 1') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 7 5\\n') == 'Yes'\nassert solution('5 7 1\\n') == 'No'\nassert solution('4 1 2\\n') == 'Yes'\nassert solution('4 2 1\\n') == 'Yes'\nassert solution('4 2 3\\n') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 1') == 'Yes'\nassert solution('7 7 7') == 'No'\nassert solution('9 7 9') == 'No'\nassert solution('5 8 3') == 'No'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\\\n2\n12 5\n1000 2000\n''') == '1'\n'''"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n5 3\\n1 0 2 3 4\\n0 0 2 3 3\\n2 2 3 4 4') == '1'\nassert solution('3\\n5 3\\n1 0 2 3 4\\n0 0 2 3 3\\n2 2 3 4 4') == '2'\nassert solution('3\\n5 3\\n1 0 2 3 4\\n0 0 2 3 3\\n2 2 3 4 4') == '1'\nassert solution('3\\n5 3\\n1 0 2 3 4\\n0 0 2 3 3\\n2 2 3 4 4') == '1'\nassert solution('3\\n5 3\\n1 0 2 3 4\\n0 0 2 3 3\\n2 2 3 4 4') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''1\n17 4\n2 3''') == '0'\nassert solution('''1\n7 2\n1 3''') == '0'\nassert solution('''2\n5 1\n2 2''') == '0'\nassert solution('''1\n20 2\n1 2''') == '0'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"5\\n12 5\\n1000 2000\\n500 50\\n6000 6000\") == \"3\"\nassert solution(\"5\\n12 5\\n1000 2000\\n500 50\\n6000 6000\\n1000000 1\") == \"3\"\nassert solution(\"5\\n12 5\\n1000 2000\\n500 50\\n6000 6000\\n1000000 1\\n0\") == \"1\"\nassert solution(\"5\\n12 5\\n1000 2000\\n500 50\\n6000 6000\\n1000000 1\\n1000000 2\") == \"3\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n12 5\n1000 2000\n3\n10 1000\n10 2000\n10 3000''') == '2'\n'''\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''1\n12 5\n1000 2000''') == '0'\nassert solution('''1\n12 5\n2000 2000''') == '0'\nassert solution('''2\n12 5\n1000 2000''') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == \"1\"\nassert solution('2\\n12 5\\n1000 2000') == \"1\"\n\n'''\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n12 5\n1000 2000\n''') == '1'\nassert solution('''2\n12 5\n1000 2000\n''') == '1'\nassert solution('''2\n5 1\n10 30\n''') == '0'\nassert solution('''2\n2 1\n10 30\n''') == '1'\nassert solution('''3\n12 5\n1000 2000\n3000 3005\n''') == '2'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\\n\") == \"1\\n\"\nassert solution(\"3\\n12 5\\n1000 2000\\n1000 2000\\n1000 2000\\n\") == \"2\\n\"\nprint(\"Passed. \")\n\n\"\"\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 3') == '2'\nassert solution('2 4') == '1'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('1 1') == '1'\nassert solution('3 5') == '3'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('2 0') == '0'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 4') == '2'\nassert solution('4 10') == '2'\nassert solution('15 29') == '10'\nassert solution('12 40') == '8'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('3 4') == '4'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 4') == '1'\nassert solution('2 1') == '1'\nassert solution('3 3') == '1'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 2') == '2'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 4') == '2'\nassert solution('2 4') == '0'\nassert solution('3 2') == '1'\nassert solution('3 6') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == 1\nassert solution('2 1') == 1\nassert solution('3 2') == 2\nassert solution('4 4') == 1\nassert solution('5 4') == 4\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('AC') == 'AC'\nassert solution('ACACTACG') == '2'\nassert solution('ACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTACGACTAC"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACG\\n2 3\") == \"0\"\nassert solution(\"ACACTACG\\n3 7\") == \"3\"\nassert solution(\"ACACTACG\\n1 8\") == \"3\"\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACG\") == \"0\"\nassert solution(\"ACACTACGT\") == \"3\"\n'''"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '''2\n0\n3\n'''\n\nassert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '''2\n0\n3\n'''\n\nassert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '''2\n0\n3\n'''\n\nassert solution('''\nACACTACG\n3 7\n3 7\n3 7\n1 8\n''') == '''2\n0\n3\n'''\n\nassert solution('''\nACACTACG\n3 7\n3 7\n3 7\n3 7\n1 8\n''') == '''2\n0\n3\n'''"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3\\n'\n'''\nACACTACG\n3 7\n2 3\n1 8\n'''\n\nassert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3\\n'\n'''\nACACTACG\n3 7\n2 3\n1 8\n'''\n\nassert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3\\n'\n'''\nACACTACG\n3 7\n2 3\n1 8\n'''\n\nassert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3\\n'\n'''\nACACTACG\n3 7\n2 3\n1 8\n'''\n\nassert solution('''\nACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3\\n'\n'''\nACACTACG\n3 7\n2 3\n1 8\n'''"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('ACACTACG') == ''\nassert solution('ACACTACG') == ''\nassert solution('ATCG') == ''\nassert solution('ATCG') == '0'\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''ACACTACG\n3 7\n2 3\n1 8'''\n) == '2\\n0\\n3'\n\nassert solution(\n'''ACACTACG\n8 3\n3 7\n2 3\n1 8'''\n) == '2\\n0\\n3'\n\nassert solution(\n'''ACACTACG\n7 6\n7 7\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n7 19\n7 20\n7 21\n7 22\n7 23\n7 24\n7 25\n7 26\n7 27\n7 28\n7 29\n7 30\n7 31\n7 32\n7 33\n7 34\n7 35\n7 36\n7 37\n7 38\n7 39\n7 40\n7 41\n7 42\n7 43\n7 44\n7 45\n7 46\n7 47\n7 48\n7 49\n7 50\n7 51\n7 52\n7 53\n7 54\n7 55\n7 56\n7 57\n7 58\n7 59\n7 60\n7 61\n7 62\n7 63\n7 64\n7 65\n7 66\n7 67\n7 68\n7 69\n7 70\n7 71\n7 72\n7 73\n7 74\n7 75\n7 76\n7 77\n7 78\n7 79\n7 80\n7 81\n7 82\n7 83\n7 84\n7 85\n7 86\n7 87\n7 88\n7 89\n7 90\n7 91\n7 92\n7 93\n7 94\n7 95\n7 96\n7 97\n7 98\n7 99\n7 100\n7 101\n7 102\n7 103\n7 104\n7 105\n7 106\n7 107\n7 108\n7 109\n7 110\n7 111\n7 112\n7 113\n7 114\n7 115\n7 116\n7 117\n7 118\n7 119\n7 120\n7 121\n7 122\n7 123\n7 124\n7 125\n7 126\n7 127\n7 128\n7 129\n7 130\n7 131\n7 132\n7 133\n7 134\n7 135\n7 136\n7 137\n7 138\n7 139\n7 140\n7 141\n7 142\n7 143\n7 144\n7 145\n7 146\n7 147\n7 148\n7 149\n7 150\n7 151\n7 152\n7 153\n7 154\n7 155\n7 156\n7 157\n7 158\n7 159\n7 160\n7 161\n7 162\n7 163\n7 164\n7 165\n7 166\n7 167\n7 168\n7 169\n7 170\n7 171\n7 172\n7 173\n7 174\n7 175\n7 176\n7 177\n7 178\n7 179\n7 180\n7 181\n7 182\n7 183\n7 184\n7 185\n7 186\n7 187\n7 188\n7 189\n7 190\n7 191\n7 192\n7 193\n7 194\n7 195\n7 196\n7 197\n7 198\n7 199\n7 200\n7 201\n7 202\n7 203\n7 204\n7 205\n7 206\n7 207\n7 208\n7 209\n7 210\n7 211\n7 212\n7 213\n7 214\n7 215\n7 216\n7 217\n7 218\n7 219\n7 220\n7 221\n7 222\n7 223\n7 224\n7 225\n7 226\n7 227\n7 228\n7 229\n7 230\n7 231\n7 232\n7 233\n7 234\n7 235\n7 236\n7 237\n7 238\n7 239\n7 240\n7 241\n7 242\n7 243\n7 244\n7 245\n7 246\n7 247\n7 248\n7 249\n7 250\n7 251\n7 252\n7 253\n7 254\n7 255\n7 256\n7 257\n7 258\n7 259\n7 260\n7 261\n7 262\n7 263\n7 264\n7 265\n7 266\n7 267\n7 268\n7 269\n7 270\n7 271\n7 272\n7 273\n7 274\n7 275\n7 276\n7 277\n7 278\n7 279\n7 280\n7 281\n7 282\n7 283\n7 284\n7 285\n7 286\n7 287\n7 288\n7 289\n7 290\n7 291\n7 292\n7 293\n7 294\n7 295\n7 296\n7 297\n7 298\n7 299\n7 300\n7 301\n7 302\n7 303\n7 304\n7 305\n7 306\n7 307\n7 308\n7 309\n7 310\n7 311\n7 312\n7 313\n7 314\n7 315\n7 316\n7 317\n7 318\n7 319\n7 320\n7 321\n7 322\n7 323\n7 324\n7 325\n7 326\n7 327\n7 328\n7 329\n7 330\n7 331\n7 332\n7 333\n7 334\n7 335\n7 336\n7 337\n7 338\n7 339\n7 340\n7 341\n7 342\n7 343\n7 344\n7 345\n7 346\n7 347\n7 348\n7 349\n7 350\n7 351\n7 352\n7 353\n7 354\n7 355\n7 356\n7 357\n7 358\n7 359\n7 360\n7 361\n7 362\n7 363\n7 364\n7 365\n7 366\n7 367\n7 368\n7 369\n7 370\n7 371\n7 372\n7 373\n7 374\n7 375\n7 376\n7 377\n7 378\n7 379\n7 380\n7 381\n7 382\n7 383\n7 384\n7 385\n7 386\n7 387\n7 388\n7 389\n7 390\n7 391\n7 392\n7 393\n7 394\n7 395\n7 396\n7 397\n7 398\n7 399\n7 400\n7 401\n7 402\n7 403\n7 404\n7 405\n7 406\n7 407\n7 408\n7 409\n7 410\n7 411\n7 412\n7 413\n7 414\n7 415\n7 416\n7 417\n7 418\n7 419\n7 420\n7 421\n7 422\n7 423\n7 424\n7 425\n7 426\n7 427\n7 428\n7 429\n7 430\n7 431\n7 432\n7 433\n7 434\n7 435\n7 436\n7 437\n7 438\n7 439\n7 440\n7 441\n7 442\n7 443\n7 444\n7 445\n7 446\n7 447\n7 448\n7 449\n7 450\n7 451\n7 452\n7 453\n7 454\n7 455\n7 456\n7 457\n7 458\n7 459\n7 460\n7 461\n7 462\n7 463\n7 464\n7 465\n7 466\n7 467\n7 468\n7 469\n7 470\n7 471\n7 472\n7 473\n7 474\n7 475\n7 476\n7 477\n7 478\n7 479\n7 480\n7 481\n7 482\n7 483\n7"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACG\") == \"0\"\nassert solution(\"ACACTACG\") == \"3\"\n\"\"\""
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '210'\nassert solution('2 1') == '10'\nassert solution('4 3') == '23'\nassert solution('7 5') == '35'\nassert solution('10 7') == '52'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('4 3\\n50 50 100 100') == '40'\nassert solution('4 3\\n50 50 100 100') == '40'\nassert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('5 3\\n50 100 80 120 80') == '210'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n1 2 3 4 5\") == \"10\"\nassert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"6 3\\n10 11 12 13 14 15 16\") == \"76\"\nassert solution(\"6 5\\n10 11 12 13 14 15 16 17 18 19 20\") == \"35\"\nassert solution(\"6 4\\n10 11 12 13 14 15 16 17 18 19\") == \"35\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3') == '210'\n\"\"\"\n\n\"\"\"\n---Solution 1 - Acceptance and Runtime complexity - O(n^2)\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1\\n2') == '2'\nassert solution('1\\n2\\n1') == '0'\nassert solution('2\\n2') == '4'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('2 1') == 0\nassert solution('3 5') == 15\nassert solution('2 6') == 21\nassert solution('3 3') == 9\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"210\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 4 4\") == \"4\"\nassert solution(\"1 4 4\") == \"4\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 3\") == \"4\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 3 4''') == '4'\nassert solution('''1 1 1''') == '0'\nassert solution('''1 1 1''') == '0'\nassert solution('''2 2 3''') == '2'\nassert solution('''2 2 3''') == '2'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"7\"\nassert solution(\"1 2 3 4 5\") == \"7\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"5 4 5\") == \"0\"\nassert solution(\"3 10 3\") == \"13\"\nassert solution(\"4 2 2\") == \"4\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"5 4 2\") == \"7\"\nassert solution(\"100 10 1\") == \"120\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('3 4 3') == '7'\nassert solution('6 0 3') == '6'\nassert solution('20 0 0') == '0'\nassert solution('10 15 5') == '5'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 2 3') == '4'\nassert solution('2 2 1') == '2'\nassert solution('3 4 4') == '8'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 3 4''') == \"4\"\nassert solution('''2 5 3''') == \"8\"\nassert solution('''1 1 1''') == \"3\"\nassert solution('''1 2 2''') == \"4\"\nassert solution('''1 1 100''') == \"101\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(3,5) == 0\nassert solution(3,5) == 0\nassert solution(5,3) == 10\nassert solution(1,0) == 10\nassert solution(9,0) == 0\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 5\") == \"10\"\nassert solution(\"3 8\") == \"0\"\nassert solution(\"1 9\") == \"10\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 2') == '10'\nassert solution('4 1') == '10'\nassert solution('5 7') == '10'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5') == '0'\nassert solution('4 10') == '10'\nassert solution('0 0') == '0'\nassert solution('9 1') == '0'\nassert solution('9 10') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == 0\nassert solution('1 2') == 10\nassert solution('8 9') == 0\nassert solution('10 9') == 10\nassert solution('100 9') == 0\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(3, 5) == \"0\"\nassert solution(3, 7) == \"10\"\nassert solution(3, 3) == \"0\"\nassert solution(5, 3) == \"10\"\nassert solution(5, 7) == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\nassert solution('7 4') == '10'\nassert solution('1 1') == '0'\nassert solution('7 11') == '0'\nassert solution('7 11') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 5') == '0'\nassert solution('3 5') == '0'\nassert solution('1 2') == '0'\nassert solution('1 3') == '10'\nassert solution('5 3') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n\n\"\"\"\n\n\"\"\"\nSolution:\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 5') == '0'\nassert solution('3 5') == '0'\nassert solution('3 1') == '10'\nassert solution('4 8') == '10'\nassert solution('6 7') == '10'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"-2 1\") == \"-1\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"1000 0\") == \"0\"\nassert solution(\"-1 0\") == \"0\"\nassert solution(\"-1 -1\") == \"1\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"1000000000 1000000000\") == \"1\"\nassert solution(\"1000000000 1000000000 2\") == \"1\"\nassert solution(\"7 4\") == \"1\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 4') == '1'\nassert solution('9 2') == '3'\nassert solution('3 2') == '1'\nassert solution('1 1') == '0'\nassert solution('11 2') == '3'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 4') == '1'\n\"\"\""
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4') == '1'\nassert solution('8 0') == '1'\nassert solution('10000000000 1000000000') == '0'\nassert solution('10000 4000000000') == '0'\nassert solution('5 4') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"10 5\") == \"6\"\nassert solution(\"10 9\") == \"10\"\nassert solution(\"10 10\") == \"5\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"1\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"10 0\") == \"1\"\nassert solution(\"0 0\") == \"1\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 1 1\") == \"bust\"\nassert solution(\"2 3 5\") == \"win\"\nassert solution(\"5 7 9\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('4 7 9') == 'bust'\nassert solution('1 2 3') == 'win'\nassert solution('1 2 4') == 'bust'\nassert solution('1 1 1') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\nassert solution(\"1 2 3 4\") == \"win\"\nassert solution(\"5 7 9\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 7 9') == 'win'\nassert solution('7 5 9') == 'win'\nassert solution('7 9 3') == 'bust'\nassert solution('7 9 3') == 'bust'\nassert solution('5 7 9') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"9 5 7\") == \"win\"\nassert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\nassert solution(\"4 5 6\") == \"bust\"\nassert solution(\"9 5 7\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'bust'\nassert solution('5 7 9') == 'bust'\nassert solution('10 2 9') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('1 1 1') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9 4 7') == 'bust'\nassert solution('7 5 2') == 'bust'\nassert solution('7 5 9') == 'win'\nassert solution('9 9 9') == 'win'\nassert solution('9 9 7') == 'bust'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('8') == '8'\nassert solution('9') == '6'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '6'\nassert solution('''4''') == '6'\nassert solution('''4''') == '6'\nassert solution('''5''') == '12'\nassert solution('''6''') == '12'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('8') == '10'\nassert solution('17') == '10'\nassert solution('21') == '15'\nassert solution('27') == '15'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '12'\nassert solution('10') == '30'\nassert solution('1000') == '100'\nassert solution('100000') == '1000000'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n'''\n) == '6'\n\nassert solution(\n'''\n2\n'''\n) == '2'\n\nassert solution(\n'''\n4\n'''\n) == '4'\n\nassert solution(\n'''\n1\n'''\n) == '1'\n\nassert solution(\n'''\n7\n'''\n) == '1'"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('6') == '6'\nassert solution('2') == '1'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('27') == '1'\nassert solution('99') == '1'\nassert solution('55') == '1'\nassert solution('145') == '1'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 2') == '2'\nassert solution('5 2') == '3'\nassert solution('10 4') == '4'\nassert solution('9 3') == '5'\nassert solution('20 21') == '9'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"2\"\nassert solution(\"6 1\") == \"1\"\nassert solution(\"7 1\") == \"2\"\nassert solution(\"7 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 4') == '3'\nassert solution('4 2') == '3'\nassert solution('4 6') == '4'\nassert solution('6 2') == '5'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2''') == '2'\nassert solution('''9 4''') == '1'\nassert solution('''19 16''') == '2'\n'''\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"12 5\") == \"2\"\nassert solution(\"14 2\") == \"2\"\nassert solution(\"10 4\") == \"4\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '2'\nassert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2') == '2'\nassert solution('5 4') == '2'\nassert solution('1 1') == '1'\nassert solution('6 3') == '2'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"hon\"\nassert solution(\"12345\") == \"pon\"\nassert solution(\"12345678\") == \"pon\"\nassert solution(\"1234567890\") == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('16') == 'pon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"123\") == \"hon\"\nassert solution(\"12345\") == \"bon\"\nassert solution(\"123456\") == \"bon\"\nassert solution(\"1234567\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"123\") == \"hon\"\nassert solution
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"14\") == \"hon\"\nassert solution(\"70\") == \"bon\"\nassert solution(\"18\") == \"pon\"\nassert solution(\"28\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"23\") == \"hon\"\nassert solution(\"2345\") == \"hon\"\nassert solution(\"94\") == \"hon\"\nassert solution(\"356\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(16) == \"pon\"\nassert solution(3) == \"bon\"\nassert solution(9) == \"hon\"\nassert solution(999) == \"hon\"\nassert solution(1000) == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('16') == 'pon'\nassert solution('15') == 'hon'\nassert solution('31') == 'pon'\nassert solution('8') == 'hon'\nassert solution('9') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n''') == 'pon'\nassert solution('''3\n''') == 'hon'\nassert solution('''8\n''') == 'pon'\nassert solution('''15\n''') == 'hon'\nassert solution('''99\n''') == 'hon'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('2\\n1 1') == '2'\nassert solution('2\\n2 2') == '4'\nassert solution('2\\n2 1') == '2'\nassert solution('2\\n2 2') == '4'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('2\\n1 2') == '4'\nassert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n2 2') == '0'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('2\\n1 1') == '2'\nassert solution('3\\n2 1') == '5'\nassert solution('4\\n1 2 3 4') == '8'\nassert solution('2\\n1 1') == '2'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 1 2''') == '11'\nassert solution('''3\n3 1 2''') == '11'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n2''') == '2'\nassert solution('''3\n10 5 4''') == '22'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 1 1\") == \"8\"\nassert solution(\"4\\n2 2 2 2\") == \"10\"\nassert solution(\"4\\n3 3 3 3\") == \"15\"\nassert solution(\"4\\n4 4 4 4\") == \"20\"\nassert solution(\"4\\n5 5 5 5\") == \"25\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('3\\n3 1 2') == '11'\nassert solution('5\\n2 1 3 4 5') == '20'\nassert solution('5\\n2 1 3 4 5') == '20'\nassert solution('5\\n2 1 3 4 5') == '20'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3\n3 1 2''') == \"11\"\nassert solution(\n'''4\n5 1 2 3 4''') == \"10\"\nassert solution(\n'''5\n4 3 1 2 3 4''') == \"10\"\nassert solution(\n'''6\n9 2 3 4 5 6 7 8 9''') == \"45\"\nassert solution(\n'''8\n30 19 19 15 11 9 9 7 10''') == \"270\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('3\\n3 1 1') == '3'\nassert solution('3\\n3 3 2') == '12'\nassert solution('3\\n3 3 3') == '4'\nassert solution('3\\n3 1 2\\n3 1 3') == '11'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n3\") == \"3\"\nassert solution(\"2\\n1 1\") == \"1\"\nassert solution(\"2\\n2 1\") == \"1\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\") == \"4\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n4\n3''') == '4\\n3\\n4'\nassert solution('''1\n5\n1\n2\n4\n5''') == '4\\n5\\n4\\n5'\nassert solution('''10\n5\n6\n8\n8\n8\n8\n8\n9\n10\n10\n10''') == '8\\n10\\n10\\n10'\nassert solution('''15\n1\n2\n5\n6\n7\n8\n10\n11\n12\n14\n17\n19\n20''') == '8\\n10\\n10\\n14\\n20'\nassert solution('''1000\n2\n10000\n3\n4\n10000\n5\n6\n7\n8\n9\n10\n1000''') == '8\\n10\\n10\\n14\\n20'"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n2\\n3\\n1') == '2\\n3\\n2'\nassert solution('2\\n2\\n3\\n3') == '2\\n3\\n3'\nassert solution('2\\n3\\n1') == '3\\n1\\n2'\nassert solution('1\\n1') == '1\\n1'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n5\n3''') == '3\\n4\\n4'\nassert solution('''3\n1\n3\n2\n''') == '3\\n3\\n2'\nassert solution('''3\n1\n3\n2\n4\n''') == '3\\n3\\n2'\nassert solution('''3\n3\n1\n2\n3\n''') == '1\\n3\\n3'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n1\\n4\\n3') == '3\\n4\\n4'\nassert solution('2\\n2\\n4\\n3') == '4\\n4\\n4'\nassert solution('1\\n4\\n2\\n3') == '3\\n3\\n3'\nassert solution('1\\n3\\n4\\n2') == '2\\n2\\n2'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n1\\n4\\n3') == '4\\n4\\n4'\nassert solution('2\\n1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n1\\n4\\n3') == '4\\n3\\n4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1\n4\n3\n''') == '4\\n3\\n4'\nassert solution('''\n5\n1\n2\n3\n4\n5\n''') == '3\\n4\\n5'\nassert solution('''\n3\n2\n1\n3\n2\n''') == '2\\n1\\n2'\nassert solution('''\n5\n1\n3\n2\n4\n5\n''') == '3\\n2\\n4'\nassert solution('''\n5\n2\n3\n1\n4\n5\n''') == '2\\n1\\n3'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '9'\nassert solution('10 3') == '18'\nassert solution('20 3') == '29'\nassert solution('20 1') == '20'\nassert solution('5 3') == '9'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '9'\nassert solution('10 15') == '25'\nassert solution('1 1') == '1'\nassert solution('10 10') == '20'\nassert solution('50 50') == '200'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '3'\nassert solution('5 3') == '8'\nassert solution('3 4') == '5'\nassert solution('4 5') == '10'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == '9'\n\"\"\""
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"5 10\") == \"13\"\nassert solution(\"5 10\") == \"13\"\nassert solution(\"10 30\") == \"45\"\nassert solution(\"10 10\") == \"15\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3''') == '9'\nassert solution('''5 3''') == '9'\nassert solution('''5 8''') == '8'\nassert solution('''5 8''') == '8'\nassert solution('''8 8''') == '8'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split(' ')[0]\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"5 3\") == \"9\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"5 5\") == \"12\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"5\\n3\\n-30 -10 10 20 50\\n\") == \"40\"\nassert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == '8'\nassert solution('1 2 3 4 5') == '16'\nassert solution('1 2 3 4 5 6') == '32'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1\\n-1 0') == '1'\nassert solution('1 2\\n-1 0') == '1'\nassert solution('2 2\\n1 0') == '0'\nassert solution('2 1\\n-1 0') == '1'\nassert solution('4 3\\n1 2 3 4\\n1 -1 -1 -1') == '4'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '5 3\\n-30 -10 10 20 50'\n) == '40'\n\"\"\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-30 -10 10 20 50') == '40'\nassert solution('10 10 10 10 10') == '0'\nassert solution('-3 1 -3 -1 0 0 0 3') == '7'\nassert solution('-3 1 -3 -1 0 0 0 3') == '7'\nassert solution('-3 1 -3 -1 0 0 0 3') == '7'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5 3\n-30 -10 10 20 50\"\"\") == '40'\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3''') == '40'\nassert solution('''-30 -10 10 20 50''') == '40'\nassert solution('''-30 -10 10 20 50''') == '40'\n'''"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '2'\nassert solution('5 3') == '40'\nassert solution('10 1') == '10'\nassert solution('5 4') == '7'\nassert solution('6 3') == '9'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"5 6\") == \"3\"\nassert solution(\"7 8\") == \"4\"\nassert solution(\"9 10\") == \"5\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('5 9') == '4'\nassert solution('500 1000') == '500'\nassert solution('999 1000') == '999'\nassert solution('7 9') == '4'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 13') == '2'\nassert solution('10 15') == '2'\nassert solution('20 22') == '1'\nassert solution('60 96') == '3'\nassert solution('5 12') == '1'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 13''') == '2'\nassert solution('''8 1000''') == '500'\nassert solution('''1 1000''') == '500'\nassert solution('''1 999''') == '999'\nassert solution('''1 998''') == '999'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 100') == '100'\nassert solution('5 10') == '2'\nassert solution('25 7') == '5'\nassert solution('10 0') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n8 13\n'''\n    ) == '2'\n\nassert solution(\n'''\n8 35\n'''\n    ) == '33'\n\nassert solution(\n'''\n6 99\n'''\n    ) == '39'\n\nassert solution(\n'''\n10 9\n'''\n    ) == '9'\n\nassert solution(\n'''\n10 9\n'''\n    ) == '9'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 13') == '2'\n\"\"\""
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 13''') == '2'\nassert solution('''10 15''') == '2'\nassert solution('''18 19''') == '4'\nassert solution('''28 29''') == '8'\nassert solution('''100000000000000000000000 100000000000000000000000''') == '1'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"8 13\") == \"2\"\nassert solution(\"10 15\") == \"2\"\nassert solution(\"1000000 499959\") == \"9999\"\nassert solution(\"1000000 50 959\") == \"9999\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\n\"\"\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 4') == '3'\n\"\"\"\n\"\"\"\nfrom sys import stdin\nfrom math import log"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 5\") == \"3\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"10 4\") == \"3\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nH, A = map(int, stdin.split())"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 4') == '3'\nassert solution('20 5') == '6'\nassert solution('1 2') == '1'\n\"\"\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 3\n\n - After one attack, the monster's health will be 6.\n - After two attacks, the monster's health will be 2.\n - After three attacks, the monster's health will be -2.\nThus, Serval needs to make three attacks to win.\n'''\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"10 4\"\n) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 75 25 100') == '50'"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('-3 5 -8 0') == '10'\nassert solution('-3 -8 0') == '6'\nassert solution('1 2 3 4') == '25'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 40 30 60\") == \"60\"\nassert solution(\"0 40 30 60\") == \"60\"\nassert solution(\"0 40 30 60\") == \"60\"\nassert solution(\"0 40 30 60\") == \"60\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 0 0 0') == '0'\nassert solution('1 0 0 0') == '0'\nassert solution('10 0 0 0') == '10'\nassert solution('2 3 4 5') == '4'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(50)\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\""
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"0 75 25 100\") == \"50\"\nassert solution(\n    \"0 75 25 100\") == \"50\"\nassert solution(\n    \"0 0 0 0\") == \"0\"\nassert solution(\n    \"0 0 0 0\") == \"0\"\nassert solution(\n    \"0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''15''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '0'\nassert solution('''4''') == '0'\nassert solution('''5''') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('10') == 0\nassert solution('200') == 0\nassert solution('5000') == 0\nassert solution('100000') == 0\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"nonsense\") == \"\"\nassert solution(\"9999999999999999999999999999999999\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"123456789\") == \"\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1,2\") == \"\"\nassert solution(\"2,1\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n''') == '2'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10\\n') == 1\nassert solution('200\\n') == 1\nassert solution('210\\n') == 0\nassert solution('120\\n') == 0\nassert solution('210\\n') == 1\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 0\nassert solution('5') == 1\nassert solution('10') == 2\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('101') == 1\nassert solution('11') == 1\nassert solution('111') == 1\nassert solution('1111') == 1\nassert solution('11111') == 1\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"7 2\") == \"1\"\nassert solution(\"11 4\") == \"3\"\nassert solution(\"10 2\") == \"4\"\nassert solution(\"5 10\") == \"5\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0'\nassert solution('7 3') == '1'\nassert solution('100 3') == '99'\nassert solution('1 1000') == '999'\nassert solution('1000 1') == '999'\n\n\"\"\"\n\nN, K = map(int, stdin.readline().split())\n\nmax_c = min_c = max_k = min_k = N // K\ndiff = (N - K) * K\n\nfor _ in range(K):\n    _c, k = map(int, stdin.readline().split())\n    max_c = max(max_c, _c)\n    min_c = min(min_c, _c)\n    max_k = max(max_k, k)\n    min_k = min(min_k, k)\n\nprint(abs(max_c - min_c) + diff)\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"10 11\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3''') == '1'\nassert solution('''10 2''') == '2'\nassert solution('''100 3''') == '1'\nassert solution('''5000 3''') == '1'\nassert solution('''100 000''') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3') == '1'\nassert solution('3 2') == '1'\nassert solution('10 9') == '1'\nassert solution('10 10') == '0'\nassert solution('10 15') == '3'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"10 2\") == \"5\"\nassert solution(\"2 5\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 10\") == \"9\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 3') == '1'\nassert solution('10 15') == '2'\nassert solution('6 3') == '3'\nassert solution('50 50') == '0'\nassert solution('45 41') == '10'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n7 3\n\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"\n10 1\n\"\"\"\n) == '5'\n\nassert solution(\n\"\"\"\n100000000 0\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n12 3\n\"\"\"\n) == '5'\n\nassert solution(\n\"\"\"\n10 0\n\"\"\"\n) == '0'"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"7 3\") == \"1\"\nassert solution(\"10 3\") == \"0\"\nassert solution(\"10 9\") == \"0\"\nassert solution(\"5 4\") == \"1\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '111'\n) == '111'\n\"\"\"\n\n\"\"\"\nimport sys\n\nn = int(sys.stdin.readline())"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"111\"\n\"\"\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11111') == '11111'\nassert solution('111111') == '111111'\nassert solution('1234') == '1234'\nassert solution('12345') == '12345'\nassert solution('123456') == '123456'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '111'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"999\") == \"999\"\nassert solution(\"101\") == \"101\"\nassert solution(\"111\") == \"111\"\nassert solution(\"999\") == \"999\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '111'\n\"\"\""
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '111'\n'''\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('111') == '111'\nassert solution('1111') == '1111'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('111') == '111'\nassert solution('1110111011') == '1110111011'\nassert solution('111011101') == '1110111011'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('111') == '111'\nassert solution('110') == '110'\nassert solution('100') == '100'\nassert solution('101') == '101'\nassert solution('1001') == '100'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 3') == '5'\nassert solution('1 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 4 4') == '3'\nassert solution('1 5 3') == '5'\nassert solution('1 2 1') == '0'\nassert solution('1 2 2') == '1'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 5 2') == '5'\nassert solution('1 5 2 3') == '6'\nassert solution('1 5 2 6') == '6'\nassert solution('1 6 1 2') == '6'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 6 3') == '5'\n\"\"\""
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 4\") == \"2\"\nassert solution(\"5 9 1\") == \"1\"\nassert solution(\"3 9 1\") == \"5\"\nassert solution(\"3 10 7\") == \"4\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"3 2 1\") == \"5\"\nassert solution(\"10 5 2\") == \"10\"\nassert solution(\"4 8 9\") == \"7\"\nassert solution(\"6 6 6\") == \"0\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 4 3\") == \"4\"\nassert solution(\"1 4 3\") == \"4\"\nassert solution(\"2 3 1\") == \"1\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 1 1') == '0'\nassert solution('10 1 1') == '1'\nassert solution('10 10 10') == '0'\nassert solution('99 1 1') == '99'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"7 4 2\") == \"3\"\nassert solution(\"1 2 5\") == \"1\"\nassert solution(\"5 4 3\") == \"0\"\nassert solution(\"99 2 200\") == \"95\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"6\"\nassert solution(\"1010\") == \"5\"\nassert solution(\"10000\") == \"6\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('9') == '5'\nassert solution('12') == '7'\nassert solution('27') == '13'\nassert solution('45') == '23'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('8 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"4\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"8 4 2 1 4 2 1 4 2 1 1 4 2 1 1 4 2 1 1\") == \"5\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == '5'\nassert solution('10') == '3'\nassert solution('100') == '7'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '3'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('10') == '7'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(s=\"8\") == 5\nassert solution(s=\"8 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4 2 1 4"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a1') == 'a1'\nassert solution('a1a1') == 'a1a1'\nassert solution('a2') == 'a2'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == '5'\nassert solution('8 2') == '5'\nassert solution('8 3') == '5'\nassert solution('8 5') == '5'\nassert solution('8 4') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"10\") == \"6\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"12\") == \"3\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 9') == 'Yes'\nassert solution('9 9 9 9') == 'Yes'\nassert solution('9 9 9 10') == 'No'\nassert solution('9 9 10 10') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 9 10 10''') == 'No'\nassert solution('''0 1 10 10''') == 'Yes'\nassert solution('''5 1 10 10''') == 'Yes'\nassert solution('''4 5 10 10''') == 'No'\nassert solution('''5 1 9 9''') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 9') == 'Yes'\nassert solution('10 9 10 9') == 'No'\nassert solution('10 9 9 9') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('1 10 1 10') == 'Yes'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('2 3 3 3') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'Yes'\nassert solution('2 9 9 9') == 'Yes'\nassert solution('9 9 9 9') == 'No'\nassert solution('2 9 9 9') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('-1 -2 -3 -4') == 'No'\nassert solution('101 0 0 0') == 'Yes'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('2\\n4 3 1\\n2 1 2') == '2'\nassert solution('3\\n1 3 2\\n2 3 1') == '2'\nassert solution('1\\n3 1 2\\n2 3 1') == '0'\nassert solution('2\\n3 1 2\\n2 3 1') == '0'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''4\n1 1 1 1\n1 1 1 1''') == '0'\nassert solution('''4\n5 5 5 5\n1 1 1 1\n1 1 1 1''') == '1'\nassert solution('''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '0'\nassert solution('''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n0') == '0'\nassert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('2\\n1 1\\n1 1') == '1'\nassert solution('3\\n1 1 1\\n1 1 1') == '1'\nassert solution('3\\n1 1 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n3\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"3\\n1\") == \"1\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n10 2 5\n6 3 4\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n9\n5 2 4 3 5 5 6 5 2 4\n6 3 3 2 4 1 2 2 3\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\n\n\"\"\""
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n10 2 5\n6 3 4'''\n) == '5'\n\nassert solution(\n'''3\n10 3 5\n6 1 4'''\n) == '6'\n\nassert solution(\n'''3\n10 3 5\n6 5 4'''\n) == '0'\n\nassert solution(\n'''3\n10 3 5\n6 5 4'''\n) == '5'\n\nassert solution(\n'''3\n10 3 5\n6 4 5'''\n) == '5'"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10\\n100\") == \"5\"\nassert solution(\"2\\n1 1\\n10\\n100\") == \"0\"\nassert solution(\"3\\n1 1\\n2 2\\n10\\n100\") == \"1\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n10\\n100\") == \"4\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n10\\n100\") == \"5\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n10 2 5\n6 3 4\n\"\"\") == \"5\", \"Simple\"\n\nassert solution(\n\"\"\"\n4\n1 1 1 1\n4 4 4 4\n\"\"\") == \"1\", \"All same\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n2 2 2 2 2\n\"\"\") == \"5\", \"Some same\"\n\nassert solution(\n\"\"\"\n6\n1 1 1 1 1 1\n2 2 2 2 2 2\n\"\"\") == \"2\", \"Few different\"\n\nassert solution(\n\"\"\"\n7\n1 2 3 4 5 6 7\n2 2 2 2 2 2 2\n\"\"\") == \"6\", \"All different\""
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 2 5\\n6 3 4') == '5'\nassert solution('1\\n1') == '0'\nassert solution('4\\n1 1 1 1\\n2 3 2') == '1'\nassert solution('5\\n1 1 1 1 1\\n2 3 2 3') == '5'\nassert solution('10\\n2 5 5 5 5 5 5 5 5\\n2 4 4 4 4 4 4 4 4') == '0'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n###') == '###'\nassert solution('4 5\\n.....\\n....\\n.###.\\n....\\n.....') == '...'\nassert solution('4 4\\n###\\n...\\n...\\n.#.#') == '###'\nassert solution('4 4\\n..#\\n#..\\n##.#\\n.#.#') == '##.#'\nassert solution('4 4\\n###\\n.##.\\n##.##\\n.#.#') == '###'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[1:-1]\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4\\n##.#\\n....\\n##.#\\n.#.#\\n') == '###\\n###\\n.##\\n'\nassert solution('3 3\\n##.#\\n.#.#\\n.#.#\\n') == '...\\n...\\n...\\n'\nassert solution('4 4\\n.#.#\\n.#.#\\n.#.#\\n') == '##.\\n##.\\n##.\\n##.\\n'\nassert solution('5 5\\n####\\n#.#.\\n#.#.\\n#.#.\\n###\\n') == '###\\n###\\n###\\n###\\n'\nassert solution('5 5\\n####\\n#.#.\\n#.#.\\n#.#.\\n###\\n') == '###\\n###\\n###\\n###\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\n'''\n'''\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 8\\n.#.#\\n....\\n.#.#\\n.#.#\\n.#.#\\n.#.#\\n.#.#') == '###\\n###\\n.#.'\nassert solution('3 3\\n....\\n....\\n....\\n....\\n....\\n....\\n....') == '....\\n....\\n....'\nassert solution('5 5\\n....#\\n....#\\n.###.\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#') == '....#\\n....#\\n.#.#.'\nassert solution('5 3\\n..#..\\n#.#..\\n##.#.\\n#...#\\n#.#..\\n.#..#\\n.#..#') == '#.#.#\\n#.#.#\\n.#.#.#\\n#.#.#.#'\nassert solution('5 1\\n.#') == '.'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('##.\\n.#\\n.#') == '###'\nassert solution('##.#\\n.#.#\\n.#.#\\n') == '###'\nassert solution('#.#.\\n.#.\\n.#.#\\n') == '#.#'\nassert solution('#.#.\\n#.#.\\n#.#.\\n') == '#.#'\nassert solution('#.#.\\n#.#.\\n#.#.#\\n') == '#.#'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\n\nassert solution('''4 5\n....#\n...#.\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''8 8\n#######\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '6.283185307179586'\nassert solution('2') == '12.566370614359172'\nassert solution('3') == '18.615773010990538'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == 6.28318530717958623200\nassert solution(2) == 6.283185307179586229989973848371086\nassert solution(3) == 6.283185307179586229991349095339941\nassert solution(4) == 6.28318530717958622999134909734663065\nassert solution(5) == 6.28318530717958622999134909734663065\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == '6.28318530717958623200'\nassert solution(2) == '12.566370614359172'\nassert solution(3) == '18.86420992515517'\nassert solution(4) == '24.0994751058176'\nassert solution(5) == '30.01857566390295'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('3') == '25.4162277660168665664'\nassert solution('4') == '5.1915621114905916060'\nassert solution('5') == '6.28318530717958623200'\nassert solution('6') == '8.28571428571428571429'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == \"6.28318530717958623200\"\nassert solution('2') == \"8.56\"\nassert solution('3') == \"10.61916699131079104\"\nassert solution('4') == \"12.49961791219105893\"\nassert solution('5') == \"14.3247015022832359\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6.28318530717958623200\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.566370614359172'\nassert solution('3') == '17.3333333333333335'\nassert solution('4') == '20.416666666666665'\nassert solution('5') == '25.416666666666665'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '0.0'\nassert solution('-1') == 'NaN'\nassert solution('1.1') == 'NaN'\nassert solution('1.0') == '6.28318530717958623'\nassert solution('1.5') == '8.84955592153876'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '6.28318530717958623200'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.56637061435917295'\nassert solution('3') == '18.84955592153876'\nassert solution('4') == '24.390869140625'\nassert solution('5') == '30.6337078651685'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASSS') == 'No'\nassert solution('QWE') == 'No'\nassert solution('ASSS') == 'Yes'\nassert solution('ASSS') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AA') == 'No'\nassert solution('AA') == 'No'\nassert solution('AABB') == 'Yes'\nassert solution('AABB') == 'Yes'\nassert solution('AABC') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"AAsa\") == \"Yes\"\nassert solution(\"ASSA\") == \"Yes\"\nassert solution(\"aaaa\") == \"No\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"AAAsa\") == \"No\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ASAS') == 'Yes'\nassert solution('S') == 'Yes'\nassert solution('SS') == 'No'\nassert solution('SSS') == 'No'\nassert solution('SSSSSS') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AS') == 'Yes'\nassert solution('ASS') == 'No'\nassert solution('AAS') == 'No'\nassert solution('ASAS') == 'Yes'\nassert solution('AASAS') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('aAAAAB') == 'Yes'\nassert solution('UUUUAA') == 'No'\nassert solution('aA') == 'No'\nassert solution('AASa') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('AA') == 'No'\nassert solution('AAB') == 'No'\nassert solution('AAA') == 'Yes'\nassert solution('AAAB') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ASASS\") == \"No\"\nassert solution(\"ASAS\") == \"Yes\"\nassert solution(\"AASSSS\") == \"Yes\"\nassert solution(\"ASSSS\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aas') == 'No'\nassert solution('ass') == 'Yes'\nassert solution('ASSA') == 'Yes'\nassert solution('ASSS') == 'No'\nassert solution('ASAAAAA') == 'Yes'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6') == '-16'\nassert solution('-13 3') == '-10'\nassert solution('15 1') == '-7'\nassert solution('7 1') == '-5'\nassert solution('100 1000') == '9990000'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-1 3') == '-2'\nassert solution('-1 -1') == '0'\nassert solution('4 3') == '-1'\nassert solution('-1 0') == '-1'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[2]\nassert stdin[1] == stdin[1].lstrip('0')\nassert stdin[0] == stdin[0].lstrip('-')"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-7 6') == '-6'\nassert solution('-3 1') == '-1'\nassert solution('6 7') == '21'\nassert solution('3 5') == '8'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"1 1\\n\")) == \"\"\nassert solution(input(\"2 5\\n\")) == \"\"\nassert solution(input(\"100 50\\n\")) == \"\"\nassert solution(input(\"-100 -100\\n\")) == \"\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-10 3\") == \"-16\"\nassert solution(\"-9 1\") == \"-17\"\nassert solution(\"-13 0\") == \"-13\"\nassert solution(\"1 5\") == \"-10\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"-13 3\") == \"-10\""
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1\") == \"-1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('2\\n10\\n5') == '1'\nassert solution('4\\n20\\n1\\n8') == '1\\n2'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == '1'\nassert solution('1 2 1') == '3'\nassert solution('1 2 2') == '2'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\nassert solution('''7\n8 8 9 10 10\n7 7 7 7 7 7 7\n7 7 7 7 7 7 7\n7 7 7 7 7 7 7\n7 7 7 7 7 7 7\n7 7 7 7 7 7 7\n7 7 7 7 7 7 7\n7 7 7 7 7 7 7\n7 7 7 7 7 7 7\n7 7 7 7 7 7 7''') == '28'\nassert solution('''4\n1 1 1 1\n4 3 2 3\n3 3 2 3\n3 3 2 3\n\n''') == '6'\nassert solution('''6\n10 11 12 13 14 15 16\n14 14 14 14 14 14 14\n14 14 14 14 14 14 14\n14 14 14 14 14 14 14\n14 14 14 14 14 14 14\n14 14 14 14 14 14 14\n14 14 14 14 14 14 14\n14 14 14 14 14 14 14\n14 14 14 14 14 14 14\n14 14 14 14 14 14 14''') == '210'\nassert solution('''10\n27 18 22 23 26 29 30\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22\n22 22 22 22 22 22 22''') == '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\") == \"0\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"3\\n3\") == \"0\"\nassert solution(\"4\\n3 2 1\") == \"1\"\nassert solution(\"5\\n4 3 2 1\") == \"2\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"5 0\") == \"\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n3') == '1'\nassert solution('4\\n6 8 10 12') == '2'\nassert solution('5\\n8 4 1 5 2') == '3'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split()[-1]"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 5 6 8') == '3'\nassert solution('2 1 4') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('2 2 3 4') == '0'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4') == '2\\n3 4'\nassert solution('4\\n1 1 1 1') == '4\\n1 1 1 1'\nassert solution('5\\n1 2 1 2 1') == '1\\n5'\nassert solution('5\\n1 2 1 2 1') == '1\\n5'\nassert solution('5\\n1 2 1 2 1') == '1\\n5'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4''') == '2\\n3 4'\nassert solution('''4\n1 1 1 1''') == '4\\n1 1 1 1'\nassert solution('''5\n1 2 1 2 1''') == '1\\n5'\nassert solution('''5\n1 2 1 2 1''') == '3\\n2 2 1'\nassert solution('''6\n1 1 1 1 1 1''') == '2\\n2 1 1 1 1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4 \\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1 \\n'\nassert solution('''5\n1 2 3 4 5\n''') == '1\\n5 \\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1 \\n'\nassert solution('''6\n1 2 3 4 5 6\n''') == '2\\n3 4 5 6 \\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 1 2 3 4\\n1 1 1 1 1\\n') == '2\\n3 4\\n'\nassert solution('2\\n1 1 1 1\\n') == '4\\n1 1 1 1\\n'\nassert solution('2\\n1 1 1\\n') == '4\\n1 1 1 1\\n'\nassert solution('2\\n1 1\\n') == '2\\n1 1\\n'\nassert solution('2\\n1\\n') == '2\\n1\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2\\n3 4'\nassert solution('1\\n2\\n3\\n4\\n5') == '3\\n4 4 5'\nassert solution('1\\n1\\n1\\n1') == '1 1 1 1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1 1 1 1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1 1 1 1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''\n4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''\n5\n1 2 1 2 1\n''') == '1\\n5\\n'\nassert solution('''\n5\n1 1 1 1\n''') == '3\\n2 2 1\\n'\nassert solution('''\n4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1\"\nassert solution(\"5\\n1 2 1 2 1\") == \"1\\n5\"\nassert solution(\"5\\n1 2 1 2 1\") == \"1\\n5\""
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '1\\n5\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\\n2\\n3\"\nassert solution(\"1\\n1\\n1\\n1\") == \"3\\n1\\n1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\\n2\\n3\\n4\\n5\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"3\\n1\\n1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"1\\n2\\n3\\n4\\n5\\n6\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 3 4') == '3'\nassert solution('3 4 5') == '4'\nassert solution('4 5 6') == '5'\nassert solution('6 7 8') == '7'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('9\\n9\\n9\\n9\\n9\\n9\\n9\\n9') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('9\\n9\\n9\\n9\\n9\\n9\\n9\\n9') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4') == 1\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 1\nassert solution('2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 2\nassert solution('2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == 2\nassert solution('5\\n1\\n1\\n1\\n1\\n1') == 7\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n3') == '2'\nassert solution('2\\n4') == '2'\nassert solution('2\\n6') == '2'\nassert solution('2\\n9') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:2]\nassert solution(stdin) == stdin[3:5]\n\n\n\"\"\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"50\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n'''\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''512 4''') == '50'\nassert solution(\n'''1000000000 9''') == '1'\nassert solution(\n'''8359565521 4''') == '836'\nassert solution(\n'''5984603215 9''') == '5985'\nassert solution(\n'''96713346539 8''') == '967133464'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:-1] + '0'\n\n---"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\nInput\n\n4 9\n\nOutput\n\n0\n\nInput\n\n8 0\n\nOutput\n\n8\n\nInput\n\n45 3\n\nOutput\n\n42\n\nInput\n\n5 123\n\nOutput\n\n106\n'''"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1\\n') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5\\n') == '2\\n5 5'\nassert solution('3\\n5 1 4\\n') == '2\\n5 5'\nassert solution('7\\n2 2 3 2 1 2 2\\n') == '7\\n1 2 2 2 2 3 2'\nassert solution('5\\n3 7 5 1 5\\n') == '2\\n5 5'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1\n''') == '5\\n2 1 1 2 3'\nassert solution('''5\n3 7 5 1 5\n''') == '2\\n5 5'\nassert solution('''3\n5 1 4\n''') == '2\\n5 5'\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '7\\n1 2 2 2 2 3 2'\nassert solution('''10\n9 4 5 2 9 9 2 1\n''') == '3\\n5 4 5 2 3'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '''\n5\n2 1 1 2 3\n'''\n\nassert solution('''\n5\n3 7 5 1 5\n''') == '''\n2\n5 5 \n'''\n\nassert solution('''\n3\n5 1 4\n''') == '''\n2\n5 5 \n'''\n\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '''\n7\n1 2 2 2 2 3 2\n'''\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"7\\n5 1 4\\n\") == \"2\\n5 5\"\nassert solution(\"3\\n7 5 1\\n\") == \"2\\n4 5\"\nassert solution(\"4\\n2 2 3 2 1 2\") == \"2\\n2 3 2 1 3\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"2\\n1 2 1 2 2 2 2 3\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"7\") == \"\"\nassert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"7\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"7\\n3 7 5 1 5\") == \"2\\n5 5\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3 4 1\\n\") == \"2\\n2 3 4 1\\n\"\nassert solution(\"5\\n2 1 3 4\\n\") == \"2\\n1 3 4 2\\n\"\nassert solution(\"5\\n3 2 1 4\\n\") == \"2\\n3 1 4 2\\n\"\nassert solution(\"5\\n3 2 1 4 5\\n\") == \"2\\n3 1 4 2\\n\"\nassert solution(\"5\\n3 2 1 4 5 6\\n\") == \"2\\n3 1 4 2\\n\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7') == '1 2 3 4 5 6 7'\nassert solution('1 2 3') == '1 2 3'\nassert solution('1 2 3 4 5') == '1 2 3'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n2 3 4 5') == '1 2 2 2 2 3'\nassert solution('1\\n3 2\\n4') == '1 2 1'\nassert solution('3\\n5 1 4') == '2 1 1'\nassert solution('7\\n2 2 3 2 1 2 2') == '5 1 2 2 2 3 2'\nassert solution('7\\n3 7 5 1 5') == '2 1 1 2 3 3'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"6 10\\n1 2\\n3 4\\n5 6\\n7 8\\n8 9\\n9 10\") == \"-1\"\nassert solution(\"10 11\\n1 2\\n3 4\\n5 6\\n7 8\\n8 9\\n9 10\") == \"2\"\nassert solution(\"12 10\\n1 2\\n3 4\\n5 6\\n7 8\\n8 9\\n9 10\") == \"2\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\nassert solution('1 1') == '-1'\nassert solution('2 3') == '2'\nassert solution('4 16') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('1\\n1\\n') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"-1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"5 4\") == \"-1\"\nassert solution(\"2 3\") == \"-1\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\n\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n\nassert solution('''4 20\n10 8\n7 4\n3 1\n5 4''') == '3'\n\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4\n1 2\n''') == '-1'\n'''\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"-1\n\"\"\""
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == \"2\"\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4\n''') == \"-1\"\nassert solution('''3 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n60 62\n60 63\n60 64\n60 65\n60 66\n60 67\n60 68\n60 69\n60 70\n60 71\n60 72\n60 73\n60 74\n60 75\n60 76\n60 77\n60 78\n60 79\n60 80\n60 81\n60 82\n60 83\n60 84\n60 85\n60 86\n60 87\n60 88\n60 89\n60 90\n60 91\n60 92\n60 93\n60 94\n60 95\n60 96\n60 97\n60 98\n60 99\n60 100\n60 101\n60 102\n60 103\n60 104\n60 105\n60 106\n60 107\n60 108\n60 109\n60 110\n60 111\n60 112\n60 113\n60 114\n60 115\n60 116\n60 117\n60 118\n60 119\n60 120\n60 121\n60 122\n60 123\n60 124\n60 125\n60 126\n60 127\n60 128\n60 129\n60 130\n60 131\n60 132\n60 133\n60 134\n60 135\n60 136\n60 137\n60 138\n60 139\n60 140\n60 141\n60 142\n60 143\n60 144\n60 145\n60 146\n60 147\n60 148\n60 149\n60 150\n60 151\n60 152\n60 153\n60 154\n60 155\n60 156\n60 157\n60 158\n60 159\n60 160\n60 161\n60 162\n60 163\n60 164\n60 165\n60 166\n60 167\n60 168\n60 169\n60 170\n60 171\n60 172\n60 173\n60 174\n60 175\n60 176\n60 177\n60 178\n60 179\n60 180\n60 181\n60 182\n60 183\n60 184\n60 185\n60 186\n60 187\n60 188\n60 189\n60 190\n60 191\n60 192\n60 193\n60 194\n60 195\n60 196\n60 197\n60 198\n60 199\n60 200\n60 201\n60 202\n60 203\n60 204\n60 205\n60 206\n60 207\n60 208\n60 209\n60 210\n60 211\n60 212\n60 213\n60 214\n60 215\n60 216\n60 217\n60 218\n60 219\n60 220\n60 221\n60 222\n60 223\n60 224\n60 225\n60 226\n60 227\n60 228\n60 229\n60 230\n60 231\n60 232\n60 233\n60 234\n60 235\n60 236\n60 237\n60 238\n60 239\n60 240\n60 241\n60 242\n60 243\n60 244\n60 245\n60 246\n60 247\n60 248\n60 249\n60 250\n60 251\n60 252\n60 253\n60 254\n60 255\n60 256\n60 257\n60 258\n60 259\n60 260\n60 261\n60 262\n60 263\n60 264\n60 265\n60 266\n60 267\n60 268\n60 269\n60 270\n60 271\n60 272\n60 273\n60 274\n60 275\n60 276\n60 277\n60 278\n60 279\n60 280\n60 281\n60 282\n60 283\n60 284\n60 285\n60 286\n60 287\n60 288\n60 289\n60 290\n60 291\n60 292\n60 293\n60 294\n60 295\n60 296\n60 297\n60 298\n60 299\n60 300\n60 301\n60 302\n60 303\n60 304\n60 305\n60 306\n60 307\n60 308\n60 309\n60 310\n60 311\n60 312\n60 313\n60 314\n60 315\n60 316\n60 317\n60 318\n60 319\n60 320\n60 321\n60 322\n60 323\n60 324\n60 325\n60 326\n60 327\n60 328\n60 329\n60 330\n60 331\n60 332\n60 333\n60 334\n60 335\n60 336\n60 337\n60 338\n60 339\n60 340\n60 341\n60 342\n60 343\n60 344\n60 345\n60 346\n60 347\n60 348\n60 349\n60 350\n60 351\n60 352\n60 353\n60 354\n60 355\n60 356\n60 357\n60 358\n60 359\n60 360\n60 361\n60 362\n60 363\n60 364\n60 365\n60 366\n60 367\n60 368\n60 369\n60 370\n60 371\n60 372\n60 373\n60 374\n60 375\n60 376\n60 377\n60 378\n60 379\n60 380\n60 381\n60 382\n60 383\n60 384\n60 385\n60 386\n60 387\n60 388\n60 389\n60 390\n60 391\n60 392\n60 393\n60 394\n60 395\n60 396\n60 397\n60 398\n60 399\n60 400\n60 401\n60 402\n60 403\n60 404\n60 405\n60 406\n60 407\n60 408\n60 409\n60 410\n60 411\n60 412\n60 413\n60 414\n60 415\n60 416\n60 417\n60 418\n60 419\n60 420\n60 421\n60 422\n60 423\n60 424\n60 425\n60 426\n60 427\n60"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asdf\") == \"\"\nassert solution(\"123\") == \"\"\nassert solution(\"12345\") == \"\"\nassert solution(\"1\") == \"\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'tleelte'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'qwerty'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'vvvvvv'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'abcde'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'tdkffhxhg'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\n\n\"\"\"\n\n\"\"\"\nResources\n[Google, Vowel Count](https://www.techiedelight.com/google-vowel-count/)\n[Google, Count Vowels](https://www.techiedelight.com/google-count-vowels/)\n[My Article, Count Vowels](https://www.myarticles.org/count-vowels/)\n\"\"\""
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('abcde') == 'abcde'"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\n\nfrom typing import List\n\nimport sys\n\nsys.path.append(\"..\")\n\nfrom utils import time_it\n\nfrom itertools import product\n\n\n@time_it\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aaa') == 'a'\nassert solution('a') == 'a'\nassert solution('aa') == 'a'\nassert solution('aaaa') == 'a'\nassert solution('a' * 50) == 'a' * 50\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\n\n\n-----"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 11 4') == '11'\nassert solution('1000 100 2') == '0'\nassert solution('0 1 1') == '0'\nassert solution('10 0 0') == '0'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 10 5\") == \"10\"\nassert solution(\"100 200 100\") == \"0\"\nassert solution(\"100 200 100\") == \"0\"\nassert solution(\"100 100 100\") == \"0\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 3 2') == '8'\nassert solution('5 7 5') == '2'\nassert solution('10 3 3') == '4'\nassert solution('10 4 6') == '2'\nassert solution('10 1 1') == '10'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('21 22 2') == '7'\nassert solution('100 100 100') == '999'\nassert solution('10 2 2') == '101'\nassert solution('1000 10 3') == '14'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 3 4') == '9'\nassert solution('10 5 6') == '14'\nassert solution('20 12 6') == '12'\n\"\"\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"1000 10 1000\") == \"1000\"\n\n-----Solution Explanation-----\nTime:\nSince the numbers of pieces of takoyaki are given in integers, we can compare them using the comparators.\nThe answer is the minimum of the time needed to make X pieces of takoyaki, given T minutes to do it.\nTime Complexity:\nSince there are at most 1000 numbers, this is O(1) in the worst case.\nSpace Complexity:\nO(1)\n\"\"\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3 6') == '12'\nassert solution('20 12 6') == '12'\nassert solution('20 1 6') == '24'\nassert solution('20 25 3') == '28'\nassert solution('5 3 10') == '25'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"2\"\nassert solution(\"9\") == \"3\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n''') == '2'\nassert solution('''5\n''') == '3'\nassert solution('''2\n''') == '1'\nassert solution('''8\n''') == '4'\nassert solution('''4\n''') == '2'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == 2\nassert solution('3') == 1\nassert solution('8') == 3\nassert solution('7') == 4\nassert solution('9') == 5\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == \"3\"\nassert solution('3') == \"3\"\nassert solution('4') == \"2\"\nassert solution('5') == \"2\"\nassert solution('6') == \"3\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == \"2\"\nassert solution('6') == \"1\"\nassert solution('5') == \"0\"\nassert solution('4') == \"-1\"\nassert solution('3') == \"-1\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '2'\nassert solution('3 3') == '3'\nassert solution('4 3') == '2'\nassert solution('1000000000 1000000000') == '1'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == 3\nassert solution(\"1 0\") == 0\nassert solution(\"9 9\") == 4\nassert solution(\"15 8\") == 2\nassert solution(\"3 9\") == 3\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == 3\nassert solution(\"2 3\") == 3\nassert solution(\"4 3\") == 2\nassert solution(\"6 3\") == 1\nassert solution(\"7 3\") == 0\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\nprint('passed')\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '3'\n\"\"\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 3\") == \"4\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"10 15\") == \"0\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"10 15\") == \"0\"\nassert solution(\"10 15\") == \"0\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"9 10\") == \"0\"\nassert solution(\"5 0\") == \"0\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 5') == '5'\nassert solution('1 6') == '6'\nassert solution('10 4') == '0'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '5'\nassert solution('4 12') == '16'\nassert solution('5 10') == '15'\nassert solution('4 3') == '6'\nassert solution('5 12') == '13'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '3'\nassert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('1 100') == '99'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 12') == '16'\nassert solution('2 4') == '2'\nassert solution('3 3') == '3'\nassert solution('12 4') == '14'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('2 5') == '3'\nassert solution('3 7') == '4'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == '7'\nassert solution('1 2') == '-1'\nassert solution('4 2') == '3'\nassert solution('5 1') == '6'\nassert solution('5 2') == '-4'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 12') == '16'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1 + 2 = 3'\nassert solution('2 2') == '2 - 2 = 0'\nassert solution('2 10') == '2 - 10 = -8'\nassert solution('10 10') == '0 - 10 = -10'\nassert solution('10 22') == '10 + 22 = 32'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 12\n''') == \"16\"\nassert solution('''2 4\n''') == \"0\"\nassert solution('''3 4\n''') == \"2\"\nassert solution('''7 14\n''') == \"0\"\nassert solution('''15 16\n''') == \"2\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"4 12\") == \"16\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"8 2\") == \"-6\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('aaaaa', 'aaaaa') == 'Yes'\nassert solution('abcd', 'cdab') == 'Yes'\nassert solution('abcd', 'cdca') == 'No'\nassert solution('abcd', 'cdcd') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n\nprint('Testcases Passed')\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'Yes'\nassert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\nassert solution('chokudaj') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudaiz') == 'No'\nassert solution('chokuda') == 'No'\nassert solution('chokudaizc') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ab', 'cd') == 'No'\nassert solution('ab', 'abcd') == 'Yes'\nassert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudai') == 'No'\nassert solution('abcd', 'abcd') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\n\"\"\""
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"chokudai\", \"chokudaiz\") == \"Yes\"\nassert solution(\"asdfgh\", \"asdfghjkl\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[::-1]\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\nprint('Testcases passed')"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2, 16) == 9\nassert solution(3, 4) == IMPOSSIBLE\nassert solution(5, 8) == 2\nassert solution(1, 1) == 1\nassert solution(8, 8) == 8\n\n\"\"\"\nA, B = map(int, stdin.readline().split())"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 16\") == \"9\""
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"8 5\") == \"IMPOSSIBLE\"\nassert solution(\"3 1\") == \"IMPOSSIBLE\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"6 3\") == \"9\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 16') == '9'\nassert solution('3 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 16') == '9'\nassert solution('10 1') == 'IMPOSSIBLE'\nassert solution('1 10') == '9'\nassert solution('5 6') == 'IMPOSSIBLE'\nassert solution('100 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[2]"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 16''') == '9'\nassert solution(\n'''0 2''') == 'IMPOSSIBLE'\nassert solution(\n'''7 4''') == '9'\nassert solution(\n'''10 1''') == 'IMPOSSIBLE'\nassert solution(\n'''1 1''') == '0'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 16''') == '9'\nassert solution('''2 18''') == 'IMPOSSIBLE'\nassert solution('''8 4''') == '9'\nassert solution('''8 9''') == 'IMPOSSIBLE'\nassert solution('''8 4''') == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == \"9\"\nprint(solution(input))\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 16') == '9'\nassert solution('4 24') == 'IMPOSSIBLE'\nassert solution('2 12') == '12'\nassert solution('16 8') == '9'\nassert solution('5 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('15') == 'No'\nassert solution('4') == 'No'\nassert solution('7') == 'Yes'\nassert solution('717') == 'Yes'\nassert solution('717') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(117) == \"Yes\"\n\nassert solution(100) == \"No\"\n\nassert solution(111) == \"Yes\"\n\nassert solution(2109) == \"Yes\"\n\nassert solution(2119) == \"No\""
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"108\") == \"No\"\nassert solution(\"737\") == \"Yes\"\nassert solution(\"2775\") == \"No\"\nassert solution(\"27\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.replace(\"7\", \"\").replace(\"1\", \"\").replace(\"2\", \"\")\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n\n'''"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('716') == 'Yes'\nassert solution('717') == 'No'\nassert solution('772') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'No'\nassert solution('5') == 'No'\nassert solution('8') == 'Yes'\nassert solution('90') == 'No'\nassert solution('99') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(117) == \"Yes\"\nassert solution(2234) == \"No\"\nassert solution(987) == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"113\") == \"No\"\nassert solution(\"337\") == \"Yes\"\nassert solution(\"717\") == \"No\"\nassert solution(\"7777\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(117) == \"Yes\"\nassert solution(22) == \"No\"\nassert solution(77) == \"No\"\nassert solution(1173) == \"Yes\"\nassert solution(1111) == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\n'''\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"8\") == \"No\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"112\") == \"No\"\nassert solution(\"1111\") == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1') == 'No'\nassert solution('101') == 'Yes'\nassert solution('1000') == 'No'\n\nimport sys\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\nassert solution('10') == 'No'\nassert solution('100') == 'Yes'\nassert solution('1000') == 'No'\nassert solution('10001') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1'''\n) == 'Yes'\nassert solution(\n'''0'''\n) == 'No'\nassert solution(\n'''2'''\n) == 'Yes'\nassert solution(\n'''10'''\n) == 'No'\nassert solution(\n'''100'''\n) == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(55) == \"No\"\nassert solution(8) == \"Yes\"\nassert solution(10) == \"No\"\nassert solution(16) == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('4') == 'No'\nassert solution('21') == 'No'\nassert solution('123456789') == 'Yes'\nassert solution('100') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('10') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('101') == 'Yes'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 1 0 0') == '-1 1 0 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 0 0') == '0 0 0 0 0'\nassert solution('-1 1 -1 0') == '-1 1 0 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('-1 1 -1 0') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('-1 1 -1 0') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('-3 5 8 1') == '1 1 1 -1'\nassert solution('1 3 4 5') == '-1 1 -1 -1'\nassert solution('0 1 0 2') == '-1 -1 -1 1'\nassert solution('-4 -2 0 2') == '-1 -1 -1 1'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 2\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 3\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 4\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 5\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"-1,1,-1,0\"\nassert solution('0 0 0 1') == \"-1,1,-1,0\"\nassert solution('0 0 1 1') == \"-1,-1,-1,1\"\nassert solution('0 1 0 1') == \"-1,-1,-1,1\"\nassert solution('0 1 1 1') == \"-1,-1,-1,1\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('2 2 2 2') == '2 2 -2 -2'\nassert solution('2 2 1 2') == '-1 1 -1 0'\nassert solution('2 1 1 1') == '-1 -1 -1 -1'\nassert solution('1 1 2 1') == '-1 -1 -1 -1'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 1 0') == '-1 1 0 0'\nassert solution('0 0 1 1') == '-1 1 1 0'\nassert solution('0 0 1 2') == '-1 1 1 2'\nassert solution('0 0 1 3') == '-1 1 1 3'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('-1 -1 -1 0') == '0 0 0 -1'\nassert solution('-1 -1 -1 0') == '0 0 0 -1'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\n\"\"\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 4'\nassert solution('blue') == '2 4'\nassert solution('blue red') == '2 4'\nassert solution('red blue red') == '1 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    'red blue') == '2 4'\nassert solution(\n    'red blue') == '2 4'\nassert solution(\n    'blue red') == '3 4'\nassert solution(\n    'blue red') == '3 4'\nassert solution(\n    'blue') == '0 1'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 1'\nassert solution('blue') == '1 2'\nassert solution('blue blue') == '1 1'\nassert solution('red blue red') == '2 1'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcdefg') == 'No'\nassert solution('abcabcabcabc') == 'Yes'\nassert solution('defgabc') == 'No'\nassert solution('abacdefg') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabc') == 'No'\nassert solution('abcbabc') == 'No'\nassert solution('abcabcabcabc') == 'Yes'\nassert solution('abcabcabcabcabc') == 'No'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabcabc') == 'No'\nassert solution('abcabcabcabcabcabcabcabcabc') == 'Yes'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc') == 'Yes'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('a') == 'No'\nassert solution('ba') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n\"\"\"\n\nN = int(input())\nS = input()"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abc') == \"Yes\"\nassert solution('abcabc') == \"Yes\"\nassert solution('abcd') == \"No\"\nassert solution('abcddc') == \"No\"\nassert solution('abcddcba') == \"Yes\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcabc') == \"Yes\"\nassert solution('abcabcbc') == \"No\"\nassert solution('abcabcbcab') == \"Yes\"\nassert solution('abcabcbcabcabcbc') == \"Yes\"\nassert solution('aabaa') == \"Yes\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 2 1\") == \"3.000000 0\"\nassert solution(\"1 3 2 4\") == \"4.000000 1\"\nassert solution(\"1 3 2 4\") == \"4.000000 0\"\nassert solution(\"1 3 1 4\") == \"2.000000 1\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 1 2') == '3.000000 0'\nassert solution('4 4 4 4') == '3.000000 0'\nassert solution('4 4 4 4') == '0.000000 1'\nassert solution('4 5 4 4') == '1.000000 1'\nassert solution('1000000 1000000 100000000 100000000') == '1000000.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3.000000 0\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()\n\"\"\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 1') == '0.000000 1'\nassert solution('0 0 0 0') == '0.000000 0'\nassert solution('0 0 0 0') == '0.000000 0'\nassert solution('0 0 10 10') == '10.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('10 10 1 1') == '5.000000 0'\nassert solution('10 10 1 1') == '5.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 2\") == '3.000000 0'\nassert solution(\"1 1 1 1\") == '0.000000 0'\nassert solution(\"2 3 1 2\") == '3.000000 0'\nassert solution(\"2 3 1 2\") == '3.000000 0'\nassert solution(\"1 1 1 1\") == '0.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split()\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\\n2 3 1 2\\n2 3 1 2\\n2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\\n2 3 1 2\\n2 3 1 2\\n2 3 1 2\\n2 3 1 2\\n2 3 1 2\\n2 3 1 2\") == \"3.000000 0\"\nassert solution(\"3 3 1 2\\n3 3 1 2\\n3 3 1 2\\n3 3 1 2\\n3 3 1 2\") == \"3.000000 0\"\nassert solution(\"3 3 1 2\\n3 3 1 2\\n3 3 1 2\\n3 3 1 2\\n3 3 1 2\\n3 3 1 2\\n3 3 1 2\") == \"3.000000 0\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nG W Y P Y W''') == 'Four'\nassert solution('''2\nP W''') == 'Three'\nassert solution('''3\nP P G''') == 'Three'\nassert solution('''8\nP W G P G P G P P P P''') == 'Six'\nassert solution('''7\nP W G G P G P G P''') == 'Six'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('G W Y P Y W') == \"Four\"\nassert solution('G W Y P P W') == \"Three\"\nassert solution('G W Y P W P') == \"Four\"\nassert solution('G W Y P W P G') == \"Three\"\nassert solution('G W Y P W P G G') == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\nY') == 'Three'\nassert solution('5\\nY W Y W P') == 'Four'\nassert solution('1\\nP') == 'Three'\nassert solution('10\\nP P P P W W P') == 'Four'\nassert solution('6\\nP P P P W W P') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"Three\") == \"Three\"\nassert solution(\"Four\") == \"Four\"\nassert solution(\"G W Y P Y W\") == \"Four\"\nassert solution(\"P W G\") == \"Three\"\nassert solution(\"P W G Y\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('G W Y P Y W\\n') == 'Four'\nassert solution('G W Y P P Y W\\n') == 'Three'\nassert solution('G W Y P G W\\n') == 'Three'\nassert solution('G W Y P G G W\\n') == 'Three'\nassert solution('G W Y P G P W\\n') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P P P P P') == 'Three'\nassert solution('W W W W W') == 'Three'\nassert solution('W W W P') == 'Three'\nassert solution('G G G G G') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Three') == 'Three'\nassert solution('Four') == 'Four'\nassert solution('ThreeFour') == 'Four'\nassert solution('ThreeThree') == 'Three'\nassert solution('ThreeFive') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n6\nP W G Y P Y W\n''') == 'Four'\nassert solution('''\\\n1\nP\n''') == 'Three'\nassert solution('''\\\n2\nP G\n''') == 'Three'\nassert solution('''\\\n3\nP W\n''') == 'Three'\nassert solution('''\\\n4\nW Y\n''') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Three\"\nassert solution(input()) == \"Four\"\nassert solution(input()) == \"Four\"\nassert solution(input()) == \"Three\"\nassert solution(input()) == \"Three\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n6 3 2') == '6'\nassert solution('5\\n2 3 1 3 4 2') == '2'\nassert solution('5\\n6 3 1 3 4 2') == '2'\nassert solution('5\\n2 3 1 3 4 2') == '2'\nassert solution('10\\n6 3 2') == '6'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n3 4 2') == 2\nassert solution('3 1 3\\n2 3 4') == 3\nassert solution('5 3 3\\n1 2 6 10 3') == 2\nassert solution('1 2 3\\n1 2 3') == 0\nassert solution('1 1 1\\n1 2 2') == 1\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"6 3 2\n2 3 1 3 4 2\n\"\"\") == \"6\"\n\nassert solution(\"\"\"5 3 3\n1 2 4 2 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"5 5 6\n1 2 6 10 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3 4 2\n1 2 3 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"5 6 2\n1 2 6 10 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\n\n\n\n>>> import sys\n>>> sys.setrecursionlimit(1000000)\n>>> sys.getrecursionlimit()\n1000000\n\n>>> import sys\n>>> sys.getrecursionlimit()\n1000000"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 3 2\") == \"6\"\nassert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\"\nassert solution(\"1 2 6 10 3\") == \"2\""
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''2\n3 4\n3 4\n''') == '1'\nassert solution('''1\n1\n''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''4\n3 4 2 4\n1 3 2 4\n''') == '0'\nassert solution('''7\n9 4 6 8 3\n4 5 3 5 4\n3 4 2 4\n2 4 2 4\n1 3 2 4\n1 3 2 4\n''') == '2'\nassert solution('''7\n8 4 3 6 5\n4 3 2 2 4\n3 4 3 5 4\n2 4 3 3 4\n1 3 3 4 5\n1 3 2 4\n2 4 4 2\n''') == '1'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''4\n2 4 2 2\n2 3 4 3\n''') == '1'\nassert solution('''2\n4 2 2 4\n2 3 4 3\n''') == '0'\nassert solution('''2\n2 3 4 4\n4 5 4 3\n''') == '1'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"7\"\nassert solution(\"4\\n4 5 4 1 3\") == \"0\"\nassert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\") == \"7\"\nassert solution(\"5\\n1 3 2 4\\n1 3 2 4\") == \"0\"\nassert solution(\"5\\n1 3 2 4\\n1 3 2 4\") == \"0\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n4 5 4 1 3\\n4 5 4 1 3') == '0'\nassert solution('4\\n4 5 4 1 3\\n4 5 4 1 3') == '7'\nassert solution('1\\n3 2 4 4\\n4 5 4 1 3') == '0'\nassert solution('4\\n4 5 4 1 3\\n4 5 4 1 3') == '7'\nassert solution('1\\n3 2 4 4\\n1 3 2 4 4') == '1'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''10\n743 2 1375 903 5961 5643 7591 10921 2516 9917 8808\n2334 3903 6654 894 8284 6699 2419 3445 72216 9925\n9016 7863 7875 9862 13897 10889 9287 65499 6807\n7796 4754 6642 3284 4599 7767 7040 4825 4914\n8798 15977 2660 5048 5724 4975 83773 4935\n9608 7559 7872 10047 9936 6064 3547 85439\n6705 4135 6796 7923 8738 5791 3710 5791\n7937 11582 8741 7841 93069 7683 8738\n8020 4703 5705 78150 8128 5946 87150 961\n8123 7597 6601 8417 9879 61416 8076\n81919 12876 6857 9118 6937 96510 7469\n83938 1013 1001 9896 68831 7096\n8738 10027 9999 58120 69906 7906\n7906 24194 5675 82783 96624 7767\n7040 69913 7776 5969 94958 6434\n91479 7683 7875 9862 13897 10889 9287\n6699 7923 7875 9862 13897 10889 9287\n9016 7863 7875 9862 13897 10889 9287\n''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2\\n1 2') == '2'\nassert solution('3\\n1 3 2\\n1 3 2') == '1'\nassert solution('4\\n1 3 2 4\\n1 3 2 4') == '0'\nassert solution('5\\n1 3 2 4 5\\n1 3 2 4 5') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n4 1 3 2\\n4 5 4 1 3') == '7'\nassert solution('2\\n4 1 3 2\\n4 5 4 1 3') == '0'\nassert solution('2\\n1 3 2 4\\n1 3 2 4') == '0'\nassert solution('3\\n1 2 4 3\\n2 1 3 4') == '1'\nassert solution('2\\n1 1 1 1\\n1 1 1 1') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '''7'''\nassert solution('''4 8 2 6 2''') == '''0'''\nassert solution('''4 5 4 1 3''') == '''7'''\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '''0'''\n\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\n\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = []\n\nfor i in range(1, n):\n    if a[i - 1]!= a[i]:\n        b.append(a[i - 1])\n        b.append(a[i])\n    else:\n        b.append(a[i])\n    if a[i]!= a[i + 1]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 2]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 3]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 4]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 5]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 6]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 7]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 8]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 9]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n    if a[i]!= a[i + 10]:\n        b.append(a[i])\n    else:\n        b.append(a[i] + 1)\n\nprint(*b)\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == input()\n\n\"\"\"\n\n\"\"\"\n    a = list(map(int, stdin.split()))\n    \n    for i in xrange(1, len(a)):\n        a[i] = 2*a[i-1]\n    \n    return \" \".join(map(str, a))\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 4 5 10\n\"\"\") == \"1 1 3 5 9\"\n\nassert solution(\n\"\"\"\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n\"\"\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\nassert solution(\n\"\"\"\n2\n1 2\n1 2\n\"\"\") == \"1 1\"\n\nassert solution(\n\"\"\"\n1\n1 2\n1 2\n\"\"\") == \"1 1\"\n\nassert solution(\n\"\"\"\n2\n1 2\n2 1\n\"\"\") == \"1 1\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 4 5 10''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n'''\nimport sys\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\".join(input().split())) == \"\".join(input().split())\n\nIf you have solved the problem and want to check yourself, you can use this one:\n\nhttps://www.codewars.com/kata/mishka-s-adjacent-replacements-algorithm\n\n\n\n'''"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '1 1 3 5 9'\nassert solution('''10''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n'''\n1. The first line of the input contains one integer number $n$ ($1 \\le n \\le 1000$) \u2014 the number of elements in Mishka's birthday present (surprisingly, an array).\n2. The second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) \u2014 the elements of the array.\n'''\n\n\"\"\""
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5 4\n1 2\n3 4\n5 4\n3 5\n\"\"\") == '1'\n\nassert solution(\n\"\"\"\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n\"\"\") == '2'\n\nassert solution(\n\"\"\"\n6 4\n1 2\n3 4\n5 4\n3 5\n1 2\n2 3\n3 4\n4 5\n5 4\n5 2\n3 2\n3 1\n\"\"\") == '0'\n\nassert solution(\n\"\"\"\n13 19\n1 2\n1 3\n1 4\n2 1\n2 3\n2 4\n3 2\n3 4\n3 5\n4 3\n4 2\n4 1\n5 4\n5 2\n5 6\n6 5\n6 1\n6 7\n7 1\n7 2\n7 4\n7 5\n7 6\n7 8\n8 7\n8 6\n8 5\n8 4\n9 1\n9 2\n9 4\n9 5\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n11 1\n11 2\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n12 8\n12 9\n12 10\n13 1\n13 2\n13 3\n13 4\n13 5\n13 6\n13 7\n13 8\n13 9\n13 10\n13 11\n13 12\n14 1\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n14 8\n14 9\n14 10\n14 11\n14 12\n14 13\n15 2\n15 3\n15 4\n15 5\n15 6\n15 7\n15 8\n15 9\n15 10\n15 11\n15 12\n15 13\n15 14\n16 1\n16 2\n16 3\n16 4\n16 5\n16 6\n16 7\n16 8\n16 9\n16 10\n16 11\n16 12\n16 13\n16 14\n17 1\n17 2\n17 3\n17 4\n17 5\n17 6\n17 7\n17 8\n17 9\n17 10\n17 11\n17 12\n17 13\n17 14\n\"\"\") == '0'\n\nassert solution(\n\"\"\"\n4 1\n1 2\n1 3\n1 4\n3 2\n3 4\n\"\"\") == '2'"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('5 10\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n5 11\\n11 9\\n9 10\\n9 11\\n5 11\\n11 7\\n7 11\\n11 5\\n5 10\\n10 11\\n11 10\\n11 5\\n11 9\\n9 7\\n7 11\\n11 9\\n9 10\\n10 11\\n11 10\\n11 7\\n7 11\\n11 10\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n8 7\\n7 11\\n11 8\\n8 9\\n9 10\\n10 11\\n11 8\\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '2\\n'\nassert solution('3 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '3\\n'\nassert solution('6 5\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6') == '0\\n'\nassert solution('5 6\\n1 2\\n3 4\\n4 5\\n5 6') == '1\\n'\nassert solution('3 5\\n1 2\\n2 3\\n3 4\\n4 5') == '2\\n'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5''') == \"1\"\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == \"2\"\n\n'''\nNotes:\nAll possible edges are bi-directional, which means that there is no edge in the graph that is not bi-directional.\n\nInput sample is valid in OJ, but we get the wrong result in LeetCode.\n\nFor example, let's say that we add an edge from node 1 to node 2 and node 2 to node 1:\n\n1 -> 2\n2 -> 1\n\nThis edge is bi-directional, but it is not valid.\n\nThere are some edges which are bi-directional, but we can't determine which edges are bi-directional.\n\nIn other words, we have only one edge in the graph, and this edge is bi-directional but it is not valid.\n\nSo our algorithm should find only one connected component, and it's also a cycle.\n\nIn the second sample, we have two connected components with both of them being cycles: $[3, 4, 5]$ and $[10, 11, 9, 15]$.\n\nThe second example is a graph consisting of $17$ and $15$ vertices, and $14$ edges. Each vertex can connect to two other vertices, so there is only one edge between two vertices: $[3, 4, 5]$ and $[10, 11, 9, 15]$. There are two connected components: $[3, 4, 5]$ and $[10, 11, 9, 15]$. In the third example, we have two connected components: $[3, 4, 5]$ and $[10, 11, 9, 15]$.\n\nIn the fourth example, we have two connected components: $[3, 4, 5]$ and $[10, 11, 9, 15]$.\n\nIn the fifth example, we have one connected component: $[3, 4, 5]$.\n'''\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4\\n5 4\\n3 5') == '1'\nassert solution('1 1\\n1 2\\n2 1') == '1'\nassert solution('4 6\\n1 4\\n1 3\\n3 4\\n3 4\\n1 2\\n3 4\\n1 2\\n4 3\\n1 3') == '3'\nassert solution('7 12\\n1 6\\n6 7\\n2 5\\n5 7\\n3 4\\n4 7\\n4 6\\n5 7\\n6 7\\n1 2\\n1 3\\n1 4\\n1 5\\n2 6\\n3 5\\n4 6\\n5 7') == '2'\nassert solution('8 10\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6\\n5 7\\n6 7\\n6 8\\n7 8') == '3'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\") == 1\nassert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n3 5\") == 1\nassert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n3 5\\n3 5\\n3 5\") == 2\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n0\n    return stdin\n\nassert solution(\"1\\n2\") == 1\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2') == '2'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'\nassert solution('2 1\\n1 2\\n2 1') == '2'\nassert solution('2 2\\n1 2\\n2 1') == '2'\nassert solution('2 2\\n2 1\\n1 2') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4') == '1'\nassert solution('17 15') == '2'\nassert solution('1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'\n\n\n-----\n\n\"\"\""
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6''') == '2'\nassert solution('''3 2\n1 2\n1 3\n2 1''') == '1'\nassert solution('''4 4\n1 2\n1 3\n2 1\n2 3\n1 3''') == '2'\nassert solution('''7 6\n2 6\n2 3\n5 4\n4 3\n4 5\n2 3\n5 4\n4 3\n4 5''') == '4'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == result_for_sample_1\nassert solution(stdin) == result_for_sample_2\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\\n5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n2 1\\n1 3\\n3 2\\n\") == \"4\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n2 1\\n1 3\\n\") == \"0\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n2 1\\n1 3\\n3 2\\n\") == \"0\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2\\n1 3\") == \"\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n1 3') == '1'\nassert solution('5 3\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5') == '4'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1') == '1'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1') == '1'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1') == '1'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n2 1 0') == '0'\nassert solution('3\\n2 0 0\\n2 1 2\\n1 2') == '1'\nassert solution('3\\n1 0 0\\n1 2\\n1 3') == '0'\nassert solution('3\\n2 0 0\\n2 1 2\\n1 3') == '1'\nassert solution('3\\n2 0 0\\n2 1 2\\n1 3\\n2 3') == '2'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n2') == '0'\nassert solution('3\\n3') == '1'\nassert solution('4\\n4') == '0'\nassert solution('5\\n5') == '1'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys\nsys.setrecursionlimit(10000)"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\n\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''\n3\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n''') == '4'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n4\n1 0 0 0 2\n1 2\n2 3\n3 4\n2 4\n''') == '1'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\naz\nbf\n''') == 'bc'\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"qoztvz\"\nassert solution(\"nijfvj\") == \"tvqhwp\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aaz') == 'az'\nassert solution('abcd') == 'bcd'\nassert solution('afogk') == 'alvuw'\nassert solution('nijfvj') == 'tvqhwp'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nprint(\"Test success.\")\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\naz\\nbf\\n') == 'bc'\nassert solution('5\\nafogk\\nasdji\\n') == 'alvuw'\nassert solution('6\\nnijfvj\\ntvqhwp\\n') == 'qoztvz'\nassert solution('1\\nab\\nac\\n') == 'a'\nassert solution('4\\na\\nb\\nc\\nd\\n') == 'b'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nassert solution('''1\nab\naa''') == 'a'\nassert solution('''2\na\naa''') == 'a'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\naz\\nbf\\n') == 'bc'\nassert solution('5\\nafogk\\nasdji\\n') == 'alvuw'\nassert solution('6\\nnijfvj\\ntvqhwp\\n') == 'qoztvz'\n\n\n\"\"\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2\naz\nbf''') == 'bc'\n\nassert solution(\n'''5\nafogk\nasdji''') == 'alvuw'\n\nassert solution(\n'''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n15 13 15 15 12') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12') == 'NO'\nassert solution('5 4\\n30 30 30 30 30') == 'YES\\n1 2 3 4'\nassert solution('4 4\\n20 10 40 30') == 'NO'\nassert solution('4 4\\n30 30 30 30') == 'YES\\n1 2 3 4'"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\\n1 2 3 4\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"2 2\") == \"YES\\n1 2\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"\nassert solution(\"5 2\\n20 10 40 30\\n\") == \"NO\\n\"\nassert solution(\"5 2\\n20 10 40 30\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == 'YES'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == 'NO'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == 'YES'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == 'NO'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == 'YES'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('4 4\\n20 10 40 30\\n') == 'NO'\nassert solution('1 2 3 4 5\\n7 9 11 22 19') == 'YES\\n3 4 5'\nassert solution('1 2 3 4 5\\n7 9 11 22 19\\n') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n15 15 15 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('1\\n5\\n15 15 15 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('1\\n5\\n15 15 15 15 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('1\\n5\\n15 15 15 15 15 15 15 12\\n') == 'NO'\nassert solution('1\\n5\\n
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"\nassert solution(\"4 5\\n20 10 40 30\\n\") == \"NO\"\nassert solution(\"5 6\\n20 10 40 30 40 40 50\\n\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\n\nassert solution('''5\n1 2 4 0 2\n''') == 'NO'\n\nassert solution('''3\n2 0 1\n''') == 'NO'\n\nassert solution('''15\n10 10 10 9 9 9 8 8 7 7 6 6 5 5 4 4 3 3 2 2 1 1\n''') == 'NO'\n\nassert solution('''0\n0\n''') == 'NO'"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2 4 0 2\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"10\\n1 2 4 0 2\") == \"NO\"\nassert solution(\"10\\n1 2 4 0 2\") == \"NO\"\nassert solution(\"10\\n1 2 4 0 2\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\\n\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\\n\") == \"NO\"\nassert solution(\"9\\n5 1 3 6 8 2 9 0 10\\n\") == \"NO\"\nassert solution(\"5\\n1 2 4 0 2\\n\") == \"NO\"\nassert solution(\"5\\n1 2 4 0 2\\n\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''9\n5 1 3 6 8 2 9 0 10\n''') == \"YES\"\nassert solution(\n'''5\n1 2 4 0 2\n''') == \"NO\"\nassert solution(\n'''10\n1 2 4 0 2 10 10 10 10 10 10 10\n''') == \"NO\"\nassert solution(\n'''7\n1 2 4 0 2 10 10 10 10 10\n''') == \"NO\"\nassert solution(\n'''8\n1 2 4 0 2 10 10 10 10 10\n''') == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9\\n5 1 3 6 8 2 9 0 10') == 'YES\\n1 0 0 0 0 1 0 1 0'\nassert solution('5\\n1 2 4 0 2') == 'NO'\nassert solution('10\\n1 2 4 0 2 3') == 'NO'\nassert solution('5\\n1 2 4 0 2') == 'NO'\nassert solution('5\\n1 2 4 0 2 3') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''9\n1 2 4 0 2''') == 'NO'\nassert solution('''10\n1 2 4 0 2''') == 'NO'\nassert solution('''10\n1 2 4 0 2''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 0 10\") == \"YES\"\nassert solution(\"1 2 4 0 2\") == \"NO\"\nassert solution(\"2 1 4 0 2\") == \"NO\"\nassert solution(\"2 1 4 0 2\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\\n\") == \"YES\\n1 0 0 0 0 1 0 1 0\\n\"\nassert solution(\"10\\n1 2 4 0 2\\n\") == \"NO\\n\""
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n2') == '1'\nassert solution('2\\n1\\n2\\n1') == '2'\nassert solution('1\\n3\\n2\\n1') == '0'\nassert solution('1\\n3\\n2\\n1\\n2') == '2'\nassert solution('1\\n2\\n1\\n2') == '1'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\n'''\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''6\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''7\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '0'\nassert solution('''8\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '1134'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('inputs/1') == '3'\nassert solution('inputs/2') == '0'\nassert solution('inputs/3') == '1134'\nassert solution('inputs/4') == '0'\nassert solution('inputs/5') == '4'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\n'''\n\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n5 1 2 3 4\n1 1 1 1 1\n5 5 5 5 5\n1 1 1 1 1\n5 5 5 5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '0'\nassert solution('''3\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '3'\nassert solution('''2\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''2\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '0\\n0'\nassert solution('''3\n5 8 1 2\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '3\\n0\\n1000000000\\n0'\nassert solution('''4\n5 8 1 2\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '3\\n0\\n1000000000\\n0'\n'''\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nassert solution('''24''') == '362880'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4''') == '1'\nassert solution('''6''') == '6'\nassert solution('''10''') == '30'\nassert solution('''20''') == '12164510040883200'\nassert solution('''12''') == '360360360'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nassert solution('''11''') == '3628800'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nassert solution('''8''') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n\n'''"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n') == '3'\nassert solution('2\\n') == '1'\nassert solution('8\\n') == '1260'\nassert solution('20\\n') == '12164510040883200'"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution(stdin))\nprint(solution("
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('cccbc') == ''\nassert solution('u') == ''\nassert solution('uu') == ''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('uu') == ''\nassert solution('aaabab') == 'b'\nassert solution('abc') == 'a'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''15 3\ncccaabababaccbc\n''') == 'cccbbabaccbc'\nassert solution('''15 9\ncccaabababaccbc\n''') == 'cccccc'\nassert solution('''1 1\nu\n''') == ''\n'''"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('u') == 'def'\n\n\n\"\"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('u') == 'defghijklmnopqrstuvwxyz'\nassert solution('cccaabababaccbc') == 'cccbbabaccbc'\nprint(solution(input()))\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\nassert solution(\"\"\"5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"20\"\nassert solution(\"\"\"5 4\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"18\"\nassert solution(\"\"\"5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"18\"\nassert solution(\"\"\"5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"20\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\\n0\") == \"0\"\nassert solution(\"0\\n0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\\n2\\n2\") == \"5\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''10 5\n1 3 1 3 1 1 3 1 3 1 3\n1 3\n1 3\n1 3\n2 3\n1 3\n1 3\n1 3\n1 3\n1 3\n2 3\n2 3\n2 3\n''') == '29'\nassert solution('''10 5\n1 3 1 3 1 1 3 1 3 1 3\n1 3\n1 3\n1 3\n2 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n2 3\n2 3\n2 3\n''') == '29'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '8'\nassert solution('''\n5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''\n5 5\n1 2 0 1 1\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '11'\nassert solution('''\n2 2\n1 1\n''') == '1'\nassert solution('''\n4 3\n1 2 0 2\n3 5\n4 2\n2 5\n''') == '8'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n4 2 1 3 2\") == \"20\"\nassert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"0\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\") == \"3\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\") == \"3\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\nassert solution('''4 1\n2 2\n2 3\n2 4\n3 4\n''') == '7'\nassert solution('''4 1\n2 2\n2 3\n2 4\n3 4\n''') == '7'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 6\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\nassert solution('''3 3\n1 5\n2 2\n3 3\n''') == '20'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 8') == '3'\nassert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '3'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '-1'\nassert solution('3 3\\n*.*\\n.*.\\n*.*\\n') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5') == '3'\nassert solution('6 8') == '3'\nassert solution('3 3') == '2'\nassert solution('5 5') == '3'\nassert solution('5 5') == '3'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result_correct\n\"\"\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '-1'\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '-1'\nassert solution('5 5') == '-1'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\nassert solution('''\n5 5\n....*...\n....*...\n....*...\n....*...\n....*...\n''') == '-1'\nassert solution('''\n5 5\n...*...\n***...\n.*...\n.*...\n.....\n''') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 8\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\") == \"3\\n3 3 1\\n3 4 1\"\nassert solution(\"3 3\") == \"-1\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2 2\n.*.\n*.*\n''') == '-1'\nassert solution(\n'''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\nassert solution(\n'''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\nassert solution(\n'''\n5 5\n.****\n.***.\n.*.*.\n.*.*.\n.*****\n''') == '3'\nassert solution(\n'''\n3 3\n.*.*\n.*.*\n.*.*\n''') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n*.*\n.*.\n*.*''') == '3'\n\nassert solution('''4 3\n....\n...**\n..****\n....*''') == '-1'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '-1'\n\nassert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '3'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"/home/maksim/Downloads/test_one.txt\", \"r\").read()) == \"3\\n3 5 2\"\nassert solution(open(\"/home/maksim/Downloads/test_two.txt\", \"r\").read()) == \"2\\n3 3 1\"\nassert solution(open(\"/home/maksim/Downloads/test_three.txt\", \"r\").read()) == \"-1\"\nassert solution(open(\"/home/maksim/Downloads/test_four.txt\", \"r\").read()) == \"-1\"\nassert solution(open(\"/home/maksim/Downloads/test_five.txt\", \"r\").read()) == \"3\\n3 5 2\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3'*100) == 'Yes'\nassert solution('2'*100) == 'No'\nassert solution('1'*100) == 'Yes'\nassert solution('10'*100) == 'Yes'\nassert solution('100'*100) == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('575') == 'Yes'\nassert solution('525') == 'Yes'\nassert solution('939') == 'Yes'\nassert solution('501') == 'No'\nassert solution('123') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"5755\") == \"No\"\nassert solution(\"5755\") == \"No\"\nassert solution(\"575\") == \"Yes\"\nassert solution(\"123456789\") == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('575') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('8') == 'No'\nassert solution('6') == 'No'\nassert solution('9') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('575') == 'Yes'\nassert solution('575') == 'Yes'\nassert solution('575') == 'Yes'\nassert solution('575') == 'Yes'\nassert solution('543') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(575) == \"Yes\"\nassert solution(1234567) == \"No\"\nassert solution(5) == \"Yes\"\nassert solution(100) == \"No\"\nassert solution(12345) == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"575\") == 'Yes'\nassert solution(\n\"9\") == 'No'\nassert solution(\n\"555\") == 'Yes'\nassert solution(\n\"4433\") == 'Yes'\nassert solution(\n\"4421\") == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9') == '9'\nassert solution('1') == '1'\nassert solution('5') == 'No'\nassert solution('7') == 'No'\nassert solution('9a') == 'No'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 6\") == \"Alice\"\n\nassert solution(\"8 7\") == \"Bob\"\n\nassert solution(\"4 4\") == \"Draw\"\n\nassert solution(\"1 1\") == \"Draw\"\n\nassert solution(\"13 7\") == \"Alice\""
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 5') == 'Bob'\nassert solution('1 9') == 'Draw'\nassert solution('1 9') == 'Draw'\nassert solution('1 9') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 9') == 'Bob'\nassert solution('6 6') == 'Draw'\nassert solution('6 7') == 'Bob'\nassert solution('9 3') == 'Alice'\n\n\"\"\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('2 6') == 'Bob'\nassert solution('9 8') == 'Draw'\nassert solution('1 1') == 'Draw'\nassert solution('7 5') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('9 9') == 'Draw'\nassert solution('10 5') == 'Bob'\nassert solution('8 7') == 'Bob'\nassert solution('11 5') == 'Alice'"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('3 5') == 'Bob'\nassert solution('5 5') == 'Draw'\nassert solution('1 1') == 'Draw'\nassert solution('7 5') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('3 7') == 'Alice'\nassert solution('1 1') == 'Draw'\nassert solution('5 9') == 'Bob'\nassert solution('1 1') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Alice'\n\nassert solution('8 6') == 'Alice'\n\nassert solution('8 3') == 'Bob'\n\nassert solution('2 2') == 'Draw'\n\nassert solution('8 6 7 9 11 12 13 1') == 'Alice'"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"h,y,e,l,l,o,,n,e,,,,y,u,r,e,,,,o,n,y,,,,,,n,e
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('spam,eggs,spam') =='spam eggs spam'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('one,two,three,four,five,six') == 'one two three four five six'\nassert solution('one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eighteen,nineteen,twenty') == 'one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('hi,my,name,is,eddy') == 'hi my name is eddy'\nassert solution('hello,world,today,is,famous') == 'hello world today is famous'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"hello,world,this,is,a,test\") == \"hello world this is a test\"\nassert solution(\"h\") == \"\"\nassert solution(\"h,e,l,l,o\") == \"hello\"\nassert solution(\"h,e,l,l,o,,\") == \"hello,\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"lucky,november,december\") == \"lucky november december\"\nassert solution(\"lucky,november,december\") == \"lucky november december\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''happy,newyear,enjoy''') == \"happy newyear enjoy\"\nassert solution('''happy,newyear,enjoy''') == \"happy newyear enjoy\"\nassert solution('''a,b,c,d,e''') == \"a b c d e\"\nassert solution('''a,b,c,d,e''') == \"a b c d e\"\nassert solution('''a,b,c,d,e''') == \"a b c d e\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,new,year,enjoy') == 'happy new year enjoy'\nassert solution('h,y,ya,y,e,r,a,n,e,j,e,y,ow,e,r,d,o,l') == 'h y ya y e r a n e j e y o w e r d o l'\nassert solution('h,y,ya,y,e,r,a,n,e,j,e,y,ow,e,r,d,o,l') == 'h y ya y e r a n e j e y o w e r d o l'\nassert solution('h,y,ya,y,e,r,a,n,e,j,e,y,ow,e,r,d,o,l') == 'h y ya y e r a n e j e y o w e r d o l'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'happy newyear enjoy'\nprint('test 1 passed')\n\nassert solution(\"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\") == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nprint('test 2 passed')\n\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\") == 'abcdefghijklmnopqrstuvwxyz'\nprint('test 3 passed')\n'''\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n2 2\n2 0\n0 0\n-1 0\n1 0\n\"\"\") == \"2\\n1\\n\"\nassert solution(\n    \"\"\"\n2 2\n2 0\n0 0\n-1 0\n1 0\n\"\"\") == \"1\\n1\\n\"\nassert solution(\n    \"\"\"\n2 2\n2 0\n0 0\n1 0\n1 0\n\"\"\") == \"2\\n1\\n\"\nassert solution(\n    \"\"\"\n3 3\n3 2\n-1 0\n1 0\n1 2\n\"\"\") == \"2\\n1\\n\"\nassert solution(\n    \"\"\"\n3 3\n2 1\n-1 0\n0 1\n1 0\n0 0\n\"\"\") == \"1\\n2\\n\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1\\n'\nassert solution('2 2\\n2 0\\n0 0\\n0 0\\n0 0') == '1\\n1\\n'\nassert solution('3 4\\n2 3\\n2 1\\n3 1\\n3 2\\n3 3') == '2\\n3\\n'\nassert solution('4 5\\n4 3\\n4 1\\n2 4\\n3 4\\n4 3') == '1\\n3\\n'\nassert solution('3 5\\n1 3\\n2 3\\n3 3\\n3 4\\n4 3') == '2\\n4\\n'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n0 0\") == \"1\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n1 1\") == \"1\\n2\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n10 10\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 0\") == \"1\\n1\\n\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '1'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2'\nassert solution('4 4\\n1 -1\\n1 1\\n1 -1\\n-1 1\\n-1 -1\\n-1 -1\\n1 -1\\n1 1\\n') == '2\\n3\\n2\\n1'\nassert solution('10 10\\n-2 -2\\n-1 -3\\n0 0\\n1 1\\n2 2\\n3 3\\n3 -3\\n-3 -2\\n-1 -2\\n1 -2\\n1 -1\\n-2 -1\\n2 -1\\n2 0\\n-1 0\\n0 0\\n2 -2\\n3 3\\n3 -3\\n-3 -2\\n-1 -2\\n1 -2\\n1 0\\n-2 0\\n2 0\\n-1 0\\n-2 -1\\n-1 -1\\n2 -1\\n1 0\\n-2 -1\\n2 -1\\n1 -1\\n0 -1\\n0 0\\n-1 -1\\n-1 -1\\n2 -1\\n-1 -1\\n0 -1\\n0 0\\n1 -1\\n0 -1\\n-1 -1\\n1 -1\\n0 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n1 -1\\n-1 -1\\n-1 -1\\n0 -1\\n-1 -1\\n0 -1\\n-1 -1\\n0 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n0 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n0 -1\\n-1 -1\\n-1 -1\\n0 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 1\\n1 0\\n0 0\\n-1 0\\n1 0\") == \"1\\n1\"\nassert solution(\"2 1\\n1 0\\n0 0\\n-1 0\\n1 0\") == \"1\\n1\"\nassert solution(\"2 1\\n1 0\\n0 0\\n-1 0\\n1 0\") == \"1\\n1\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n0 0\") == \"1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n1 0\\n1 0\") == \"1\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n1 0\\n2 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n2 0\\n1 0\") == \"2\\n1\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '1'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '1'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '1'\n'''"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1\\n'\nassert solution('2 2\\n2 0\\n0 0\\n1 0\\n1 0\\n') == '1\\n2\\n'\nassert solution('5 2\\n0 0\\n1 2\\n0 0\\n1 -1\\n0 -2\\n0 0\\n1 0\\n1 0\\n3 1\\n0 -1\\n1 0\\n0 0\\n1 0\\n0 -1\\n0 1\\n') == '2\\n1\\n3\\n1\\n'\nassert solution('1 2\\n1 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '1\\n'\nassert solution('1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0\\n'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n1 0\") == \"2\\n1\"\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == 14\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '14'\n'''"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 14\nassert solution('14') == 14"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2) == 14\nassert solution(3) == 42\nassert solution(4) == 56\nassert solution(5) == 105\nassert solution(6) == 126\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('4') == '20'\nassert solution('5') == '55'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(2) == 14\n\nimport sys\ntry:\n    assert solution(sys.stdin.readline().strip()) == int(sys.stdin.readline().strip())\n    print(f\"Passed, {sys.argv[0]}\")\nexcept AssertionError as ex:\n    print(f\"Failed, {sys.argv[0]}\\n{ex}\")\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == 14\nassert solution(1) == 2\nassert solution(0) == 0\nassert solution(3) == 10\nassert solution(5) == 35\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 3\nassert solution(\"3\") == 6\nassert solution(\"4\") == 10\nassert solution(\"5\") == 15\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '14'\n\n\"\"\""
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"36\"\nassert solution(\"4\") == \"84\"\nassert solution(\"5\") == \"125\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n\\n#.#\\n.#.\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n\\n#.#\\n.#.\") == \"No\"\nassert solution(\"3 1\\n#.#\\n.#.\\n#.\\n#.\\n#.\\n\\n#.#\\n#.#\") == \"Yes\"\nassert solution(\"3 1\\n#.#\\n.#.\\n#.\\n#.\\n#.\\n\\n#.#\\n#.#\") == \"No\"\nassert solution(\"3 3\\n#.#\\n.#.\\n#.#\\n#.#\\n#.#\\n#.\\n#.\\n#.\\n#.\\n#.#\\n#.#\") == \"No\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#.\\n') == 'Yes'\nassert solution('2 2\\n#.#\\n.#\\n') == 'No'\nassert solution('3 2\\n#.#\\n.#\\n#.\\n#.\\n#.\\n#.\\n') == 'Yes'\nassert solution('2 2\\n#.#\\n.#\\n#.\\n#.\\n#.\\n#.\\n') == 'No'\nassert solution('5 5\\n####\\n#..#\\n#....\\n#.#.#\\n#.....\\n#####\\n') == 'Yes'\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.\\n#.\\n#.\\n#.\") == \"Yes\"\nassert solution(\"4 2\\n#.#\\n.#.\\n#.#\\n#.\\n#.#\\n#.#\\n#.\\n#.\\n#.\") == \"Yes\"\nassert solution(\"4 1\\n#.#\\n#.#\\n#.#\\n#.\\n#.#\\n#.#\\n#.\\n#.\\n#.\") == \"No\"\nassert solution(\"5 1\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.\\n#.\\n#.\") == \"No\"\nassert solution(\"3 1\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.\\n#.\\n#.\") == \"Yes\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.#\\n#.\\n.#') == 'Yes'\nassert solution('5 4\\n.....\\n.##...\\n....#\\n...##\\n....#\\n.##...\\n.....\\n.....\\n') == 'Yes'\nassert solution('1 1\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('#.#\\n.#.\\n#.#\\n#.\\n#.#\\n') == 'Yes'\nassert solution('#.#\\n.#.\\n#.#\\n#.\\n#.#\\n') == 'No'\nassert solution('#.#\\n#.#\\n#.#\\n#.\\n#.#\\n') == 'Yes'\nassert solution('#.#\\n#.#\\n#.#\\n#.\\n#.#\\n') == 'No'\nassert solution('#.#\\n#.#\\n#.#\\n#.\\n#.#\\n') == 'Yes'\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n\") == \"Yes\"\nassert solution(\"3 3\\n#.#\\n.#.\\n.#.\\n.#.\\n#.#\\n#.#\\n#.#\\n\") == \"No\"\nassert solution(\"4 2\\n#.#\\n.#.\\n.#.\\n.#.\\n#.#\\n#.#\\n#.#\\n\") == \"No\"\nassert solution(\"4 3\\n#.#\\n.#.\\n.#.\\n.#.\\n#.#\\n#.#\\n#.#\\n#.\") == \"No\"\nassert solution(\"4 3\\n#.#\\n.#.\\n.#.\\n.#.\\n#.#\\n#.#\\n#.#\\n#.\") == \"No\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\") == \"Yes\"\nassert solution(\"#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\") == \"No\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 4 2') == '7'\nassert solution('1 5 2') == '53'\nassert solution('1 4 4') == '25'\nassert solution('9 9 9') == '999'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 9 2') == '55'\nassert solution('1 9 3') == '59'\nassert solution('1 5 4') == '54'\nassert solution('1 1 1') == '3'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3\n''') == '53'\n\nassert solution('''1 0 1\n''') == '20'\n\nassert solution('''4 5 6\n''') == '46'\n\nassert solution('''3 4 5\n''') == '9'\n\nassert solution('''5 2 6\n''') == '15'"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('3 5 4') == '45'\nassert solution('99 40 100') == '2000'\nassert solution('1 1 1') == '0'\nassert solution('3 5 2') == '25'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 1 1') == '9'\nassert solution('2 1 1') == '9'\nassert solution('1 2 1') == '3'\nassert solution('1 1 1') == '2'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 3') == '4'\nassert solution('1 2 -3') == '0'\nassert solution('0 1 2') == '0'\nassert solution('1 1 1') == '2'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53'"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 5 2''') == '53'\nassert solution('''1 4 2''') == '26'\nassert solution('''9 1 2''') == '53'\nassert solution('''5 9 8''') == '32'\nassert solution('''4 9 5''') == '24'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 0 1') == '2'\nassert solution('2 8 4') == '16'\nassert solution('2 4 0') == '-4'\nassert solution('2 2 2') == '5'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n\"\"\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0\\n'\nassert solution('10\\n10') == '50\\n'\nassert solution('3\\n4980\\n7980\\n6980') == '15950\\n'\nassert solution('2\\n1\\n2') == '0\\n'\nassert solution('2\\n2\\n2') == '0\\n'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '54790'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '111911'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '86205'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '145593'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"15950\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '15950'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n4980\\n7980\\n6980\\n') == '15950'"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4980\n7980\n6980''') == '15950'\nassert solution('''5\n8900\n7800\n7100\n6600\n5500''') == '46000'\nassert solution('''2\n80\n1000''') == '4800'\nassert solution('''3\n1\n2\n3''') == '6'\nassert solution('''1\n42\n40\n5''') == '17'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('2\\n1\\n2') == '1'\nassert solution('2\\n2\\n2') == '0'\nassert solution('3\\n3\\n3') == '6'\nassert solution('3\\n3\\n4') == '9'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4980 7980 6980') == '15950'\nassert solution('250000') == '2700000'\nassert solution('114962') == '149429'\nassert solution('134243') == '130824'\n\"\"\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\\n4\\n5\\n4\\n3\\n2\\n1\") == \"9\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\") == \"9\"\n\"\"\"\nfrom math import ceil"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected\n\n\"\"\"\n\nfrom datetime import datetime, timedelta\nfrom math import ceil"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\n\"\"\""
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n10\\n20\\n30\\n40') == '215'\nassert solution('3\\n8\\n10\\n20\\n21') == '19'\nassert solution('1\\n7\\n10\\n20\\n23') == '14'\nassert solution('2\\n2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3\\n3') == '0'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n\"\"\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AB\\nAC\\nCA\\nCC\\nAC') == 'APC Ramen'\nassert solution('AC\\nCA\\nCC\\nAC') == 'ARC Curry'\nassert solution('AA\\nAB\\nAC\\nAC') == 'ABC Don'\nassert solution('AA\\nAB\\nAC\\nAC') == 'AC'\nassert solution('AB\\nAC') == 'ABC Don'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('21\\n29\\n2\\n34\\n12\\n') == '23'\nassert solution('1\\n0\\n0\\n1\\n1\\n') == '3'\nassert solution('0\\n0\\n0\\n0\\n0\\n') == '0'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n') == '0'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"14\\n20\\n7\\n35\\n120\") == \"0\"\nassert solution(\"14\\n20\\n7\\n35\\n120\") == \"15\"\nassert solution(\"14\\n20\\n7\\n35\\n120\") == \"60\"\nassert solution(\"14\\n20\\n7\\n35\\n120\") == \"150\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[0]\n\"\"\"\n\nA = int(stdin.split()[0])\nB = int(stdin.split()[1])\nC = int(stdin.split()[2])\nD = int(stdin.split()[3])\nE = int(stdin.split()[4])\n\nS = [A,B,C,D,E]"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 30') == '7.5'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('1 2 3 4 5') == '0.2'\n\"\"\"\n\nN = int(input())\nA = [int(x) for x in input().split()]\n\ns = sum(1/x for x in A)\n\nprint(s/float(s-sum(1/x for x in A)))"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"2\\n\"\n\"10 30\\n\") == \"7.5\"\nassert solution(\n\"4\\n\"\n\"12 6 9 9\\n\") == \"8.5\"\nassert solution(\n\"4\\n\"\n\"100 100 100 100\\n\") == \"1\"\nassert solution(\n\"5\\n\"\n\"1000000 1 1000000 1 1000000\\n\") == \"1\"\nassert solution(\n\"4\\n\"\n\"12 6 9 9\\n\") == \"8.5\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('10 100000') == '3.5'\nassert solution('1000000000 1000000000') == '3.5'\nassert solution('1000000000 1000000000') == '3.5'\nassert solution('1000000000 1000000000') == '3.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n10 30') == '7.5'\nassert solution('2\\n10 30\\n20 30') == '1.0'\n\"\"\""
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('1 2') == '0.5'\nassert solution('2 1') == '0.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('50 30') == '7.50'\nassert solution('10 100') == '0.0'\nassert solution('100 30') == '0.5'\nassert solution('30 10') == '0.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10\\n') == '7.5'\nassert solution('1 30\\n') == '7.5'\nassert solution('1 100\\n') == '7.5'\nassert solution('1 1000\\n') == '7.5'\nassert solution('1 10000\\n') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n10 30') == '7.5'\n\n\"\"\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7.5\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '2'\nassert solution('10 15 11 14 12') == '2'\nprint(\"All cases passed successfully.\")\n\"\"\""
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\n\"\"\"\n--- 81.58%---\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('1 10\\n1 1\\n100\\n1') == '99'\nassert solution('1 2\\n10\\n10\\n1\\n10\\n10\\n1\\n1\\n1') == '0'\nassert solution('2 1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2 1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5 3\n10\n15\n11\n14\n12\n\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"\n2 2\n1\n1\n\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n2 2\n2\n2\n\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n2 3\n3\n5\n7\n10\n\n\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"\n2 3\n2\n2\n\n\"\"\"\n) == '1'"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('4 3') == '1'\nassert solution('7 3') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2'\nassert solution('5 3') == '2'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '0'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('bA') == 'a'\nassert solution('ba') == 'a'\nassert solution('baA') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('Bb') == 'Ab'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 'A'\nassert solution('b') == 'b'\nassert solution('B') == 'a'\nassert solution('b2') == 'b'\nassert solution('b12') == 'b'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"A\") == \"a\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"B\") == \"a\"\nassert solution(\"b\") == \"a\"\nassert solution(\"z\") == \"a\"\nassert solution(\"Z\") == \"A\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('b') == 'a'\nassert solution('A') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('B') == 'A'\nassert solution('b') == 'b'\nassert solution('B') == 'A'"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('AB') == 'A'\nassert solution('a') == 'a'\nassert solution('aA') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('b') == 'b'\nassert solution('B') == 'B'\nassert solution('2') == 'a'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''0 3''') == '2'\nassert solution('''1 5''') == '2'\nassert solution('''1 6''') == '3'\nassert solution('''10 15''') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'\nassert solution('0 2') == '0'\nassert solution('0 0') == '0'\nassert solution('0 0') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 3') == '3'\nassert solution('3 4') == '0'\nassert solution('3 5') == '0'\nassert solution('3 6') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('5 4') == '9'\nassert solution('3 6') == '9'\nassert solution('0 1') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 2\") == \"6\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"100 200\") == \"0\"\nassert solution(\"-10 -10\") == \"1\"\nassert solution(\"100 200\") == \"0\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\n\nassert solution('0 1') == '1'\n\nassert solution('1 1') == '1'\n\nassert solution('0 0') == '0'\n\nassert solution('0 3') == '0'"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == \"6\""
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1025') == 'AMBIGUOUS'\nassert solution('1001') == 'NA'\nassert solution('2022') == 'AMBIGUOUS'\nassert solution('2020') == 'YYMM'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\nassert solution('1201') == 'AMBIGUOUS'\nassert solution('1212') == 'NA'\nassert solution('0112') == 'NA'\nprint('Test complete!')\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(test_str) == \"YYMM\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"190523\") == \"MMYY\"\nassert solution(\"19052312\") == \"AMBIGUOUS\"\nassert solution(\"1213\") == \"NA\"\nassert solution(\"121312\") == \"NA\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'AMBIGUOUS'\nassert solution('0519') == 'AMBIGUOUS'\nassert solution('1905') == 'YYMM'\nassert solution('1905') == 'YYMM'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('XX19') == 'NA'\nassert solution('1901') == 'MMYY'\nassert solution('2019') == 'AMBIGUOUS'\nassert solution('1903') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"X9\") == \"NA\"\nassert solution(\"X9X9\") == \"NA\"\nassert solution(\"X9X9X9\") == \"NA\"\nassert solution(\"X9X9X9X9\") == \"NA\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1905') == 'YYMM'\nassert solution('051905') == 'AMBIGUOUS'\nassert solution('1901') == 'NA'\nassert solution('1901') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'NA'\nassert solution('1905') == '1905'\nassert solution('01') == '1905'\nassert solution('9') == '1905'\nassert solution('1') == '1905'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"20130506\") == \"AMBIGUOUS\"\nassert solution(\"201305\") == \"YYMM\"\nassert solution(\"20050101\") == \"MMYY\"\nassert solution(\"20130506\") == \"YYMM\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '6'\nassert solution('30') == '108'\nassert solution('100') == '28996'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n') == '2'\nassert solution('1\\n3\\n') == '2'\nassert solution('2\\n3\\n') == '1'\nassert solution('5\\n3\\n') == '4'\nassert solution('5\\n3\\n') == '4'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '2'\n\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(4) == 4\nassert solution(5) == 6\nassert solution(6) == 10\nassert solution(7) == 12\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('2 3') == '2'\n\nassert solution('5') == '4'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('3') == ''\nassert solution('4') == ''\nassert solution('5') == ''\nassert solution('6') == ''\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('5') == '2'\nassert solution('4') == '2'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == 2\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 2\nassert solution('1') == 1\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9 12') == '21'\nassert solution('2 4') == '3'\nassert solution('12 15') == '3'\nassert solution('17 22') == '19'\nassert solution('5 17') == '6'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9 12') == '21'\nassert solution('1 11') == '10'\nassert solution('12 22') == '23'\nassert solution('12 12') == '12'\nassert solution('3 13') == '14'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 12') == '21'\nassert solution('11 25') == '00'\nassert solution('23 15') == '23'\nassert solution('23 19') == '00'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 12') == '21'\nassert solution('12 12') == '21'\nassert solution('11 11') == '11'\nassert solution('12 10') == '11'\nassert solution('0 0') == '00'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('9 12') == '21'\nassert solution('10 10') == '19'\nassert solution('2 3') == '5'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9 12''') == '21'\nassert solution('''0 1''') == '0'\nassert solution('''1 0''') == '1'\nassert solution('''23 31''') == '23'\nassert solution('''23 14''') == '23'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9 12''') == '21'\nassert solution('''17 22''') == '23'\nassert solution('''5 2''') == '7'\nassert solution('''9 22''') == '23'\nassert solution('''13 17''') == '19'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '21'"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0 0') == ''\nassert solution('1 0') == ''\nassert solution('0 1') == ''\nassert solution('0 2') == ''\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('5 2428') == '2533'\nassert solution('1 23') == '11'\nassert solution('4 2') == '2'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '2'\nassert solution('3 2') == '3'\nassert solution('5 2') == '7'\nassert solution('7 2') == '13'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"4 511\") == \"610\"\nassert solution(\"4 102\") == \"92\"\nassert solution(\"3 1000\") == \"3000\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split(' ')[0]\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"5 5\") == \"4\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4') == '0'\nassert solution('2 5') == '-100'\nassert solution('1 9') == '-900'\nassert solution('10 100') == '1000'\nassert solution('99 99') == '0'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 1741') == '3631'\nassert solution('10 2326') == '1101'\nassert solution('13 964') == '1293'\nassert solution('14 8435') == '1475'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11 2') == '4'\nassert solution('11 3') == '1'\nassert solution('1010110111') == '21'\nassert solution('11 5') == '2'\nassert solution('999 10') == '4'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 2') == '4'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11 2') == '4'\nassert solution('123 10') == '3'\nassert solution('11110') == '8'\nassert solution('1111111') == '7'\nassert solution('111111111') == '6'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(11, 2) == 4\nassert solution(10, 2) == 2\nassert solution(12, 2) == 3\nassert solution(13, 2) == 3\nassert solution(14, 2) == 4\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11 2') == '4'\nassert solution('11 15') == '3'\nassert solution('10000000000 1') == '10'\nassert solution('11 15') == '3'\nassert solution('1023 1001') == '3'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(11, 2) == '4'\nassert solution(11, 3) == '2'\nassert solution(11, 4) == '0'\nassert solution(11, 5) == '1'\nassert solution(11, 6) == '3'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"1011\") == \"4\"\nassert solution(\"1111\") == \"6\"\nassert solution(\"11111\") == \"3\"\n\nassert solution(\"4 1\") == \"1\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"11 2\") == \"4\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"18 15\") == \"6\"\nassert solution(\"100 100\") == \"10\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"3\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"6\"\nassert solution(\"8\") == \"10\"\nassert solution(\"10\") == \"12\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('3') == '1'\nassert solution('7') == '4'\nassert solution('4') == '2'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(5) == 3\nassert solution(3) == 1\nassert solution(3) == 1\nassert solution(3) == 1\nassert solution(7) == 4\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"8\") == \"5\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"5\"\nassert solution(\"8\") == \"6\"\nassert solution(\"9\") == \"7\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Yay!'\nassert solution('5 4') == 'Yay!'\nassert solution('1 2') == 'Yay!'\nassert solution('1 1') == 'Yay!'\nassert solution('6 1') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yay!'\nassert solution(input()) == 'Yay!'\nassert solution(input()) == 'Yay!'\nassert solution(input()) == 'Yay!'\nassert solution(input()) == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\nassert solution(\"2 1\") == \"Yay!\"\n\nassert solution(\"4 4\") == \"Yay!\"\n\nassert solution(\"6 4\") == \"Yay!\"\n\nassert solution(\"10 4\") == \"Yay!\""
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"2 2\") == \"Yay!\"\nassert solution(\"5 3\") == \"Yay!\"\nassert solution(\"3 2\") == \"Yay!\"\nassert solution(\"1 3\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('8 2') == 'Yay!'\nassert solution('7 10') == 'Yay!'\nassert solution('7 3') == 'Yay!'\nassert solution('2 1') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A 4\\nB 5\\n') == 'Yay!'\nassert solution('A 4\\nB 4\\n') == 'Yay!'\nassert solution('A 3\\nB 3\\n') == 'Yay!'\nassert solution('A 2\\nB 2\\n') == 'Yay!'\nassert solution('A 1\\nB 1\\n') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yay!\"\n'''\nA,B=map(int,input().split())\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123456789') == '34'\nassert solution('776543210') == '34'\nassert solution('123456789') == '34'\nassert solution('987654321') == '34'\nassert solution('1234567890') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"12344567876\") == \"34\"\nassert solution(\"123445678765\") == \"34\"\nassert solution(\"12345678789\") == \"34\"\nassert solution(\"1234567879\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('123456789') == '34'\nassert solution('1234567876') == '34'\nassert solution('1234') == '34'\nassert solution('1234567') == '34'\nassert solution('123456789') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"765694566\") == \"0\"\nassert solution(\"123456789\") == \"0\"\nassert solution(\"12345678\") == \"34\"\nassert solution(\"789456123\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1234567876) == '34'\nassert solution(1234567899) == '67'\nassert solution(1234567896) == '76'\nassert solution(1234567897) == '76'\nassert solution(1234567898) == '76'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1234567876') == '34'\nassert solution('73197') == '36'\nassert solution('22223') == '1'\nassert solution('12219') == '1'\nassert solution('22222') == '0'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567') == '34'\nassert solution('123456789') == '34'\nassert solution('12345678901234567') == '34'\nassert solution('1234567890123456789') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"123456789\") == \"34\"\nassert solution(\"987654321\") == \"34\"\nassert solution(\"12341234\") == \"34\"\nassert solution(\"12345678\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1234567876) == '34'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 12 6\\n\") == \"5 3\"\nassert solution(\"2\\n2 9\\n\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n\") == \"12 13\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n\") == \"12 13\"\n\"\"\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 12 6') == '5 3'\nassert solution('2\\n2 9') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '12 13'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3\\n'\nassert solution('2\\n2 9\\n') == '1 7\\n'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '12 13\\n'\n\n\n\"\"\""
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''10\n2 10 1 9 4 4 3 2 0''') == '2999999987 2'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''13\n13 52 0 13 26 52''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\n\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3\\n'\nassert solution('2\\n2 9\\n') == '1 7\\n'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '2999999987 2\\n'\nassert solution('6\\n13 52 0 13 26 52\\n') == '12 13\\n'\nassert solution('1\\n2 3\\n') == '-1 -1\\n'\n\"\"\""
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3'\nassert solution('2\\n2 9\\n') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '12 13'\nassert solution('6\\n13 52 0 13 26 52\\n') == '12 13'\nassert solution('7\\n13 52 0 13 26 52\\n') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 12 6') == '5 3'\nassert solution('2\\n2 9') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '12 13'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n3 1 4 1\n''') == '3'\n\nassert solution(\n'''\n3\n1 1 1\n''') == '1'\n\nassert solution(\n'''\n5\n1 1 1 2 2\n''') == '2'\n\nassert solution(\n'''\n3\n1 1 1\n''') == '1'\n\nassert solution(\n'''\n4\n1 1 1 4 1\n''') == '3'"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n3 1 4 1\n''') == '3'\nassert solution('''3\n1 1 1\n''') == '1'\nassert solution('''5\n1 1 1 2 2\n''') == '2'\nassert solution('''8\n1 1 1 1 1 1 1 1\n''') == '3'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\n2 3 1 4 1 5 4 3') == '4'\nassert solution('5\\n4 1 5 4 3') == '3'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('5\\n1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4\n3 1 4 1'''\n) == '3'\n\nassert solution(\n'''3\n1 1 1'''\n) == '1'\n\nassert solution(\n'''5\n1 1 1 2 2'''\n) == '2'\n\nassert solution(\n'''5\n1 1 1 2 2'''\n) == '1'\n\nassert solution(\n'''10\n1 1 1 1 1 1 1 1 1 1'''\n) == '7'"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n3 1 4 1\n''') == '3'\nassert solution('''3\n1 1 1\n''') == '1'\nassert solution('''5\n1 1 1 2 2\n''') == '2'\nassert solution('''1\n1 1 1\n''') == '1'\nassert solution('''2\n1 1 1\n''') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n2') == '3'\nassert solution('3\\n1') == '3'\nassert solution('3\\n1\\n2') == '3'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n1 1 1 1 1 1 1 1 1\\n') == '3'\nassert solution('6\\n1 1 1 1 1 1 1\\n') == '1'\nassert solution('7\\n1 1 1 1 1 1 1 1\\n') == '1'\nassert solution('4\\n1 1 1 1\\n') == '1'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n3 1 4 1''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''5\n1 1 1 2 2''') == '2'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''1\n1 1 1''') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 4 1\") == \"3\"\nassert solution(\"3\\n3 1 4 1\") == \"3\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''2 0\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 0') == '1'\nassert solution('3 2') == '1'\nassert solution('3 0') == '1'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('2 0') == '1'\nassert solution('3 2') == '1'\n\n\n\n-----Testcases-----\n\n-- Python cases --\n>>> solution('4 2')\n'2'\n\n>>> solution('2 0')\n'1'\n\n>>> solution('3 2')\n'1'\n\n>>> solution('3 3')\n'3'\n\n>>> solution('4 3')\n'3'\n\n>>> solution('4 3')\n'3'\n\n>>> solution('6 3')\n'3'\n\n>>> solution('6 4')\n'3'\n\n>>> solution('6 5')\n'3'\n\n>>> solution('6 6')\n'3'\n\n>>> solution('6 7')\n'3'\n\n>>> solution('6 8')\n'3'\n\n>>> solution('6 9')\n'3'\n\n>>> solution('6 10')\n'3'\n\n>>> solution('6 11')\n'3'\n\n>>> solution('6 12')\n'3'\n\n>>> solution('6 13')\n'3'\n\n>>> solution('6 14')\n'3'\n\n>>> solution('6 15')\n'3'\n\n>>> solution('6 16')\n'3'\n\n>>> solution('6 17')\n'3'\n\n>>> solution('6 18')\n'3'\n\n>>> solution('6 19')\n'3'\n\n>>> solution('6 20')\n'3'\n\n>>> solution('6 21')\n'3'\n\n>>> solution('6 22')\n'3'\n\n>>> solution('6 23')\n'3'\n\n>>> solution('6 24')\n'3'\n\n>>> solution('6 25')\n'3'\n\n>>> solution('6 26')\n'3'\n\n>>> solution('6 27')\n'3'\n\n>>> solution('6 28')\n'3'\n\n>>> solution('6 29')\n'3'\n\n>>> solution('6 30')\n'3'\n\n>>> solution('6 31')\n'3'\n\n>>> solution('6 32')\n'3'\n\n>>> solution('6 33')\n'3'\n\n>>> solution('6 34')\n'3'\n\n>>> solution('6 35')\n'3'\n\n>>> solution('6 36')\n'3'\n\n>>> solution('6 37')\n'3'\n\n>>> solution('6 38')\n'3'\n\n>>> solution('6 39')\n'3'\n\n>>> solution('6 40')\n'3'\n\n>>> solution('6 41')\n'3'\n\n>>> solution('6 42')\n'3'\n\n>>> solution('6 43')\n'3'\n\n>>> solution('6 44')\n'3'\n\n>>> solution('6 45')\n'3'\n\n>>> solution('6 46')\n'3'\n\n>>> solution('6 47')\n'3'\n\n>>> solution('6 48')\n'3'\n\n>>> solution('6 49')\n'3'\n\n>>> solution('6 50')\n'3'\n\n>>> solution('6 51')\n'3'\n\n>>> solution('6 52')\n'3'\n\n>>> solution('6 53')\n'3'\n\n>>> solution('6 54')\n'3'\n\n>>> solution('6 55')\n'3'\n\n>>> solution('6 56')\n'3'\n\n>>> solution('6 57')\n'3'\n\n>>> solution('6 58')\n'3'\n\n>>> solution('6 59')\n'3'\n\n>>> solution('6 60')\n'3'\n\n>>> solution('6 61')\n'3'\n\n>>> solution('6 62')\n'3'\n\n>>> solution('6 63')\n'3'\n\n>>> solution('6 64')\n'3'\n\n>>> solution('6 65')\n'3'\n\n>>> solution('6 66')\n'3'\n\n>>> solution('6 67')\n'3'\n\n>>> solution('6 68')\n'3'\n\n>>> solution('6 69')\n'3'\n\n>>> solution('6 70')\n'3'\n\n>>> solution('6 71')\n'3'\n\n>>> solution('6 72')\n'3'\n\n>>> solution('6 73')\n'3'\n\n>>> solution('6 74')\n'3'\n\n>>> solution('6 75')\n'3'\n\n>>> solution('6 76')\n'3'\n\n>>> solution('6 77')\n'3'\n\n>>> solution('6 78')\n'3'\n\n>>> solution('6 79')\n'3'\n\n>>> solution('6 80')\n'3'\n\n>>> solution('6 81')\n'3'\n\n>>> solution('6 82')\n'3'\n\n>>> solution('6 83')\n'3'\n\n>>> solution('6 84')\n'3'\n\n>>> solution('6 85')\n'3'\n\n>>> solution('6 86')\n'3'\n\n>>> solution('6 87')\n'3'\n\n>>> solution('6 88')\n'3'\n\n>>> solution('6 89')\n'3'\n\n>>> solution('6 90')\n'3'\n\n>>> solution('6 91')\n'3'\n\n>>> solution('6 92')\n'3'\n\n>>> solution('6 93')\n'3'\n\n>>> solution('6 94')\n'3'\n\n>>> solution('6 95')\n'3'\n\n>>> solution('6 96')\n'3'\n\n>>> solution('6 97')\n'3'\n\n>>> solution('6 98')\n'3'\n\n>>> solution('6 99')\n'3'\n\n>>> solution('6 100')\n'3'\n\n>>> solution('6 101')\n'3'\n\n>>> solution('6 102')\n'3'\n\n>>> solution('6 103')\n'3'\n\n>>> solution('6 104')\n'3'\n\n>>> solution('6 105')\n'3'\n\n>>> solution('6 106')\n'3'\n\n>>> solution('6 107')\n'3'\n\n>>> solution('6 108')\n'3'\n\n>>> solution('6 109')\n'3'\n\n>>> solution('6 110')\n'3'\n\n>>> solution('6 111')\n'3'\n\n>>> solution('6 112')\n'3'\n\n>>> solution('6 113')\n'3'\n\n>>> solution('6 114')\n'3'\n\n>>> solution('6 115')\n'3'\n\n>>> solution('6 116')\n'3'\n\n>>> solution('6 117')\n'3'\n\n>>> solution('6 118')\n'3'\n\n>>> solution('6"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''3 2\n1 2\n2 3\n3 4\n''') == '1'\nassert solution('''5 7\n5 1\n4 3\n1 2\n1 3\n2 3\n3 4\n2 4\n2 5\n1 6\n4 7\n4 5\n''') == '3'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n\n\n\n###SOLUTION"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 2') == 2\nassert solution('3 1\\n1 2\\n2 3') == 2\nassert solution('2 0\\n1 2\\n3 4') == 1\nassert solution('3 0\\n1 2\\n2 3\\n3 4\\n4 5') == 1\nassert solution('3 0\\n1 2\\n1 3\\n2 3') == 1\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 2\\n3 2') == '2\\n4 2\\n1 2\\n'\nassert solution('3 2\\n1 3\\n2 3') == '2\\n1 2\\n'\nassert solution('2 0\\n') == '1\\n1 2\\n'\nassert solution('3 2\\n1 3\\n2 3') == '2\\n1 2\\n'\nassert solution('5 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '1\\n2 3\\n'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('2 0\\n1 2\\n2 3\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\n\nassert solution('1 2\\n2 3\\n') == '2'\nassert solution('2 0\\n1 2\\n2 3\\n') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2') == '2'\nassert solution('2 0') == '1'\nassert solution('3 2') == '2'\nassert solution('1 2') == '2'\nassert solution('2 3') == '4 2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 2\n2 3\n\n''') == '2'\n\nassert solution('''2 0\n\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n\n''') == '2'\n\n\n'''"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"3 2\") == \"11\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"5 2\") == \"11\"\nassert solution(\"5 3\") == \"6\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 1 4\"\nprint(solution(stdin))\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n7 5\\n7 4\\n') == '11'\nassert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n7 5\\n7 4\\n') == '4'\nassert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n7 5\\n7 4\\n') == '4'\nassert solution('1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n7 5\\n7 4\\n') == '4'\n\n\n-----Best-Practices-----\n\nAfter the solution, check the time-complexity of your solution.\n\nTry to solve it using the simplest and most intuitive way possible.\n\nIf you have read the Wikipedia page on Trees, then it's clear that trees are amazing! Try to use recursion to solve the problem.\n\nThe tests will only be run using Python 3.\n\nYou can read more about Python at: https://www.python.org/about/gettingstarted/\n\n\"\"\"\n\nfrom collections import defaultdict\n\nclass Graph:\n    def __init__(self):\n        self.graph = defaultdict(list)\n    \n    def addEdge(self, u, v):\n        self.graph[u].append(v)\n    \n    def BFS(self, s):\n        visited = [False] * (len(self.graph) + 1)\n        queue = []\n        visited[s] = True\n        queue.append(s)\n        \n        while queue:\n            s = queue.pop(0)\n            print(s, end ='')\n            \n            for i in self.graph[s]:\n                if not visited[i]:\n                    visited[i] = True\n                    queue.append(i)\n                    \ng = Graph()\ng.addEdge(0, 1)\ng.addEdge(0, 2)\ng.addEdge(1, 2)\ng.addEdge(2, 0)\ng.addEdge(2, 3)\ng.addEdge(3, 3)\n\nprint(g.BFS(0))"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == '4'\nassert solution('''9 1\n1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9\n1 2\n2 3\n2 4\n3 5\n3 6\n4 7\n4 8\n5 6\n5 7\n6 7\n6 8\n7 8''') == '0'\nassert solution('''9 1\n1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9\n1 2\n2 3\n2 4\n3 5\n3 6\n4 7\n4 8\n5 6\n5 7\n6 7\n6 8\n7 8''') == '10'\nassert solution('''8 3\n1 2 3 4 5 6 7 8 9 10 11\n1 2\n2 3\n2 4\n3 5\n3 6\n4 5\n4 6\n5 6\n5 7\n6 7\n6 8\n7 8\n7 9''') == '3'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"4\\n1 2 3 4\\n1 2\\n2 3\\n3 4\\n3 4\\n4 4\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n1 2\\n2 3\\n3 4\\n3 5\\n4 6\\n5 6\\n6 6\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n1 2\\n2 3\\n3 4\\n3 5\\n4 6\\n5 6\\n6 6\") == \"7\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '4'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nassert solution('''9 2\n2 1 2 1 2 1 1\n5 4\n1 5\n3 1\n2 3\n7 5\n7 4\n8 6\n9 7\n''') == '9'\n'''\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nprint('Testcases passed successfully!')\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\") == \"4\"\nassert solution(\"2\\n1 2\\n2 1\\n3 1\") == \"2\"\nassert solution(\"2\\n1 2\\n2 1\\n3 1\\n1 2\\n1 3\") == \"2\"\nassert solution(\"2\\n1 2\\n2 1\\n3 1\\n1 2\\n1 3\\n2 1\\n2 3\") == \"2\"\nassert solution(\"3\\n1 2\\n2 1\\n3 1\\n1 2\\n1 3\\n2 1\\n2 3\") == \"2\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6\\n10 15 12\\n1 9 12 23 26 37\\n') == \"\"\"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\"\""
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 6''') == '''1 1\n1 9\n2 2\n2 13'''\n\nassert solution('''3 3\n5 10000000000\n5 6 9999999999''') == '''1 5\n2 1\n2 9999999994'''\n\n'''\n    \n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\n\nassert solution('''2 3\n5 10000000000\n5 6 9999999999''') == '''1 5\n2 1\n2 9999999994'''\nassert solution('''2 3\n6 1000000000\n5 6 9999999999''') == '''1 1\n1 9\n2 2\n2 13'''\nassert solution('''2 3\n7 1000000000\n5 6 9999999999''') == '''1 1\n1 9\n2 2\n2 13'''\nassert solution('''2 3\n7 1000000000\n5 6 9999999999''') == '''1 1\n1 9\n2 2\n2 13'''\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 15 12\\n1 9 12 23 26 37\\n') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999\\n') == '1 5\\n2 1\\n2 9999999994\\n'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 6''') == '''1 1\n1 9\n2 2\n2 13'''\nassert solution('''5 10000000000\n5 6 9999999999''') == '''1 5\n2 1\n2 9999999994'''\nassert solution('''2 3''') == '''1 5\n2 1\n2 9999999994'''\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, m = map(int, input().split())\n\nd = [list(map(int, input().split())) for _ in range(n)]\n\nfor _ in range(m):\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if b[0] <= d[i][b[1] - 1]:\n            print(i + 1, b[1])\n            break\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\\n2 13\"\nassert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\"\nassert solution(\"5 10000000000\") == \"1 5\\n2 1\\n2 9999999994\\n3 1\\n3 12\"\n\n\"\"\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\\n2 13\"\nassert solution(\"1 2 3 4 5\") == \"1 9\\n2 2\\n3 1\\n4 1\\n5 1\"\nassert solution(\"2 3 4 5 6\") == \"1 5\\n2 1\\n2 9999999994\"\nassert solution(\"2 3 4 5 6 7\") == \"1 5\\n2 1\\n2 9999999994\\n3 1\\n4 1\\n5 1\"\nassert solution(\"1 2 3 4 5\") == \"1 9\\n2 2\\n3 1\\n4 1\\n5 1\"\n\n\n\"\"\""
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\"\nassert solution(\"4 3\") == \"1 1\\n1 9\\n2 2\\n2 13\"\nassert solution(\"5 2\") == \"1 5\\n2 1\\n2 9999999994\"\nassert solution(\"1 1\") == \"1 1\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 6 5 4\\n') == '2 1 3\\n'\nassert solution('40 40 40 60\\n') == '20 20 20\\n'\nassert solution('201 101 101 200\\n') == '1 100 100\\n'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"2 1 3\"\nassert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n\n\n\n\"\"\""
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 6 5 4') == '2 1 3', '3 6 5 4'\nassert solution('40 40 40 60') == '20 20 20', '40 40 40 60'\nassert solution('201 101 101 200') == '1 100 100', '201 101 101 200'\nassert solution('3 6 5 4') == '2 1 3', '3 6 5 4'\nassert solution('40 40 40 60') == '20 20 20', '40 40 40 60'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('-12 10 -5 -7 -5 0') == '-12 10 -5 0'\nassert solution('5 -1 -7 0') == '5 -1 -7'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\nprint(solution(stdin))"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 6 5 4''') == '2 1 3', 'Basic'\nassert solution('''40 40 40 60''') == '20 20 20', 'Basic'\nassert solution('''201 101 101 200''') == '1 100 100', 'Basic'\n'''\n\n__author__ = 'Haihao'\n\nfrom typing import List\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == 'BRBGBRGR'\nassert solution('9') == 'RBGRGBRGR'\nassert solution('13') == 'BGRBRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\nRBGRRBRGG\n''') == '2'\nassert solution('''8\nBBBGBRRR\n''') == '2'\nassert solution('''13\nBBRRRRGGGGGRR\n''') == '6'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4\nBBBGBRRR\n''') == '6\\nBGRBRBGBGBGRG\\n'\n\nassert solution(\n'''11\nBBRRRRGGGBRBGRRGRGRGBBBGRBGBBRBRRBBGRRGGGGGBR\n''') == '6\\nBGRBRBGBGBGRG\\n'\n\nassert solution(\n'''11\nBBRRRRGGGBRBGRRGRGRGBBBGRBGBBRBRRBBGRRGGGGGBR\n''') == '6\\nBGRBRBGBGBGRG\\n'\n\nassert solution(\n'''11\nBBRRRRGGGBRBGRRGRGRGBBBGRBGBBRBRRBBGRRGGGGGBR\n''') == '6\\nBGRBRBGBGBGRG\\n'\n\nassert solution(\n'''8\nRRRGGBRRR\n''') == '4\\nRGGBRBGR\\n'"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9\\nRBGRRBRGG\\n') == '2\\nRBGRGBRGR\\n'\nassert solution('8\\nBBBGBRRR\\n') == '2\\nBRBGBRGR\\n'\nassert solution('13\\nBBRRRRGGGGGRR\\n') == '6\\nBGRBRBGBGBGRG\\n'"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n9\nRBGRRBRGG\n\"\"\"\n    ) == \"\"\"\n2\nRBGRGBRGR\n\"\"\"\n\nassert solution(\n    \"\"\"\n8\nBBBGBRRR\n\"\"\"\n    ) == \"\"\"\n2\nBRBGBRGR\n\"\"\"\n\nassert solution(\n    \"\"\"\n13\nBBRRRRGGGGGRR\n\"\"\"\n    ) == \"\"\"\n6\nBGRBRBGBGBGRG\n\"\"\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('B') == 'B'\nassert solution('BB') == 'BB'\nassert solution('BBB') == 'BBB'\nassert solution('BBBB') == 'BBBB'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9\nRBGRRBRGG\n''') == '2\\nRBGRGBRGR'\nassert solution('''8\nBBBGBRRR\n''') == '2\\nBRBGBRGR'\nassert solution('''13\nBBRRRRGGGGGRR\n''') == '6\\nBGRBRBGBGBGRG'\nprint(\"tests passed\")\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\nBBRRRRGGGGGRR''') == '4'\nassert solution('''6\nBBRRRRGGGGGRR''') == '2'\nassert solution('''3\nBBRRRR\nRRBGR\nRBRGB''') == '2'\nassert solution('''4\nBRRRRGGGGGRR''') == '4'\nassert solution('''6\nBRRRRGGGGGRR''') == '2'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n3 3 4 7 5 6 8\\n') == '4\\n2 3 5 6\\n'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4\\n'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9\\n'\nassert solution('4\\n10 9 8 7\\n') == '1\\n1\\n'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9\\n'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1 1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input.txt') == output\n\"\"\""
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"7\n3 3 4 7 5 6 8\n\"\"\") == \"4\\n2 3 5 6\\n\"\n\nassert solution(\"\"\"6\n1 3 5 2 4 6\n\"\"\") == \"2\\n1 4\\n\"\n\nassert solution(\"\"\"4\n10 9 8 7\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\"\"\"9\n6 7 8 3 4 5 9 10 11\n\"\"\") == \"6\\n1 2 3 7 8 9\\n\"\n\"\"\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 3 4 7 5 6 8\\n') == '4\\n2 3 5 6'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'\n\n\n\n-----Alternative solutions (Faster)-----"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8\n''') == '4'\n\nassert solution('''6\n1 3 5 2 4 6\n''') == '2'\n\nassert solution('''4\n10 9 8 7\n''') == '1'\n\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8') == '4'\nassert solution('3 3 4 7 5 6 8') == '4'\nassert solution('1 3 5 2 4 6') == '2'\nassert solution('10 9 8 7') == '1'\nassert solution('6 7 8 3 4 5 9 10 11') == '6'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('3 4') == 'Yes'\nassert solution('2 2') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('2 3') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('3 2') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('1 3') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(5, 2) == 'Yes'\nassert solution(4, 3) == 'No'\nassert solution(2, 3) == 'Yes'\nassert solution(3, 3) == 'Yes'\nassert solution(1, 3) == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('3 3') == 'No'\nassert solution('3 4') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('1 1') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('3 3') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('1 1') == 'No'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"1 3\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('2 2') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('5 5') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('81 58') == '110'\nassert solution('10 10') == '100'\nassert solution('1000 1000') == '3000'\nassert solution('1 1') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"110\"\nprint(solution(input()))\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == str(solution(input()))\n\n\"\"\"\n\na, b = map(int, input().split())\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('81 58') == '110'\n\n - The bus fare is 58 yen.\n - The bus fare is 58 \u2044 2=29 yen with the 50% discount.\nThus, it costs 110 yen to travel from Station A to Station C.\n'''\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''81 58''') == '110'\nassert solution('''27 82''') == '67'\nassert solution('''0 0''') == '0'\nassert solution('''2 2''') == '0'\nassert solution('''15 23''') == '45'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('81 58') == '110'\n\"\"\""
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"5 6\") == \"7\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"9 3\") == \"6\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('81 58') == '110'\nassert solution('1 2') == '1'\nassert solution('90 80') == '60'\nassert solution('23 53') == '160'\nassert solution('100 99') == '99'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 1') == '0'\nassert solution('1 2 3 4') == '4'\nassert solution
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '26'\nassert solution('4') == '40'\nassert solution('5') == '125'\nassert solution('6') == '216'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('11') == ''\nassert solution('1111') == ''\nassert solution('111111') == ''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n''') == '8'\nassert solution('''12\n''') == '60'\nassert solution('''123\n''') == '840'\nassert solution('''123456789''') == '987654321'\nassert solution('''1337\n''') == '4540'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '27'\nassert solution('3') == '36'\nassert solution('4') == '60'\nassert solution('5') == '125'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\n\"\"\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '8'"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('12') == ''\nassert solution('123') == ''\nassert solution('1234') == ''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"27\"\nassert solution(\"4\") == \"84\"\nassert solution(\"5\") == \"165\"\nassert solution(\"6\") == \"252\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == \"8\"\n'''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n') == 'YES'\nassert solution('8\\n') == 'NO'\nassert solution('2\\n') == 'NO'\nassert solution('3\\n') == 'NO'\nassert solution('1\\n') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('6') == 'NO'\nassert solution('7') == 'YES'\nassert solution('8') == 'NO'\nassert solution('9') == 'YES'\nprint(\"Test passed.\")\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(None) is None\nassert solution(\"\") is None\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5\\n\") == \"YES\"\n\nassert solution(\"8\") == \"NO\"\nassert solution(\"8\\n\") == \"NO\"\n\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n''') == 'YES'\nassert solution(\n'''\n5\n''') == 'NO'\nassert solution(\n'''\n2\n''') == 'YES'\nassert solution(\n'''\n5\n''') == 'NO'\nassert solution(\n'''\n6\n''') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"9\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'NO'\nassert solution('7') == 'YES'\nassert solution('8') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'\nassert solution('5') == 'YES'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('999') == 'ABC999'\nassert solution('998') == 'ABD998'\nassert solution('996') == 'ABD996'\nassert solution('974') == 'ABD974'\nassert solution('973') == 'ABD973'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(999) == 'ABC'\nassert solution(1998) == 'ABD'\nassert solution(1999) == 'ABD'\nassert solution(1) == 'ABC'\nassert solution(2) == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABC999') == 'ABC'\nassert solution('ABC001') == 'ABC'\nassert solution('ABC002') == 'ABC'\nassert solution('ABC003') == 'ABC'\nassert solution('ABC004') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('111') == 'AB'\nassert solution('123') == 'BA'\nassert solution('135') == 'AD'\nassert solution('1444') == 'ADC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == 'A'\nassert solution('999') == 'ABD'\nassert solution('10000') == 'ABC'\nassert solution('1234') == 'ABCD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1000') == 'ABD'\nassert solution('1001') == 'ABC'\nassert solution('1010') == 'ABD'\nassert solution('1011') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'ABC999'\n\"\"\""
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1000') == 'ABD'\nassert solution('1998') == 'ABCD'\nassert solution('999') == 'ABC'\nassert solution('10000') == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"999\") == \"ABC999\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n14\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n17\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n18\\n\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == \"Yay!\"\nassert solution('1\\n2\\n4\\n8\\n9\\n10') == \"Yay!\"\nassert solution('1\\n2\\n4\\n8\\n9\\n20') == \"Yay!\"\nassert solution('1\\n2\\n4\\n8\\n9\\n1000') == \"Yay!\"\nassert solution('1\\n2\\n4\\n8\\n9\\n100000') == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 4 8 9 15') == 'Yay!'\nassert solution('2 1 4 8 9 15') == 'Yay!'\nassert solution('1 1 4 8 9 15') == 'Yay!'\nassert solution('1 2 1 4 8 9 15') == 'Yay!'\nassert solution('1 2 2 4 8 9 15') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n2') == 'Nay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n16') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n0') == 'Nay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n123') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 4 8 9 15\") == \"Yay!\"\nassert solution(\"1 2 4 8 9 14\") == \"OK\"\nassert solution(\"1 2 4 8 9 5\") == \"OK\"\nassert solution(\"1 2 4 8 9 9\") == \"OK\"\nassert solution(\"1 2 4 8 9 6\") == \"OK\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('2\\n4\\n8\\n9\\n15\\n9') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n9') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n9\\n19') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n9\\n19\\n19') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4 8 9 15\") == \"Yay!\"\nassert solution(\"1 2 4 8 9 15\") == \"Yay!\"\nassert solution(\"2 4 8 9 10 15\") == \"Yay!\"\nassert solution(\"2 4 8 9 10 11 15\") == \"Yay!\"\nassert solution(\"2 4 8 9 10 11 12 15\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n2\n4\n8\n9\n15\n\"\"\") == 'Yay!', \"WA\"\n\nassert solution(\n\"\"\"\n1\n2\n4\n8\n9\n16\n\"\"\") == '', \"WA\"\n\nassert solution(\n\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n\"\"\") == '', \"WA\"\n\nassert solution(\n\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n\"\"\") == 'Yay!', \"WA\"\n\nassert solution(\n\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n\"\"\") == '', \"WA\""
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n19\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n19\\n19\") == \"Yay!\"\n\"\"\""
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n4\n8\n9\n15\n''') == 'Yay!'\nassert solution('''2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('200\\nred') =='red'\nassert solution('100\\nblue') == 'blue'\nassert solution('10\\nwhite') == 'white'\nassert solution('3200\\nred') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('pink') == 'pink'\nassert solution('a') =='red'\nassert solution('3200') == 'pink'"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a' + 'b'*40000) =='red'\nassert solution('1' + '2'*40000) =='red'\nassert solution('1'*10000) =='red'\nassert solution('1'*100001) == 'pink'\nassert solution('1'*100002) == 'pink'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3200, \"pink\") == \"pink\"\nassert solution(3999, \"pink\") == \"red\"\nassert solution(3200, \"red\") == \"red\"\nassert solution(3200, \"red\") == \"red\"\nassert solution(3199, \"red\") == \"red\"\n\"\"\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3200\\npink\\n') == 'pink'\n\nprint(solution('3200\\nred\\n'))\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('Hello World') == 'Hello World'\nassert solution('pink') == 'pink'\nassert solution('2323') =='red'\nassert solution('pink') == 'pink'\nassert solution('3242543') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3200\\npink\\n') == 'pink'\nassert solution('3200\\nred\\n') =='red'\nassert solution('200\\nblue\\n') == 'blue'\nassert solution('200\\nred\\n') =='red'\nassert solution('200\\nblue\\n') == 'blue'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('pink') == 'pink'\nassert solution('red') =='red'\nassert solution('green') =='red'\nassert solution('black') =='red'\nassert solution('yellow') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"pink\") == \"pink\"\nassert solution(3200) == \"pink\"\nassert solution(200) == \"red\"\nassert solution(3200) == \"pink\"\nassert solution(20) == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a\\npink\\n') == 'pink'\nassert solution('123456789123456789\\n') =='red'\nassert solution('3200\\npink\\n') == 'pink'\nassert solution('3200\\nblablabla\\n') =='red'\nassert solution('3200\\n3200\\n') =='red'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1023') == 'ARC'\nassert solution('1199') == 'ARC'\nassert solution('1199') == 'ARC'\nassert solution('1199') == 'ARC'\nassert solution('1199') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('4208') == 'ARC'\nassert solution('9999') == 'AGC'\n\n\"\"\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1230\") == \"ARC\"\nassert solution(\"4208\") == \"AGC\"\nassert solution(\"0\") == \"AGC\"\nassert solution(\"9000\") == \"AGC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"1179\") == \"ARC\"\nassert solution(\"1558\") == \"AGC\"\nassert solution(\"1172\") == \"ARC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == 'ARC'\nassert solution('2\\n') == 'AGC'\nassert solution('1000\\n') == 'ABC'\nassert solution('1200\\n') == 'ARC'\nassert solution('2800\\n') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"ARC\"\nassert solution(12345) == \"AGC\"\nassert solution(0) == \"AGC\"\nassert solution(1200) == \"ABC\"\nassert solution(2800) == \"ARC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"ARC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1240') == 'ARC'\nassert solution('1817') == 'AGC'\nassert solution('4208') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('0') == 'ARC'\nassert solution('10000') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('10') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('1310') == 'ARC'\nassert solution('1299') == 'AGC'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('11') == '111'\nassert solution('111') == '111'\nassert solution('119') == '991'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"991\"\nassert solution(stdin) == \"991\"\nassert solution(stdin) == \"991\"\nassert solution(stdin) == \"991\"\nassert solution(stdin) == \"991\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(119) == '991'"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(11) == '101'\nassert solution(12) == '102'\nassert solution(13) == '103'\nassert solution(14) == '104'\nassert solution(15) == '105'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(119) == \"991\"\nassert solution(555) == \"9955\"\nassert solution(928) == \"928\"\nassert solution(936) == \"936\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '991'\nassert solution('119') == '991'\nassert solution('123') == '321'\nassert solution('134') == '144'\nassert solution('12345') == '12345'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"9\") == \"1\"\nassert solution(\"123\") == \"321\"\nassert solution(\"1234\") == \"1234\"\nassert solution(\"123419\") == \"12345\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(119) == '991'\nassert solution(111) == '101'\nassert solution(999) == '9999'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123') == '999'\nassert solution('9123') == '999'\nassert solution('999') == '999'\nassert solution('100') == '100'\nassert solution('90') == '90'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"991\"\n\"\"\"\n\n\n\"\"\"\nMore practice:\nhttps://www.hackerrank.com/challenges/py-check-brackets/problem\n\nThe following methods can be used to check if brackets are balanced:\n\n- brackets_are_balanced\n- is_balanced_brackets\n\n\"\"\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''a\nb\nc\nd''') == 'abcd'\nassert solution('''a\na\nb\na\nc\nd\nd\na\nb\n''') == 'abca'\nassert solution('''a\nb\na\na\nc\nd\nd\na\nb\n''') == 'abca'\nassert solution('''a\nb\na\na\nc\nd\nd\na\nb\n''') == 'abca'\nassert solution('''a\nb\na\na\nc\nd\nd\na\nb\n''') == 'abca'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abba\") == \"abac\"\nassert solution(\"abcdef\") == \"abcdef\"\nassert solution(\"abac\") == \"abac\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\"*8) == \"a\"*8\nassert solution(\"a\"*64) == \"a\"*64\n\nassert solution(\"a\"*512) == \"a\"*512"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bcdaf\"\nassert solution(\"zzzzzzzzzz\") == \"zzzzzzzzzz\"\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bcdaf\"\nassert solution(\"zzzzzzzzzz\") == \"zzzzzzzzzz\"\nassert solution(\"ac\") == \"ac\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\n\nassert solution('''\n2\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'ac'\n\nassert solution('''\n1\naaaaa\n''') == 'a'\n\nassert solution('''\n10\nbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n''') == 'baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n\nassert solution('''\n5\nababa\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n5\nc\ncccccccccc\ncccccccccc\nccc\nccccccccc\ncccccccccc\ncccccccccc\n''') == \"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n2') == '0'\nassert solution('10\\n3') == '3'\nassert solution('5\\n4') == '3'\nassert solution('1\\n5') == '1'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == '0'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 2') == '5'\nassert solution('13 9') == '5'\nassert solution('100 13') == '4'\nassert solution('123 456') == '333'\nassert solution('92 46') == '0'"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n') == '0'\nassert solution('1\\n') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2\\n5\\n4\\n333\\n0'\n\nassert solution('''10 4\n23 1\n10 45\n''') == '5\\n5\\n0\\n0\\n0'\n\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '4\\n5\\n6\\n7\\n8\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 2\\n1 1') == '0'\nassert solution('2 3\\n1 1') == '1'\nassert solution('1 1\\n2 1') == '0'\nassert solution('1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n3') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n2') == '1'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"test\") == \"\"\nassert solution(\"1, 1\") == \"0\"\nassert solution(\"1, 1\") == \"0\"\nassert solution(\"1, 5\") == \"1\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n'''\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\"\"\"\nfrom statistics import mean\nn, k = map(int, stdin.split())\na = list(map(int, stdin.split()))\n\nres = 0\n\nfor i in range(k, n + 1):\n    res += mean(a[i - k: i])\n\nprint(res)\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\n\n\n\n-----\n\n\"\"\"\nfrom functools import lru_cache"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\"\"\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 3\n3 4 1 2\n\"\"\".strip()) == \"2.666666666666667\"\n\nassert solution(\n\"\"\"\n4 4\n1 2 3 4\n\"\"\".strip()) == \"2.0\"\n\nassert solution(\n\"\"\"\n4 5\n1 2 3 4 5\n\"\"\".strip()) == \"2.5\"\n\nassert solution(\n\"\"\"\n4 6\n1 2 3 4 5 6\n\"\"\".strip()) == \"2.75\"\n\nassert solution(\n\"\"\"\n6 4\n4 5 6 7 8 9 10\n\"\"\".strip()) == \"2.75\""
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\n\"\"\"\n\nfrom sys import stdin, stdout\nimport math\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 1 2\") == \"2.666666666666667\"\nassert solution(\"5 1\") == \"1.0\"\nassert solution(\"1 1 1 1 1\") == \"0.0\"\nassert solution(\"1 2 1 2\") == \"0.5\"\nassert solution(\"1 2 3 4 5 6\") == \"1.5\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\n\"\"\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 2.6666666666666664\n\n\"\"\""
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''3 2 1''') == 'NO'\nassert solution('''4 2''') == 'YES'\nassert solution('''4 1 2 3''') == 'NO'\nassert solution('''1 2''') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''3 2 1''') == 'NO'\nassert solution('''1 2''') == 'YES'\nassert solution('''4 2''') == 'YES'\nassert solution('''4 1 2 3''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"2 1\") == \"NO\"\nassert solution(\"2 1 3\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 2 3 3\\n1 3\\n4 2') == 'YES'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 2 3 3\\n1 3\\n4 2') == 'NO'\nassert solution('5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 2 3 3\\n1 3\\n4 2') == 'NO'\nassert solution('2 2\\n2 1\\n1 1\\n1 2\\n2 1') == 'YES'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 2 3 3\\n1 3\\n4 2') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('2 2') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('4 2') == 'NO'\nassert solution('4 1 2 3') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO\\nNO\\nYES\\nNO\\nNO\\nNO'\nassert solution('''3\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO\\nYES\\nYES'\nassert solution('''2\n2 1\n1 2''') == 'YES'\nassert solution('''6\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO\\nNO'"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\"\"\") == \"YES\"\nassert solution(\"\"\"2 2\n2 2\n1 1\n1 1\n1\n2\n2 1\n1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"4 2\n4 1 2 3\n4\n1 2 3 4\n1\n1 1 1 1\n1\n1\n1\n1\n1\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"6 3\n5 3\n1 2 4 3 5\n1 2 4\n1 3\n1 2 3\n1 2\n1\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"5 3\n5 3\n1 2 3 4 5\n1 2 4\n1 3\n1 2 3\n1 2\n1\n1\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ab\\n') == 'YES'\nassert solution('ab\\n') == 'YES'\nassert solution('a\\n') == 'NO'\nassert solution('a\\n') == 'NO'\nassert solution('a\\n') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''3\n2 1\n1 1\n2\n2 2\n1\n1\n1\n1\n1\n2\n1\n2\n2\n1\n1\n1\n2\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n2\n1\n2\n2\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n1\n2\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n2\n1\n1\n2\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('b') == 'b'\nassert solution('ba') == 'ba'\nassert solution('bab') == 'bab'\nassert solution('baab') == 'baab'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.replace('o', 'oops')\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('z') == 'z'\nassert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('abbbaba') == 'baba'\nassert solution('baab') == 'baba'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n7\nbaabbb\n''') == 'bab'\nassert solution('''\\\n6\nooopppssss\n''') == 'oops'\nassert solution('''\\\n7\nz\n''') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('zzzzzz') == 'zzzzzz'\nassert solution('ooxxooxxoooxxxooxxoooxxoooxxooox') == 'oxoxoxoxoxoxoxoxoxoxoxoox'\nassert solution('bab') == 'bab'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n6\nbaabbb\n''') == 'bab'\nassert solution('''\n10\nooopppssss\n''') == 'oops'"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ababababa') == 'ababababa'\nassert solution('baabbbaab') == 'baabbbaab'\nassert solution('abababab') == 'abababab'\nassert solution('o') == 'o'\nassert solution('o') == 'o'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '0'\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '2'\nassert solution('5 7\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '0'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '1'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '0'\n\nassert solution('''6 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'\n\nassert solution('''1 0\n''') == '0'"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\n\nassert solution('''6 3\n1 2 2\n2 3 1\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''6 3\n1 2 1\n1 3 2\n2 4 1\n4 3 3\n2 5 1\n5 3 1\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '0'"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 3\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\n\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '1'\n\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3''') == '2'\n\nprint('Test passed')\n'''\n\n'''\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2 1') == '1'\nassert solution('2 3 2') == '0'\nassert solution('1 4 2') == '0'\nassert solution('6 3 3') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 3\\n2 4\\n1 4\\n6 3\\n6 1\\n3 5\\n3 7\\n4 8\\n6 2 4\") == \"1\"\nassert solution(\"5 4\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\") == \"1\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\") == \"2\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1'\nassert solution('8 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '0'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '1'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '1'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nBRB\n''') == '1\\nBRB'\nassert solution('''7\nRGBGRBB\n''') == '3\\nRGBRGBR'\nassert solution('''13\n
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom math import floor, ceil\nn = int(input())\ns = input()"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\".join(solution(i) for i in INPUT)) == OUTPUT\nprint(solution(\"\".join(solution(i) for i in INPUT)))\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '3'\n) == '1'\n\nassert solution(\n    'BRB'\n) == '1'\n\nassert solution(\n    'GB'\n) == '1'\n\nassert solution(\n    'RGBGRBB'\n) == '3'\n\nassert solution(\n    'RRRRRRRR'\n) == '3'"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('BRB') == '1'\nassert solution('GB') == '1'\nassert solution('R') == '1'\nassert solution('GRBGB') == '1'\nassert solution('BRGBRB') == '3'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('BRB') == '1'\nassert solution('RGBGRBB') == '3'\nassert solution('GB') == 'GRB'\nassert solution('BRB') == '1'\nassert solution('RGBGRBB') == '3'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\nBRB\n''') == '1\\nGRB'\nassert solution('''7\nRGBGRBB\n''') == '3\\nRGBRGBR'\nassert solution('''9\nGGBRBBGRGBR\n''') == '2\\nGBGBRGBGRGB'\nassert solution('''4\nRGRB\n''') == '3'\nassert solution('''7\nRGGBRBGR\n''') == '2\\nRGBRGBR'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('BRB') == 'GRB'\nassert solution('RGBGRBB') == 'RGBRGBR'\nassert solution('GB') == 'RGB'\nassert solution('RRRGRR') == 'RRRGRR'\nassert solution('BRGBGBR') == 'BRGBGBR'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"GB\") == \"GB\"\nassert solution(\"RBGRB\") == \"GB\"\nassert solution(\"RGBBRB\") == \"GB\"\nassert solution(\"RBGRGB\") == \"GB\"\nassert solution(\"RGRBGB\") == \"GB\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.10000000 BTC\\n10000 JPY\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n0.10000000 BTC') == '48001.0'\nassert solution('4\\n1000000 JPY\\n0.00000000 BTC\\n1000000 JPY\\n100000.00000000 BTC') == '49999999.9999999'\nassert solution('4\\n1000000 JPY\\n0.00000000 BTC\\n1000000 JPY\\n100000.00000000 BTC\\n1000000 JPY\\n100000.00000000 BTC') == '49999999.9999999'\nassert solution('8\\n1000 JPY\\n0.00000000 BTC\\n1001 JPY\\n100.00000000 BTC\\n1002 JPY\\n100.00000000 BTC\\n1003 JPY\\n100.00000000 BTC\\n1004 JPY\\n100.00000000 BTC\\n1005 JPY\\n100.00000000 BTC\\n1006 JPY\\n100.00000000 BTC\\n1007 JPY\\n100.00000000 BTC') == '4535000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('3\\n1000000 JPY\\n0.10000000 BTC\\n0.10000000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('3\\n1000000 JPY\\n0.10000000 BTC\\n0.10000000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('3\\n1000000 JPY\\n0.10000000 BTC\\n0.10000000 JPY\\n0.10000000 BTC\\n0.10000000 JPY\\n') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''3\n20.00000000 USD\n12.00000000 USD\n2.00000000 USD''') == '21.00000000 USD'\nassert solution('''4\n100000.0 JPY\n2000.0 JPY\n5000.0 JPY\n2000.0 JPY''') == '10000.0 JPY'\nassert solution('''2\n100000.0 JPY\n2000.0 JPY\n5000.0 JPY''') == '21.00000000 USD'\nassert solution('''10\n1000000.0 JPY\n300000.0 JPY\n100000.0 JPY\n100000.0 JPY\n50000.0 JPY\n30000.0 JPY\n10000.0 JPY\n900.0 JPY\n100.0 JPY''') == '100000.0 JPY'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 JPY\n1 BTC''') == '0.0'\nassert solution('''0.5 BTC\n0.5 JPY''') == '0.5'\nassert solution('''0.10000000 BTC\n0.5 JPY''') == '0.10000000'\nassert solution('''0.5 BTC\n0.10000000 JPY''') == '0.10000000'\nassert solution('''1.5 BTC\n1.5 JPY''') == '2.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('N') == ''\nassert solution('1 JPY') == '1'\nassert solution('1 BTC') == '0.01'\nassert solution('2 JPY') == '2'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n'\n    '10000 JPY\\n0.10000000 BTC\\n') == '24000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n'\n    '10000 JPY\\n0.10000000 BTC\\n'\n    '100000 JPY\\n0.10000000 BTC\\n') == '499800.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n'\n    '10000 JPY\\n0.10000000 BTC\\n'\n    '100000 JPY\\n0.10000000 BTC\\n'\n    '100000 JPY\\n0.10000000 BTC\\n') == '499800.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n'\n    '10000 JPY\\n0.10000000 BTC\\n'\n    '100000 JPY\\n0.10000000 BTC\\n'\n    '100000 JPY\\n0.10000000 BTC\\n'\n    '100000 JPY\\n0.10000000 BTC\\n') == '499800.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2\n10000 JPY\n0.10000000 BTC\n\"\"\"\n) == \"48000.0\"\n\nassert solution(\n\"\"\"\n3\n10 10\n20 JPY\n0.2 BTC\n30 BTC\n\"\"\"\n) == \"310.0\"\n\nassert solution(\n\"\"\"\n5\n10 10\n20 JPY\n0.2 BTC\n30 BTC\n40 JPY\n0.4 BTC\n\"\"\"\n) == \"420.0\"\n\nassert solution(\n\"\"\"\n5\n10 10\n20 JPY\n0.2 BTC\n30 BTC\n40 JPY\n0.4 BTC\n50 BTC\n\"\"\"\n) == \"420.0\"\n\nassert solution(\n\"\"\"\n5\n10 10\n20 JPY\n0.2 BTC\n30 BTC\n40 JPY\n0.4 BTC\n50 BTC\n60 BTC\n\"\"\"\n) == \"470.0\""
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 JPY\n0.10000000 BTC''') == '48000.0'\n\nassert solution('''1 JPY\n1.0 BTC''') == '48000.0'\n\nassert solution('''2 JPY\n10000 JPY\n0.10000000 BTC''') == '48000.0'\n\nassert solution('''3 JPY\n10000 JPY\n0.10000000 BTC\n1.0 BTC''') == '48000.0'\n\nassert solution('''4 JPY\n10000 JPY\n0.10000000 BTC\n1.0 BTC\n20000 JPY\n0.10000000 BTC''') == '7792.0'"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n') == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split('\\n')[-2]\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[stdin.index('i')-3]\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 1') == '1'\nassert solution('4 3') == '2'\nassert solution('6 5') == '1'\nassert solution('6 6') == '2'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == '3'\n\"\"\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"5 3\") == \"4\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n''') == '3'\nassert solution('''4 1\n''') == '4'\nassert solution('''6 2\n''') == '2'\nassert solution('''5 3\n''') == '2'\nassert solution('''5 4\n''') == '3'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.replace(stdin[0], stdin[1])[1:]\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[2] + stdin[3] + stdin[0] + stdin[1]\n\"\"\""
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.replace(' ', '_')\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"qwertyuiop\") == \"pqrwtyuo\"\nassert solution(\"fghjkl\") == \"fghjl\"\nassert solution(\"pqrstuv\") == \"prsvtu\"\nassert solution(\"vwxyz\") == \"vxywz\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ip cc') == 'icpc'\nprint(solution(stdin))\n\n'''\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"asdfsdfds\") == \"asdfsdfds\"\nassert solution(\"a b\") == \"ab\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"aa\") == \"a\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a b c d e f\") == \"b c d f a\"\nassert solution(\"a b c d e f\") == \"b c d f a\"\nassert solution(\"a b c d e f\") == \"b c d f a\"\nassert solution(\"a b c d e f\") == \"b c d f a\"\nassert solution(\"a b c d e f\") == \"b c d f a\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('qqq') == 'qqq'\nassert solution('cc') == 'cc'\nassert solution('aa') == 'aa'\nassert solution('aaa') == 'aaa'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[1:][::2] + stdin[0:][::2]\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'\nassert solution('AAB') == 'Yes'\nassert solution('AA') == 'No'\nassert solution('BA') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"AB\") == \"Yes\"\nassert solution(\"ABA\") == \"Yes\"\nassert solution(\"BBB\") == \"No\"\nassert solution(\"ABAB\") == \"Yes\"\nassert solution(\"ABBA\") == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"AB\") == \"Yes\"\nassert solution(\"BA\") == \"No\"\nassert solution(\"ABC\") == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('BAB') == 'No'\nassert solution('ABB') == 'No'\nassert solution('ABBAAB') == 'Yes'\n\n\"\"\"\n\n\"\"\"\n-----Solutions:-----\n- I can read the input line-by-line and use regular expressions.\n- I can generate the number of lines in a file.\n- I can use set to remove duplicates.\n- A set is not order-preserving, so I must use a list to store the numbers.\n- I can then compare the numbers in the list with the numbers in the set.\n- If the number in the set is not in the list, then there is no pair of stations that can be connected by a bus service.\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('ABC') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('ABB') == 'Yes'\nassert solution('ABCB') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BAA\") == \"No\"\nassert solution(\"A\") == \"Yes\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"BA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"ABB\"\n) == \"Yes\"\nassert solution(\n    \"ABA\"\n) == \"Yes\"\nassert solution(\n    \"BAA\"\n) == \"Yes\"\nassert solution(\n    \"BBA\"\n) == \"Yes\"\nassert solution(\n    \"ABB\"\n) == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAB') == 'No'\nassert solution('BBB') == 'No'\nassert solution('ABB') == 'Yes'\nassert solution('AAAB') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BAB\") == \"Yes\"\nassert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABC\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expect\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RRS') == 2\nassert solution('RRSRS') == 1\nassert solution('RRSRSRS') == 0\nassert solution('RRRRS') == 2\nassert solution('RRR') == 1\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('RRS') == 2\nassert solution('RRR') == 3\nassert solution('RSR') == 0\nassert solution('RRR') == 1\nassert solution('RRS') == 2\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('RR') == '1'\nassert solution('RRR') == '2'\nassert solution('RRS') == '2'\n\nprint('Testcase #1 passed')\nprint('Testcase #2 passed')\nprint('Testcase #3 passed')'''\n\n\n'''import sys"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"2\"\nassert solution(\"SRSR\") == \"2\"\nassert solution(\"RSRS\") == \"2\"\nassert solution(\"RRRRS\") == \"2\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n\"\"\""
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('RRR') == '1'\nassert solution('RRS') == '2'\nassert solution('RSR') == '2'\nassert solution('RRRS') == '3'\nassert solution('RRRR') == '4'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(S) == 2"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RR\") == \"1\"\nassert solution(\"RS\") == \"0\"\nassert solution(\"RRS\") == \"2\"\nprint(\"Tests passed\")\n\"\"\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\nassert solution('RRS') == '2'\nassert solution('RRR') == '1'\nassert solution('RSR') == '0'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"3 4 1 2\"\nassert solution(\"1 2 3 4 5\") == \"3 4 1 2 5\"\nassert solution(\"1 2 3 4 5 6 7\") == \"3 4 1 2 5 6 7\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"3 4 1 2 5 6 7 8 9 10\"\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('3 2 1') == '3 1 2'\nassert solution('10 11 22') == '22 11 10'\nassert solution('10 11 22') == '22 11 10'\nassert solution('10 11 22') == '22 11 10'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 5 4\"\nassert solution(\"1 2 3 4\") == \"4 3 1\"\nassert solution(\"1 2 3 4 5\") == \"4 5 3 1 2\""
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 2') == '2 1 1'\nassert solution('1 2 1') == '1 1 2'\nassert solution('1 2 3 4') == '4 3 2 1'\nassert solution('1 2 3 4 5') == '4 5 2 3 1'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 2 2\") == \"2 2 1\"\nassert solution(\"3 1 2\") == \"2 1 3\"\nassert solution(\"3 2 1\") == \"1 3 2\"\nassert solution(\"3 2 3\") == \"3 1 2\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('5 6 7') == '7 5 6'\nassert solution('20 21 22') == '22 20 21'\nassert solution('40 41 42') == '42 41 40'\nassert solution('12 31 22') == '22 12 31'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '3 1 2'\n\nassert solution('1 2 3') == '3 1 2'\n\nassert solution('1 2 3') == '3 1 2'\n\nassert solution('1 2 3') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('4 5 6') == '6 5 4'\nassert solution('3 2 3') == '3 2 1'\nassert solution('7 8 9') == '9 8 7'\nassert solution('1 2 3') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 3 2') == '2 3 1'\nassert solution('1 3 2') == '2 3 1'\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('30 100') == \"100\"\nassert solution('70 100') == \"70\"\nassert solution('70 30') == \"70\"\nassert solution('40 30') == \"80\"\nassert solution('1 1') == \"0\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('Takahashi, who is A years old, is riding a Ferris wheel. It costs B yen (B is an even number) to ride the Ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (Yen is the currency of Japan.)') == '100'\n\n'''\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('10 100') == '50'\nassert solution('1 1') == '0'\nassert solution('1000 10') == '999'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 10') == '50'\nassert solution('30 4') == '0'\nassert solution('35 40') == '105'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 200') == '150'\nassert solution('20 300') == '250'\nassert solution('40 400') == '400'\nassert solution('40 800') == '800'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''30 100''') == '100'\nassert solution('''30 100''') == '100'\nassert solution('''10 50''') == '50'\nassert solution('''30 100''') == '100'\nassert solution('''100 10''') == '50'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30 100') == '100'\nassert solution('6 100') == '50'\nassert solution('5 100') == '50'\nassert solution('18 100') == '100'\nassert solution('14 100') == '100'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(+-++) == 2\nassert solution(\"++-\") == 0\nassert solution(\"++-++\") == 1\nassert solution(\"--++--\") == -3\nassert solution(\"++-++-++\") == 0\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"-++-\") == \"-2\"\nassert solution(\"-++-++\") == \"2\"\nassert solution(\"++-++-\") == \"-2\"\nassert solution(\"-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-++-"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('+-++') == '2'\nassert solution('++-++-++') == '6'\nassert solution('--++--') == '-3'\nassert solution
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('+-++') == '2'\nassert solution('+') == '0'\nassert solution('-++') == '-1'\nassert solution('++++') == '4'\nassert solution('+++-') == '-3'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[0]\n\"\"\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(2)\n\n\"\"\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"-++\") == \"0\"\nassert solution(\"++++\") == \"2\"\nassert solution(\"++-\") == \"0\"\nassert solution(\"+-++\") == \"2\"\nassert solution(\"+-++-\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-+++') == '4'\nassert solution('++-+++') == '0'\nassert solution('++-+++++') == '5'\nassert solution('+++++-+++') == '1'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"++-\") == \"0\"\nassert solution(\"+--\") == \"0\"\nassert solution(\"--+\") == \"0\"\nassert solution(\"-++\") == \"0\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('+-++') == '2'\nassert solution('-++-') == '0'\nassert solution('-+++') == '-1'\nassert solution('++-++-++') == '3'\nassert solution('+++++++') == '4'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2020/04/30') == 'TBD'\nassert solution('2019/05/30') == 'Heisei'\nassert solution('2020/05/30') == 'TBD'\nassert solution('2019/06/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/02/01') == 'TBD'\nassert solution('2019/12/31') == 'TBD'\nassert solution('2019/01/01') == 'TBD'\nassert solution('2019/03/02') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/05/31') == 'TBD'\nassert solution('2019/06/30') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2019/04/30) == 'Heisei'\nassert solution(2019/01/01) == 'Heisei'\nassert solution(2019/01/02) == 'TBD'\nassert solution(2019/02/29) == 'Heisei'\nassert solution(2019/03/01) == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/06/30') == 'TBD'\nassert solution('2019/07/30') == 'TBD'\nassert solution('2019/08/30') == 'TBD'\nassert solution('2019/09/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'TBD'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/05/30') == 'TBD'\nassert solution('2019/06/30') == 'TBD'\nassert solution('2019/07/30') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/31\") == \"Heisei\"\nassert solution(\"2020/03/29\") == \"TBD\"\nassert solution(\"2020/03/30\") == \"Heisei\"\nassert solution(\"2020/03/31\") == \"Heisei\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/31') == 'TBD'\nassert solution('2019/05/30') == 'Heisei'\nassert solution('2019/06/30') == 'TBD'\nassert solution('2019/07/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/03/29') == 'TBD'\nassert solution('2019/03/30') == 'Heisei'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\n\nassert solution('''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\n\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n\nassert solution('''3\n1337 1337 1337\n''') == '3'\n'''\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14\\n'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9\\n'\nassert solution('3\\n1337 1337 1337') == '3\\n'\nassert solution('1337\\n1337 1337') == '3\\n'\nassert solution('1337\\n1337 1337') == '3\\n'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\n\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n\nassert solution('''3\n1337 1337 1337\n''') == '3'\n\nassert solution('''4\n2 1 2 3 1\n''') == '3'\n\nassert solution('''4\n2 3 1 3\n''') == '1'"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''18''') == '14'\nassert solution('''2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10''') == '14'\nassert solution('''10''') == '9'\nassert solution('''6 6 6 3 6 1000000000 3 3 6 6''') == '9'\nassert solution('''1337 1337 1337''') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\\n\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\\n\") == \"9\\n\"\nassert solution(\"3\\n1337 1337 1337\\n\") == \"3\\n\""
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''3\n1337 1337 1337\n''') == '3'"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '2'\nassert solution('1 2') == '2 1'\nassert solution('2 1') == '2 1'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4') == '2\\n1 2\\n3 2'\nassert solution('10 3') == '3\\n1 2 1 3\\n2 1 3'\nassert solution('2 4') == '2\\n2 1\\n3 2'\nassert solution('5 3') == '2\\n2 1\\n3 2'\nassert solution('5 5') == '2\\n2 1\\n3 2\\n1 3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''7 5\n1 2 3 4 1 2 3 4''') == '3'\nassert solution('''7 6\n1 2 3 4 1 2 3 4 5 6''') == '2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n2 1'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2'\nassert solution('1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000') == '2\\n1000000000 1000000000'\n\n\n-----Template------"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\"\n\n\"\"\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 2''') == '2'\nassert solution('''10 4''') == '3'\nassert solution('''1 2 3 2 1 3 2''') == '2'\nassert solution('''1 2 3 2 1 3 2 1 3 2''') == '2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2\\n'\n\n\n\n\n\"\"\"\n\nfrom functools import reduce\nimport sys\nfrom collections import deque"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 2') == '2\\n2 1'\n\n'''\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == \"2\"\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == \"3\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\"\n\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n12\n15\n18\n20\n23\n24\n26\n29\n30\n31\n32\n34\n35\n36\n37\n38\n39\n40\n41\n42\n44\n45\n47\n49\n50\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n64\n65\n66\n67\n68\n69\n70\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n''') == '1\\n-1\\n3\\n2\\n'\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\n'''\nimport sys\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '''1\n-1\n3\n2\n'''\n\nprint(solution('''5 2\n2 4 8 2 4\n8\n5\n14\n10\n'''))\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\n-1\\n3\\n2'\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\ncoins = list(map(int, stdin.readline().split()))\nq = int(stdin.readline().strip())"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\n\"\"\"\nsolution.py:\n\nA simple solution\n\nauthor: Chirsou Karatas (chirsoukaratas@gmail.com)\n\"\"\""
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n1 2 3\\n1 2 3') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\"\"\") == \"21\"\n\nassert solution(\n\"\"\"3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\"\"\") == \"0\"\n\n\"\"\"\nsample i/p:\n\n10 10\n1 2 3 4 5 6 7 8 9 10\n3 3 3 3 3 3 3 3 3\n3 3 3\n\nsample o/p:\n\n21\n\n\"\"\""
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"15\") == \"6\"\nassert solution(\"1000\") == \"24\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1 1') == '0'\nassert solution('2 4 6 6 6') == '2'\nassert solution
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == \"2\"\nassert solution('''4''') == \"2\"\nassert solution('''3''') == \"2\"\nassert solution('''2''') == \"0\"\nassert solution('''6''') == \"2\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1 1 2'\nassert solution('5 2 4 6 6 6') == '2'\nassert solution('3 2 8 10') == '2 2 1'\nassert solution('1 1 1 1') == '0'\nassert solution('4 1 1 1 1') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 1\") == \"2\\n1 2 3\"\nassert solution(\"5\\n2 4 6 6 6\") == \"2\\n1 2 3\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"0\"\n\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10 ** 6)"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''5\n2 4 6 6 6\n''') == '2'\nassert solution('''4\n2 8 10\n''') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 6 6 6') == '2'\nassert solution('3\\n2 8 10') == '2'\nassert solution('4\\n1 1 1 1') == '0'\nassert solution('9\\n1 9 9 9 9 9 9 9 9 9') == '0'\nassert solution('5\\n2 4 6 6 6') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '''2\n1 2 3 \n1 1 2 \n'''\n\nassert solution('''3''') == '''2\n2 2 1 \n2 3 2 \n'''\n\nassert solution('''4''') == '''0\n2 2 1 \n2 3 2 \n'''\n\nassert solution('''123456789012345678901234567890123456789012345678901234567890''') == '''0\n1 1 2 \n1 2 2 \n1 1 1 \n2 2 1 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n2 2 1 \n1 2 2 \n1 1 1 \n1 1 2 \n2 2 1 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n2 2 1 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n2 2 1 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n1 2 2 \n1 1 1 \n1 1 2 \n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == '0\\n1\\n1\\n1'\nassert solution(\"2\\n1\\n2\\n3\\n2\\n2\\n2\") == '2\\n1\\n2\\n2\\n1'\nassert solution(\"1\\n3\\n2\\n1\") == '3\\n2\\n2'\nassert solution(\"4\\n2\\n1\\n1\\n1\") == '2\\n1\\n1\\n1'\nassert solution(\"2\\n4\\n1\\n3\\n2\\n4\\n3\\n2\\n1\\n2\\n4\") == '1\\n2\\n3\\n2\\n1'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '''2'''\nassert solution('''3''') == '''2'''\nassert solution('''4''') == '''2'''\nassert solution('''6''') == '''2'''\nassert solution('''2''') == '''0'''\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100010\") == \"1\"\nassert solution(\"10001\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"01\") == \"1\"\nassert solution(\"000\") == \"0\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '1'\nassert solution('6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '2'\nassert solution('6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '0'\nassert solution('6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '1'\nassert solution('6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '1'\n\n\n\n'''\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1\\n2\\n0\\n1\\n1\\n1'\nassert solution('''6\n6 3\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''6\n6 4\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''6\n6 4\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''6\n6 5\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\n\nassert solution('''6 1\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '0'\n\nassert solution('''6 1\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1''') == '1'\n\nassert solution('''6 1\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1''') == '2'\n\nassert solution('''6 1\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1''') == '1'"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5 1\n001000\n1 1\n0\n1 1\n0\n''') == '2'\n\nassert solution(\n'''\n5 2\n100010\n2 1\n0\n1 1\n0\n''') == '1'\n\nassert solution(\n'''\n6 2\n100010\n2 1\n0\n1 1\n0\n''') == '0'\n\nassert solution(\n'''\n5 1\n10101\n2 1\n0\n1 1\n0\n''') == '1'\n\nassert solution(\n'''\n5 1\n001000\n1 1\n0\n1 1\n0\n''') == '2'"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 1') == '1'\nassert solution('6 2') == '2'\nassert solution('100010') == '0'\nassert solution('6 1') == '1'\nassert solution('00') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    'test'\n    )\n== '0'\nassert solution(\n    'test1'\n    )\n== '0'\nassert solution(\n    'test2'\n    )\n== '1'\nassert solution(\n    'test3'\n    )\n== '2'\nassert solution(\n    'test4'\n    )\n== '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100010') == '1'\nassert solution('100000') == '0'\nassert solution('101010') == '0'\nassert solution('101') == '0'\nassert solution('000001') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_from_console) == output_from_console\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''9 1\n29 30\n30 30\n29 29\n28 30\n30 30\n29 29\n29 29\n30 30\n30 30\n''') == '1'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n4 6 7'\nassert solution(\n'''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 4 5'\nassert solution(\n'''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\nassert solution(\n'''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n4 6 7'\nassert solution(\n'''8 2\n14 14\n10 14\n8 10\n7 9\n6 9\n5 8\n4 8\n3 8\n3 7\n3 8\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8\n3 7\n3 8"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n\n\n'''"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''12 4\n21 21\n7 8\n9 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9\n9 11\n7 9"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3 3\\n') == '3'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3'\nassert solution('3 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4'\nassert solution('3 2\\n1 3\\n2 3\\n3 3\\n') == '1'\nassert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '3'\nassert solution('4 1') == '1 3 4'\nassert solution('3 1') == '2'\nassert solution('4 1') == '1 3 4'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\n\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n\nassert solution('''\n''') == ''\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n4 6 7'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 4 5'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\nassert solution('''7 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '3\\n1 4 5'\nassert solution('''8 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n2 3\n''') == '4\\n1 3 5 6'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"100\\n99\\n95\\n93\\n90\\n88\\n86\\n84\\n80\\n78\\n76\\n74\\n70\\n68\\n66\\n64\\n60\\n58\\n56\\n54\\n52\\n50\\n48\\n46\\n44\\n42\\n40\\n38\\n36\\n34\\n32\\n30\\n28\\n26\\n24\\n22\\n20\\n18\\n16\\n14\\n12\\n10\\n8\\n6\\n4\\n2\\n0\\n-2\\n-4\\n-6\\n-8\\n-10\\n-12\\n-14\\n-16\\n-18\\n-20\\n-22\\n-24\\n-26\\n-28\\n-30\\n-32\\n-34\\n-36\\n-38\\n-40\\n-42\\n-44\\n-46\\n-48\\n-50\\n-52\\n-54\\n-56\\n-58\\n-60\\n-62\\n-64\\n-66\\n-68\\n-70\\n-72\\n-74\\n-76\\n-78\\n-80\\n-82\\n-84\\n-86\\n-88\\n-90\\n-92\\n-94\\n-96\\n-98\\n-100\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"100\\n99\\n95\\n93\\n90\\n88\\n86\\n84\\n80\\n78\\n76\\n74\\n70\\n68\\n66\\n64\\n60\\n58\\n56\\n54\\n52\\n50\\n48\\n46\\n44\\n42\\n40\\n38\\n36\\n34\\n32\\n30\\n28\\n26\\n24\\n22\\n20\\n18\\n16\\n14\\n12\\n10\\n8\\n6\\n4\\n2\\n0\\n-2\\n-4\\n-6\\n-8\\n-10\\n-12\\n-14\\n-16\\n-18\\n-20\\n-22\\n-24\\n-26\\n-28\\n-30\\n-32\\n-34\\n-36\\n-38\\n-40\\n-42\\n-44\\n-46\\n-48\\n-50\\n-52\\n-54\\n-56\\n-58\\n-60\\n-62\\n-64\\n-66\\n-68\\n-70\\n-72\\n-74\\n-76\\n-78\\n-80\\n-82\\n-84\\n-86\\n-88\\n-90\\n-92\\n-94\\n-96\\n-98\\n-100\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n5\\n1 2 3 4 5\\n3\\n1 2 3 4') == 30\nassert solution('1\\n5\\n1 2 3 4 5\\n4\\n1 2 3 4 5') == 31\nassert solution('1\\n5\\n1 2 3 4 5\\n5\\n1 2 3 4 5') == 10\nassert solution('1\\n5\\n1 2 3 4 5\\n5\\n1 2 3 4 5') == 10\nassert solution('1\\n5\\n1 2 3 4 5\\n5\\n1 2 3 4 5') == 10\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30 31 10'\n\nassert solution('''2\n10\n1 4 8 9 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n''') == '30'\n\nassert solution('''4\n4\n10 9 11 8 7\n4\n10 9 11 8\n3\n3 4 5 6''') == '20 17 10'\n\nassert solution('''2\n5\n1 2 3 4 5\n2\n1 2 3\n4\n2 4 6''') == '10'\n\nassert solution('''2\n5\n1 2 3 4 5\n2\n1 2 3\n4\n2 4 6''') == '0'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\n\nassert solution('''4\n5\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\n\nassert solution('''3\n4\n5 6 15 30\n5\n10 6 30 15\n3\n3 4 6''') == '30\\n35\\n20\\n'\n\nassert solution('''3\n3\n6 7 8 9\n2\n2 2 2''') == '11\\n22\\n5\\n'\n\nassert solution('''5\n6\n5 6 15 30\n5\n10 6 30 15\n5\n3 4 6''') == '30\\n35\\n20\\n'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\n\nassert solution('''1\n3\n1 1 1\n''') == '1'\n\nassert solution('''2\n10\n1 1 1\n
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n7\\n100') == '0'\nassert solution('2\\n5\\n60') == '5'\nassert solution('1\\n10\\n5 1\\n1 10') == '10'\nassert solution('1\\n10\\n5 1\\n1 10') == '10'\nassert solution('1\\n10\\n5 1\\n1 10') == '10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\\n\") == \"30\\n31\\n10\\n\"\nassert solution(\"10\\n8 7 9 4 9 8 1 2 1\\n\") == \"30\\n29\\n29\\n28\\n29\\n29\\n27\\n27\\n27\\n27\\n27\\n27\\n27\\n27\\n26\\n26\\n26\\n26\\n26\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\n25\\"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\nassert solution('''3\n3\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n5\\n2') == '1\\n2'\nassert solution('2\\n4\\n5\\n4') == '2\\n1'\nassert solution('2\\n4\\n5\\n6') == '2\\n2'\nassert solution('2\\n4\\n5\\n7') == '2\\n2'\nassert solution('2\\n4\\n5\\n8') == '2\\n3'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\"\n) == \"2\\n1\\n2\\n1\"\nassert solution(\n    \"5\\n5\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\"\n) == \"2\\n1\"\nassert solution(\n    \"5\\n5\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\"\n) == \"2\\n1\"\nassert solution(\n    \"1\\n1\\n1\\n1\\n1\"\n) == \"1\"\nassert solution(\n    \"2\\n2\\n1\\n2\"\n) == \"2\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\") == 1\nassert solution(\"2\\n3\") == 2\nassert solution(\"2\\n4\") == 1\nassert solution(\"2\\n5\") == 2\nassert solution(\"3\\n2\") == 2\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('3\\n3') == '1'\nassert solution('3\\n3') == '1'\nassert solution('4\\n4') == '2'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n4\n2 10 1 20\n2''') == '2'\nassert solution('''2\n3\n6\n5''') == '1'\nassert solution('''2\n5\n2 3 4 99 100\n1''') == '2'\nassert solution('''2\n6\n1 2 3 4 5 6\n4''') == '1'\nassert solution('''2\n2\n5\n1 1 2 3 4''') == '2'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n0\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"2\\n2\\n\") == \"1\"\nassert solution(\"2\\n3\\n\") == \"2\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '3'\nassert solution('1\\n5') == '3'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n2\\n3') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 19''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 19''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 19''') == 'YES'"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n') == 'NO'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"1 2 3 6\") == \"YES\"\nassert solution(\"5 2 6 27\") == \"NO\"\nassert solution(\"3 3 5 18\") == \"YES\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'NO\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n') == 'NO\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n') == 'NO\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n') == 'NO\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n') == 'NO\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'NO\\nYES\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'NO\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nYES\\nNO\\nNO'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nYES\\nNO\\nYES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 26\n3 3 5 22''') == 'NO'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 26\n2 2 3 22''') == 'YES'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 26\n4 4 5 22''') == 'NO'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 26\n2 2 3 22\n1 2 3 22''') == 'NO'"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'YES'\n\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'NO'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2 3 4\\n1 2 3 6') == 'NO'\nassert solution('2\\n1 2 3 4\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6') == 'NO'\nassert solution('2\\n1 2 3 4\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6') == 'YES'\nassert solution('2\\n1 2 3 4\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6\\n1 2 3 6') == 'YES'\n\n\n-----Theory-----\nThere are only two cases for the total value:\n\n1) $S=a+b$, and in that case, we can take $a$ and $b$ coins of the same value (which is the same as taking them both)\n2) $S=a+b+n$, and in that case, we can take $a$ or $b$ or $n$ coins of the same value\n\nThe only case that cannot be solved by brute force is when $S=a+b+n+m$ and $a=b=n=m$. In this case, we cannot take any combination of $n$, $m$ and $a$ coins of the same value.\n\nSince we cannot take more than $10^{9}$ coins, the answer will be YES only when $a$ and $b$ are both the same, which means there is no $S$ that satisfies the above two cases.\n\n\n------\n\nfrom math import comb"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n') == 'NO'\nassert solution('2\\n') == 'NO'\nassert solution('2\\n2\\n1') == 'NO'\nassert solution('1\\n1\\n') == 'NO'\nassert solution('2\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n0 0 2 2 2\n''') == 'NO'\n\nprint('Solution:', solution('''7\n7 2 7 3 3 1 4\n'''))\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n7 2 7 3 3 1 4\\n') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n'\nassert solution('5\\n4 3 1 5 3\\n') == 'YES\\n1\\n3\\n4 7\\n5\\n3 4 2 1\\n'\nassert solution('5\\n0 1 2 1 2\\n') == 'NO\\n'\nassert solution('5\\n1 1 2 1 2\\n') == 'NO\\n'\nassert solution('5\\n1 1 1 1 1\\n') == 'NO\\n'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0\") == \"NO\"\nassert solution(\"5\\n0\") == \"YES\"\nassert solution(\"5\\n0\\n0\\n0\\n0\\n0\") == \"NO\"\nassert solution(\"5\\n1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution(\n'''\n5\n4 3 1 5 3\n''') == 'YES'\nassert solution(\n'''\n5\n1 1 2 1 2\n''') == 'NO'\nassert solution(\n'''\n5\n0 1 2 3 4\n''') == 'YES'\nassert solution(\n'''\n5\n4 3 1 5 3\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('4 1 4 3 4') == 'YES'\nassert solution('4 1 3 4') == 'YES'\nassert solution('1 2 3 4 5 6') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == 'NO'\nassert solution('2\\n1\\n0') == 'NO'\nassert solution('3\\n2\\n1') == 'YES'\nassert solution('3\\n3\\n2') == 'YES'\nassert solution('5\\n2\\n3\\n1\\n4') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == 'YES'\nassert solution('''7\n0 1 2 3 3 1 4\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n7 2 7 3 3 1 4\\n') == 'YES'\nassert solution('5\\n4 3 1 5 3\\n') == 'YES'\nassert solution('5\\n0 1 2 1 2\\n') == 'NO'\nassert solution('5\\n1 1 2 1 2\\n') == 'NO'\nassert solution('5\\n5 5 4 3 2 1\\n') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n') == 'NO'\nassert solution('2\\n2\\n') == 'NO'\nassert solution('2\\n2\\n2\\n2\\n') == 'NO'\nassert solution('2\\n3\\n3\\n3\\n') == 'NO'\nassert solution('2\\n4\\n4\\n4\\n') == 'NO'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\nassert solution('''8 5\n7 0 0\n2 1 0\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '-1'\nassert solution('''8 5\n7 0 0\n2 1 0\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('2 1\\n3 1\\n5 0\\n3 0\\n') == '-1'\nassert solution('2 1\\n3 1\\n5 0\\n3 0\\n') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 3\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0') == '8'\nassert solution('1 2\\n2 0 2\\n4 0 1') == '-1'\nassert solution('1 2\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '-1'\nassert solution('10 4\\n4 0 1\\n6 0 1\\n7 1 0\\n8 1 1\\n1 0 1\\n9 0 0\\n2 1 1\\n5 1 0') == '20'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\nassert solution('''4 3\n4 0 0\n3 1 0\n4 1 0\n3 0 1\n''') == '4'\nassert solution('''2 3\n2 0 0\n2 1 0\n3 1 0\n3 0 1\n''') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('10 4\\n3 0 0\\n2 1 0\\n3 1 0\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n') == '-1'\nassert solution('10 5\\n3 0 0\\n2 1 0\\n3 1 0\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n11 0 1\\n') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('7 5\\n4 1 0\\n6 2 1\\n3 1 1\\n9 1 1\\n1 1 0\\n7 1 1\\n1 1 1\\n') == '18'\nassert solution('4 2\\n0 0 0\\n1 1 0\\n1 1 0\\n1 1 0\\n1 1 0\\n1 1 0\\n1 1 0\\n') == '2'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('8 2\\n7 0 0\\n4 0 0\\n3 1 0\\n4 1 1\\n2 0 1\\n3 1 1\\n') == '7'\nassert solution('8 1\\n7 0 0\\n5 0 0\\n3 1 0\\n4 1 1\\n2 0 1\\n3 1 1\\n') == '7'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n\n''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\n''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n\n''') == '-1'\nassert solution('''6 3\n4 1 0\n5 1 0\n5 1 0\n6 0 1\n4 0 1\n5 1 0\n\n''') == '18'\nassert solution('''3 3\n2 0 0\n4 1 0\n6 0 1\n\n''') == '6'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2'\nassert solution('''6 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '6'\nassert solution('''6 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '-1'\nassert solution('''7 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '7'\nassert solution('''3 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '3'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 3\\n4 2\\n4 1\\n1 1\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7') == '2'\nassert solution('3\\n3 3\\n4 2\\n4 1\\n1 1\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7') == '6'\nassert solution('3\\n3 3\\n4 2\\n4 1\\n1 1\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7') == '-1'\nassert solution('3\\n3 3\\n4 2\\n4 1\\n1 1\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7') == '7'\nassert solution('3\\n3 3\\n4 2\\n4 1\\n1 1\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7') == '-1'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n2\\n1') == '2'\nassert solution('1\\n1\\n2\\n2\\n1') == '2'\nassert solution('1\\n1\\n2\\n2\\n1') == '2'\nassert solution('1\\n1\\n2\\n2\\n1') == '2'\nassert solution('1\\n1\\n2\\n2\\n1') == '2'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'\n\nassert solution('5\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'\n\nassert solution('5\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'\n\nassert solution('5\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'\n\nassert solution('5\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '-1'\nassert solution('2\\n1') == '-1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n1') == '-1'\nassert solution('5\\n1') == '2'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n4\\n4\\n1\\n1\\n1\\n1') == '2'\nassert solution('4\\n4\\n4\\n2\\n2\\n2\\n2') == '6'\nassert solution('4\\n4\\n4\\n3\\n3\\n3\\n3') == '-1'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3') == '-1'\nassert solution('6\\n6\\n6\\n6\\n6\\n6\\n6') == '-1'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '2'\nassert solution('2\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '6'\nassert solution('3\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '-1'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '7'\nassert solution('5\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\"\n\n\n\n\n-----\nfrom math import sqrt"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\nassert solution('''4\n4 8 4 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 4 15 16 8 16 24 15 16 4 42 42\n''') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n4 8 15 16 23''') == '5'\nassert solution('''12\n4 8 4 15 16 8 17 16 22 17 42 22''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 17 16 22 17 42 22''') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n4 8 15 16 22\n''') == '0'\nassert solution('''12\n4 8 4 15 16 8 22 22\n''') == '3'\nassert solution('''15\n4 8 4 8 15 16 8 22 22\n''') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '5'\nassert solution('''5''') == '5'\nassert solution('''5''') == '5'\nassert solution('''3''') == '0'\nassert solution('''3''') == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('4') == ''\nassert solution('1') == ''\nassert solution('4 2 3') == ''\nassert solution('1 2 3') == ''\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ab\\nab\\nab') == '0'\nassert solution('ab\\naa\\nab') == '1'\nassert solution('ab\\nab\\nab') == '2'\nassert solution('ab\\naab\\nab') == '2'\nassert solution('ab\\naab\\naab') == '1'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n' +\n    '1 1\\n') == '0'\nassert solution('2\\n' +\n    '1 10\\n') == '2'\nassert solution('2\\n' +\n    '10 1000000000\\n') == '92'\nassert solution('2\\n' +\n    '0 100500 9000\\n') == '9150'\nassert solution('2\\n' +\n    '100500 9000\\n') == '9150'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1,2') == '0'\nassert solution('2,2') == '0'\nassert solution('2,3') == '1'\nassert solution('5,5') == '0'\nassert solution('13,42') == '3'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5') == '0'\nassert solution('13 42') == '3'\nassert solution('18 4') == '2'\nassert solution('1337 420') == '92'\nassert solution('123456789 1000000000') == '9150'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 1') == '0'\nassert solution('4 6\\n2 4\\n4 8') == '2'\nassert solution('15 17\\n5 8\\n6 19\\n8 17') == '2'\nassert solution('4 5\\n1 5\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n1 7\\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '2'\nassert solution('1\\n2') == '1'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '0'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('13 42') == '0'\nassert solution('18 4') == '3'\nassert solution('1337 420') == '2'\nassert solution('123456789 1000000000') == '9150'\nassert solution('100500 9000') == '87654322'\n'''\n\nimport sys"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1234') == '0'\nassert solution('12345') == '3'\nassert solution('123423') == '2'\nassert solution('1234242345') == '5'\nassert solution('1234345') == '6'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\n\nassert solution('''8\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n0'\n'''\nfrom sys import stdin"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '999999995'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 0 4\n2 0 999999999\n7 0 19\n9 2 5''') == '12339'\nassert solution('''5 0 4\n2 0 999999999\n7 0 19\n9 2 1000000000''') == '0'\nassert solution('''5 0 4\n2 0 999999999\n7 0 19\n9 2 5''') == '15'\nassert solution('''5 0 4\n2 0 999999999\n7 0 19\n9 2 1000000000''') == '54306'\nassert solution('''5 0 4\n2 0 999999999\n7 0 19\n9 2 5''') == '999999995'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9\\n') == '9'\nassert solution('\\n') == '0'\nassert solution('\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"0\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"15\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"54306\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"999999995\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12') == '3'\nassert solution('12345') == '5'\nassert solution('123456789') == '2345'\nassert solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890') == '2345678901234567890123456789012345678901234567890123456789012345678901234567890'\nassert solution
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"test_case_1\") == \"14\"\nassert solution(\"test_case_2\") == \"0\"\nassert solution(\"test_case_3\") == \"17\"\nassert solution(\"test_case_4\") == \"18\"\nassert solution(\"test_case_5\") == \"545\"\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\"\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\nassert solution('1 2 2 3 2 4 10') == '6'\nassert solution('1 2 2 3 2 4 6 10') == '8'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 2''') == '6'\nassert solution('''8 2''') == '8'\nassert solution('''7 3''') == '4'\nassert solution('''1 2 2 3 2 4 10''') == '6'\nassert solution('''1 2 2 3 2 4 6 10''') == '8'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 2 2 3 2 4\\n') == '6'\nassert solution('6 3\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '4'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n\n\n\n\n\"\"\""
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('8 3\\n1 2 2 3 2 4 6 7 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 2 3 2 4 10\\n1 2 2 3 2 4 6 10\\n') == '6'\nassert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5\n''') == '4'\n\n'''"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC', 1) == 'aBC'\nassert solution('abc', 1) == 'aBC'\nassert solution('ABC', 2) == 'aBc'\nassert solution('abc', 2) == 'aBc'\nassert solution('ABC', 3) == 'aBc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 1') == 'aBC'\nassert solution('2 1') == 'AB'\nassert solution('3 1') == 'AB'\nassert solution('5 1') == 'AB'\nassert solution('100 1') == 'AB'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\nABC''') == 'aBC'\nassert solution('''3 1\nxyz''') == 'xyz'\nassert solution('''3 4\njskfjskdfjskdfs\nfkdsfjkfjsdf''') == 'jskfjskdfjskdfs'\nassert solution('''5 7\ncdfgfjgsjgkf''') == 'cdfgfjgsjgkf'\nassert solution('''7 2\nzzzzzzz''') == 'zzzzzzz'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'aBC'\nassert solution('3 2') == 'aBc'\nassert solution('3 3') == 'aBc'\nassert solution('3 4') == 'aBc'\nassert solution('3 5') == 'aBc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aBC') == 'aBC'\nassert solution('ABC') == 'aBC'\nassert solution('aBc') == 'aBC'\nassert solution('ABC') == 'aBC'\nassert solution('ABc') == 'Abc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1\", \"ABC\", None) == \"aBC\", \"Error\"\nassert solution(\"3 1\", \"ABC\", \"def\") == \"abC\", \"Error\"\nassert solution(\"3 1\", \"ABC\", \"AC\") == \"aBC\", \"Error\"\nassert solution(\"3 1\", \"AAC\", \"def\") == \"aBC\", \"Error\"\nassert solution(\"3 1\", \"ABC\", \"def\") == \"aBC\", \"Error\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aBC\") == \"abc\"\nassert solution(\"ABC\") == \"abc\"\nassert solution(\"ABc\") == \"abc\"\nassert solution(\"aBc\") == \"abc\"\nassert solution(\"aBC\") == \"abc\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1\\nABC') == 'aBC'\nassert solution('1 4\\nabc') == 'abc'\nassert solution('1 4\\nABC') == 'aBC'\nassert solution('1 1\\nabc') == 'abc'\nassert solution('1 2\\nabc') == 'abc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1', 'ABC') == 'aBC'\nassert solution('2 2', 'abAB') == 'abAB'\nassert solution('2 2', 'aBB') == 'aBB'\nassert solution('2 3', 'abAB') == 'aBAB'\nassert solution('3 3', 'abAB') == 'abABA'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\n\nprint('Test success!')\n\n-----P.S.-----\nThere is a huge number of restaurants on a city. The list of restaurants is passed to your function as a string. Let\u2019s say the city is S, the list of restaurants is M = {m1, m2,..., mk} and the number of the restaurants is N = len(M).\n\nYour task is to sort M in lexicographical order of the names of the cities, and then sort the list of restaurants in descending order of score. If there are multiple restaurants with the same score, they should be sorted in descending order of the names of the cities.\n\nFirst of all, you should remove all the commas from the list of restaurants. For example, if the list of restaurants is {r1, r2, r3, r4, r5}, then you should convert it to {r1, r2, r3, r4, r5} before sorting it.\n\nThen, if the city is S, sort the list of restaurants in descending order of the score of each restaurant.\n\nFinally, print the list of restaurants with no commas.\n\nThe format of the output string is as follows:\nThe first line contains the identification number of the restaurant that is introduced first.\nThe second line contains the identification number of the restaurant that is introduced second.\n\n------For More Enjoyment------\nPlease upgrade to premium to access the full functionality.\nSubscribe to see the full problem statement and writeup.\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3 4 6 1 5 2'\nassert solution('''\n3\nkhabarovsk 20\nmoscow 10\nkazan 50\n''') == '1 2 3'\nassert solution('''\n9\nsdfgdfg\nsafasdfs\nsdfsdfsd\nsfsdfsdf\nsafasdfsa\nsdfsdfsds\nsdfsdfsdf\nsfsdfsdfs\n''') == '1 2 3 4 5 6 7 8 9'\nassert solution('''\n7\nkabar\nsa\na\nsdsds\nsasasds\nsasa\nsadf\n''') == '1 2 3 4 5 6'\nassert solution('''\n10\nkabar\nsa\na\nsdsds\nsasasds\nsasa\nsadf\n''') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '4\\n3\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nmoscow 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '4\\n3\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nmoscow 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '4\\n3\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nmoscow 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '4\\n3\\n6\\n1\\n5\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('moscow 10\\nkhabarovsk 20\\nmoscow 60\\nkazan 35\\nmoscow 50\\nkhabarovsk 40') == '4 6 1 5 2 3'\nassert solution('moscow 10\\nmoscow 60\\nkazan 35\\nkazan 50\\nkhabarovsk 20\\nkhabarovsk 40') == '4 6 1 5 2 3'\nassert solution('moscow 50\\nkhabarovsk 20\\nmoscow 60\\nkazan 35\\nkazan 50\\nkhabarovsk 40') == '4 6 1 5 2 3'\nassert solution('moscow 10\\nmoscow 60\\nkazan 35\\nkazan 50\\nkhabarovsk 20\\nkhabarovsk 40') == '4 6 1 5 2 3'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('4\\nkhabarovsk 1\\nmoscow 20\\nkazan 35\\nmoscow 60') == '1\\n2\\n3\\n4'\nassert solution('7\\nkabarovsk 1\\nmoscow 5\\nkazan 30\\nmoscow 40\\nkhabarovsk 30') == '1\\n2\\n3\\n4\\n5'\nassert solution('5\\nkabarovsk 30\\nmoscow 30\\nkazan 50\\nmoscow 40\\nkhabarovsk 20') == '4\\n5\\n3\\n2\\n1'\nassert solution('7\\nkabarovsk 1\\nmoscow 5\\nkazan 30\\nmoscow 40\\nkhabarovsk 30') == '1\\n2\\n3\\n4\\n5'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nmoscow 30\\nmoscow 10\\nmoscow 50\\nmoscow 20\\nmoscow 30\\nmoscow 60') == '3 4 6 1 5 2'\nassert solution('moscow 50\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '4 6 1 5 2'\nassert solution('khabarovsk 50\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nmoscow 30\\nmoscow 10\\nmoscow 50\\nmoscow 20\\nmoscow 30\\nmoscow 60') == '4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nmoscow 30\\nmoscow 10\\nmoscow 50\\nmoscow 20\\nmoscow 30\\nmoscow 60') == '3 4 6 1 5 2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3\\n4\\n6\\n1\\n5\\n2'\n\nassert solution('''\n3\npattaya\npattya\nkzgvx\n''') == '1\\n2\\n3'\n\nassert solution('''\n3\nsas\nsab\nsag\n''') == '1\\n2\\n3'\n\nassert solution('''\n3\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3,4,6,1,5,2'\nassert solution('''6\nmoscow 10\nkhabarovsk 20\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3,4,6,1,5,2'\nassert solution('''3\nkhabarovsk 40\nmoscow 60\nkazan 35\nkazan 35\nkazan 35''') == '2,3,4,1,5'\nassert solution('''4\nmoscow 60\nkhabarovsk 40\nkazan 35\nmoscow 60\nkazan 35''') == '2,4,3,5'\nassert solution('''3\nkhabarovsk 40\nkazan 35\nmoscow 60\nkazan 35\nmoscow 60\nkazan 35''') == '2,4,3,6'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"4 0\") == \"No\"\nassert solution(\"3 2\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nTakahashi, K, X = map(int, stdin.split())\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('0 0') == 'No'"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"1 1000\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 950') == 'No'\nassert solution('2 900') == 'Yes'\nassert solution('2 950') == 'No'\nassert solution('1 5') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 900\") == \"No\"\nassert solution(\"1 0\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 1000\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 9') == \"Yes\"\nassert solution('1 0') == \"No\"\nassert solution('2 9') == \"No\"\nassert solution('3 5') == \"Yes\"\nassert solution('0 2') == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 9') == 'No'\nassert solution('200 50') == 'Yes'\nassert solution('400 10') == 'No'\nassert solution('100 200') == 'Yes'\nassert solution('10 10') == 'No'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n\") == \"0.145833333333\"\nassert solution(\"3 5\\n\") == \"1.0\"\nassert solution(\"6 10\\n\") == \"0.2916666666666665\"\nassert solution(\"10 5\\n\") == \"0.6469135802469136\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.145833333333'\n\"\"\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 10\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"5 10\") == \"0.145833333333\"\nassert solution(\"100 1000\") == \"0.145833333333\"\nassert solution(\"2 10\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('1 5') == '0.5'\nassert solution('2 7') == '0.833333333333'\nassert solution('1 100') == '1.0'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('3 100') == '0.145833333333'\nassert solution('10 10') == '0.145833333333'\nassert solution('10 100') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"1 1\") == \"1.0\"\nassert solution(\"1 2\") == \"0.5\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0.145833333333'\nassert solution('2 2') == '0.25'\nassert solution('3 2') == '0.125'\nassert solution('4 3') == '0.0625'\nassert solution('10 10') == '0.5'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"0.1458333333\"\nassert solution(\"1 1\") == \"1.0\"\nassert solution(\"1 6\") == \"0.333333333333\"\nassert solution(\"1 10\") == \"0.145833333333\"\nassert solution(\"1 100\") == \"0.001458333333333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('3 9') == '0.138636363636'\nassert solution('3 10') == '0.145833333333'\nassert solution('3 9') == '0.138636363636'\nassert solution('3 9') == '0.138636363636'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"SUN\") == 1\nassert solution(\"MON\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 4\nassert solution(\"THU\") == 4\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '2'\nassert solution('THU') == '2'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"SAT\"\n) == \"1\"\n\nassert solution(\n    \"SUN\"\n) == \"7\"\n\nassert solution(\n    \"MON\"\n) == \"6\"\n\nassert solution(\n    \"TUE\"\n) == \"5\"\n\nassert solution(\n    \"WED\"\n) == \"4\""
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('SUN') == '1'\nassert solution('SAT') == '1'\nassert solution('FRI') == '2'\nassert solution('WED') == '1'\nassert solution('TUE') == '1'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('SAT') == '1'\nassert solution('WED') == '2'\nassert solution('SUN') == '7'\nassert solution('THU') == '1'\nassert solution('FRI') == '2'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SUN) == \"1\"\nassert solution(SAT) == \"0\"\nassert solution(SUN) == \"1\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"7\"\nassert solution(\"MON\") == \"8\"\nassert solution(\"FRI\") == \"14\"\nassert solution(\"SAT\") == \"1\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('1 100 100') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1 1 1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('2 3 4') == '3\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n22\\n24\\n26\\n28\\n30\\n32\\n34\\n36\\n38\\n40\\n42\\n44\\n46\\n48\\n50\\n52\\n54\\n56\\n58\\n60\\n62\\n64\\n66\\n68\\n70\\n72\\n74\\n76\\n78\\n80\\n82\\n84\\n86\\n88\\n90\\n92\\n94\\n96\\n98\\n100'\nassert solution('4 3 6') == '8\\n12\\n16\\n20\\n24\\n28\\n32\\n36\\n40\\n44\\n48\\n52\\n56\\n60\\n64\\n68\\n72\\n76\\n80\\n84\\n88\\n92\\n96\\n100'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n\"\"\""
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\"\nassert solution(\"3\\n4 1 2\") == \"0\"\nassert solution(\"5\\n4 1 2\") == \"0\"\nassert solution(\"3\\n4 1 2\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == result\n\"\"\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 1 1 4') == '5'\nassert solution('1 3 2 1 4') == '4'\nassert solution('3 4 1 2') == '0'\nassert solution('4 1 2') == '0'\n\"\"\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn = int(input())\nl = [int(x) for x in input().split()]\n\na, b, c = 0, 0, 0\nfor i in l:\n    a += i\n    b += i\n    c += i\n    if a == b == c:\n        break\nprint(max(a, c))\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('5\\n1 3 1 1 4') == '5'\nassert solution('5\\n1 3 2 1 4') == '4'\nassert solution('3\\n4 1 2') == '0'\nassert solution('3\\n4 1 2\\n1 3 2') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n1\\n1\\n4') == '5'\nassert solution('2\\n1\\n3\\n2\\n4') == '4'\nassert solution('2\\n1\\n3\\n2\\n4\\n1') == '4'\nassert solution('3\\n4\\n1\\n2\\n3') == '0'\nassert solution('3\\n4\\n1\\n2\\n3\\n1') == '0'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n2 3 3''') == 'YES\\n3 2 1'\nassert solution('''100\n100 100 100''') == 'YES\\n100 100 100'\nassert solution('''50\n49 49 49''') == 'YES\\n50 49 49'\nassert solution('''10\n30 20 20''') == 'NO'\nassert solution('''1\n10000000 1000000000''') == 'YES\\n1 1 1000000000'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'YES\\n1 1 1'\nassert solution('2\\n1 1') == 'NO\\n2 2 2'\nassert solution('2\\n1 1') == 'NO\\n1 1 1'\nassert solution('2\\n1 2') == 'NO\\n2 2 2'\nassert solution('2\\n1 1') == 'NO\\n2 2 2'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('2\\n2\\n2\\n2') == 'NO'\nassert solution('2\\n1\\n2\\n2') == 'YES'\nassert solution('2\\n2\\n1\\n2') == 'YES'\nassert solution('2\\n2\\n2\\n1') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''\nYES\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000\n'''\n\nassert solution(\n'''\n5\n2 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n2 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n2 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n2 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n2 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n2 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n2 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''\nNO\nNO\nNO\nYES\nNO\n'''\n\nassert solution(\n'''\n1\n1 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n1\n1 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n1\n1 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n1\n1 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n1\n1 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n1\n1 1 1\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''\nYES\nNO\nYES\nYES\nNO\n'''\n\nassert solution(\n'''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''\nYES\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000\n'''\n\nassert solution(\n'''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''\nYES\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000\n'''"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == '''YES\n3 2 1\nNO\nNO\nYES\n1 1 1000000000\n'''\nassert solution('''10\n1000000000 1000000000 1000000000\n100000000 100000000 100000000\n100000 1000000 10000000\n10000 1000000 10000000\n100 10 1000000 1000000000\n10 1000000 1000000000\n1 100000000 1000000000\n10000000 100000000 1000000000\n100000000 1000000000\n1000000 100000000\n10000000 100000000\n''') == '''YES\n100 100 100\n100 100 100\n100 1 1\nNO\nNO\nYES\n1 1 1000000000\n'''\nassert solution('''5\n3 2 3\n3 2 3\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == '''YES\n3 2 1\nNO\nNO\nNO\n1 1 1000000000\n'''\nassert solution('''10\n1000000000 1000000000 1000000000\n100000000 100000000 100000000\n100000 1000000 10000000\n10000 1000000 10000000\n100 10 1000000 1000000000\n10 1000000 1000000000\n1 100000000 1000000000\n10000000 100000000\n100000000 1000000000\n1000000 100000000\n10000000 100000000\n''') == '''NO\nNO\nNO\nNO\nNO\nYES\nNO\nNO\nNO\nYES\nYES\n'''\nassert solution('''5\n3 2 3\n10 30 20\n1 1000000000 1000000000\n100000000 1000000000\n1000000 100000000\n10000000 100000000\n''') == '''NO\nNO\nNO\nNO\nNO\nYES\nNO\nNO\nNO\nYES\nYES\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 2 3\\n1 100 1\\n2 1000000000 1000000000\\n1 1000000000 1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\n1 1000000000 1000000000\"\n\"\"\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 3') == 'NO\\n3 2 1'\nassert solution('100 100 100') == 'YES\\n100 100 100'\nassert solution('50 49 49') == 'YES\\n50 49 49'\nassert solution('10 30 20') == 'YES\\n10 30 20'\nassert solution('1 1000000000 1000000000') == 'NO\\nNO\\nNO\\n1 1 1000000000'\nprint('\"Run\" is good. How is \"Check\"?')\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == 'YES\\n1 1 1000000000'\nassert solution('2\\n') == 'YES\\n3 2 1'\nassert solution('2\\n1 1 1') == 'YES\\n1 1 1'\nassert solution('2\\n1 1 1\\n2 1 1') == 'YES\\n2 1 1'\nassert solution('1\\n1 1 1') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n0\\n0\\n2\\n0\\n0\\n3\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 2 6\n5 2 1 4 2\n\"\"\") == \"4\"\nassert solution(\"\"\"5 1 4\n4 2 3 4 1\n\"\"\") == \"1\"\nassert solution(\"\"\"5 3 3\n1 2 3 1 1\n\"\"\") == \"5\"\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\nassert solution(\"1 2 3 1 1\") == \"5\"\nassert solution(\"4 3 2 1\") == \"1\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\n\"\"\"\n\n\"\"\"\n---Part Two---\n\nNow Maksim has a great deal more freedom to pack the objects. He can pack them into any number of boxes, and he can rearrange the order of the objects inside the same box. Again, he wants to know the maximum number of objects Maksim can pack.\n\nEach time when Maksim tries to pack the objects into the boxes, he will make empty all the boxes he has before do it (and the relative order of the remaining set of objects will not change).\n\nThe size of the $i$-th box is $a_i$. If he wants to put the $i$-th object in the $i$-th box, he can rearrange the objects distribution so that the size of the $i$-th box is exactly $a_i$, and the remaining size of the $i$-th box becomes $a_i - 1$.\n\nFor example, if Maksim wants to pack objects of size $5$, $6$, $7$ and $8$ into boxes with sizes $3$, $4$, $5$ and $6$, then Maksim rearranges the objects distribution to\n\n$[5, 6], [7], [8]$ and the size of the boxes become $[3, 4, 5]$ and the remaining size of the boxes becomes $[2, 1, 0]$. Then he can pack the first three objects into the first box, put the fourth object into the second box, and put the fifth object into the third box.\n\nIf Maksim has only one box of size $m$, then Maksim can pack all the objects.\n\nIn the input, find the maximum number of objects Maksim can pack using the algorithm described above.\n\nEach time when Maksim tries to pack the objects into the boxes, he will make empty all the boxes he has before do it (and the relative order of the remaining set of objects will not change).\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"1 2 3 4 1\") == \"5\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nn,m,k = map(int, stdin.split())\na = list(map(int, stdin.split()))\n\nbox = []\ncounter = 0\nfor i in range(k):\n    if a[i] <= m:\n        box.append(a[i])\n        m -= a[i]\n        a.pop(i)\n    else:\n        counter += 1\n\nprint(max(box) + counter)\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2''') == '4'\nassert solution('''5 1 4\n4 2 3 4 1''') == '1'\nassert solution('''5 3 3\n1 2 3 1 1''') == '5'\nassert solution('''3 3 3\n1 2 3 1 1''') == '2'\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '4'\n\nassert solution(input()) == '1'\n\nassert solution(input()) == '5'\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\n\nassert solution(input()) == \"4\"\n\nassert solution(input()) == \"5\"\n\nassert solution(input()) == \"6\"\n\nassert solution(input()) == \"6\""
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\n\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\n\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'\n\nassert solution('''7 1\naaaaaaa\na\n''') == '0'\n\nassert solution('''7 1\naaaaaaa\na\n''') == '0'"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('abacaba') == '12'\nassert solution('a b') == '0'\nassert solution('aaaaaaa') == '21'\nassert solution('f a d') == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '3'\nassert solution('7 1') == '12'\nassert solution('1 10') == '21'\nassert solution('5 9') == '24'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 2\\na\\nb\\naab\\naaba\\naabb\\naaba\\na\\nb') == '12'\nassert solution('7 1\\na\\nb\\naab\\naaba\\naabb\\naaba\\na\\nb') == '0'"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 1') == '0'\nassert solution('7 2') == '12'\nassert solution('9 3') == '21'\nassert solution('12 3') == '12'\nassert solution('10 3') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 1') == '0'\nassert solution('7 3') == '21'\nassert solution('7 7') == '12'\nassert solution('7 1') == '12'\nassert solution('10 2') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('inputs/hard/00.in') == '0'\nassert solution('inputs/hard/01.in') == '14'\nassert solution('inputs/hard/02.in') == '23'\nassert solution('inputs/hard/03.in') == '26'\nassert solution('inputs/hard/04.in') == '25'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 1\\n'\n    'aaaaaaa\\n'\n    'b') == '0'\nassert solution('10 3\\n'\n    'sadfaasdda\\n'\n    'f a d') == '21'\nassert solution('7 2\\n'\n    'abacaba\\n'\n    'a b') == '12'\nassert solution('7 1\\n'\n    'aaaaaaa\\n'\n    'b') == '0'\nassert solution('7 3\\n'\n    'a b c\\n'\n    'a b c') == '24'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2', 'Example'\nassert solution('''2\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1', 'Example'\nassert solution('''2\n5\n1 2 3 4 5 6\n8\n-1 -2 -1 -3 -4 -5 -6 -7 -8''') == '-1', 'Example'\nassert solution('''1\n1\n-1''') == '-1', 'Example'\nassert solution('''2\n1\n1''') == '1', 'Example'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"\"\"5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"\"\"5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"\"\"5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"\"\"5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''1\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\n'''\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\n\n\n\n\"\"\""
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n1 5') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '4 1\\n1 2\\n1 3\\n3 2\\n3 4'\nassert solution('6 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n1 6\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution('6 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n\n\n-----Alternate Solutions-----\n\"\"\""
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1\\n2 1\\n3 2\\n2 4\\n1 5\\n1 2\\n2 3\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n4 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '4 1\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n'\nassert solution('8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n4 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\n\n-----Possible solutions-----\n1. Use a priority queue to track the edges of a spanning tree with maximum degree.\n2. Use a greedy algorithm to find the spanning tree with maximum degree."
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n'\nassert solution('1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\n\nassert solution(\n'''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '4 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n'\n\nassert solution(\n'''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\nassert solution(\n'''8 10\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '4 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 7\\n1 2\\n'\n\nassert solution(\n'''10 10\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n2 9\n6 7\n8 9\n9 7\n''') == '2 5\\n3 7\\n2 7\\n2 9\\n1 2\\n1 3\\n1 4\\n1 6\\n1 7\\n1 8\\n1 9\\n1 9\\n1 7\\n1 8\\n'"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2'\n'''\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('5 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '2 1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '3 2\\n4 5\\n5 6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '3 2\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == '3 2\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14') == '3 2\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\n'''\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'\nassert solution('8 9') == '3 2'\n\n\n'''\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"40\"\nassert solution(\"499993\") == \"41664916690999888\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1''') == '0'\nassert solution('''2''') == '0'\nassert solution('''3''') == '0'\nassert solution('''4''') == '0'\nassert solution('''5''') == '0'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n5') == '0'\nassert solution('2\\n5') == '40'\nassert solution('3\\n5') == '41664916690999888'\nassert solution('2\\n6') == '7'\nassert solution('3\\n6') == '23'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n'''\n'''\nThis solution is not my original code.\n'''\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    1\n    5\n    499993\n    \"\"\") == \"\"\"\n    0\n    40\n    41664916690999888\n    \"\"\".strip()\n\nassert solution(\n    \"\"\"\n    2\n    5\n    499993\n    \"\"\") == \"\"\"\n    0\n    40\n    41664916690999888\n    \"\"\".strip()\n\nassert solution(\n    \"\"\"\n    3\n    5\n    499993\n    \"\"\") == \"\"\"\n    0\n    40\n    41664916690999888\n    \"\"\".strip()\n\nassert solution(\n    \"\"\"\n    4\n    5\n    499993\n    \"\"\") == \"\"\"\n    0\n    40\n    41664916690999888\n    \"\"\".strip()\n\nassert solution(\n    \"\"\"\n    5\n    5\n    499993\n    \"\"\") == \"\"\"\n    0\n    40\n    41664916690999888\n    \"\"\".strip()"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1\n1\n1\n'''\n) == '0'\n\nassert solution(\n'''\n1\n2\n1\n'''\n) == '1'\n\nassert solution(\n'''\n1\n1000000000\n1000000000\n'''\n) == '1000000000'\n\nassert solution(\n'''\n10000\n1000000000\n1000000000\n'''\n) == '1000000000'\n\nassert solution(\n'''\n5\n2\n3\n4\n5\n'''\n) == '20'"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('5') == 4\nassert solution('499993') == 36\nassert solution('8') == 5\nassert solution('1') == 1\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1\n5''') == '0'\nassert solution('''2\n2\n6''') == '40'\nassert solution('''2\n4\n6''') == '41664916690999888'\nassert solution('''2\n6\n6''') == '0'\nassert solution('''3\n3\n5''') == '0'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('3\\n1 2 3') == '1 1 1'\nassert solution('3\\n2 3 1') == '-1'\nassert solution('3\\n3 3 3') == '-1'\nassert solution('6\\n2 4 4 4 4 4 2') == '1 1 1 1 1 -1 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('2\\n1 2') == '-1'\n\n\n-----Note-----\n\n$n$ is a positive integer and each element of $a$ is an integer between $1$ and $n$ (both inclusive).\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution(\n'''\n6\n1 2 3 4 5 6 7\n''') == '-1'\nassert solution(\n'''\n3\n1 2 3\n''') == '-1'\nassert solution(\n'''\n5\n1 2 3 4 5\n''') == '1 1 1 2 -1'\nassert solution(\n'''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '1 1 1 2 -1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n10\n4 5 7 6 7 5 4 4 6 4\n'''\n    ) == '1 1 1 2 -1 1 1 3 1 1'\n\nassert solution(\n'''\n5\n1 2 3 4 5\n'''\n    ) == '1 1 1 2 -1 -1'\n\nassert solution(\n'''\n10\n3 3 3 3 3 3 3 3 3 3\n'''\n    ) == '1 1 1 2 -1 -1 -1 -1 -1 -1 -1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(\n    stdin.splitlines()[1:])) == ''.join(\n    stdin.splitlines()[1:])"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''64\n32\n97\n2\n12345\n''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n'\nassert solution('''64\n3\n2\n1\n''') == 'YES\\n1 1 1\\n'\nassert solution('''64\n2\n2\n1\n''') == 'NO\\n'\nassert solution('''64\n3\n3\n2\n2\n1\n''') == 'NO\\nNO\\n'\nassert solution('''64\n4\n3\n2\n1\n''') == 'NO\\n'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('99999') == 'NO'\nassert solution('12345') == 'YES'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hi') == 'NO'\nassert solution('hi123') == 'NO'\nassert solution('hi123456') == 'YES'\nassert solution('hi1234567') == 'YES'\nassert solution('hi12345678') == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''3\n3\n2\n3\n1\n2''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''1\n1\n2\n2\n1\n2''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''2\n2\n1\n1\n1\n2\n2''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''4\n4\n3\n3\n2\n2\n2\n2\n2\n1\n1\n2\n2''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nNO\\n3 5 823'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO'\nassert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO'\nassert solution('''64\n2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n\n''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n64\\n32\\n97\\n2\\n12345') == 'NO\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('5\\n2\\n12345') == 'NO\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('3\\n2\\n12345') == 'NO\\nNO\\nNO'\nassert solution('3\\n12345') == 'NO\\nNO\\nNO'\nassert solution('5\\n2\\n12345') == 'NO\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n3\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO'\nassert solution('''1\n1\n1\n1\n1''') == 'YES\\n1 1 1\\n1 1 1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == 'YES\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('2') == 'NO'\nassert solution('2') == 'NO'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba') == 'a'\nassert solution('bbbb') == 'bbbba'\nassert solution('ababab') == 'ababab'\nassert solution('bbbba') == 'bbba'\nassert solution('ba') == 'ba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == solution(example)\n\n\"\"\"\n\nn = int(input())\nstring = input()\n\na, b = 0, 0\nfor i in range(n):\n    if string[i] == 'a':\n        a += 1\n    else:\n        b += 1"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\nbbbb\n\n''') == '2\\naabbbb'\nassert solution('''6\nababab\n\n''') == '0\\naabbabab'\nassert solution('''2\naa\n\n''') == '1\\naa'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result_for_sample_data\n\"\"\"\n\n\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"bbbb\") == 2\nassert solution(\"ababab\") == 0\nassert solution(\"aa\") == 1\nassert solution(\"ab\") == 1\nassert solution(\"a\") == 0\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == answer_01\n\n\"\"\"\n\nimport sys\nfrom itertools import product"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abba') == 'abba'\nassert solution('ababab') == 'ababab'\nassert solution('ba') == 'ba'\nassert solution('bbbb') == 'bbbb'\nassert solution('baabaa') == 'baaabaa'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"bbbb\") == 2\nassert solution(\"ababab\") == 0\nassert solution(\"aa\") == 1\nassert solution(\"abba\") == 1\nassert solution(\"baaa\") == 1\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abba') == 'abba'\nassert solution('ababab') == 'ababab'\nassert solution('bbbb') == 'bbbb'\nassert solution('baa') == 'baa'\nassert solution('abab') == 'ba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\nbbbb\n\n''') == '2'\nassert solution('''\n6\nababab\n\n''') == '0'\nassert solution('''\n2\naa\n\n''') == '1'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\"\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''1\n0 0\n''') == '0'\nassert solution('''1\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input.txt') == '7'\nassert solution('input2.txt') == '3'\nassert solution('input3.txt') == '4'\nassert solution('input4.txt') == '5'\nassert solution('input5.txt') == '6'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == \"1\"\nassert solution('2\\n1\\n') == \"2\"\nassert solution('1\\n2\\n3\\n4\\n') == \"1\"\nassert solution('2\\n0\\n2\\n0\\n') == \"1\"\nassert solution('1\\n2\\n2\\n1\\n') == \"1\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''10\n6 7\n1 1\n1 4\n1 4\n1 7\n1 5\n1 2\n1 3\n1 2\n1 6\n1 2\n''') == '10'\nassert solution('''1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '15'\nassert solution(stdin) == '9'\nassert solution(stdin) == '15'\nassert solution(stdin) == '9'\nassert solution(stdin) == '15'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3''') == '9'\nassert solution('''1\n0 1\n1 0\n2 0\n3 2\n0 3''') == '0'\nassert solution('''1\n0 0\n1 0\n2 0\n3 2\n0 3''') == '0'\nassert solution('''1\n0 0\n1 0\n2 0\n3 2\n4 2\n0 4''') == '0'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"2\\n3\") == \"3\"\nassert solution(\"3\\n2\") == \"2\"\nassert solution(\"1\\n1\") == \"1\"\n\"\"\""
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n3') == '2'\nassert solution('1\\n2') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"3 6\") == \"2\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"Takahashi is solving quizzes. He has easily solved all but the last one.\\n The last quiz has three choices: 1, 2, and 3.\\n With his supernatural power, Takahashi has found out that the choices A and B are both wrong.\\n Print the correct choice for this problem.\") == \"2\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n3') == '2'\nassert solution('2\\n2') == '1'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"3 1 1\") == \"2\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3, 1) == '2'\nassert solution(3, 2) == '2'\nassert solution(3, 3) == '2'\nassert solution(4, 1) == '3'\nassert solution(4, 2) == '3'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('3\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n3') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"1\") == \"1.000000000000\"\nassert solution(\"2\") == \"1.000000000000\"\nassert solution(\"0\") == \"1.000000000000\"\nassert solution(\"4000\") == \"29.99999999999\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1.0'\nassert solution('0') == '0.0'\nassert solution('0 1') == '0.0'\nassert solution('0 1 1') == '1.0'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.000000000000\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '6'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(0) == '0'\nassert solution(3) == '1.000000000000'\nassert solution(6) == '2.000000000000'\nassert solution(12) == '3.000000000000'\nassert solution(15) == '4.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('0') == '0'\nassert solution('1') == '0.5'\nassert solution('2') == '1.25'\nassert solution('3') == '1.583333333333'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0.000000000000\"\nassert solution(\"1\") == \"1.000000000000\"\nassert solution(\"2\") == \"1.999999999999\"\nassert solution(\"3\") == \"2.000000000000\"\nassert solution(\"4\") == \"2.999999999797\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '1.000000000000'\n\"\"\""
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Hello World'\n\nassert solution(stdin.replace('\\n','')) == 'Hello World'\n\n-----Reference-----\n - https://www.codewars.com/kata/programming-education-atcoder-solutions/python\n - https://www.codewars.com/kata/fun-with-sorting-algorithms-combinations/python\n\n\"\"\""
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == 'Hello World'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'A+B'\nassert solution('1\\n2\\n3\\n4') == 'Hello World'\nassert solution('1\\n2\\n3\\n4\\n5') == 'A+B'\nassert solution('2\\n2\\n3\\n4') == 'A+B'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 'Hello World'\nassert solution('1\\n1\\n1\\n') == '1+1=2'\nassert solution('1\\n1\\n1\\n1') == '1+1=2'\nassert solution('1\\n2\\n1\\n1') == '1+1=2'\nassert solution('1\\n2\\n2\\n1') == '1+1=2'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+1=2\"\nassert solution(\"2\") == \"1+1=2\"\nassert solution(\"2\") == \"1+1=2\"\nassert solution(\"2\") == \"1+1=2\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1''') == 'Hello World'\nassert solution('''2\n123\n456''') == '123 + 456 = 789'\nassert solution('''3\n1\n2\n3''') == '1 + 2 = 3'\nassert solution('''1\n2\n''') == 'Hello World'\nassert solution('''2\n1\n1''') == 'A + B = 1'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Hello World'\nassert solution(input()) == 10\nassert solution(input()) == 19\nassert solution(input()) == 18\nassert solution(input()) == 21"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'A+B'\nassert solution('1') == 'Hello World'\nassert solution('2 4') == '8'\nassert solution('1') == 'Hello World'\nassert solution('1 2') == 'Hello World'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == \"Hello World\"\nassert solution(2) == \"5\""
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == 'Hello World'\nassert solution('2') == '5'\nassert solution('3') == 'Hello World'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '3333'\nassert solution('1 2') == '11'\nassert solution('3 4') == '334'\nassert solution('1 2') == '11'\nassert solution('3 4') == '334'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3333'\nassert solution('3 4') == '4444'\nassert solution('4 5') == '4444'\nassert solution('2 2') == '22'\nassert solution('1 1') == '11'\n\nprint('Test cases passed')\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '3333'\nassert solution('1 2') == '12'\nassert solution('4 4') == '4444'\nassert solution('3 4') == '34'\nassert solution('5 2') == '52'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == '3333'"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"3 4\") == \"3333\"\nassert solution(\"5 1\") == \"5555\"\nassert solution(\"5 2\") == \"2222\"\nassert solution(\"4 5\") == \"55555\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[2:-1]\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == '3333'\nassert solution('3 3') == '3333'\nassert solution('123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789') == '123456789123456789123456789123456789123456789123456789'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"4 3\") == \"3333\"\nassert solution(\"2 3\") == \"2231\"\nassert solution(\"1 9\") == \"1101\"\nassert solution(\"5 1\") == \"5501\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"333\"\nassert solution(\"4 3\") == \"3333\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"2 1\") == \"222\"\nassert solution(\"10 2\") == \"22\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"c\") == \"d\"\nassert solution(\"d\") == \"e\"\nassert solution(\"e\") == \"f\"\nassert solution(\"f\") == \"g\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"b\") == \"c\"\nassert solution(\"c\") == \"d\"\nassert solution(\"d\") == \"e\"\nassert solution(\"e\") == \"f\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\nassert solution('f') == 'g'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"c\") == \"d\"\nassert solution(\"z\") == \"a\"\n\nprint(\"All cases passed.\")\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"c\") == \"d\"\nassert solution(\"e\") == \"f\"\nassert solution(\"f\") == \"g\"\nassert solution(\"g\") == \"h\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"oder\") == \"atcoder\"\nassert solution(\"atc\") == \"atcoder\"\nassert solution(\"atcoder\") == \"atcoder\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('Z') == 'Z'\nassert solution('M') == 'M'\nassert solution('Y') == 'YY'\nassert solution('R') == 'RRR'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('oder atc') == 'atcoder'\nassert solution('oder atc') == 'atcoder'\nassert solution('oder atc') == 'atcoder'\nassert solution('oder atc') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"atcoder\") == \"atcoder\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"atcoder\") == \"atcoder\"\nassert solution(\"cat\") == \"cat\"\nassert solution(\"catdog\") == \"catdog\"\nassert solution(\"catcat\") == \"catcat\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('oder', 'atc') == 'atcoder'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n2\\n1\") == \"1\"\nassert solution(\"1\\n1\\n2\\n3\\n1\") == \"3\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n1\") == \"4\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n1\") == \"4\"\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n1 5 7 8 2'''\n) == '0'\n\nassert solution(\n'''6\n5 1 2 4 6 3'''\n) == '1000000'\n\nassert solution(\n'''2\n1000000 1000000'''\n) == '1000000'\n\nassert solution(\n'''3\n1000000 1000000 1'''\n) == '0'\n\nassert solution(\n'''4\n1000000 1000000 1000000'''\n) == '1000000'"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n2''') == '2'\nassert solution('''1\n3''') == '1'\nassert solution('''3\n3 2 1''') == '1'\nassert solution('''3\n2 3 1''') == '2'\nassert solution('''3\n1 3 2''') == '0'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('3\\n1 2 3\\n') == '6'\nassert solution('4\\n1 2 3 4\\n') == '10'\nassert solution('5\\n1 2 3 4 5\\n') == '15'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 5 7 8 2\n''') == '0'\nassert solution('''6\n5 1 2 4 6 3\n''') == '1000000'\nassert solution('''2\n1000000 1000000\n''') == '1000000'\nassert solution('''3\n1000000 1000000\n''') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 5 7 8 2\\n') == '0\\n'\nassert solution('6\\n5 1 2 4 6 3\\n') == '1000000\\n'\nassert solution('6\\n5 1 2 4 6 3\\n') == '1000000\\n'\nassert solution('1000000\\n1000000\\n') == '1000000\\n'\nassert solution('6\\n5 1 2 4 6 3\\n') == '1000000\\n'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\""
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 1 1') == 1\nassert solution('1 1 1 1') == 4\nassert solution('7 4 2 1') == 6\nassert solution('1 3 5 4 2 7 6') == 5\nassert solution('100') == 1\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''6 2 3 3'''\n) == '5'\n\nassert solution(\n'''7 10 50 12 1 8'''\n) == '6'\n\nassert solution(\n'''7 4 2 1'''\n) == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"6 2 3 3\\n\"\n    \"7 10 50 12 1 8\\n\") == \"5\"\n\nassert solution(\n    \"1 1 100 99\\n\"\n    \"100\\n\") == \"1\"\n\nassert solution(\n    \"7 4 2 1\\n\"\n    \"1 3 5 4 2 7 6\\n\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"7 10 50 12 1 8\") == \"6\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"\nassert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''7 10 50 12 1 8''') == '5'\nassert solution('''7 4 2 1''') == '6'\nassert solution('''1 1 100 99''') == '1'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''4 2\n0 1 2 3\n''') == '0'\nassert solution('''4 2\n1 2 0 3\n''') == '3'\nassert solution('''6 4\n3 2 0 6 10 12\n''') == '1'\nassert solution('''6 4\n3 2 0 6 10 12\n''') == '3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6 3\n3 2 0 6 10 12\n\"\"\") == \"\"\"\n3\n3 2 0 7 10 14 \n\"\"\"\nassert solution(\n\"\"\"\n4 2\n0 1 2 3\n\"\"\") == \"\"\"\n0\n0 1 2 3\n\"\"\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0\\n1') == '0 1\\n'\nassert solution('0 1\\n1') == '0 1\\n'\nassert solution('1 0\\n1') == '0 1\\n'\nassert solution('1 1\\n1') == '0 1\\n'\nassert solution('2 2\\n2') == '0 1\\n'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"6 3\n3 2 0 6 10 12\"\"\") == \"3\\n3 2 0 7 10 14\"\n\nassert solution(\n    \"\"\"4 2\n0 1 2 3\"\"\") == \"0\\n0 1 2 3\"\n\nassert solution(\n    \"\"\"10 12\n1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1\"\"\") == \"0\"\n\nassert solution(\n    \"\"\"3 3\n1 2 0\n2 3 0\n3 4 0\"\"\") == \"1\\n1 2 0 2 3\\n1 2 0 2 3\"\n\nassert solution(\n    \"\"\"5 4\n5 5 5 5 5\n5 5 5 5 5\"\"\") == \"0\\n0 1 2 3 4\""
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''4 2\n0 1 2 3\n''') == '0 1 2 3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '0\\n1 2 3 4 5'\nassert solution('2 1 3 4 5') == '0\\n1 2 3 4 5'\nassert solution('3 1 2 3 4 5') == '0\\n0 1 2 3 4 5'\nassert solution('1 3 3 4 5') == '0\\n0 1 2 3 4 5'\nassert solution('2 4 2 3 3 3 2') == '0\\n0 1 2 2 3 3 4 5'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3\\n3 2 0 6 10 12') == '3'\nassert solution('6 3\\n3 2 0 6 10 12') == '3'\nassert solution('4 2\\n0 1 2 3') == '0'\nassert solution('4 2\\n0 1 2 3') == '0'\nassert solution('7 1\\n0 1 2 3 4 5 6') == '4'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == '0\\n3\\n0 1 2 3'\ninput = \"\"\"6 3\n3 2 0 6 10 12\n\"\"\"\nassert solution(input) == '3\\n3 2 0 7 10 14'\ninput = \"\"\"5 1\n9 2 3 4 5\n\"\"\"\nassert solution(input) == '0\\n5'\ninput = \"\"\"7 1\n1 2 3 4 5 6 7\n\"\"\"\nassert solution(input) == '0\\n7'\ninput = \"\"\"8 1\n1 2 3 4 5 6 7 8\n\"\"\"\nassert solution(input) == '0\\n8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n1 3\n2 3\n2 3\n2 3\n2 3\n''') == '20'\nassert solution('''1 1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''5 3\n4 2 1 3 2\n1 3\n2 3\n2 3\n2 3\n2 3\n''') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"20\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 4 4 1') == '1'\nassert solution('2 2 2 2') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('2 2 2 2') == '1'\nassert solution('2 1 1 1') == '1'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input('')) == '20'\n'''\n\nfrom sys import stdin,stdout\n\nn,k = map(int,stdin.readline().split())\n\nk = list(map(int,stdin.readline().split()))\n\nm = int(stdin.readline())\n\ndeals = [int(stdin.readline()) for _ in range(m)]\n\ndeals.sort()\n\ncounts = [0]*k\n\nfor i in k:\n    counts[i-1] = 0\n\nans = 0\n\nfor i in range(m):\n    if counts[deals[i]-1]==0:\n        counts[deals[i]-1]=1\n        ans+=1\n    else:\n        counts[deals[i]-1]-=1\n        ans+=1\n\nstdout.write(str(ans))\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''\n6 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\nassert solution('''\n6 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1') == '1'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '8'\n\nassert solution('''3 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '29'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\nassert solution(\n\"\"\"3 2\n1 2\n2 4\n3 4\n\"\"\") == \"20\"\nassert solution(\n\"\"\"3 2\n2 1\n2 4\n3 4\n\"\"\") == \"20\"\nassert solution(\n\"\"\"6 3\n5 5\n2 2\n2 5\n3 4\n3 4\n4 3\n5 5\n\"\"\") == \"12\"\nassert solution(\n\"\"\"6 3\n4 2\n2 5\n3 4\n3 4\n4 3\n5 5\n\"\"\") == \"16\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"20\"\nassert solution(\"3 2 1 3 2\") == \"20\"\nassert solution(\"5 6\") == \"8\"\nassert solution(\"3 2 1 3 2\") == \"20\"\nassert solution(\"5 4\") == \"8\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"\"\"NO\nNO\nNO\nNO\nYES\n\"\"\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 0 1 0 1 0 1 0\n''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\\n1\\n1\") == \"NO\"\nassert solution(\"1\\n3\\n2\\n3\") == \"YES\"\nassert solution(\"1\\n2\\n2\\n2\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n2\\n2\\n2\") == \"NO\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"\"\"YES\nYES\nNO\nYES\nYES\n\"\"\"\n\nassert solution(\"\"\"5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"\"\"NO\nYES\n\"\"\"\n\nassert solution(\"\"\"1\n1\n100 1\n\"\"\") == \"\"\"YES\n\"\"\"\n\nassert solution(\"\"\"2\n2\n1 100\n100 1\n\"\"\") == \"\"\"YES\n\"\"\"\n\nassert solution(\"\"\"10\n1\n
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\\n0\") == \"NO\"\nassert solution(\"3\\n2\") == \"YES\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''1\n1\n1 1 1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == \"YES\"\n\nassert solution('''1\n2\n1 1 1 1 1 1 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1 1 10 10\") == \"YES\"\nassert solution(\"2\\n1\\n1 1 10 10\") == \"YES\"\nassert solution(\"2\\n1\\n10 5 2 10 1 1 2 5\") == \"YES\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_) == output\n\nprint('Test success!')"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 10 5''') == '3'\nassert solution('''2 5 1''') == '3'\nassert solution('''5 3 9''') == '3'\nassert solution('''6 2 2''') == '3'\nassert solution('''1 3 1''') == '3'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\nassert solution('''\n7 10 14\n2 6 7\n5 7 1\n6 5 3\n3 6 2\n6 4 2\n3 2 6\n1 6 7\n6 2 9\n1 7 9\n7 4 9\n5 6 8\n2 5 1\n3 5 2\n4 1 4\n4 4 3\n1 3 2\n''') == '10'\nassert solution('''\n5 5 9\n3 2 5\n3 4 1\n2 4 2\n1 3 3\n3 1 4\n3 2 4\n2 1 5\n1 4 5\n3 4 4\n1 2 2\n2 1 3\n2 4 2\n4 1 2\n''') == '6'\nassert solution('''\n9 19 1\n6 4\n3 2 3\n3 4\n4 1 5\n1 3\n2 3\n2 4\n3 3\n4 2\n1 1\n1 4\n1 2\n1 5\n3 4\n1 4\n''') == '3'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\n\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nassert solution('''9 17 8\n1 2 1\n2 3 5\n3 4 8\n4 5 9\n5 6 1\n6 7 1\n7 8 5\n8 9 5\n9 10 6\n10 11 1\n11 12 2\n12 13 4\n13 14 8''') == '7'\nassert solution('''9 17 8\n1 2 1\n2 3 5\n3 4 8\n4 5 9\n5 6 1\n6 7 1\n7 8 5\n8 9 5\n9 10 6\n10 11 1\n11 12 2\n12 13 4\n13 14 8''') == '7'\nassert solution('''9 17 8\n1 2 1\n2 3 5\n3 4 8\n4 5 9\n5 6 1\n6 7 1\n7 8 5\n8 9 5\n9 10 6\n10 11 1\n11 12 2\n12 13 4\n13 14 8''') == '7'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 6 10') == '6'\nassert solution('1 2 1') == '2'\nassert solution('3 2 3') == '2'\nassert solution('1 2 1') == '2'\nassert solution('3 2 3') == '2'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 10 5''') == '3'\nassert solution('''6 10 10''') == '9'\nassert solution('''7 15 18''') == '9'\nassert solution('''6 5 4''') == '3'\nassert solution('''4 6 3''') == '3'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 10 5''') == '3'\nassert solution('''7 15 18''') == '9'\nassert solution('''8 10 17''') == '10'\n'''\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1\\n1 1 1') == '1'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'\nprint(solution(stdin))"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 5 1\") == \"3\"\nassert solution(\"3 10 9\") == \"9\"\nassert solution(\"7 15 18\") == \"9\"\nassert solution(\"6 10 5\") == \"3\"\nassert solution(\"6 15 19\") == \"13\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1\\n1\\n1\\n'\nassert solution('5') == '3\\n1\\n'\nassert solution('6') == '7\\n2\\n'\nassert solution('10') == '7486\\n3\\n'\nassert solution('100') == '281474976710656\\n489501474452340\\n'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'\nassert solution('15\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 3 4 2') == '3 1'\nassert solution('1 5 12 13 2 15') == '7 2'\nassert solution('1 5 12 13 2 15 100 1 10 1 1') == '7486 3'\nassert solution('1 5 12 13 2 15 100 1 10 1 1 2 1 1 1') == '7486 3'"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1\\n1\\n'\nassert solution('1\\n1\\n1\\n1\\n1') == '1\\n1\\n'\nassert solution('2\\n1\\n1\\n1\\n1') == '2\\n1\\n'\nassert solution('1\\n2\\n1\\n1\\n1') == '3\\n1\\n'\nassert solution('1\\n1\\n1\\n1\\n1') == '3\\n1\\n'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'\n'''\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 1 3 4 2') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 1\\n'"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'\n\n\"\"\""
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n\") == \"3 1\"\nassert solution(\"3\\n1 2 3\\n\") == \"3 1\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5009\n7\n9876\n10000\n10''') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\n\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n'''\n\n-----Add test cases here----\n\n'''\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5009\"\"\") == \"\"\"2\n5000 9\n1\n7 \n4\n800 70 6 9000 \n1\n10000 \n1\n10\n\"\"\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n5\n5009\n7\n9876\n10000\n10\n''') == '''\\\n2\n5000 9\n1\n7 \n4\n800 70 6 9000 \n1\n10000 \n1\n10\n'''\n\nassert solution('''\\\n4\n222\n22222\n222222\n222222222\n''') == '''\\\n1\n11\n11\n11\n\n'''\n\nassert solution('''\\\n3\n112\n2\n333\n''') == '''\\\n1\n3\n2\n\n'''\n\nassert solution('''\\\n2\n112\n2\n333\n''') == '''\\\n1\n3\n2\n\n'''\n\nassert solution('''\\\n1\n222\n2222\n222222\n222222222\n''') == '''\\\n1\n11\n11\n11\n\n'''"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5009') == '2\\n5000 9'\nassert solution('5\\n5009\\n7') == '2\\n5000 9'\nassert solution('5\\n5009\\n7\\n9876') == '2\\n5000 9'\nassert solution('5\\n5009\\n7\\n9876\\n10000') == '2\\n5000 9'\nassert solution('5\\n5009\\n7\\n9876\\n10000\\n10') == '2\\n5000 9'\n\n\"\"\"\n\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    k = 0\n    if n % 10 == 0:\n        k = n // 10\n    else:\n        while n > 0:\n            k += 1\n            n -= 9\n    print(k)\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n10\n200\n1000000\n100000''') == '2','should return 2'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n5009\n7\n9876\n10000\n10''') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\n\nassert solution(\n'''2\n7\n2''') == '1\\n2'\n\nassert solution(\n'''1\n9''') == '1'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('1000') == '1000'\nassert solution('2000') == '2000'\nassert solution('3000') == '2000'\nassert solution('4000') == '4000'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n'''"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n6\n6\n1 2 3 4 5 6\n6\n5 1 2 4 3 6\n1\n1\n1\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n4\n2\n2 3 4 1\n1\n3 4 1 2\n''') == '''\n1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n5\n5\n1 2 3 4 5\n5\n2 3 1\n5\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n6\n6\n1 2 3 4 5 6\n6\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n6\n6\n1 2 3 4 5 6\n6\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''\n3\n2\n1 2\n1\n1\n''') == '''\n2 1 \n2 1 \n1 2\n'''"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n'''\nassert solution('''4\n1\n4\n2 1 2\n1\n4 1 2 1 2\n''') == '1 1 1 1 1\\n'\n'''\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n'\n'''\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n'\n'''\nassert solution('''6\n6\n1 2 3 4 5 6\n5\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n'\n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1 1 1 1 1\"\nassert solution(stdin) == \"3 3 3\"\nassert solution(stdin) == \"2 3 3 2 1 3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2 2 2 2\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\n\n\n\n\"\"\"\nfrom collections import deque\nimport sys\nstdin = sys.stdin.read()\nT = int(stdin.split()[0])\nfor _ in range(T):\n    N = int(stdin.split()[0])\n    p = [int(x) for x in stdin.split()[1:]]\n    p = sorted(p)\n    d = deque(range(1,N+1))\n    d_1 = deque(range(1,N+1))\n    ans = []\n    for i in range(N):\n        if p[i] == d[0]:\n            d.popleft()\n            d_1.popleft()\n        else:\n            ans.append(i+1)\n            d_1[p[i]-1] = d[0]\n            d.rotate(-1)\n    print(' '.join(map(str,ans)))"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution('1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution('1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"1 1 1\"\nassert solution(\"1\\n1\") == \"1 1 1\"\nassert solution(\"2\\n2\") == \"1 1\"\nassert solution(\"3\\n3\") == \"3 3\"\nassert solution(\"4\\n4\") == \"1 1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n1 2 3 4 5') == '3'\nassert solution('1\\n5\\n1 2 2') == '2'\nassert solution('1\\n5\\n1 2 1') == '2'\nassert solution('1\\n5\\n1 2 1') == '2'\nassert solution('1\\n5\\n1 2 1') == '2'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '3'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('2\\n4') == '2'\nassert solution('4\\n1 2 3 4') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\n\nassert solution('''5\n6\n1 2 3 4 5 6\n4\n1 1 1 1\n3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\n\nassert solution('''5\n6\n1 2 3 4 5 6\n4\n1 1 1 1\n3\n1 1 1\n1 1 1\n1 1 1\n''') == '2'\n\nassert solution('''5\n6\n1 2 3 4 5 6\n4\n1 1 1 1\n4\n1 1 1\n2\n1 1 1\n''') == '1'\n\nassert solution('''5\n6\n1 2 3 4 5 6\n4\n1 1 1 1\n4\n1 1 1\n4\n1 1 1\n4\n1 1 1\n4\n1 1 1\n''') == '2'"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5\\n1 2 2\\n4\\n1 1 1 1\\n') == '3\\n2\\n1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n1\") == \"2\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '3\\n2\\n1'\nassert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '3\\n2\\n1'\nassert solution('''5\n3\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n3\n1 1 1''') == '4\\n2\\n1'\nassert solution('''5\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n3\n1 1 1''') == '4\\n2\\n1'\nassert solution('''5\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n3\n1 1 1''') == '4\\n2\\n1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n1\") == \"2\"\nassert solution(\"1\\n2\\n1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n1\\n2\\n2\") == \"2\"\nassert solution(\"1\\n2\\n2\\n1\") == \"2\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"\n\n\n\n'''\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8\n3 5\n4 6\n2 1\n10 8"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nprint(solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n'''))\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n2\\n4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10\\n4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10\\n4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n\n1 2\n2 3\n\n1 3\n3 1''') == '0 0 1 2'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\n2 1\n4 3\n5 6\n\n1 2\n4 8\n9 1\n\n4 5\n2 5\n2 8\n\n2 1\n1 5\n1 7\n\n1 5\n4 1\n1 9\n\n3 2\n3 1\n2 3\n\n2 3\n2 1\n1 3\n3 1''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''100 100\n8 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4 10 15') == '0 0 1 2'\nassert solution('1 2') == '0 0'\nassert solution('4 3') == '0 0 0 1'\nassert solution('10 8') == '5 4 0 5 3 3 9 0 2 5'\n\n'''"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 2\\n4 3\") == \"0 0 1 2\"\nassert solution(\"4 1\\n4 4 4 4\\n2 1\") == \"0 0 0 1 2\"\nassert solution(\"6 1\\n1 2\\n3 4\\n5 6\\n4 5\") == \"0 0 0 1 2 3 4\"\nassert solution(\"9 2\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"0 0 0 0 0 0 0 1 2 2 3 3 4 4\"\nassert solution(\"9 1\\n9 1\") == \"0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5') == '5 4 0 5 3 3 9 0 2 5'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\ninput = \"\"\"3 2\n1 2 3\n1 3 2\n\"\"\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"3 2\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"3 2\"\"\"\n) == \"NO\"\nassert solution(\n\"\"\"3 2\"\"\"\n) == \"NO\"\nassert solution(\n\"\"\"3 3\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"3 3\"\"\"\n) == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2''') == 'YES\\nabb'\nassert solution('''2 1\n1 2\n2 1''') == 'NO'\nassert solution('''3 1\n1 2 3\n3 1 2''') == 'YES\\nabb'\nassert solution('''3 1\n1 3 2\n2 1 3''') == 'NO'\nassert solution('''3 2\n1 2 3\n1 3 2''') == 'YES\\nabb'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"YES\\nabb\\ndef\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2''') == \"YES\\nabb\"\nassert solution('''3 2\n1 3 2\n1 2 3''') == \"NO\"\nassert solution('''3 2\n1 2 3\n3 2 1''') == \"NO\"\nassert solution('''3 2\n2 1 3\n1 3 2''') == \"NO\"\nassert solution('''3 2\n2 1 3\n1 3 2''') == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'NO' or 'YES'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\") == \"YES\\nabcdefghijkl\"\nassert solution(\"1\\n2\\n3\\n4\\n1\\n1\\n2\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n1\\n2\\n2\\n2\\n1\") == \"NO\"\nassert solution(\"2\\n1\\n2\\n1\\n1\\n2\\n2\\n1\") == \"YES\\nab\"\nassert solution(\"1\\n1\\n2\\n2\\n2\\n1\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '3 2',\n    '1 2 3',\n    '1 3 2',\n])) == 'YES\\nabb'\n\nassert solution('\\n'.join([\n    '3 4',\n    '1 2 3 4',\n    '1 4 3 2',\n])) == 'NO'\n\nprint(solution('\\n'.join([\n    '3 6',\n    '1 2 3 4 5 6',\n    '1 6 3 2 4 5',\n])))\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n20 10 20''') == '43'\nassert solution('''4\n10 10 10 10''') == '64'\nassert solution('''6\n5 4 5 4 4 5''') == '69'\nassert solution('''2\n1 4''') == '3'\n'''\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n20 10 20\\n') == '43'\nassert solution('4\\n10 10 10 10\\n') == '64'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69'\nassert solution('2\\n1 4\\n') == '3'\n\n\n\n-----\n\nTest.assertEquals(solution('3\\n20 10 20\\n'), '43')\nTest."
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n20 10 20\\n') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10\\n') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4\\n') == '3\\n2 1'"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n20 10 20\"\"\") == \"43\\n1 3 2\"\nassert solution(\"\"\"4\n10 10 10 10\"\"\") == \"64\\n2 1 4 3\"\nassert solution(\"\"\"6\n5 4 5 4 4 5\"\"\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"\"\"2\n1 4\"\"\") == \"3\\n2 1\"\n\n\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'\nassert solution('3\\n1 4 5') == '2 1'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '64'\nassert solution('2') == '3'\nassert solution('6') == '69'\nassert solution('5') == '65'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '3'\nassert solution('''3\n1 4\n''') == '2'\n\n\n-----"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\"\nassert solution(\"4\\n10 10 10 10\") == \"64\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\"\nassert solution(\"2\\n1 4\") == \"3\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"2 4\") == \"2 4\"\nassert solution(\"2 4 5\") == \"2 4 5\"\nassert solution(\"5 4 4 5 4 5\") == \"1 2 4 3\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 2 5 1 3\\n') == '3\\n'\nassert solution('4\\n5 3 1 4 2\\n') == '2\\n'\nassert solution('2\\n1\\n2\\n') == '1\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5\\n2 3 4 5 1\\n') == '3\\n'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1\\n3') == '2'\nassert solution('4\\n1\\n3\\n2') == '3'\nassert solution('7\\n1\\n3\\n2\\n4\\n5\\n6') == '1'\nassert solution('3\\n1\\n2') == '2'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2 5 1 3\") == \"3\"\nassert solution(\"5 1 3 4 2\") == \"3\"\nassert solution(\"1 2 5 4 3\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 3 4 5 2\") == \"5\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2 1 3\\n') == '3'\nassert solution('5\\n4 2 5 1 3\\n') == '3'\nassert solution('5\\n2 1 3 4 5\\n') == '3'\nassert solution('5\\n2 4 1 3 5\\n') == '3'\nassert solution('5\\n4 2 1 3 5\\n') == '2'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3 4') == '3'\nassert solution('2\\n1 2') == '2'\nassert solution('4\\n3 1 4 2') == '0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('7\\n1 2 3 4 5 6 7') == '6'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''1\n1\n2\n3\n4\n''') == '5'\nassert solution('''10\n7 1 9 3 6 5 4 2 10''') == '3'\nassert solution('''10\n4 1 9 3 6 5 10 2 7''') == '4'\nassert solution('''5\n4 2 5 1 3''') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n1 3 2 4 5') == '3'\nassert solution('5\\n5 4 3 2 1') == '3'\nassert solution('5\\n3 4 5 1 2') == '3'\nassert solution('5\\n2 4 3 5 1') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''3\n1 2 3''') == '1'\nassert solution('''2\n1 2''') == '1'\nassert solution('''4\n2 1 4 3''') == '0'\nassert solution('''8\n2 4 5 1 3 6 8 7''') == '4'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2 5 1 3') == '3'\nassert solution('5 4 2 3 1') == '3'\nassert solution('2 2 2 1') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n5 2 3 4 1') == '2'\nassert solution('5\\n5 4 1 3 2') == '2'\nassert solution('5\\n1 4 2 3 5') == '0'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 3 3 3''') == 1\nassert solution('''1\n1\n1\n1''') == 0\nassert solution('''4\n3 3 3 3''') == 1\nassert solution('''4\n4 4 4 4''') == 0\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == 1\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == 1\nassert solution('3 3 3 3') == 0\nassert solution('1 1 1 1 1 1 1 1') == 1\nassert solution('1 2 3 4 5') == 4\nassert solution
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 3 3\") == 1\nassert solution(\"1\\n1\") == 0\nassert solution(\"5\\n1 1 1 1 1\") == 1\nassert solution(\"2\\n1 1\") == 0\nassert solution(\"1\\n1\") == 0\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '0'\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n'))"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n3 3 3 3\n'''\n    ) == '1'\n\nassert solution(\n'''\n5\n3 3 3 3 3\n'''\n    ) == '0'\n\nassert solution(\n'''\n4\n3 3 3 3\n'''\n    ) == '0'\n\nassert solution(\n'''\n3\n3 3 3\n'''\n    ) == '0'\n\nassert solution(\n'''\n4\n3 3 3 3\n'''\n    ) == '1'"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('3 3 3 3') == '1'\nassert solution('4 3 3 4 1 4 2 4') == '1'\nassert solution('1 4 3 4 4 1 4 1') == '1'\nassert solution('1 4 3 4 4 4 4 1') == '0'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('1\\n1') == '0'\nassert solution('4\\n2 2 3 3') == '1'\nassert solution('1\\n2') == '0'\nassert solution('4\\n4 1 4 4') == '0'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('7\\n2 4 1 1 2 3 4 3 3') == '3'\nassert solution('8\\n2 4 1 1 2 3 4 3 3 3') == '3'\nassert solution('10\\n2 4 1 1 2 3 4 3 3 3 3') == '3'\nassert solution('10\\n2 4 1 1 2 3 4 3 3 3 3 3') == '3'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n3 3 3 3''') == 1\nassert solution('''5\n2 3 4 3 4''') == 3\nassert solution('''7\n5 4 4 2 4 2 4''') == 1\nassert solution('''12\n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7''') == 8\nassert solution('''12\n2 3 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7''') == 10\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"2 2 2 3 4\") == \"1\"\nassert solution(\"1 1 2 3 4\") == \"2\"\nassert solution(\"1 2 1 3 4\") == \"3\"\nassert solution(\"1 2 3 4 1\") == \"4\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 2 3 4 5''') == '1'\n'''\nassert solution('''-3 4 0 -4 2''') == '1'\nassert solution('''0 0 0 0 0''') == '1'\nassert solution('''-1 -1 0 0 0''') == '2'\nassert solution('''-1 -1 -1 0 0''') == '3'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"0 2 3 4 5\"\n) == \"1\"\n\nassert solution(\n    \"1 0 0 0 0\"\n) == \"0\"\n\nassert solution(\n    \"1 1 0 0 0\"\n) == \"0\"\n\nassert solution(\n    \"1 1 1 0 0\"\n) == \"0\"\n\nassert solution(\n    \"1 1 1 1 0\"\n) == \"0\""
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 3 4 0\") == \"1\"\nassert solution(\"0 1 1 2 2\") == \"1\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 1 2 3\") == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(0, 2, 3, 4, 5) == '1'\nassert solution(1, 2, 3, 4, 5) == '4'\nassert solution(2, 2, 3, 4, 5) == '2'\nassert solution(3, 2, 3, 4, 5) == '3'\nassert solution(4, 2, 3, 4, 5) == '5'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 2 3 3') == '0'\nassert solution('0 2 2 3 0') == '2'\nassert solution('0 2 0 0 3') == '3'\nassert solution('0 3 3 3 3') == '3'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('2 3 4 4 4') == '3'\nassert solution('2 3 0 4 4') == '1'\nassert solution('2 3 0 4 1') == '2'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 0') == '2'\nassert solution('0 2 3 4 0 5') == '3'\nassert solution('0 2 3 4 5 0') == '4'\nassert solution('0 2 3 4 0 0 5') == '5'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"-2 -1 1 -2 -3\") == \"1\"\nassert solution(\"-2 -1 -1 -2 -3\") == \"1\"\nassert solution(\"-2 -1 -2 -3 -4\") == \"1\"\nassert solution(\"-2 -1 -2 -3 -5\") == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 0 4 5\") == \"3\"\nassert solution(\"1 1 1 1 1\") == \"5\"\nassert solution(\"0 0 1 1 1\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5\\n') == '0'\nassert solution('1 1\\n') == '0'\nassert solution('1 2\\n') == '1'\nassert solution('2 3\\n') == '1'\nassert solution('1 3\\n') == '2'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 1') == '0'\nassert solution('2 3\\n2 1') == '1'\nassert solution('5 4\\n5 2') == '1'\nassert solution('3 1\\n4 1') == '0'\nassert solution('7 9\\n6 3') == '2'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 10') == '5'\nassert solution('1 1') == '0'\nassert solution('1 10') == '9'\nassert solution('1 1000000000') == '9999999999'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('2 2') == '0'\nassert solution('1 2') == '0'\nassert solution('3 4') == '1'\nassert solution('4 6') == '4'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"2 1\") == \"\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 1') == '0'\nassert solution('2 5') == '0'\nassert solution('3 9') == '2'\nassert solution('4 6') == '2'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"7 5\") == \"4\"\nassert solution(\"10000000 1000000000\") == \"1000000\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10 100') == \"Yes\"\nassert solution('1 1') == \"Yes\"\nassert solution('1 10 100') == \"No\"\nassert solution('2 3') == \"No\"\nassert solution('1 3') == \"No\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('3 2') == 'No'\n\nassert solution('1 10 100') == 'Yes'\nassert solution('3 2') == 'No'\n\nassert solution('1 10 100') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('3 1 3') == 'No'\nassert solution('2 10 2') == 'Yes'\nassert solution('4 1 2 1') == 'Yes'\nassert solution('2 1 4 1') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('1 100 10') == 'No'\nassert solution('1 10 1') == 'Yes'\nassert solution('1 10 10') == 'Yes'\nassert solution('1 10 10 10') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is True\nassert solution(\"1 2 3\") is False\nassert solution(\"1 1\") is True\nassert solution(\"1 1 1\") is False\nassert solution(\"1 1 2\") is False\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('2 6 9') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('4 6 7') == 'Yes'\nassert solution('1 2 3 4 5') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 10 100') == 'Yes'\nassert solution('2\\n1 100') == 'No'\nassert solution('2\\n1 10') == 'Yes'\nassert solution('2\\n1 1') == 'No'\nassert solution('3\\n1 1 1') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('2 3 4') == 'No'\nassert solution('2 1 2') == 'Yes'\nassert solution('10') == 'No'\nassert solution('1 10 100') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"2 10 100\") == \"Yes\"\nassert solution(\"5 10 100\") == \"No\"\nassert solution(\"4 10 100\") == \"Yes\"\nassert solution(\"9 10 100\") == \"Yes\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\n\nassert solution('xz') == 'No'\nassert solution('xax') == 'No'\nassert solution('bzy') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'Yes'\nassert solution('yx') == 'Yes'\nassert solution('a') == 'No'\nassert solution('aA') == 'Yes'\nassert solution('abA') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc', 'abc') == 'Yes'\nassert solution('ab', 'a') == 'Yes'\nassert solution('a', 'b') == 'No'\nassert solution('z', 'ab') == 'No'\nassert solution('a', 'b') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abc', 'abc') == 'Yes'\nassert solution('abc', 'abc') == 'Yes'\nassert solution('aa', 'aa') == 'Yes'\nassert solution('aa', 'ab') == 'No'\nassert solution('xy', 'xa') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('xy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atlas') == 'Yes'\n\"\"\""
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abcde') == 'Yes'\nassert solution('ghijklm') == 'No'\nassert solution('qrstuvwxyz') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('aaa') == 'Yes'\nassert solution('baa') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atcoder') == 'No'\nassert solution('atcoder') == 'No'\n\"\"\""
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('xz') == 'No'\nassert solution('atcoder') == 'Yes'\nassert solution('abcdefgh') == 'Yes'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"\n\nA, B, C = [int(x) for x in input().split()]"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('7 14 1') == 'YES'\n'''\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"7 4 6\") == \"YES\"\nassert solution(\"2 5 4\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 5 1''') == 'YES'\nassert solution('''7 5 1''') == 'NO'\nassert solution('''7 9 4''') == 'YES'\nassert solution('''9 9 4''') == 'NO'\nassert solution('''50 15 26''') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 5 1\\n') == 'YES'\n\nassert solution('4 100 40\\n') == 'NO'\nassert solution('100 100 100\\n') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 8 1') == 'YES'\nassert solution('7 8 3') == 'NO'\nassert solution('7 15 3') == 'NO'\nassert solution('7 25 3') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 5 1\\n') == 'YES'\nassert solution('7 5 1\\n') == 'NO'\nassert solution('7 1 5\\n') == 'YES'\nassert solution('7 1 5\\n') == 'NO'\nassert solution('7 1 1\\n') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('15 5 1') == 'YES'\nassert solution('15 3 1') == 'NO'\nassert solution('3 1 2') == 'NO'\nassert solution('7 5 1') == 'YES'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 3') == '1'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '3'\nassert solution('3 3') == '3'\nassert solution('10 5') == '15'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"1 2 2 1\") == \"0\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '2 2') == '1'\nassert solution(\n    '8 6') == '15'\nassert solution(\n    '6 6') == '3'\nassert solution(\n    '18 15') == '105'\nassert solution(\n    '10 10') == '10'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '2'\nassert solution('4 4') == '3'\nassert solution('100 100') == '10000'\nassert solution('20 10') == '12'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 3') == '1.5'\nassert solution('1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('10 2') == '2.5'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\n\n\"\"\""
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '2'\nassert solution('2 3') == '1'\nassert solution('3 3') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('100 100') == '9998'\nassert solution('1000 1000') == '99898'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"11 5 2\") == \"4\"\nassert solution(\"11 10 2\") == \"5\"\nassert solution(\"11 15 2\") == \"6\"\nassert solution(\"11 17 2\") == \"7\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"13 3 1\") == 3\nassert solution(\"1 5 2\") == 2\nassert solution(\"1 5 3\") == 0\nassert solution(\"2 3 1\") == 1\nassert solution(\"2 3 2\") == 0\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nX,Y,Z = list(map(int, stdin.split(\" \")))\nprint(X-Y-Z)"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('100 4 3') == '3'\nassert solution('500 100 25') == '3'\nassert solution('5 5 4') == '3'\nassert solution('6 6 3') == '3'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12 3 1') == '3'\nassert solution('13 3 1') == '3'\nassert solution('12 3 2') == '3'\nassert solution('13 3 2') == '3'\nassert solution('15 3 3') == '3'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\"\n\n\"\"\"\nWe would like to sit as many people as possible, but there is a gap of length at least 1\ncentimeters between two people.\nThis is not enough to sit everyone, so the jury needs to do a bit of work.\n\nWe know that the distance between people is at least 1, and the distance between the\nend of the seat and the person is at most the width of the seat.\n\nLet's define the maximum number of people that can sit on the seat as f(X, Y, Z):\n\nf(X, Y, Z) = \\min_i \\max(X-Y, Z)\nwhere i is the number of people that can sit at the end of the seat.\n\nNotice that the maximum possible number of people is:\n\nZ \\max(X-Y, Y-Z)\n\"\"\""
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == input()\n\n'''"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('2 2\\n2 1\\n1 2\\n') == '3'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('2 0\\n1 1\\n2 2\\n1 3\\n2 3\\n3 3\\n3 2\\n1 2\\n') == '3'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n0 3') == '2'\nassert solution('2 1\\n2 2\\n3 3\\n3 1\\n2 3') == '3'\nassert solution('1 2\\n2 2\\n3 3\\n3 1\\n2 3\\n4 4') == '6'\nassert solution('0 0\\n2 1\\n1 1\\n3 1\\n1 2\\n1 2\\n1 2\\n1 3\\n1 3\\n2 4\\n2 4\\n2 4\\n2 4') == '12'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\nassert solution(\n'''4\n3 0\n5 1\n1 3\n3 5\n1 4\n0 1\n4 4\n0 0\n5 5\n''') == '4'\n\nassert solution(\n'''3\n2 0\n2 1\n0 1\n2 1\n1 2\n0 1\n2 0\n2 1\n1 2\n0 1\n2 1\n1 2\n''') == '2'\n\nassert solution(\n'''5\n2 0\n2 1\n1 2\n0 1\n2 1\n1 2\n0 1\n0 1\n2 1\n1 2\n0 1\n0 1\n0 1\n1 2\n''') == '3'\n\nassert solution(\n'''2\n2 0\n0 1\n''') == '0'"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('2 1\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '3'\nassert solution('3 2\\n2 1\\n1 3\\n2 3\\n2 4\\n4 3\\n4 2') == '3'\nassert solution('3 2\\n2 1\\n1 3\\n2 3\\n2 4\\n4 3\\n4 2') == '6'\nassert solution('3 2\\n2 1\\n1 3\\n2 3\\n2 4\\n4 3\\n4 2') == '4'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('1\\n0\\n1\\n1') == '0'\nassert solution('1\\n0\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n0\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n0\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3 4') == '2'\nassert solution('2 0\\n3 1\\n1 3') == '2'\nassert solution('1 2\\n2 3\\n3 4') == '0'\nassert solution('1 2\\n3 4\\n4 1') == '0'\nassert solution('1 2\\n3 4\\n1 3') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 0\") == \"2\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"0 4\") == \"5\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"5\\n3 3\\n1 1\\n1 1\\n1 1\\n1 1\") == \"4\"\nassert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"5\\n3 3\\n1 1\\n1 1\\n1 1\\n1 1\") == \"4\"\nassert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('2\\n0\\n0\\n') == '0'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('4\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('2\\n0\\n0\\n') == '0'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\nassert solution(\"3 3\\n0 3\\n0 3\\n\") == \"7\"\nassert solution(\"2 3\\n1 3\\n1 3\\n\") == \"7\"\nassert solution(\"3 5\\n0 3\\n1 3\\n1 3\\n\") == \"7\"\nassert solution(\"3 2\\n0 3\\n1 3\\n1 3\\n\") == \"4\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 4\n0 3''') == '7'\nassert solution('''2 4\n0 3''') == '14'\nassert solution('''1 4\n0 3\n0 4''') == '7'\nassert solution('''3 4\n0 3\n0 4\n0 5''') == '7'\nassert solution('''2 4\n0 1\n0 2''') == '7'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4') == '7'\nassert solution('0 3') == '7'\n\"\"\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 3') == '7'\nassert solution('1 2') == '2'\nassert solution('2 4') == '6'\nassert solution('7 8') == '10'\nassert solution('9 10') == '11'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 3') == '7'\nassert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('2 1') == '2'\nassert solution('5 2') == '5'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4\\n0 3') == '7'\nassert solution('3 4\\n0 2\\n1 3') == '3'\nassert solution('3 4\\n0 2\\n1 3\\n2 3') == '3'\nassert solution('5 3\\n0 1\\n1 2\\n2 3\\n3 4') == '3'\nassert solution('4 2\\n0 1\\n1 2\\n2 3\\n3 4') == '3'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\nassert solution(\"2 5\\n0 3\\n0 2\\n1 4\\n0 1\\n\") == \"7\"\nassert solution(\"2 5\\n0 3\\n0 2\\n1 4\\n0 1\\n\") == \"7\"\nassert solution(\"2 5\\n0 3\\n0 2\\n1 4\\n0 1\\n\") == \"7\"\nassert solution(\"2 5\\n0 3\\n0 2\\n1 4\\n0 1\\n\") == \"7\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 4\n0 3\n''') == '7'\n\nassert solution('''10 4\n0 3\n''') == '11'\n\nassert solution('''50 0\n10 11\n''') == '5'\n\nassert solution('''100 1000\n1 2\n''') == '5'\n\nprint(solution('''1000 1\n1 2\n'''))\nprint(solution('''1000 2\n1 2\n'''))\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"1\"\nassert solution(\"4\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"1\"\nassert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"0\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n2\\n2\\n3\\n3\\n1\\n1\\n3\\n3\\n1\\n3\\n3\\n3\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 10\nR 101\n? 101\nL 100\n? 100\nL 1\nR 1\n? 1\nL 1\n? 1''') == '2'\nassert solution('''L 1\nR 1\n? 1\nL 1\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2\\n'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1\\n'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 1000\nR 123\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1\\n'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '1'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1\\n1\\n1\\n1') == '1'\nassert solution('5\\n1\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n2\\n1') == '1'\nassert solution('2\\n1\\n2\\n1') == '0'\nassert solution('1\\n1\\n2\\n1') == '2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_) == output\n\nTest.describe(\"Basic tests\")\nTest.assertEquals(solution(input_), output)"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\") == \"1\\n1\\n2\"\n\nassert solution(\"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\") == \"0\\n2\\n1\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\n\n\n\n'''\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '0\\n4\\n6\\n6\\n-1\\n6\\n72'\n'''\n1) At the beginning, $n=1$. Therefore, the first operation is not necessary.\n2) If $n=10$ then $n=5$, so the second operation is not necessary.\n3) If $n=25$ then $n=12$ and so on.\n4) We stop when the input value is 1\n'''\n\nassert solution('''7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '0\\n4\\n6\\n6\\n-1\\n6\\n72'\n'''\n1) At the beginning, $n=1$. Therefore, the first operation is not necessary.\n2) If $n=10$ then $n=5$ and so on.\n3) We stop when the input value is 1\n'''\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 2') == '1'\nassert solution('1 1 3') == '2'\nassert solution('1 1 4') == '3'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1''') == '0'\nassert solution('''3\n2\n1''') == '1'\nassert solution('''4\n1\n2\n3\n4''') == '2'\nassert solution('''4\n1\n2\n3\n4\n5\n6''') == '3'\nassert solution('''6\n1\n2\n3\n4\n5\n6\n7''') == '5'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\nn = int(input())\nqueries = [int(input()) for _ in range(n)]"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '0\\n4\\n6\\n6\\n-1\\n6\\n72\\n'\nassert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '0\\n4\\n6\\n6\\n-1\\n6\\n72\\n'\nassert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '0\\n4\\n6\\n6\\n-1\\n6\\n72\\n'\nassert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '0\\n4\\n6\\n6\\n-1\\n6\\n72\\n'\nassert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '0\\n4\\n6\\n6\\n-1\\n6\\n72\\n'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000000000000000000') == 72\nassert solution('1') == 0\nassert solution('1\\n1') == 0\nassert solution('1\\n1\\n1') == 0\nassert solution('1\\n1\\n1\\n1') == 0\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3''') == 'NO'\nassert solution('''2\n3\n3\n2''') == 'YES'\nassert solution('''2\n2\n1\n2\n1\n2\n2\n2''') == 'YES'\nassert solution('''1\n1\n3''') == 'NO'\nassert solution('''3\n4\n5\n6\n7\n8\n9''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''4\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''4\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''4\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n100\\n') == 'NO'\nassert solution('2\\n2\\n') == 'NO'\nassert solution('2\\n100\\n') == 'YES'\nassert solution('2\\n2\\n') == 'YES'\nassert solution('2\\n2\\n') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == 'YES'\nassert solution('1\\n2\\n4\\n3') == 'YES'\nassert solution('1\\n2\\n1\\n2') == 'NO'\nassert solution('1\\n2\\n1\\n2\\n1\\n2') == 'NO'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'NO'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'NO'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'NO'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'NO'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n2\n2\n1''') == 'YES'\nassert solution('''2\n3\n2\n1\n2\n1\n3\n2\n2''') == 'NO'\nassert solution('''2\n2\n2\n2\n2\n2\n2\n2\n1''') == 'YES'\nassert solution('''2\n2\n2\n2\n2\n2\n2\n1''') == 'NO'\nassert solution('''3\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n3\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == 'NO'\nassert solution('10') == 'YES'\nassert solution('11') == 'YES'\nassert solution('1000') == 'YES'\nassert solution('100') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n1 1 2 1') == 'YES'\nassert solution('2\\n11\\n1') == 'NO'\nassert solution('1\\n100\\n') == 'YES'\nassert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n4\\n1 1 3') == 'YES'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == answer\n\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\nprint(solution(stdin))\n'''\n\n'''\n\n-----BRIEF-----\n\nHere we have two strings a and b of the same length. So, we can use the above described algorithm to make the strings equal by doing the following moves:\n\nswap(a_2, b_2) \u2014 we choose any index $i$ ($1 \\le i \\le n$) and swap a[i] with b[i].\nswap(a_2, a_6) \u2014 we choose any index $i$ ($1 \\le i \\le n$) and swap a[i] with a[n - i + 1].\nswap(b_1, b_5) \u2014 we choose any index $i$ ($1 \\le i \\le n$) and swap b[i] with b[n - i + 1].\n\nAs we know, if we make a swap on a string, we must make a swap on the same string. We can see this by making a swap on $a_1$, and then a swap on $a_3$.\n\nThere is no change in the indices of the strings after the first swap, so we can make two changes in the strings to get the desired result.\n\nThere is a swap on $a_3$ and $a_5$ on the second swap, but we can avoid it by making a swap on $a_2$, and a swap on $a_4$.\n\n'''\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abacaba') == '4'\nassert solution('zcabd') == '0'\nassert solution('dbacz') == '0'\n\n\n\n'''\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"\n\n\n-----Discussion-----\n\n## 0-1 Knapsack\nIn this problem we are given a knapsack of capacity $W$, which has items with weights $w_i$ and values $v_i$, and an amount of money $m$. We have to choose from the items to maximize the value of the knapsack.\n\nThis can be done recursively, but we have to ignore sub-problems we have already solved. The knapsack can be recursively solved by finding the best items and adding them to the knapsack. However, this means that the number of solutions we have to find in total is exponential in the number of items.\n\nThere is a much faster and more efficient way of solving this problem, which is called dynamic programming.\n\n## DP\nWith DP, we can keep a matrix $D$ of size $n\\times W$, where $D[i][j]$ is the maximum value that we can get by including the first $i$ items and still having a total value of $j$.\n\nTo compute $D[i][j],$ we iterate over the first $i$ items, and compute the value of the knapsack for the remaining items by taking the maximum of the value of the knapsack for $j - w_i$ and the value of the knapsack for $j - v_i$.\n\n## Dynamic Programming\n\n## Coding\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abab\") == \"\"\nassert solution(\"bbaa\") == \"\"\nassert solution(\"abc\") == \"\"\nassert solution(\"abacaba\") == \"4\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\\nbacabaa\") == \"4\"\nassert solution(\"zcabd\\dbacz\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n\n\n\n>>> solution('1\\nabcdefgh\\nabcdefghi')\n0\n\n>>> solution('1\\nabcdefgh\\nabcdefghi')\n4\n\n>>> solution('1\\nabcdefgh\\nabcdefghi')\n0\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n0\n\n>>> solution('7\\nabacaba\\nbacabaa')\n0\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('7\\nabacaba\\nbacabaa')\n4\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('5\\nzcabd\\nbaczab')\n3\n\n>>> solution('"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\naabbacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\ndbacz') == '0'\nassert solution('3\\nzcbd\\ndbaac') == '1'\nassert solution('7\\naabbacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\ndbacz') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"7\\n\"\n\"abacaba\\n\"\n\"bacabaa\\n\"\n) == '4'\n\nassert solution(\n\"5\\n\"\n\"zcabd\\n\"\n\"dbacz\\n\"\n) == '0'\n\n\n\n-----Time Limit Exceeded\n\"\"\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 10 5') == '-17'\nassert solution('1000000000 1 6') == '2999999997'\nassert solution('1 1 1000000000') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1000000000\\n1 1 999999999\\n1 1 1000000000\\n1 1 999999999\\n1 1 1000000000') == '2999999997'\nassert solution('1 1 1000000000\\n1 1 999999999\\n1 1 1000000000\\n1 1 999999999\\n1 1 1000000000') == '0'\nassert solution('1 1 10\\n1 1 1000000000\\n1 1 999999999\\n1 1 1000000000\\n1 1 999999999\\n1 1 1000000000') == '2999999997'\nassert solution('1 1 10\\n1 1 1000000000\\n1 1 999999999\\n1 1 1000000000\\n1 1 999999999\\n1 1 1000000000') == '0'\nassert solution('1 1 1000000000\\n1 1 999999999\\n1 1 1000000000\\n1 1 999999999\\n1 1 1000000000') == '1'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2\\n3\\n1\\n1\\n1\\n1\") == \"8\\n198\\n-17\\n2999999997\"\nassert solution(\"7\\n10\\n2\\n1\\n1\\n1\\n1\") == \"8\\n198\\n-17\\n2999999997\\n0\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"8\\n8\\n0\\n0\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\") == \"8\\n8\\n0\\n0\"\nassert solution(\"100\\n100\\n100\\n100\\n100\\n100\\n100\") == \"8\\n8\\n0\\n0\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 1 1\\n1 1 1\\n') == '8\\n198\\n'\nassert solution('2\\n1 100000000\\n1 1 6\\n') == '8\\n198\\n'\nassert solution('1\\n1 1 1\\n1 1 1\\n') == '8\\n8\\n'\nassert solution('1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '8\\n8\\n8\\n'\nassert solution('1\\n1 100000000\\n1 1 6\\n') == '8\\n198\\n'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 10 5') == '-17'\nassert solution('1000000000 1 6') == '2999999997'\nassert solution('1 1 1000000000') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1000000000\\n1 1 999999999\\n1\\n') == '0'\nassert solution('2\\n1 1\\n2\\n1 1\\n') == '1'\nassert solution('3\\n1 1 2\\n2 1 1\\n2 1 1\\n') == '1'\nassert solution('4\\n1 1 1 1\\n1 1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n') == '3'\nassert solution('5\\n1 1 1 1 1\\n1 1 1 1 1\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n') == '0'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('6') == '3'\nassert solution('13') == '3'\nassert solution('14') == '3'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\n\"\"\"\nIn [10]: x = '''3\n4\n9\n11\n13\n16\n17\n20\n21\n23\n25\n26\n29\n31\n33\n34\n36\n39\n41\n42\n43\n45\n47\n49\n51\n53\n54\n56\n57\n59\n61\n63\n64\n66\n69\n71\n73\n74\n76\n78\n79\n81\n83\n85\n87\n89\n91\n93\n94\n96\n97\n99\n101\n103\n104\n106\n107\n109\n111\n112\n113\n114\n115\n116\n117\n119\n120\n121\n122\n123\n124\n126\n127\n128\n129\n130\n131\n132\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n146\n148\n149\n150\n151\n152\n153\n155\n156\n157\n159\n160\n161\n162\n163\n164\n166\n168\n171\n172\n173\n175\n179\n181\n182\n184\n187\n188\n191\n192\n194\n195\n196\n197\n199\n200\n201\n203\n205\n206\n207\n208\n209\n211\n212\n213\n214\n215\n217\n220\n221\n222\n223\n224\n227\n229\n231\n232\n233\n234\n236\n238\n239\n241\n242\n244\n245\n246\n248\n249\n250\n251\n252\n253\n254\n256\n257\n259\n260\n261\n262\n264\n266\n268\n269\n271\n273\n274\n275\n276\n278\n279\n281\n282\n283\n285\n286\n288\n289\n291\n292\n293\n294\n296\n297\n300\n301\n302\n303\n304\n305\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n331\n332\n333\n334\n335\n336\n337\n338\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n351\n352\n353\n354\n355\n356\n357\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('4\\n1') == '3'\nassert solution('5\\n1') == '4'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '3'\nassert solution('1\\n5') == '6'\nassert solution('1\\n2\\n3') == '4'\nassert solution('1\\n1\\n3') == '2'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"7\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"11\") == \"6\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '3'\nassert solution('1\\n3') == '4'\nassert solution('1\\n4') == '5'\nassert solution('1\\n5') == '6'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a b x y n') == '70'\nassert solution('b a x y n') == '77'\nassert solution('a b x y n') == '177177'\nassert solution('b a x y n') == '999999999000000000'\nassert solution('a b x y n') == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n5 5\\n3 4\\n1 1\\n5 5') == '70\\n77\\n177177\\n999999999000000000\\n999999999'\nassert solution('2 3\\n5 5\\n3 4\\n1 1\\n5 5') == '70\\n77\\n177177\\n999999999000000000\\n999999999'\nassert solution('2 3\\n5 5\\n3 4\\n1 1\\n5 5') == '70\\n77\\n177177\\n999999999000000000\\n999999999'\nassert solution('2 3\\n5 5\\n3 4\\n1 1\\n5 5') == '70\\n77\\n177177\\n999999999000000000\\n999999999'\nassert solution('2 3\\n5 5\\n3 4\\n1 1\\n5 5') == '70\\n77\\n177177\\n999999999000000000\\n999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom sys import stdin, stdout\nt = int(stdin.readline().strip())"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\n\nassert solution('1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1234\\n1234\\n1234\\n1234\\n1234\\n1234\") == \"4\"\nassert solution(\"3\\n3\\n3\\n3\\n3\\n3\") == \"6\"\nassert solution(\"100\\n100\\n100\\n100\\n100\\n100\") == \"1\"\nassert solution(\"12\\n12\\n12\\n12\\n12\\n12\") == \"1\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\") == \"4\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n\"\"\"\n) == \"0\\n0\\n2\\n2\\n1\"\n\n\nassert solution(\n\"\"\"\n4\n1 1\n2 2\n4 4\n5 5\n\"\"\"\n) == \"0\\n0\\n1\\n2\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'\nassert solution('2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n10\\n2 3\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '1\\n0\\n2\\n2\\n1'\n'''\na,b = map(int,input().split())\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_stdout"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1\n22\n9999\n1\n777\n\"\"\") == \"13\\n90\\n1\\n66\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '90'\nassert solution('''2\n1\n2\n3''') == '66'\nassert solution('''3\n3\n4\n5''') == '1'\nassert solution('''36\n3\n12\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n999\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n0\\n0\\n0\") == \"0\\n0\\n0\\n0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\"\nassert solution(\"2\\n2\\n2\\n2\") == \"3\\n3\\n3\\n3\"\nassert solution(\"3\\n3\\n3\\n3\") == \"4\\n4\\n4\\n4\"\nassert solution(\"4\\n4\\n4\\n4\") == \"5\\n5\\n5\\n5\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('100') == ''\nassert solution('1010') == '1'\nassert solution('101001') == '3'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n22\n9999\n1\n777''') == '13'\nassert solution('''2\n22\n12345\n2\n7''') == '90'\nassert solution('''2\n999\n999\n99\n9''') == '66'\nassert solution('''2\n11111\n1111\n1\n1''') == '1'\nassert solution('''2\n2\n1\n1''') == '1'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('22') == '2'\nassert solution('9999') == '9'\nassert solution('1') == '1'\nassert solution('777') == '3'\nassert solution('9999') == '9'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n''') == '13'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '90'\nprint('tests passed')\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n1\\n2\\n1') == '3'\nassert solution('1\\n1\\n2\\n1\\n2') == '4'\nassert solution('1\\n2\\n2\\n2') == '4'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '11', '1 1'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == '12', '1 2'\nassert solution('1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12') == '13', '1 3'\nassert solution('1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\\n8 11\\n9 12\\n10 13') == '14', '1 4'\nassert solution('1 5\\n2 6\\n3 7\\n4 8\\n5 9\\n6 10\\n7 11\\n8 12\\n9 13\\n10 14') == '15', '1 5'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n') == 'YES\\n2 6\\n1 2\\n'\nassert solution('3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n') == 'NO\\n'\nassert solution('4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2 2\\n') == 'YES\\n2 2\\n4 1\\n'\nassert solution('4\\n6\\n2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2 2\\n') == 'YES\\n2 2\\n4 1\\n'\nassert solution('5\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2 2\\n') == 'NO\\n'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2'\n\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'\n\n\n\"\"\""
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''\n3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''\n4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''\n4\n6\n2 2 2 2 2\n5\n2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2'\n\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'\n\nassert solution('''5\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'NO'\n\nassert solution('''6\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2\\n5\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\n3\\n5\\n5\\n2\\n2\\n2\\"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n\"\"\") == \"YES\\n2 6\\n1 2\"\n\nassert solution(\"\"\"3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == \"YES\\n2 2\\n4 1\"\n\nassert solution(\"\"\"5\n6\n2 2 2 2 2\n5\n2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"6\n2\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\"\"\") == \"YES\\n2 2\\n4 1\""
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 3 1 3 2\n6\n1 1 2 2 2 1''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2''') == 'YES'\nassert solution('''6\n2 2 2 2 2 2 2\n5\n2 2 2 2 2''') == 'YES'\nassert solution('''2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''2\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''3\n2\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'YES'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'NO'\nassert solution('''5\n2\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n2 2 2 2 2 2') == 'NO'\nassert solution('2\\n2\\n2 2 2 2 2 2') == 'YES'\nassert solution('3\\n2\\n2 2\\n2 2\\n2 2\\n2 2') == 'NO'\nassert solution('5\\n2\\n2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2') == 'YES'\nassert solution('5\\n2\\n2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2') == 'NO'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4 5\n''') == [10,10,10,10,10]\nassert solution('''1 2 3 4 5\n6 7 8 9 0\n''') == [9,9,9,9,9]\nassert solution('''1 2 3 4 5\n6 7 8 9 0\n4 5 3 2 1\n''') == [10,10,10,10,10]\nassert solution('''1 2 3 4 5\n6 7 8 9 0\n4 5 3 2 1\n5 4 3 2 1\n''') == [10,10,10,10,10]\nassert solution('''1 2 3 4 5\n6 7 8 9 0\n4 5 3 2 1\n5 4 3 2 1\n''') == [10,10,10,10,10]\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"-1\"\nassert solution(\"1,-1\") == \"0\"\nassert solution(\"1,1\") == \"1\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2 3''') == '5'\nassert solution('''3 -1 0 2''') == '6'\nassert solution('''2 -3 -1 5 -4''') == '13'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4,2,3''') == '5'\nassert solution('''3,-1,0,2''') == '6'\nassert solution('''2,-3,-1,5,-4''') == '13'\nassert solution('''2,-3,-1,5,-4''') == '13'\nassert solution('''2,-3,-1,5,-4''') == '13'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"A = [4,2,3]; K = 1\") == \"5\"\nassert solution(\"A = [3,-1,0,2]; K = 3\") == \"6\"\nassert solution(\"A = [2,-3,-1,5,-4]; K = 2\") == \"13\"\n\n\n\"\"\"\nhttps://leetcode.com/explore/challenge/card/september-leetcoding-challenge/554/week-1-september-1st-september-7th/3469/\nGiven an array A of integers, we must\u00a0modify the array in the following way: we choose an i\u00a0and replace\u00a0A[i] with -A[i], and we repeat this process K times in total.\u00a0 (We may choose the same index i multiple times.)\nReturn the largest possible sum of the array after modifying it in this way.\n\nExample 1:\nInput: A = [4,2,3], K = 1\nOutput: 5\nExplanation: Choose indices (1,) and A becomes [4,-2,3].\n\nExample 2:\nInput: A = [3,-1,0,2], K = 3\nOutput: 6\nExplanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].\n\nExample 3:\nInput: A = [2,-3,-1,5,-4], K = 2\nOutput: 13\nExplanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].\n\n\nNote:\n\n1 <= A.length <= 10000\n1 <= K <= 10000\n-100 <= A[i] <= 100\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1,2,3,4,5,6,7,8') == '45'\nassert solution('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17') == '17'\nassert solution('-34,-47,-29,-43,-66,-7,-76,-10,18,-11,-3,-6,-7,-18,-10,-13,-3,-14,-2,-8,-4,-18,-6,-6,-1,-3,-16,-5,-19,-13,-12,-6,-5,-4,-7,-7,-9,-15,-17,-9,-10,-7,-18,-8,-12,-15,-5,-11,-9,-15,-14,-8,-13,-5,-1,-12,-11,-18,-15,-17,-3,-14,-8,-2,-1,-7,-14,-11,-12,-18,-6,-4,-11,-7,-15,-17,-7,-13,-4,-9,-8,-5,-10,-16,-13,-15,-5,-14,-1,-10,-17,-3,-8,-11,-2,-18,-15,-12,-14,-13,-14,-10,-4,-18,-5,-5,-13,-6,-7,-11,-3,-9,-16,-15,-1,-4,-13,-2,-11,-10,-15,-16,-3,-5,-9,-14,-12,-6,-1,-11,-7,-10,-18,-14,-3,-8,-2,-18,-3,-4,-12,-7,-16,-1,-9,-16,-15,-18,-9,-4,-8,-3,-7,-14,-13,-17,-16,-8,-11,-2,-4,-15,-3,-5,-10,-9,-1,-8,-2,-13,-6,-11,-4,-9,-7,-2,-1,-15,-16,-1,-6,-11,-8,-4,-16,-15,-1,-14,-18,-4,-13,-2,-5,-12,-10,-3,-9,-16,-8,-17,-1,-2,-17,-16,-5,-18,-1,-18,-14,-15,-4,-1,-6,-12,-13,-9,-18,-1,-6,-5,-16,-2,-11,-15,-3,-7,-18,-10,-12,-2,-16,-7,-13,-1,-14,-7,-1,-9,-15,-6,-12,-10,-7,-18,-1,-14,-5,-15,-1,-13,-1,-18,-5,-1,-7,-8,-11,-9,-10,-13,-6,-4,-10,-12,-8,-15,-5,-1,-16,-11,-10,-12,-5,-18,-4,-1,-14,-3,-17,-2,-13,-9,-15,-8,-4,-18,-12,-14,-5,-1,-9,-16,-5,-10,-8,-3,-8,-1,-3,-18,-17,-5,-7,-18,-14,-2,-16,-13,-6,-14,-17,-3,-4,-16,-8,-9,-4,-8,-15,-1,-2,-8,-1,-16,-13,-2,-14,-12,-7,-5,-17,-3,-13,-1,-9,-6,-14,-1,-4,-2,-15,-18,-1,-18,-11,-8,-5,-15,-3,-17,-1,-16,-15,-13,-3,-6,-5,-18,-15,-8,-5,-1,-8,-17,-15,-10,-16,-2,-14,-4,-10,-1,-11,-10,-9,-6,-3,-16,-3,-5,-8,-1,-3,-6,-11,-18,-3,-5,-12,-17,-8,-11,-2,-6,-4,-18,-7,-17,-1,-14,-10,-7,-9,-4,-18,-11,-2,-10,-12,-15,-14,-13,-1,-4,-12,-5,-1,-14,-1,-7,-17,-6,-18,-5,-13,-16,-3,-9,-15,-10,-6,-1,-13,-16,-15,-2,-15,-6,-4,-12,-10,-3,-11,-4,-16,-10,-8,-4,-16,-10,-12,-2,-1,-3,-4,-15,-1,-10,-14,-3,-5,-13,-2,-10,-17,-1,-10,-16,-15,-4,-13,-3,-5,-18,-15,-12,-10,-1,-6,-3,-2,-10,-1,-14,-13,-16,-10,-18,-9,-6,-5,-1,-15,-13,-2,-9,-15,-16,-4,-18,-17,-8,-17,-3,-18,-4,-10,-17,-16,-12,-10,-12,-6,-2,-5,-1,-13,-12,-9,-11,-8,-1,-3,-16,-11,-13,-1,-14,-5,-10,-14,-18,-15,-18,-14,-7,-5,-3,-10,-8,-6,-4,-11,-1,-5,-13,-2,-10,-3,-12,-9,-18,-5,-17,-1,-2,-17,-15,-5,-11,-8,-5,-1,-14,-18,-4,-10,-11,-9,-4,-5,-18,-15,-8,-3,-11,-16,-15,-5,-17,-17,-13,-16,-10,-8,-9,-16,-14,-10,-3,-5,-18,-5,-5,-5,-10,-14,-13,-17,-11,-15,-17,-9,-13,-15,-8,-4,-15,-16,-17,-16,-14,-5,-1,-3,-8,-15,-18,-14,-5,-17,-6,-2,-13,-1,-3,-9,-5,-11,-14,-8,-12,-5,-9,-4,-3,-6,-1,-17,-1,-15,-7,-4,-13,-9,-12,-3,-18,-4,-5,-3,-15,-10,-9,-11,-5,-17,-5,-3,-6,-13,-1,-2,-10,-15,-18,-2,-5,-18,-12,-10,-3,-17,-1,-17,-18,-14,-16,-17,-12,-17,-9,-15,-1,-15,-18,-12,-10,-4,-3,-6,-5,-15,-2,-18,-11,-6,-5,-10,-14,-13,-4,-8,-9,-15,-5,-4,-3,-6,-10,-12,-3,-3,-16,-17,-13,-14,-1,-17,-6,-7,-16,-3,-13,-2,-11,-11,-18,-5,-18,-13,-14,-6,-18,-8,-4,-15,-7,-3,-10,-11,-8,-17,-2,-12,-10,-15,-11,-3,-14,-8,-5,-2,-17,-18,-5,-1,-4,-18,-6,-8,-7,-8,-6,-3,-15,-18,-11,-10,-15,-8,-14,-8,-6,-3,-2,-10,-17,-6,-12,-1,-1,-10,-15,-5,-16,-10,-13,-18,-5,-5,-14,-2,-10,-3,-8,-5,-3,-11,-16,-4,-10,-18,-17,-15,-18,-4,-7,-5,-5,-9,-1,-12,-10,-14,-16,-11,-15,-4,-1,-8,-18,-5,-17,-3,-14,-13,-17,-11,-3,-1,-17,-6,-5,-13,-3,-16,-1,-15,-11,-8,-4,-18,-5,-2,-18,-"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n') == 10\nassert solution('3\\n-1\\n0\\n2\\n') == 6\nassert solution('2\\n-3\\n-1\\n5\\n-4\\n') == 13"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '10'\nassert solution('1 2 3 4') == '14'\nassert solution('-1 -2 -3 -4') == '-14'\nassert solution('1 2 -3 4') == '14'\nassert solution('1 1 1 1') == '4'\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nprint(\"tests passed\")\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == 'true'\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == 'false'\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == 'true'\n\n\n\"\"\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\nassert solution(\"0 2 1 -6 6 -7 9 -1 2 0 1\") == \"false\"\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == \"true\"\n\"\"\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\nassert solution(\"0 2 1 -6 6 -7 9 -1 2 0 1\") == \"false\"\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == \"true\"\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == \"false\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5\") == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == \"true\"\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == \"false\"\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == \"true\"\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == \"false\"\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1, 2]) == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([-1,-1,0]) == True\nassert solution([1,2,0]) == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == False\nassert solution([0, 0, 0]) == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == True\nassert solution('0 2 1 -6 6 -7 9 -1 2 0 1') == False\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == True\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == False\nassert solution('9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9') == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '0 2 1 -6 6 -7 9 1 2 0 1') == True\nassert solution(\n    '0 2 1 -6 6 -7 9 -1 2 0 1') == False\nassert solution(\n    '3 3 6 5 -2 2 5 1 -9 4') == True\nassert solution(\n    '3 3 6 5 -2 2 5 1 -9 -4') == False\nassert solution(\n    '3 3 6 5 -2 2 5 1 -9 -4') == False\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\n\n\"\"\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Beat\\nVet\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\nBeat\\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == \"beet and vet\"\nassert solution('''8\nrat\nraat\nrat\nrat\nrat\nratt\nratt\nrat\nrat\n''') == \"rat\"\nassert solution('''8\nrat\nrat\nrat\nrat\nrat\nratt\nratt\nrat\nrat\n''') == \"rat\"\nassert solution('''10\nbaab\nbaab\nbaab\nbaab\nbaab\nbaab\nbaab\nbaab\nbaab\nbaab\nbaab\nbaab\nbaab\n''') == \"baab\"\nassert solution('''8\nrat\nrat\nrat\nrat\nrat\nratt\nratt\nrat\nrat\n''') == \"rat\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n\n\"\"\") == \"beet and vet\"\n\nassert solution(\"\"\"9\na\nb\nc\nd\ne\nf\ng\nh\ni\n\n\"\"\") == \"a b c d e f g h i\"\n\nassert solution(\"\"\"5\ns\na\nf\ne\ng\n\n\"\"\") == \"a f e g s\"\n\nassert solution(\"\"\"1\na\n\n\"\"\") == \"a\"\n\nassert solution(\"\"\"2\ns\na\n\n\"\"\") == \"a s\""
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\n\nassert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\n'''"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'beet'\nassert solution('bed') == 'bed'\nassert solution('vet') =='vet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"beat\") == \"beet\"\nassert solution(\"vet\") == \"vet\"\nassert solution(\"beet\") == \"beet\"\nassert solution(\"bed\") == \"bed\"\nassert solution(\"bet\") == \"bet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\nassert solution('''10\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == 'a'\nassert solution('''20\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == 'b'\n\n'''\nreferences:\nhttps://leetcode.com/problems/top-k-frequent-words/discuss/241929/Python-Heap\nhttps://leetcode.com/problems/top-k-frequent-words/discuss/241929/Python-Heap-Solution\nhttps://leetcode.com/problems/top-k-frequent-words/discuss/241929/Python-Heap-Solution-with-an-Explanation\nhttps://leetcode.com/problems/top-k-frequent-words/discuss/241929/Python-Heap-Solution-with-an-Explanation-and-a-Look-and-Say-Algorithm\n\nhttps://leetcode.com/problems/top-k-frequent-words/discuss/241929/Python-Heap-Solution-with-an-Explanation-and-a-Look-and-Say-Algorithm-in-explanation\n'''\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\nfoo') == 'foo'\nassert solution('2\\nbar\\nbaz') == 'bar\\nbaz'\nassert solution('3\\nbla\\nbla\\nbla') == 'bla\\nbla\\nbla'\nassert solution('4\\nbaa\\nbaa\\nbaa\\nbaa') == 'baa\\nbaa\\nbaa'\nassert solution('5\\nbaa\\nbaa\\nbaa\\nbaa\\nbaa') == 'baa\\nbaa\\nbaa'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('beat: beat\\n') == 'beat'\nassert solution('beat: beat\\n: beat\\n') == 'beat'\nassert solution('beat: beat\\n: vet\\n') =='vet'\nassert solution('beat: beat\\n: vet\\n: beet\\n') =='vet'\nassert solution('beat: beat\\n: vet\\n: beet\\n: beat\\n') =='vet'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n8\\n') == '8'\nassert solution('4\\n4\\n') == '0'\nassert solution('4\\n2\\n') == '8'\nassert solution('1\\n3\\n') == '0'\nassert solution('1\\n2\\n') == '1'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 8') == '8'\nassert solution('2 3') == '10'\nassert solution('5 2 1 1 1 1') == '100'\nassert solution('5 6 1 1 1 1') == '101'\nassert solution('5 6 1 1 2 1') == '101'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8') == '8'\nassert solution('4 8') == '8'\nassert solution('-4 -8') == '0'\nassert solution('4 8') == '8'\nassert solution('-4 8') == '0'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 8\\n') == '8'\nassert solution('4 8\\n') == '8'\nassert solution('2\\n' + '1 2\\n') == '1'\nassert solution('1\\n' + '-1\\n') == '0'\nassert solution('3\\n' + '1 1 1\\n' + '-1 1 1\\n' + '1 1 1\\n') == '0'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"2\\n3\\n4\") == \"6\"\nassert solution(\"2\\n2\\n2\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"6\"\nassert solution(\"2\\n2\\n2\\n2\") == \"3\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n8''') == \"8\"\nassert solution('''2\n4 8''') == \"8\"\nassert solution('''8\n8''') == \"0\"\nassert solution('''2\n-4 -8''') == \"0\"\nassert solution('''2\n-4 8''') == \"0\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n4 8') == '8'\nassert solution('2\\n4 5') == '2'\nassert solution('2\\n4 3') == '2'\nassert solution('2\\n8 9') == '1'\nassert solution('2\\n7 1') == '3'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2\\n3 2\\n4 5') == '7'\nassert solution('2\\n2\\n2\\n2') == '0'\nassert solution('3\\n5 3\\n2 4\\n1 5') == '8'\nassert solution('4\\n1 2 3 4\\n1 1 1 1') == '1'\nassert solution('6\\n1 2 3 4 5 6\\n1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"8\"\nassert solution(\"4 8\") == \"8\"\nassert solution(\"1 3 2\") == \"1\"\nassert solution(\"2 4 6 7\") == \"24\"\nassert solution(\"1 4 3 5\") == \"2\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1234 150 100') == '84'\nassert solution('100 4 5') == '100'\nassert solution('100 15 5') == '45'\nassert solution('100 100 100') == '0'\nassert solution('1 2 3') == '6'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1234\n150\n100\n''') == \"84\"\n\nassert solution('''12345678\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n1234\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1234\\n150\\n100') == '84'"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\""
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n0\\n0') == '0'\nassert solution('100\\n150\\n100') == '84'\nassert solution('120\\n170\\n110') == '136'\nassert solution('120\\n170\\n110') == '136'\nassert solution('120\\n50\\n100') == '34'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"84\"\n\"\"\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nassert solution(\"150\\n100\\n100\") == \"0\"\nassert solution(\"1234\\n1000\\n1000\") == \"2434\"\nassert solution(\"1234\\n1000\\n1000\\n1000\") == \"0\"\nassert solution(\"1000000\\n90000\\n90000\") == \"0\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1234 150 100') == '84'\nassert solution('1034 150 100') == '34'\nassert solution('1234 150 100') == '1034'\nassert solution('1234 150 300') == '-1'\nassert solution('1234 150 4') == '0'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"8\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 3\") == \"0\"\n\"\"\"\nfrom math import factorial\n\nN, M = map(int, stdin.split())"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"8\"\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '8'\n\"\"\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '8'\nassert solution('2 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == '8'\nassert solution(\"2 2\") == '8'\nassert solution(\"1 1\") == '1'\nassert solution(\"2 4\") == '0'\nassert solution(\"4 4\") == '0'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 1') == '0'\nassert solution('2 2') == '8'\nassert solution('2 1') == '0'\nassert solution('5 2') == '120'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"3 5\") == \"60\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"5 5\") == \"8184\"\n\"\"\""
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '8'\nassert solution('2 1') == '0'\nassert solution('10 5') == '175769'\nassert solution('3 2') == '0'\nassert solution('8 7') == '65539'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == 'POSSIBLE'\nassert solution('5 5') == 'POSSIBLE'\nassert solution('6 3') == 'POSSIBLE'\nassert solution('8 3') == 'POSSIBLE'\nassert solution('8 5') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('3 1') == 'POSSIBLE'\nassert solution('3 2') == 'POSSIBLE'\nassert solution('3 3') == 'POSSIBLE'\nassert solution('3 5') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"2 3\") == \"POSSIBLE\"\nassert solution(\"2 3\") == \"POSSIBLE\"\nassert solution(\"2 1\") == \"IMPOSSIBLE\"\n\n\"\"\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3') == 'POSSIBLE'\nassert solution('1 2\\n2 3\\n2 3') == 'IMPOSSIBLE'\nassert solution('2 2\\n2 1\\n1 2') == 'POSSIBLE'\nassert solution('2 2\\n2 1\\n1 3') == 'POSSIBLE'\nassert solution('1 3\\n2 3\\n2 1') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n\n\"\"\""
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 1\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('2 3') == 'POSSIBLE'\nassert solution('1 2') == 'POSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\nassert solution('1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"abcde\") == \"ace\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"z\") == \"z\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\n\n\"\"\""
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('a') == 'a'\nassert solution('b') == 'ba'\nassert solution('c') == 'ca'\nassert solution('d') == 'da'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'acdr'\nassert solution('abcd') == 'abcd'\nassert solution('abcd12345') == 'abcd12345'\nassert solution('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('ac') == 'ac'\nassert solution('acde') == 'acde'\nassert solution('acdee') == 'acdee'\nassert solution('acdef') == 'acdef'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('acdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('a'*100) == 'a'*100\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abc') == 'ac'\nassert solution('atcoder') == 'aecdr'\nassert solution('atcoder') == 'aecdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('codewars') == 'cawrs'\nassert solution('tester') == 'tet'\nassert solution('soln') =='soln'\nassert solution('c') == 'c'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('attcoder') == 'adtr'\nassert solution('aattcoder') == 'adtaer'\nassert solution('atcoder') == 'acdr'\nassert solution('aaaaatcoder') == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('cab cat dog') == 'NO'\nassert solution('cab cat dog') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"YES\"\nassert solution(\"rhfg\") == \"NO\"\nassert solution(\"trey grunty\") == \"YES\"\nassert solution(\"trey grunty\"] == \"NO\"\nassert solution(\"trey grunty\") == \"NO\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n'''\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng rgorgp\") == \"YES\"\nassert solution(\"rng gorogp\") == \"NO\"\nassert solution(\"rai rogo\") == \"NO\"\nassert solution(\"rabroa\") == \"NO\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(\"abcd\") == \"NO\"\nassert solution(\"abcdefg\") == \"NO\"\nassert solution(\"abcdefghi\") == \"YES\"\nassert solution(\"abcdefghig\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'NO'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng ogorj apple\") == \"NO\"\nassert solution(\"rng gorilla ogorj apple\") == \"NO\"\nassert solution(\"rng gorilla ogorj apple\") == \"NO\"\nassert solution(\"rng gorilla ogorj apple\") == \"NO\"\n\"\"\""
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('snake dragon water') == 'NO'\nassert solution('dog god god') == 'NO'\nassert solution('dog dog dog') == 'NO'\nassert solution('dog dog god') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'GREATER'"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('-24') == 'LESS'\nassert solution('10') == 'EQUAL'\nassert solution('0') == 'EQUAL'\nassert solution('1') == 'EQUAL'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 'LESS'\nassert solution('2') == 'LESS'\nassert solution('1000000000') == 'GREATER'\nassert solution('1000000000') == 'LESS'\nassert solution('99999') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 'LESS'\nassert solution('2\\n2') == 'LESS'\nassert solution('2\\n1') == 'LESS'\nassert solution('1\\n2') == 'GREATER'\nassert solution('2\\n2') == 'EQUAL'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('36\\n24') == 'GREATER'\nassert solution('36\\n24') == 'LESS'\nassert solution('36\\n24') == 'EQUAL'\n\nassert solution('35\\n24') == 'LESS'\nassert solution('35\\n24') == 'GREATER'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('7') == 'EQUAL'\nassert solution('0') == 'LESS'\nassert solution('10') == 'GREATER'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'LESS'\n\nassert solution(36) == 'GREATER'\n\nassert solution(36) == 'LESS'\n\nassert solution(24) == 'EQUAL'\n\nassert solution(36) == 'GREATER'"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'LESS'\nassert solution('3\\n2') == 'LESS'\nassert solution('3\\n3') == 'EQUAL'\nassert solution('3\\n4') == 'GREATER'\nassert solution('10\\n2') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3') == 'GREATER'\nassert solution('3\\n1') == 'LESS'\nassert solution('7\\n7') == 'EQUAL'\nassert solution('6\\n6') == 'EQUAL'\nassert solution('100\\n100') == 'GREATER'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    stdin.splitlines()[0]\n) == stdin.splitlines()[1]\n\n\"\"\"\n\nfrom sys import stdin\n\na, b = [int(s) for s in stdin.splitlines()]\nprint(\"GREATER\" if a > b else (\"LESS\" if a < b else \"EQUAL\"))\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_data) == \"2\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\n'''\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.splitlines()[-1]\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"2\"\nassert solution(\"orange\") == \"1\"\nassert solution(\"grape\") == \"1\"\nassert solution(\"apple\") == \"2\"\nassert solution(\"orange\") == \"1\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\nabcd\nabcdefghi\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\n1\na1a\n2\na2b\n3\na3b\n''') == '3'\n\n\"\"\""
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('apple\\norange\\napple\\n1\\ngrape') == '2'\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '8'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '10'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '10'\nassert solution('''1\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '0'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '0'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('apple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('apple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('apple\\napple\\napple\\n1\\ngrape\\n') == '2'\nassert solution('apple\\napple\\napple\\n1\\ngrape\\n') == '2'\nassert solution('apple\\napple\\napple\\n1\\ngrape\\n') == '2'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\n\"\"\""
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('AC') == 'T'\nassert solution('AG') == 'C'\nassert solution('AT') == 'G'\nassert solution('TA') == 'A'\nassert solution('TC') == 'C'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"\nprint('Test passed')"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 2 2 4 1\\n1 2 2 2 1\\n') == '14'\nassert solution('5\\n5 2 2 2 4 1\\n1 2 2 2 2 1\\n') == '16'\nassert solution('5\\n4 2 2 4 1\\n1 2 2 2 1\\n') == '15'\nassert solution('5\\n2 2 2 4 1\\n1 2 2 2 1\\n') == '7'\nassert solution('5\\n2 2 2 2 1\\n1 2 2 2 1\\n') == '5'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 2 2 4\\n1 2 2 2 1') == '14'\nassert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '15'\nassert solution('1\\n1') == '1'\nassert solution('6\\n3 2 2 4 1\\n1 2 2 2 1') == '15'\nassert solution('8\\n3 2 2 4 1\\n1 2 2 2 1') == '15'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5\n3 2 2 4 1\"\"\"\n) == \"14\"\n\nassert solution(\n\"\"\"10\n1 2 2 3 4 1 2 2 3 4\"\"\"\n) == \"29\"\n\nassert solution(\n\"\"\"5\n1 2 2 4 1\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"1\n1\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"10\n1 2 2 3 4 1 2 2 3 4\"\"\"\n) == \"49\""
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\") == \"1\"\nassert solution(\"2\\n1\\n1\\n2\\n2\\n2\\n2\\n2\") == \"4\"\nassert solution(\"4\\n1\\n1\\n2\\n2\\n2\\n2\\n2\") == \"4\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n3 2 2 4 1\\n3 2 2 4 1\\n3 2 2 4 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n3 2 2 4 1\\n3 2 2 4 1\\n3 2 2 4 1\") == \"14\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 1') == 2\nassert solution('1\\n1') == 2\nassert solution('2\\n2 2') == 4\nassert solution('1\\n2 1') == 3\nassert solution('2\\n2 2') == 4\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 2 3 4 1') == '4'\nassert solution('1 2 2 3 4') == '5'\nassert solution('1 2 2 3 4 1') == '7'\nassert solution('1 2 2 3 4 1') == '8'\nassert solution('1 2 2 3 4 1') == '8'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n        '5\\n'\n        '3 2 2 4 1'\n    ) == '14'\n\n'''\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\n\"\"\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 14\n\"\"\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"3 2 2\") == \"1\"\nassert solution(\"4 3 3 4\") == \"2\"\nassert solution(\"5 4 4 3 2 4\") == \"2\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\"\"\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n2 2 2''') == '1'\nassert solution('''3 3\n2 2 2''') == '1'\nassert solution('''3 3\n1 2 2''') == '2'\nassert solution('''3 3\n2 1 2''') == '2'\nassert solution('''3 3\n2 2 2''') == '2'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == 1\nassert solution('3 3 3') == 2\nassert solution('2 2 2') == 1\nassert solution('3 3 2') == 2\nassert solution('2 2 4') == 2\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n2 2 2') == \"1\"\nassert solution('5 4\\n1 2 3 4 5') == \"6\"\nassert solution('6 4\\n1 2 3 4 5 6') == \"3\"\nassert solution('6 5\\n1 2 3 4 5 6') == \"4\"\nassert solution('6 6\\n1 2 3 4 5 6') == \"5\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"2 4 8\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"2 2 2\") == \"1\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == 'No'\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1 0 1\n2 1 2\n1 0 1\n\"\"\") == \"Yes\"\n\nassert solution(\n    \"\"\"\n1 0 1\n2 1 2\n3 2 2\n\"\"\") == \"No\"\n\nassert solution(\n    \"\"\"\n1 0 1\n2 1 2\n1 0 1\n\"\"\") == \"No\"\n\nassert solution(\n    \"\"\"\n1 0 1\n1 0 1\n1 0 1\n\"\"\") == \"No\"\n\nassert solution(\n    \"\"\"\n1 0 1\n1 0 1\n1 0 1\n\"\"\") == \"No\""
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 1') == 'Yes'\nassert solution('2 1 2') == 'Yes'\nassert solution('1 0 1') == 'No'\nassert solution('2 1 2') == 'No'\nassert solution('1 0 1') == 'No'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'No'\nassert solution('1 0 1\\n2 0 1\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n2 0 1\\n1 0 1\\n') == 'No'\nassert solution('1 0 1\\n2 0 1\\n1 1 1\\n') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\""
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''0 0 1\n0 1 0\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n1 0 1\n1 0 1''') == 'Yes'\nassert solution('''1 0 1\n1 0 1\n1 0 1''') == 'No'\nassert solution('''1 0 1\n1 0 1\n0 1 1''') == 'No'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == \"Yes\"\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == \"No\"\nassert solution('1 0 1\\n2 1 2\\n1 1 1') == \"No\"\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == \"No\"\nassert solution('1 0 1\\n2 1 2\\n1 1 1') == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == \"Yes\"\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == \"No\"\nassert solution('1 1 1\\n2 2 2\\n1 1 1\\n') == \"No\"\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n') == \"No\"\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n') == \"Yes\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABC') == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\nprint(solution(\"ABC\"))\nprint(solution(\"ARC\"))\n\nprint(solution(\"ARC\"))\n\nprint(solution(\"ABC\"))\n\"\"\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ARC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ARC\") == \"ARC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ARC\"\nassert solution(input()) == \"ABC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\nassert solution('ARC') == 'ARC'\nassert solution('ARC') == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ARCACBC\") == \"ARC\"\nassert solution(\"ARCACBC\") == \"ARC\"\nassert solution(\"ARCACBC\") == \"ARC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nprint('Test success!')\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 2') == '0'\nassert solution('2 3 3') == '0'\nassert solution('1000000000 1000000000 1') == '1'\nassert solution('1 1 1') == '3'\nassert solution('1000000000 1000000000 1') == '3'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 2') == '3' #This one is easy!\nassert solution('4 4 2') == '3'\nassert solution('0 0 0') == '0'\nassert solution('0 0 3') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 8 2''') == '3'\nassert solution('''4 8 1''') == '0'\nassert solution('''1 1 1''') == '0'\nassert solution('''1 10 10''') == '0'\nassert solution('''10 10 1''') == '9'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8 2') == '3'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('8 18 2') == '3'\nassert solution('8 10 2') == '0'\nassert solution('16 7 2') == '1'\nassert solution('1 1 2') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('10 4 1000000') == '1'\nassert solution('10 4 100000') == '0'\nassert solution('10 4 1') == '1'\nassert solution('10 4 10') == '3'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8 2') == '3'\n\"\"\""
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('0 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('2 1 1') == '1'\nassert solution('1 10 1') == '1'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'Please enter two nonnegative integers and a positive integer to test the correctness of solution.'\nassert solution('-1 1 1') == '0'\nassert solution('0 1 1') == '1'\nassert solution('0 1 0') == '0'\nassert solution('-1 0 1') == '0'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('1') == '\\n'\nassert solution('25') == '\\n'\nassert solution('25\\n') == '\\n'\nassert solution('25\\n2') == '\\n'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(123) == None\nassert solution(24) == \"Christmas Eve Eve\"\nassert solution(23) == \"Christmas Eve Eve Eve\"\nassert solution(25) == \"Christmas\"\nassert solution(22) == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n25\n''') == 'Christmas'\n\nassert solution(\n'''\n24\n''') == 'Christmas Eve'\n\nassert solution(\n'''\n23\n''') == 'Christmas Eve Eve'\n\nassert solution(\n'''\n22\n''') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Christmas\""
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('25') == ''\nassert solution('24') == 'Xmas'\nassert solution('23') == 'Xmas Eve'\nassert solution('22') == 'Xmas Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == \"Christmas\"\nassert solution('25') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('23') == 'Christmas Eve Eve Eve'\nassert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('26') == 'Christmas Eve Eve'\nassert solution('25.9') == 'Christmas Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\nprint('Test passed!')"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('25') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\""
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input('')) == output('')\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(4)"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == '4'"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6') == '4'\nassert solution('8') == '4'\nassert solution('3') == '0'\nassert solution('6') == '4'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6') == '3'\nassert solution('8') == '4'\nassert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == '4'"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == 4\nassert solution('4') == 2\nassert solution('2') == 0\nassert solution('1') == 1\nassert solution('4356') == 0\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 1') == 'No'\nassert solution('8 3 2 1') == 'Yes'\nassert solution('8 3 2') == 'No'\nassert solution('9 4 3 1') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 2') == 'No'\nassert solution('7 6 9 4') == 'Yes'\nassert solution('7 6 9 5') == 'No'\nassert solution('7 6 9 6') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 3') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\na, b, c, d = map(int, stdin.split())"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('2 7 1 9') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('2 1 1 1') == 'Yes'\nassert solution('2 1 1 3') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\""
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('4 7 9 3') == 'No'\nassert solution('1 2 3 4 7 9 9 9 9 10') == 'Yes'\nassert solution('1 2 3 4 7 9 9 9 10 11') == 'No'\nassert solution('1 2 3 4 7 9 9 9 10 11 12') == 'Yes'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n\n\"\"\"\n-----\nSolution:\n-----\n- Create a dictionary to store the words\n- Iterate through each word, make the first letter upper case and add it to the acronym\n- return the acronym\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('a aa a') == 'A'\nassert solution('b a b') == 'AB'\nassert solution('ab ab ab') == 'AB'\nassert solution('abc abc abc') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"ABC\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'A'\nassert solution('beginner') == 'AB'\nassert solution('contest') == 'ABC'\nassert solution('dictionary') == 'AC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder') == 'A'\nassert solution('atcoder') == 'A'\nassert solution('atcoder') == 'A'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner') == 'A'\nassert solution('atcoder') == 'A'\nassert solution('c') == 'C'\nassert solution('t') == 'T'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('tacocat') == 'TAC'\nassert solution('tacocat coder') == 'TAC'\n\"\"\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 200 120') == 'No'\nassert solution('50 300 120') == 'No'\nassert solution('50 200 400') == 'No'\nassert solution('50 200 100') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"No\"\nassert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"40 50 100\") == \"No\"\nassert solution(\"50 100 40\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A B C') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('50 100 120') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('50 100 120') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''50 100 120\n'''\n) == 'Yes'\nassert solution(\n'''50 50 50\n'''\n) == 'No'\nassert solution(\n'''50 100 120\n'''\n) == 'No'\nassert solution(\n'''50 50 50\n'''\n) == 'No'\nassert solution(\n'''30 100 120\n'''\n) == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('50 50 50') == 'No'\nassert solution('50 50 50') == 'Yes'\nassert solution('50 50 50') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"2 4 5\") == \"No\"\nassert solution(\"1000 1000 1000\") == \"Yes\"\nassert solution(\"1000000 1000000 1000000\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 50') == 'No'\nassert solution('100 100 100') == 'Yes'\nassert solution('100 100 0') == 'No'\n\"\"\""
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 100 120') == 'Yes'\nassert solution('10 100 120') == 'No'\nassert solution('50 100 120') == 'Yes'\nassert solution('10 50 120') == 'No'\nassert solution('10 50 120') == 'No'\n\"\"\""
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5'\n\"\"\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 8') == '5'\nassert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '10'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n'''\n'''\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8\\n7 9 8 9') == '5'\nassert solution('2 5\\n1 2 3 4 5') == '5'\nassert solution('3 5\\n1 2 3 4 5') == '5'\nassert solution('3 5\\n1 1 1 1 1') == '5'\nassert solution('3 5\\n1 2 3 4 5') == '5'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"4 5 6 7\") == \"5\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"2 2 2 2 2\") == \"1\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 8\n7 9 8 9''') == '5'\nassert solution('''5 17\n19 2 3 4 5''') == '5'\nassert solution('''5 2\n4 3 5 6''') == '2'\nassert solution('''4 6\n4 4 4 4 4''') == '0'\nassert solution('''3 5\n4 3 2 3''') == '0'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('7 9 8 9') == '5'\nassert solution('5 9 8 7 4 1') == '1'\nassert solution('5 9 8 7 4 1') == '5'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\") == \"2 1\"\nassert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1 1 1 1 1\"\nassert solution(\"3\\n1 1 1\") == \"1 1 1\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '4 2 1 3'\nassert solution('4\\n1 1 1 1\\n') == '4'\nassert solution('4\\n1 2 3 4\\n') == '4 2 1 3'\nassert solution('4\\n1 2 3 4\\n') == '4 2 1 3'\nassert solution('4\\n1 2 3 4\\n') == '4 2 1 3'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 3 4''') == '4 2 1 3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('2 4 1 3') == '4 2 1 3'\nassert solution('3 4 2 1') == '4 2 1 3'\nassert solution('4 3 2 1') == '4 2 1 3'\nassert solution('5 4 3 2 1') == '4 3 2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2 3 4''') == '4 2 1 3'\n\nassert solution('''2\n3 2''') == '2 3 2'\n\nassert solution('''7\n1 2 3 4 5 6 7''') == '1 2 3 4 5 6 7'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '1 2 3 4 5 6 7 8 9 10'\n\nassert solution('''30\n111 111 111 111 111 11''') == '111 111 111 111 111 11'"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\nassert solution('5\\n1 2 3 4 5') == '5 4 3 2 1'\nassert solution('6\\n1 2 3 4 5 6') == '6 5 4 3 2 1'\nassert solution('7\\n1 2 3 4 5 6 7') == '7 6 5 4 3 2 1'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '8 7 6 5 4 3 2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('1') == '1'\nassert solution('1 2') == '1 2'\nassert solution('1 2 3 4') == '1 2 3 4'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n4\n1 2 3 4\n\"\"\") == \"4 2 1 3\"\nassert solution(\"\"\"\\\n5\n1 2 3 4 5\n\"\"\") == \"5 4 3 2 1\"\nassert solution(\"\"\"\\\n1000000\n1000000\n1000000\n1000000\n1000000\n\"\"\") == \"1000000 1000000 1000000 1000000 1000000 1000000\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3\n4 5 6''') == \"Yes\"\nassert solution('''10 3\n4 5 6''') == \"No\"\nassert solution('''10 3\n1 2 3 4 5 6''') == \"Yes\"\nassert solution('''10 4\n1 2 3 4 5 6''') == \"No\"\nassert solution('''15 100\n3 5 10 8 9 12 7 11 14 1 2 4''') == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('5 1') == 'No'\nassert solution('10 1') == 'Yes'\nassert solution('5 5') == 'Yes'\nassert solution('5 4') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('1 2 3 4 5') == 'Yes'\nassert solution('1 2 3 4 5 6') == 'Yes'\nassert solution('1 2 3 4 5 6 7') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 1\n5''') == 'No'\nassert solution('''10 3\n5 10''') == 'Yes'\nassert solution('''10 3\n4 5 6''') == 'No'\nassert solution('''10 3\n1 1 1''') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\n    \"10 3\\n4 5 6\") == \"No\"\nassert solution(\n    \"10 3\\n4 5 2\\n6 5 4\") == \"Yes\"\nassert solution(\n    \"10 3\\n4 5 2\\n6 5 4\") == \"No\"\nassert solution(\n    \"10 3\\n4 5 2\\n6 5 5\") == \"No\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''5 6\n1 2 3 4 5''') == 'No'\nassert solution('''10 5\n2 3 4 5 6''') == 'Yes'\nassert solution('''7 10\n1 2 3 4 5 6 7''') == 'No'\nassert solution('''7 10\n1 2 3 4 5 6 7''') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"10 3\\n4 5 6\\n\"\n) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('5 3\\n3 2 1') == 'No'\nassert solution('10 10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('ababab') == '2'\nassert solution('ababab') == '0'\nassert solution('ababab') == '0'\nassert solution('ababab') == '0'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '0'\nassert solution('abaabab') == '2'\nassert solution('abaaba') == '4'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '0'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('ababab') == '4'\nassert solution('ababab') == '4'\nassert solution('abcdef') == '0'\nassert solution('abcdefa') == '0'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcabc') == 'abcabc'\nassert solution('abcabcabc') == 'abcabc'\nassert solution('abaababaab') == 'abaababaab'\nassert solution('abcababab') == 'abcababab'\nassert solution('abcabcabc') == 'abcabc'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abababab') == 6\nassert solution('abaababaab') == 6\nassert solution('abaababaa') == 5\nassert solution('abaababa') == 6\nassert solution('abaabab') == 6\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abaababaab') == 6\nassert solution('aababab') == 0\nassert solution('aaaaaa') == 1\nassert solution('aaaaaaab') == 3\nassert solution('aaaaab') == 2\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abaababaab') == 6\nassert solution('ababab') == 0\nassert solution('ababab') == 1\nassert solution('abc') == 0\nassert solution('ababab') == 1\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"ababab\") == \"3\"\nassert solution(\"abcba\") == \"2\"\nassert solution(\"abaababab\") == \"6\"\nassert solution(\"abcabcabc\") == \"4\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '4'\nassert solution('abaababa') == '4'\nassert solution('abaabab') == '4'\nassert solution('abaaba') == '4'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '4'\nassert solution('abaababa') == '2'\nassert solution('abaabab') == '1'\nassert solution('abaaba') == '0'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('ba') == 'No'\nassert solution('cba') == 'Yes'\nassert solution('ac') == 'No'\n\nassert solution('bac') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ab\") == \"Yes\"\nassert solution(\"ac\") == \"No\"\nassert solution(\"ba\") == \"Yes\"\nassert solution(\"bc\") == \"Yes\"\nassert solution(\"ca\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[2] + stdin[1] + stdin[0]\nassert solution(stdin) == 'a'\nassert solution(stdin) == 'b'\nassert solution(stdin) == 'c'\nassert solution(stdin) == 'ab'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('abb') == 'No'\nassert solution('bba') == 'No'\nassert solution('cab') == 'Yes'\n\n'''"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cab') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('bca') == 'Yes'\nassert solution('ab') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"aba\") == \"Yes\"\nassert solution(\"cba\") == \"Yes\"\nassert solution(\"cba\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"bca\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"acb\") == \"Yes\"\nassert solution(\"cab\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bac') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ab') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('bc') == 'Yes'\nassert solution('bac') == 'Yes'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1000000\\n1000000\\n') == '757402647'\nassert solution('2\\n1 3\\n4 2\\n') == '20'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n3\\n') == '2'\nassert solution('1\\n3\\n') == '2'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n100000\\n100000') == '15731'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1000000\\n1000000') == '757402647'\nassert solution('2\\n1 3\\n4 2\\n') == '20'\nassert solution('5\\n1 8 7 2 4\\n9 7 2 9 3\\n') == '646'\nassert solution('5\\n1000000\\n1000000\\n') == '757402647'\nassert solution('1\\n1000000\\n1000000\\n') == '757402647'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1000000\\n1000000') == '757402647'\nassert solution('2\\n1 3\\n4 2') == '20'\nassert solution('5\\n1 8 7 2 4\\n9 7 2 9 3\\n') == '646'\nassert solution('1\\n1000000\\n1000000') == '757402647'\nassert solution('2\\n1 3\\n4 2') == '20'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[0]"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n1 8 7 2 4\n9 7 2 9 3''') == '646'\nassert solution(\n'''1\n1000000\n1000000\n''') == '757402647'\nassert solution(\n'''2\n1 3\n4 2''') == '20'\nassert solution(\n'''3\n1 1 1\n2 2 2\n3 3 3\n''') == '31536'\nassert solution(\n'''4\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n''') == '6491459'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1000000\\n1000000\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"\nassert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\"\nassert solution(\"7\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"4095\"\nassert solution(\"10\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"50208\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\n1 8 7 2 4\n9 7 2 9 3\n\"\"\") == \"646\"\nassert solution(\"\"\"1\n1000000\n1000000\n\"\"\") == \"757402647\"\nassert solution(\"\"\"2\n1 3\n4 2\n\"\"\") == \"20\"\nprint(\"Passed\")\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n1000000\\n1000004\\n') == '20'\nassert solution('2\\n1000000\\n1000000\\n') == '757402647'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '7'\n\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\n\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\n\n\n\n\n\n'''\n\n3 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\n'''"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"4 5 6\") == \"17\"\nassert solution(\"3 1 3 1 1 1 2 1\") == \"17\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"6 8 5 1 8 1 1 2 1\") == \"17\"\n\n\n\"\"\""
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('6 8 5 1 8 1 1 2 1') == '17'\nassert solution('5 1 4') == '17'\nassert solution('5 4 4') == '7'\n\n\n\n------\n\n1) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n2) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n3) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n4) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n5) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n6) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n7) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n8) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n9) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n10) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n11) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n12) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n13) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n14) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n15) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n16) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n17) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n18) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n19) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n20) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n21) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n22) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n23) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n24) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n25) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n26) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n27) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n28) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n29) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n30) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n31) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n32) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n33) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n34) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n35) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n36) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n37) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n38) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n39) 6x1 + 1x2 + 2x3 + 2x4 + 3x5 + 3x6\n\n40) 6"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('6 8 5 1 8 1 1 2 1') == '17'\nassert solution('5 1 4') == '17'\n\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1 4\\n2 5 7 4 6\\n5 4\\n2 1\\n3 1\\n6 5') == '17'\nassert solution('7 1 4\\n2 5 7 4 6\\n5 4\\n2 1\\n3 1\\n6 5') == '17'\nassert solution('9 1 4\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7') == '17'\nassert solution('5 1 4\\n2 5 7 4 6\\n5 4\\n2 1\\n3 1\\n6 5') == '17'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\n\"\"\"\nThis solution uses dynamic programming and is called optimal solution.\n\nHowever, this solution has a runtime of O(n) since we need to store the maximum of value at each position of the array.\n\nThe optimal solution with O(n) runtime is to use O(1) extra space. The idea is to store the maximum of value at each position in an array of size n+1.\n\nThe array of size n+1 is a stack. At each index in the array, we calculate the maximum value at that position by comparing the value at the top of the stack and the value at the current position.\n\nExample:\n\nGiven [2,3,4,5], the maximum value at position 0 is 2. At position 1, the maximum is 2+3, at position 2, 3+4 and 4+5 are compared with 2, so it is the maximum. At position 3, the maximum is the largest value between 2 and 3+4, so it is 4+5.\n\nSo the maximum of all the values at each position is 2.\n\nAt each position, we then compare the current value with the value at the top of the stack. If the current value is larger, then we replace the value at the top of the stack with the current value.\n\nExample:\n\nGiven [2,3,4,5], the maximum value at position 0 is 2. At position 1, the maximum is 2+3, at position 2, 3+4 and 4+5 are compared with 2, so it is the maximum. At position 3, the maximum is the largest value between 2 and 3+4, so it is 4+5.\n\nAt each position, we then compare the current value with the value at the top of the stack. If the current value is larger, then we replace the value at the top of the stack with the current value.\n\nIn the last step, the current value is the maximum value at each position, and the top of the stack is the maximum value at each position. Thus, the maximum value at each position is the maximum of the current value and the top of the stack.\n\"\"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == \"7\"\n\nassert solution(\n'''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == \"17\"\n\nassert solution(\n'''\n5 1 4\n2 5 7 4 6\n5 4\n''') == \"17\"\n\nassert solution(\n'''\n6 1 4\n2 5 7 4 6\n5 4\n''') == \"17\"\n\nassert solution(\n'''\n7 1 4\n2 5 7 4 6\n5 4\n''') == \"17\""
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5 7\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '17'\nassert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '17'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17'\nassert solution('7 1 4\\n2 5 7 4 6\\n5 4\\n') == '17'\nassert solution('9 1 2\\n6 1 2\\n') == '17'\n\n\n\"\"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n\n\"\"\"\n1. Brutal force approach\nThis is really naive approach, it takes O(n^k) time complexity.\n\n2. Dynamic programming approach\n\nWe will use the dynamic programming table to store the best answer for current i-th index.\n\nWe start from the index $0$ and iterate over each position $i$.\n\nFor each position $i$, we will find the cheapest answer for current $i$ and the best answer for current $i - 1$.\n\nIf the current index is the last one ($i = n - 1$), then the answer is the cheapest answer for current $i$ ($i = n - 1$).\n\nIf the current index is not the last one, then the answer is the cheapest answer for current $i$ plus the best answer for current $i + 1$.\n\nIf the current index is not the last one, but current position is the last one ($i = n - 1$), then the answer is the cheapest answer for current $i$ and the best answer for current $i - 1$.\n\nWe can see that the above two expressions are equivalent, since the only difference is the order of operations.\n\nTime complexity is O(n^2)\n\n\"\"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 4 5''') == '7'\nassert solution('''2 5 4 2 6 3 1''') == '7'\nassert solution('''2 1''') == '17'\nassert solution('''6 5''') == '17'\nassert solution('''2 1''') == '17'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\\n') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n\"\"\""
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n3 4\\n3 5\\n3 6\\n3 7') == '1'\n\"\"\""
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n1 7\") == \"1\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n1 6\\n2 7\\n1 7') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\\n1 6\\n2 7\\n1 7') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n1 6\\n2 7\\n1 7') == '1'\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nfrom typing import List, Dict, Tuple\n\n\nclass DAG:\n    def __init__(self, n: int, edges: List[Tuple[int]]) -> None:\n        self.edges = edges\n        self.parents = defaultdict(set)  # type: Dict[int, set]\n        self.visited = set()  # type: set\n        self.distances = {node: float('inf') for node in range(1, n + 1)}  # type: Dict[int, float]\n\n        for i, j in edges:\n            self.parents[j].add(i)\n\n        for node in range(1, n + 1):\n            if node not in self.parents:\n                self.visited.add(node)\n                self.bfs(node)\n\n    def bfs(self, node: int) -> None:\n        queue = [node]\n        self.distances[node] = 0\n        while queue:\n            curr = queue.pop(0)\n            self.visited.add(curr)\n            for parent in self.parents[curr]:\n                if parent not in self.visited:\n                    queue.append(parent)\n                    self.distances[parent] = self.distances[curr] + 1\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7') == '1'\n\n'''\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 7\\n6 7\") == \"1\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"2\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n1 9\") == \"0\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n1 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n1 5\\n1 6\\n6 7\\n1 7\\n') == '2'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n1 5\\n1 6\\n6 7\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n1 5\\n1 6\\n6 7\\n1 7\\n') == '0'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n'\nprint('Test1 passed')\nassert solution(stdin) == '1\\n'\nprint('Test2 passed')\nassert solution(stdin) == '15\\n'\nprint('Test3 passed')\nassert solution(stdin) == '1999999999\\n'\nprint('Test4 passed')\nassert solution(stdin) == '113\\n'\nprint('Test5 passed')\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n'\n\"\"\""
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 7''') == '10'\nassert solution('''4 12''') == '15'\nassert solution('''2 1000000000''') == '1999999999'\nassert solution('''7 97''') == '1000000001'\nassert solution('''1000000000 1000000000''') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3 4') == '2'\nassert solution('1\\n3 4\\n5 6') == '2'\nassert solution('1\\n3 4\\n5 6\\n7 8') == '2'\nassert solution('1\\n3 4\\n5 6\\n7 8\\n9 10') == '2'\nassert solution('1\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12') == '2'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n\nassert solution('''1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n99 100\n101 102\n103 104\n105 106\n107 108\n109 110\n111 112\n113 114\n115 116\n117 118\n119 120\n121 122\n123 124\n125 126\n127 128\n129 130\n131 132\n133 134\n135 136\n137 138\n139 140\n141 142\n143 144\n145 146\n147 148\n149 150\n151 152\n153 154\n155 156\n157 158\n159 160\n161 162\n163 164\n165 166\n167 168\n169 170\n171 172\n173 174\n175 176\n177 178\n179 180\n181 182\n183 184\n185 186\n187 188\n189 190\n191 192\n193 194\n195 196\n197 198\n199 200\n201 202\n203 204\n205 206\n207 208\n209 210\n211 212\n213 214\n215 216\n217 218\n219 220\n221 222\n223 224\n225 226\n227 228\n229 230\n231 232\n233 234\n235 236\n237 238\n239 240\n241 242\n243 244\n245 246\n247 248\n249 250\n251 252\n253 254\n255 256\n''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n\nassert solution('''3 10\n4 10\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n\nassert solution('''1 1000000000\n1000000000 1000000000\n1\n''') == '1'\n\nassert solution('''3 1\n3 1\n1 3\n3 3\n1 1\n''') == '3'"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001'\n'''\n'''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nassert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\n'''\n\"3 7\" -> 3\n\"4 12\" -> 4\n\"2 1000000000\" -> 2\n\"7 97\" -> 7\n\"1000000000 1000000000\" -> 1000000000\n\"2 1\" -> 1\n'''\n'''\n\"6\" -> 6\n\"3 7\" -> 10\n\"4 12\" -> 15\n\"2 1000000000\" -> 2\n\"7 97\" -> 7\n\"1000000000 1000000000\" -> 1000000000\n\"2 1\" -> 1\n'''\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 2 1 3 2\") == \"2 1 3 2\"\nassert solution(\"4 4\") == \"1 2 3 4\"\nassert solution(\"2 1 2 1\") == \"1 2\"\nassert solution(\"3 2 3 2 1 3 3 2\") == \"2 1 3 2\"\nassert solution(\"3 3 2 3 2 1\") == \"2 3 1\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n2 1\\n\") == \"2\"\nassert solution(\"2 1\\n2 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 2 3 4\\n\") == \"3\"\nassert solution(\"4 3\\n1 2 3 4\\n1 2 3 4\\n\") == \"3\"\nassert solution(\"7 3\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n\") == \"2\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2\n''') == '2'\n\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n\nassert solution('''1000 1000\n999 999 999\n998 998 998\n997 997 997\n996 996 996\n995 995 995\n994 994 994\n993 993 993\n992 992 992\n991 991 991\n990 990 990\n989 989 989\n988 988 988\n987 987 987\n986 986 986\n985 985 985\n984 984 984\n983 983 983\n982 982 982\n981 981 981\n980 980 980\n979 979 979\n979 979\n978 978 978\n977 978 977\n977 978 977\n976 976 976\n975 975 975\n974 974 974\n973 973 973\n972 972 972\n971 971 971\n970 970 970\n969 969 969\n969 969\n968 968 968\n967 967 967\n966 966 966\n965 965 965\n964 964 964\n963 963 963\n962 962 962\n961 961 961\n960 960 960\n959 959 959\n959 959\n958 958 958\n957 957 957\n956 956 956\n955 955 955\n955 955\n954 954 954\n953 953 953\n952 952 952\n951 951 951\n950 950 950\n949 949 949\n948 948 948\n948 948\n947 947 947\n946 946 946\n945 945 945\n945 945\n944 944 944\n943 943 943\n942 942 942\n941 941 941\n940 940 940\n939 939 939\n939 939\n938 938 938\n937 937 937\n937 937\n936 936 936\n935 935 935\n934 934 934\n933 933 933\n932 932 932\n931 931 931\n930 930 930\n929 929 929\n929 929\n928 928 928\n927 927 927\n926 926 926\n925 925 925\n924 924 924\n924 924\n923 923 923\n922 922 922\n922 922\n921 921 921\n920 920 920\n919 919 919\n919 919\n918 918 918\n917 917 917\n916 916 916\n915 915 915\n914 914 914\n913 913 913\n912 912 912\n912 912\n911 911 911\n910 910 910\n909 909 909\n909 909\n908 908 908\n908 908\n907 907 907\n906 906 906\n905 905 905\n905 905\n904 904 904\n903 903 903\n902 902 902\n901 901 901\n900 900 900\n899 899 899\n899 899\n898 898 898\n898 898\n897 897 897\n897 897\n896 896 896\n895 895 895\n894 894 894\n894 894\n893 893 893\n892 892 892\n891 891 891\n891 891\n890 890 890\n890 890\n889 889 889\n890 889\n889 888 888\n890 888\n889 887 887\n888 887\n887 886 886\n890 886\n889 885 885\n888 885\n887 884 884\n886 883 883\n885 882 882\n884 881 881\n883 881\n882 880 880\n881 879 879\n880 879\n879 878 878\n879 878\n878 877 877\n878 877\n877 876 876\n876 876\n875 875 875\n874 874 874\n873 873 873\n872 872 872\n872 872\n871 871 871\n870 869 869\n870 869\n868 867 867\n868 867\n867 866 866\n866 866\n865 865 865\n865 865\n864 864 864\n863 863 863\n862 862 862\n861 861 861\n860 859 859\n860 859\n858 857 857\n856 856 856\n855 855 855\n855 855\n854 854 854\n853 853 853\n8"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2', 'Easy'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3', 'Easy'\nassert solution('''7 3\n2 3 3 1 1 2''') == '1', 'Easy'\nassert solution('''7 3\n2 3 3 1 1 2''') == '2', 'Easy'\nassert solution('''7 4\n2 3 3 1 1 2''') == '2', 'Easy'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2\"\nassert solution(\"3 5\\n1 2 3\\n2 3 1\") == \"3\\n1 3 2\"\nassert solution(\"7 1\\n1\") == \"1\\n1\"\nassert solution(\"1 1\\n1\") == \"1\\n1\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1''') == \"263\"\nassert solution('''10\n10\n1 9\n3 2\n1 6\n1 5\n1 4\n3\n1 3\n1 2\n2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\") == \"263\"\nassert solution(\"3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\") == \"263\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == \"263\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '263'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('2\\n4') == '4'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '263'\n'''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n'''\n\nassert solution('''6''') == '309'\n'''\n6\n3\n1 6\n1 7\n1 5\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n'''\n\nassert solution('''10''') == '9952'\n'''\n10\n3\n1 6\n1 7\n1 5\n1 4\n1 3\n1 2\n2\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n'''\n\nassert solution('''15''') == '7031'\n'''\n15\n3\n1 6\n1 7\n1 5\n1 4\n1 3\n1 2\n2\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n'''\n\nassert solution('''20''') == '73697'\n'''\n20\n3\n1 6\n1 7\n1 5\n1 4\n1 3\n1 2\n2\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n'''"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100''') == '263'\n'''\n\n'''\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '263'\nassert solution('1') == '265'\nassert solution('1 2\\n1 3\\n1 5\\n2\\n1 4\\n1 3') == '263'\nassert solution('1 2\\n1 3\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\nassert solution('1 2\\n1 3\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''abacaba'''\n) == '''3'''\n\nassert solution(\n'''dfcbbcfeeedbaea'''\n) == '''5'''\n\nassert solution(\n'''kksdfjknsd'''\n) == '''2'''\n\nassert solution(\n'''hlldwyrfwe'''\n) == '''1'''\n\nassert solution(\n'''asfgjfhtrg'''\n) == '''2'''"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"aabbaccc\"\nassert solution(\"dfcbbcfeeedbaea\") == \"eefdacbcfa\""
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"aaba\"\nassert solution(\"dfcbbcfeeedbaea\") == \"bcfee\"\nassert solution(\"a\") == \"a\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abacaba''') == 'abacaba'\nassert solution('''dfcbbcfeeedbaea''') == 'eeef'\nassert solution('''fcbbcfeeedbaea''') == 'e'\nassert solution('''abacaba''') == 'abacaba'\nassert solution('''dfcbbcfeeedbaea''') == 'eeef'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''abacaba''') == '''3\n'''\nassert solution('''dfcbbcfeeedbaea''') == '''5\n'''\nassert solution('''wooooow''') == '''3\n'''\nassert solution('''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''abcdef''') == '''a'''\nassert solution('''abcdefg''') == '''a'''\nassert solution('''abcdefg''') == '''a'''\nassert solution('''abcdefg''') == '''a'''\nassert solution('''abcdefg''') == '''a'''\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n786876934\n541283568\n415902235''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n786876934\n541283568\n415902235\n765825453\n319617375\n976250859\n426296037\n15747678''') == '154873296'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n786876934\n541283568\n415902235\n765825453\n319617375\n976250859\n426296037\n15747678\n189295557\n721068280\n891400235\n160779232''') == '154873396'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873296\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''997892659\n1934873685\n7586485615\n934372624\n4169529761\n9552334864\n9635682353\n8951427132\n8798962151\n5557398497''') == '997892659\\n1934873685\\n7586485615\\n934372624\\n4169529761\\n9552334864\\n9635682353\\n8951427132\\n8798962151\\n5557398497'\n\nassert solution('''997892659\n1934873685\n7586485615\n934372624\n4169529761\n9552334864\n9635682353\n8951427132\n8798962151\n5557398497''') == '997892659\\n1934873685\\n7586485615\\n934372624\\n4169529761\\n9552334864\\n9635682353\\n8951427132\\n8798962151\\n5557398497'\n\nassert solution('''245310011\n8541917132\n8664456090\n9612961399\n8830247308\n9134830214\n1972340654\n9435538224\n3045828657\n1330454251''') == '245310011\\n8541917132\\n8664456090\\n9612961399\\n8830247308\\n9134830214\\n1972340654\\n9435538224\\n3045828657\\n1330454251'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n'''\n) == '154873296'\n\nassert solution(\n'''386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n412958357\n'''\n) == '336592714'\n\nassert solution(\n'''729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n412958357\n247189563\n'''\n) == '729645835'\n\nassert solution(\n'''631457982\n598236471\n247189563\n412958357\n247189563\n412958357\n631457992\n998236471\n247789563\n'''\n) == '998364670'\n\nassert solution(\n'''973145872\n631457992\n998236471\n247789563\n'''\n) == '93145872'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''967003184\n627030053\n949407543\n970107165\n291018245\n324176918\n921537642\n728789066\n827883727\n793816276\n''') == '967003184\\n627030053\\n949407543\\n970107165\\n291018245\\n324176918\\n921537642\\n728789066\\n827883727\\n793816276'\nassert solution('''368492875\n729396301\n354938223\n905600894\n734233817\n498073752\n741058199\n442226551\n258059876\n110260791\n''') == '368492875\\n729396301\\n354938223\\n905600894\\n734233817\\n498073752\\n741058199\\n442226551\\n258059876\\n110260791'\nassert solution('''552380784\n194696214\n381612571\n648541314\n904337597\n265728381\n374729576\n501781406\n706324084\n493593159\n''') == '552380784\\n194696214\\n381612571\\n648541314\\n904337597\\n265728381\\n374729576\\n501781406\\n706324084\\n493593159'\nassert solution('''754900305\n719098797\n516342966\n458236470\n459908211\n834748711\n851717899\n933647399\n823724656\n129821300\n''') == '754900305\\n719098797\\n516342966\\n458236470\\n459908211\\n834748711\\n851717899\\n933647399\\n823724656\\n129821300'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n\nprint(\"test 1 passed: \" + str(solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"))\n\nassert solution(\"988236471\\n412958357\\n631457992\\n998236471\\n247789563\\n412968357\\n631457982\\n598236471\\n247189563\\n964314628\\n729641835\\n154873296\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n\nassert solution(\"988236471\\n412958357\\n631457992\\n998236471\\n247789563\\n412968357\\n631457982\\n598236471\\n247189563\\n964314628\\n729641835\\n154873296\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n\nassert solution(\"28672988\\n988236471\\n412958357\\n631457992\\n998236471\\n247789563\\n412968357\\n631457982\\n598236471\\n247189563\\n964314628\\n729641835\\n154873296\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n\nassert solution(\"28672988\\n988236471\\n412958357\\n631457992\\n998236471\\n247789563\\n412968357\\n631457982\\n598236471\\n247189563\\n964314628\\n729641835\\n154873296\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\""
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789') == '123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789'\n\nassert solution('56133885\\n979512300\\n376748003\\n473690043\\n957245309\\n040106066\\n947695487\\n361947299\\n399171034') == '56133886\\n979512302\\n376748002\\n473690042\\n957245308\\n040106066\\n947695486\\n361947298\\n399171034'\n\nassert solution('123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789') == '123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789'\n\nassert solution('\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789') == '\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('154873296'\n    '386592714'\n    '729641835'\n    '863725149'\n    '975314628'\n    '412968357'\n    '631457982'\n    '598236471'\n    '247189563') == '154873396'\n\nassert solution('348497439'\n    '671514457'\n    '372964273'\n    '147684527'\n    '729564498'\n    '514976321'\n    '719472949'\n    '166449385'\n    '341937064') == '336593275'\n\nassert solution('372964273'\n    '147684527'\n    '729564498'\n    '514976321'\n    '719472949'\n    '166449385'\n    '341937064'\n    '671514457'\n    '348497439') == '372965494'\n\nassert solution('671514457'\n    '348497439'\n    '372964273'\n    '147684527'\n    '729564498'\n    '514976321'\n    '719472949'\n    '166449385'\n    '341937064') == '67151445'\n\nassert solution('729645835'\n    '247789563'\n    '998236471'\n    '247789563'\n    '681514457'\n    '979314628'\n    '372964273'\n    '147684527'\n    '729564498') == '729645835'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3\\n6\\n8\\n-1\\n9\\n4'\n\nassert solution(\n'''\n1\n1 2\n2 1\n''') == '1'\n\nassert solution(\n'''\n1\n1 1\n2 1\n2 2\n2 2\n''') == '1\\n2\\n2\\n2\\n2'\n\nassert solution(\n'''\n1\n2\n3\n''') == '1\\n2\\n3'\n\nassert solution(\n'''\n3\n1 3 2\n1 3\n2 3\n2 3\n2 3\n''') == '1\\n3\\n2'"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution(\n'''3 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution(\n'''3 2\n1 1 1 3 5 3 5 7\n1 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution(\n'''3 2\n1 1 1 3 5 3 5 7\n1 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution(\n'''3 2\n1 1 1 3 5 3 5 7\n1 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3\\n6\\n8\\n-1\\n9\\n4'\n\n'''\nThe officer is an elementary unit of the system of Commander Berland, but it has no superiority. The hierarchy is confined to a single officer, and it is the duty of Commander Berland to keep this rule. When the officer is promoted, the officer immediately inherits all the superiority of the officer that was before him.\n\nGiven the organization of the army, the Commander Berland may organize a command system for the army. In this system, the officer ranks are assigned to subordinate officers. Officer $i$ is promoted to officer $i+1$ if the commander has officer $i$ as his direct superior.\n\nWe can see that Officer 1 is the commander of the army, Officer 2 is a subordinate of Officer 1, Officer 3 is a subordinate of Officer 2, Officer 4 is a subordinate of Officer 3, Officer 5 is a subordinate of Officer 4, Officer 6 is a subordinate of Officer 5, Officer 7 is a subordinate of Officer 6, Officer 8 is a subordinate of Officer 7, Officer 9 is a subordinate of Officer 8, Officer 10 is a subordinate of Officer 9.\n\nHere is the organization of the army, where the rank of officer is denoted by the number of the officer:\n\nOfficer 1: Officer 5\nOfficer 2: Officer 4\nOfficer 3: Officer 1\nOfficer 4: Officer 2\nOfficer 5: Officer 3\nOfficer 6: Officer 7\nOfficer 7: Officer 6\nOfficer 8: Officer 8\nOfficer 9: Officer 9\nOfficer 10: Officer 10\n\nThe Commander of the army wants to know if officers are able to reach officer $i$ at officer rank $k$ in the command system. He will give the answer to the query.\n\nInput\n\nThe first line of the input contains two integers $n$ and $q$ ($2 \\le n \\le 2 \\cdot 10^5, 1 \\le q \\le 2 \\cdot 10^5$) \u2014 the number of officers in Berland army and the number of queries.\n\nThe second line of the input contains $n - 1$ integers $p_2, p_3, \\dots, p_n$ ($1 \\le p_i < i$), where $p_i$ is the index of the direct superior of the officer having the index $i$. The commander has index $1$ and doesn't have any superiors.\n\nThe next $q$ lines describe the queries. The $i$-th query is given as a pair ($u_i, k_i$) ($1 \\le u_i, k_i \\le n$), where $u_i$ is the index of the officer which starts spreading a command, and $k_i$ is the index of the required officer in the command spreading sequence.\n\nOutput\n\nPrint $q$ numbers, where the $i$-th number is the officer at the position $k_i$ in the list which describes the order in which officers will receive the command if it starts spreading from officer $u_i$. Print \"-1\" if the number of officers which receive the command is less than $k_i$.\n\nYou should process queries independently. They do not affect each other.\n\nExample\n\nInput\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\nOutput\n3\n6\n8\n-1\n9\n4\n'''"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3\\n6\\n8\\n-1\\n9\\n4'\n\nassert solution('''3 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3\\n6\\n8\\n-1\\n9\\n4'\n\nassert solution('''10 10\n1 1 1 3 5 3 5 7\n2 1\n1 5\n3 4\n7 3\n1 8\n1 9\n1 10\n5 3\n6 7\n5 2\n7 2\n4 5\n4 1\n1 6\n2 2\n2 3\n2 5\n2 1\n2 4\n3 4\n3 1\n2 3\n2 7\n2 5\n2 2\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2\n1 1\n3 1\n1 7\n1 1\n1 7\n1 1\n1 7\n1 1\n3 7\n3 6\n3 2\n3 7\n1 1\n3 2"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"\"\"\n3\n6\n8\n-1\n9\n4\n\"\"\"\n\nassert solution(\"\"\"\n8 4\n4 1 4 2 4 6 4 4\n3 1\n1 4\n3 4\n2 1\n1 3\n1 2\n2 1\n\"\"\") == \"\"\"\n4\n3\n3\n3\n2\n2\n2\n\"\"\"\n\nassert solution(\"\"\"\n8 4\n4 1 4 2 4 6 4 4\n3 1\n1 4\n3 4\n2 1\n1 3\n1 2\n2 1\n\"\"\") == \"\"\"\n-1\n3\n3\n3\n3\n2\n2\n2\n\"\"\"\n\nassert solution(\"\"\"\n10 9\n4 1 4 2 4 6 4 4\n3 1\n1 4\n3 4\n2 1\n1 3\n1 2\n2 1\n1 7\n1 8\n1 9\n\"\"\") == \"\"\"\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\"\"\"\n\nassert solution(\"\"\"\n10 9\n4 1 4 2 4 6 4 4\n3 1\n1 4\n3 4\n2 1\n1 3\n1 2\n2 1\n1 7\n1 8\n1 9\n\"\"\") == \"\"\"\n4\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\"\"\""
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution('''4 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution('''9 9\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution('''4 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution('''4 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '6 8 4 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"8\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\n\nassert solution('''3 3\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\n\nassert solution('''1 3\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\n\nassert solution('''2 2\n1 1 1\n1 2\n1 3\n''') == '-1'\n\nassert solution('''2 2\n1 1 1\n1 2\n2 1\n1 3\n''') == '-1'"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''1\n1 1 1 1\n''') == 'YES'\nassert solution('''2\n3 3 2 2\n1 1 1 1\n1 1 1 1\n''') == 'NO'\nassert solution('''3\n3 3 2 2\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'YES'\nassert solution('''4\n4 3 2 2\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nnum_test_cases = int(sys.stdin.readline())\n\nfor _ in range(num_test_cases):\n    a, b, c, n = [int(x) for x in sys.stdin.readline().split()]\n\n    if n % a == 0 and n % b == 0 and n % c == 0:\n        print('YES')\n    else:\n        print('NO')\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''4\n6 4 2 5\n100 101 102 103\n5 2 1 4''') == 'YES'\nassert solution('''3\n4 4 4\n2 2 3''') == 'YES'\nassert solution('''10\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0''') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\n\"\"\") == \"\"\"YES\nYES\nNO\nNO\nYES\n\"\"\""
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\n\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('100') == 'NO'\nassert solution('1000') == 'YES'\nassert solution('10000') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''5\n5 3 2 8\n10 20 15 14\n101 101 101 3\n5 5 5 5''') == 'NO'\nassert solution('''5\n5 3 2 8\n10 20 15 14\n101 101 101 3\n5 5 5 5''') == 'NO'\nassert solution('''5\n5 3 2 8\n10 20 15 14\n101 101 101 3\n5 5 5 5\n4 4 4 4\n''') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\nassert solution('''1 0\n0 1 0 1 1 0 1 1 0\n''') == '0 0'\nassert solution('''2 1\n2\n''') == '0 1'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\nassert solution('1\\n1\\n') == '0'\nassert solution('3 2\\n1 2 1 1 2 2 2 2 2\\n') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '3 4 6 5'\nassert solution('2 1 5 3 5') == '9 8 12 6 8'\nassert solution('2 10') == '3 3'\n\n\n\"\"\""
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('3 4\\n1 2 3 4\\n') == '3 4 6 5'\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\nassert solution('''3 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3 4 6 5'\nassert solution(stdin) == '9 8 12 6 8'\nassert solution(stdin) == '3 3'\nassert solution(stdin) == '9 8 12 6 8'"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(10)\n'''\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''3 3\n1 2 1 1 2 2 2\n''') == '3 3'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == \"\"\"\nYES\nYES\nYES\nYES\nNO\nNO\n\"\"\"\n\nassert solution(\n\"\"\"\n6 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == \"\"\"\nYES\nYES\nYES\nYES\nNO\nNO\n\"\"\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution(\n'''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution(\n'''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution(\n'''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution(\n'''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''6 1\n2 4\n3 5\n1 2\n1 3\n1 4\n2 5\n3 4\n3 2\n4 5\n2 1\n3 1\n3 2''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''6 1\n2 1\n1 3\n1 4\n2 5\n3 4\n3 2\n4 5\n2 1\n3 1\n3 2''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''6 1\n2 1\n1 3\n1 4\n2 5\n3 4\n3 2\n4 5\n2 1\n3 1\n3 2''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''6 1\n2 1\n1 3\n1 4\n2 5\n3 4\n3 2\n4 5\n2 1\n3 1\n3 2''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    10 6\n    1 2\n    1 3\n    1 4\n    2 5\n    2 6\n    3 7\n    7 8\n    7 9\n    9 10\n    4 3 8 9 10\n    3 2 4 6\n    3 2 1 5\n    3 4 8 2\n    2 6 10\n    3 5 4 7\n    \"\"\") == \"\"\"\nYES\nYES\nYES\nYES\nNO\nNO\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    3 6\n    1 2\n    1 3\n    1 4\n    2 5\n    2 6\n    3 7\n    7 8\n    7 9\n    9 10\n    4 3 8 9 10\n    3 2 4 6\n    3 2 1 5\n    3 4 8 2\n    2 6 10\n    3 5 4 7\n    \"\"\") == \"\"\"\nYES\nYES\nYES\nYES\nNO\nNO\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    10 3\n    1 2\n    1 3\n    2 4\n    2 5\n    2 6\n    3 7\n    3 8\n    3 9\n    3 10\n    4 5\n    5 6\n    6 7\n    6 8\n    6 9\n    6 10\n    7 8\n    8 9\n    8 10\n    \"\"\") == \"\"\"\nYES\nYES\nYES\nYES\nNO\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    3 4\n    1 2\n    2 3\n    3 4\n    1 4\n    \"\"\") == \"\"\"\nNO\nNO\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 2\n    2 3\n    3 4\n    1 4\n    \"\"\") == \"\"\"\nYES\n    \"\"\""
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n'''\n'''"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'NO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n'''\n\nfrom sys import stdin,stdout\nt = int(stdin.readline())\nfor i in range(t):\n    n = int(stdin.readline())\n    a = [int(x) for x in stdin.readline().split()]\n    #print(n,a)\n    count = 0\n    for i in range(n):\n        #print(i,a[i])\n        for j in range(i+1,n):\n            #print(j,a[j])\n            if a[i]!=a[j]:\n                count+=1\n                if count>=2:\n                    print('NO')\n                    break\n        if count>=2:\n            break\n    else:\n        print('YES')\n        roads = []\n        for i in range(n-1):\n            x,y = [int(x) for x in stdin.readline().split()]\n            #print(x,y)\n            roads.append((x,y))\n        roads.sort()\n        for x,y in roads:\n            print(x,y)\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n5\\n1 2 2 1 3') == 'NO\\nYES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nassert solution('1\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n') == 'NO\\nNO\\n1 2\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n'\n\"\"\""
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'NO'\nassert solution('1\\n1') == 'YES'\nassert solution('1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n'\nassert solution('''2\n5\n1 2 2 1 3\n3\n1 1 1\n2\n1 1000 101 1000\n4\n1 2 3 4\n1 3 4\n''') == 'NO\\nYES\\n1 2\\n1 3\\n1 4\\n'"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n'\n'2\\n'\n'1 2 2 1 3\\n'\n'3\\n'\n'1 1 1\\n'\n'4\\n'\n'1 1000 101 1000\\n'\n'4\\n'\n'1 2 3 4\\n') == 'YES\\n'\n\nassert solution('1\\n'\n'2\\n'\n'1 1 1\\n'\n'4\\n'\n'1 1000 101 1000\\n'\n'4\\n'\n'1 2 3 4\\n') == 'NO\\n'\n\nassert solution('2\\n'\n'4\\n'\n'1 2 2 1 3\\n'\n'3\\n'\n'1 1 1\\n'\n'4\\n'\n'1 1000 101 1000\\n'\n'4\\n'\n'1 2 3 4\\n') == 'NO\\n'\n\nassert solution('1\\n'\n'4\\n'\n'1 2 2 1 3\\n'\n'3\\n'\n'1 1 1\\n'\n'4\\n'\n'1 1000 101 1000\\n'\n'4\\n'\n'1 2 3 4\\n') == 'NO\\n'\n\nassert solution('2\\n'\n'4\\n'\n'1 2 2 1 3\\n'\n'3\\n'\n'1 1 1\\n'\n'4\\n'\n'1 1000 101 1000\\n'\n'4\\n'\n'1 2 3 4\\n') == 'NO\\n'"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"NO\nNO\nYES\nYES\n\"\"\"\n\nassert solution(\"\"\"3\n6\n1 2 2 1 2 1\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4 5\n\"\"\") == \"\"\"YES\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n3 4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n3 4\n\"\"\"\n\nassert solution(\"\"\"1\n1\n1\n\"\"\") == \"\"\"YES\n\"\"\"\n\nassert solution(\"\"\"2\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"NO\nNO\nYES\n\"\"\"\n\nassert solution(\"\"\"6\n1\n1\n1\n1\n1\n1\n1\n\"\"\") == \"\"\"NO\n\"\"\""
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''11101001\n\n''') == '01011110'\n\nassert solution(\n'''11101001\n\n''') == '0101111'\n\nassert solution(\n'''11101001\n\n''') == '0011111'\n\nassert solution(\n'''11101001\n\n''') == '0011011'\n\nassert solution(\n'''11101001\n\n''') == '0011100'"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\nassert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0101111'\nassert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0011111'\nassert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0011110'\nassert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0101111'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 1') == '010'\nassert solution('1 0 1') == '011'\nassert solution('1 1 0') == '010'\nassert solution('1 1 1') == '0101'\nassert solution('1 1 1 1') == '010101'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '01011110\\n0101111\\n0011111'\nassert solution('10\\n6\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '01011110\\n0101111\\n0011111'\nassert solution('10\\n6\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '01011110\\n0101111\\n0011111'\nassert solution('10\\n6\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '01011110\\n0101111\\n0011111'\nassert solution('10\\n6\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '01011110\\n0101111\\n0011111'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11011010') == '011110'\nassert solution('1111100') == '0011110'\nassert solution('0111100') == '0111001'\nassert solution('1110101') == '1110101'\nassert solution('0110101') == '0111001'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11011010') == '01011110'\nassert solution('1101100') == '010111'\nassert solution('1111100') == '0011111'\nassert solution('111101') == '0011110'\n\n\n\nimport sys\nfor _ in range(int(sys.stdin.readline().strip())):\n    n, k = map(int, sys.stdin.readline().strip().split())\n    s = sys.stdin.readline().strip()\n    print(sorted(s[i:i+k] for i in range(n-k+1)))\n'''"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\n\nassert solution('''11011010\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\n\n\n-----Alternate Solution-----"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"0101\") == \"0101\"\nassert solution(\"00000101\") == \"00000101\"\nassert solution(\"1000010001100\") == \"1000010001100\"\nassert solution(\"1111100\") == \"1111100\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1111100') == '0111110'\nassert solution('11011010') == '0111111'\nassert solution('1111100') == '0111110'\nassert solution('11011010') == '0111111'\nassert solution('11011010') == '0111110'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"11011010\") == \"01111010\"\nassert solution(\"11011011\") == \"01111011\"\nassert solution(\"1111100\") == \"0011100\"\nassert solution(\"1111101\") == \"0011101\"\nassert solution(\"1111111\") == \"00111111\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\n\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n\nassert solution('''7 1\n19 19\n18 19\n17 19\n16 19\n15 19\n14 19\n13 19\n12 19\n11 19\n10 19\n9 19\n8 19\n7 19\n6 19\n5 19\n4 19\n3 19\n2 19\n1 19\n0 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n-0 19\n18 19\n17 19\n16 19\n15 19\n14 19\n13 19\n12 19\n11 19\n10 19\n9 19\n8 19\n7 19\n6 19\n5 19\n4 19\n3 19\n2 19\n1 19\n0 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-14 19\n-13 19\n-12 19\n-11 19\n-10 19\n-9 19\n-8 19\n-7 19\n-6 19\n-5 19\n-4 19\n-3 19\n-2 19\n-1 19\n0 19\n1 19\n2 19\n3 19\n4 19\n5 19\n6 19\n7 19\n8 19\n9 19\n10 19\n11 19\n12 19\n13 19\n14 19\n15 19\n16 19\n17 19\n18 19\n19 19\n-19 19\n-18 19\n-17 19\n-16 19\n-15 19\n-"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == '3'\nassert solution('2 1\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == '3'\nassert solution('2 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '2'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '0'\nassert solution('10 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '5'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"7 2\\n\"\n    \"11 11\\n\"\n    \"9 11\\n\"\n    \"7 8\\n\"\n    \"8 9\\n\"\n    \"7 8\\n\"\n    \"9 11\\n\"\n    \"7 9\\n\"\n    \"7 8\\n\"\n    \"9 11\\n\"\n    \"7 9\\n\") == \"3\\n1 4 7\"\n\nassert solution(\n    \"5 1\\n\"\n    \"29 30\\n\"\n    \"30 30\\n\"\n    \"29 29\\n\"\n    \"28 30\\n\"\n    \"30 30\\n\"\n    \"30 30\\n\"\n    \"29 29\\n\"\n    \"30 30\\n\"\n    \"30 30\\n\") == \"3\\n1 2 4\"\n\nprint(solution(\n    \"7 2\\n\"\n    \"11 11\\n\"\n    \"9 11\\n\"\n    \"7 8\\n\"\n    \"8 9\\n\"\n    \"7 8\\n\"\n    \"9 11\\n\"\n    \"7 9\\n\"\n    \"7 8\\n\"\n    \"9 11\\n\"\n    \"7 9\\n\"))\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''2 1\n30 30\n30 30\n29 29\n28 30\n30 30\n''') == '0'\nassert solution('''1 1\n10 10\n9 9\n8 8\n7 8\n9 9\n7 7\n8 7\n9 8\n9 8\n9 9\n8 9\n8 8\n7 8\n8 7\n7 7\n7 7\n''') == '0'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\"\nassert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n7 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n7 3\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '4'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1 2') == '1'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(open(\"test_cases/24.txt\", \"r\").read())\nassert solution(open(\"test_cases/24_1.txt\", \"r\").read()) == \"3\\n1 4 7\\n\"\nassert solution(open(\"test_cases/24_2.txt\", \"r\").read()) == \"4\\n1 3 5 6\\n\"\n\n\"\"\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n-1\\n1\") == \"\"\nassert solution(\"3\\n-1\\n1\") == \"3\"\nassert solution(\"5\\n2\\n-1\\n1\\n-3\\n2\") == \"19\"\n\nprint(solution(input()))"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n1 3 2\n-100 2 3\n''') == '3'\n\nassert solution(\n'''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n''') == '3'\n\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n\nassert solution('''\n2\n2 1\n-3 0\n''') == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3\n''') == '3'\n\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n\nassert solution('''2\n2 1\n-3 0\n''') == '0'\n\nassert solution('''2\n2 1\n-3 0\n''') == '0'\n\nassert solution('''10\n9 9 9 9 9 9 9 9 9 9\n1 1 1 1 1 1 1 1 1 1\n''') == '45'"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3 2\\n-100 2 3') == '3'\nassert solution('2\\n1 3 2\\n-100 2 3') == '3'\nassert solution('3\\n2 1 4 3 5\\n2 2 2 3 4\\n2 2 2 3 4') == '19'\nassert solution('5\\n2 1 4 3 5\\n2 2 2 3 4\\n2 2 2 3 4') == '19'\nassert solution('1\\n1 1 1 1\\n1 1 1 1') == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n1 3 2\n-100 2 3\n\"\"\") == \"3\"\nassert solution(\n\"\"\"5\n2 1 4 3 5\n2 2 2 3 4\n\"\"\") == \"19\"\nassert solution(\n\"\"\"2\n2 1\n-3 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1 3 2\\n-100 2 3') == '3'\nassert solution('3\\n1 3 2\\n-100 2 3\\n1 3 2\\n-100 2 3') == '19'\nassert solution('3\\n1 3 2\\n-100 2 3\\n1 3 2\\n-100 2 3') == '19'\nassert solution('3\\n1 3 2\\n-100 2 3\\n1 3 2\\n-100 2 3') == '19'\nassert solution('3\\n1 3 2\\n-100 2 3\\n1 3 2\\n-100 2 3') == '19'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('2\\n1\\n3\\n4\\n5') == '0'\nassert solution('1\\n2\\n3\\n4\\n5') == '7'\nassert solution('2\\n1\\n3\\n4\\n5') == '6'\nassert solution('3\\n1\\n2\\n3') == '6'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution(\n'''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution(\n'''\n2\n2 1\n-3 0\n''') == '0'\nassert solution(\n'''\n8\n-9 -1 3 -5 4 -6 2 3\n5 2 -1 -3 1 -5 0 3\n''') == '-26'"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3', '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0', '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3', '1 3 3'\nassert solution('''1 2\n1 3 2\n2 1 2\n''') == '2 2', '2 2'\n\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''2 2\n1 2\n1 2\n''') == '0 0'\nassert solution('''5 2\n1 2 1\n2 3 2\n1 3 2\n3 4 2\n2 5 2\n1 5 2\n1 3 4 2\n''') == '3 3 3'\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''7 2\n1 2\n3 2\n2 4\n1 5\n2 5\n3 4\n4 6\n3 4\n2 3\n1 4\n3 5\n4 5\n1 4\n2 5\n4 6\n''') == '3 6 5'\nassert solution('''2 4\n2 3\n3 1\n4 1\n''') == '2 3'\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n') == '21 7 15 21 3\\n'\n\"\"\"\n\nfrom typing import List\nimport sys\n\nsys.setrecursionlimit(10000)\n\n\nclass DictNode:\n    def __init__(self, data: int):\n        self.data = data\n        self.left = None\n        self.right = None\n        self.parent = None\n\n    def __str__(self):\n        return str(self.data)\n\n\nclass Solution:\n    def find_tree_to_root(self, root: DictNode) -> List[DictNode]:\n        result = []\n        if not root:\n            return result\n\n        def dfs(node: DictNode):\n            if not node:\n                return\n\n            dfs(node.left)\n            result.append(node)\n            dfs(node.right)\n\n        dfs(root)\n        return result\n\n    def is_balanced(self, root: DictNode, n: int, max_depth: int) -> bool:\n        if not root:\n            return True\n        if n <= 0:\n            return False\n\n        left_depth = max_depth - 1 - root.data\n        right_depth = max_depth - 1 - (root.data + 1)\n\n        return self.is_balanced(root.left, n - 1, left_depth) and self.is_balanced(root.right, n - 1, right_depth)\n\n    def find_unbalanced_node(self, root: DictNode) -> DictNode:\n        result = None\n        if not root:\n            return result\n        if not root.left and not root.right:\n            return root\n\n        if root.left and not root.right:\n            result = root.left\n        elif root.right and not root.left:\n            result = root.right\n        else:\n            left_depth = self.find_unbalanced_node(root.left)\n            right_depth = self.find_unbalanced_node(root.right)\n            if abs(left_depth - right_depth) > 1:\n                result = root\n\n        return result\n\n    def count_unbalanced_nodes(self, root: DictNode, count: int) -> int:\n        if not root:\n            return count\n        if not root.left and not root.right:\n            return count\n        if root.left and not root.right:\n            count = self.count_unbalanced_nodes(root.left, count)\n        if root.right and not root.left:\n            count = self.count_unbalanced_nodes(root.right, count)\n        else:\n            left_depth = self.find_unbalanced_node(root.left)\n            right_depth = self.find_unbalanced_node(root.right)\n            if abs(left_depth - right_depth) > 1:\n                count += 1\n        return self.count_unbalanced_nodes(root.left, count) + self.count_unbalanced_nodes(root.right, count) + 1\n\n    def count_unbalanced_nodes_no_root(self, root: DictNode, count: int) -> int:\n        if not root:\n            return count\n        if not root.left and not root.right:\n            return count\n\n        left_depth = self.find_unbalanced_node(root.left)\n        right_depth = self.find_unbalanced_node(root.right)\n        if abs(left_depth - right_depth) > 1:\n            count += 1\n        return self.count_unbalanced_nodes_no_root(root.left, count) + self.count_unbalanced_nodes_no_root(root.right, count) + 1\n\n    def count_unbalanced_nodes_no_root_new(self, root: DictNode, count: int) -> int:\n        if not root:\n            return 0\n\n        left_depth = self.find_unbalanced_node_new(root.left)\n        right_depth = self.find_unbalanced_node_new(root.right)\n        if abs(left_depth - right_depth) > 1:\n            count += 1\n        return self.count_unbalanced_nodes_no_root_new(root.left, count) + self.count_unbalanced_nodes_no_root_new(root.right, count) + 1\n\n    def find_unbalanced_node_new(self, root: DictNode) -> int:\n        if not root:\n            return -1\n        if not root.left and not root.right:\n            return root.data\n\n        left_depth = self.find_unbalanced_node_new(root.left)\n        right_depth = self.find_unbalanced_node_new(root.right)\n        if abs(left_depth - right_depth) > 1:\n            return root.data\n        return max(left_depth, right_depth)\n\n    def find_unbalanced_node_new_no_recursion(self, root: DictNode) -> int:\n        if not root:\n            return -1\n        if not root.left and not root.right:\n            return root.data\n        left_depth = self.find_unbalanced_node_new_no_recursion(root.left)\n        right_depth = self.find_unbalanced_node_new_no_recursion(root.right)\n        if abs(left_depth - right_depth) > 1:\n            return root.data\n        return max(left_depth, right_depth)\n\n    def count_unbalanced_nodes_no_root_new_2(self, root: DictNode, count: int) -> int:\n        if not root:\n            return 0\n\n        left_depth = self.find_unbalanced_node_new_2(root.left)\n        right_depth = self.find_unbalanced_node_new_2(root.right)\n        if abs("
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\"\nassert solution(\"1 2\\n1 2\") == \"0 0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\"\nassert solution(\"7 7\\n1 2 1\\n2 3 2\\n1 3 2\\n3 4 4\\n1 5 2\\n2 5 3\\n1 5 4\\n2 6 2\\n1 7 2\\n6 4\\n1 2 6 1 2\\n\") == \"15 24 45 18 19 18 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\n\n'''\n\nfrom bisect import bisect_left"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5\\n1 2 1\\n2 3 2\\n1 3 2\\n3 4 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '21 7 15 21 3'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n3 4 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '0 0'\nassert solution('3 4\\n1 2 1\\n2 3 2\\n1 3 2\\n3 4 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '1 3 3'"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3 '\nassert solution('''1 2\n1 2\n''') == '0 0 '\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3 '\nassert solution('''9 9\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n''') == '2 3 4 '\n'''\n10\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n9 10 10\n'''\n'''\n10\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n9 10 10\n'''\n'''\n5\n1 2\n1 2\n1 2\n1 2\n1 2\n'''\n'''\n5\n1 2\n1 2\n1 2\n1 2\n1 2\n'''\n'''\n10\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n9 10 10\n'''\n'''\n10\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n9 10 10\n'''\n'''\n4\n1 2\n1 2\n1 2\n1 2\n'''\n'''\n4\n1 2\n1 2\n1 2\n1 2\n'''\n'''\n9\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n9 10 10\n'''\n'''\n9\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n9 10 10\n'''\n'''\n10\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n9 10 10\n'''\n'''\n10\n1 2 1\n1 3 2\n2 3 3\n3 4 4\n4 5 5\n5 6 6\n6 7 7\n7 8 8\n8 9 9\n9 10 10\n'''\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 3 3\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('3\\n1 2 2') == 'YES'\nassert solution('1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == 'YES'\nassert solution('2\\n2') == 'NO'\nassert solution('1\\n5') == 'YES'\nassert solution('1\\n100') == 'YES'\nassert solution('3\\n1 2 2') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input') == 'NO'\nassert solution('2 4 1 2 4 1 2 4') == 'YES'\nassert solution('4 2 4 2 2 2') == 'NO'\nassert solution('1 1') == 'NO'\nassert solution('1 1 1') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n2\\n1') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n1') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\n\nassert solution('''1\n1\n''') == 'YES'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n5\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n''') == 'YES'\nassert solution('''2\n5\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n1\n1\n1\n1\n''') == 'NO'\nassert solution('''3\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n1\n2\n1\n1\n1\n1\n''') == 'YES'\nassert solution('''4\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"1\\n2\\n\") == \"NO\"\nassert solution(\"2\\n2\\n\") == \"YES\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n\"\n    \"4\\n\"\n    \"1 2 2\\n\"\n    \"4\\n\"\n    \"5 5 5 5\\n\"\n    \"3\\n\"\n    \"1 2 4\\n\"\n    \"4\\n\"\n    \"1 3 4 4\\n\"\n    \"1\") == \"YES\"\n\n\n\n\"\"\"\n\n##################################################################\n## DO NOT MODIFY THE CODE BELOW THIS LINE!\n## YOUR TESTS WILL BE DOING WRONG WITHOUT YOU\n## ADDING NOISE!\n##################################################################\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('inputs/2/2_1') == '11'\nassert solution('inputs/2/2_2') == '1'\nassert solution('inputs/2/2_3') == '0'\nassert solution('inputs/2/2_4') == '8'\nassert solution('inputs/2/2_5') == '12'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('101') == '11'\nassert solution('1010') == '1'\nassert solution('1001') == '1'\nassert solution('1010_2~') == '8'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1010\n1101''') == '12'\nassert solution('''4 5\n1001\n10101''') == '11'\nassert solution('''4 5\n1010\n10101''') == '11'\nassert solution('''4 5\n1010\n10101''') == '11'\nassert solution('''4 5\n1010\n10101''') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n1010\n1101''') == '12'\nassert solution('''4 5\n1001\n10101''') == '11'\nassert solution('''10 10\n1010\n1101''') == '1'"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1010\n1101\n''') == \"12\"\n\nassert solution('''4 5\n1001\n10101\n''') == \"11\"\n\nassert solution('''4 4\n1001\n10101\n''') == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\\n4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"1\\n4\\n1001\\n10101\\n\") == \"11\"\nassert solution(\"2\\n4\\n1010\\n1101\\n\") == \"11\"\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\nassert solution('4 5\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1010\\n10101\\n') == '11'\nassert solution('4 5\\n1010\\n10101\\n') == '12'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\nassert solution('4 5\\n0\\n10101\\n') == '10'\nassert solution('4 5\\n0\\n0\\n10101\\n') == '0'\nassert solution('4 5\\n0\\n0\\n0\\n10101\\n') == '1'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1010\n1101''') == '12'\nassert solution('''4 5\n1001\n10101''') == '11'\nprint(solution('''8 3\n1010_2\n1101_2'''))\nprint(solution('''4 6\n1001_2\n10101_2'''))\nprint(solution('''4 7\n1001_2\n10101_2'''))\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"5 5\\n1001\\n10101\\n\") == \"11\"\nassert solution(\"4 5\\n1_1\\n10_1\\n\") == \"11\"\n\n\n\n--------------------------------------------------------------------------------\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n1') == 'NO'\nassert solution('2\\n2') == 'YES'\nassert solution('2\\n2\\n2') == 'YES'\nassert solution('2\\n2\\n2\\n2') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n2''') == 'NO'\nassert solution('''2\n4''') == 'YES'\nassert solution('''5\n6''') == 'NO'\nassert solution('''5\n7''') == 'NO'\nassert solution('''5\n8''') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('asdf') is None\nassert solution('asdfg') == 'YES'\nassert solution('2') == 'NO'\nassert solution('2 4 1 5') == 'NO'\nassert solution('2 4 6 8 1 3 5 11') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == 'NO'\nassert solution('''4''') == 'NO'\nassert solution('''6''') == 'NO'\nassert solution('''8''') == 'NO'\nassert solution('''10''') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('no') == ''\nassert solution('yes') == 'NO'\nassert solution('2 4 1 5') == 'NO'\nassert solution('YES') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10\n''') == 'YES\\n2 4 1 5'\nassert solution('''5\n4\n6\n8\n10\n''') == 'YES\\n2 4 6 8 1 3 5 11'\nassert solution('''5\n7\n7\n7\n7\n7\n''') == 'NO'\nassert solution('''5\n4\n4\n4\n4\n4\n''') == 'NO'\nassert solution('''5\n5\n5\n5\n5\n5\n''') == 'YES\\n5 5 5 5 5'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n'''\n\nfrom sys import stdin,stdout\nn = int(stdin.readline())\ns = 0\nfor _ in range(n//2):\n    s += int(stdin.readline())\n    s += 1\n    s -= int(stdin.readline())\n    s -= 1\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1''') == '0'\nassert solution('''2\n4\n5\n5\n4\n1\n3\n3\n5\n5\n2\n1\n1\n3\n1\n1\n3\n2\n1\n3\n2\n1\n1\n4\n2\n1\n5\n1\n1\n2\n2\n1\n4\n2\n1\n1\n2\n1\n3\n2\n1\n3\n2\n1\n1\n2\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"\"\"\n5\n1\n0\n4\n0\n\"\"\"\nassert solution(\n\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"\"\"\n5\n1\n0\n4\n0\n\"\"\""
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution(\n'''3\n3\n1 1 2''') == '1'\nassert solution(\n'''3\n3\n1 1 1 1 1 1''') == '0'\nassert solution(\n'''3\n3\n1 1 1''') == '0'\nassert solution(\n'''3\n3\n1 1 1''') == '0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n8') == '1'\nassert solution('1\\n8') == '0'\nassert solution('1\\n8') == '1'\nassert solution('1\\n8') == '0'\nassert solution('1\\n8') == '1'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '2'\nassert solution('4\\n1') == '1'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n1 1 2\n5\n1 1 1 1 1''') == '1'\nassert solution('''8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n3\n1 1 2''') == '1'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5''') == '0'\nassert solution('''3\n3\n1 1 2''') == '0'\nassert solution('''5\n3\n1 1 2''') == '0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3') == '0'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1 2\\n2') == '1'\nassert solution('2\\n3 3\\n4 4 4') == '2'\nassert solution('2\\n2 2\\n2') == '2'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\t\\n\\r\\f\") == \"\"\nassert solution(\"\"\"\n\"\"\") == \"\"\nassert solution(\"\"\"\n\"\"\") == \"\"\nassert solution(\"\"\"\n123456789\n\"\"\") == \"\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\n9\n3 1 4 1 5 9 2 6 5''') == '5'\n\nassert solution('''3\n3\n1 1 2''') == '0'\n\nassert solution('''5\n3\n1 1 2''') == '4'\n\nassert solution('''8\n8 7 6 5 4 3 2 1\n1\n1''') == '4'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"\"\"\n3\n4\n2\n7\n\"\"\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''5\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''8\n8\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '7'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ababbabbbaabaa') == 'ababbbaaabaa'\nassert solution('abababbbaabaa') == 'ababaaaabbbaa'\nassert solution('ababaaabbbaaa') == 'ababaaabbbaa'\nassert solution('ababaaaabbbaa') == 'ababaaabbbaa'\nassert solution('ababaaabbbaaa') == 'ababaaabbbaa'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n3 4\\n4 4') == '2'\nassert solution('1 2\\n2 3\\n2 3\\n3 4\\n4 4') == '4'\nassert solution('1 2\\n1 3\\n2 3\\n3 4\\n4 5') == '2'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '2'\nassert solution('1 2\\n2 3\\n3 4\\n4 5') == '2'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '2'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '7'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '7'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3'\nassert solution('''4\n1 1\n2 2\n3\n4\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n1\n1\n1\n2\n1\n2\n2\n2\n1\n2\n1\n2\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n2\n2\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n2\n2\n2\n1\n1\n1\n2\n2\n2\n2\n1\n1\n2\n1\n2\n2\n1\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n2\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n2\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1\n1 1\n2 1\n1 2\n3 2\n4 4\n1 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '''5\n60\n1439\n1180\n1\n'''\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59') == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == '0'\nassert solution('23 55') == '60'\nassert solution('23 0') == '1439'\nassert solution('0 1') == '1180'\nassert solution('4 20') == '1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0\\n0\\n1\\n2\\n0\\n0\") == \"1\"\nassert solution(\"1\\n23 0\\n23 59\\n0 1\\n4 20\\n23 59\") == \"60\"\nassert solution(\"1\\n23 0\\n0\\n0\\n1\\n2\\n0\\n0\") == \"1439\"\nassert solution(\"1\\n23 0\\n0\\n0\\n1\\n2\\n0\\n0\") == \"1180\"\nassert solution(\"1\\n23 0\\n23 59\\n0 1\\n4 20\\n23 59\") == \"1\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''23 55\n23 0\n0 1\n4 20\n23 59'''\n    ) == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == 5\nassert solution('23 55') == 60\nassert solution('23 0') == 1439\nassert solution('0 1') == 1180\nassert solution('4 20') == 1\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == \"5\"\nassert solution('10') == \"14\"\nassert solution('1') == \"0\"\nassert solution('24') == \"1\"\nassert solution('23 59') == \"60\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"L\") == \"L\"\nassert solution(\"LRU\") == \"LR\"\nassert solution(\"LDRRLR\") == \"LD\"\nassert solution(\"LDDRLRULRLLDRRUDLDULRLRUDRRUDRRUDULURDDU\") == \"LR\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''LRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 2\\n1 4\\n3 4'\nassert solution('''URDD\n4\nULDR\n5\nRDRUL\n5\nDRULR\n''') == '3 4'\nassert solution('''UURD\n4\nDLRR\n5\nRRDR\n5\nDRULR\n''') == '3 4'\nassert solution('''UURD\n4\nDRRL\n5\nRRDR\n5\nDRULR\n''') == '3 4'\nassert solution('''LRDR\n4\nLURD\n5\nRRDR\n5\nDRULR\n''') == '3 4'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('LLDDR') == '1 4'\nassert solution('LRUD') == '1 2'\nassert solution('RRUDU') == '3 4'\nassert solution('RRUD') == '-1'\nassert solution('UDDDUD') == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\nassert solution(\"RL\") == \"2 1\"\nassert solution(\"LRDRULDDR\") == \"-1\"\nassert solution(\"LDRL\") == \"3 1\"\nassert solution(\"DRLRR\") == \"2 4\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"LURDDR\") == \"3 4\"\nassert solution(\"LLDDR\") == \"3 4\"\nassert solution(\"RRUDU\") == \"-1\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 2\\n1 4\\n3 4\\n'\nassert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4\\n'\nassert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4\\n'\nassert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4\\n'\nassert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4\\n'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == None \n\"\"\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''LRUD\n4''') == '1 2'\nassert solution('''LURD\n5''') == '3 4'\nassert solution('''LLDDR\n5''') == '-1'\nassert solution('''RRUDU\n5''') == '3 4'\nassert solution('''LLDDR\n4''') == '1 2'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('LRUD') == '1 2'\nassert solution('LURD') == '1 4'\nassert solution('RRUDU') == '3 4'\nassert solution('LLDDR') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\"\n\n\"\"\"\n\nNote\n\nIt is quite likely that a solution to this problem is fairly straightforward. We can make use of the fact that each student can only be part of one team, and it is enough to compute a mapping from a student to a team.\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of the test case contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of students. The second line of the test case contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le n$), where $a_i$ is the skill of the $i$-th student. Different students can have the same skills.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$ ($\\sum n \\le 2 \\cdot 10^5$).\n\nThe output is a string with $t$ lines, each containing a solution to the problem.\n\n\n-----Input-----\n\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n\nOutput\n3\n1\n0\n2\n\n4\n1 2 3 4\n1 2 3\n1 2\n1 3\n\n\"\"\"\n\n\"\"\"\n\n-----Output-----\n\n4\n1\n0\n2\n\n3\n1\n\n2\n\n\"\"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcd')) == '4'\nassert solution('abc') == '1'\nassert solution('abcd') == '4'\nassert solution('abc') == '1'\nassert solution('abc') == '1'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == \"1\"\nassert solution('4') == \"2\"\nassert solution('1') == \"0\"\nassert solution('2 1') == \"1\"\nassert solution('2 1 4') == \"1\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n5\n2 1 4 3 4 2\n1\n1\n4\n1 1 1 3''') == '3'\nassert solution('''7\n5\n2 1 4 1 4 3\n1\n1\n4\n1 1 1 3''') == '1'\nassert solution('''7\n7\n5 3 1 2 5 6 2\n3\n2 3 1 2 1 2\n1\n1\n4\n1 1 1 3''') == '2'\nassert solution('''7\n7\n5 3 1 2 5 6 2\n3\n2 3 1 2 1 2\n2\n1\n4\n1 1 1 3''') == '0'\nassert solution('''7\n7\n5 3 1 2 5 6 2\n3\n2 3 1 2 1 2\n5\n1\n4\n1 1 1 3''') == '2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '3\\n1\\n0'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '3\\n1\\n0'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '3\\n1\\n0'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '3\\n1\\n0'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '3\\n1\\n0'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1,2\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1,2,3\") == \"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\n\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n1 3 4 4 1\n1\n1\n4\n1 1 1 3\n''') == '1'\n\nassert solution('''4\n7\n1 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '0'\n\nassert solution('''4\n7\n1 2 4 1 4 3 4\n5\n2 3 4 4 1\n1\n1\n4\n1 1 1 3\n''') == '2'\n'''\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5') == '121'\nassert solution('1\\n1337') == '0'\n\"\"\""
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n8') == '0'\nassert solution('3\\n9 4 1 7 10 1 6 5') == '121'\nassert solution('2\\n1337') == '0'\nassert solution('4\\n1337') == '0'\nassert solution('5\\n1337') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''1\n1337\n''') == '0'\nassert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '0'\nassert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == '3048'\nassert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == '4096'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\n\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5') == '121'\nassert solution('1\\n1337') == '0'\nassert solution('9\\n9 4 1 7 10 1 6 5') == '18'\nassert solution('9\\n9 4 1 7 10 1 6 5') == '18'\nassert solution('9\\n9 4 1 7 10 1 6 5') == '18'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n5\\n') == '4'\nassert solution('2\\n3\\n') == '1'\nassert solution('2\\n5\\n2\\n1\\n1\\n1\\n') == '4'\nassert solution('2\\n5\\n2\\n3\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''1\n1337\n''') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\n\n\n\n-------\n\nN = int(input())\nadj = [list(map(int,input().split())) for _ in range(N-1)]"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('7\\n1337\\n') == '0'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n9\\n') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\nprint(output)\n\n\"\"\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6\\n18\\n0\\n227\\n8'"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '6'\nassert solution('1 2 1 3') == '18'\nassert solution('10 6') == '0'\nassert solution('8 7 1 8 3 7 5 10 8 9') == '227'\nassert solution('5 10') == '8'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/test_24.txt') == '6\\n18\\n0\\n227\\n8'\n'''\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25') == '6\\n18\\n0\\n227\\n8'\nassert solution('1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n24 24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\nassert solution('1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n24 24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\nassert solution('1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n24 24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\nassert solution('1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n24 24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9''') == '6'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '18'\nassert solution('''1\n10\n1''') == '0'\nassert solution('''1\n10\n1''') == '0'\nassert solution('''3\n5\n2 2 2 2 2 2\n2 2 2''') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9') == '6\\n18\\n0\\n227\\n8'\nassert solution('5 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9') == '6\\n18\\n0\\n227\\n8'\nassert solution('10 25\\n24 24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '0\\n8'\nassert solution('5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '0\\n8'\n\n\n\n'''"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 2 1 3') == '6'\nassert solution('1 2 1 3\\n10 6') == '18'\nassert solution('1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9') == '0'\nassert solution('1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10') == '227'\nassert solution('1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500') == '18'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a = [1, 2, 1, 3];x = 0') == '6'\nassert solution('a = [1, 2, 1, 3];x = 1') == '18'\nassert solution('a = [1, 2, 1, 3];x = 2') == '0'\nassert solution('a = [1, 3, 1, 3];x = 3') == '4'\nassert solution('a = [1, 3, 3, 3];x = 4') == '4'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\"\"\""
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 2') == '1'\nassert solution('1 1') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 2 2') == '2'\nassert solution('5 1 2 1 3 3') == '3'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3\\n2 3\\n3 4\\n2 2\") == \"1\\n\"\nassert solution(\"3\\n3\\n4\\n5\\n2 3\\n5\\n5\\n6\\n2 4\\n4\\n4\\n5\\n4\\n4\\n4\\n4\") == \"2\\n\"\nassert solution(\"4\\n1 3\\n2 3\\n3 4\\n2 2\\n4 1\\n4 2\\n4 3\\n4 4\") == \"3\\n\"\nassert solution(\"3\\n3\\n4\\n5\\n2 3\\n5\\n5\\n6\\n2 4\\n4\\n4\\n5\\n4\\n4\\n4\\n4\") == \"1\\n\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\") == \"5\\n\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1,2,3\") == \"\"\nassert solution(\"1,2,3,4,5\") == \"\"\nassert solution(\"1,2,3,4,5,6\") == \"\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3''') == \"1\\n\"\nassert solution('''1\n1\n2\n3''') == \"2\\n\"\nassert solution('''1\n1\n1\n3''') == \"1\\n\"\nassert solution('''1\n1\n1\n2\n3''') == \"2\\n\"\nassert solution('''1\n1\n1\n1\n2''') == \"3\\n\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2\\n3') == 1\nassert solution('3\\n2\\n1') == 2\nassert solution('1\\n2\\n3\\n4\\n5') == 0\nassert solution('1\\n2\\n2\\n3\\n5') == 2\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 0\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([1,2,3],[1,1]) == 1\nassert solution([1,2],[1,2,3]) == 2\nassert solution([1,2,3],[1,1,3]) == 2\nassert solution([1,2,3,4],[1,2,1,2,2]) == 3\nassert solution([1,2,3,4],[1,2,1,2,3]) == 3\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\\n3\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n3\\n1\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n3\\n\") == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([\"10\", \"8\", \"8\", \"4\", \"7\", \"5\", \"6\", \"8\", \"3\"]) == \"6\"\nassert solution([\"5\", \"2\", \"4\", \"3\", \"2\", \"3\", \"2\"]) == \"6\"\nassert solution([\"5\", \"2\", \"4\", \"3\", \"2\", \"3\", \"2\", \"2\"]) == \"4\"\nassert solution
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == [\"1\"]\nassert solution(\"3\") == [\"1\", \"1 1\", \"1 1 1\"]\nassert solution(\"4\") == [\"1\", \"1 1\", \"1 1 1\", \"1 2 1\", \"1 1 2 1\", \"1 1 1 2 1\"]\nassert solution(\"10\") == [\"1\", \"1 1\", \"1 1 1\", \"1 2 1\", \"1 1 2 1\", \"1 1 1 2 1\", \"1 2 2 1\", \"1 1 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1\", \"1 1 1 1 2 1\", \"1 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1\", \"1 1 1 1 2 1\", \"1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1 2 1\", \"1 1 2 2 1 2 1\", \"1 1 1 1"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(0) == [1]\nassert solution(1) == [1,1]\nassert solution(2) == [1,2,1]\nassert solution(3) == [1,3,3,1]\nassert solution(4) == [1,4,6,4,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n1\") == \"1 3\\n3 1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1 3 4\\n3 6\\n6 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1 3 4 8\\n3 6 9 15\\n6 12 15 24\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"1 3 4 8 10\\n3 6 9 15 18\\n6 12 15 24 18\\n9 12 15 24 27\"\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == [1, 1, 1, 1, 1]\nassert solution(\"3\") == [1, 3, 3, 1]\nassert solution(\"11\") == [1, 4, 6, 4, 1]\nassert solution(\"19\") == [1, 5, 10, 10, 5, 1]"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n\n\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([]) == []\nassert solution([1, 2, 3]) == [1, 3, 3, 1]\nassert solution([1, 2, 3, 4]) == [1, 4, 6, 4, 1]\nassert solution([1, 2, 3, 4, 5]) == [1, 5, 10, 10, 5, 1]\nassert solution([1, 2, 3, 4, 5, 6]) == [1, 6, 15, 20, 15, 6, 1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"\"\nassert solution(\"1\") == [1]\nassert solution(\"2\") == [1, 1]\nassert solution(\"3\") == [1, 3, 3, 1]\nassert solution(\"4\") == [1, 4, 6, 4, 1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == [1,3,3,1]\nassert solution('''7''') == [1,7,21,42,52,72,82]\n'''    "
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('0') == []\nassert solution('2') == [[1],[1,1]]\nassert solution('3') == [[1],[1,1],[1,2,1]]\nassert solution('4') == [[1],[1,1],[1,2,1],[1,3,3,1]]\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1010101111110101011111111111100\") == 31\nassert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\nassert solution(\"1100000000000000000000000000000001\") == 1\n\n\"\"\"\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\nassert solution('11111111111111111111111111111111') == 0\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"00011\") == 1\nassert solution(\"1010\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\nassert solution(\"001111111111111111111111111111111\") == 31\nassert solution(\"00011111111111111111111111111110\") == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('1101111001110011001010100101111111') == 30\nassert solution('1000000000000010000011110101111111111') == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\nassert solution(\"00000000000000000000000000000000\") == 0\nassert solution(\"00000000000000000000000000000001\") == 1\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('1011') == 3\nassert solution('11111111111111111111111111111110') == 31\nassert solution('11111111111111111111111111111111111111111110') == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\n'''\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n  '00000000000000000000000000001011') == 3\nassert solution(\n  '00000000000000000000000010000000') == 1\nassert solution(\n  '111111111111111111111111111111101') == 31\nassert solution(\n  '00000000000000000000000010000000') == 1\nassert solution(\n  '00000000000000000000000000000001') == 1\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\nassert solution(\"00000000000000000000000000010000\") == 0\nassert solution(\"11111111111111111111111111111111\") == 31\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12') == '13'\nassert solution('123') == '124'\nassert solution('1234') == '12345'\nassert solution('123450') == '123451'\nassert solution('1234567890') == '1234567891'\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([9,9,9]) == [1,0,0,0]\nassert solution([1]) == [2]\nassert solution([9,9]) == [1,0,0]\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0123456789\") == \"01234567890\"\nassert solution(\"1\") == \"2\"\nassert solution(\"42\") == \"43\"\nassert solution(\"47894598\") == \"478945979\"\nassert solution(\"46\") == \"47\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([9,9,9,9,9]) == [1,0,0,0,0,0]\nassert solution([0]) == [1]\nassert solution([0,0]) == [1,0]\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"1 2 4\"\nassert solution(\"4 3 2 1\") == \"4 3 2 2\"\nassert solution(\"0\") == \"1\"\nassert solution(\"00\") == \"1\"\nassert solution(\"0 0\") == \"1\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('123') == '124'\nassert solution('1234') == '1235'\nassert solution('123445') == '12346'\nassert solution('12344567891') == '1234456'\nassert solution('1234456789123') == '1234456'\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1234\") == \"1235\"\nassert solution(\"9876\") == \"9977\"\nassert solution(\"999\") == \"1000\"\nassert solution(\"98899\") == \"98900\"\nassert solution(\"998899\") == \"998900\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([1,2,3,4]) == [1,2,4,5]\nassert solution([9,9,9,9]) == [1,0,0,0]\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1') == '4'\nassert solution('3 1') == '4'\nassert solution('3 1') == '4'\nassert solution('5 5') == '10'\nassert solution('3 4') == '7'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"3 10\") == \"30\"\nassert solution(\"3 1000\") == \"3003\"\nassert solution(\"3 -10\") == \"-8\"\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"2 4\") == \"6\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 0\") == \"0\"\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '4'\nassert solution('2 1') == '1'\nassert solution('4 1') == '8'\nassert solution('3 2') == '6'\nassert solution('10 -2') == '8'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == '3'\nassert solution('0 5') == '1'\nassert solution('-2 4') == '2'\nassert solution('3 4') == '2'\nassert solution('4 -4') == '1'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 5\n0 5''') == '3'\nassert solution('''0 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''5 4\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''6 5\n0 5\n-2 4\n3 4\n4 -4\n6 -5\n8 -7''') == '4'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('4 6\\n-4 -4\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '3'\nassert solution('6 4\\n-4 -4\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '4'\nassert solution('1 1\\n0 0') == '1'\nassert solution('1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '1'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n') == '3'\nassert solution('8 4\\n-1 2\\n1 0\\n-1 -2\\n2 1\\n-1 -1\\n1 2\\n2 -1\\n') == '2'\nassert solution('8 4\\n-1 2\\n1 0\\n-1 -2\\n2 1\\n-1 -1\\n1 2\\n2 -1\\n0 2\\n-2 -1\\n') == '0'\nassert solution('8 4\\n-1 2\\n1 0\\n-1 -2\\n2 1\\n-1 -1\\n1 2\\n2 -1\\n0 2\\n-2 -1\\n0 3\\n-3 -1\\n') == '2'\nassert solution('8 4\\n-1 2\\n1 0\\n-1 -2\\n2 1\\n-1 -1\\n1 2\\n2 -1\\n0 2\\n-2 -1\\n0 3\\n-3 -1\\n0 4\\n-4 -1\\n') == '1'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n-2 4\\n3 4') == '3'\nassert solution('4 4\\n-2 4\\n3 4\\n4 -4') == '3'\nprint(solution('3 1\\n0 0\\n1 1'))\n\n\"\"\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"2 10\") == \"\"\nassert solution(\"5 10\") == \"\"\nassert solution(\"1 2 3\") == \"\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == '3'\nassert solution('4 5') == '3'\nassert solution('4 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('1000000000000 10\\n-1000000000000 1000000000\\n1000000000000 1000000000\\n1000000000000 100000000000\\n1000000000000 1000000000\\n1000000000000 1000000000000') == '1'"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''6 2\n-3 -1\n-3 -5\n-3 -6\n-3 -9\n-3 -12\n-2 -2''') == '5'\nassert solution('''10 0\n-5 -3\n-3 -4\n-3 -5\n-3 -7\n-2 -1\n-1 -2\n-1 -4\n-1 -6\n-1 -8\n-1 -10''') == '10'\nassert solution('''10 0\n0 0\n-2 -2\n-4 -4\n-6 -6\n-8 -8\n-10 -10\n0 -10\n2 -8\n4 -6\n6 -4\n8 -2\n10 -0''') == '12'\nassert solution('''10 0\n0 0\n-1 -1\n0 -2\n1 -1\n0 -4\n0 -6\n0 -8\n0 -10\n2 -8\n4 -6\n6 -4\n8 -2\n10 -0''') == '10'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"1213\") == \"No\"\nassert solution(\"1315\") == \"Yes\"\nassert solution(\"3524\") == \"Yes\"\nassert solution(\"1132\") == \"No\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"999\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('101') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('12') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"123456789\") == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == \"Yes\"\nassert solution('2') == \"No\"\nassert solution('6') == \"Yes\"\nassert solution('12') == \"Yes\"\nassert solution('1234') == \"No\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('12') == 'Yes'\nassert solution('123') == 'Yes'\nassert solution('101') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('123456789012345678901234567890') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('123456789012345678901234567890') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(None) == None\n\nassert solution(\"5\") == \"Yes\"\n\nassert solution(\"12\") == \"Yes\"\n\nassert solution(\"101\") == \"No\"\n\nassert solution(\"1111\") == \"Yes\""
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('12345') == 'Yes'\nassert solution('123456') == 'No'\nassert solution('1234567') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"16\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"12\"\nassert solution(\"3 5 -1\") == \"12\"\nassert solution(\"3 5 -1 3 5 -1\") == \"12\"\nassert solution(\"3 5 -1 3 5 -1 3 5 -1\") == \"10\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"3 5 -1\") == \"12\"\n\"\"\"\n\n\"\"\"\n1\n5\n3 5 -1\n\"\"\""
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n3 5 -1''') == '12'\nassert solution('''3\n3 5 -1''') == '12'\nassert solution('''3\n3 1 3''') == '3'\nassert solution('''3\n5 -1 5 -1''') == '2'\nassert solution('''3\n5 1 4''') == '6'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('3\\n3\\n3') == '12'\nassert solution('5\\n5\\n5') == '10'\nassert solution('6\\n6\\n6') == '18'\nassert solution('10\\n10\\n10') == '30'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\"\nassert solution(\"5\\n3 5 -1\\n3 5 -1\\n3 5 -1\\n3 5 -1\\n3 5 -1\") == \"12\"\nassert solution(\"5\\n3 5 -1\\n3 5 -1\\n3 5 -1\\n3 5 -1\") == \"12\"\nassert solution(\"5\\n3 5 -1\\n3 5 -1\\n3 5 -1\\n3 5 -1\") == \"12\"\nassert solution(\"5\\n3 5 -1\\n3 5 -1\\n3 5 -1\\n3 5 -1\") == \"12\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"12\"\nassert solution(\"5\\n3 5 -1\\n\") == \"12\"\nassert solution(\"1\\n1 1\\n\") == \"0\"\nassert solution(\"3\\n1 2 3\\n\") == \"0\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('a') == 'consonant'\nassert solution('b') == 'consonant'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"vowel\"\nassert solution(\"d\") == \"consonant\"\nassert solution(\"e\") == \"vowel\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('WWWWWB') == '3'\nassert solution('WWWWWW') == '0'\nassert solution('WWBWWW') == '2'\nassert solution('WWWWBWBWWWW') == '4'\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"WWWW\") == \"1\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"BBBWW\") == 1\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"WWWWBWWWWWW\") == \"7\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('BBBWW') == '1'\nassert solution('WWWW') == '2'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"BBBWW\") == 1\nassert solution(\"BBBBWWW\") == 2\nassert solution(\"BBBBWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWW\") == 3\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == 1\nassert solution(\"BWWBB\") == 2\nassert solution(\"WWBBB\") == 1\nassert solution(\"BWWWW\") == 0\nassert solution(\"WWWWW\") == 0\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(EX_SMALL) == '1'\nassert solution(EX_BIG) == '4'\n\nprint(solution(stdin))"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 21\"\n) == \"Yes\"\n\nassert solution(\n    \"4 19\"\n) == \"Yes\"\n\nassert solution(\n    \"8 0\"\n) == \"No\"\n\nassert solution(\n    \"1 1\"\n) == \"Yes\"\n\nassert solution(\n    \"15 3\"\n) == \"No\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 22') == 'No'\nassert solution('1 23') == 'Yes'\nassert solution('1 24') == 'No'\nassert solution('1 25') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input().split()) == output\n\n\"\"\"\n\na, b = [int(x) for x in input().split()]"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"-2 1\") == \"No\"\n\"\"\""
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\nassert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\nassert solution('1 21') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 4\") == \"Yes\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"No\"\nassert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 5') == 'No'\nassert solution('1 21') == 'Yes'\nassert solution('2 5') == 'No'\nassert solution('1 25') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 4 1 5 9 2') == '4'\nassert solution('3\\n1 2 3 4 5 6 7') == '7'\nassert solution('5\\n1 2 3 4 5 6 7') == '8'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '5'\nassert solution('9\\n1 2 3 4 5 6 7 8 9') == '6'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\n552\\n553\\n554\\n555\\n556\\n557\\n558\\"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2''') == '4'\nassert solution('''7\n3 1 4 1 5 9 2''') == '4'\nassert solution('''7\n0 0 0 0 0 0 0 0''') == '0'\nassert solution('''7\n0 0 0 0 0 0 0 0''') == '0'\nassert solution('''7\n3 1 4 1 5 9 2''') == '4'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2''') == '4'\nassert solution('''0''') == '0'\nassert solution('''7\n-5 -3 -3 -2 -1 -3 -6 -6 -3 -2 -1''') == '8'\nassert solution('''5\n-3 -2 -1 -1 -1''') == '3'\nassert solution('''10\n10 -5 -2 -4 -1 -3 -6 -2 -3 -1 -4''') == '5'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 92 93 94 95 96 97 98 99') == '4'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1 1 1 1 1 1') == '1'\nassert solution('2 2 2 2 2 2 2 2') == '1'\nassert solution('4 4 4 4 4 4 4 4') == '1'\nassert solution('3 3 3 3 3 3 3') == '2'\nassert solution('6 6 6 6 6 6 6') == '2'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 4 1 5 9 2') == '4'\nassert solution('7 3 1 4 1 5 9 2') == '4'\nassert solution('1 1 2 2 4 4 2 4 2 2') == '2'\nassert solution('7 3 1 4 1 5 9 2') == '4'\nassert solution('1 2 2 1 2 2 1') == '2'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('3\\n3') == '3'\nassert solution('10\\n9') == '8'\n\"\"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\"\nassert solution(\"3\\n6\\n\") == \"9\"\nassert solution(\"4\\n8\\n\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n4') == '5'\nassert solution('4\\n5') == '10'\nassert solution('6\\n6') == '11'\nassert solution('8\\n9') == '19'\nassert solution('6\\n7') == '20'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n4''') == '5'\nassert solution('''2\n3''') == '0'\nassert solution('''1\n1''') == '1'\nassert solution('''7\n3''') == '3'\nassert solution('''2\n0''') == '0'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4''') == '5'\nassert solution('''1\n1''') == '0'\nassert solution('''7\n8''') == '10'\nassert solution('''10000\n1''') == '9'\nassert solution('''5\n3''') == '2'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n4\\n') == '5'\nassert solution('2\\n1\\n') == '1'\nassert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '1'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('3\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n4') == '2'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4\n''') == '5'\nassert solution('''9\n18\n''') == '41'\nassert solution('''9\n3\n''') == '0'\nassert solution('''10\n20\n''') == '60'\nassert solution('''10\n10\n''') == '0'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 1 1') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('1 2 3') == 'YES'\nassert solution('1 2 4') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 6') == \"YES\"\nassert solution('2 4 3') == \"NO\"\nassert solution('2 4 3') == \"NO\"\nassert solution('2 2 2') == \"NO\"\nassert solution('2 2 1') == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"8 5 10\") == \"NO\"\nassert solution(\"15 50 30\") == \"YES\"\nassert solution(\"15 50 17\") == \"YES\"\nassert solution(\"7 10 3\") == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '2 4 6'\n) == 'YES'\n'''\n\nfrom sys import stdin, stdout\n\na, b, c = [int(n) for n in stdin.readline().strip().split()]"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 1 1') == 'NO'\nassert solution('5 10 5') == 'NO'\nassert solution('2 3 4') == 'NO'\nassert solution('5 3 4') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 5 6') == 'NO'\nassert solution('1 4 6') == 'YES'\nassert solution('2 6 4') == 'NO'\nassert solution('2 3 4') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('4 3 1') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('9 9 9') == 'YES'\nassert solution('123456789123456789') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 2') == 'NO'\nassert solution('4 3 4') == 'YES'\nassert solution('3 3 3') == 'NO'\nassert solution('3 4 2') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"5 2 3\") == \"NO\"\nassert solution(\"2 4 3\") == \"YES\"\nassert solution(\"5 1 3\") == \"NO\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"29\") == \"Yes\"\n\nassert solution(\"28\") == \"No\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('29') == 'Yes'\nassert solution('9') == 'Yes'\nassert solution('28') == 'No'\nassert solution('0') == 'No'\nassert solution('9') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('29') == 'Yes'\nassert solution('99') == 'No'\nassert solution('-10') == 'No'\nassert solution('123456789') == 'No'\nassert solution('-10') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"No\"\nassert solution(input(\"7\")) == \"No\"\nassert solution(input(\"9\")) == \"Yes\"\nassert solution(input(\"29\")) == \"Yes\"\nassert solution(input(\"27\")) == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(293) == 'Yes'\nassert solution(29) == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('293') == 'Yes'\nassert solution('29.0') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('29') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(29) == 'Yes'\nassert solution(10) == 'No'\nassert solution(13) == 'Yes'\nassert solution(26) == 'No'\nassert solution(39) == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"29\"\"\") == \"Yes\"\nassert solution(\"\"\"29\"\"\") == \"Yes\"\nassert solution(\n\"\"\"99\"\"\") == \"No\"\nassert solution(\"\"\"10\"\"\") == \"Yes\"\nassert solution(\"\"\"11\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('29') == 'Yes'\nassert solution('30') == 'No'\nassert solution('0') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('100') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"9\") == \"Yes\"\nassert solution(\"30\") == \"No\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"0\") == \"No\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 3\\n1 2 4\\n') == '1'\nassert solution('10 5 3\\n1 2 4\\n5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\\n17 18 19\\n20 21 22\\n23 24 25\\n26 27 28\\n29 30 31\\n32 33 34') == '4'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3 3\\n1 2 4\\n') == 1\nassert solution('5 1 1\\n1\\n') == 0\nassert solution('4 10 3\\n1 2 4\\n') == 1\nassert solution('7 7 6\\n1 2 4\\n1 2 3\\n') == 1\nassert solution('2 2 1\\n1\\n') == 0\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3 3\n1 2 4''') == '1'\nassert solution('''5 2 4\n1 2''') == '1'\nassert solution('''10 2 2\n1 2 2 4 5 6 7 8 9 10''') == '0'\nassert solution('''10 3 2\n1 2 2 4 5 6 7 8 9 10''') == '2'\nassert solution('''5 5 5\n1 2 2 3 4 4''') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"5 3 4\") == \"1\"\nassert solution(\"5 3 2\") == \"2\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 1 2\") == \"2\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 3') == '1'\nassert solution('4 1 5') == '1'\nassert solution('5 1 5') == '1'\nassert solution('3 2 1') == '1'\nassert solution('5 3 5') == '0'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == ''\n\n'''\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1'\nassert solution('4 6 4\\n1 2 4') == '2'\nassert solution('3 3 3\\n1 2 4') == '2'\nassert solution('6 3 3\\n1 2 4') == '5'\nassert solution('5 3 3\\n1 2 4') == '2'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3 3\\n1 2 4\\n') == '1'\nassert solution('5 3 3\\n2 1 4\\n') == '2'\nassert solution('5 3 3\\n2 1 2\\n') == '2'\nassert solution('5 3 3\\n1 2 4\\n1 2 3\\n') == '3'\nassert solution('5 3 3\\n1 2 4\\n1 2 3\\n1 2 4\\n') == '3'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 2') == '1'\nassert solution('3 1 2') == '3'\nassert solution('3 2 2') == '4'\nassert solution('5 1 3') == '4'\nassert solution('5 2 3') == '5'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n.#.\\n###\\n.#.\\n') == 'Yes'\nassert solution('1 1\\n#') == 'Yes'\nassert solution('4 4\\n..#\\n.#.\\n.#.\\n#..') == 'Yes'\nassert solution('3 3\\n#.\\n#.\\n#.\\n') == 'No'\nassert solution('2 2\\n..#\\n..#\\n') == 'Yes'\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''3 4\n.#.\n##.\n.#.\n''') == 'No'\nassert solution('''3 3\n.##\n##.\n##.\n''') == 'Yes'\nassert solution('''3 2\n..#\n##.\n##.\n''') == 'No'\nassert solution('''3 5\n.##.\n##..\n##..\n''') == 'Yes'\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n.#\n###\n.#''') == 'Yes'\nassert solution('''3 3\n..\n..\n.#''') == 'Yes'\nassert solution('''5 5\n..###\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(SAMPLE_INPUT_0) == SAMPLE_OUTPUT_0\nassert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\nassert solution(SAMPLE_INPUT_3) == SAMPLE_OUTPUT_3\nassert solution(SAMPLE_INPUT_4) == SAMPLE_OUTPUT_4\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 1\\n.#\\n.#\\n.\") == \"Yes\"\nassert solution(\"3 3\\n.#\\n.#\\n.#\") == \"No\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n.#\\n###\\n.#\\n\") == \"Yes\"\nassert solution(\"3 3\\n.#\\n###\\n.#\\n\") == \"No\"\nassert solution(\"3 4\\n.##.\\n.#.#\\n.#.#\\n#.##.\\n.#.##\\n.#.#.\\n.##.#\") == \"No\"\nassert solution(\"3 4\\n.##.\\n.#.#\\n.#.#\\n#.##.\\n.#.##\\n.#.#.\\n.##.#\") == \"Yes\"\nassert solution(\"1 1\\n#\") == \"No\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('H 3\\n#\\n##\\n#\\n') == 'Yes'\nassert solution('H 3\\n#\\n#\\n#\\n') == 'No'\nassert solution('H 3\\n#\\n###\\n#\\n') == 'Yes'\nassert solution('H 3\\n#\\n###\\n###\\n') == 'No'\nassert solution('H 4\\n##\\n#.#\\n##.\\n#.#\\n##\\n#.#\\n##\\n') == 'Yes'\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 40 30\") == \"No\"\nassert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 40 30\") == \"No\"\nassert solution(\"10 40 30\") == \"Yes\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('10 30 20') == 'Yes'\nassert solution('1 0 0') == 'No'\nassert solution('10 0 0') == 'No'\nassert solution('100 100 100') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\na, b, c = map(int, stdin.split())\nprint(\"Yes\" if a + b + c == 30 else \"No\")\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('30 10 20') == 'Yes'\nassert solution('30 20 10') == 'No'\nassert solution('10 20 30') == 'No'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 20 30') == 'No'\nassert solution('50 60 80') == 'Yes'\nassert solution('50 60 50') == 'No'\nassert solution('50 60 60') == 'No'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a b c\") == \"Yes\"\nassert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"30 30 30\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('30 20 10') == 'Yes'\nassert solution('30 20 10') == 'Yes'\nassert solution('20 10 30') == 'Yes'\nassert solution('20 10 30') == 'Yes'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 8 7 1''') == 'Left'\nassert solution('''3 8 7 2''') == 'Right'\nassert solution('''3 8 7 1''') == 'Balanced'\nassert solution('''3 10 7 1''') == 'Right'\nassert solution('''5 11 13 14''') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8 7 1') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[:1]\nprint(solution(stdin))\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 7 1 8') == 'Right'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 7 1 8') == 'Right'\nassert solution('3 8 7 1') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 3 2 7') == 'Left'\nassert solution('1 3 2 7') == 'Left'\nassert solution('1 3 2 7') == 'Left'\nassert solution('1 3 2 7') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Left\"\nassert solution(\"2 1 3 4\") == \"Right\"\nassert solution(\"3 2 3 4\") == \"Left\"\nassert solution(\"3 3 3 4\") == \"Balanced\"\nassert solution(\"4 3 3 4\") == \"Balanced\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 4 4 3\") == \"Right\"\nassert solution(\"3 7 3 1\") == \"Left\"\nassert solution(\"3 4 4 4\") == \"Right\"\nassert solution(\"3 3 3 3\") == \"Balanced\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 2 1 2\") == \"Left\"\nassert solution(\"1 2 3 1\") == \"Right\"\nassert solution(\"1 2 1 2\") == \"Right\"\nassert solution(\"1 3 1 2\") == \"Right\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"4 3 5 4\") == \"Balanced\"\nassert solution(\"3 9 9 3\") == \"Right\"\nassert solution(\"1 1 1 1\") == \"Balanced\"\nassert solution(\"8 10 8 7\") == \"Left\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '7'\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '7'\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '7'\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '7'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\nassert solution('2\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '7'\nassert solution('3\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '9'\nassert solution('4\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '10'\nassert solution('5\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '10'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1''') == \"8\"\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2''') == \"8\"\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == \"8\"\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n3 4 5 6 7 8 9 -2 -3 4 -2\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"1 1 0 1 0 0 0 1 0 1\") == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('2\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n5 4 4 5 5 5 5 5 5 4') == '5'\nassert solution('3\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n5 4 4 5 5 5 5 5 5 4\\n6 6 6 6 6 6 6 6 6 6') == '6'\nassert solution('4\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n5 4 4 5 5 5 5 5 5 5 4\\n6 6 6 6 6 6 6 6 6 6\\n7 7 7 7 7 7 7 7 7 7 7') == '8'\nassert solution('5\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n5 4 4 5 5 5 5 5 5 5 4\\n6 6 6 6 6 6 6 6 6 6\\n7 7 7 7 7 7 7 7 7 7 7 7') == '6'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''2\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''3\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''4\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''5\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2'''\n) == '8'\n\nassert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n'''\n) == '8'\n\nassert solution(\n'''2\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n'''\n) == '8'\n\nassert solution(\n'''3\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n'''\n) == '8'\n\nassert solution(\n'''4\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n'''\n) == '8'"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('0') == 'No'\nassert solution('-') == 'No'\nassert solution('2-') == 'No'\nassert solution('2-3') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 2') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n269-6650''') == 'Yes'\nassert solution('''3 2\n269-6650''') == 'No'\nassert solution('''0 0\n737-3257''') == 'Yes'\nassert solution('''0 0\n737-a737''') == 'No'\nassert solution('''0 0\n999-999''') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"269-6650\") == \"Yes\"\nassert solution(\"271-4211\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n269-6650') == 'Yes'\nassert solution('3 4\\n269-6650') == 'No'\nassert solution('2 3\\n123') == 'No'\nassert solution('2 3\\n123') == 'Yes'\nassert solution('2 3\\n1 2') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('9 7') == 'Yes'\nassert solution('9 7') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('0 3') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 4 5') == 'Yes'\nassert solution('1 2 3 4 5') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"269-6650\")\nassert solution(\"-2-0\")\nassert solution(\"-11-22\")\nassert solution(\"-1-7-8-9\")\nassert solution(\"-1-7-8-\")\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('269-6650') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('-1 2') == 'No'\nassert solution('1-2') == 'No'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n'''"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('2 3 2') == '2'\nassert solution('2 3 6') == '1'\nassert solution('1 4 5') == '1'\nassert solution('1 1 1') == '0'\n\"\"\"\nfrom math import ceil, log10\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 4 6') == '2'\nassert solution('3 4 5') == '3'\nassert solution('100 6 1') == '100'\nassert solution('100 6 100') == '0'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 5\") == \"4\"\nassert solution(\"2 5 4\") == \"1\"\nassert solution(\"6 6 2\") == \"2\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 4 6') == '1'\nassert solution('5 2 3') == '1'\nassert solution('2 1 4') == '0'\nassert solution('4 5 5') == '0'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\na, b, W = map(int, stdin.split())\nprint(min(abs(b-a), W - abs(b-a)))\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 3 3') == '2'\nassert solution('1 1 1') == '0'\nassert solution('2 1 1') == '2'\nassert solution('1 1 2') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 6') == '1'\n'''\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 6\") == \"1\"\nassert solution(\"2 3 6\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"2 3 4\") == \"1\"\nassert solution(\"2 2 2\") == \"0\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 2') == \"3\\n4\\n7\\n8\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('2 1 2') == '2\\n3'\nassert solution('4 3 2') == '2\\n3\\n4'\nassert solution('2 3 1') == '2\\n3'\nassert solution('3 4 3') == '3\\n4'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('3 9 3') == '3\\n4\\n7\\n8\\n9'\nassert solution('8 7 4') == '8\\n7\\n4'\nassert solution('10 15 3') == '10\\n11\\n3'\nassert solution('1 100 9') == ''\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('3 7 2') == '3\\n4\\n7'\nassert solution('3 7 4') == '3\\n4\\n7\\n8'\nassert solution('3 7 4 2') == '3\\n4\\n7\\n8'\nassert solution('3 1 5') == '3\\n4\\n5'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"4 9 2\") == \"3\\n4\\n7\\n8\\n9\"\nassert solution(\"6 9 2\") == \"3\\n4\\n7\\n8\\n9\\n10\"\nassert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"3 4 1\") == \"3\\n4\\n\"\nassert solution(\"4 10 3\") == \"4\\n\"\nassert solution(\"3 5 1\") == \"\"\n\"\"\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('1 3 4 5') == '1\\n3\\n4\\n5'\nassert solution('10 1000 100') == '1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('1000 10') == '1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('100 100 100') == '1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 8 2''') == '3\\n4\\n7\\n8'\nassert solution('''1 2 3''') == '1\\n2\\n3'\nassert solution('''0 1 3''') == '0\\n1\\n3'\nassert solution('''0 0 0''') == '0'\nassert solution('''3 5 4''') == '3\\n4'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n4\\n7\\n8\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()\nassert solution(stdin) == ['3', '4', '7', '8']\nprint(solution(stdin))\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"beginner\") == \"be\"\nassert solution(\"beginnerC\") == \"beC\"\nassert solution(\"BEGINNER\") == \"B.N.\"\nassert solution(\"HINT\") == \"H.T.\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:2]\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input().strip()) == \"ABC\"\nassert solution(input().strip()) == \"ABC\"\nassert solution(input().strip()) == \"ABC\"\nassert solution(input().strip()) == \"ABC\"\nassert solution(input().strip()) == \"ABC\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"ABC\"\n'''\n'''\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == 'ABC'\n\"\"\"\n\n_TEST_INPUT = \"\"\"\n    A1BC\n\"\"\""
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n\"\"\""
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''AtCoder Beginner Contest''') == 'ABC'\nassert solution('''AtCoder s Contest''') == 'ABC'\nassert solution('''AtCoder Beginner Contest''') == 'ABC'\nassert solution('''AtCoder Beginner s Contest''') == 'ABC'\nassert solution('''AtCoder Beginner Contest''') == 'ABC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"ABC\"\n\"\"\""
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('foo') == ''\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('ABC') == 'ABC'\nassert solution('AoC') == 'AoC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[0] + 'C' + stdin[1:].lower()\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 5 1') == 'NO'\nassert solution('3 5 3') == 'YES'\nassert solution('3 5 2') == 'NO'\nassert solution('3 5 4') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 4 1') == 'YES'\nassert solution('3 5 2') == 'NO'\nassert solution('3 5 4') == 'NO'\nassert solution('1 1 1') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"NO\"\nassert solution(\"2 1 3\") == \"YES\"\nassert solution(\"1 2 2\") == \"YES\"\nassert solution(\"3 5 4\") == \"YES\"\nassert solution(\"3 4 3\") == \"NO\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('1 10 2') == 'NO'\nassert solution('2 6 2') == 'YES'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 5') == 'YES'\nassert solution('3 2 5') == 'NO'\nassert solution('5 2 5') == 'YES'\nassert solution('5 1 5') == 'YES'\nassert solution('5 2 1') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('a b c') is None\nassert solution('0 0 0') == 'YES'\nassert solution('1 1 1') == 'YES'\nassert solution('2 3 2') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5 4') == \"YES\"\nassert solution('3 5 4') == \"NO\"\nassert solution('6 11 30') == \"YES\"\nassert solution('6 11 30') == \"NO\"\nassert solution('7 1 4') == \"YES\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5 4\\n') == 'YES'\nassert solution('2 5 5\\n') == 'NO'\nassert solution('5 5 5\\n') == 'YES'\nassert solution('3 2 7\\n') == 'YES'\nassert solution('1 1 1\\n') == 'YES'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('10 17') == '83'\nassert solution('1 2') == '4'\nassert solution('1 1') == '1'\nassert solution('1 2 3') == '7'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(100 17) == 83\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''100 17''') == '83'\nassert solution('''2 3''') == '2'\nassert solution('''3 3''') == '0'\nassert solution('''2 3''') == '0'\nassert solution('''5 100''') == '5'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 17') == '83'\nassert solution('100 17') == '83'\nassert solution('100 18') == '84'\nassert solution('100 18.1') == '84'\nassert solution('1 100') == '0'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100 17') == \"83\"\nassert solution('100 17') == \"83\"\nassert solution('5 17') == \"1\"\nassert solution('0 17') == \"0\"\nassert solution('20 17') == \"4\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(100,17) == 83\nprint(solution(100,17))\nassert solution(100000,17) == 137507\nprint(solution(100000,17))\nassert solution(100000,100) == 100000\nprint(solution(100000,100))\nassert solution(100000,1000000) == 100000\nprint(solution(100000,1000000))\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 17') == '83'"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\n'''"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1000000000\\n'\n                '2 1000000000\\n'\n                '3 1000000000\\n'\n                '4 1000000000\\n'\n                '5 1000000000') == '1000000000000000000'\n\"\"\"\n\n\"\"\"\nSolution Details:\n\nSince we don't know how many times we have to repeat, we need to be careful about the logic in the function, \nbecause the value can be huge, and we may need to print -1. We can't use 2^n because the value exceeds the\nlargest possible value in the integer type, which is 2^31-1, or 2147483647. \n\nWe can use the logarithm to calculate the number of times to repeat the function until it exceeds the value\nof 2^31-1, which is 10^18. We can also use the fact that the logarithm of 2 is 2.\n\nThe complexity is O(logN), where N is the number of integers.\n\"\"\""
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"1000000000 1000000000\") == -1\nassert solution(\"1000000000 1000000000\") == -1\nassert solution(\"1000000000 1000000000\") == -1\nassert solution(\"1000000000 1000000000\") == -1\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1000000000\") == \"1000000000000000000\"\nassert solution(\"2 1000000000\") == \"-1\"\nassert solution(\"3 1000000000\") == \"-1\"\nassert solution(\"4 1000000000\") == \"-1\"\nassert solution(\"5 1000000000\") == \"-1\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('-1000000000 1000000000') == '-1'\nassert solution('-1000000000 1000000000') == '-1'\n\n\"\"\""
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2\n1000000000 1000000000\n'''\n) == '1000000000000000000'\n\nassert solution(\n'''\n3\n10000000 1000000000 1000000000\n'''\n) == '-1'\n\nassert solution(\n'''\n4\n10000000 1000000000 1000000000 1000000000\n'''\n) == '-1'\n\nassert solution(\n'''\n5\n10000000 1000000000 1000000000 1000000000 1000000000\n'''\n) == '-1'\n\nassert solution(\n'''\n6\n10000000 1000000000 1000000000 1000000000 1000000000 1000000000\n'''\n) == '-1'"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"1000000000000000000\""
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == str(1000000000000000000)\nassert solution(input()) == str(-1)\nassert solution(input()) == str(10000000000000000000000000)\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\\nInput: \")) == input(\"Output: \")\n\n\"\"\""
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2018\\n218') == \"Yes\"\nassert solution('2018\\n2148') == \"No\"\nassert solution('1\\n0') == \"Yes\"\nassert solution('4\\n10') == \"No\"\nassert solution('3\\n10') == \"No\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nassert solution(\"13\\n11\") == \"No\"\nassert solution(\"64\\n12\") == \"Yes\"\nassert solution(\"1000\\n56\") == \"No\"\nassert solution(\"4899\\n99999\") == \"Yes\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"\nassert solution(\"2010\\n100\\n\") == \"No\\n\"\nassert solution(\"14\\n28\\n\") == \"Yes\\n\"\nassert solution(\"14\\n28\\n\") == \"Yes\\n\"\nassert solution(\"0\\n0\\n\") == \"Yes\\n\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == 'Yes'\nassert solution('100') == 'No'\nassert solution('1000') == 'Yes'\nassert solution('10000') == 'Yes'\nassert solution('100001') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1') == 'No'\nassert solution('222') == 'Yes'\nassert solution('333') == 'No'\nassert solution('999') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nassert solution(\"16\\n10\") == \"No\"\nassert solution(\"100\\n5\") == \"Yes\"\nassert solution(\"123\\n123\") == \"No\"\nassert solution(\"123\\n456\") == \"No\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('2018\\n13') == 'No'\nassert solution('2018\\n1') == 'No'\nassert solution('2018\\n0') == 'Yes'\nassert solution('2018\\n0\\n0') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nassert solution(\"2018\\n218\") == \"Yes\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('4 2 4') == 'dangerous'\nassert solution('6 1 1') == 'dangerous'\nassert solution('6 3 1') =='safe'\nassert solution('8 4 5') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"4 3 6\") == \"safe\"\nassert solution(\"5 3 6\") == \"dangerous\"\nassert solution(\"5 3 6\") == \"dangerous\"\nassert solution(\"5 3 6\") == \"dangerous\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('3 2 5') == 'dangerous'\nassert solution('2 1 5') == 'dangerous'\nassert solution('1 2 5') == 'dangerous'\nassert solution('1 2 5') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 5 8\") == \"dangerous\"\nassert solution(\"3 4 5\") == \"safe\"\nassert solution(\"1 6 9\") == \"dangerous\"\nassert solution(\"1 2 3\") == \"safe\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('X A B') =='safe'\nassert solution('4 3 6') =='safe'\nassert solution('4 3 6') == 'dangerous'\nassert solution('7 2 5') == 'dangerous'\nassert solution('1 10 1') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('2 3 1') == 'dangerous'\nassert solution('3 3 1') == 'dangerous'\nassert solution('4 1 6') == 'dangerous'\nassert solution('4 2 6') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"3 1 3\") == \"dangerous\"\nassert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 0 2\") == \"dangerous\"\nassert solution(\"0 0 2\") == \"safe\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3 6') =='safe'\n\"\"\""
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0 0 0') =='safe'\nassert solution('1 1 1') == 'dangerous'\nassert solution('2 3 1') == 'dangerous'\nassert solution('5 3 6') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 6') =='safe'\nassert solution('1 3 5') =='safe'\nassert solution('1 3 2') == 'dangerous'\nassert solution('4 3 6') == 'dangerous'\nassert solution('4 3 3') == 'dangerous'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '9'\nassert solution('''1''') == '1'\nassert solution('''2''') == '4'\nassert solution('''10''') == '9'\nassert solution('''13''') == '12'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10''') == '9'\nassert solution(''''9''') == '9'\nassert solution(''''10''') == '9'\nassert solution(''''111''') == '1'\nassert solution(''''10000''') == '9'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"30\") == \"9\"\nassert solution(\"40\") == \"4\"\nassert solution(\"45\") == \"4\"\nassert solution(\"500\") == \"99\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10') == '9'\nassert solution('12') == '12'\nassert solution('1234') == '1234'\nassert solution('13') == '12'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"10\") == \"9\"\nassert solution(\"13\") == \"25\"\nassert solution(\"40\") == \"36\"\nassert solution(\"100\") == \"81\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"10\") == \"9\"\n\nprint(\"All test cases passed successfully.\")"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"10\"\n) == \"9\"\nassert solution(\n\"9\"\n) == \"9\"\nassert solution(\n\"4\"\n) == \"1\"\nassert solution(\n\"5\"\n) == \"5\"\nassert solution(\n\"6\"\n) == \"6\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10''') == 9\nassert solution('''1000000000''') == 9\nassert solution('''3''') == 1\nassert solution('''32767''') == 32765\nassert solution('''32768''') == 32766\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 3\n2 3''') == '6'\nassert solution('''2\n1 1\n1 1''') == '1'\nassert solution('''2\n1 1\n2 1''') == '2'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''5\n2 3\n1 1\n3 2\n3 4\n5 4\n''') == '19'\nassert solution('''7\n2 4\n1 1\n3 4\n3 5\n5 4\n7 4\n7 5\n''') == '24'\nassert solution('''10\n2 4\n1 1\n3 4\n3 5\n5 4\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n''') == '104'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"10\"\nassert solution(\"3 2\") == \"11\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()[0]\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == 10\nassert solution('1 1') == 10\nassert solution('3 2') == 10\nassert solution('1 3') == 10\nassert solution('2 3') == 10\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"10\"\nassert solution(\"2 3\") == \"10\"\nassert solution(\"3 3\") == \"10\"\nassert solution(\"1 1\") == \"4\"\nassert solution(\"3 2\") == \"8\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''3\n1 1\n2 2\n3 3''') == '3'\nassert solution('''4\n1 1\n2 2\n3 3\n4 4''') == '8'\nassert solution('''5\n1 1\n2 2\n3 3\n4 4\n5 5''') == '16'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '10'\n\n'''\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == \"10\"\nassert solution('''3\n1 2\n2 1\n1 2\n3 1\n2 1\n1 2\n2 3\n1 2\n2 3''') == \"7\"\nassert solution('''5\n5 3\n5 2\n5 1\n5 5\n5 4\n5 4\n1 5\n5 5\n1 5\n5 5\n5 5\n5 5\n1 5\n5 5\n5 5\n1 5\n5 5\n1 5\n5 5\n1 5\n1 5\n5 5\n5 5\n1 5\n5 5\n1 5\n5 5\n1 5\n1 5\n5 5\n5 5\n1 5\n5 5\n1 5\n1 5\n5 5\n1 5\n1 5\n5 5\n5 5\n1 5\n1 5\n5 5\n1 5\n1 5\n5 5\n1 5\n1 5\n5 5\n1 5\n5 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n5 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5\n1 5"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n2 3\n1 1\n3 2\n\"\"\") == \"10\"\n\nassert solution(\"\"\"10\n2 3\n1 1\n3 2\n\"\"\") == \"10\"\n\nassert solution(\"\"\"3\n1 2\n2 3\n3 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"10\n1 2\n2 3\n3 1\n\"\"\") == \"5\"\n\nassert solution(\"\"\"10\n2 2\n2 3\n3 1\n\"\"\") == \"3\""
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"accccccccccccc\") == \"no\"\nassert solution(\"aaabbbccccddd\") == \"yes\"\nassert solution(\"cccccccccccccccccccc\") == \"no\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('c') == 'no'\nassert solution('abc') == 'no'\nassert solution('abcdef') == 'no'\nassert solution('abcdefghijkl') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('abcd') == 'no'\nassert solution('aabc') == 'no'\nassert solution('abc') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('aaa') == 'no'\nassert solution('abcdefg') == 'no'\nassert solution('abcdefgh') == 'no'\nassert solution('abcdefghi') == 'yes'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('aabbccddeeffgghh') == 'no'\nassert solution('aaaaa') == 'no'\nassert solution('abcccccaaa') == 'no'\nassert solution('abcde') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\"\n\n\"\"\"\n\nimport sys\nsys.path.insert(0, '..')\nfrom util import timedcall, test_input\nfrom util import inspect"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == 'yes'\nassert solution(\"abc\") == 'no'\nassert solution(\"bc\") == 'no'\nassert solution(\"z\") == 'yes'\nassert solution(\"zbc\") == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'yes'"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"copyrightable\") == \"no\"\nassert solution(\"unTcopyrightable\") == \"no\"\nassert solution(\"Tcopyrightable\") == \"no\"\n\nprint(\"Test cases passed.\")"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('uncopyrightable') == 'yes'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"WEEWW\") == \"1\"\nassert solution(\"WEEWE\") == \"0\"\nassert solution(\"WE\") == \"0\"\nassert solution(\"WEEWEE\") == \"3\"\nassert solution(\"WEEE\") == \"1\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEWE') == '0'\nassert solution('EEWWE') == '1'\nassert solution('EEWEW') == '0'\nassert solution('EEWWWE') == '2'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"WEEWW\") == \"1\"\nassert solution(\"EEWEEW\") == \"1\"\nassert solution(\"EEWEEWEEW\") == \"0\"\nassert solution(\"WEEWEWEEEWEE\") == \"0\"\nassert solution(\"EWEEEWWEEWEEWEEEWWE\") == \"0\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"WEEWW\") == \"1\"\nassert solution(\"EWEWW\") == \"1\"\nassert solution(\"WWEEWW\") == \"2\"\nassert solution(\"WWEEWWW\") == \"2\"\nassert solution(\"WWEEWWE\") == \"2\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('5\\nWEEWEE') == '0'\nassert solution('5\\nWEEWWW') == '1'\nassert solution('5\\nWEEWEW') == '2'\nassert solution('10\\nWWWWWWWWWWWWWWWWWWW') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WEENEWENEWWEWEENEW') == '0'\nassert solution('EWEWEEWW') == '0'\nassert solution('W') == '0'\nassert solution('WEEWE') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEW') == '0'\nassert solution('EEW') == '0'\nassert solution('WEEWWE') == '0'\nassert solution('WEEW') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WWWEEWWEEWWW') == '1'\nassert solution('EEWWEEWWEEWWEEWEWW') == '1'\nassert solution('WEEWEEWWEEWW') == '2'\nassert solution('WEEWEWWEEWWEEWWEEWWEEWWEEWW') == '3'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEWEW') == '0'\nassert solution('EEWEWE') == '1'\nassert solution('EEEWEWE') == '2'\nassert solution('EEEWEWEWEEWW') == '3'\n\n\"\"\"\n\nN = int(input())\nS = input()\n\nresult = 0\nfor i in range(1,N):\n    if S[i-1]!= S[i]:\n        result += 1\n\nprint(result)\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"WEEWW\") == \"1\"\nassert solution(\"EEWEE\") == \"0\"\nassert solution(\"EEWEEWEE\") == \"4\"\nassert solution(\"WEEEEEW\") == \"1\"\nassert solution(\"WEEEEEWEE\") == \"3\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1 2') == None\nassert solution('2 3') == None\nassert solution('1 4') == None\nassert solution('1 2 3 4') == None\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('4 3\\n1 2\\n2 3\\n1 4\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nprint(solution(stdin))\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '2'\nassert solution('1 4') == '1'\nassert solution('2 3') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1\\n'\nassert solution('2 2') == '2\\n2\\n'\nassert solution('2 3') == '2\\n2\\n'\nassert solution('3 4') == '2\\n2\\n2\\n'\n\n'''\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n1 4''') == '2\\n2\\n1\\n1'\nassert solution('''2 2\n1 1\n''') == '1\\n0'\nassert solution('''2 1\n1 1\n''') == '1\\n1'\nassert solution('''2 1\n1 2\n2 1\n''') == '1\\n0'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 4\n''') == '2\\n1\\n1'\nassert solution('''3 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1\\n2\\n3'\nassert solution('''2 3\n1 2\n2 3\n3 4\n''') == '1\\n2\\n1'\nassert solution('''6 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 1\n''') == '2\\n2\\n1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('1 2\\n2 3\\n3 4') == '2\\n1\\n1\\n0'\nassert solution('2 2\\n1 2\\n2 3\\n3 4') == '2\\n0\\n1\\n1'\nassert solution('2 2\\n1 2\\n2 3\\n3 4') == '2\\n0\\n1\\n1'\nassert solution('1 2\\n2 3') == '2\\n2\\n1\\n0'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4 3\n1 2\n2 3\n1 4\"\"\") == \"\"\"2\n2\n1\n1\"\"\"\nassert solution(\"\"\"1 2\n3 4\n1 2\"\"\") == \"\"\"1\n2\n0\"\"\"\nassert solution(\"\"\"10 5\n1 2\n3 4\n5 6\n7 8\n9 10\n1 3\n2 4\n3 5\n4 6\n5 6\"\"\") == \"\"\"3\n1\n0\n4\n1\n1\"\"\"\nassert solution(\"\"\"10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\"\"\") == \"\"\"1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '30'"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('2\\n6\\n10\\n15\\n') == '30'\nassert solution('2\\n1\\n2\\n3\\n') == '10'\nassert solution('3\\n2\\n1\\n2\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n') == '0'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n15\\n15\\n15\") == \"30\"\nassert solution(\"4\\n2\\n2\\n2\\n2\") == \"0\"\nassert solution(\"4\\n2\\n2\\n2\\n2\") == \"0\"\nassert solution(\"4\\n5\\n10\\n10\\n10\") == \"30\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == 25\nassert solution('3\\n5\\n10\\n25\\n') == 30\nassert solution('3\\n5\\n10\\n30\\n') == 30\nassert solution('3\\n5\\n10\\n35\\n') == 35\nassert solution('3\\n5\\n10\\n45\\n') == 45\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"2\\n5\\n10\\n15\\n\") == \"30\"\nassert solution(\"2\\n5\\n10\\n15\\n\") == \"0\"\nassert solution(\"4\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"4\\n5\\n10\\n15\\n\") == \"0\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n10\\n15') == '25'\nassert solution('5\\n10\\n15\\n5') == '30'\nassert solution('5\\n10\\n15\\n15') == '35'\nassert solution('5\\n10\\n15\\n10\\n10') == '40'\nassert solution('5\\n10\\n15\\n10\\n10\\n10') == '40'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('5\\n10\\n15\\n') == '30'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '0'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '100'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '96'\nassert solution('100\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '96'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\naabbca') == '2'\nassert solution('2\\naabbca') == '2'\nassert solution('6\\nbaaacba') == '3'\nassert solution('2\\nbaaacba') == '2'\nassert solution('6\\nbaaabca') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\nabcdefg\n''') == '2'\nassert solution('''4\nabcd\n''') == '0'\nassert solution('''8\nabcdefgh\n''') == '2'\nassert solution('''8\nabcd\n''') == '0'\nassert solution('''6\naabbca\n''') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aabbca') == 2\nassert solution('ab') == 1\nassert solution('abcd') == 1\nassert solution('abcde') == 1\nassert solution('aaaaa') == 0\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabbca') == 2\nassert solution('aaaaa') == 1\nassert solution('z') == 1\nassert solution('zz') == 1\nassert solution('zzz') == 1\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"aabbca\") == \"2\"\nassert solution(\"abacab\") == \"3\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"b\") == \"1\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aabbca\") == 2\nassert solution(\"asd\") == 1\nassert solution(\"abcbaba\") == 1\nassert solution(\"aaaaaaaaaaaa\") == 1\nassert solution(\"asdfasdf\") == 1\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabbca') == '2'\nassert solution('bbaaac') == '3'\nassert solution('aabbab') == '3'\nassert solution('ababab') == '3'\nassert solution('bababab') == '4'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aabbca') == '2'\nassert solution('aabbccddeeff') == '3'\nassert solution('"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aabbca') == '2'\nassert solution('aaaaaaaaa') == '2'\nassert solution('aab') == '2'\nassert solution('aaaaa') == '2'\nassert solution('aabca') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aabbca') == '2'\nassert solution('aaaaaa') == '1'\nassert solution('aabbac') == '2'\nassert solution('abac') == '2'\nassert solution('bbaa') == '2'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint('Test case passed')\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Rainy'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\""
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Sunny, Cloudy, Rainy') == 'Rainy'\nprint(solution(stdin.readline()))\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"SunnySunny\") == \"Sunny\"\nassert solution(\"SunnySunnySunny\") == \"Sunny\"\nassert solution(\"SunnySunnySunnySunny\") == \"Sunny\"\nassert solution(\"SunnySunnySunnySunnySunnySunny\") == \"Sunny\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 17 12') == '119'\nassert solution('0 10 0') == '0'\nassert solution('0 0 0') == '0'\nassert solution('2 3 5') == '6'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 11 120') == '119'\nassert solution('8 15 2000') == '2200'\nassert solution('10 4 500') == '4100'\nassert solution('12 6 1000') == '612'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\"\n\"\"\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 17 120') == '119'\n\"\"\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('1 4 9') == '19'\nassert solution('1 5 9') == '16'\nassert solution('1 6 9') == '16'\nassert solution('1 7 9') == '19'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 11 120\") == \"119\"\nassert solution(\"7 17 120\") == \"119\"\nassert solution(\"9 11 25\") == \"64\"\nassert solution(\"7 17 120\") == \"119\"\nassert solution(\"1 10 100\") == \"110\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 17 120''') == '119'\nassert solution('''7 17 120''') == '119'\nassert solution('''1 2 3''') == '6'\nassert solution('''30 20 80''') == '60'\nassert solution('''10 5 10''') == '14'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 17 120\") == \"119\"\nassert solution(\"2 17 120\") == \"119\"\nassert solution(\"3 17 120\") == \"119\"\nassert solution(\"4 17 120\") == \"119\"\nassert solution(\"5 17 120\") == \"119\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n1 1\n'''\n) == \"3800\"\n\nassert solution(\n'''\n1 1\n'''\n) == \"3800\"\n\nassert solution(\n'''\n10 5\n'''\n) == \"1920\"\n\nassert solution(\n'''\n1 1\n'''\n) == \"1920\"\n\nassert solution(\n'''\n10 10\n'''\n) == \"5200\""
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '3800'\n\nassert solution('2 2') == '600'\nassert solution('4 4') == '800'\nassert solution('100 100') == '1000000'\nassert solution('100 50') == '100'"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '3800'"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 2') == '7200'\nassert solution('1 5') == '9400'\nassert solution('2 4') == '9900'\nassert solution('3 4') == '12000'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '3800'\n\n\"\"\"\n\nfrom fractions import Fraction\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '6700'\nassert solution('3 3') == '8200'\nassert solution('4 4') == '11800'\nassert solution('5 5') == '18000'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 2\") == \"3000\"\nassert solution(\"1 3\") == \"3600\"\nassert solution(\"1 4\") == \"3600\"\nassert solution(\"1 5\") == \"3600\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3800'\n\"\"\"\n\nn, m = map(int, stdin.split())\n\nresult = 0\n\nwhile n > 0:\n    if n < m:\n        result += m * (n - 1)\n        n = 0\n    else:\n        result += m * n\n        n -= 2\n        m -= 1\n\nprint(result)\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"3800\"\nassert solution(\"2 1\") == \"3800\"\nassert solution(\"2 2\") == \"3800\"\nassert solution(\"2 3\") == \"4000\"\nassert solution(\"2 4\") == \"4300\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '1900'\nassert solution('1 1') == '1900'\nassert solution('1 5') == '1900'\nassert solution('1 10') == '1900'\nassert solution('1 100') == '1900'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('aatcoderregularcontest') == 'b'\nassert solution('academyregularcontest') == 'a'\nassert solution('atcoderregularcontest') == 'a'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('a') == None\nassert solution('atcoderregularcontest') == 'b'\nassert solution('aaa') == None\nassert solution('atcoderregularcontest') == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"b\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\n\"\"\"\n\n\"\"\"\nNote that the target letter is not in the input string.\nThus, the lexicographically smallest such letter would be b.\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('adcproj') == 'a'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'a'\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz') == None\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz') == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == None\nassert solution('atcoderregularcontest') == None\nassert solution('atcoderregularcontest') == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('ab') == 'a'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('abcd') == 'b'\nassert solution('abcdef') == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == None"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") is None\nassert solution(\"a\") == \"a\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == None\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == None\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n2 4 4 3'''\n) == '''4\n3\n3\n4'''\n)\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"1\\n100\\n\") == \"100\\n\"\nassert solution(\"1\\n11\\n\") == \"11\\n\"\nassert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('3\\n3') == '2'\nassert solution('2\\n2') == '1'\nassert solution('5\\n1 2 3 4 5') == '3'\nassert solution('7\\n4 3 2 1 3 4 5 6') == '4'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 3\\n\") == \"4\\n3\\n3\\n4\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 4 4 3\n''') == '4\\n3\\n3\\n4\\n', 'TC1'\nassert solution('''\n8\n2 4 4 3 3 3 3 1\n''') == '4\\n3\\n3\\n4\\n3\\n3\\n3\\n1\\n', 'TC2'\nassert solution('''\n8\n
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 4 3') == '4\\n3\\n3\\n4'\nassert solution('2 4 4 2') == '3\\n3\\n3\\n4'\nassert solution('2 4 4 1') == '3\\n3\\n4\\n4'\nassert solution('1 2 2 3') == '2\\n2\\n3\\n3'\nassert solution('1 2 2 4') == '2\\n2\\n4\\n4'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"1 3 4 2\") == \"4\\n3\\n3\\n4\"\nassert solution(\"2 3 4 4\") == \"4\\n3\\n3\\n4\"\n\"\"\""
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2 4 4 3''') == '4\\n3\\n3\\n4'\nassert solution('''8\n2 4 4 3 3 2 2 1''') == '3\\n3\\n4\\n5\\n6\\n7\\n8'\nassert solution('''10\n2 4 4 3 3 2 2 1 1 1''') == '3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('''12\n2 4 4 3 3 2 2 1 1 1 1 1 1 1''') == '3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11'\nassert solution('''14\n2 4 4 3 3 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('4\\n1 2 3 4') == '0'\nassert solution('5\\n2 3 4 5 1') == '0'\nassert solution('9\\n2 4 3 6 5 7 8 9') == '4'\nassert solution('10\\n2 4 3 6 5 7 8 9 10 1') == '6'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n3 1 2 4 2 1''') == '2'\nassert solution('''6\n3 1 2 4 2 1''') == '2'\nassert solution('''7\n3 1 2 4 2 1\n1 3 1 2 1 3''') == '2'\nassert solution('''3\n3 1 2\n1 3 1''') == '0'\nassert solution('''3\n3 1 2\n3 3 3''') == '6'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"3 1 2 4 2 1\") == 2\nassert solution(\"3 1 2 4 2 1\") == 2\nassert solution(\"3 1 2 4 2 1\") == 2\nassert solution(\"3 1 2 4 2 1\") == 2\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\nassert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1\\n2\\n4\\n2\\n1\"\nassert solution(\"2\\n1\\n1\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"1\\n1\") == \"0\\n0\"\nassert solution(\"4\\n1 2 3 4\") == \"4\\n4\\n2\\n3\\n1\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1 2 4 2 1') == '2'\nassert solution('1 1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 2\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('1\\n2\\n3\\n4\\n5') == '6'\nassert solution('2\\n2\\n2\\n2\\n2') == '2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2') == '2'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"3 3 4\") == \"\"\nassert solution(\"3 3 4 5\") == \"\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1\\n1\\n1') == '1'\nassert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\n5\\n10\\n2\\n3\\"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == \"8\"\nassert solution('''4\n7 1\n2\n5\n10\n4\n3''') == \"16\"\nassert solution('''3\n2\n5\n10\n4\n3''') == \"5\"\nassert solution('''5\n7 1\n2\n5\n10\n4\n3''') == \"8\"\nassert solution('''8\n2\n5\n10\n4\n3\n1\n6''') == \"10\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n7 1\n2\n5\n10\n''') == '8'\n\nassert solution('''\n1\n2\n3\n4\n5\n''') == '1'\n\nassert solution('''\n3\n7 1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == '4'\n\nassert solution('''\n10\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n7\n15\n20\n3\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10\\n2\\n3') == '7'\nassert solution('3\\n7 2\\n1\\n5\\n10\\n2\\n3') == '5'\nassert solution('3\\n7 2\\n1\\n5\\n10\\n2\\n3\\n4') == '10'\nassert solution('3\\n7 2\\n1\\n5\\n10\\n2\\n3\\n4\\n5') == '6'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == '8'\nassert solution('''10\n100 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n100\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n2\\n2\\n20') == '2'\nassert solution('2\\n2\\n2\\n10') == '2'\nassert solution('2\\n2\\n2\\n20') == '2'\nassert solution('10\\n2\\n2\\n30') == '0'\nassert solution('2\\n2\\n2\\n10') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2\\n'\nassert solution('3\\n3\\n3\\n100\\n') == '6\\n'\nassert solution('3\\n3\\n3\\n200\\n') == '0\\n'\nassert solution('3\\n3\\n3\\n2000\\n') == '0\\n'\nassert solution('4\\n4\\n4\\n100\\n') == '24\\n'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == 2\nassert solution(\"0\\n0\\n0\\n100\\n\") == 0\nassert solution(\"1\\n1\\n1\\n1000\\n\") == 2\nassert solution(\"0\\n0\\n0\\n1000\\n\") == 1\nassert solution(\"1\\n1\\n1\\n1000\\n\") == 1\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n2\n100\n''') == '2'\nassert solution('''2\n3\n5\n10\n20\n''') == '2'\nassert solution('''3\n2\n4\n10\n20\n''') == '1'\nassert solution('''3\n3\n3\n15\n15\n15\n''') == '2'\nassert solution('''3\n3\n4\n10\n20\n''') == '4'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n500\") == \"2\"\nassert solution(\"2\\n2\\n2\\n1\") == \"0\"\nassert solution(\"2\\n2\\n2\\n1000\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 10') == '2'\nassert solution('2 2 2 10') == '0'\nassert solution('1 2 2 100') == '0'\nassert solution('2 1 1 100') == '1'\nassert solution('2 2 1 100') == '0'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n2\n100\n''') == '2'\nassert solution('''3\n3\n3\n100\n''') == '0'\nassert solution('''4\n4\n4\n100\n''') == '0'\nassert solution('''5\n5\n5\n100\n''') == '3'\nassert solution('''6\n6\n6\n100\n''') == '0'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n101\") == \"0\"\nassert solution(\"2\\n2\\n2\\n0\") == \"0\"\nassert solution(\"2\\n2\\n2\\n2\") == \"0\"\nassert solution(\"2\\n2\\n2\\n20\") == \"0\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 2 2 2') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 3 4') == '1'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'No'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'No'\nassert solution('1 3 2') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"2 7 3\") == \"Yes\"\nassert solution(\"1 3 5\") == \"No\"\nassert solution(\"1 3 -5\") == \"No\"\nassert solution(\"-1 3 2\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 1 2') == 'No'\nassert solution('1 1 2') == 'Yes'\nassert solution('1 1 2') == 'No'\nassert solution('1 2 1') == 'No'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 2\") == \"No\"\nassert solution(\"2 3 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"3 5 2\") == \"No\"\nassert solution(\"3 2 1\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"2 5 2\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 2') == \"Yes\"\nassert solution('5 9 3') == \"No\"\nassert solution('7 2 3') == \"Yes\"\nassert solution('1 3 2') == \"Yes\"\nassert solution('5 9 3') == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 9 2\") == \"No\"\nassert solution(\"0 9 2\") == \"Yes\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"10 9 10\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('-1 0 0') == 'Yes'\nassert solution('3 2 1') == 'No'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 10') == '9'\nassert solution('1 100') == '1'\nassert solution('2 50') == '1'\nassert solution('6 60') == '5'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1000''') == '9'\nassert solution('''120\n100\n140''') == '9'\nassert solution('''7 12\n121\n120\n123\n124\n125\n126''') == '7'\nassert solution('''3 1000000\n2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '3'\nassert solution('''3 1000000\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '2'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('1 1\\n1 1\\n1 1') == '0'\nassert solution('2 4\\n1 2\\n2 1\\n3 1') == '4'\n\"\"\""
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3 1000\n120\n100\n140\n''') == '9'\n\nassert solution('''\n1 1\n1\n''') == '1'\n\nassert solution('''\n3 1000\n100\n100\n100\n''') == '3'\n\nassert solution('''\n3 10\n1\n1\n1\n1\n''') == '1'\n\nassert solution('''\n3 10\n3\n3\n3\n''') == '3'"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == '9'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\nassert solution('''3 10\n120\n100\n140''') == '9'\nassert solution('''2 10\n120\n100\n140''') == '3'\nassert solution('''1 10\n120\n100\n140''') == '4'\nassert solution('''2 3\n120\n100\n140''') == '2'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2\\n') == '2'\nassert solution('5 1000\\n3 1 2 3 1\\n') == '5'\nassert solution('5 1000\\n5 1 2 3 4 5\\n') == '5'\nassert solution('5 1000\\n3 1 2 3 4 5\\n') == '5'\nassert solution('10 30000\\n100000 1 2 3 4 5 6 7 8 9 10\\n') == '6'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('3 1000\\n0\\n0\\n0\\n') == '0'\nassert solution('3 1000\\n1000000\\n100\\n140\\n') == '9'\nassert solution('3 1000\\n100\\n100\\n100\\n') == '3'\nassert solution('3 1000\\n1000000\\n100\\n100\\n') == '3'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('apple\\napple\\norange\\napple') == '2\\n'\nassert solution('apple\\napple\\napple') == '3\\n'\nassert solution('apple\\norange\\napple') == '2\\n'\nassert solution('apple\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\napple') == 1\nassert solution('1\\napple\\napple') == 2\nassert solution('1\\napple\\napple\\napple') == 4\nassert solution('1\\napple\\napple\\napple\\napple') == 5\nassert solution('3\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('apple orange apple') == 2\nassert solution('apple') == 1\nassert solution('apple apple') == 0\nassert solution('orange') == 1\nassert solution('orange orange') == 0\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution) == \"2\""
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\napple:orange:apple') == '2\\n'\nassert solution('1\\napple:orange:apple') == '2\\n'\nassert solution('2\\napple:orange:apple') == '2\\n'\nassert solution('1\\napple:orange:apple:orange:apple') == '4\\n'\nassert solution('1\\napple:orange:apple:orange:apple:orange:apple:orange:apple') == '8\\n'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"apple\") == \"2\"\nassert solution(\"orange\") == \"2\"\nassert solution(\"appple\") == \"2\"\nassert solution(\"ap\") == \"2\"\nassert solution(\"app\") == \"2\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('aaaaaaaa') == 'a'\nassert solution('bbaaaaaa') == 'b'\nassert solution('bbbaaaaa') == 'b'\nassert solution('bbaaaaaa') == 'b'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\napple\\norange\\napple\\n') == '2'\nassert solution('10\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\n') == '1'\nassert solution('10\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\n') == '1'\nassert solution('10\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\n') == '1'\nassert solution('10\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\nbbb\\n') == '1'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\napple\\n') == '1'\nassert solution('2\\napple\\n') == '2'\nassert solution('3\\napple\\n') == '1'\nassert solution('4\\napple\\n') == '3'\nassert solution('5\\napple\\n') == '2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1\\n0') == '1 1'\nassert solution('1\\n1') == '1 1'\nassert solution('1\\n2') == '1 2'\nassert solution('1\\n3') == '1 3'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4\n2100 2500 2700 2700\n''') == '2 2'\n\nassert solution(\n'''\n6\n4322 3423 4223 4300\n''') == '3 3'\n\nassert solution(\n'''\n6\n4322 3423 4223 4300\n''') == '3 3'\n\nassert solution(\n'''\n6\n12345 6789 01067 12345\n''') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == output(input(\"\"))\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n2100 2500 2700 2700\n\"\"\") == \"2 2\"\n\nassert solution(\n\"\"\"\n3\n2500 2502 2502\n\"\"\") == \"1 1\"\n\nassert solution(\n\"\"\"\n5\n2120 2120 2120 2120\n\"\"\") == \"0 0\"\n\nassert solution(\n\"\"\"\n4\n2300 2400 2300 2400\n\"\"\") == \"2 1\"\n\nassert solution(\n\"\"\"\n5\n2650 2650 2650 2650\n\"\"\") == \"2 2\""
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\n'''"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2800') == '2 2'\nassert solution('2100 2500 2700 3200') == '3 2'\nassert solution('2100 2500 2700 3399') == '3 2'\nassert solution('2100 2500 2700 3399') == '3 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2300 2300''') == '1 1'\nassert solution('''2\n4300 4300''') == '1 1'\nassert solution('''2\n4800 4800''') == '1 1'\nassert solution('''3\n2300 2300 2300''') == '1 1'\nassert solution('''3\n4300 4300 4300''') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\n\"\"\""
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2 2'\n\"\"\"\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nmin_c = max_c = 0\nfor i in a:\n    if i > 2400:\n        max_c += 1\n    elif i < 1200:\n        min_c += 1\nprint(min_c, max_c)\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('x') == ''\nassert solution('xox') == '0'\nassert solution('xoxo') == '0'\nassert solution('ooxx') == '0'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('xoo') == '900'\nassert solution('xxo') == '900'\nassert solution('oxo') == '900'\nassert solution('xoo') == '900'\nassert solution('xox') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('oxo') == '900'\nassert solution('xox') == '1000'\nassert solution('oox') == '900'\nassert solution('ooxx') == '1000'\nassert solution('ooxxo') == '1000'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ooxx') == 900\nassert solution('xoox') == 0\nassert solution('xxo') == 0\nassert solution('xoox') == 0\nassert solution('oxx') == 0\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ooxx\") == \"900\"\nassert solution(\"xox\") == \"0\"\nassert solution(\"xx\") == \"0\"\nassert solution(\"ooxx\") == \"900\"\nassert solution(\"xox\") == \"0\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('oxx') == 900\nassert solution('oox') == 700\nassert solution('xox') == 500\nassert solution('xoo') == 550\nassert solution('xoxo') == 550\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('oxo') == '900'"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('oxo') == '900'\nassert solution('oox') == '900'\nassert solution('oxx') == '900'\nassert solution('oxxx') == '900'\nassert solution('oxxxxx') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"900\"\nassert solution(\"oxx\") == \"1500\"\nassert solution(\"oox\") == \"1500\"\nassert solution(\"xox\") == \"1500\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"900\"\nassert solution(\"xoxo\") == \"900\"\nassert solution(\"xoxoo\") == \"900\"\nassert solution(\"xoxooox\") == \"900\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'H'\nassert solution(input()) == 'D'\nassert solution(input()) == 'H'\nassert solution(input()) == 'D'\nassert solution(input()) == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n\nassert solution('H H') == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'H'\nassert solution('H H') == 'H'\nassert solution('D H') == 'D'\nassert solution('D D') == 'H'\nassert solution('H D') == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'H'\n\n-----\nA = AtCoDeer\nB = TopCoDeer\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is H\n\nA's answer is H\n\nA's answer is H\nB's answer is"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('H D') == 'H'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"H\"\n\nprint(\"Testcases passed\")\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'H'\nassert solution('H D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D H') == 'D'\nassert solution('H D') == 'H'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1214') == '1+1-1-1-1=0'\nassert solution('1112') == '1-1-1+1=0'\nassert solution('1221') == '1-1+1+2=0'\nassert solution('0122') == '1-1+1+1+1=0'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1223') == '1+2+3+2=7'\nassert solution('1224') == '1+2+3+4=7'\nassert solution('1225') == '1+2+3+5=7'\nassert solution('1226') == '1+2+3+6=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1244') == '1+4+4+4=7'\nassert solution('12345') == '1+2+3+5=7'\nassert solution('123456') == '1+2+3+4+6=7'\nassert solution('1234567') == '1+2+3+4+5+6=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1234') == '1+2+3+4=7'\nassert solution('1111') == '1+1+1+1=7'\nassert solution('2222') == '2+2+2+2=7'\nassert solution('1233') == '1+2+3+3=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1010') == '1+1-1=0'\nassert solution('1234') == '1+2+3-4=7'\nassert solution('1243') == '1+2+3-4=7'\nassert solution('2344') == '2+3+4-4=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1234') == '1+2+3+4=7'\nassert solution('1245') == '1+2+4+5=7'\nassert solution('1256') == '1+2+4+5+6=7'\nassert solution('1267') == '1+2+4+5+6+7=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1213') == '1+1+1+3=4'\nassert solution('1211') == '1+1+1+1=2'\nassert solution('2222') == '2+2+2+2=7'\nassert solution('2221') == '2+2+1+1=4'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1213') == '1+2+1+3=6'\nassert solution('1233') == '1+2+3+3=6'\nassert solution('1245') == '1+2+4+5=6'\nassert solution('1335') == '1+3+3+5=6'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 1 2 2\") == \"2\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n2') == '2\\n2\\n0\\n0'\nassert solution('2\\n1\\n2\\n2') == '2\\n2\\n0\\n0'\nassert solution('2\\n1\\n3\\n3') == '2\\n0\\n0\\n0'\nassert solution('2\\n1\\n3\\n4') == '2\\n0\\n0\\n0'\nassert solution('2\\n1\\n4\\n4') == '2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n3 2 1 3\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n2 2 1 3\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n4 2 3 1\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n5 3 4 2\") == \"2\\n2\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n1 1 2 2\n\"\"\") == \"\"\"\n2\n2\n0\n0\n0\n\"\"\".strip()\nassert solution(\"\"\"\n5\n1 1 2 2\n\"\"\") == \"\"\"\n2\n2\n0\n0\n0\n\"\"\".strip()\nassert solution(\"\"\"\n1\n2\n\"\"\") == \"\"\"\n0\n0\n\"\"\".strip()\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 3') == '2\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 3 4') == '3\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 3 4 5') == '3\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 3 4 5 6') == '4\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('1\\n1') == '2\\n2\\n0\\n0'\nassert solution('3\\n2 1') == '0\\n0\\n0'\nassert solution('2\\n1 1') == '2\\n2\\n0\\n0'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '10\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n\n'''\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('3\\n1 2') == '0'\nassert solution('5\\n1 2 3 4 5') == '2\\n0\\n0\\n0\\n0'\nassert solution('6\\n1 2 3 4 5 6') == '2\\n0\\n0\\n0\\n0\\n0'\nassert solution('7\\n1 2 3 4 5 6 7') == '2\\n0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == \"3\"\nassert solution('15') == \"3\"\nassert solution('9') == \"2\"\nassert solution('100') == \"4\"\nassert solution('2') == \"0\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('56789') == '456789'\nassert solution('987654321') == '9191919191919191919191919191919'\nassert solution('10000000000') == '1023456790123456790123456790123456789'\n\nprint('Testcase 1: Passed')\nprint('Testcase 2: Passed')\nprint('Testcase 3: Passed')\nprint('Testcase 4: Passed')\nprint('Testcase 5: Passed')\nprint('Testcase 6: Passed')\nprint('Testcase 7: Passed')\nprint('Testcase 8: Passed')\nprint('Testcase 9: Passed')\nprint('Testcase 10: Passed')\nprint('Testcase 11: Passed')\nprint('Testcase 12: Passed')\nprint('Testcase 13: Passed')\nprint('Testcase 14: Passed')\nprint('Testcase 15: Passed')\nprint('Testcase 16: Passed')\nprint('Testcase 17: Passed')\nprint('Testcase 18: Passed')\nprint('Testcase 19: Passed')\nprint('Testcase 20: Passed')\nprint('Testcase 21: Passed')\nprint('Testcase 22: Passed')\nprint('Testcase 23: Passed')\nprint('Testcase 24: Passed')\nprint('Testcase 25: Passed')\nprint('Testcase 26: Passed')\nprint('Testcase 27: Passed')\nprint('Testcase 28: Passed')\nprint('Testcase 29: Passed')\nprint('Testcase 30: Passed')\nprint('Testcase 31: Passed')\nprint('Testcase 32: Passed')\nprint('Testcase 33: Passed')\nprint('Testcase 34: Passed')\nprint('Testcase 35: Passed')\nprint('Testcase 36: Passed')\nprint('Testcase 37: Passed')\nprint('Testcase 38: Passed')\nprint('Testcase 39: Passed')\nprint('Testcase 40: Passed')\nprint('Testcase 41: Passed')\nprint('Testcase 42: Passed')\nprint('Testcase 43: Passed')\nprint('Testcase 44: Passed')\nprint('Testcase 45: Passed')\nprint('Testcase 46: Passed')\nprint('Testcase 47: Passed')\nprint('Testcase 48: Passed')\nprint('Testcase 49: Passed')\nprint('Testcase 50: Passed')\nprint('Testcase 51: Passed')\nprint('Testcase 52: Passed')\nprint('Testcase 53: Passed')\nprint('Testcase 54: Passed')\nprint('Testcase 55: Passed')\nprint('Testcase 56: Passed')\nprint('Testcase 57: Passed')\nprint('Testcase 58: Passed')\nprint('Testcase 59: Passed')\nprint('Testcase 60: Passed')\nprint('Testcase 61: Passed')\nprint('Testcase 62: Passed')\nprint('Testcase 63: Passed')\nprint('Testcase 64: Passed')\nprint('Testcase 65: Passed')\nprint('Testcase 66: Passed')\nprint('Testcase 67: Passed')\nprint('Testcase 68: Passed')\nprint('Testcase 69: Passed')\nprint('Testcase 70: Passed')\nprint('Testcase 71: Passed')\nprint('Testcase 72: Passed')\nprint('Testcase 73: Passed')\nprint('Testcase 74: Passed')\nprint('Testcase 75: Passed')\nprint('Testcase 76: Passed')\nprint('Testcase 77: Passed')\nprint('Testcase 78: Passed')\nprint('Testcase 79: Passed')\nprint('Testcase 80: Passed')\nprint('Testcase 81: Passed')\nprint('Testcase 82: Passed')\nprint('Testcase 83: Passed')\nprint('Testcase 84: Passed')\nprint('Testcase 85: Passed')\nprint('Testcase 86: Passed')\nprint('Testcase 87: Passed')\nprint('Testcase 88: Passed')\nprint('Testcase 89: Passed')\nprint('Testcase 90: Passed')\nprint('Testcase 91: Passed')\nprint('Testcase 92: Passed')\nprint('Testcase 93: Passed')\nprint('Testcase 94: Passed')\nprint('Testcase 95: Passed')\nprint('Testcase 96: Passed')\nprint('Testcase 97: Passed')\nprint('Testcase 98: Passed')\nprint('Testcase 99: Passed')\nprint('Testcase 100: Passed')\nprint('Testcase 101: Passed')\nprint('Testcase 102: Passed')\nprint('Testcase 103: Passed')\nprint('Testcase 104: Passed')\nprint('Testcase 105: Passed')\nprint('Testcase 106: Passed')\nprint('Testcase 107: Passed')\nprint('Testcase 108: Passed')\nprint('Testcase 109: Passed')\nprint('Testcase 110: Passed')\nprint('Testcase 111: Passed')\nprint('Testcase 112: Passed')\nprint('Testcase 113: Passed')\nprint('Testcase 114: Passed')\nprint('Testcase 115: Passed')\nprint('Testcase 116: Passed')\nprint('Testcase 117: Passed')\nprint('Testcase 118: Passed')\nprint('Testcase 119: Passed')\nprint('Testcase 120: Passed')\nprint('Testcase 121: Passed')\nprint('Testcase 122: Passed')\nprint('Testcase 123: Passed')\nprint('Testcase 124: Passed')\nprint('Testcase 125: Passed')\nprint('Testcase 126: Passed')\nprint('Testcase 127: Passed')\nprint('Testcase 128: Passed')\nprint('Testcase 129: Passed')\nprint('Testcase 130: Passed')\nprint('Testcase 131: Passed')\nprint('Testcase 132: Passed')\nprint('Testcase 133: Passed')\nprint('Testcase 134: Passed')\nprint('Testcase 135: Passed')\nprint('Testcase 136: Passed')\nprint('Testcase 137: Passed')\nprint('Testcase 138: Passed')\nprint('Testcase 139: Passed')\nprint('Testcase 140: Passed')\nprint('Testcase 141: Passed')\nprint('Testcase 142: Passed')\nprint('Testcase 143: Passed')\nprint('Testcase 144: Passed')\nprint('Testcase 145: Passed')\nprint('Testcase 146: Passed')\nprint('Testcase 147: Passed')\nprint('Testcase 148: Passed')\nprint('Testcase 149: Passed')\nprint('Testcase 150: Passed')\nprint('Testcase 151: Passed')\nprint('Testcase 152: Passed')\nprint('Testcase 153: Passed')\nprint('Testcase 154: Passed')\nprint('Testcase 155: Passed')\nprint('Testcase 156: Passed')\nprint('Testcase 157: Passed')\nprint('Testcase 158: Passed')\nprint('Testcase 159: Passed')\nprint('Testcase 160: Passed')\nprint('Testcase 161: Passed')\nprint('Testcase 162: Passed')\nprint('Testcase 163: Passed')\nprint('Testcase 164: Passed')\nprint('Testcase 165: Passed')\nprint('Testcase 166: Passed')\nprint('Testcase 167: Passed')\nprint('Testcase 168: Passed')\nprint('Testcase 169: Passed')\nprint('Testcase 170: Passed')\nprint('Testcase 171: Passed')\nprint('Testcase 172: Passed')\nprint('Testcase 173: Passed')\nprint('Testcase 174: Passed')\nprint('Testcase 175: Passed')\nprint('Testcase 176: Passed')\nprint('Testcase 177: Passed')\nprint('Testcase 178: Passed')\nprint('Testcase 179: Passed')\nprint('Testcase 180: Passed')\nprint('Testcase 181: Passed')\nprint('Testcase 182: Passed')\nprint('Testcase 183: Passed')\nprint('Testcase 184: Passed')\nprint('Testcase 185: Passed')\nprint('Testcase 186: Passed')\nprint('Testcase 187: Passed')\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n1') == '3'\nassert solution('4\\n2') == '2'\nassert solution('1\\n3') == '2'\nassert solution('1\\n2') == '1'\nassert solution('2\\n3') == '3'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '3'\nassert solution('9') == '3'\nassert solution('10') == '4'\nassert solution('11') == '4'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(4) == \"1\"\nassert solution(9) == \"2\"\nassert solution(5) == \"3\"\nassert solution(10) == \"4\"\nassert solution(11) == \"5\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('9') == '4'\nassert solution('3') == '3'\nassert solution('1000') == '999'\nassert solution('1001') == '1000'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n\") == \"1\"\nassert solution(\"1\\n\") == \"2\"\nassert solution(\"2\\n\") == \"3\"\nassert solution(\"4\\n\") == \"6\"\nassert solution(\"5\\n\") == \"8\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1117\") == \"No\"\nassert solution(\"1111\") == \"Yes\"\nassert solution(\"111\") == \"No\"\nassert solution(\"123\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1118') == \"Yes\"\nassert solution('1111') == \"No\"\nassert solution('1123') == \"No\"\nassert solution('1222') == \"No\"\nassert solution('1231') == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1') == 'No'\nassert solution('123') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('12345') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('111') == 'No'\nassert solution('1111') == 'Yes'\nassert solution('11110') == 'No'\nassert solution('11001') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('0121') == 'No'\nassert solution('1014') == 'No'\nassert solution('1234') == 'No'\nassert solution('1010') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1111') == 'Yes'\nassert solution('1118') == 'Yes'\nassert solution('1018') == 'Yes'\nassert solution('1199') == 'No'\nassert solution('1111') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1118') == \"Yes\"\nassert solution('2222') == \"No\"\nassert solution('1221') == \"Yes\"\nassert solution('1212') == \"No\"\nassert solution('12123') == \"Yes\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'No'\nassert solution('1113') == 'No'\nassert solution('1101') == 'No'\nassert solution('1111') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1118''') == 'Yes'\nassert solution('''1111''') == 'No'\nassert solution('''2119''') == 'No'\nassert solution('''1209''') == 'Yes'\nassert solution('''1310''') == 'Yes'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2\") == \"\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2\n1 5\n2 4\n3 6'''\n    ) == '3'\nassert solution(\n'''2\n1 5\n2 4\n3 7'''\n    ) == '1'\nassert solution(\n'''1\n1 1'''\n    ) == '1'\nassert solution(\n'''1\n2 3'''\n    ) == '0'\nassert solution(\n'''2\n3 5\n5 7\n1 4'''\n    ) == '1'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n1\\n1\") == \"2\"\nassert solution(\"2\\n1\\n2\\n1\") == \"2\"\nassert solution(\"2\\n1\\n2\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n5\n2 4\n3 6''') == '3'\nassert solution('''1\n4\n3 5\n2 4\n1 3\n4\n2 4\n1 3''') == '2'\nassert solution('''4\n3 5\n2 4\n1 3\n1 4\n2 4\n1 3''') == '0'\nassert solution('''2\n5\n2 4\n1 3\n1 4\n2 4\n1 3''') == '3'\nassert solution('''2\n4\n3 5\n2 4\n1 3\n1 4\n2 4\n1 3''') == '1'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nassert solution(\"4\\n1 3 4 2\\n5 4 3 2\\n6 4 3 2\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"3\\n1 3 4 2\\n5 4 3 2\\n6 4 3 2\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"3\"\nassert solution(\"4\\n1 2\\n2 3\\n4 5\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n4 5\") == \"3\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n5\\n4') == '3'\nassert solution('3\\n6\\n5') == '3'\nassert solution('4\\n1\\n5') == '4'\nassert solution('5\\n5\\n5') == '5'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 5\\n2 4\\n3 6') == '3'\nassert solution('5\\n1 5\\n2 4\\n3 6\\n4 7') == '3'\nassert solution('6\\n1 5\\n2 4\\n3 6\\n4 7\\n5 8') == '3'\nassert solution('7\\n1 5\\n2 4\\n3 6\\n4 7\\n5 8\\n6 9') == '5'\nassert solution('8\\n1 5\\n2 4\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10') == '8'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5') == '3'\nassert solution('2 4') == '3'\nassert solution('3 6') == '3'"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '>'\nassert solution('A B') == '='\nassert solution('B A') == '='\nassert solution('D B') == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"C B\") == \"<\"\nassert solution(\"E F\") == \"=\"\nassert solution(\"A B\") == \">\"\nassert solution(\"D E\") == \"<\"\nassert solution(\"A C\") == \">\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '<'\nassert solution('A B') == '<'\nassert solution('A A') == '='\nassert solution('C C') == '='\nassert solution('E E') == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"B A\") == \">\"\nassert solution(\"A B\") == \"=\"\nassert solution(\"B A\") == \"=\""
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A B\") == '<'\nassert solution(\"B A\") == '>'\nassert solution(\"B B\") == '='\nassert solution(\"C D\") == '='\nassert solution(\"D C\") == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == stdin\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"A 0\") == \"<\"\nassert solution(\"10 B\") == \">\"\nassert solution(\"F0\") == \"<\"\nassert solution(\"F0\") == \"=\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''A B''') == '<'\nassert solution('''B A''') == '>'\nassert solution('''F A''') == '='.\nassert solution('''E B''') == '>'.\nassert solution('''C A''') == '<'.\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    stdin =\n    '''\n    3 5\n    .....\n    .#.#.\n    .....\n    '''\n) == '11211'\n\nassert solution(\n    stdin =\n    '''\n    3 3\n    ..#\n    ...\n    '''\n) == '1234'\n\nassert solution(\n    stdin =\n    '''\n    3 4\n    ..##\n    ..#..\n    ..#..\n    '''\n) == '12345'\n\nassert solution(\n    stdin =\n    '''\n    3 5\n    ...\n    .#.#.\n    .....\n    '''\n) == '11211'\n\nassert solution(\n    stdin =\n    '''\n    3 5\n    .##.\n    .#..\n    .##.\n    '''\n) == '1234'"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2 2\n....\n..#.\n''') == '11211'\n\nassert solution(\n'''\n3 3\n.#.#.\n.#.#.\n.#.#.\n''') == '11211'\n\nassert solution(\n'''\n4 4\n.##.\n.#..\n.#..\n.#..\n''') == '11122'\n\nassert solution(\n'''\n5 5\n.##.#\n.#..#\n.#..#\n.#..#\n.#..#\n''') == '11122'\n\nassert solution(\n'''\n10 10\n.#...#.#\n.#...#.#\n.#...#.#\n.#...#.#\n.#...#.#\n.#...#.#\n.#...#.#\n.#...#.#\n.#...#.#\n.#...#.#\n''') == '1111211122'"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5') == ''\nassert solution('3 3') == '11'\nassert solution('2 3') == '11'\nassert solution('1 1') == '1'\nassert solution('5 5') == '11111'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 5''') == '11211'\nassert solution('''2 3''') == '1#2#1'\nassert solution('''1 2''') == '1#1'\nassert solution('''2 1''') == '1#'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n''') == '11211'\nassert solution('''10 10\n.#######\n.#.#...#\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5\\n..\\n.#.\\n.....\\n') == '11211'\nassert solution('3 5\\n.#..\\n.#..\\n.....\\n') == '1#2#1'\nassert solution('3 3\\n#.\\n#.\\n') == '#'\nassert solution('3 3\\n##\\n##\\n') == '##'\nassert solution('3 3\\n.#\\n#.\\n') == '..'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '111'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1') == '1111111111'\nassert solution('1 1 1 1 1 1 1 1 1 1 1') == '1111111111'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '1111111111'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n') == '11'\nassert solution('2 2\\n#..\\n#..') == '112'\nassert solution('3 5\\n.####\\n#....\\n#....') == '11112'\nassert solution('2 2\\n#..\\n..#') == '1111'\nassert solution('1 1\\n#') == '#'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1\\n11211'\nassert solution('3 5\\n.##.\\n.....\\n....\\n') == '1111\\n11#1\\n111#'\nassert solution('3 4\\n..#..\\n....\\n...#\\n') == '11111\\n1#1#1\\n11111'\nassert solution('2 4\\n###\\n...\\n###\\n') == '1234\\n#12\\n#34'\n\"\"\""
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211'\nassert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '1#2#1'\nassert solution('3 3\\n.##.\\n#.#.\\n##.#\\n') == '1#0#1'\n\"\"\""
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''10 2 60\n10 10 10 10 10 10 10 10 10 10''') == '6'\nassert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '6'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\nprint('Testcase 1 passed\\n')\n\n-----\n\"\"\"\n\n\"\"\"\n\n-----\n\n\"\"\"\n\n\"\"\"\n\n-----\n\n\"\"\"\n\n\"\"\"\n\n-----\n\n\"\"\"\n\n\"\"\"\n\n-----\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"60 90 120\") == \"3\"\nassert solution(\"80 150 80 150\") == \"3\"\nassert solution(\"10 100 10\") == \"1\"\nassert solution(\"1000000 1 100000000\") == \"1\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n'''\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[0:4]\n\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 1 2\") == \"4\"\nassert solution(\"1 2 3 4 1 2\") == \"11\"\nassert solution(\"1 2 3 4 5 1 2\") == \"14\"\nassert solution(\"1 2 3 4 5 6 1 2\") == \"15\"\nassert solution(\"1 2 3 4 5 6 7 1 2\") == \"16\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1500 2000 1600 3 2''') == \"7900\"\n\n'''\n\n'''"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1500 2000 1600 4 5') == '5500'\nassert solution('1500 2000 1600 10 5') == '10500'\nassert solution('1500 2000 1600 17 5') == '10500'\nassert solution('1500 2000 1600 3 1') == '6100'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1500 2000 1600 3 2''') == \"7900\"\nassert solution(\n'''1500 2000 1600 3 2''') == \"7900\"\nassert solution(\n'''1500 2000 1600 3 2''') == \"7900\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n\"\"\""
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1500 2000 1600 3 2''') == '7900'\nassert solution('''1 2 3 4 5 6''') == '18'\nassert solution('''1000000000 1000000000 1000000000 1000000000 1 1000000000''') == '9999999999999'\nassert solution('''10 1 1 1 1 10''') == '40'\nassert solution('''3 4 4 3 4''') == '26'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\n\"\"\"\n\n\"\"\"\n\u8fd9\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u9898, \u4ee5\u540e\u53ef\u4ee5\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u77e5\u8bc6\u70b9, \u7136\u540e\u7528\u9012\u5f52\u6765\u5199, \u53ef\u4ee5\u505a\u4e00\u4e2a\u52a8\u6001\u89c4\u5212, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u9898, \u4e5f\u53ef\u4ee5\u7528DP\u6765\u5199, \u5c31\u662f\u6211\u8bb0\u4e0b\u4e86\u4e00\ufffd"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '3'\n) == '4'\n\nassert solution(\n    '10'\n) == '4'\n\nassert solution(\n    '100'\n) == '8'\n\nassert solution(\n    '1000'\n) == '40'\n\nassert solution(\n    '10000'\n) == '220'"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('3') == ''\nassert solution('9') == ''\nassert solution('27') == ''\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '1'\nassert solution('10') == '6'\nassert solution('15') == '8'\nassert solution('100') == '25'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '4'\nassert solution('''10''') == '24'\nassert solution('''100''') == '24'\nassert solution('''1000''') == '24'\nassert solution('''10000''') == '24'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == 4\nassert solution('2') == 0\nassert solution('1') == 1\nassert solution('5') == 8\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n'''\n) == '4'\nassert solution(\n'''\n2\n'''\n) == '2'\nassert solution(\n'''\n1\n'''\n) == '1'\nassert solution(\n'''\n10\n'''\n) == '4'\nassert solution(\n'''\n100\n'''\n) == '4'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(10) == '9'\nassert solution(50) == '9'\nassert solution(40) == '4'\nassert solution(45) == '4'\nassert solution(30) == '3'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8''') == '8'\nassert solution('2') == '1'\nassert solution('10') == '9'\nassert solution('1000000000') == '999'\n\nprint('Passed all tests...')\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '9'\nassert solution('''10''') == '9'\nassert solution('''1000''') == '991'\nassert solution('''123456789''') == '1'\nassert solution('''12345678910111213141516171819''') == '1'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"99\"\nassert solution(\"1000\") == \"999\"\nassert solution(\"10000\") == \"9999\"\nassert solution(\"100000\") == \"999999\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == '9'\nassert solution('1000') == '9999'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(10) == 9\nassert solution(14) == 13\nassert solution(19) == 19\nassert solution(20) == 19\nassert solution(1000) == 9\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8''') == \"4\"\nassert solution('''13''') == \"2\"\nassert solution('''21''') == \"1\"\nassert solution('''64''') == \"2\"\nassert solution('''100''') == \"2\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('10') == '9'\nassert solution('14') == '13'\nassert solution('999') == '998'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n10\n8\n8\n6\n''') == \"3\"\nassert solution('''\n5\n10\n8\n8\n6\n''') == \"2\"\nassert solution('''\n7\n10\n8\n8\n6\n''') == \"2\"\nassert solution('''\n8\n10\n8\n8\n6\n''') == \"2\"\nassert solution('''\n9\n10\n8\n8\n6\n''') == \"2\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == '3'\nassert solution('''1\n10\n8\n8\n6''') == '1'\nassert solution('''2\n10\n8\n8\n6''') == '2'\nassert solution('''1\n10\n9\n8\n7\n6''') == '2'\nassert solution('''3\n10\n8\n6''') == '2'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4\n10\n8\n8\n6''') == '3'\nassert solution('''1\n2''') == '1'\nassert solution('''2\n2''') == '1'\nassert solution('''3\n2\n1''') == '2'\nassert solution('''3\n3\n3''') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('2\\n3') == '2'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('1\\n20\\n8') == '1'\nassert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('1\\n20\\n8') == '1'\nassert solution('1\\n20\\n8') == '1'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == 3\nassert solution('5\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n') == 4\nprint('All cases passed successfully.')"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('2\\n1') == '0'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '2'\nassert solution('5\\n1') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"4\\n10\\n8\\n8\\n6\\n\"\n) == \"3\"\n\nassert solution(\n    \"1\\n1\\n\"\n) == \"1\"\n\nassert solution(\n    \"2\\n5\\n1\\n7\\n2\\n\"\n) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[7:11]\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ASDFZ\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"abcdef\") == \"3\"\nassert solution(\"QQQQQQQQQQQQQQ\") == \"16\"\nassert solution(\"KOTIQQQQQQQQQQQ\") == \"16\"\nassert solution(\"ABCDEEFSDFSDFSDFSDFSDFSDFSDFSDFSDFSDF\") == \"16\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('BANANASDF') == '5'\nassert solution('AJKDLSI412K4JSJ9D') == '5'\nassert solution('AAAAAAAAAAAA') == '6'\nassert solution('BANANA') == '4'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('aaaaa') == 0\nassert solution('asdfasdf') == 0\nassert solution('QWERTYASDFZXCV') == 5\nassert solution
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('QWERTYASDFZXCV') == 5\nassert solution('QWEASDFZXCV') == 5\nassert solution('QWEASDFFZXCV') == 5\nassert solution('QWEASDFFZXCVC') == 5\nassert solution('QWEASDFFZXCVZ') == 6\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('QWERTYASDFZXCV') == 'ASDFZ'\nassert solution('ZZYQXDLCMOBHJ') == 'HELLO'\nassert solution('XXXYZYYZXYZZZZ') == 'RASDQRSK'\nassert solution('QXWKMOPRS') == 'NOPQR'\nassert solution('XZQWKXWK') == 'WKWK'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('QWERTYASDFZXCV') == 5\nassert solution('QWERTYASDFZXC') == 4\nassert solution('QWERTYASDFZX') == 3\nassert solution('QWERTYASDF') == 2\nassert solution('QWERTY') == 1\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[7:11]\n\nprint(solution(stdin))\n\nprint(solution(\"QWERTYASDFZXCV\"))\n\nprint(solution(\"QWERTBAFYHZ\"))\n\nprint(solution(\"ZQWEASDZXCVYTB\"))\n\nprint(solution(\"ZQWEASDZXCVYTB\"))\n\"\"\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QwertyAsdfZxcv') == '5'\nassert solution('QwertyAsdfzxcv') == '5'\nassert solution('qwertyasdfzxcv') == '5'\nassert solution('asdfzxcvqwertyasdfzxcv') == '5'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8 12 40\") == \"2\"\nassert solution(\"8 12 40\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"5 7 8 9 10 11\") == \"2\"\nassert solution(\"8 12 40\") == \"2\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('6 7 5') == '2'\nassert solution('2 5 7') == '2'\nassert solution('3 6 9') == '2'\nassert solution('2 3 6') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 12 40\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"8 12 40\") == \"2\"\nassert solution(\"8 12 40\") == \"2\"\nassert solution(\"8 12 40\") == \"2\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('3 7 2') == '1'\nassert solution('3 7 2') == '1'\nassert solution('2 4 2') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n8 12 40\\n') == '2'\nassert solution('5\\n1 1 2 3 5') == '1'\nassert solution('7\\n1 1 3 3 5 3 7') == '2'\nassert solution('9\\n3 3 3 3 3 3 3 3 3 3') == '4'\nassert solution('10\\n7 7 7 7 7 7 7 7 7 7 7') == '5'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"4\\n2 1 3 1\") == \"2\"\nassert solution(\"3\\n2 1 3 1\") == \"2\"\nassert solution(\"3\\n1 3 3 1\") == \"3\"\nassert solution(\"10\\n1 3 5 9 7 9 1\") == \"8\"\n\n\"\"\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n8 12 40''') == '2'\nassert solution('''1\n1''') == '0'\nassert solution('''4\n1 2 3 4''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '4'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '10'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0') == 1\nassert solution('3') == 6\nassert solution('10') == 6\nassert solution('100') == 6\nassert solution('1000') == 6\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"100\") == \"8\"\nassert solution(\"1000\") == \"10\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('10') == '36'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '272'\n\"\"\""
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '12'\nassert solution('10') == '60'\nassert solution('100') == '12000'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '6'\nassert solution('''5''') == '6'\nassert solution('''10''') == '1'\n'''\nassert solution('''100''') == '5'\n'''\nassert solution('''1000000000''') == '1'\n'''\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\n\"\"\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == 6\nassert solution(\"5\") == 2\nassert solution(\"10\") == 5\nassert solution(\"500\") == 2\nassert solution(\"1000\") == 10\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 1\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 2\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('5') == '6'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '15'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('11') == '33'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1,2,3\") == \"\"\nassert solution(\"1,2,3,4,5,6\") == \"\"\nassert solution(\"1,2,3\") == \"\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '10'\nassert solution('5') == '15'\nassert solution('100') == '200'\nassert solution('1000') == '2000'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('10') == '55'\nassert solution('1000') == '25035'\n\"\"\""
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('3') == '6'\nassert solution('3\\n') == '6'\nassert solution('3\\n1') == '4'\nassert solution('3\\n2') == '5'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('2') == '1+2=3'\nassert solution('10') == '1+2+3+4+5+6+7+8+9=24'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 3') == '2'\nassert solution('3 2') == '1'\nassert solution('3 1 1') == '-1'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3''') == '2'\nassert solution('''3\n1 2 3''') == '2'\nassert solution('''3\n1 2 3''') == '2'\nassert solution('''4\n1 2 3 4''') == '6'\nassert solution('''4\n1 2 3 4''') == '6'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 2\n'''\n\n'''\n\nIn this problem, the key is to find the optimal strategy to maximize the sum of the numbers written on the cards. \n\nFirst, let's look at the game of N cards, each card has a number written on it: a_i.\n\nWhen both players take a card, Alice takes a_1 and Bob takes a_2. If Alice takes a_i and Bob takes a_i+1, then Alice will lose, and Bob will win.\n\nSo, Alice can always choose to take a_i-1, while Bob can always choose to take a_i or a_i+1, but Alice can always win.\n\nSo, the optimal strategy is to maximize the sum of numbers written on the cards. In this case, Alice will take a_i-1, while Bob will take a_i or a_i+1.\n\nIf Alice and Bob both choose to take a_i, the sum of the numbers written on the cards will be a_i + (a_i-1).\nIf Alice and Bob both choose to take a_i+1, the sum of the numbers written on the cards will be a_i + (a_i+1).\n\nIf Alice chooses a_i-1, then Bob will choose a_i or a_i+1, while Alice will win.\nIf Alice chooses a_i, then Bob will choose a_i-1 or a_i+1, while Bob will win.\n\nSo, Alice will always win.\n\nIn a similar way, we can consider the game of N-1 cards. In this case, Alice and Bob both can choose to take a_i or a_i+1, while Alice only can take a_i-1, and Bob only can take a_i or a_i+1.\n\nIf Alice chooses a_i-1, then Bob will choose a_i or a_i+1, while Alice will lose.\nIf Alice chooses a_i, then Bob will choose a_i-1 or a_i+1, while Bob will win.\n\nIn a similar way, Alice will win.\n\nThe final result will be Alice's score - Bob's score.\n\n------Alternate Solution------\n\n'''\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('1 2 3') == '0'\nassert solution('1 3 3') == '-4'\n\"\"\"\n\n\"\"\"\nSolution:\n\nNow, let us understand the binary representation of each card. Let us denote the binary representation of each card as a and b (a and b are characters from a to z).\n\nThen, the optimal strategy for each player is clearly:\n\nAlice: a_i a_i a_i a_i a_i a_i a_i a_i a_i a_i\nBob: b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1 b_1\n\nIn this optimal strategy, Alice will always take the highest number of cards, and Bob will always take the lowest number of cards.\n\nLet us consider the optimal strategy for Alice:\n\nAlice: a_1 a_2 a_3... a_N\nBob: b_1 b_2 b_3... b_M\n\nSo, the optimal strategy for Alice is to always take the highest number of cards:\n\nAlice: a_1 a_2 a_3... a_N\nBob: b_1 b_2 b_3... b_M\n\nSimilarly, we will consider the optimal strategy for Bob:\n\nAlice: a_1 a_2 a_3... a_N\nBob: b_1 b_2 b_3... b_M\n\nSo, the optimal strategy for Bob is to always take the lowest number of cards:\n\nAlice: a_1 a_2 a_3... a_N\nBob: b_1 b_2 b_3... b_M\n\nThe optimal strategy for Alice and Bob will result in a total score of 0 when Alice takes the optimal strategy, and a total score of -4 when Bob takes the optimal strategy.\n\nThus, Alice will always lose the game.\n\n\"\"\""
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == '2'\nassert solution('1 3') == '2'\nassert solution('1 2 1') == '0'\nassert solution('2 2 2') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('3\\n1 3') == '-1'\nassert solution('2\\n3 1') == '2'\nassert solution('1\\n1') == '0'\nassert solution('2\\n3 1\\n3') == '1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 1 2\") == \"1\"\nassert solution(\"4 1 2 3\") == \"-2\"\nassert solution(\"2 1 3 4\") == \"3\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"3 1 2 1\") == \"1\"\nassert solution(\"3 1 2 3\") == \"0\"\nassert solution(\"3 1 2 3 4\") == \"-1\"\nassert solution(\"3 1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\n'''\nassert solution(\n'''4 10\n1 AC\n1 WA\n2 AC\n1 AC\n1 WA\n1 AC\n2 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 WA\n1 AC\n2 AC\n1 AC\n1 AC\n1 WA\n1 AC\n1 AC\n2 AC\n2 AC\n1 AC\n1 AC\n1 WA\n2 AC\n1 AC\n2 AC\n1 AC\n1 WA\n1 AC\n2 AC\n1 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 WA\n2 AC\n1 AC\n2 AC\n1 AC\n2 AC\n1 AC\n1 AC\n1 WA\n2 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n1 AC\n2 AC\n2 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n2 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC\n1 AC"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\n\"\"\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\nfrom itertools import groupby"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\"\"\") == \"2 2\"\n\"\"\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''1 1\n2 2''') == '0 0'\n'''\n'''\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''1 10\n1 AC\n2 WA\n2 AC\n2 WA\n3 AC\n3 WA\n4 AC\n4 WA\n5 AC\n5 WA\n6 AC\n6 WA''') == '6 5'\nassert solution('''2 3\n1 AC\n1 WA\n2 AC\n2 WA\n3 AC\n3 WA''') == '3 2'\nassert solution('''1 10\n1 WA\n1 AC\n2 AC\n2 WA\n3 AC\n3 WA\n4 AC\n4 WA\n5 AC\n5 WA\n6 AC\n6 WA''') == '6 5'\nassert solution('''1 10\n1 WA\n1 AC\n2 AC\n2 WA\n3 AC\n3 WA\n4 AC\n4 WA\n5 AC\n5 WA\n6 AC\n6 WA''') == '2 0'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('1\\n1 AC') == '1 1'\nassert solution('2 2\\n1 AC\\n2 AC') == '2 2'\nassert solution('2\\n1 AC') == '1 1'\nassert solution('2 2\\n1 AC\\n2 AC\\n2 AC') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('1 WA') == '1 0'\nassert solution('1 AC') == '1 1'\nassert solution('2 WA') == '0 2'\nassert solution('2 AC') == '1 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\nassert solution('5 3\\n1 AC\\n2 WA\\n3 AC\\n4 WA\\n5 AC\\n') == '3 2'\nassert solution('5 5\\n1 AC\\n2 WA\\n3 AC\\n4 WA\\n5 AC\\n') == '3 2'\nassert solution('1 1\\n1 AC\\n') == '0 0'\nassert solution('1 1\\n1 AC\\n1 WA\\n') == '0 0'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1') == '5'\nassert solution('10 3') == '4'\nassert solution('1 1') == '1'\nassert solution('6 2') == '3'\nassert solution('15 6') == '2'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 1 1\") == \"4\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"4 1 2 3 4\") == \"5\"\nassert solution(\"2 1 2 3 4\") == \"5\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '5'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('3 3 5') == '1'\nassert solution('3 3 4') == '2'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '5'\nassert solution('2 2') == '5'\nassert solution('3 2') == '6'\nassert solution('4 2') == '8'\nassert solution('5 2') == '10'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 10') == '1'\nassert solution('1 1 1') == '2'\nassert solution('3 2') == '2'\nassert solution('5 10') == '1'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1') == '5'\nassert solution('5 1') == '5'\nassert solution('5 1 5') == '5'\nassert solution('5 1 5 3') == '5'\nassert solution('5 1 5 3 5') == '5'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 1''') == '5'\nassert solution(\n'''3 1\n4 1 5''') == '5'\nassert solution(\n'''4 1\n4 1 5''') == '5'\nassert solution(\n'''4 1\n4 1 5''') == '5'\nassert solution(\n'''4 1\n4 1 5''') == '5'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n10\\n2') == 4\nassert solution('1\\n10\\n2\\n2\\n1') == 5\nassert solution('1\\n10\\n2\\n2\\n1\\n1\\n1') == 5\nassert solution('1\\n10\\n2\\n2\\n1\\n1\\n1\\n1') == 5\nassert solution('1\\n10\\n2\\n2\\n1\\n1\\n1\\n1\\n1') == 5\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n10\n2\n''') == '4'\nassert solution('''1\n10\n4\n''') == '9'\nassert solution('''1\n10\n3\n''') == '15'\nassert solution('''1\n10\n4\n''') == '19'\nassert solution('''1\n10\n5\n''') == '22'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n10\\n2') == '4'\nassert solution('2\\n10\\n2') == '16'\nassert solution('3\\n10\\n2') == '32'\nassert solution('4\\n10\\n2') == '64'\nassert solution('5\\n10\\n2') == '128'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n10\n2\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n5\n50\n5\n\"\"\"\n) == \"75\"\n\nassert solution(\n\"\"\"\n4\n5\n5\n5\n5\n\"\"\"\n) == \"85\"\n\nassert solution(\n\"\"\"\n7\n20\n10\n7\n5\n2\n1\n\"\"\"\n) == \"99\"\n\nassert solution(\n\"\"\"\n1\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"1\n10\n2\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"2\n10\n2\n\"\"\"\n) == \"16\"\n\nassert solution(\n    \"\"\"2\n10\n3\n\"\"\"\n) == \"18\"\n\nassert solution(\n    \"\"\"10\n10\n2\n\"\"\"\n) == \"20\"\n\nassert solution(\n    \"\"\"10\n10\n3\n\"\"\"\n) == \"22\""
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\n-----\n\"\"\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100\\n100\\n100\\n100') == '0'\nassert solution('1\\n2\\n3\\n4') == '10'\nassert solution('1\\n2\\n3\\n10') == '15'\nassert solution('2\\n2\\n3\\n10') == '15'\nassert solution('3\\n2\\n3\\n10') == '15'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('60\\n300\\n220\\n420') == '520'\nassert solution('60\\n300\\n220\\n420') == '520'\nassert solution('60\\n300\\n220\\n420\\n') == '520'\nassert solution('60\\n300\\n220\\n420\\n') == '520'\nassert solution('60\\n300\\n220\\n420\\n') == '520'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10\\n10\\n10\\n10') == '10'\nassert solution('20\\n10\\n10\\n10') == '40'\nassert solution('10\\n10\\n10\\n100') == '110'\nassert solution('10\\n10\\n100\\n10') == '120'\nassert solution('10\\n10\\n10\\n1000') == '1110'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"1000\\n100\\n10\\n100\") == \"1100\"\nassert solution(\"10\\n100\\n10\\n100\") == \"1100\"\nassert solution(\"1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"2\\n2\\n2\\n2\") == \"4\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('600 300 220 420') == '520'\nassert solution('2 2 1 1') == '6'\nassert solution('9 9 10 10') == '90'\nassert solution('1 1 1 1') == '2'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('1 2 1 1 1') == '0'\nassert solution('3 2 1 3') == '0'\nassert solution('5 2 1 3 2 1 2') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\n\"5\\n2 4 4 0 2\\n2 4 4 0 2\") == \"0\"\nassert solution(\n\"5\\n2 4 4 0 2\\n2 4 4 0 2\") == \"0\"\nassert solution(\n\"5\\n2 4 4 0 2\\n2 4 4 0 2\") == \"0\"\nassert solution(\n\"5\\n2 4 4 0 2\\n2 4 4 0 2\\n2 4 4 0 2\") == \"0\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 4 0 2''') == '4'\nassert solution('''5\n2 4 4 0 2''') == '4'\nassert solution('''5\n3 5 2 3 1''') == '0'\nassert solution('''5\n1 1 1 1 1''') == '0'\nassert solution('''5\n2 2 2 2 2''') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('3 2 2 1') == '0'\nassert solution('3 1 2') == '1'\nassert solution('2 1 1 1') == '1'\nassert solution('1 1 1 1') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('3 4 4 0 2') == '0'\nassert solution('3 4 4 2') == '2'\nassert solution('5 5 5 5 5') == '6'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('1 1 1 1 1') == '0'\nassert solution('2 2 2 2 2') == '1'\nassert solution('5 5 5 5 5') == '0'\nassert solution('1 2 1 2 1') == '2'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 4 4 0 2''') == '4'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1''') == '0'\nassert solution('''4\n3 0 2 3''') == '0'\nassert solution('''4\n1 2 3 4''') == '2'\nassert solution('''5\n2 4 4 0 2''') == '0'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 10') == '84'\nassert solution('2 3 8') == '25'\nassert solution('3 19 11') == '39'\nassert solution('100 9 22') == '65'\nassert solution('1000 2 6') == '1024'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''20 2 5''') == '84'\nassert solution(\n'''20 3 6''') == '29'\nassert solution(\n'''5 1 2''') == '7'\nassert solution(\n'''7 1 2''') == '9'\nassert solution(\n'''7 1 2''') == '9'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '84'\n\n\"\"\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 5') == '84'\nassert solution('4 2 4') == '22'\nassert solution('5 1 1') == '25'\nassert solution('5 100 1') == '95'\nassert solution('6 100 1') == '120'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('3 2 5') == '0'\nassert solution('20 3 4') == '8'\nassert solution('3 4 3') == '9'\nassert solution('3 10 3') == '27'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''20 2 5'''\n    ) == '84'\n\nassert solution(\n'''20 2 5'''\n    ) == '84'\n\nassert solution(\n'''20 10 25'''\n    ) == '60'\n\nassert solution(\n'''20 10 22'''\n    ) == '48'\n\nassert solution(\n'''20 11 22'''\n    ) == '40'"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n\nassert solution(\"1 2 5\") == \"8\"\n\nassert solution(\"100 3 2\") == \"44\"\n\nassert solution(\"20 2 5\") == \"84\"\n\nassert solution(\"100 3 2\") == \"44\""
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"84\""
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 5') == \"84\"\nassert solution('7 6') == \"27\"\nassert solution('21 3 1') == \"17\"\nassert solution('21 7 3') == \"17\"\nassert solution('5 2 5') == \"10\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"10 11 13\") == \"18\"\nassert solution(\"12 33\") == \"6\"\nassert solution(\"1 4\") == \"3\"\nassert solution(\"10 5 4\") == \"10\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC100') == 'ABC100'\nassert solution('ABC200') == 'ABC200'\nassert solution('ABC300') == 'ABC300'\nassert solution('ABC400') == 'ABC400'\nassert solution('ABC500') == 'ABC500'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''100''') == 'ABC100'\nassert solution('''123''') == 'ABC123'\nassert solution('''34''') == 'ABC34'\nassert solution('''56''') == 'ABC56'\nassert solution('''679''') == 'ABC679'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[1:]\nprint(solution(stdin))"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABC680\") == \"ABC100\"\nassert solution(\"ABC2\") == \"ABC02\"\nassert solution(\"ABC22\") == \"ABC022\"\nassert solution(\"ABC111\") == \"ABC111\"\nassert solution(\"ABC1234\") == \"ABC1234\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC680') == 'ABC100'\nassert solution('ABC200') == 'ABC200'\nassert solution('ABC300') == 'ABC300'\nassert solution('ABC400') == 'ABC400'\nassert solution('ABC500') == 'ABC500'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABC400') == 'ABC400'\nassert solution('ABC') == 'ABC'\nassert solution('ABC0') == 'ABC0'\nassert solution('ABC0') == 'ABC0'\nassert solution('ABC20') == 'ABC20'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABC680\") == \"ABC100\"\nassert solution(\"ABCABC\") == \"ABC3\"\nassert solution(\"ABCABCABC\") == \"ABC30\"\nassert solution(\"ABCABCABCABC\") == \"ABC30ABC\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc') == 'ABC'\nassert solution('abc123') == 'ABC123'\nassert solution('abc123xyz') == 'ABC123XYZ'\nassert solution('abc123abc') == 'ABC123ABC'\nassert solution('abc123abc123') == 'ABC123AB'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC680') == 'ABC100'\nassert solution('ABC100') == 'ABC100'\nassert solution('ABC100') == 'ABC100'\nassert solution('ABC100') == 'ABC100'\nassert solution('ABC100') == 'ABC100'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AB', 1) == 'AB1'\nassert solution('ABC', 1) == 'AB1'\nassert solution('ABC', 2) == 'ABC2'\nassert solution('ABC', 3) == 'ABC3'\nassert solution('ABC', 4) == 'ABC4'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5''') == '5'\nassert solution('''2 4''') == '3'\nassert solution('''3 2''') == '2'\nassert solution('''1 1''') == '5'\nassert solution('''4 4''') == '2'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''4 3\n''') == '2'\nassert solution('''5 1\n''') == '4'\nassert solution('''4 2\n''') == '6'\nassert solution('''1 1\n''') == '0'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 5''') == '5'\nassert solution('''5 5''') == '5'\nassert solution('''7 17''') == '7'\nassert solution('''12 19''') == '9'\nassert solution('''9 22''') == '6'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 5''') == '5'\nassert solution('''10 10''') == '5'\nassert solution('''1 3''') == '4'\nassert solution('''1 1''') == '5'\nassert solution('''2 4''') == '3'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 4') == '4'\nassert solution('1 1') == '5'\nassert solution('5 12') == '1'\nassert solution('5 13') == '2'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 1') == 1\nassert solution('1 2') == 0\nassert solution('2 1') == 0\nassert solution('2 2') == 1\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 5') == '5'\n'''"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5\n''') == \"5\"\n\nassert solution('''5 9\n''') == \"9\"\n\nassert solution('''9 4\n''') == \"0\"\n\nassert solution('''1 1\n''') == \"1\"\n\nassert solution('''4 8\n''') == \"7\""
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3\n1\n2\n''') == '2'\nassert solution('''3\n2\n3\n1\n''') == '-1'\nassert solution('''3\n3\n2\n1\n''') == '-1'\nassert solution('''3\n3\n3\n1\n''') == '3'\nassert solution('''4\n4\n1\n2\n3\n4\n''') == '2'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '-1'\nassert solution('3\\n1\\n2\\n') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\\na_1\\na_2\\na_3\") == \"1\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n1\\n2\") == \"2\"\nassert solution(\"2\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n2\") == \"-1\"\nassert solution(\"3\\n3\\n1\\n2\") == \"2\"\nassert solution(\"3\\n3\\n1\\n1\") == \"-1\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3\\n1\\n2\") == \"-1\"\nassert solution(\"1\\n2\\n1\") == \"1\"\nassert solution(\"2\\n1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n1\\n3\") == \"3\"\nassert solution(\"2\\n1\\n2\\n3\") == \"1\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"6,2\") == \"2\"\nassert solution(\"6,2,3\") == \"1\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n6\\n2') == '1'\nassert solution('3\\n6\\n3') == '2'\nassert solution('3\\n2\\n6') == '1'\nassert solution('3\\n3\\n3') == '0'\nassert solution('3\\n3\\n6') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2,2\") == \"1\"\nassert solution(\"2,2,2\") == \"2\"\nassert solution(\"2,2,2,2\") == \"1\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n2\\n6') == '1'\nassert solution('6\\n2\\n6\\n6') == '1'\nassert solution('6\\n2\\n6\\n6\\n6') == '1'\nassert solution('6\\n2\\n6\\n6\\n6\\n6') == '1'\nassert solution('6\\n2\\n6\\n6\\n6\\n6\\n6') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\"\nassert solution(\"5\\n22\\n2\\n22\\n2\") == \"2\"\nassert solution(\"10\\n12\\n2\\n12\\n2\\n2\\n2\\n2\\n2\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"9\"\nassert solution(\"3\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\") == \"3\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('01') == '1'\nassert solution('0101') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n6\n2''') == \"1\"\nassert solution('''3\n6\n2''') == \"1\"\nassert solution('''6\n2\n6\n2\n6\n2\n2''') == \"1\"\nassert solution('''6\n2\n6\n2\n6\n2\n2''') == \"1\"\nassert solution('''6\n2\n6\n2\n6\n2\n2''') == \"1\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n6\n2\n6''') == '1'\nassert solution('''3\n3\n6\n9\n1''') == '0'\nassert solution('''3\n9\n6\n1\n3\n1''') == '2'\nassert solution('''6\n9\n6\n1\n3\n1\n9''') == '0'\nassert solution('''6\n9\n6\n1\n3\n1\n9''') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[6:13]\n\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 2 2 5') == '1'\nassert solution('5 2') == '1'\nassert solution('4 5') == '0'\nassert solution('5 3') == '0'\nassert solution('6 4') == '2'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n---\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '1'\nassert solution('4 1') == '2'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_string) == output_string\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 2') == '2'\nassert solution('2 3') == '0'\nassert solution('2 3 3') == '0'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(1)\n\"\"\"\nfrom math import log"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2\n1 1 2 2 5''') == \"1\"\nassert solution('''5 2\n1 1 2 2 3''') == \"1\"\nassert solution('''5 2\n2 3 2 2 5''') == \"0\"\nassert solution('''5 2\n1 1 1 1 1 5''') == \"2\"\nassert solution('''5 2\n1 3 1 3 1 5''') == \"2\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"3 4\\n1 3 2 3\") == \"2\"\nassert solution(\"1 6\\n1 1 1 1 1 1 1 1\") == \"5\"\nassert solution(\"7 12\\n1 5 2 5 3 5 4 5 5 6\") == \"8\"\nassert solution(\"6 3\\n1 1 2 3 4 5 6\") == \"3\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 1 2\") == \"Yes\"\nassert solution(\"6 1 1\\n6 1 1\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2\n3 1 2\n6 1 1\n''') == 'Yes'\n\nassert solution(\n'''\n5\n6 1 1\n3 1 2\n1 1 3\n3 1 2\n5 1 2\n''') == 'No'\n\nassert solution(\n'''\n6\n6 1 1\n3 1 2\n3 1 2\n3 1 2\n5 1 2\n''') == 'Yes'\n\nassert solution(\n'''\n3\n3 1 2\n3 1 2\n3 1 2\n''') == 'Yes'\n\nassert solution(\n'''\n10\n1 3 2\n1 3 2\n1 3 2\n1 3 2\n1 3 2\n1 3 2\n1 3 2\n1 3 2\n1 3 2\n1 3 2\n''') == 'No'"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 2') == 'Yes'\nassert solution('6 1 1') == 'Yes'\nassert solution('4 2 1') == 'No'\nassert solution('6 1 1') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 1 2') == 'Yes'\nassert solution('6 1 1\\n3 1 2') == 'No'\nassert solution('2\\n4 1 2\\n4 1 2') == 'Yes'\nassert solution('2\\n3 1 2\\n4 1 2') == 'Yes'\nassert solution('4\\n2 1 2 3\\n1 2 2 3') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\n\n-----\n\n\"\"\""
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"2\\n3 2 2\\n6 1 1\") == \"No\"\nassert solution(\"2\\n3 4 2\\n6 1 1\") == \"No\"\nassert solution(\"2\\n3 5 2\\n6 1 1\") == \"No\"\nassert solution(\"2\\n3 4 2\\n6 2 1\") == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"2 1 3\") == \"Yes\"\nassert solution(\"3 1 2\") == \"Yes\"\nassert solution(\"3 2 1\") == \"Yes\"\nassert solution(\"3 2 3\") == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == \"Yes\"\nassert solution('2\\n3 1 2\\n6 1 1\\n0') == \"No\"\nassert solution('2\\n3 1 2\\n3 1 1') == \"Yes\"\nassert solution('2\\n3 1 2\\n3 1 1\\n0') == \"No\"\nassert solution('2\\n3 1 2\\n3 1 1\\n2') == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 2\\n6 1 1\\n') == 'Yes'\nassert solution('3\\n1 2 2\\n6 1 1\\n5 4 3') == 'No'\nassert solution('1\\n2 3\\n4 5 6\\n') == 'No'\nassert solution('2\\n1 1 1\\n2 3 3\\n') == 'No'\nassert solution('3\\n1 2 3\\n1 2 3\\n') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    input_data=\"2\\n3 1 2\\n6 1 1\"\n) == \"Yes\"\nassert solution(\n    input_data=\"2\\n5 3 0\\n2 2 4\"\n) == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '2'\nassert solution('100 101') == '101'\nassert solution('1 100') == '101'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\"\n\n\"\"\"\n\"\"\"\nfrom __future__ import print_function\nfrom __future__ import division"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '1 3'\n) == '2'\nassert solution(\n    '5 8'\n) == '10'\nassert solution(\n    '10 20'\n) == '20'\nassert solution(\n    '100 80'\n) == '120'\n\nassert solution(\n    '3 4'\n) == '4'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"100 200\") == \"201\"\nassert solution(\"100 200 100\") == \"100\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 1') == '2'\nassert solution('4 4') == '4'\nassert solution('1 1') == '2'\nassert solution('1 10') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"3 3\") == \"4\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '2'\nassert solution('1 2 5') == '3'\nassert solution('1 7') == '2'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 1') == '2'\nassert solution('2 2') == '2'\nassert solution('3 1') == '4'\nassert solution('30 10') == '30'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"5 5\") == \"6\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\n'''\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\nassert solution('2 3\\n2 1\\n3 1') == '0'\nassert solution('5 4\\n1 2\\n2 3\\n4 3\\n5 1') == '2'\nassert solution('7 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '4'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '4'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n1 3\") == \"\"\nassert solution(\"1 2\\n1 3\\n2 3\") == \"\"\nassert solution(\"1 2\\n1 3\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == '4'\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == '4'\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\") == '4'\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\") == '4'\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\") == '4'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 1\") == \"2\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str\n\n\"\"\""
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\n'''\n\"\"\"\n@param {str} line\n@return {int}\n\"\"\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\nfrom collections import defaultdict\nfrom itertools import combinations\nfrom sys import stdin"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 3\\n1 3\\n1 3\\n1 3') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 3\\n1 3\\n1 3\\n1 3') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 3\\n1 3\\n1 3\\n1 3') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 3\\n1 3\\n1 3\\n1 3') == '4'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 7 5''') == '7'\n'''\nA, B, C = map(int, stdin.split())\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('0 0 0') == '0'\nassert solution('10 5 2') == '2'\nassert solution('5 7 5') == '2'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1 2 3') == None\nassert solution('2 4 3') == 2\nassert solution('1 3 2') == 3\nassert solution('10 2 19') == 19\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('10 9 4') == '9'\nassert solution('-100 200 300') == '200'\nassert solution('1 2 3') == '4'\nassert solution('5 7 5') == '7'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5 7 5'''\n) == '7'\nassert solution(\n'''-5 -7 -5'''\n) == '-7'\nassert solution(\n'''100 100 100'''\n) == '-100'\nassert solution(\n'''100 100 10'''\n) == '-10'\nassert solution(\n'''4 -2 -3'''\n) == '-2'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 7 5''') == '7'\n'''"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '3'\nassert solution('3 4 4') == '3'\nassert solution('-2 0 -2') == '0'\nassert solution('-2 -1 0') == '-1'\nassert solution('-3 -1 0') == '-1'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == 7\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 10 30 10 10 30') == '110 10'\nassert solution('1 10 30 10 10 30') == '110 10'\nassert solution('1 10 30 10 10 30') == '110 10'\nassert solution('1 10 30 10 10 30') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 100') == '110 10'\nassert solution('1 2 10 20 15 100') == '110 10'\nassert solution('1 2 10 20 15 100') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 1 2 3 1 2') == '110 50'\nassert solution('1 1 2 1 1 2') == '110 50'\nassert solution('1 2 2 2 2 2') == '110 50'\nassert solution('1 1 1 1 1 1') == '110 50'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"1 2 10 20 15 200\"\n) == \"110 10\"\nassert solution(\n    \"1 2 10 20 15 200\"\n) == \"110 10\"\nassert solution(\n    \"1 2 10 20 15 200\"\n) == \"110 10\"\nassert solution(\n    \"1 2 10 20 15 200\"\n) == \"110 10\"\nassert solution(\n    \"1 2 10 20 15 200\"\n) == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 10 20 15 200''') == '110 10'\nassert solution('''1 2 10 20 15 200''') == '110 10'\nassert solution('''2 2 5 2 2 5 100 200''') == '110 10'\nassert solution('''2 2 5 2 2 5 100 200''') == '110 10'\nassert solution('''2 2 5 2 2 5 100 200''') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 2 1 1 1 1') == '0 0'\nassert solution('1 2 10 1 1 1 1') == '0 0'\nassert solution('1 2 10 1 1 1 1') == '0 0'\nassert solution('1 2 10 1 1 1 1') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 3 4 5') == '1 1'\nassert solution('3 2 1 4 5') == '1 0'\n\"\"\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('internationalization') == 'i18n'"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('abc') == 'abc'\nassert solution('internationalization') == 'i18n'\nassert solution('ab') == 'ab'\nassert solution('abac') == 'abac'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello') == 'hl'\nassert solution('internationalization') == 'i18n'\nassert solution('hello') == 'hl'\nassert solution('f') == 'f'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"apple\") == \"a1\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcd\") == \"abcd\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('abcde') == 'abcde'\nassert solution('simple') =='sim'\nassert solution('python') == 'py'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"python\") == \"py\"\nassert solution(\"hello\") == \"hl\"\nassert solution(\"pythoniscool\") == \"pico\"\nassert solution(\"welcome\") == \"wel\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"internationalization\"\n) == \"i18n\"\nprint(solution(\"internationalization\"))\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello') == 'hell'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('ab') == 'ab'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello') == 'hl'\nassert solution('first') == 'f'\nassert solution('love') == 'lv'\nassert solution('it') == 'i'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('aa') == ''\nassert solution('aa ') == ''\nassert solution('a ') == ''\nassert solution(' ') == ''\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('pot') == 'NO'\nassert solution('top') == 'YES'\n\n'''\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"tio\") == \"YES\"\nassert solution(\"roo\") == \"NO\"\nassert solution(\"roo\") == \"NO\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"top\") == \"YES\"\nassert solution(\"pot\") == \"YES\"\nassert solution(\"x\") == \"NO\"\nassert solution(\"x\" * 3) == \"NO\"\nassert solution(\"xx\") == \"NO\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('top') == 'YES'\nassert solution('pot') == 'NO'\nassert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('pot') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('pot') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pot\") == \"YES\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\n\n\"\"\"\n\"\"\"\nWrite a program that finds all of the anagrams of a word in a string.\n\n-   Input:\n        a string and a word\n-   Output:\n        a list of all the starting indices of the anagrams of the word in the string\n\n-   Example:\n        Input:\n        string = \"ifdw qwfhjkgdghjie bwjcfiw qwjfhjkgdghjiqfkqj\"\n        word = \"ifdw\"\n        Output:\n        [1, 2, 4, 7, 8, 11, 14]\n\n-   If no anagrams are found, return an empty list [].\n-   Note:\n        -   The input string does not contain any spaces and all words are in lowercase.\n        -   You can assume that there is only one anagram in the input string.\n-   Hint:\n        -   Use a dictionary to store the count of each character.\n        -   Use collections.defaultdict to avoid KeyError.\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('top') == 'NO'\nassert solution('top') == 'NO'\nassert solution('pot') == 'YES'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('a', 1) == 'a'\nassert solution('b', 1) == 'b'\nassert solution('ba', 1) == 'a'\nassert solution('bbbb', 1) == 'b'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aba',4) == 'b'\nassert solution('a',3) == 'a'\nassert solution('ababc',2) == 'bab'\nassert solution('a',1) == ''\nassert solution('',5) == ''\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('aba', 3) == 'ba'\nassert solution('aba', 2) == 'ab'\nassert solution('aba', 1) == 'a'\nassert solution('aba', 0) == ''\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('ab', 2) == 'ab'\nassert solution('ab', 3) == 'ab'\nassert solution('ab', 4) == 'ba'\nassert solution('ab', 5) == 'aba'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abc', 2) == 'b'\nassert solution('ac', 2) == 'c'\nassert solution('abcdefg', 3) == 'def'\nassert solution('abcdefgh', 3) == 'defg'\nassert solution('abcdefgh', 4) == 'defgh'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('aab') == 'ab'\nassert solution('aabc') == 'ab'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"aba\", 1) == \"a\"\nassert solution(\"aba\", 4) == \"ba\"\nassert solution(\"abab\", 4) == \"ab\"\nassert solution(\"abab\", 3) == \"b\"\nassert solution(\"abab\", 2) == \"ab\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''aba''') == 'b'\nassert solution('''ababab''') == 'abab'\nassert solution('''baa''') == 'a'\nassert solution('''baaba''') == 'ba'\nassert solution('''baab''') == 'b'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"aba\", 4) == \"b\"\nassert solution(\"abc\", 4) == \"b\"\nassert solution(\"acb\", 4) == \"b\"\nassert solution(\"abca\", 4) == \"b\"\nassert solution(\"abcc\", 4) == \"b\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('abcd') == 'abcd'\nassert solution('abcdabcd') == 'abcd'\nassert solution('abcdefghij') == 'abcd'\nassert solution('abcdefghijabcd') == 'abcd'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n0 0 1\n1 0 2\n1 1 3\n3 1 4''') == '9'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n0 0 1\n3 0 2\n3 1 4''') == '9'\n'''\n\n'''\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nassert solution(\"5 4 2\\n2 1 1\\n2 2 3\\n2 2 3\") == \"3\"\nassert solution(\"5 4 2\\n2 1 1\\n2 1 1\\n2 1 1\") == \"2\"\nassert solution(\"5 4 2\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\") == \"2\"\nassert solution(\"5 4 2\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\") == \"2\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 2\\n2 1 1\\n3 3 4') == '9'\nassert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\nassert solution('5 4 3\\n2 1 1\\n3 3 4') == '2'\nassert solution('5 4 3\\n2 1 1\\n3 3 5') == '4'\nassert solution('5 4 3\\n2 1 1\\n3 3 4') == '2'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 2\\n2 1 1\\n3 3 4\\n') == '9'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\nassert solution('6 5 2\\n2 1 1\\n3 3 4\\n') == '0'\nassert solution('7 7 3\\n2 1 1\\n3 3 4\\n') == '0'\nassert solution('8 8 3\\n2 1 1\\n3 3 4\\n') == '0'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''1 1 1\n1 1 1''') == '0'\nassert solution('''2 2 3\n2 1 1\n3 3 4''') == '9'\nassert solution('''3 3 4\n2 1 1\n3 3 4''') == '9'\nassert solution('''1 1 1\n2 2 2\n2 2 2''') == '8'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5 4 2\n2 1 1\n3 3 4\"\"\") == \"9\"\nassert solution(\"\"\"10 10 3\n7 3 1\n5 1 4\n9 6 2\n6 5 5\n7 9 9\n6 6 7\n1 2 3\n4 6 8\n1 1 4\n2 2 2\n3 3 3\n3 2 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3\n3 3 3"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom sys import stdin, stdout\nimport re"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''100 100 1\n0 0 1\n1 1 2\n1 1 3\n1 1 4\n1 1 5\n1 1 6\n1 1 7\n1 1 8\n1 1 9\n1 1 10\n1 1 11\n1 1 12\n1 1 13\n1 1 14\n1 1 15\n1 1 16\n1 1 17\n1 1 18\n1 1 19\n1 1 20\n1 1 21\n1 1 22\n1 1 23\n1 1 24\n1 1 25\n1 1 26\n1 1 27\n1 1 28\n1 1 29\n1 1 30\n1 1 31\n1 1 32\n1 1 33\n1 1 34\n1 1 35\n1 1 36\n1 1 37\n1 1 38\n1 1 39\n1 1 40\n1 1 41\n1 1 42\n1 1 43\n1 1 44\n1 1 45\n1 1 46\n1 1 47\n1 1 48\n1 1 49\n1 1 50\n1 1 51\n1 1 52\n1 1 53\n1 1 54\n1 1 55\n1 1 56\n1 1 57\n1 1 58\n1 1 59\n1 1 60\n1 1 61\n1 1 62\n1 1 63\n1 1 64\n1 1 65\n1 1 66\n1 1 67\n1 1 68\n1 1 69\n1 1 70\n1 1 71\n1 1 72\n1 1 73\n1 1 74\n1 1 75\n1 1 76\n1 1 77\n1 1 78\n1 1 79\n1 1 80\n1 1 81\n1 1 82\n1 1 83\n1 1 84\n1 1 85\n1 1 86\n1 1 87\n1 1 88\n1 1 89\n1 1 90\n1 1 91\n1 1 92\n1 1 93\n1 1 94\n1 1 95\n1 1 96\n1 1 97\n1 1 98\n1 1 99\n1 1 100\n1 1 101\n1 1 102\n1 1 103\n1 1 104\n1 1 105\n1 1 106\n1 1 107\n1 1 108\n1 1 109\n1 1 110\n1 1 111\n1 1 112\n1 1 113\n1 1 114\n1 1 115\n1 1 116\n1 1 117\n1 1 118\n1 1 119\n1 1 120\n1 1 121\n1 1 122\n1 1 123\n1 1 124\n1 1 125\n1 1 126\n1 1 127\n1 1 128\n1 1 129\n1 1 130\n1 1 131\n1 1 132\n1 1 133\n1 1 134\n1 1 135\n1 1 136\n1 1 137\n1 1 138\n1 1 139\n1 1 140\n1 1 141\n1 1 142\n1 1 143\n1 1 144\n1 1 145\n1 1 146\n1 1 147\n1 1 148\n1 1 149\n1 1 150\n1 1 151\n1 1 152\n1 1 153\n1 1 154\n1 1 155\n1 1 156\n1 1 157\n1 1 158\n1 1 159\n1 1 160\n1 1 161\n1 1 162\n1 1 163\n1 1 164\n1 1 165\n1 1 166\n1 1 167\n1 1 168\n1 1 169\n1 1 170\n1 1 171\n1 1 172\n1 1 173\n1 1 174\n1 1 175\n1 1 176\n1 1 177\n1 1 178\n1 1 179\n1 1 180\n1 1 181\n1 1 182\n1 1 183\n1 1 184\n1 1 185\n1 1 186\n1 1 187\n1 1 188\n1 1 189\n1 1 190\n1 1 191\n1 1 192\n1 1 193\n1 1 194\n1 1 195\n1 1 196\n1 1 197\n1 1 198\n1 1 199\n1 1 200\n1 1 201\n1 1 202\n1 1 203\n1 1 204\n1 1 205\n1 1 206\n1 1 207\n1 1 208\n1 1 209\n1 1 210\n1 1 211\n1 1 212\n1 1 213\n1 1 214\n1 1 215\n1 1 216\n1 1 217\n1 1 218\n1 1 219\n1 1 220\n1 1 221\n1 1 222\n1 1 223\n1 1 224\n1 1 225\n1 1 226\n1 1 227\n1 1 228\n1 1 229\n1 1 230\n1 1 231\n1 1 232\n1 1 233\n1 1 234\n1 1 235\n1 1 236\n1 1 237\n1 1 238\n1 1 239\n1 1 240\n1 1 241\n1 1 242\n1 1 243\n1 1 244\n1 1 245\n1 1 246\n1 1 247\n1 1 248\n1 1 249\n1 1 250\n1 1 251\n1 1 252\n1 1 253\n1 1 254\n1 1 255\n1 1 256\n1 1 257\n1 1 258\n1 1 259\n1 1 260\n1 1 261\n1 1 262\n1 1 263\n1 1 264\n1 1 265\n1 1 266\n1 1 267\n1 1 268\n1 1 269\n1 1 270\n1 1 271\n1 1 272\n1 1 273\n1 1 274\n1 1 275\n1 1 276\n1 1 277\n1 1 278\n1 1 279\n1 1 280\n1 1 281\n1 1 282\n1 1 283\n1 1 284\n1 1 285\n1 1 286\n1 1 287\n1 1 288\n1 1 289\n1 1 290\n1 1 291\n1 1 292\n1 1 293\n1 1 294\n1 1 295\n1 1 296\n1 1 297\n1 1 298\n1 1 299\n1 1 300\n1 1 301\n1 1 302\n1 1 303\n1 1 304\n1 1 305\n1 1 306\n1 1 307\n1 1 308\n1 1 309\n1 1 310\n1 1 311\n1 1 312\n1 1 313\n1 1 314\n1 1 315\n1 1 316\n1 1 317\n1 1 318\n1 1 319\n1 1 320\n1 1 321\n1 1 322\n1 1 323\n1 1 324\n1 1 325\n1 1 326\n1 1 327\n1 1 328\n1 1 329\n1 1 330\n1 1 331\n1 1 332\n1 1 333\n1 1 334\n1 1 335\n1 1 336\n1 1 337\n1 1 338\n1 1 339\n1 1 340\n1 1 341\n1 1 342\n1 1 343\n1 1 344\n1 1 345\n1 1 346\n1 1 347\n1 1 348\n1 1 349\n1 1 350\n1 1 351\n1 1 352\n1 1 353\n1 1 354\n1 1 355\n1 1 356\n1"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6 5 1\") == \"12\\n11\\n0\"\nassert solution(\"5\\n6 5 1\") == \"12\\n11\\n0\"\nassert solution(\"5\\n6 5 1\\n6 10 1\") == \"12\\n11\\n0\"\nassert solution(\"5\\n6 5 1\\n6 10 1\\n10 10 1\") == \"12\\n11\\n0\"\nassert solution(\"5\\n6 5 1\\n6 10 1\\n10 10 1\\n10 30 1\") == \"12\\n11\\n0\\n12\\n11\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n6 5 1\n1 10 1''') == '''12\n11\n0'''\n\nassert solution('''3\n2 5 1\n1 10 1\n''') == '''0\n11\n0'''\n\nassert solution('''1\n7 2 1\n1 10 1\n''') == '''0\n11\n0'''\n\nassert solution('''2\n1 100 1\n1 10 1\n''') == '''0\n0'''\n\nassert solution('''1\n1 10 1\n2 10 1\n''') == '''0\n0'''"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n6 5 1''') == \"12\\n11\\n0\"\nassert solution('''6\n3 1 2\n2 10 1''') == \"12\\n11\\n0\"\n\n\"\"\""
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"6\\n3 1 3\\n1 10 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"4\\n4 2 1\\n2 1 2\\n3 1 2\\n1 3 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"2\\n2 1 2\\n1 2 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n\") == \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3\\n'\n    '6 5 1\\n'\n    '1 10 1\\n'\n) == '12\\n'\n\nassert solution(\n    '3\\n'\n    '2 2 1\\n'\n    '1 2 1\\n'\n) == '0\\n'\n\nassert solution(\n    '3\\n'\n    '2 2 1\\n'\n    '2 2 2\\n'\n) == '2\\n'\n\nassert solution(\n    '3\\n'\n    '3 3 3\\n'\n    '2 1 2\\n'\n    '2 1 2\\n'\n    '2 1 2\\n'\n    '2 1 2\\n'\n) == '0\\n'\n\nassert solution(\n    '3\\n'\n    '3 3 3\\n'\n    '2 1 2\\n'\n    '2 1 2\\n'\n    '2 1 2\\n'\n    '2 1 2\\n'\n    '2 1 2\\n'\n) == '1\\n'"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '1'\nassert solution('3 1 3') == '12'\nassert solution('5 1 2') == '12'\nassert solution('10 1 2') == '11'\nassert solution('20 1 2') == '12'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 5 1') == '12\\n11\\n0\\n'\nassert solution('1 10 1') == '0\\n'\nassert solution('1 10 1') == '0\\n'\nassert solution('2 5 1') == '12\\n11\\n0\\n'\nassert solution('1 10 1') == '0\\n'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n6 5 1''') == '12\\n11\\n0'\nassert solution('''6\n1 10 1''') == '12\\n11\\n0'\nassert solution('''5\n1 10 1''') == '12\\n11\\n0'\nassert solution('''1\n1 10 1''') == '0\\n0'\nassert solution('''3\n2 1 1''') == '1\\n1\\n0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6 5 1\") == \"12\\n11\\n0\"\nassert solution(\"3\\n6 5 1\") == \"12\\n11\\n0\"\n\"\"\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n*.\\n*.\\n') == '*.*\\n.*.*\\n.*.*\\n.*.*\\n'\nassert solution('4 4\\n.*.*.*.*\\n.*.*.*.*\\n.*.*.*.*\\n.*.*.*.*\\n.*.*.*.*\\n.*.*.*.*') == '**\\n**\\n*.*\\n.*.*\\n.*.*\\n*.*\\n**\\n**\\n*.*\\n**\\n**'\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\".*\\n.*\") == \"..\\n..\"\nassert solution
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"...\") == \"*\"\nassert solution(\"..*\") == \"**\"\nassert solution(\"...\".split(\" \")) == \"**\"\nassert solution(\"*\".split(\" \")) == \"*\"\n\"\"\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2'\n    '..'\n    '*.') == '*..'\n\nassert solution('4 3'\n    '**'\n    '.*.'\n    '**') == '*.*'\n\nassert solution('3 3'\n    '*.'\n    '*.'\n    '*.') == '*.*'\n\nassert solution('10 10'\n    '*.*'\n    '**.*'\n    '*.*.*'\n    '*.**'\n    '*.*.*'\n    '*.*.*'\n    '*.*.*'\n    '*.**'\n    '*.**'\n    '*.**') == '*.*.*' * 10\n\nassert solution('15 15'\n    '.*'\n    '.*'\n    '**'\n    '*.*'\n    '*.**'\n    '*.*.*'\n    '*.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*'\n    '.*.*') == '*.*.*' * 15\n\"\"\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('.*') == '.*'\nassert solution('..*') == '..*'\nassert solution('..*') == '.*'\nassert solution('***') == '.*'\nassert solution('*.*') == '.*'\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n.\n.*''') == '''*.\n.*'''\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"..\") == \"..\"\nassert solution(\"..*\") == \"..*\"\nassert solution(\"*..\") == \".*.*\"\nassert solution(\"**\") == \"**\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 3\n.\n.*\n\"\"\"\n) == \"\"\"\n.\n.*\n.*\n\"\"\"\n\nassert solution(\n\"\"\"\n2 3\n.\n.*\n\"\"\"\n) == \"\"\"\n.\n.*\n.*\n\"\"\"\n\nassert solution(\n\"\"\"\n2 4\n.*\n.*\n.*\n.*\n\"\"\"\n) == \"\"\"\n.*\n.*\n.*\n.*\n\"\"\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint('Passed all test cases!')"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"2\\n2\\n2\\n2\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n1\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n1\\n4\\n5') == 'YES'\nassert solution('2\\n2\\n1\\n5') == 'NO'\nassert solution('2\\n1\\n2\\n3\\n4') == 'YES'\nassert solution('2\\n1\\n2\\n3\\n5') == 'NO'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 6 1 4 5''') == 'YES'\nassert solution('''5\n1 2 1 3 4 5''') == 'NO'\nassert solution('''5\n2 4 1 4 3''') == 'NO'\nassert solution('''5\n1 2 1 1 3 4 5''') == 'NO'\nassert solution('''5\n1 2 2 1 3 4 5''') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 1\") == \"NO\"\nassert solution(\"2\\n2 1 3\") == \"NO\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"2\\n1 2\") == \"YES\"\nassert solution(\"2\\n2 2\") == \"YES\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 6 1 4 5''') == 'YES'\nassert solution('''2\n1 2''') == 'NO'\nassert solution('''3\n1 2 3''') == 'NO'\nassert solution('''4\n1 2 3 4''') == 'YES'\nassert solution('''5\n2 3 4 5 6''') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2\n2 6 1 4 5\n'''\n) == 'YES'\n\nassert solution(\n'''\n2\n2 4 1 4 5\n'''\n) == 'NO'\n\nassert solution(\n'''\n5\n2 6 1 4 5\n'''\n) == 'YES'\n\nassert solution(\n'''\n3\n2 4 1 3\n'''\n) == 'NO'\n\nassert solution(\n'''\n4\n2 2 2 2\n'''\n) == 'NO'"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n6 1 4 5') == 'YES'\nassert solution('3\\n2 1') == 'NO'\nassert solution('5\\n2 1 4 5 6 8') == 'YES'\nassert solution('7\\n2 1 4 5 6 7 8 9 10') == 'NO'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n2 6 1 4 5''') == 'YES'\nassert solution('''5\n2 6 1 4 5''') == 'NO'\nassert solution('''8\n2 3 1 7 7 5 7 7''') == 'YES'\nassert solution('''8\n1 3 1 7 7 5 7 7''') == 'NO'\nassert solution('''3\n1 2 3''') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8') == '2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '1'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '2'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1''') == '3'\nassert solution('''1\n2\n1\n2\n1\n2\n1''') == '2'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1''') == '3'\nassert solution('''2\n1\n2\n1\n2\n1\n2\n1\n2''') == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n4\\n3\\n2\\n1') == '2'\nassert solution('2\\n4\\n3\\n1\\n2') == '3'\nassert solution('2\\n4\\n3\\n2\\n1') == '4'\nassert solution('2\\n4\\n3\\n2\\n1') == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '2'\nassert solution('''1 2 3 4 5''') == '2'\nassert solution('''8''') == '3'\nassert solution('''1 2 2 1 2 1 1 2''') == '3'\nassert solution('''1 3 3''') == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2\\n3\\n4\\n1\\n2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3\\n4\\n1\\n2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2\\n3\\n4\\n1\\n2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3\\n4\\n1\\n2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3\\n4\\n1\\n2'"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '2'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '3'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '4'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '3'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('3\\n1 3') == '2'\nassert solution('4\\n1 1 2 3') == '4'\nassert solution('5\\n1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2\\n3\\n4\\n1\\n2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''7 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''7 3\n1 5\n22 5\n987 13''') == '5'\nassert solution('''7 3\n1 5\n22 5\n987 13''') == '77'\nassert solution('''7 3\n1 5\n22 5\n987 13''') == '9'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 3''') == '3'\nassert solution('''1 5''') == '1'\nassert solution('''22 5''') == '5'\nassert solution('''987 13''') == '77'\nassert solution('''4 4''') == '3'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '0'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '0'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '1'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('2 1 1 1 1 1') == '1'\nassert solution('1 2 3 4 5') == '3'\nassert solution('2 3 2 2 1') == '2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3''') == '3'\nassert solution('''1 5''') == '1'\nassert solution('''22 5''') == '5'\nassert solution('''987 13''') == '77'\nassert solution('''9 7''') == '7'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12') == 3\nassert solution('1 2 3 4 5') == 1\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12') == 1\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22') == 4\nassert solution
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5') == '3'\nassert solution('7 3') == '1'\nassert solution('1 5') == '5'\nassert solution('22 5') == '77'\nassert solution('987 13') == '5'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input('')) == output('')\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''4 2\ncodeforces\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''4 2\ncodeforces\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''2\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '''0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''1\n2\nabc\n1 1\n\n''') == '''0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n'''\n\nassert solution('''2\n2\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncodeforces\n1 3\n10 5\ncod"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abca') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('codeforces') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('codeforces') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('codeforces') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('codeforces') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abca') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('codeforces') == \"2 1 1 2 9 2 2 2 5 2 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution('qwertyuioplkjhgfdsazxcvbnm') == \"26 10\"\n\n\n'''"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == [4, 0, 0, 0]\nassert solution(\"codeforces\") == [9, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n\n\"\"\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n'''\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == '0'\nassert solution('ab') == '0'\nassert solution('abc') == '0'\nassert solution('abcde') == '0'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abca\") == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(\"codeforces\") == '0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution(\"codeforces\") == '0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution(\"qwertyuiop\") == '2 1 1 2 9 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n'''\n'''\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"input_test.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\""
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n3 2 5\n3 2 4\n3 2 6\n3 2 7''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n3 2 5\n3 2 4\n3 2 6\n3 2 7\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 6\n3 2 7\n3 2 5\n3 2 6\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 6\n3 2 5\n3 2 7\n3 2 8\n3 2 9\n3 2 5\n3 2 6\n3 2 5\n3 2 4\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 4\n3"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 2\") == '1'\nassert solution(\"1 2 1\") == '1'\nassert solution(\"1 3 2\") == '1'\nassert solution(\"1 3 1\") == '1'\nassert solution(\"1 3 1\") == '1'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\""
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n7\\n1 2 4 6') == 'YES'\nassert solution('5\\n1 2 4 6 8') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'YES'\nassert solution('7\\n1 2 3 4 5 6 7') == 'YES'\nassert solution('1\\n2') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''7\n5\n4 2 1 3 1\n3\n1 3 2 4 1\n''') == 'NO'\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''7\n7\n4 2 1 3 1 4 5 6\n2\n1 3 2 4 1\n3\n1 3 2 4 1\n4\n1 3 2 4 1\n5\n1 3 2 4 1\n6\n1 3 2 4 1\n''') == 'NO'\nassert solution('''7\n7\n4 2 1 3 1 4 5 6\n2\n1 3 2 4 1\n3\n1 3 2 4 1\n4\n1 3 2 4 1\n5\n1 3 2 4 1\n6\n1 3 2 4 1\n''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('test') == 'YES'\nassert solution('1') == 'NO'\nassert solution('1\\ntest') == 'YES'\nassert solution('1\\n2\\ntest') == 'NO'\nassert solution('1\\ntest') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4') == 'YES'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6') == 'NO'\nassert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n3\\n4') == 'YES'\nassert solution('1\\n3\\n3\\n3') == 'YES'\nassert solution('2\\n3\\n3\\n4') == 'NO'\nassert solution('2\\n4\\n3\\n4') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('1\\n3') == 'NO'\nassert solution('1\\n4') == 'NO'\nassert solution('1\\n5') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''6\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''6\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES\\n'\n\n\n'''\n\n## My solution\n\nimport sys"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\") == \"22\"\nassert solution(\"\"\"5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\") == \"13\"\nassert solution(\"\"\"1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3') == 22\nassert solution('6 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5') == 13\nassert solution('6 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5') == 13\nassert solution('6 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5') == 13\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5') == 22\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\n\nn, m, k = list(map(int, sys.stdin.readline().split()))\nroads = [list(map(int, sys.stdin.readline().split())) for _ in range(m)]"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '13'\n\n\"\"\"\n\n\"\"\"\n\nThe second solution can be easily implemented by the two-way roads. For each of them we can find the cheapest cost to travel the roads. Then we can subtract the costs of the two-way roads from the cost of the cheapest way. We can always take the cheapest way.\n\n\n\"\"\""
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '13'\n\"\"\""
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4 1\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '13'\nassert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22'\nassert solution('1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\\n1 6 1\\n1 7 1\\n1 8 1\\n1 9 1\\n1 10 1\\n1 11 1\\n1 12 1\\n1 13 1\\n1 14 1\\n1 15 1\\n1 16 1\\n1 17 1\\n1 18 1\\n1 19 1\\n1 20 1\\n1 21 1\\n1 22 1\\n1 23 1\\n1 24 1\\n1 25 1\\n1 26 1\\n1 27 1\\n1 28 1\\n1 29 1\\n1 30 1\\n1 31 1\\n1 32 1\\n1 33 1\\n1 34 1\\n1 35 1\\n1 36 1\\n1 37 1\\n1 38 1\\n1 39 1\\n1 40 1\\n1 41 1\\n1 42 1\\n1 43 1\\n1 44 1\\n1 45 1\\n1 46 1\\n1 47 1\\n1 48 1\\n1 49 1\\n1 50 1\\n1 51 1\\n1 52 1\\n1 53 1\\n1 54 1\\n1 55 1\\n1 56 1\\n1 57 1\\n1 58 1\\n1 59 1\\n1 60 1\\n1 61 1\\n1 62 1\\n1 63 1\\n1 64 1\\n1 65 1\\n1 66 1\\n1 67 1\\n1 68 1\\n1 69 1\\n1 70 1\\n1 71 1\\n1 72 1\\n1 73 1\\n1 74 1\\n1 75 1\\n1 76 1\\n1 77 1\\n1 78 1\\n1 79 1\\n1 80 1\\n1 81 1\\n1 82 1\\n1 83 1\\n1 84 1\\n1 85 1\\n1 86 1\\n1 87 1\\n1 88 1\\n1 89 1\\n1 90 1\\n1 91 1\\n1 92 1\\n1 93 1\\n1 94 1\\n1 95 1\\n1 96 1\\n1 97 1\\n1 98 1\\n1 99 1\\n1 100 1\\n1 101 1\\n1 102 1\\n1 103 1\\n1 104 1\\n1 105 1\\n1 106 1\\n1 107 1\\n1 108 1\\n1 109 1\\n1 110 1\\n1 111 1\\n1 112 1\\n1 113 1\\n1 114 1\\n1 115 1\\n1 116 1\\n1 117 1\\n1 118 1\\n1 119 1\\n1 120 1\\n1 121 1\\n1 122 1\\n1 123 1\\n1 124 1\\n1 125 1\\n1 126 1\\n1 127 1\\n1 128 1\\n1 129 1\\n1 130 1\\n1 131 1\\n1 132 1\\n1 133 1\\n1 134 1\\n1 135 1\\n1 136 1\\n1 137 1\\n1 138 1\\n1 139 1\\n1 140 1\\n1 141 1\\n1 142 1\\n1 143 1\\n1 144 1\\n1 145 1\\n1 146 1\\n1 147 1\\n1 148 1\\n1 149 1\\n1 150 1\\n1 151 1\\n1 152 1\\n1 153 1\\n1 154 1\\n1 155 1\\n1 156 1\\n1 157 1\\n1 158 1\\n1 159 1\\n1 160 1\\n1 161 1\\n1 162 1\\n1 163 1\\n1 164 1\\n1 165 1\\n1 166 1\\n1 167 1\\n1 168 1\\n1 169 1\\n1 170 1\\n1 171 1\\n1 172 1\\n1 173 1\\n1 174 1\\n1 175 1\\n1 176 1\\n1 177 1\\n1 178 1\\n1 179 1\\n1 180 1\\n1 181 1\\n1 182 1\\n1 183 1\\n1 184 1\\n1 185 1\\n1 186 1\\n1 187 1\\n1 188 1\\n1 189 1\\n1 190 1\\n1 191 1\\n1 192 1\\n1 193 1\\n1 194 1\\n1 195 1\\n1 196 1\\n1 197 1\\n1 198 1\\n1 199 1\\n1 200 1\\n1 201 1"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5 2') == '22'\nassert solution('5 5 4') == '13'\nassert solution('1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n1 3\\n3 3\\n1 5\\n') == '13'"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 5 2') == '22'\nassert solution('6 5 2') == '13'\nassert solution('6 5 4') == '13'\nassert solution('1 2 5') == '22'\nassert solution('2 3 7') == '22'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output(input())\n\n\"\"\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n') == '1\\n'\nassert solution('1\\n2\\n3\\n') == '1\\n'\nassert solution('1\\n3\\n4\\n') == '1\\n'\nassert solution('1\\n2\\n4\\n') == '2\\n'\nassert solution('1\\n2\\n3\\n4\\n') == '1\\n'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n\nassert solution('''2\n1\n5\n100\n''') == '1\\n5'\n\nassert solution('''10\n2\n10\n''') == '1\\n2'\n\nassert solution('''10\n10\n''') == '1\\n2'\n\nassert solution('''2\n1\n5\n100\n''') == '1\\n5'"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '5'\nassert solution('5\\n1') == '6'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('2\\n3') == '2'\nassert solution('2\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('inputs/input13.txt') == '3 3 3 2 1 3\\n1 1 1 1 1\\n2 2 2 2 2\\n1\\n2 2 2 2 2\\n1\\n3 3 3 3 1 4\\n4 4 4 1 4\\n'\n\nassert solution('inputs/input15.txt') == '1 1 1 1 1\\n1 1 1 1 1\\n2 2 2 2 2\\n1\\n1 1 1 1 1\\n2 2 2 2 2\\n1\\n1 1 1 1 1\\n2 2 2 2 2\\n1\\n3 3 3 3 3 4\\n4 4 4 1 4\\n'\n\nassert solution('inputs/input14.txt') == '1 1 1 1 1\\n1 1 1 1 1\\n2 2 2 2 2\\n1\\n1 1 1 1 1\\n2 2 2 2 2\\n1\\n3 3 3 3 3 4\\n4 4 4 1 4\\n'\n\nassert solution('inputs/input16.txt') == '2 2 2 2 2\\n1\\n3 3 3 3 3 4\\n4 4 4 1 4\\n'\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\n'''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\n'''\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\nassert solution('''6\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\n'''\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\nassert solution('''4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\n'''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\nassert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\n'''\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6''') == '1 1 1 1 1 1'\nassert solution('''2\n2\n4\n6\n8\n10\n2\n3\n4\n5''') == '3 3 3'\nassert solution('''2\n2\n3\n4\n5\n6\n7\n8\n9\n1\n2\n3''') == '3 3 3'\nassert solution('''2\n2\n3\n4\n5\n6\n7\n8\n9\n1\n2\n3''') == '3 3 3'\nassert solution('''3\n4\n5\n6\n7\n8\n9\n1\n2\n3\n4\n5\n6''') == '3 3 3'\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"2\\n1\\n1\\n\") == \"0 0\"\nassert solution(\"3\\n2\\n1\\n\") == \"1 1 1\"\nassert solution(\"4\\n3\\n2 1\\n\") == \"2 2 2 2\"\nassert solution(\"5\\n4\\n3 1\\n\") == \"2 2 2 1 2 2\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"example.txt\").read()) == \"1 1 1 1 1\"\nassert solution(open(\"input.txt\").read()) == \"9 5 4 6 2 3 1 3 1 4 5\"\n\n\n'''\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3 3 3\\n2 3 3 3 2 1 3\\n1\\n2 2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''7\n4\n5 1 2 3 4\n4\n3 4 1\n5\n5 1 2 4 3\n3\n3 4 1 2\n6\n3 4 1 2 5 3\n4\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n2\n2\n4\n3 4 1 2\n5\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n4\n5 1 2 4 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n2\n2\n4\n3 4 1 2\n5\n5 1 2 4 3\n4\n5 1 2 4 3\n4\n2 3 1\n6\n4 6 2 1 5 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n4\n5 1 2 4 3\n4\n2 3 1\n6\n4 6 2 1 5 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n4\n5 1 2 4 3\n4\n2 3 1\n6\n4 6 2 1 5 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n4\n5 1 2 4 3\n4\n2 3 1\n6\n4 6 2 1 5 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n4\n5 1 2 4 3\n4\n2 3 1\n6\n4 6 2 1 5 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n4\n5 1 2 4 3\n4\n2 3 1\n6\n4 6 2 1 5 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n3\n3 4 1 2\n6\n5 1 2 4 3\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nassert solution('''6\n6\n1 2 3 4 5 6\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nassert solution('''6\n6\n1 2 3 4 5 6\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nassert solution('''6\n7\n1 2 3 4 5 6 7\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nassert solution('''6\n8\n1 2 3 4 5 6 7 8\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1 1 1 1 1'\nassert solution('1\\n2\\n3\\n4\\n5') == '1 1 1 1 1'\nassert solution('1\\n2\\n3\\n4\\n5') == '1 1 1 1 1'\nassert solution('1\\n2\\n3\\n4\\n5') == '1 1 1 1 1'\nassert solution('1\\n2\\n3\\n4\\n5') == '1 1 1 1 1'\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\"\"\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1\n1 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n2\n3 1\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n4\n2 1 4 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5\n1 3 1 2 5\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n6\n1 2 4 3 5 7\n\"\"\"\n) == \"4\""
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n5') == '8'\nassert solution('1\\n5') == '7'\nassert solution('1\\n5') == '6'\nassert solution('1\\n5') == '5'\nassert solution('1\\n5') == '4'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\") == \"8\\n-1 2 6 4 0 3\"\nassert solution(\"3\\n0 3 1\") == \"7\\n5 -2 4 -1 2\"\nassert solution(\"1\\n1 1\") == \"0\\n1 -1\"\nassert solution(\"2\\n1 1\") == \"0\\n1 -1\"\nassert solution(\"10\\n1 1\") == \"0\\n1 -1\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\\n5 -2 4 -1 2\"\n\n\"\"\"\n\nn, m = [int(x) for x in stdin.readline().split()]\nx = [int(x) for x in stdin.readline().split()]\n\nd = [abs(x[i] - x[j]) for i in range(n) for j in range(n) if i!= j]\nprint(min(d))\n\nd = [abs(x[i] - y) for i in range(n) for y in stdin.readline().split()]\nprint(sum(d))\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 1\\n1 1') == '0'\nassert solution('1 1\\n1 2') == '2'\nassert solution('1 2\\n1 1') == '1'\nassert solution('1 2\\n1 2') == '0'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 6\n1 5''') == '8'\nassert solution('''3 5\n0 3 1''') == '7'\nassert solution('''4 5\n0 4 1 4\n''') == '7'\nassert solution('''2 3\n1 2\n2 1\n''') == '2'\nassert solution('''3 3\n0 3 1\n2 1 3\n''') == '1'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2 6\n1 5'''\n) == '8'\nassert solution(\n'''3 5\n0 3 1'''\n) == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2 6'''\n) == '8'\nassert solution(\n'''3 5'''\n) == '7'\nassert solution(\n'''0 3 1'''\n) == '5 -2 4 -1 2'\n\nprint('success')"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('1\\n2') == 'YES'\nassert solution('4\\n2') == 'YES'\nassert solution('5\\n3') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"NO\") == \"NO\"\nassert solution(\"YES\") == \"YES\"\nassert solution(\"RUUURRRRUU\") == \"RUUURRRRUU\"\nassert solution(\"RRRRUUU\") == \"RRRRUUU\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"input/test_1\") == \"YES\\nRRRUUU\"\nassert solution(\"input/test_2\") == \"YES\\nRRRRUUU\"\nassert solution(\"input/test_3\") == \"NO\"\nassert solution(\"input/test_4\") == \"YES\\nRUUUUUUU\"\nassert solution(\"input/test_5\") == \"NO\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'NO'\nassert solution('1') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('1 3') == 'NO'\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Hello World!\") is None\nassert solution(\"Hello World!\") == \"NO\"\nassert solution(\"Hello World!\") == \"YES\"\nassert solution(\"Hello World!\") == \"RRRRUUU\"\nassert solution(\"Hello World!\") == \"RUUURRRRUU\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\"\"\"\n) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\n    \"\"\"5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\"\"\"\n) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\n    \"\"\"5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\"\"\"\n) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\n    \"\"\"5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\"\"\"\n) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\n    \"\"\"5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\"\"\"\n) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\n\n-----Alternate Solutions-----"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('2\\n2') == '1'\nassert solution('3\\n2') == '0'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('5 1') == '5'\nassert solution('1 100') == '15'\nassert solution('10 100') == '15'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\nassert solution('''1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '0'\nassert solution('''1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '500'\nassert solution('''1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '2128012501878'\nassert solution('''1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '899999999999999999'\n'''\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"500 4\") == \"2\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"3 2 1\") == \"2\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 1''') == '0'\nassert solution('''1\n1 1''') == '0'\nassert solution('''500 4\n217871987498122 10\n100000000000000001 1''') == '899999999999999999'\nassert solution('''3\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '1'\nassert solution('''4\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1''') == '1'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\nassert solution('''2\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '0'\nassert solution('''2\n2 1\n1 1\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999\n0 99999999999999999999999999999999999999999999999999999999999999999999999999''') == '7'\nassert solution('''2\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1''') == '0'\nassert solution('''1 1''') == '0'\nassert solution('''500 4''') == '2128012501878'\nassert solution('''217871987498122 10''') == '899999999999999999'\n'''\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8\\n0\\n500\\n2128012501878\\n899999999999999999\\n'\n\nprint(solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1'))\nassert solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8\\n0\\n500\\n2128012501878\\n899999999999999999\\n'\n\nprint(solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1'))\nassert solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8\\n0\\n500\\n2128012501878\\n899999999999999999\\n'\n\nprint(solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1'))\nassert solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8\\n0\\n500\\n2128012501878\\n899999999999999999\\n'\n\nprint(solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1'))\nassert solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8\\n0\\n500\\n2128012501878\\n899999999999999999\\n'\n\nprint(solution('5\\n2\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1'))\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n' + '1 1') == '1'\nassert solution('3\\n' + '2 1') == '2'\nassert solution('3\\n' + '2 2') == '0'\nassert solution('3\\n' + '2 3') == '1'\nassert solution('3\\n' + '2 5') == '3'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abababab') == '0'\nassert solution('abababab') == '0'\nassert solution('abababab') == '0'\nassert solution('abababab') == '0'\nassert solution('abababab') == '0'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n0\\n1\\n0\\n0\\n') == '2'\nassert solution('4\\n1\\n0\\n0\\n0\\n1') == '2'\nassert solution('5\\n1\\n0\\n0\\n0\\n1') == '2'\nassert solution('6\\n1\\n0\\n0\\n0\\n1') == '4'\nassert solution('7\\n1\\n0\\n0\\n0\\n1') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input/a') == 'output/a'\nassert solution('input/b') == 'output/b'\nassert solution('input/c') == 'output/c'\nassert solution('input/d') == 'output/d'\nassert solution('input/e') == 'output/e'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''7\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '2', \"Example\"\n\nassert solution(\n'''8\n8\n0 0 1 0 1 0 1 0 1\n8\n1 0 0\n8\n1 1 0 0 1\n8\n1 0 0 0 0 1\n8\n1 1 0 1 1\n8\n1 0 0 0 0 1''') == '4', \"Example\"\n\nassert solution(\n'''7\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '2', \"Example\"\n\nassert solution(\n'''7\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2', \"Example\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n') == '2\\n0\\n2\\n4\\n1'\nassert solution('3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n') == '0\\n2\\n2\\n4\\n1'\nassert solution('3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n') == '0\\n2\\n2\\n4\\n1'\nassert solution('3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n') == '0\\n2\\n2\\n4\\n1'\nassert solution('3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n') == '0\\n2\\n2\\n4\\n1'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n0\\n') == '0'\nassert solution('2\\n0\\n') == '0'\nassert solution('2\\n0\\n') == '0'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 1\n2 1\n3 2\n4 2\n5 3''') == 'aaabbbbb'\n\nassert solution('''10 3\n3 2\n9 3\n4 1\n5 3\n7 3\n6 2\n2 1\n1 1\n3 1\n2 1\n1 1''') == 'aababbbaababababb'\n\nassert solution('''10 3\n3 2\n9 3\n4 1\n5 3\n7 3\n6 2\n2 1\n1 1\n3 1\n2 1\n1 1''') == 'aaabbbaabababababab'\n\nassert solution('''10 4\n9 9\n4 8\n1 2\n3 3\n4 4\n5 4\n6 4\n7 3\n8 3\n9 3\n10 3''') == 'aaabbbaaababababaaabb'\n\nassert solution('''10 4\n9 9\n4 8\n1 2\n3 3\n4 4\n5 4\n6 4\n7 3\n8 3\n9 3\n10 3''') == 'aaabbbaaababababaaabb'"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n1\\n1') == 'b\\n'\nassert solution('1\\n1\\n1\\n1') == 'a\\n'\nassert solution('1\\n1\\n2\\n1') == 'b\\na\\n'\nassert solution('1\\n1\\n1\\n1') == 'a\\na\\nb\\n'\nassert solution('1\\n1\\n1\\n1') == 'a\\na\\na\\nb\\n'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3\n4 4\n6 2''') == \"cbcacab\"\nassert solution('''7 3\n5 6\n4 4\n3 3\n2 2\n1 1''') == \"ccbbaaa\"\nassert solution('''7 3\n7 7\n3 4\n6 2''') == \"baabab\"\nassert solution('''7 3\n7 7\n3 4\n3 3\n2 2\n2 1''') == \"baabab\"\n'''\n\n'''\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3\\n3\\n4\\n4\\n5\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n30\\n30\\n31\\n31\\n32\\n32\\n33\\n33\\n34\\n34\\n35\\n35\\n36\\n36\\n37\\n37\\n38\\n38\\n39\\n39\\n40\\n40\\n41\\n41\\n42\\n42\\n43\\n43\\n44\\n44\\n45\\n45\\n46\\n46\\n47\\n47\\n48\\n48\\n49\\n49\\n50\\n50\\n51\\n51\\n52\\n52\\n53\\n53\\n54\\n54\\n55\\n55\\n56\\n56\\n57\\n57\\n58\\n58\\n59\\n59\\n60\\n60\\n61\\n61\\n62\\n62\\n63\\n63\\n64\\n64\\n65\\n65\\n66\\n66\\n67\\n67\\n68\\n68\\n69\\n69\\n70\\n70\\n71\\n71\\n72\\n72\\n73\\n73\\n74\\n74\\n75\\n75\\n76\\n76\\n77\\n77\\n78\\n78\\n79\\n79\\n80\\n80\\n81\\n81\\n82\\n82\\n83\\n83\\n84\\n84\\n85\\n85\\n86\\n86\\n87\\n87\\n88\\n88\\n89\\n89\\n90\\n90\\n91\\n91\\n92\\n92\\n93\\n93\\n94\\n94\\n95\\n95\\n96\\n96\\n97\\n97\\n98\\n98\\n99\\n99\\n100') == 'cbcacab'\nassert solution('1\\n3\\n7\\n12\\n19\\n24\\n31\\n36\\n43\\n49\\n53\\n58\\n63\\n68\\n73\\n79\\n86\\n93\\n99\\n106\\n113\\n119\\n126\\n133\\n139\\n146\\n153\\n159\\n166\\n173\\n178\\n183\\n189\\n196\\n202\\n209\\n216\\n223\\n229\\n236\\n243\\n249\\n256\\n263\\n268\\n273\\n278\\n283\\n289\\n296\\n302\\n309\\n316\\n323\\n329\\n336\\n343\\n349\\n356\\n363\\n369\\n376\\n383\\n389\\n396\\n403\\n409\\n416\\n423\\n429\\n436\\n443\\n449\\n456\\n463\\n469\\n476\\n483\\n489\\n496\\n503\\n508\\n513\\n518\\n523\\n529\\n536\\n543\\n549\\n556\\n563\\n568\\n573\\n579\\n586\\n593\\n599\\n606\\n613\\n618\\n623\\n628\\n633\\n639\\n646\\n653\\n659\\n666\\n673\\n678\\n683\\n688\\n693\\n699\\n706\\n712\\n717\\n723\\n728\\n733\\n739\\n746\\n753\\n759\\n766\\n773\\n779\\n786\\n793\\n799\\n806\\n812\\n817\\n823\\n828\\n833\\n839\\n846\\n853\\n859\\n866\\n873\\n879\\n886\\n893\\n899\\n906\\n913\\n919\\n925\\n931\\n937\\n943\\n949\\n956\\n963\\n969\\n976\\n983\\n989\\n996\\n1003\\n1009\\n1016\\n1023\\n1029\\n1036\\n1043\\n1049\\n1056\\n1063\\n1069\\n1076\\n1083\\n1089\\n1096\\n1103\\n1109\\n1126\\n1132\\n1139\\n1146\\n1153\\n1159\\n1166\\n1173\\n1179\\n1186\\n1193\\n1199\\n1206\\n1213\\n1219\\n1226\\n1233\\n1239\\n1246\\n1253\\n1259\\n1266\\n1273\\n1279\\n1286\\n1293\\n1299\\n1306\\n1313\\n1319\\n1326\\n1333\\n1339\\n1346\\n1353\\n1359\\n1366\\n1373\\n1379\\n1386\\n1393\\n1399\\n1406\\n1413\\n1419\\n1426\\n1433\\n1439\\n1446\\n1453\\n1459\\n1466\\n1473\\n1479\\n1486\\n1493\\n1499\\n1506\\n1513\\n1519\\n1526\\n1533\\n1539\\n1546\\n1553\\n1559\\n1566\\n1573\\n1579\\n1586\\n1593\\n1599\\n1606\\n1613\\n1619\\n1626\\n1633\\n1639\\n1646\\n1653\\n1659\\n1666\\n1673\\n1679\\n1686\\n1693\\n1699\\n1706\\n1713\\n1719\\n1726\\n1733\\n1739"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cbcacab') == 'cbcacab'\nassert solution('abcd') == 'abcd'\nassert solution('baabab') == 'baabab'\nassert solution('ccbbaaa') == 'ccbbaaa'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''5\n7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''5\n7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''5\n5 5\n4 4\n6 2''') == 'cbcacab'\nassert solution('''5\n5 5\n4 4\n7 2''') == 'cbcacab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7 3\n4 4\n5 2''') == 'bcacab'\nassert solution('''7 3\n5 2\n6 2''') == 'bcacab'\nassert solution('''7 3\n6 2\n4 4''') == 'acbab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n7 3\\n4 4\\n6 2') == 'cbcacab'\nassert solution('1\\n6 4\\n3 2') == 'abcd'\nassert solution('2\\n10 10\\n2 2') == 'baabab'\nassert solution('2\\n10 10\\n5 2') == 'baabab'\nassert solution('2\\n10 22\\n5 2') == 'baabab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''6\n4 2\n1 1\n6 2\n1 4\n6 2\n5 2\n''') == 'abcd'\nassert solution('''3\n7 4\n1 4\n6 2\n5 2\n4 2\n''') == 'baabab'\n'''\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''6 3\n7 4\n2 4''') == 'abcd'\nassert solution('''6 2\n3 4\n5 4''') == 'baabab'\nassert solution('''6 3\n4 4\n4 4''') == 'abcd'\nassert solution('''3 1\n4 5\n7 2''') == 'cbcacab'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n2\") == \"\"\nassert solution(\"3\\n3\") == \"1 2\"\nassert solution(\"3\\n3\") == \"1 1\"\nassert solution(\"3\\n5\") == \"1 4\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''11\n3 1 4 1 5 9 2 6 5 3 5''') == '6 23 21'\nassert solution('''1\n1000\n3\n1 1 1''') == '1 1000 0'\nassert solution('''6\n2 1''') == '2 1 2'\nassert solution('''7\n2 1''') == '6 45 46'\nassert solution('''9\n2 1''') == '3 4 2'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0 1\"\nassert solution(\"1 2\") == \"1 1\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"2 2\") == \"1 2\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n11\n3 1 4 1 5 9 2 6 5 3 5''') == '6 21 23'\nassert solution('''2\n2\n1 1 1''') == '2 1 0'\nassert solution('''3\n3\n1 1 1''') == '3 2 3'\nassert solution('''5\n5\n1 1 1 1 1 1''') == '4 8 10'\nassert solution('''5\n5\n2 1 1 1 1''') == '3 2 3'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''5\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1\n7\n1 1 1 1 1 1\n''') == '6 21 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 20'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 22'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 22'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 22'"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n1') == '2 1'\nassert solution('3\\n1') == '2 0'\nassert solution('2\\n1') == '2 1'\nassert solution('3\\n1') == '2 0'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0 1'\nassert solution('2\\n1') == '1 2'\nassert solution('1\\n10') == '0 10'\nassert solution('2\\n10') == '0 11'\nassert solution('2\\n5') == '0 4'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n1\n100\n''') == '6 21 22'\nassert solution('''2\n1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n2\n1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n2\n1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n2\n1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n''') == '6 21 22'\n\nassert solution('''1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n1\n100\n''') == '6 21 22'\n\nassert solution('''2\n1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n2\n1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n2\n1\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'\n\"\"\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '6\\n27\\n39\\n11\\n17'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '6\\n27\\n39\\n11\\n17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\\na\") == \"a\"\nassert solution(\"a\\na\\na\") == \"a\"\nassert solution(\"a\\na\\na\\na\") == \"a\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\n\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\n\nassert solution('''5\n5 6\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6 5\n5 6 6 6"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 2') == '2'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 2') == '2'\nassert solution('1 2\\n3 4') == '6'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4') == '6'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4') == '6'\nassert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4') == '6'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('1 2\\n1 2\\n1 2') == '1'\nassert solution('1 2\\n1 2\\n1 2') == '1'\nassert solution('1 2\\n1 2\\n1 2') == '1'\nassert solution('1 2\\n1 2\\n1 2') == '1'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n10 1\n7 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''\n10 2\n2 2 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''\n10 2\n2 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution(\n'''\n10 2\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n''') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"3 3\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"10 1\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 2 3 1 3 3 1 4 1\") == \"0 2 4 7 8 11 13 14 16 17\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"2\\n6 9 3 10 9 1 10 1 5\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"1\\n3 2 3 1 3 3 1 4 1\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"1\\n3 2 3 1 3 3 1 4 1\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"1\\n3 2 3 1 3 3 1 4 1\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == input.strip()\n\n\"\"\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n2\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"2\\n1\") == \"0 2\"\nassert solution(\"1\\n2\\n2\\n2\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"2\\n3\\n3\") == \"0 2 3 5 7 10\"\nassert solution(\"2\\n5\\n2\") == \"0 2 4 6 8 10\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 1\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"10 2\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"10 3\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"10 4\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"10 5\") == \"0 7 13 18 24 35 36 37 40 45\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == 'a\\nb'\nassert solution('2\\n2') == 'ab'\nassert solution('7\\n1') == 'aaabb'\nassert solution('7\\n2') == 'aabab'\nassert solution('10\\n1') == 'babaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom math import factorial"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n5 1') == 'aaabb'\nassert solution('2\\n5 1') == 'aabab'\nassert solution('2\\n5 2') == 'baaba'\nassert solution('2\\n5 8') == 'bbaaa'\nassert solution('2\\n5 10') == 'abb'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"ab\"\nassert solution(\"3\") == \"abc\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n') == 'ab'\nassert solution('2\\n2\\n') == 'ab'\nassert solution('3\\n2\\n') == 'ba'\nassert solution('4\\n2\\n') == 'ba'\nassert solution('5\\n2\\n') == 'aa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == ''\nassert solution('123') == '123'\nassert solution('12') == '12'\nassert solution('12345') == '12345'\nassert solution('1234567') == '1234567'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100') == 'aaabb'\nassert solution('3\\n3\\n20 100') == 'aaaaabaaaaabaaaaaaaa'\nprint(solution(stdin))\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''5 2\n3 1\n3 2\n20 100\n''') == 'baaba'\nassert solution('''3 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bab'\nassert solution('''20 100\n5 8\n5 10\n3 1\n3 2\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\nassert solution('''10 100\n5 8\n5 10\n3 1\n3 2\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaabb'\nassert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'baaba'\nassert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'bbaaa'\nassert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'abb'\nassert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aab'\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"6\"\nprint(\"asserts passed\")\n\n'''\nassert solution(\n'''\n2\n10 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n2 0\n0 0\n''') == \"2\"\nprint(\"asserts passed\")\n\nassert solution(\n'''\n3\n10 2\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n2 0\n0 0\n1 1\n0 1\n''') == \"2\"\nprint(\""
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n\nassert solution('''6\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n'''\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\nassert solution('''10\n3\n1 4 3 2 4 6 9 8 5 1\n3 4 8 3 2 4 3 5 1 5\n1 2\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n\n'''\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"6\\n1\\n5\\n10\"\n\nassert solution(\n'''\n4\n4 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"2\\n1\\n5\\n10\"\n\nassert solution(\n'''\n1\n1 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n1 11 1\n1 12 1\n1 13 1\n1 14 1\n1 15 1\n1 16 1\n1 17 1\n1 18 1\n1 19 1\n1 20 1\n1 21 1\n1 22 1\n1 23 1\n1 24 1\n1 25 1\n1 26 1\n1 27 1\n1 28 1\n1 29 1\n1 30 1\n1 31 1\n1 32 1\n1 33 1\n1 34 1\n1 35 1\n1 36 1\n1 37 1\n1 38 1\n1 39 1\n1 40 1\n1 41 1\n1 42 1\n1 43 1\n1 44 1\n1 45 1\n1 46 1\n1 47 1\n1 48 1\n1 49 1\n1 50 1\n1 51 1\n1 52 1\n1 53 1\n1 54 1\n1 55 1\n1 56 1\n1 57 1\n1 58 1\n1 59 1\n1 60 1\n1 61 1\n1 62 1\n1 63 1\n1 64 1\n1 65 1\n1 66 1\n1 67 1\n1 68 1\n1 69 1\n1 70 1\n1 71 1\n1 72 1\n1 73 1\n1 74 1\n1 75 1\n1 76 1\n1 77 1\n1 78 1\n1 79 1\n1 80 1\n1 81 1\n1 82 1\n1 83 1\n1 84 1\n1 85 1\n1 86 1\n1 87 1\n1 88 1\n1 89 1\n1 90 1\n1 91 1\n1 92 1\n1 93 1\n1 94 1\n1 95 1\n1 96 1\n1 97 1\n1 98 1\n1 99 1\n1 100 1\n1 101 1\n1 102 1\n1 103 1\n1 104 1\n1 105 1\n1 106 1\n1 107 1\n1 108 1\n1 109 1\n1 110 1\n1 111 1\n1 112 1\n1 113 1\n1 114 1\n1 115 1\n1 116 1\n1 117 1\n1 118 1\n1 119 1\n1 120 1\n1 121 1\n1 122 1\n1 123 1\n1 124 1\n1 125 1\n1 126 1\n1 127 1\n1 128 1\n1 129 1\n1 130 1\n1 131 1\n1 132 1\n1 133 1\n1 134 1\n1 135 1\n1 136 1\n1 137 1\n1 138 1\n1 139 1\n1 140 1\n1 141 1\n1 142 1\n1 143 1\n1 144 1\n1 145 1\n1 146 1\n1 147 1\n1 148 1\n1 149 1\n1 150 1\n1 151 1\n1 152 1\n1 153 1\n1 154 1\n1 155 1\n1 156 1\n1 157 1\n1 158 1\n1 159 1\n1 160 1\n1 161 1\n1 162 1\n1 163 1\n1 164 1\n1 165 1\n1 166 1\n1 167 1\n1 168 1\n1 169 1\n1 170 1\n1 171 1\n1 172 1\n1 173 1\n1 174 1\n1 175 1\n1 176 1\n1 177 1\n1 178 1\n1 179 1\n1 180 1\n1 181 1\n1 182 1\n1 183 1\n1 184 1\n1 185 1\n1 186 1\n1 187 1\n1 188 1\n1 189 1\n1 190 1\n1 191 1\n1 192 1\n1 193 1\n1 194 1\n1 195 1\n1 196 1\n1 197 1\n1 198 1\n1 199 1\n1 200 1\n1 201 1\n1 202 1\n1 203 1\n1 204 1\n1 205 1\n1 206 1\n1 207 1\n1 208 1\n1 209 1\n1 210 1\n1 211 1\n1 212 1\n1 213 1\n1 214 1\n1 215 1\n1 216 1\n1 217 1\n1 218 1\n1 219 1\n1 220 1\n1 221 1\n1 222 1\n1 223 1\n1 224 1\n1 225 1\n1 226 1\n1 227 1\n1 228 1\n1 229 1\n1 230 1\n1 231 1\n1 232 1\n1 233 1\n1 234 1\n1 235 1\n1 236 1\n1 237 1\n1 238 1\n1"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"6\"\n'''\n'''\n\n'''\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1') == '6'\nassert solution('2\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"3\\n1\\n1\") == \"2\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\n\nprint(\"The first two lines of the input are not read in the function, but passed as parameters.\")\n\nimport sys\nassert len(sys.argv) == 1\n\nimport os\nassert os.path.basename(__file__) == \"solutions.py\"\n\nprint(\"Passed unit tests\")\n\"\"\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '4'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 3') == '1'\nassert solution('7 3') == '2'\nassert solution('4 3') == '0'\nassert solution('1 3') == '0'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\") == \"0\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1\\n0') == '0'\nassert solution('1 1\\n1') == '2'\nassert solution('2 1\\n1') == '3'\nassert solution('2 1\\n2') == '3'\nassert solution('1 0\\n0') == '0'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n2\n2\n0\n0\n10''') == '3'\n\nassert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1'\n\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0'\n\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0'\n\nassert solution('''7 3\n0\n1\n2\n2\n0\n0\n10\n\n''') == '4'"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0\\n0\\n0\\n1\\n1\\n3'\nassert solution(stdin) == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution(stdin) == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution(stdin) == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution(stdin) == '1\\n2\\n3\\n3\\n4\\n4\\n7'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0\n1\n2\n2\n0\n0\n10\n''') == '3'\n\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0'\n\nassert solution('''7 3\n0\n1\n2\n2\n0\n0\n10\n''') == '7'\n\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0'\n\nassert solution('''7 3\n1\n2\n1\n2\n''') == '0'"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"0\\n0\\n0\\n0\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"7 3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"0\\n0\\n0\"\nassert solution(\"1 3\") == \"1\\n2\\n3\"\nassert solution(\"2 3\") == \"0\\n0\\n0\"\nassert solution(\"4 3\") == \"0\\n0\\n0\"\nassert solution(\"1 10\") == \"1\\n2\\n3\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '3\\n2\\n1'\nassert solution('3\\n2\\n1') == '1\\n2\\n3'\nassert solution('2\\n2\\n1') == '1\\n2\\n2'\nassert solution('2\\n3\\n1') == '1\\n3\\n2'\nassert solution('2\\n1\\n1') == '1\\n1\\n2'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10 13 4 19 22 25 16 7') == '1 10 13 4 19 22 25 16 7'\n\n\n\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 2') == '1 2'\nassert solution('1 2 4 4 4 1') == '1 2 4 4 4 1'\nassert solution('1 2 4') == '1 2 4'\nassert solution('1 2 4 5 6') == '1 2 4'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1 2 3 4'\nassert solution('3\\n1\\n2\\n3\\n4') == '4 3 1 2'\nassert solution('3\\n2\\n1\\n2\\n3\\n4') == '1 2 4 3'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n2') == '1 2'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 49') == '1 49'\nassert solution('5 20 50') == '40 30 50 10'\nassert solution('6 20 50') == '32 20 38 44 50'\nassert solution('5 3 8') == '23 18 13 3'\nassert solution('9 13 22') == '8 19 22 19 22 19 22 19 22 19 22'\n\nprint('Testcases passed successfully.')"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"2\\n\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''4\n5 1 2 3\n5 5 5 5\n6 6 6 6\n4 4 4 4''') == '5 1 2 3\\n5 5 5 5\\n6 6 6 6\\n4 4 4 4'\nassert solution('''6\n3 1 2 3\n4 1 2 3\n5 1 2 3\n6 1 2 3\n4 4 4 4\n5 5 5 5\n6 6 6 6''') == '1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6'\nassert solution('''7\n3 1 2 3\n4 1 2 3\n5 1 2 3\n6 1 2 3\n4 4 4 4\n5 5 5 5\n6 6 6 6\n7 7 7 7''') == '1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7'\nassert solution('''8\n4 1 2 3\n5 1 2 3\n6 1 2 3\n4 4 4 4\n5 5 5 5\n6 6 6 6\n7 7 7 7\n8 8 8 8''') == '1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_case.txt\").read()) == open(\"expected.txt\").read()\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_files/Y11R5P1/A.in\").read()) == open(\"test_files/Y11R5P1/A.out\").read()\nassert solution(open(\"test_files/Y11R5P1/B.in\").read()) == open(\"test_files/Y11R5P1/B.out\").read()\nassert solution(open(\"test_files/Y11R5P1/C.in\").read()) == open(\"test_files/Y11R5P1/C.out\").read()\nassert solution(open(\"test_files/Y11R5P1/D.in\").read()) == open(\"test_files/Y11R5P1/D.out\").read()\nassert solution(open(\"test_files/Y11R5P1/E.in\").read()) == open(\"test_files/Y11R5P1/E.out\").read()\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 2 3\"\n\n'''\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"2 5 4 3 1\") == \"1 2 3 4 5\"\n\n\n\"\"\"\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2 3\n\n\"\"\"\n\n\"\"\"\n\n1 2"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1') == '1'\nassert solution('1 1 2') == '1 2'\nassert solution('1 1 1 1') == '1 1 1'\nassert solution('2 1 3 1') == '1 3 2'\n\n\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 3 1 2') == '1 2 3'\nassert solution('1 3 2 1') == '1 2 3'\nassert solution('1 3 2 2') == '1 2 2 3'\nassert solution('1 3 2 3') == '1 2 3 2'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\n\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"3 3 1 2 4\") == \"1 2 3 4\"\nassert solution(\"2 2\") == \"1 2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\"\n\"\"\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '1 2 3 4'\nassert solution('2 4 3 1') == '1 2 3 4'\nassert solution('1 1 1 1 1') == '1 1 1 1 1'\nassert solution('1 1 1 1 1 1 1') == '1 1 1 1 1 1 1'\nassert solution('1 1 2 2 1') == '1 2 1 2 1'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 3 1 2') == '1 2 3'\nassert solution('1 2 3 4') == '1 2 3 4'\nassert solution('1 2 3 4 5') == '1 3 2 4 5'\nassert solution('1 3 2 4 5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\"\"\") == \"\"\"YES\nNO\nYES\nNO\nNO\nNO\n\"\"\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'NO'\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'YES'\nassert solution('''3\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n1 1 1 1 1 1''') == 'YES'\nassert solution('''4\n4\n1 1 1 1\n5\n1 1 1 1 1 1''') == 'YES'\nassert solution('''5\n5\n1 1 1 1 1\n5\n1 1 1 1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0\") == \"NO\"\nassert solution(\"0 0\") == \"NO\"\nassert solution(\"0 0\") == \"NO\"\nassert solution(\"0 0\") == \"NO\"\nassert solution(\"0 0\") == \"NO\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3''') == 'YES'\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'NO'\n'''"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''\n5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''\n2\n1\n1\n''') == 'NO'\n\nassert solution('''\n2\n1\n2\n''') == 'YES'\n\nassert solution('''\n2\n1\n2\n''') == 'NO'"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO\\nYES\\nNO\\nNO\\nNO'\nassert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES\\nNO\\nYES\\nNO\\nNO'\n'''"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(''.join(input().strip() for _ in range(int(input())))) == 'YES'\nassert solution(''.join(input().strip() for _ in range(int(input())))) == 'NO'\nassert solution(''.join(input().strip() for _ in range(int(input())))) == 'YES'\nassert solution(''.join(input().strip() for _ in range(int(input())))) == 'NO'\nassert solution(''.join(input().strip() for _ in range(int(input())))) == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3''') == 'YES'\nassert solution('''2\n5\n1 1 1 1 1\n1 1 1 1 1\n2\n2 2 2\n3\n3 3 3 3''') == 'NO'\nassert solution('''2\n5\n1 2 3 4 5\n3\n2 4 3 4\n4\n3 3 3 3''') == 'YES'\nassert solution('''2\n10\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n2\n2 2 2 2 2 2 2 2 2 2\n3\n3 3 3 3 3 3 3 3 3 3\n4\n4 4 4 4 4 4 4 4 4 4\n5\n5 5 5 5 5 5 5 5 5 5\n6\n6 6 6 6 6 6 6 6 6 6\n7\n7 7 7 7 7 7 7 7 7 7\n8\n8 8 8 8 8 8 8 8 8 8\n9\n9 9 9 9 9 9 9 9 9 9\n10\n10 10 10 10 10 10 10 10 10\n11\n11 11 11 11 11 11 11 11 11\n12\n12 12 12 12 12 12 12 12 12\n13\n13 13 13 13 13 13 13 13 13\n14\n14 14 14 14 14 14 14 14 14\n15\n15 15 15 15 15 15 15 15 15\n16\n16 16 16 16 16 16 16 16 16\n17\n17 17 17 17 17 17 17 17 17\n18\n18 18 18 18 18 18 18 18 18\n19\n19 19 19 19 19 19 19 19 19\n20\n20 20 20 20 20 20 20 20 20\n21\n21 21 21 21 21 21 21 21 21\n22\n22 22 22 22 22 22 22 22 22\n23\n23 23 23 23 23 23 23 23 23\n24\n24 24 24 24 24 24 24 24 24\n25\n25 25 25 25 25 25 25 25 25\n26\n26 26 26 26 26 26 26 26 26\n27\n27 27 27 27 27 27 27 27 27\n28\n28 28 28 28 28 28 28 28 28\n29\n29 29 29 29 29 29 29 29 29\n30\n30 30 30 30 30 30 30 30 30\n31\n31 31 31 31 31 31 31 31 31\n32\n32 32 32 32 32 32 32 32 32\n33\n33 33 33 33 33 33 33 33 33\n34\n34 34 34 34 34 34 34 34 34\n35\n35 35 35 35 35 35 35 35 35\n36\n36 36 36 36 36 36 36 36 36\n37\n37 37 37 37 37 37 37 37 37\n38\n38 38 38 38 38 38 38 38 38\n39\n39 39 39 39 39 39 39 39 39\n40\n40 40 40 40 40 40 40 40 40\n41\n41 41 41 41 41 41 41 41 41\n42\n42 42 42 42 42 42 42 42 42\n43\n43 43 43 43 43 43 43 43 43\n44\n44 44 44 44 44 44 44 44 44\n45\n45 45 45 45 45 45 45 45 45\n46\n46 46 46 46 46 46 46 46 46\n47\n47 47 47 47 47 47 47 47 47\n48\n48 48 48 48 48 48 48 48 48\n49\n49 49 49 49 49 49 49 49 49\n50\n50 50 50 50 50 50 50 50 50\n51\n51 51 51 51 51 51 51 51 51 51\n52\n52 52 52 52 52 52 52 52 52 52\n53\n53 53 53 53 53 53 53 53 53 53\n54\n54 54 54 54 54 54 54 54 54 54\n55\n55 55 55 55 55 55 55 55 55 55\n56\n56 56 56 56 56 56 56 56 56 56\n57\n57 57 57 57 57 57 57 57 57 57\n58\n58 58 58 58 58 58 58 58 58 58\n59\n59 59 59 59 59 59 59 59 59 59\n60\n60 60 60 60 60 60 60 60 60 60\n61\n61 61 61 61 61 61 61 61 61 61\n62\n62 62 62 62 62 62 62 62 62 62\n63\n63 63 63 63 63 63 63 63 63 63\n64\n64 64 64 64 64 64 64 64 64 64\n65\n65 65 65 65 65 65 65 65 65 65\n66\n66 66 66 66 66 66 66 66 66 66\n67\n67 67 67 67 67 67 67 67 67 67\n68\n68 68 68 68 68 68 68 68 68 68\n69\n69 69 69 69 69 69 69 69 69 69\n70\n70 70 70 70 70 70 70 70 70 70\n71\n71 71 71 71 71 71 71 71 71 71\n72\n72 72 72 72 72 72 72 72 72 72\n73\n73 73 73 73 73 73 73 73 73 73\n74\n74 74 74 74 74 74 74 74 74 74\n75\n75 75 75 75 75 75 75 75 75 75\n76\n76 76 76 76 76 76 76 76 76 76\n77\n77 77 77 77 77 77 77 77 77 77\n78\n78 78 78 78 78 78 78 78 78 78\n79\n79 79 79 79 79 79 79 79 79 79\n80\n80 80 80 80 80 80 80 80 80 80\n81\n81 81 81 81 81 81 81 81 81 81\n82\n82 82 82 82 82 82 82 82 82 82\n83\n83 83 83 83 83 83 83 83 83 83\n84\n84 84 84 84 84 84 84 84 84 84\n85\n85 85 85 85 85 85 85 85 85 85\n86\n86 86 86 86 86 86 86 86 86 86\n87\n87 87 87 87 87 87 87 87 87 87\n88\n88 88 88 88 88 88 88 88 88 88\n89\n89 89 89 89 89 89 89 89 89 89\n90\n90 90 90 90 90 90 90 90 90 90\n91\n91 91 91 91 91 91 91 91 91 91\n92\n92 92 92 92 92 92 92 92 92 92\n93\n93 93 93 93 93 93 93 93 93 93\n94\n94 94 94 94 94 94 94 94 94 94 94\n95\n95 95 95 95 95 95 95 95 95 95\n96\n96 96 96 96 96 96 96 96 96 96\n97\n97 97 97 97 97 97 97 97 97 97\n98\n98 98 98 98 98 98 98 98 98 98\n99\n99 99 99 99 99 99 99 99 99 99\n100\n100 100 100 100 100 100 100 100 100\n''') == 'YES'\nassert solution('''3\n4\n1 2 3 4\n1 2 3 4\n2\n2 2 2\n3\n3 3 3\n4\n4 4 4 4''') == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('3\\n3\\n3\\n3\\n3') == 'NO'\nassert solution('4\\n4\\n4\\n4\\n4') == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO\\nYES'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n3\n3 3 3\n''') == 'NO\\nYES'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n4\n1 1 1 1\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n4\n1 1 1 1\n4\n1 1 1 1\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n4\n1 1 1 1\n4\n1 1 1 1\n4\n1 1 1 1\n''') == 'NO'"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n5') == '1 2 3 4 5'\nassert solution('1\\n5\\n2\\n3') == '3 1 2 4 5'\nassert solution('1\\n2\\n2') == '1 2'\nassert solution('1\\n2\\n2\\n2') == '2 1'\nassert solution('1\\n2\\n2\\n2\\n2') == '2 1 2'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n') == '-1'\nassert solution('4\\n3\\n') == '-1'\nassert solution('6\\n5\\n') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('7\\n7\\n') == '13 9 7 11 8 4 1 3 5 2 6'\nassert solution('8\\n7\\n') == '13 9 7 11 8 4 1 3 5 2 6 10 12'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('2\\n2') == '-1'\nassert solution('2\\n4') == '2 1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"4\") == \"3 1 4 2\"\nassert solution(\"6\") == \"5 3 6 2 4 1\"\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") is None\nassert solution(\"\\n\") is None\nassert solution(\"\\n2\\n\") == \"\"\nassert solution(\"\\n2\\n3\\n\") == \"\"\nassert solution(\"\\n3\\n3\\n\") == \"\"\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('inputs/check_permutation/1') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('inputs/check_permutation/2') == '-1'\nassert solution('inputs/check_permutation/3') == '3 1 4 2'\nassert solution('inputs/check_permutation/4') == '5 3 6 2 4 1'\nassert solution('inputs/check_permutation/5') == '5 1 3 6 2 4 7'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == '-1'\nassert solution('2') == '1 2'\nassert solution('4') == '2 3 1'\nassert solution('5') == '3 1 4 2'\nassert solution('6') == '4 2 3 1 5'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\\n1\") == \"0\"\nassert solution(\"3\\n1\\n2\") == \"1\"\nassert solution(\"3\\n1\\n2\\n3\") == \"2\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List\n\nfrom shared import util\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\n\nassert solution(\"2\\n1\") == \"1\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == result, msg\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 7 6\\n3\\n3 2 6') == '2\\n1'\nassert solution('3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1'\nassert solution('3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2\\n1\\n-1\\n0'\nassert solution('''4\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '0'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '-1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n0''') == '-1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n0''') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1'\nassert solution('3\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '-1'\n\n\n-----Answer-----\n\n'''\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2'\nassert solution('''3\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '1'\nassert solution('''3\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '-1'\nassert solution('''5\n5\n4 2 6 1 3 7\n4\n4 2 6 1 3 7\n3\n3 2 7 6 4 9 1\n''') == '2'\nassert solution('''3\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hello world') == ''\nassert solution('3 2 1') == '0'\nassert solution('1 2 3') == '-1'\nassert solution('3 2 7 6') == '2'\nassert solution('7') == '-1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 2\n1 3\n1 4\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''\n10\n0 0 0 0 0 0 0 0 0 0\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 10\n3 11\n4 12\n5 13\n6 14\n7 15\n8 16\n9 17\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''\n5\n0 0 0 0 0\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '0 -1 1 -1'\nassert solution('''\n6\n0 0 0 0 0 0\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '0 -1 1 -1'\nassert solution('''\n5\n0 0 0 0 0\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '0 -1 1 -1'\nassert solution('''8\n0 0 1 0\n1 2\n1 3\n3 4\n3 5\n4 6\n5 7\n7 8\n''') == '0 -1 1 -1'\nassert solution('''6\n0 0 1 0\n1 2\n1 3\n3 4\n3 5\n4 5\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\nassert solution('0 0 1 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '0 -1 1 -1'\nassert solution('9\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '9 -1 -1 -1'\nassert solution('2\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '-1 -1 -1'\nassert solution('0 0\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20') == '-1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"9\") == \"2\"\nassert solution(\"10\") == \"0\"\nassert solution(\"11\") == \"-1\"\nassert solution(\"4\") == \"-1\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\n\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n'''\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''7\n0 0 1 0\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n''') == '0 -1 1 -1'\nassert solution('''7\n0 0 1 0\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\n'''\n\nOutput:\n-2 -1 1 -1 \n\n'''\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\n\n\n\n------\n\n\"\"\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '-1'\nassert solution('3\\n1') == '-1'\nassert solution('12\\n1') == '2'\nassert solution('12345\\n1') == '12'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\n\n\n\"\"\"\n\nimport sys\nsys.path.insert(0, '..')\nfrom int_to_roman import int_to_roman"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '0'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 0\nassert solution('2') == -1\nassert solution('3') == 1\nassert solution('4') == 2\nassert solution('5') == 1\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('15116544') == '0'\nassert solution('1') == '-1'\nassert solution('2') == '0'\nassert solution('3') == '-1'\nassert solution('12') == '1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"2\") == 1\nassert solution(\"3\") == 2\nassert solution(\"4\") == 2\nassert solution(\"5\") == 3\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '-1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '-1'\nassert solution('1\\n5') == '2'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('R') == 'R'\nassert solution('GB') == 'BR'\nassert solution('GBR') == 'BR'\nassert solution('GBRB') == 'BR'\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('BBBBB') == 'BBBBB'\nassert solution('RBRGBRB') == 'RBRRB'\nassert solution('RRBBBR') == 'RRBB'\nassert solution('GGBGBGB') == 'GGBG'\nassert solution('BRRRBR') == 'BRRR'\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"GBRGB\") == \"BRG\"\nassert solution(\"BGBR\") == \"BG\"\nassert solution(\"RGBRB\") == \"GR\"\nassert solution(\"RBBRB\") == \"RG\"\nassert solution(\"BBBRB\") == \"BB\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == answer_stdin\n\"\"\"\n\nimport sys\n\n__author__ = 'H. Dokai'\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"GBRG\") == 1\nassert solution(\"B\") == 0\nassert solution(\"RRGBRB\") == 3\nassert solution(\"RGBRGBRGBRGB\") == 3\nassert solution(\"RBGRBRGRGBRB\") == 4\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"BRGR\") == \"GB\"\nassert solution(\"BGB\") == \"BB\"\nassert solution(\"RRR\") == \"RR\"\nassert solution(\"RRGR\") == \"RRG\"\nassert solution(\"RRGGBRB\") == \"RRG\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('B') == 'B'\nassert solution('BB') == 'BB'\nassert solution('RBRGBRBGGRRBRGRBRGBRBGRRBGRBRRBGRRBGRRBGRRBGB') == 'RBGRRBGRRBRRBGRRBGRRBGRRBGRRBGRRBGRRBGRRBGRRBGB'\nassert solution
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\"\"\"\nfrom functools import lru_cache\n\n\n@lru_cache(None)\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1') == '3'\nassert solution('3\\n1\\n1') == '3'\nassert solution('4\\n1\\n1') == '3'\nassert solution('5\\n1\\n1') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"1\\n10\\n\")) == \"2\"\nassert solution(input(\"2\\n1\\n1\\n1\\n1\\n1\\n1\")) == \"3\"\nassert solution(input(\"2\\n1\\n1\\n1\\n1\\n1\\n2\")) == \"3\"\nassert solution(input(\"3\\n1\\n1\\n1\\n1\\n1\\n1\")) == \"2\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n5\\n1 1 1 1 1\\n7\\n1 1 1 1 1 2 2') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n1\\n2\\n3') == '3'\nassert solution('2\\n7\\n1 1 1 1 1 2 2') == '3'\nassert solution('2\\n2\\n7\\n1 1 1 1 1 2 2') == '3'\nassert solution('2\\n2\\n7\\n1 1 1 1 1 2 2') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3\\n3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2'\n\nassert solution('''3\n3\n1 2 3\n2 1\n1''') == '1 2 3\\n2 1\\n1'\n\nassert solution('''1\n1\n1\n1''') == '1'\n\nassert solution('''6\n6\n1 2 3 4 5 6\n2 1\n2 1\n2 1\n2 1\n2 1''') == '1 2 3 4 5 6'\n\nassert solution('''9\n9\n1 2 3 4 5 6 7 8 9\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1''') == '1 2 3 4 5 6 7 8 9'"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n\"\"\") == \"\"\"1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n\"\"\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\\n'\nassert solution('''\n4\n4\n1 2 3 4\n4\n1 2 3 4\n''') == '1 2 3 4\\n1 2 3 4\\n'\nassert solution('''\n1\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\\n'\nassert solution('''\n4\n4\n1 2 3 4\n4\n1 2 3 4\n''') == '1 2 3 4\\n1 2 3 4\\n'\nassert solution('''\n2\n3\n1 2 3\n4\n1 2 3 4\n''') == '1 2 3\\n1 2 3\\n'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\nassert solution('''4\n4\n1 2 4 3\n4\n1 2 4 3''') == '1 2 3 4'\nassert solution('''4\n4\n1 3 4 2\n4\n1 2 3 4''') == '1 2 3 4'\nassert solution('''4\n4\n1 3 2 4\n4\n1 2 3 4''') == '1 2 3 4'\nassert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\nfrom itertools import permutations\n\nn = int(input())\na = list(map(int,input().split()))\n\np = permutations(a)"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\nassert solution('''4\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 2 3 4'\nassert solution('''4\n1\n1\n4\n4 3 2 1''') == '1 4 3 2'\nassert solution('''4\n1\n1\n4\n4 3 2 1''') == '1 4 3 2'\nassert solution('''4\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 2 3 4'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2 1 4 3\""
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 3 2\") == \"YES\"\nassert solution(\"1 3 2 5 4\") == \"YES\"\nassert solution(\"1 2 3 5 4\") == \"YES\"\nassert solution(\"1 3 2 4 5\") == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"NO\"\nassert solution(\"3\\n3\") == \"YES\"\nassert solution(\"1\\n1\\n3\\n3\") == \"YES\"\nassert solution(\"2\\n5\\n1 2 3 4\") == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n2\n2\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4''') == 'YES'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n2\n2\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n2\n2\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n3\n1 3 2\n5\n1 2 3 5 4\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n3\n1 3 2\n5\n1 2 3 5 4\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n''') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\nassert solution('''5\n5\n1 2 3 4 5\n1\n1 2 3 4''') == 'YES'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n5\n1 2 3 4''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n3\n1 3 2\n5\n1 2 3 5 4\n4\n1 2 3 4''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n3\n1 3 2\n5\n1 2 3 5 4\n4\n1 2 3 4''') == 'NO'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\n\nassert solution('''4\n4\n1 2 3 4\n3\n1 3 2\n4\n1 2 3 4\n''') == 'YES'\n\nassert solution('''2\n2\n1 2\n1\n''') == 'NO'\n\nassert solution('''2\n4\n1 2 3 4\n3\n1 3 2\n''') == 'YES'\n\nassert solution('''2\n2\n1 2\n2\n''') == 'YES'"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nimport sys\n\nsys.stdin = open(\"../../Input/Problem003.txt\", \"r\")"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\nassert solution('''2\n3\n1 2\n2\n2\n3\n1\n1''') == 'NO'\nassert solution('''5\n1\n1\n2\n3\n4\n''') == 'YES'\nassert solution('''2\n3\n3\n2\n1\n4\n''') == 'YES'\nassert solution('''2\n4\n2\n3\n3\n2\n1\n1\n''') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n\"\"\") == \"\"\"5\n18\n10\n6\n75015\"\"\"\n\nassert solution(\"\"\"1\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1\n1\n1\n1\n1\n1\"\"\"\n\nassert solution(\"\"\"2\n2 5\n20 5\n20 5\n20 5\n20 5\n\"\"\") == \"\"\"5\n10\n5\n5\n5\n5\n\"\"\"\n\nassert solution(\"\"\"3\n3 2\n5 3\n3 2\n3 2\n3 2\n\"\"\") == \"\"\"3\n3\n3\n3\n3\n\"\"\"\n\nassert solution(\"\"\"4\n4 1\n50 1\n3 1\n3 2\n\"\"\") == \"\"\"3\n3\n3\n3\n\"\"\""
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4'\nassert solution(stdin) == '5'\nassert solution(stdin) == '6'\nassert solution(stdin) == '75015'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n5\\n5 3\\n18 6\\n6 1\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n5\\n5 3\\n18 6\\n6 1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n5\\n5 3\\n18 6\\n6 1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5\\n1\\n100000 50010\\n3\\n5\\n5"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('3\\n1') == '1'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('5 3\\n5 3\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('5 3\\n5 3\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('5 3\\n5 3\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\nassert solution('5 3\\n5 3\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\n\nassert solution('''5\n1 1\n7 9\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n''') == '18'\n\nassert solution('''5\n1 1\n7 9\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n''') == '10075'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '1'\nassert solution('2\\n3\\n') == '3'\nassert solution('2\\n4\\n') == '2'\nassert solution('2\\n5\\n') == '3'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\nassert solution('''5\n2 2\n5 5\n7 7\n4 4\n5 5\n4 6\n6 7\n''') == '3\\n7\\n7\\n7\\n54'\nassert solution('''5\n2 2\n2 1\n2 1\n2 1\n5 5\n4 4\n5 5\n4 6\n6 7\n''') == '3\\n5\\n5\\n5\\n35'\nassert solution('''5\n100000 50010\n''') == '5\\n75015'\nassert solution('''4\n100000 50010\n100000 50010\n100000 50010\n100000 50010\n''') == '3\\n75015'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == ''\nassert solution('1\\n2\\n2\\n1') == '2'\nassert solution('1\\n2\\n2\\n1\\n2\\n1\\n2') == '3'\nassert solution('1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''\n1\n1000000000 9\n''') == 'YES\\n
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 3''') == 'YES\\n4 2 4'\nassert solution('''100 4''') == 'YES\\n55 5 5 35'\nassert solution('''8 7''') == 'YES\\n3 1 1 1 1 1 1 1 1'\nassert solution('''97 2''') == 'YES\\n1 1 1 1 1 1 1 1'\nassert solution('''8 8''') == 'YES\\n1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8\\n10 3\\n100 4\") == \"YES\\n4 2 4\\n\"\nassert solution(\"8\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n\") == \"YES\\n55 5 5 35\\nNO\\nNO\\nYES\\n
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''\n7\n14 8\n1000000000 9\n''') == 'NO\\n1 1 1 1 1 1 1 1 1 1\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1 1 1'\n\nassert solution('''\n7\n1000000000 9\n''') == 'NO\\n1 1 1 1 1 1 1 1 1 1 1'\n\nassert solution('''\n8\n3 1\n1000000000 9\n''') == 'YES\\n1 1 1 1 1 1 1 1 1 1\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1 1 1\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1 1 1 1'\n\nassert solution('''\n3\n8 3\n1000000000 9\n''') == 'YES\\n1 1 1 1 1 1 1 1 1 1\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1 1 1'"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('10\\n3') == 'YES'\nassert solution('1000000000\\n9') == 'YES'\nassert solution('100\\n1') == 'NO'\nassert solution('100\\n100') == 'NO'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == '''YES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'''\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10\n15 4\n1010 6\n1019 4\n976 5\n929 8\n921 6\n912 4\n976 4\n980 3\n961 3\n963 2\n935 1\n927 1\n921 2\n917 3\n918 1\n939 1\n919 1\n939 1\n919 1''') == 'NO\\n921 1\\n917 3\\n939 1\\n919 1'\n\nassert solution('''20\n1000000001 1\n500000005 1\n0111111111 1\n111011111 1\n1111111111 1\n111111111 1\n1111100001 1\n1111111111 1\n1111111111 1\n1101111011 1\n1111111111 1\n1111111111 1\n1111111111 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n1111111111 1\n1101111011 1\n11111111"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n\"\"\") == \"\"\"\n4\n55\n15000000000000000\n51\n\"\"\"\n\n\n\nimport sys\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 10 100') == '55'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '15000000000000000'\nassert solution('23 34 45') == '45'\n\nprint(solution(stdin.read()))\n\n'''\n\nfrom itertools import accumulate"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 2 3\") == \"1\"\nassert solution(\"1\\n1 0 1\") == \"2\"\nassert solution(\"1\\n1 0 1\\n1 0 1\") == \"2\"\nassert solution(\"1\\n1 0 1\\n1 0 1\\n1 0 1\") == \"2\"\nassert solution(\"1\\n1 2 3\") == \"4\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n1 10 100') == '4'\nassert solution('1 2 3\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '55'\nassert solution('2 5 7\\n1 2 3\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '8'\nassert solution('1 2 3\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '55'\n\n\n-----Details-----\n\nThe example is enough to get your thinking. You can try to think about it a bit more (or even try to implement it in your code editor).\n\nWhen we put $c$ in the middle of the sequence, the number of candies it takes to get to the right side is the sum of the right most candies taken from the left side and the left-most candies from the right side.\n\nIn the previous example, when we choose $c$ from the middle, the number of candies Alice takes is equal to the sum of the right most candies from the left side (including the last one) and the left-most candies from the right side (excluding the last one).\n\nThe key to solving this problem is the following principle:\n\nIf you don't know how many candies you have, and you don't want to waste the time to count them, you can count them from the right side.\n\nFor example, if your sequence is [1, 3, 4], which means you have $4$ candies, you can count them from the right side:\n\n$1$ + $3$ + $4$, which is $6$.\n\nIf your sequence is [1, 3, 4], which means you have $4$ candies, you can count them from the left side:\n\n$4$, $3$ + $1$, which is $5$.\n\nIf your sequence is [1, 10, 100], which means you have $10$ candies, you can count them from the right side:\n\n$1$ + $10$ + $100$, which is $106$.\n\nIf your sequence is [1, 10, 100], which means you have $10$ candies, you can count them from the left side:\n\n$10$ + $100$, which is $110$.\n\nNow, if your sequence is [1, 10, 100], which means you have $10$ candies, you can count them from the right side:\n\n$1$ + $10$ + $100$, which is $106$.\n\nIf your sequence is [1, 10, 100], which means you have $10$ candies, you can count them from the left side:\n\n$10$ + $100$, which is $110$.\n\nSince the left-most candies from the right side are more than the right-most candies from the left side, we can choose to count from the left side.\n\nIf your sequence is [1, 100, 10], which means you have $100$ candies, you can count them from the right side:\n\n$1$ + $100$ + $10$, which is $101$.\n\nIf your sequence is [1, 100, 10], which means you have $100$ candies, you can count them from the left side:\n\n$100$ + $10$, which is $110$.\n\nWe see that in the second example, we can count more candies from the right side.\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\nassert solution('''2 3 4\n2 2 4\n3 2 3''') == '5\\n2\\n5\\n2'\nassert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\nassert solution('''1 2 4\n1 2 4\n1 2 4''') == '4'\nassert solution('''1 2 4\n1 1 4\n1 1 4''') == '4\\n1\\n4'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4\\n55\\n15000000000000000\\n51'\n\n'''\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '''\n4\n55\n15000000000000000\n51\n'''\n\nassert solution('''\n1\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '''\n4\n55\n15000000000000000\n51\n'''\n\nassert solution('''\n2\n10\n10000000000000000 10000000000000000 10000000000000000\n10\n''') == '''\n0\n0\n'''\n\nassert solution('''\n3\n1 5 9\n3\n2 4 6\n1\n''') == '''\n0\n4\n3\n'''\n\nassert solution('''\n3\n0\n0\n1\n''') == '''\n0\n0\n1\n'''\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '4\\n55\\n15000000000000000\\n51'\nassert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '4\\n55\\n15000000000000000\\n51'\nassert solution('''2 2 4\n1 3 4\n1 10 100\n2 3 100''') == '1\\n1\\n1\\n1'\nassert solution('''4 4 6\n2 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '4\\n55\\n15000000000000000\\n51'\nassert solution('''2 2 4\n1 3 4\n1 10 100\n2 3 100''') == '1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n4\") == \"4\"\nassert solution(\"1\\n10\\n100\") == \"55\"\nassert solution(\"1\\n0000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"15000000000000000\"\nassert solution(\"1\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"51\"\nassert solution(\"1\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000\\"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'a'\nassert solution('a', 1) == 'a'\nassert solution('a', 2) == 'a'\nassert solution('a', 3) == 'a'\nassert solution('a', 4) == 'a'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcdef') == 'abcd'\nassert solution('aaebbbbbbabaa') == 'abab'\nassert solution('bccabc') == 'cab'\nassert solution('ecbabc') == 'abc'\nassert solution('ecccbabc') == 'bcc'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc') == 3\nassert solution('aac') == 4\nassert solution('ab') == 2\nassert solution('bac') == 2\nassert solution('cac') == 3\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcbac\\n3 6\") == \"6\"\nassert solution(\"abcbac\\n3 6\\naaebdbabdbbddaadaadc\\n20 10\\naaebdbabdbbddaadaadc\") == \"15\"\nassert solution(\"abc\\n10 1\\nde\\n4\") == \"2\"\nassert solution(\"abc\\n10 1\\nde\\n4\\naaebdbabdbbddaadaadc\\n20 10\\naaebdbabdbbddaadaadc\") == \"15\"\nassert solution(\"abc\\n10 1\\nde\\n4\\naaebdbabdbbddaadaadc\\n20 10\\naaebdbabdbbddaadaadc\") == \"15\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\n\nassert solution('''\n6 3\nabc\n3 6\nab\n7 1000\na\nb\nc\n''') == '3'\n\nassert solution('''\n6 3\nabc\n3 6\nab\n4 4\na\n5\n''') == '5'\n\nassert solution('''\n6 3\nabc\n3 6\nab\n4 4\na\n7 1000\na\nb\nc\n''') == '4'\n\nassert solution('''\n6 3\nabc\n3 6\nab\n4 4\na\n7 1000\na\nb\nb\n''') == '7'"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('asdf') == None\nassert solution('asd') == '2'\nassert solution('asdfasdf') == None\nassert solution('abcbac') == '6'\nassert solution('abcba') == '3'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '6'\n\nassert solution('''10\n12 4\nabcab\n4 2\nabcde\n7 3\nafbdfb\n2 10\nadcx\n1 2\nab\n4 5\nbdc''') == '3'\n\nassert solution('''5\n3 6\naab\n3 1\ndda\n4 1\ncab\n3 4\nacd\n5 2\nbac\n3 3\nabc''') == '3'\n\nassert solution('''5\n3 6\naab\n3 1\ndda\n4 1\ncab\n3 4\nacd\n5 2\nbac\n3 3\nabc''') == '3'\n\nassert solution('''5\n3 6\naab\n3 1\ndda\n4 1\ncab\n3 4\nacd\n5 2\nbac\n3 3\nabc''') == '3'"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"abc\") == \"\"\nassert solution(\"ac\") == \"\"\nassert solution(\"abcdef\") == \"\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 3 5\\nNO\\nNO'\nassert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'NO\\nNO'\n'''\nTest.describe(\"Basic tests\")\nTest.assertEquals(solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2'''), 'YES\\n1 3 5\\nNO\\nNO')\nTest.assertEquals(solution('''6 4\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2'''), 'NO\\nNO')\nTest.assertEquals(solution('''10 2\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2'''), 'YES\\n1 3 5\\n1 5\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 4\\n3 6\\n4 5\\n4 7\\n5 6\\n5 7\\n6 7\\n7 8\\n8 9\\n9 10'\n'''\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 4\\n1 2 3 4 5\") == \"YES\\n1 3 5\"\nassert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\"\nassert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"NO\"\nassert solution(\"3\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"NO\"\nassert solution(\"2\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"NO\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"2\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"1\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\\nYES\\n1 3 5\"\nassert solution(\"1\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n7 1\\n1 1 1 1 1\") == \"YES\\n1 3 5\\nNO\\nNO\\nYES\\n1 3 5\\nNO\\nNO\"\n\n-----Best Practice----\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n8\\n1 2 3 4 5 6 7 8 9 10\\n5\\n1 2 3 4 5\\n5\\n1 2 3 4 5 6 7 8 9 10\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"1\\n8\\n1 2 3 4 5 6 7 8 9 10\\n5\\n1 2 3 4 5\\n5\\n1 2 3 4 5 6 7 8 9 10\") == \"NO\\nNO\\nYES\"\nassert solution(\"1\\n8\\n1 2 3 4 5 6 7 8 9 10\\n5\\n1 2 3 4 5 6 7 8 9 10\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"1\\n8\\n1 2 3 4 5 6 7 8 9 10\\n5\\n1 2 3 4 5 6 7 8 9 10\") == \"NO\\nNO\\nYES\"\nassert solution(\"1\\n8\\n1 2 3 4 5 6 7 8 9 10\\n5\\n1 2 3 4 5 6 7 8 9 10\") == \"NO\\nNO\\nYES\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n3\\n18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n') == 'YES\\n1 3 5\\nNO\\nNO\\n'\nassert solution('7\\n3\\n18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n\n\n-----\n\n**Approach:**\n\nWe first count the number of integers in the array, and find the number of pairs of integers in the array that give us the desired sum. We can then create a sorted list of the desired sum-increasing pairs and pick the first one.\n\n**Example:**\n\nFor the example above, we have the array of integers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], the desired sum of 13, and the desired number of pairs to get the desired sum is 6. \n\nThe pairs that give us the desired sum are [1, 3], [3, 5], [5, 7], [7, 9]. \n\nThe first pair in the list is [1, 3] because 1 + 3 = 4 is less than the desired sum of 13, and the first pair in the list is [3, 5] because 3 + 5 = 8 is less than the desired sum of 13. \n\nThe desired pair is [5, 7] because 5 + 7 = 13 is less than the desired sum of 13, and the desired pair is [7, 9] because 7 + 9 = 22 is less than the desired sum of 13. \n\nLet's implement the function to solve this problem in O(n log k) time.\n\n**Algorithm:**\n\n\n\n**Complexity:**\n\nThe input and output is limited to 2 * 10^5 elements, so the algorithm should be logarithmic in the number of elements.\n\n'''\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == 1\nassert solution('100') == 4\nassert solution('0') == 0\nassert solution('11') == 3\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"\nassert solution(\"00000000000000000000000000000000\") == \"0\"\nassert solution(\"111111111111111111111111111111110\") == \"4294967292\"\n\"\"\""
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('00000010100101000001111010011100') == 964176192\nassert solution('111111111111111111111111111111101') == 3221225471\nassert solution('00000000000011110000000000000101') == 15\nassert solution('00000000000000000000000000000000') == 0\nassert solution('010000010000000000000000000000000000000') == 15\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('101') == '11010101'\nassert solution('11100010101000001011110111010100') == '964176192'\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"00111001011110000010100101000000\") == 964176192\nassert solution(\"111111111111111111111111111111101\") == 3221225471\nassert solution(\"11111111111111111111111111111110\") == 3221225473\nassert solution(\"1001001011011000100000111010110\") == 4526925635\nassert solution(\"11111111111111111111111111111110\") == 4526925635\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(0b0000000000000001) == 0b1\nassert solution(0b10000000000000001) == 0b1\nassert solution(0b00000000000000000000000000001011) == 0b1\nassert solution(0b11111111111111111111111111111111) == 0b1\nassert solution(0b000000000000000000000000100000001) == 0b1\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0110001') == 5\nassert solution('0100001') == 1\nassert solution('00000001') == 1\nassert solution('11111111') == 4294967293\nassert solution('11111111111111111111111111111110') == 3221225471\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"1\") == 1\nassert solution(\"100\") == 4\nassert solution(\"11111\") == 4294967295\nassert solution(\"110111111111111111111111111111\") == 4294967293\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(0b11111111111111111111111111111101) == 0b100000000000000000\nassert solution(0b1111111111111111111111111101010111) == 0b1101101111010101110111101010111\nassert solution(0b111111111111111111111111111111111) == 0b10000000000000001\nassert solution(0b111111111111111111111111111111101) == 0b1101101111010101110111101010111\nassert solution(0b111111111111111111111111111111011) == 0b1101101111010101110111101010111\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('100010000') == 0\nassert solution('100010001') == 1\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"[123]\"\nassert solution(\"12\") == \"[1,1]\"\nassert solution(\"1\") == \"[1]\"\nassert solution(\"234\") == \"[1,2,3,4]\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == [[1]]\nassert solution(2) == [[1], [1,1]]\nassert solution(3) == [[1], [1,1], [1,2,1]]\nassert solution(4) == [[1], [1,1], [1,2,1], [1,3,3,1]]\nassert solution(5) == [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == [[1], [1, 1]]\nassert solution(1) == [[1]]\nassert solution(0) == []\nassert solution(3) == [[1], [1, 1], [1, 2, 1]]\nassert solution(4) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1\\n1'\nassert solution('3') == '1\\n2\\n1'\nassert solution('4') == '1\\n3\\n3\\n1'\nassert solution('5') == '1\\n4\\n6\\n4\\n1'\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution('6') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1]]"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == [\"1\"]\nassert solution(\"2\") == [\"1\", \"1\"]\nassert solution(\"3\") == [\"1\", \"1\", \"1\"]\nassert solution(\"4\") == [\"1\", \"1\", \"1\", \"1\"]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '[\\n  [1],\\n  [1,1],\\n  [1,2,1],\\n  [1,3,3,1],\\n  [1,4,6,4,1]\\n]'\n\n\"\"\"\n\nWrite a function that accepts a string representing a number and returns the number.\n\nWrite a function that accepts a number and returns the number with all of its digits reversed.\n\nWrite a function that accepts a string and a number. The function should return the string with all of the characters in the number reversed, with each group of characters separated by a space.\n\nWrite a function that accepts a number and returns the number with all of its digits reversed and placed in groups of three.\n\nWrite a function that accepts a string and returns the string with all of its characters reversed.\n\nWrite a function that accepts a number and returns the number with all of its characters reversed and placed in groups of three.\n\nWrite a function that accepts a string and returns the string with all of its characters reversed.\n\nWrite a function that accepts a string and an integer and returns the string with the last integer characters reversed and the rest of the string returned as the new string. If the integer is longer than the string, the new string should be the empty string.\n\nWrite a function that accepts a string and returns the last two characters of the string.\n\nWrite a function that accepts a string and returns the string with its first and last characters swapped.\n\nWrite a function that accepts a string and returns a new string with all occurrences of its first character swapped for the last character, and all occurrences of its last character swapped for the first character.\n\nWrite a function that accepts a string and returns the string with all occurrences of its first and last characters swapped.\n\nWrite a function that accepts a string and returns the string with its first and last characters swapped,\nbut all characters in between the two swapped.\n\nWrite a function that accepts a string and returns the string with its first and last characters swapped,\nbut all characters in between the two swapped.\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (c, d) swapped for every character in the range (a, b).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (c, d) swapped for every character in the range (a, b).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (c, d) swapped for every character in the range (a, b).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a, b) swapped for every character in the range (c, d).\n\nWrite a function that accepts a string and returns a new string with all characters in the range (a"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1\\n1'\nassert solution('3') == '1\\n2\\n1'\nassert solution('4') == '1\\n3\\n3\\n1'\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\naditya.tiwari@gmail.com\\nmohammed.mahmood@gmail.com\\naditya.tiwari@yahoo.com\\nmohammed.mahmood@yahoo.com') == ['mohammed.mahmood@yahoo.com', 'aditya.tiwari@yahoo.com', 'aditya.tiwari@gmail.com','mohammed.mahmood@gmail.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\nqwert@gmail.com\nzxcvbnm@example.com\nasdfg@zxcvbnm.example\nqwert@123.com''') == ['qwert@123.com', 'zxcvbnm@example.com', 'asdfg@zxcvbnm.example']\n\nassert solution('''8\nzxcvbnm@example.com\nasdfg@zxcvbnm.example\nqwert@123.com\nqwerty@123.com\nzxcvbnm@123.com\nqwert@123.com\nzxcvbnm@123.com\nqwert@123.com''') == ['zxcvbnm@123.com', 'qwerty@123.com', 'asdfg@zxcvbnm.example']\n\nassert solution('''1\nasdfg@zxcvbnm.example\nqwert@123.com\nqwerty@123.com\nzxcvbnm@123.com\nqwert@123.com\nzxcvbnm@123.com\nqwert@123.com\nqwert@123.com''') == ['zxcvbnm@123.com', 'qwerty@123.com']\n\nassert solution('''6\nzxcvbnm@example.com\nqwert@123.com\nqwerty@123.com\nzxcvbnm@123.com\nqwert@123.com\nzxcvbnm@123.com\nqwert@123.com\nqwert@123.com''') == ['qwert@123.com', 'zxcvbnm@123.com', 'asdfg@zxcvbnm.example', 'qwerty@123.com']\n\nassert solution('''10\nzxcvbnm@example.com\nqwert@123.com\nqwerty@123.com\nzxcvbnm@123.com\nqwert@123.com\nzxcvbnm@123.com\nqwert@123.com\nqwert@123.com\nqwert@123.com''') == ['zxcvbnm@123.com', 'qwerty@123.com', 'qwert@123.com', 'asdfg@zxcvbnm.example', 'qwert@123.com', 'zxcvbnm@123.com', 'asdfg@zxcvbnm.example', 'qwert@123.com', 'qwert@123.com']"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == []\nassert solution(\"ab@cd\") == [\"abcd\"]\nassert solution(\"abc@def@ghi.jklm\") == [\"abcdefghijklm\"]\nassert solution(\"abcdefghi.jklm\") == [\"abcdefghijklm\"]\nassert solution(\"abc@def@ghi.jkl\") == [\"abcdefghijkl\"]\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\nme@gmail.com\\nher@gmail.com\\nhaha\") == [\"her@gmail.com\", \"me@gmail.com\", \"haha\"]\nassert solution(\"4\\nme@gmail.com\\nher@gmail.com\\nhaha\\njoe@gmail.com\") == [\"her@gmail.com\", \"haha\", \"joe@gmail.com\"]\n\n\"\"\""
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == []\nassert solution(\"a@a.com\") == [\"a@a.com\"]\nassert solution(\"b@b.com\") == [\"b@b.com\"]\nassert solution(\"a@a-com\") == [\"a@a-com\"]\nassert solution(\"b@b.co\") == [\"b@b.co\"]\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\njoe@gmail.com\\ngmail.com\\nschmidt@gmail.com\\nreimu@gmail.com') == ['gmail.com', 'joe@gmail.com','reimu@gmail.com','schmidt@gmail.com']\nassert solution('5\\nac@gmail.com\\njoe@gmail.com\\nschmidt@gmail.com\\nreimu@gmail.com\\ndongying@gmail.com') == ['dongying@gmail.com','schmidt@gmail.com','reimu@gmail.com', 'joe@gmail.com', 'ac@gmail.com']\nassert solution('6\\nac@gmail.com\\njoe@gmail.com\\nschmidt@gmail.com\\nreimu@gmail.com\\ndongying@gmail.com\\njohn@gmail.com') == ['dongying@gmail.com','schmidt@gmail.com','reimu@gmail.com', 'joe@gmail.com', 'ac@gmail.com', 'john@gmail.com']"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n1\nt4@t3.com\n''') == ['t3.com', 't4.com']\nassert solution('''\\\n2\nt0@t0.com\nt1@t1.com\n''') == ['t0.com', 't1.com']\nassert solution('''\\\n4\nt0@t0.com\nt1@t1.com\nt2@t2.com\nt3@t3.com\n''') == ['t0.com', 't1.com', 't2.com', 't3.com']\nassert solution('''\\\n5\nt0@t0.com\nt1@t1.com\nt2@t2.com\nt3@t3.com\nt4@t4.com\n''') == ['t0.com', 't1.com', 't2.com', 't3.com', 't4.com']\nassert solution('''\\\n100\nt99@t99.com\n''') == []\n'''\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == []\nassert solution(\"1\\n\") == []\nassert solution(\"1\\n2\\n\") == [\"1@google.com\", \"2@google.com\"]\nassert solution(\"1\\n2\\n3\\n\") == [\"1@google.com\", \"2@google.com\", \"3@google.com\"]\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == [\"5@google.com\", \"4@google.com\", \"3@google.com\", \"2@google.com\", \"1@google.com\"]\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aa bb@abc.com') == ['aa@abc.com']\nassert solution('abc@123.com') == ['abc@123.com']\nassert solution('abc@123.com ') == ['abc@123.com']\nassert solution('abc@123. com') == ['abc@123.com']\nassert solution('@gmail.com') == ['@gmail.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == []\nassert solution('1\\n2\\n3') == ['2', '3']\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\n') == ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m']\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\n') == ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m']\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\n') == ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m']\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\") == [0, 1, 1, 8]\nassert solution(\"5\") == [0, 1, 1, 8, 27]\nassert solution(\"6\") == [0, 1, 1, 8, 27, 81]\n\n'''\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == [0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765,10946,17711,28657,46368,75025,121393,196418,317811,514229,832040,1346269,2178309,3524578,5702887,9227465,14930352,24157817,39088169,63245986,102334155,165580141,267914296,433494437,701408733,1134903170,1836311903,2971215073,4807526976,7778742049,12586269025,1932016792,3200368941,5587506329,92164453769,12906019531,19329837949]\n\n'''\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == [0, 1]\nassert solution('3') == [0, 1, 1]\nassert solution('4') == [0, 1, 1, 2]\nassert solution('5') == [0, 1, 1, 2, 3]\nassert solution('10') == [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n'''"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(4) == [0, 1, 1, 8]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\".join(str(num ** 3) for num in range(int(stdin)))"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(5) == [0, 1, 1, 8, 27]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\"\n\n\"\"\""
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100') == [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781909, 4052739537881, 6503929354019, 1059709519656, 1716768017754, 2982128592531, 5308709370166, 7589861836763, 12139316741006, 22585143371706, 44636899891104, 7502512207051, 1258626902521, 19641816741373, 31781110171628, 5142297093654, 83204048707219, 13462697948463, 2178309691193, 35245787919586, 57028876842455, 92274650065215, 1493035212577, 24157816944016, 39088161928625, 63212784590841, 102334155019545, 16558014101782, 267914296102344, 43349443700199, 70140873301559, 11349031705664, 18363119030099, 29712150730027, 48075269045884, 777874204914516, 125862690252150, 20365011057779, 3295128009194, 53316291173019, 862675712721952, 139583862476664, 2258514337170680, 446368998911104, 7502512207051000, 12586269025215059, 1964181674137310, 317811101716286, 514229709365400, 8320404870721954, 13462697948463100, 2178309691193543, 3524578791958646, 5702887684245500, 9227465006521515, 147905996803149, 2585143371706758, 361341896373107, 53087093701661059, 7589861836763115, 12139316741006170, 2258514337170675845, 46368998911042, 750251220705100099, 1258626902521505959, 19641816741373100, 31781110171628645, 51422970936540099, 832040487072195445, 134626979484631009, 217830969119354345, 352457879195864645, 570288768424550099, 922746500652151559, 1479059968031645, 25851433717067584549, 36134189637310745, 5308709370166105959, 758986183676311549, 1213931674100617045, 22585143371706758454910, 4636899891104220, 750251220705100099, 1258626902521505959, 196418167413731009, 3178111017162864545, 5142297093654009959, 83204048707219544549, 134626979484631009)\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 650398769162, 1233925956496, 1973817802085, 357914092543, 5794844181406, 7057504329144, 1134155131836,"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == [0]\nassert solution(2) == [0, 1]\nassert solution(3) == [0, 1, 1]\nassert solution(4) == [0, 1, 1, 2]\nassert solution(5) == [0, 1, 1, 2, 3]\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('<test>\\n<test2>\\n<test3>\\n</test2>\\n<test4>\\n</test3>\\n</test>\\n') == 3\nassert solution('<test>\\n<test2>\\n<test3>\\n</test>\\n</test2>\\n<test4>\\n</test3>\\n</test>\\n') == 2\nassert solution('<test>\\n<test2>\\n<test3>\\n<test4>\\n</test4>\\n</test3>\\n</test2>\\n</test>\\n') == 1\nassert solution('<test>\\n<test2>\\n<test3>\\n<test4>\\n<test5>\\n</test5>\\n</test4>\\n</test3>\\n</test2>\\n</test>\\n') == 0\nassert solution('<test>\\n<test2>\\n<test3>\\n<test4>\\n<test5>\\n<test6>\\n</test6>\\n</test5>\\n</test4>\\n</test3>\\n</test2>\\n</test>\\n') == 3\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0, \"should be 0\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>kukukuku</name>\n</author>\n<question type='hard'>XML 1</question>\n<description type='text'>This is the level of nesting level</description>\n</entry>\n</feed>\"\"\") == 1, \"should be 1\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>kukukuku</name>\n</author>\n<question type='hard'>XML 1</question>\n<description type='text'>This is the level of nesting level</description>\n</entry>\n</feed>\"\"\") == 2, \"should be 2\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>kukukuku</name>\n</author>\n<question type='hard'>XML 1</question>\n<description type='text'>This is the level of nesting level</description>\n</entry>\n<entry>\n<author>\n<name>kukukuku</name>\n</author>\n<question type='hard'>XML 1</question>\n<description type='text'>This is the level of nesting level</description>\n</entry>\n</feed>\"\"\") == 3, \"should be 3\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>kukukuku</name>\n</author>\n<question type='hard'>XML 1</question>\n<description type='text'>This is the level of nesting level</description>\n</entry>\n</feed>\"\"\") == 0, \"should be 0\"\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges</subtitle>\\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>'))\n\nprint(solution('<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <subtitle lang='en'>Programming challenges"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == 1\n\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == 1\n\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>Harsh</name>\n</author>\n<contributor>\n<name>Harsh</name>\n</contributor>\n<id>10</id>\n<title>A feed for programmers</title>\n<subtitle lang='en'>C++ and Java</subtitle>\n<link rel='alternate' type='text/html' href='http://about.me'/>\n<summary>\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porta ac, consequat vitae, eleifend ac, enim.\n</summary>\n</entry>\n</feed>''') == 2\n\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == 1\n\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>Harsh</name>\n</author>\n<contributor>\n<name>Harsh</name>\n</contributor>\n<id>10</id>\n<title>A feed for programmers</title>\n<subtitle lang='en'>C++ and Java</subtitle>\n<link rel='alternate' type='text/html' href='http://about.me'/>\n<summary>\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porta ac, consequat vitae, eleifend ac, enim.\n</summary>\n</entry>\n</feed>''') == 2"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('<a><b><c/></b></a>') == 2\nassert solution('<a><b/><b><c/><b/></a>') == 2\nassert solution('<a><b></b><b/>') == 2\nassert solution('<a><b><c><d><e/></d></c></b></a>') == 3\nassert solution('<a>                                    </a>') == 0\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 0\nassert solution(\n'''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 1\nassert solution(\n'''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 2\nassert solution(\n'''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 3\nassert solution(\n'''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 4\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 1\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 1\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 1"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"<a><b><c/></b><b><c><b/></c></b></a>\"\"\") == 2\nassert solution(\"\"\"<a><b><c/></b><b><c><b/></c></b></a>\"\"\") == 3\nassert solution(\"\"\"<a>  <b>  <c/>  </b>  <b> <c><b/></c>  </b>  </a>\"\"\") == 3\nassert solution(\"\"\"<a> <b> <c><b/></c> </b> </a>\"\"\") == 2\nassert solution(\"\"\"<a><b> <c> <d><e><f/></e></d></c></b></a>\"\"\") == 3\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link type='text/html'>\\n<updated>2013-12-18T12:00:00</updated>\\n</feed>\") == 0\nassert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link type='text/html'>\\n<updated>2013-12-18T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<id>\\n<updated>2013-12-18T12:00:00</updated>\\n</id>\\n</entry>\\n</feed>\") == 1\nassert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link type='text/html'>\\n<updated>2013-12-18T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<id>\\n<updated>2013-12-18T12:00:00</updated>\\n</id>\\n</entry>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<id>\\n<updated>2013-12-18T12:00:00</updated>\\n</id>\\n</entry>\\n</feed>\") == 2\nassert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link type='text/html'>\\n<updated>2013-12-18T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<id>\\n<updated>2013-12-18T12:00:00</updated>\\n</id>\\n</entry>\\n</feed>\") == 0\nprint(solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link type='text/html'>\\n<updated>2013-12-18T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<id>\\n<updated>2013-12-18T12:00:00</updated>\\n</id>\\n</entry>\\n</feed>\"));\n'''\n\nfrom collections import deque\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '3'\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>Harsh</name>\n</author>\n<id>1</id>\n<title type='text'>XML 1</title>\n<link rel='alternate' type='text/html' href='http://xml1.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</entry>\n<entry>\n<author>\n<name>Ravi</name>\n</author>\n<id>2</id>\n<title type='text'>XML 2</title>\n<link rel='alternate' type='text/html' href='http://xml2.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</entry>\n</feed>\"\"\") == '2'\n\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == '0'\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>Harsh</name>\n</author>\n<id>1</id>\n<title type='text'>XML 1</title>\n<link rel='alternate' type='text/html' href='http://xml1.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</entry>\n<entry>\n<author>\n<name>Ravi</name>\n</author>\n<id>2</id>\n<title type='text'>XML 2</title>\n<link rel='alternate' type='text/html' href='http://xml2.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</entry>\n<entry>\n<author>\n<name>Mihir</name>\n</author>\n<id>3</id>\n<title type='text'>XML 3</title>\n<link rel='alternate' type='text/html' href='http://xml3.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</entry>\n</feed>\"\"\") == '3'\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == '0'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"717-555-0123\n123-555-1234\n125-555-9988\"\"\") == [\"YES\",\"NO\",\"NO\"]\nassert solution(\"\"\"123-555-1234\n717-555-0123\n125-555-9988\"\"\") == [\"NO\",\"YES\",\"YES\"]\nassert solution(\"\"\"123-555-1234\n123455551234\n123-555-5678\"\"\") == [\"YES\",\"NO\",\"YES\"]\nassert solution(\"\"\"123-555-1234\n123455551234\n123-555-5678\"\"\") == [\"NO\",\"YES\",\"NO\"]\nassert solution(\"\"\"123-555-1234\n123455551234\n123455551234\"\"\") == [\"NO\",\"NO\",\"YES\"]\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"+91 870-0000-0000\") == \"NO\"\nassert solution(\"054-444-4444\") == \"YES\"\nassert solution(\"+91 910-1093\") == \"YES\"\nassert solution(\"089123456789\") == \"NO\"\nassert solution(\"053-867-5309\") == \"YES\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\\\"712345678\\\"\"\n) == \"YES\"\n\nassert solution(\n    \"\\\"8471234567\\\"\"\n) == \"NO\"\n\nassert solution(\n    \"\\\"912345678\\\"\"\n) == \"NO\"\n\nassert solution(\n    \"\\\"119-12345678\\\"\"\n) == \"YES\"\n\nassert solution(\n    \"\\\"912345678\\\"\"\n) == \"YES\""
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789\n123456789''') == 'NO\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\n'\nassert solution('''712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678\n712345678''') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('''912345678\n912345678\n912345678\n912345678\n912345678\n912345678\n912345678\n912345678\n912345678''') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('''9123456789\n9123456789\n9123456789\n9123456789\n9123456789\n9123456789\n9123456789\n9123456789\n9123456789''') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('''9123456789\n9123456789\n9123456789\n9123456789\n9123456789\n9123456789\n9123456789\n9123456789\n9123456789''') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''712345678\n7671234567\n90112345678''') == 'NO', '712345678'\nassert solution('''1234567890\n12345678900\n1234567890''') == 'NO', '1234567890'\nassert solution('''1234567890\n12345678901\n1234567890''') == 'YES', '1234567890'\nassert solution('''1234567890\n12345678901\n12345678901''') == 'YES', '12345678901'\nassert solution('''1234567890\n123456789012\n1234567890''') == 'YES', '1234567890'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1234 5678 9012 3456 7890 5678') == 'NO'\nassert solution('1234567890') == 'YES'\nassert solution('123456789012345') == 'NO'\nassert solution('123') == 'NO'\nassert solution('1234567890123') == 'YES'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n712345678\\n912345678\\n\") == \"YES\\nNO\\nNO\"\nassert solution(\"2\\n7612345678\") == \"NO\"\nassert solution(\"2\\n71234567890\") == \"YES\"\nassert solution(\"1\\n712345678901\") == \"YES\"\nassert solution(\"0\\n7123456789012\") == \"YES\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1357986765\") == \"NO\"\nassert solution(\"136 98765\") == \"YES\"\nassert solution(\"1 9 1234567\") == \"NO\"\nassert solution(\"876-345-67\") == \"NO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"924353476\") == \"YES\"\nassert solution(\"91787091\") == \"NO\"\nassert solution(\"89456321234567\") == \"YES\"\nassert solution(\"9879679874\") == \"YES\"\nassert solution(\"8299879898\") == \"NO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n7\n123456789\n1234567890\n1111111111\n''') == 'YES\\nNO\\nYES'\nassert solution('''\n123456789\n1234567890\n1111111111\n''') == 'NO\\nYES\\nNO'\nassert solution('''\n9\n123456789\n1234567890\n1111111111\n''') == 'NO\\nNO\\nYES'\nassert solution('''\n8\n123456789\n1234567890\n1111111111\n''') == 'NO\\nNO\\nYES'\nassert solution('''\n8\n123456789\n1234567890\n1111111111\n''') == 'NO\\nNO\\nYES'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 3 1\n5\n2 4 3 1''') == '2\\n3\\n1\\n4\\n'\nassert solution('''5\n2 4 3 1\n5\n2 4 3 1''') == '2\\n3\\n1\\n4\\n'\nassert solution('''5\n2 4 3 1\n5\n2 4 3 1''') == '2\\n3\\n1\\n4\\n'\nassert solution('''5\n2 4 3 1\n4\n2 4 3 1''') == '2\\n3\\n1\\n'\nassert solution('''5\n2 4 3 1\n5\n2 4 3 1''') == '2\\n3\\n1\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2') == '3\\n'\nassert solution('1 2\\n1\\n2') == '3\\n'\nassert solution('1 2\\n1\\n2 3') == '3\\n4\\n'\nassert solution('1 2 3\\n1\\n2') == '3\\n4\\n'\nassert solution('1 2 3\\n1\\n2 3') == '3\\n4\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9') == '3\\n4\\n5\\n6\\n7\\n8\\n9\\n'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n') == '3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n'"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n') == '2\\n3\\n4\\n'\nassert solution('1\\n2\\n3\\n4\\n') == '1\\n2\\n3\\n4\\n'\nassert solution('1\\n1\\n2\\n3\\n4\\n') == '2\\n3\\n4\\n'\nassert solution('1\\n1\\n2\\n3\\n4\\n') == '2\\n3\\n4\\n'\nassert solution('1\\n1\\n2\\n3\\n4\\n') == '2\\n3\\n4\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 3 1\n2\n4 3 1''') == '2\\n3\\n1\\n'\nassert solution('''5\n2 4 3 1\n2\n5 4 0\n5\n4 3 1''') == '2\\n3\\n1\\n5\\n'\nassert solution('''5\n2 4 3 1\n2\n5 4 0\n1\n4 3 1''') == '2\\n3\\n1\\n5\\n1\\n'\nassert solution('''5\n2 4 3 1\n2\n5 4 0\n1\n4 3 1''') == '2\\n3\\n1\\n5\\n1\\n5\\n'\nassert solution('''5\n2 4 3 1\n2\n5 4 0\n1\n4 3 1''') == '2\\n3\\n1\\n5\\n1\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n') == '1\\n'\nassert solution('2\\n2\\n1\\n') == '1\\n'\nassert solution('3\\n3\\n1\\n') == '1\\n'\nassert solution('3\\n3\\n3\\n') == '1\\n2\\n'\nassert solution('1\\n2\\n3\\n') == '1\\n2\\n3\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3''') == '2\\n4\\n6'\nassert solution('''1\n2\n3\n4\n5\n6\n7''') == '2\\n4\\n7\\n9\\n11'\nassert solution('''99\n98\n97\n95\n90\n85\n80\n70\n60\n50\n40\n35\n30\n25\n20\n15\n10\n5\n0''') == '10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55\\n60\\n65\\n70\\n75\\n80\\n85\\n90\\n95\\n100'\nassert solution('''3\n1\n2\n3''') == '1\\n4\\n6\\n7\\n9'\nassert solution('''5\n1\n2\n3\n4\n5\n6''') == '1\\n2\\n3\\n4\\n6\\n7'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n2 1\") == \"1\\n2\\n\"\nassert solution(\"3\\n1 2 3\\n2 1\\n3 1\") == \"1\\n3\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n2 1 5\\n3 4\") == \"1\\n2\\n3\\n4\\n5\\n6\\n\"\n\"\"\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\\n2 4 6 8\\n4\\n6 8 9\") == \"1 3 5 7 9\"\nassert solution(\"1 2 3 4\\n2 4 6 8\\n4\\n6 8 9\") == \"1 3 5 7 9\"\nassert solution(\"1 2 3 4\\n2 4 6 8\\n4\\n6 7 8 9\") == \"1 3 5 7 9\"\nassert solution(\"1 2 3 4\\n2 4 6 8\\n4\\n6 7 8\") == \"1 3 5 7 9\"\nassert solution(\"1 2 3 4\\n2 4 6 8\\n4\\n6 7\") == \"1 3 5 7 9\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n2\\n3\\n') == '1\\n2\\n3'\nassert solution('1\\n2\\n3\\n4\\n') == '1\\n2\\n4'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '1\\n2\\n3\\n5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n') == '1\\n2\\n4\\n6\\n7'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '1\\n2\\n3\\n5\\n6\\n8\\n9'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('inputs/input0.txt') == str(9.09)\nassert solution('inputs/input1.txt') == str(8.88)\nassert solution('inputs/input2.txt') == str(9.38)\nassert solution('inputs/input3.txt') == str(9.95)\nassert solution('inputs/input4.txt') == str(7.99)\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('STDIN') == -5.50\n'''\n\nfrom collections import namedtuple\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n\"\"\") == '40.00'\nassert solution(\"\"\"\n5\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n\"\"\") == '55.00'\nassert solution(\"\"\"\n5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n\"\"\") == '81.00'\nassert solution(\"\"\"\n5\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n\"\"\") == '81.00'\nassert solution(\"\"\"\n5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n\"\"\") == '81.00'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\nID,MARKS,CLASS,NAME\\n1,97,7,Aditya\\n2,78,7,Ajay\\n3,91,7,Ajay\\n4,72,7,Aditya') == '78.00'"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('stdin:input123') == '92.67'\n'''"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n''') == '79.33'\nassert solution('''\\\n5\nMARKS      CLASS      NAME       ID\n92         2      Stewart    5\n93         2      Peter      6\n97         1      Adrian     9\n69         2      Steven     4\n72         1      Raymond    7\n''') == '81.0'\nassert solution('''\\\n5\nMARKS      CLASS      NAME       ID\n92         2      Stewart    5\n93         2      Peter      6\n97         1      Adrian     9\n69         2      Steven     4\n72         1      Raymond    7''') == '81.0'\nassert solution('''\\\n5\nMARKS      NAME       CLASS      ID\n92         Adrian     9      2\n93         Peter      6      2\n97         Raymond    7      1\n69         Steven     4      1\n72         Stewart    5      1\n''') == '92.67'\nassert solution('''\\\n5\nMARKS      NAME       CLASS      ID\n92         Adrian     9      2\n93         Peter      6      2\n97         Raymond    7      1\n69         Steven     4      1\n72         Stewart    5      1''') == '92.67'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a\\nb\\nc\\nd\") == \"0.33\"\nassert solution(\"a,b,c,d\\na,b,c,d\\na,b,c,d\") == \"0.33\"\nassert solution(\"a\\na\\na,a,a\\na,b\\na,c\\na,d\\nb,b\\nb,c\\nb,d\\nc,c\\nc,d\\nc,d\\nd,d\\ne,f\\n\") == \"0.33\"\nassert solution(\"a\\na\\na,a,a\\na,b\\na,c\\na,d\\nb,b\\nb,c\\nb,d\\nc,c\\nc,d\\nc,d\\nd,d\\ne,f\\ng,g\\ng,h\\ng,i\\n\") == \"0.33\"\nassert solution(\"a\\na,a,a\\na,b\\na,c\\na,d\\nb,b\\nb,c\\nb,d\\nc,c\\nc,d\\nc,d\\nd,d\\ne,f\\ng,g\\ng,h\\ng,i\\n\") == \"0.33\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '3.33'\nassert solution('1\\n3\\n2\\n4\\n5\\n6\\n7\\n8\\n9') == '3.33'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '3.33'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '3.33'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '3.33'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('m1_test') == '50.00'\nassert solution('m2_test') == '50.00'\nassert solution('m3_test') == '50.00'\nassert solution('m4_test') == '50.00'\nassert solution('m5_test') == '50.00'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\nName,ID,MARKS,CLASS,NAME\\nJean,1,97,1,1jean\\nAna,2,98,2,2ana\\nTom,3,99,3,3tom\\nKrishna,4,100,4,4krishna\\n') == '85.00'\n=====Sample Input=====\n5\nID,MARKS,NAME\n1,97,jean\n2,98,ana\n3,99,tom\n4,100,krishna\n5,80,jenny\n\n=====Sample Output=====\n90.00\n'''\n\nn = int(raw_input())\ndata = []\nfor i in range(n):\n    data.append(raw_input().strip().split(','))\n\nnew_data = []\nfor i in data:\n    a = ''\n    for j in i:\n        a += str(j) + ','\n    a = a.strip(',')\n    new_data.append(a)\n\naverage = float(sum(int(i.split(',')[1]) for i in new_data))/len(new_data)\nprint('%.2f' % average)\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(17) == 'Weird'\nassert solution(2) == 'Not Weird'\nassert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(5) == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(3) == \"Weird\"\nassert solution(15) == \"Weird\"\nassert solution(24) == \"Not Weird\"\nassert solution(40) == \"Not Weird\"\n\nprint(solution(24))\n\n=====Sample Input=====\n3\n\n=====Sample Output=====\nWeird\n\n\"\"\""
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 'Weird'\nassert solution(2) == 'Not Weird'\nassert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(5) == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3) == \"Weird\"\nassert solution(2) == \"Not Weird\"\nassert solution(4) == \"Weird\"\nassert solution(22) == \"Not Weird\"\nassert solution(24) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(16) == \"Weird\"\nassert solution(2) == \"Not Weird\"\nassert solution(23) == \"Weird\"\nassert solution(24) == \"Not Weird\"\nassert solution(25) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == \"Weird\"\nassert solution(2) == \"Not Weird\"\nassert solution(3) == \"Weird\"\nassert solution(4) == \"Not Weird\"\nassert solution(5) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(10) == \"Not Weird\"\nassert solution(5) == \"Weird\"\nassert solution(6) == \"Weird\"\nassert solution(20) == \"Not Weird\"\nassert solution(9) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2) == \"Weird\"\nassert solution(3) == \"Not Weird\"\nassert solution(4) == \"Weird\"\nassert solution(6) == \"Not Weird\"\nassert solution(20) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == 'Not Weird'\nassert solution('3') == 'Not Weird'\nassert solution('25') == 'Not Weird'\nassert solution('50') == 'Weird'\nassert solution('15') == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(23) == 'Weird'\nassert solution(24) == 'Not Weird'\nassert solution(25) == 'Weird'\nassert solution(101) == 'Weird'\nassert solution(6) == 'Not Weird'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == 0\nassert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == 277\nassert solution(\"<feed xml:lang='en-gb'>\\n<title type='text'>HackerRank</title>\\n<subtitle type='text'>Programming challenges</subtitle>\\n<link type='text' rel='alternate' href='http://hackerrank.com/'/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == 277\nassert solution(\"<feed xml:lang='en-gb'>\\n<title type='text'>HackerRank</title>\\n<subtitle type='text'>Programming challenges</subtitle>\\n<link type='text' href='http://hackerrank.com/'/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == 277\nassert solution(\"<feed xml:lang='en-gb'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link>http://hackerrank.com/</link>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == 277\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '6'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '6'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '6'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '6'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '6'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('<feed xml:lang='en'> <title>HackerRank</title> <subtitle lang='en'>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6'\nassert solution('<feed xml:lang='en-gb'> <title type=\"html\">HackerRank</title> <subtitle lang=\"en\">Programming challenges</subtitle> <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6'\nassert solution('<feed xml:lang='en-us'> <title type=\"html\">HackerRank</title> <subtitle lang=\"en\">Programming challenges</subtitle> <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6'\nassert solution('<feed xml:lang=\"en-ca\"> <title type=\"html\">HackerRank</title> <subtitle lang=\"en\">Programming challenges</subtitle> <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6'\nassert solution('<feed xml:lang=\"en-uk\"> <title type=\"html\">HackerRank</title> <subtitle lang=\"en\">Programming challenges</subtitle> <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''<doc>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n</doc>''') == 23\nassert solution('''<doc>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n</doc>''') == 17\nassert solution('''<doc>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n</doc>''') == 17\nassert solution('''<doc>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n</doc>''') == 17\nassert solution('''<doc>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n  <element>\n    <text>The following sentence is a function problem</text>\n  </element>\n</doc>''') == 17\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == '7'\nassert solution(\"\"\"\n<feed xml:lang='en-gb'>\n    <title>HackerRank</title>\n    <subtitle lang='en-gb'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == '7'\nassert solution(\"\"\"\n<feed xml:lang='en-gb'>\n    <title>HackerRank</title>\n    <subtitle lang='en-gb'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <author>\n        <name>Harsh</name>\n        <email>harsh@harr.com</email>\n    </author>\n</feed>\n\"\"\") == '8'\nassert solution(\"\"\"\n<feed xml:lang='en-gb'>\n    <title>HackerRank</title>\n    <subtitle lang='en-gb'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <author>\n        <name>Harsh</name>\n        <email>harsh@harr.com</email>\n    </author>\n    <generator uri='http://www.khanshahri.in/generator/rss' version='2.0'>\n        <image>http://www.khanshahri.in/static/logo.png</image>\n        <description>RSS Generator</description>\n    </generator>\n</feed>\n\"\"\") == '8'\nassert solution(\"\"\"\n<feed xml:lang='en-gb'>\n    <title>HackerRank</title>\n    <subtitle lang='en-gb'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <author>\n        <name>Harsh</name>\n        <email>harsh@harr.com</email>\n    </author>\n    <generator uri='http://www.khanshahri.in/generator/rss' version='2.0'>\n        <image>http://www.khanshahri.in/static/logo.png</image>\n        <description>RSS Generator</description>\n    </generator>\n</feed>\n\"\"\") == '8'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<title lang=\"en\">Minimizing Permutations</title>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://www.hackerrank.com/contests/w15/challenges/minimize-permutations\"/>'\n    '<id>5</id>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<m xmlns=\"http://www.w3.org/2005/Atom\">'\n    '<title type=\"html\">Minimizing Permutations</title>'\n    '<content type=\"html\">'\n    '<![CDATA[<p>Given a string of lowercase letters, <a href=\"https://www.hackerrank.com/contests/w15/challenges/minimize-permutations\">minimize permutations</a> indicates that if we made all the permutations of the string and rearranged them, the result would be lexicographically smaller. You are given a string of lowercase letters, <a href=\"https://www.hackerrank.com/contests/w15/challenges/minimize-permutations\">write a function to help you do this</a>.</p>]]>'\n    '</content>'\n    '</m>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '3'\nassert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<title lang=\"en\">Minimizing Permutations</title>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://www.hackerrank.com/contests/w15/challenges/minimize-permutations\"/>'\n    '<id>5</id>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<m xmlns=\"http://www.w3.org/2005/Atom\">'\n    '<title type=\"html\">Minimizing Permutations</title>'\n    '<content type=\"html\">'\n    '<![CDATA[<p>Given a string of lowercase letters, <a href=\"https://www.hackerrank.com/contests/w15/challenges/minimize-permutations\">minimize permutations</a> indicates that if we made all the permutations of the string and rearranged them, the result would be lexicographically smaller. You are given a string of lowercase letters, <a href=\"https://www.hackerrank.com/contests/w15/challenges/minimize-permutations\">write a function to help you do this</a>.</p>]]>'\n    '</content>'\n    '</m>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '5'\nassert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<title lang=\"en\">Minimizing Permutations</title>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://www.hackerrank.com/contests/w15/challenges/minimize-permutations\"/>'\n    '<id>5</id>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<m xmlns=\"http://www.w3.org/2005/Atom\">'\n    '<title type=\"html\">Minimizing Permutations</title>'\n    '<content type=\"html\">'\n    '<![CDATA[<p>Given a string of lowercase letters, <a href=\"https://www.hackerrank.com/contests/w15/challenges/minimize-permutations\">minimize permutations</a> indicates that if we made all the permutations of the string and rearranged them, the result would be lexicographically smaller. You are given a string of lowercase letters, <a href=\"https://www.hackerrank.com/contests/w15/challenges/minimize-permutations\">write a function to help you do this</a>.</p>]]>'\n    '</content>'\n    '</m>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '5'\nassert solution('<feed xml:lang=\"en\">'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<entry>'\n    '<title lang=\"en\">Minimizing Permutations</title>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://www.hackerrank.com/contests/w15/challenges/minimize-permutations\"/>'\n    '<id>5</id>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<content type=\"text/xml\">'\n    '<m xmlns=\"http://www.w3.org/2005/Atom\">'\n    '<title type=\"html\">Minimizing Permutations</title>'\n    '<content type=\"html\">'\n    '<![CDATA[<p>Given a string of lowercase letters, <a href=\"https://www.hackerrank.com/contests/w15/challenges/minimize-permutations\">minimize permutations</a> indicates that if we made all the permutations of the string and rearranged them, the result would be lexicographically smaller. You are given a string of lowercase letters, <a href=\"https://www.hackerrank.com/contests/w15/challenges/minimize-permutations\">write a function to help you do this</a>.</p>]]>'\n    '</content>'\n    '</m>'\n    '</content>'\n    '</entry>'\n    '</feed>') == '5'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '1'\nassert solution('''\n<feed xml:lang='en-us'>\n    <title type='text'>HackerRank</title>\n    <subtitle lang='en-us'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution('''\n<feed xml:lang='en-us'>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '4'\nassert solution('''\n<feed xml:lang='en-us'>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '2'\nassert solution('''\n<feed xml:lang='en-us'>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '0'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('<feed xml:lang='en'>\\n  <title>HackerRank</title>\\n  <subtitle lang='en'>Programming challenges</subtitle>\\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\n=====Sample Input=====\n3\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n\n=====Sample Output=====\n6\n'''\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '6'\n\"\"\"\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\"\nassert solution(\"\"\"<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '6'\n\"\"\"\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\"\nassert solution(\"\"\"<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '6'\n\"\"\"\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\"\nassert solution(\"\"\"<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '6'\n\"\"\"\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\"\nassert solution(\"\"\"<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '6'\n\"\"\"\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('<feed xml:lang='en'>'\n                '<title>HackerRank</title>'\n                '<subtitle lang=\"en\">Programming challenges</subtitle>'\n                '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n                '<updated>2013-12-25T12:00:00</updated>'\n                '<icon>http://lh5.ggpht.com/T4mwc3Wc1HcSQNDqUR2KQWW1J3IWlvKtqMWL8Dv1LK/w=24&amp;f=s26</icon>'\n                '<logo>http://lh6.ggpht.com/HbuzU0BAmw5pj7m7hXThRkE5BF9wHW4t2cF2MM6UY7w=w=24&amp;h=5f9e7ca8dc3b9b7f96cb8f8edb6c735e&amp;sa=D&amp;r=g&amp;dpr=1</logo>'\n                '<text>'\n                '<![CDATA[<div>I have already solved this problem before, but thought the same approach might be applicable here!</div>]]>'\n                '</text>'\n                '<description>'\n                '<![CDATA[<div><p>This is my problem description</p></div>]]>'\n                '</description>'\n                '</feed>')\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0''') == 90.0\nassert solution('''1 0 0\n0 1 0\n0 0 1''') == -90.0\nassert solution('''0 1 0\n1 1 0\n0 0 1''') == 180.0\nassert solution('''1 1 1\n1 1 1\n1 1 1''') == 0.0\nassert solution('''1 1 1\n-1 1 1\n1 1 1''') == 90.0\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 4 -3 0\") == \"45.00\"\nassert solution(\"2 4 6 -2\") == \"54.73\"\nassert solution(\"0 0 0 0\") == \"0.00\"\nassert solution(\"0 0 0 -5\") == \"-5.00\"\nassert solution(\"-1 -2 3 3\") == \"4.19\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 4 0 5') == \"90.00000\"\nassert solution('1 2 3 4') == \"45.00000\"\nassert solution('-1 -2 -3 -4') == \"-45.00000\"\n'''\n\n\n\n'''\nAnswer: \n=====Problem Statement=====\nYou are given four points A, B, C and D in a 3-dimensional Cartesian coordinate system. You are required to print the angle between the plane made by the points A, B, C and B, C, D in degrees(not radians). Let the angle be PHI.\nCos(PHI) = (X.Y)/|X|Y| where X = AB x BC and Y = BC x CD.\nHere, X.Y means the dot product of X and Y, and AB x BC means the cross product of vectors AB and BC. Also, AB = B-A.\n\n=====Input Format=====\nOne line of input containing the space separated floating number values of the and coordinates of a point.\n\n=====Output Format=====\nOutput the angle correct up to two decimal places.\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0.0 1.0 0.0\n1.0 0.0 0.0\n0.0 0.0 1.0''') == 90.0\nassert solution('''0.0 0.0 1.0\n0.0 1.0 0.0\n-1.0 0.0 0.0\n1.0 0.0 0.0''') == -45.0\nassert solution('''0.0 1.0 0.0\n-1.0 0.0 0.0\n1.0 0.0 0.0''') == 45.0\nassert solution('''1.0 0.0 0.0\n0.0 0.0 1.0\n0.0 1.0 0.0\n1.0 0.0 0.0''') == 90.0\nassert solution('''-0.1245 0.1 0.0\n-0.1522 0.2 0.0\n-0.7564 0.3 0.0\n-0.4 0.4 0.0''') == -8.163336509697754\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0') == '0.00000'\nassert solution('0 0 0') == '0.00000'\nassert solution('1 1 1') == '90.00000'\nassert solution('1 0 0') == '45.00000'\nassert solution('0 1 0') == '90.00000'\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '0.0 0.0 0.0\\n'\n    '1.0 0.0 0.0\\n'\n    '0.0 1.0 0.0\\n'\n    '0.0 0.0 1.0\\n'\n) == '45.0'\n\nassert solution(\n    '0.0 0.0 0.0\\n'\n    '0.0 1.0 0.0\\n'\n    '0.0 0.0 1.0\\n'\n    '1.0 0.0 0.0\\n'\n) == '60.0'\n\nassert solution(\n    '0.0 0.0 0.0\\n'\n    '1.0 0.0 0.0\\n'\n    '0.0 1.0 0.0\\n'\n    '0.0 0.0 1.0\\n'\n) == '45.0'\n\nassert solution(\n    '0.0 0.0 0.0\\n'\n    '0.0 1.0 0.0\\n'\n    '0.0 0.0 1.0\\n'\n    '0.0 0.0 1.0\\n'\n) == '60.0'\n\nassert solution(\n    '0.0 0.0 0.0\\n'\n    '1.0 0.0 0.0\\n'\n    '0.0 1.0 0.0\\n'\n    '0.0 0.0 1.0\\n'\n) == '45.0'"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '45.0'\nassert solution('-5 -4 -3 -2') == '-45.0'\nassert solution('-5 -4 -3 0') == '-45.0'\nassert solution('0 0 0 0') == '0.0'\nassert solution('1 2 3 4') == '45.0'\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '0 4 3'\n    '0 0 0'\n    '2 0 0'\n    '2 1 0'\n) == '45.0'\nassert solution(\n    '0 0 1'\n    '1 0 0'\n    '0 0 2'\n    '0 1 0'\n) == '60.0'\nassert solution(\n    '0 0 1'\n    '1 0 0'\n    '0 0 2'\n    '0 1 1'\n) == '90.0'\nassert solution(\n    '0 0 1'\n    '1 0 0'\n    '0 0 2'\n    '0 1 2'\n) == '120.0'\nassert solution(\n    '1 0 1'\n    '0 1 0'\n    '0 1 1'\n    '0 0 2'\n) == '60.0'\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"90.00\"\n\"\"\"\n\"\"\"\nSample Input\n1.1 2.1 3.1\n\nSample Output\n90.00\n\nExplanation\n\nOn the first line, we read a single line of input, the coordinates of a point.\n\nOn the second line, we read a single line of input, giving the coordinates of another point.\n\ncos(PHI) = (X.Y)/|X|Y| where X = AB x BC and Y = BC x CD.\n\nHere, X.Y means the dot product of X and Y, and AB x BC means the cross product of vectors AB and BC. Also, AB = B-A.\n\nBecause, we are measuring angle in degrees, we need to convert the angle to radians.\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\nThe cosine of the angle between the line made by points A and B is:\n\ncos(PHI) = (X.Y) / (|X| * |Y|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB x BC) / (|AB| * |BC|)\n\ncos(PHI) = (AB"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3.0,4.0,5.0,6.0''') == 90.0\nassert solution('''0.0,0.0,0.0,0.0''') == 0.0\nassert solution('''1.0,1.0,1.0,1.0''') == 45.0\nassert solution('''3.0,2.0,6.0,2.5''') == 60.0\nassert solution('''-1.5,2.5,-1.5,-2.5''') == 90.0\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('hello') == 1\nassert solution('world') == 2\nassert solution('a') == 1\nassert solution('b') == 1\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(['hacker', 'kea', 'b', 'r', 'dev', 'ur', 'ops', 'rs','se','m','reat', 'e', 'd', 'y', 'i', 'o', 'a', 'k', 'r', 'e']) == 5\nassert solution(['a', 'b', 'c']) == 0\nassert solution(['a']) == 2\nassert solution(['a', 'b', 'c', 'd', 'e', 'f']) == 3\nassert solution(['a', 'b', 'c', 'd', 'e', 'f']) == 3\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('test') == 0\nassert solution('codewars') == 1\nassert solution('abba') == 4\nassert solution('abcdefgh') == 0\nassert solution('zzzzzzzzzzzz') == 2\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('mississippi') == 5\nassert solution('abcdefghijklmnopqrstuvwxyz') == 0\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0,2,4,6,8,10,12,14,16,18,20') == '40'\nassert solution('3,9,12,15,18,21') == '102'\nassert solution('3,6,9,12,15,18,21') == '60'\nassert solution('2,6,9,12,15,18,21') == '50'\nassert solution('1,3,5,7,9,11,13,15,17,19,21') == '222'\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\nbcdef\nabcdefg''') == '2'\nassert solution('''3\ncdefg\nabcdef''') == '1'\nassert solution('''3\ncdeg\nabcdef''') == '1'\nassert solution('''3\nde\nabcdef''') == '0'\nassert solution('''3\nab\nabcdef''') == '2'\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"ba\") == 2\nassert solution(\"bab\") == 4\nassert solution(\"babc\") == 1\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n2\nhacker book\n''') == '1'\nassert solution('''\n2\nhacker book\n''') == '2'\nassert solution('''\n2\nw3resource\n''') == '4'\nassert solution('''\n2\nwrter scoR\n''') == '1'\nassert solution('''\n2\nw3sOk\n''') == '2'\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\nthis is a pen') == 2\nassert solution('3\\nthis is a pen') == 1\nassert solution('2\\nthis is a pen') == 1\nassert solution('1\\nthis is a pen') == 2\nassert solution('2\\nthis is a pen') == 1\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"a\") == 1\nassert solution(\"e\") == 2\nassert solution(\"i\") == 2\nassert solution(\"o\") == 2\nassert solution(\"u\") == 2\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"XI\") == True\nassert solution(\"CDXXI\") == False\nassert solution(\"XC\") == False\nassert solution(\"MMMCMXCIX\") == False\nassert solution(\"MMMM\") == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"XII\") == True\nassert solution(\"XIV\") == True\nassert solution(\"XX\") == False\nassert solution(\"XXI\") == False\nassert solution(\"XCVIII\") == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"VII\") == True\nassert solution(\"MCMXCIV\") == False\nassert solution(\"MMDCCCLXXXVIII\") == False\nassert solution(\"MMXI\") == False\nassert solution(\"VX\") == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"XI\") == True\nassert solution(\"IM\") == False\nassert solution(\"VI\") == True\nassert solution(\"MXIV\") == True\nassert solution(\"MCMXCIX\") == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('XVI') == True\nassert solution('MMXXI') == False\nassert solution('MCMLXXXIX') == True\nassert solution('MM') == False\nassert solution('M') == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"MDCLXVI\") == True\nassert solution(\"IV\") == True\nassert solution(\"MMMCMXCIX\") == True\nassert solution(\"MMMDCCCLXXXVIII\") == True\nassert solution(\"MMMCDLXXV\") == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('XXI') == True\nassert solution('III') == True\nassert solution('XX') == False\nassert solution('VVV') == False\nassert solution('I') == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"X\")\nassert solution(\"XL\")\nassert solution(\"CDXLIII\")\nassert not solution(\"MMCMXCIX\")\nassert solution(\"MMMMMCDXCVIII\")\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"XXI\") == True\nassert solution(\"IV\") == True\nassert solution(\"MCMXLIV\") == False\n'''"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"I\") == True\nassert solution(\"XXI\") == False\nassert solution(\"MMMCMXCIX\") == False\nassert solution(\"MMMM\") == False\nassert solution(\"MMMCCCLXXXIX\") == False\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n91 8634532\\n82 8564553\\n8567895 43\\n9734143 11\"\n) == \"91 8634532\\n82 8564553\\n8567895 43\\n9734143 11\"\n\nassert solution(\n    \"4\\n91 8634532\\n82 8564553\\n8567895 43\\n9734143 11\"\n) == \"91 8634532\\n92 8564553\\n93 8564553\\n9734143 11\"\n\nassert solution(\n    \"4\\n91 8634532\\n82 8564553\\n8567895 43\\n9734143 11\"\n) == \"91 8634532\\n92 8564553\\n93 8564553\\n9734143 11\"\n\nassert solution(\n    \"4\\n91 8634532\\n82 8564553\\n8567895 43\\n9734143 11\"\n) == \"91 8634532\\n92 8564553\\n93 8564553\\n9734143 11\"\n\nassert solution(\n    \"4\\n91 8634532\\n82 8564553\\n8567895 43\\n9734143 11\"\n) == \"91 8634532\\n92 8564553\\n93 8564553\\n9734143 11\""
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9991 1234 5678') == '+91 99111234 5678'\nassert solution('99911234 5678') == '+91 99111234 5678'\nassert solution('9991 1234 5678') == '+91 99111234 5678'\nassert solution('99 91 1234 5678') == '+91 99111234 5678'\nassert solution('99 911234 5678') == '+91 99111234 5678'\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n97102345678\n09876543211\n789032134523\n''') == '''\n+91 97102345678\n+91 09876543211\n+91 789032134523\n'''\nassert solution('''\n867562965\n7582736549\n''') == '''\n+91 867562965\n+91 7582736549\n'''\nassert solution('''\n+91 90533223323\n85114445555\n+96655446666\n+91377778888\n''') == '''\n+91 90533223323\n+91377778888\n+91 96655446666\n+91377778888\n'''\nassert solution('''\n+91 9072395462\n+96677887799\n+91 9756787654\n''') == '''\n+91 9072395462\n+91 9756787654\n+96677887799\n'''\nassert solution('''\n+91 90533223323\n85114445555\n+96655446666\n+91377778888\n''') == '''\n+91 90533223323\n+91377778888\n+96655446666\n+91377778888\n'''\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n+91 7829042099\n+91 7041209900\n-91 7729194313\n+91 9191432910\n-91 7255940253\n+91 9191430263\n-91 9191430263\n-91 9191430263\n+91 9191430263\n-91 9191430263\n+91 9191430263\n-91 9191430263\n+91 9191430263\n-91 9191430263\n+91 9191430263\n-91 9191430263\n-91 9191430263\n+91 9191430263\n\"\"\") == \"\"\"\n+91 7829042099\n+91 7041209900\n-91 7729194313\n+91 9191432910\n-91 7255940253\n+91 9191430263\n-91 9191430263\n-91 9191430263\n+91 9191430263\n-91 9191430263\n+91 9191430263\n-91 9191430263\n\"\"\".strip()\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"+91 9922223333 \\n+91 9876554444 \\n+91 9877777777 \\n+1 9667777778\") == \"+91 9922223333 \\n+91 9876554444 \\n+91 9877777777 \\n+91 9667777778\"\n\nassert solution(\"+1 9667777778 \\n+1 9667777777 \\n+1 9667777778 \\n+1 9667777778\") == \"+1 9667777778 \\n+1 9667777777 \\n+1 9667777778 \\n+1 9667777778\"\n\nassert solution(\"+1 9667777777 \\n+1 9667777778 \\n+1 9667777778 \\n+1 9667777778\") == \"+1 9667777777 \\n+1 9667777778 \\n+1 9667777778 \\n+1 9667777778\"\n\nassert solution(\"+1 9667777778 \\n+1 9667777777 \\n+1 9667777778 \\n+1 9667777778\") == \"+1 9667777778 \\n+1 9667777777 \\n+1 9667777778 \\n+1 9667777778\"\n\nassert solution(\"+1 9667777778 \\n+1 9667777777 \\n+1 9667777778 \\n+1 9667777778\") == \"+1 9667777778 \\n+1 9667777777 \\n+1 9667777778 \\n+1 9667777778\""
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n07895462130\n0767543210''') == '+91 7867543210\\n+91 786754321\\n'\n\nassert solution('''3\n0767543210\n07895462130\n07895462130''') == '+91 7867543210\\n+91 786754321\\n+91 786754321\\n'\n\nassert solution('''5\n0767543210\n07895462130\n0767543210\n0767543210\n0767543210''') == '+91 7867543210\\n+91 786754321\\n+91 786754321\\n+91 7867543210\\n+91 7867543210\\n'\n\nassert solution('''5\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210''') == '+91 7867543210\\n+91 7867543210\\n+91 7867543210\\n+91 7867543210\\n+91 7867543210\\n'\n\nassert solution('''100\n07895462130\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n0767543210\n076"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('+91 56789 123') == '+91 56789 123', 'example 1'\nassert solution('56789 123') == '+91 56789 123', 'example 2'\nassert solution('91 56789 123') == '+91 56789 123', 'example 3'\nassert solution('91256789 123') == '+91 91256789 123', 'example 4'\nassert solution('91 91256789 123') == '+91 91256789 123', 'example 5'\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 91 12 45 6 7 8\") == \"+91 0 91 12 45 6 7 8\"\nassert solution(\"+91 0 91 12 45 6 7 8\") == \"+91 0 91 12 45 6 7 8\"\nassert solution(\"+91 91 12 45 6 7 8\") == \"+91 91 12 45 6 7 8\"\nassert solution(\"+91 91245 6 7 8\") == \"+91 91245 6 7 8\"\nassert solution(\"+91 91245 6 7 8\") == \"+91 91245 6 7 8\"\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n+91 xxxxx xxxxx\n91 xxxxx xxxxx\n+91 9xxxxxxxxxx\n91 9xxxxxxxxxx\n\"\"\") == \"\"\"\n+91 9xxxxxxxxxx\n+91 9xxxxxxxxxx\n\"\"\"\nassert solution(\"\"\"\n+91 9xxxxxxxxxx\n+919xxxxxxxxxx\n+91 9xxxxxxxxxx\n+919xxxxxxxxxx\n\"\"\") == \"\"\"\n+91 9xxxxxxxxxx\n+919xxxxxxxxxx\n\"\"\"\nassert solution(\"\"\"\n+91 9xxxxxxxxxx\n+919xxxxxxxxxx\n+91 9xxxxxxxxxx\n\"\"\") == \"\"\"\n+91 9xxxxxxxxxx\n+919xxxxxxxxxx\n\"\"\"\nassert solution(\"\"\"\n+91 9xxxxxxxxxx\n\"\"\") == \"\"\"\n+91 9xxxxxxxxxx\n\"\"\"\nassert solution(\"\"\"\n+91 9xxxxxxxxxx\n\"\"\") == \"\"\"\n+91 9xxxxxxxxxx\n\"\"\"\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('+91 9876543210') == '+91 9876543210'\nassert solution('917123456789') == '+91 9876543210'\nassert solution('+91 9876543210') == '+91 9876543210'\nassert solution('917123456789') == '+91 9876543210'\nassert solution('917123456789') == '+91 9876543210'\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"alpha\n20 30 40\nbeta\n30 50 70\n\"\"\") == \"50.00\"\nassert solution(\"\"\"alpha\n20 30 40\nbeta\n30 50 70\npeter\n\"\"\") == \"45.00\"\nassert solution(\"\"\"alpha\n20 30 40\nbeta\n30 50 70\npeter\nqwe\n\"\"\") == \"45.00\"\nassert solution(\"\"\"alpha\n20 30 40\nbeta\n30 50 70\nqwe\n\"\"\") == \"45.00\"\nassert solution(\"\"\"alpha\n20 30 40\nbeta\n30 50 70\nqwe\n\"\"\") == \"45.00\"\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n    alpha: [20,30,40]\n    beta: [30,50,70]\n    query_name: beta\n''') == '50.00'\n\nassert solution('''\n    alpha: [20,30,40]\n    beta: [30,50,70]\n    query_name: alpha\n''') == '20.50'\n\nassert solution('''\n    alpha: [20,30,40]\n    beta: [30,50,70]\n    query_name: zeta\n''') == 'no record'\n\nassert solution('''\n    alpha: [20,30,40]\n    beta: [30,50,70]\n    query_name: alpha\n''') == '20.50'\n\n'''\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('input_test.txt') == \"37.50\""
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('alpha') == 50.0\nassert solution('beta') == 50.0\nassert solution('alpha beta') == 50.0\nassert solution('alpha beta beta') == 50.0\nassert solution('beta alpha') == 50.0\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input.txt') == '56.00'\n\n\"\"\"\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('alpha:20,30,40\\ntwo:30,50,70\\na:20,80,80\\na') == '50.0'\nassert solution('alpha:20,30,40\\ntwo:30,50,70\\na:20,80,80\\nb:30,50,70') == '50.0'\nassert solution('two:30,50,70\\na:20,80,80\\nb:30,50,70') == '50.0'\nassert solution('alpha:20,30,40\\ntwo:30,50,70\\na:20,80,80\\nb:30,50,70\\nalpha:20,30,40') == '50.0'\nassert solution('two:30,50,70\\na:20,80,80\\nb:30,50,70\\na:20,80,80\\na:20,30,40') == '50.0'\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == None\n\n\"\"\"\n\"\"\"\n      \n\n\n\n\"\"\"\n\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\nalpha: 20 30 40\nbeta: 30 50 70\n''') == '50.00'\n\nassert solution('''\nalpha: 30 40 50\nbeta: 30 50 70\n''') == '45.00'\n\nassert solution('''\nalpha: 20 30 40\nbeta: 30 50 70\nalpha: 30 40 50\nbeta: 30 50 70\n''') == '39.50'\n\nassert solution('''\nalpha: 30 40 50\nbeta: 30 50 70\nalpha: 30 40 50\nbeta: 30 50 70\n''') == '38.00'\n'''\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''alpha: [20, 30, 40]\nbeta: [30, 50, 70]\ngamma: [40, 60, 80]\ndelta: [50, 50, 70]\nepsilon: [60, 60, 80]\nzeta: [70, 70, 80]\neta: [80, 80, 80]\ntheta: [80, 80, 80]''') == '50.00'\nassert solution('''alpha: [20, 30, 40]\nbeta: [30, 50, 70]\ngamma: [40, 60, 80]\ndelta: [50, 50, 70]\nepsilon: [60, 60, 80]\nzeta: [70, 70, 80]\neta: [80, 80, 80]''') == '70.00'\nassert solution('''alpha: [20, 30, 40]\nbeta: [30, 50, 70]\ngamma: [40, 60, 80]\ndelta: [50, 50, 70]\nepsilon: [60, 60, 80]\nzeta: [70, 70, 80]\neta: [80, 80, 80]''') == '60.00'\nassert solution('''alpha: [20, 30, 40]\nbeta: [30, 50, 70]\ngamma: [40, 60, 80]\ndelta: [50, 50, 70]\nepsilon: [60, 60, 80]\nzeta: [70, 70, 80]\neta: [80, 80, 80]''') == '50.00'\nassert solution('''alpha: [20, 30, 40]\nbeta: [30, 50, 70]\ngamma: [40, 60, 80]\ndelta: [50, 50, 70]\nepsilon: [60, 60, 80]\nzeta: [70, 70, 80]\neta: [80, 80, 80]''') == '40.00'\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == '60.00'"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\nJohnny 26 M\\nJill 19 F') == 'Ms. Jill\\nMr. Johnny\\n'\n\nassert solution('3\\nAlberto 26 M\\nShri Ram 19 F\\nChandan 19 M') == 'Ms. Chandan\\nMs. Shri Ram\\nMr. Alberto\\n'\n\nassert solution('3\\nAlberto 26 M\\nAman Singh 19 F\\nChandan 19 M') == 'Ms. Chandan\\nMs. Aaman\\nMr. Alberto\\n'\n\nassert solution('3\\nShri Ram 19 M\\nAman Singh 19 F\\nChandan 19 M') == 'Ms. Chandan\\nMs. Aaman\\nMr. Shri Ram\\n'\n\nassert solution('3\\nAlberto 26 M\\nAman Singh 19 F\\nChandan 19 M') == 'Ms. Chandan\\nMs. Aaman\\nMr. Alberto\\n'"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == None\nassert solution('a  b') == None\nassert solution('a  b  c') == None\nassert solution('A  B  C') == None\nassert solution('A  B  C  D  E  F  G') == None\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\nAndrew Gee\\nMark Ritchie') == 'Mr. Andrew Gee\\nMr. Mark Ritchie'\nassert solution('2\\nAndrew Gee\\nMark Ritchie\\nBill Gates') == 'Mr. Andrew Gee\\nMr. Mark Ritchie\\nMr. Bill Gates'\nassert solution('3\\nAndrew Gee\\nMark Ritchie\\nBill Gates\\nSteve Jobs') == 'Mr. Andrew Gee\\nMr. Mark Ritchie\\nMr. Bill Gates\\nMr. Steve Jobs'\nassert solution('4\\nAndrew Gee\\nMark Ritchie\\nBill Gates\\nSteve Jobs\\nLarry Page') == 'Mr. Andrew Gee\\nMr. Mark Ritchie\\nMr. Bill Gates\\nMr. Steve Jobs\\nMr. Larry Page'\nassert solution('5\\nAndrew Gee\\nMark Ritchie\\nBill Gates\\nSteve Jobs\\nLarry Page\\nTim Cook') == 'Mr. Andrew Gee\\nMr. Mark Ritchie\\nMr. Bill Gates\\nMr. Steve Jobs\\nMr. Larry Page\\nMs. Tim Cook'\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\nHarlan Thompson 29 M\nRuth Blevins 30 M\nSonja Johnson 22 M\n''') == '''\nMr. Harlan Thompson\nMs. Ruth Blevins\nMs. Sonja Johnson\n'''\nassert solution('''\n3\nJill Jones 19 M\nJillian Johnson 19 M\nSally Jane 21 F\n''') == '''\nMs. Jill Jones\nMr. Jill Jones\nMs. Sally Jane\n'''\nassert solution('''\n5\nKellen Lynne 22 M\nYul Brynn 30 F\nNathan Terry 22 M\nRita Jane 25 F\nSally Jane 28 F\n''') == '''\nMs. Rita Jane\nMs. Yul Brynn\nMr. Nathan Terry\nMs. Sarah Jane\nMs. Sally Jane\n'''\nassert solution('''\n10\nSally Jane 28 F\nSally Jane 25 F\nJillian Johnson 19 M\nKaren Kelly 22 M\nRita Jane 25 F\nAidan Thomas 23 M\nNathan Terry 22 M\nRudy Rufus 22 M\nKrislynne Arthur 24 M\nSarah Alice 26 F\n''') == '''\nMs. Sally Jane\nMs. Rita Jane\nMs. Yul Brynn\nMr. Nathan Terry\nMs. Karen Kelly\nMs. Katherine Kelly\nMs. Aida Thomas\nMr. Aidan Thomas\nMs. Sarah Alice\nMs. Rita Jane\nMs. Rufus Rufus\nMs. Krislynne Arthur\nMs. Sarah Alice\nMs. Sarah Alice\n'''\nassert solution('''\n100\n''') == ''\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n1\nSam Harris\n2\nScott Rixner\n''') == '''\nMr. Scott Rixner\nMs. Harris\n'''\n\nassert solution('''\n2\nHannah Abbott\nMegan Dunlop\n''') == '''\nMs. Hannah Abbott\nMs. Megan Dunlop\n'''\n\nassert solution('''\n10\nPeter Pan\nGeorge Jetson\n6\nJames Murphy\n4\nAnnie Perkins\n2\nScott Rixner\nJanet Williams\n''') == '''\nJanet Williams\nPeter Pan\nGeorge Jetson\nScott Rixner\nAnnie Perkins\nJames Murphy\n6\n'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a\\nb\\nc\\nd\\ne\\nf') == 'a\\nb\\nc\\nd\\ne\\nf'\nassert solution('a\\nb\\nc\\nd\\ne\\nf\\n') == 'a\\nb\\nc\\nd\\ne\\nf'\nassert solution('a\\nb\\nc\\nd\\ne\\nf\\n') == 'a\\nb\\nc\\nd\\ne\\nf'\nassert solution('a\\nb\\nc\\nd\\ne\\nf\\na\\nb\\nc\\nd\\ne\\nf') == 'a\\nb\\nc\\nd\\ne\\nf\\na\\nb\\nc\\nd\\ne\\nf'\nassert solution('a\\nb\\nc\\nd\\ne\\nf\\na\\nb\\nc\\nd\\ne\\nf\\n') == 'a\\nb\\nc\\nd\\ne\\nf\\na\\nb\\nc\\nd\\ne\\nf'\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\nAman    Lal\\n10    F') == \"Mr. Aman Lal\\nMs. Aman Lal\"\nassert solution('2\\nAman    Lal\\n10    F\\nAbdul    Khan\\n10    M') == \"Ms. Abdul Khan\\nMr. Aman Lal\"\nassert solution('2\\nAbdul    Khan\\n10    F\\nAman    Lal\\n10    M') == \"Ms. Abdul Khan\\nMr. Aman Lal\"\nassert solution('4\\nAman    Lal\\n10    F\\nAbdul    Khan\\n10    M\\nAbdullah    Khan\\n10    M\\nAman    Lal\\n10    F\\nAbdul    Khan') == \"Ms. Abdul Khan\\nMs. Abdullah Khan\\nMr. Aman Lal\\nMr. Aiman Lal\"\nassert solution('4\\nAman    Lal\\n10    F\\nAbdul    Khan\\n10    M\\nAbdullah    Khan\\n10    M\\nAman    Lal\\n10    F\\nAbdul    Khan\\n10    M\\nAman    Lal\\n10    F\\nAbdul    Khan') == \"Ms. Abdul Khan\\nMs. Abdullah Khan\\nMr. Aman Lal\\nMs. Aiman Lal\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n1\nSam Harris    4    M\n2    Cheng-Han    2    F\n3    Ted Stevens    5    M\n4    Mark Zuckerberg    3    M\n5    Bill Gates    55    M\n6    Steve Jobs    51    M\n''') == '''\\\nMr. Charles Darwin\nMs. Mary George\nMs. Ted Stevens\nMr. Jeff Bezos\nMs. Bill Gates\nMr. Steve Jobs\n'''\n\nassert solution('''\\\n1\nSusan Meyers    3    M\n2    Mark Zuckerberg    4    M\n3    Paul Allen    9    M\n4    Larry Page    6    M\n5    Bill Gates    10    M\n6    Mike Bloomberg    7    M\n''') == '''\\\nMs. Susan Meyers\nMr. Paul Allen\nMs. Larry Page\nMr. Bill Gates\nMs. Mike Bloomberg\nMs. Bill Gates\nMr. Larry Page\n'''\n\nassert solution('''\\\n1\nVladimir Nabokov    5    M\n2    Barack Obama    49    M\n3    Madonna    19    F\n4    Hillary Clinton    16    F\n5    Bernie Sanders    13    M\n6    Donald Trump    2    M\n7    George W. Bush    1    M\n8    Bill Clinton    65    M\n9    Pete Seeger    34    M\n10    Donald R. Trump    69    M\n''') == '''\\\nMs. Vladimir Nabokov\nMr. Vladimir Nabokov\nMs. Hillary Clinton\nMrs. Hillary Clinton\nMs. Seeger\nMs. Barack Obama\nMr. Barack Obama\nMs. Madonna\nMs. Hillary Clinton\nMrs. Barack Obama\nMr. Donald Trump\nMr. Donald Trump\nMs. George W. Bush\nMrs. George W. Bush\nMr. George W. Bush\n'''\n\nassert solution('''\\\n1\nZara    3    \n2    Yolanda    3    \n3    Xander    2    \n4    Thomas    2    \n5    Tiffany    2    \n6    Henry    2    \n7    Michael    2    \n8    Brett    2    \n9    Stewart    2    \n10    Kim    2    \n11    Lauren    2    \n12    Andrew    2    \n13    Sharon    2    \n14    Vicki    2    \n15    Hannah    2    \n16    Loren    2    \n17    Michael    2    \n18    Laura    2    \n19    Gail    2    \n20    Brenda    2    \n21    Joshua    2    \n22    Leonardo    2    \n23    Chloe    2    \n24    Christopher    2    \n25    Debra    2    \n26    Jessica    2    \n27    Nicholas    2    \n28    Emily    2    \n29    Susan    2    \n30    Dylan    2    \n31    Karen    2    \n32    Asha    2    \n33    Samuel    2    \n34    Grace    2    \n35    Charles    2    \n36    Zoe    2    \n37    Benjamin    2    \n38    Katherine    2    \n39    Andrew    2    \n40    Jacqueline    2    \n41    Hayden    2    \n42    Nicholas    2    \n43    Emily    2    \n44    Julia    2    \n45    Stephen    2    \n46    Diana    2    \n47    Parker    2    \n48    Kimberly    2    \n49    Lauren    2    \n50    Joshua    2    \n51    Mary    2    \n52    Edward    2    \n53    Debra    2    \n54    Christopher    2    \n55    Kevin    2    \n56    Ella    2    \n57    Sophie    2    \n58    Leslie    2    \n59    Julie    2    \n60    Kayla    2    \n61    Heather    2    \n62    Michelle    2    \n63    Theresa    2    \n64    Tami    2    \n65    Tracy    2    \n66    Kathleen    2    \n67    Lisa    2    \n68    Luke    2    \n69    Debra    2    \n70    Debra    2    \n71    Sebastian    2    \n72    Diane    2    \n73    Dorothy    2    \n74    Armando    2    \n75    Carolyn    2    \n76    Michelle    2    \n77    Kimberly    2    \n78    Lauren    2    \n79    Jane    2    \n80    Elizabeth    2    \n81    Melanie    2    \n82    Katherine    2    \n83    Lauren    2    \n84    Linda    2    \n85    Elizabeth    2    \n86    Amy    2    \n87    Mary    2    \n88    Julie    2    \n89    Kim    2    \n90    Jane    2    \n91    Maya    2    \n92    Jasmine    2    \n93    Kayla    2    \n94    Lily    2    \n95    Ella    2    \n96    Sophie    2    \n97    Rachel    2    \n98    Victoria    2    \n99    Theresa    2    \n100    Laura    2    \n101    Emily    2    \n102    Grace    2    \n103    Asha    2    \n104    Erica    2    \n105    Charlotte    2    \n106    Debra    2    \n107    Lisa    2    \n108    Michael    2    \n109    Diane    2    \n110    Edward    2    \n111    Julia    2    \n112    Arthur    2    \n113    Marilyn    2    \n114    Nicholas    2    \n115    Susan    2    \n116    Kathy    2    \n117    Doris    2    \n118    Joanne    2    \n119    Kathryn    2    \n120    Jessica    2    \n121    Katie    2    \n122    Ella    2    \n123    Aurora    2    \n124    Michelle    2    \n125    Laura    2    \n126    Gabrielle    2    \n127    Sarah    2    \n128    Danielle    2    \n129    Josephine    2    \n130    Katherine    2    \n131    Lauren    2    \n132    Megan    2    \n133    June    2    \n134    Stephanie    2    \n135    Julia    2    \n136    Laura    2    \n137    Paula    2    \n138    Natalie    2    \n139    Joshua    2    \n140    Anna    2    \n141    Sophia    2    \n142    Kathleen    2    \n143    Leah    2    \n144    Maria    2    \n145    Kathryn    2    \n146    Renee    2    \n147    Katrina    2    \n148    Pamela    2    \n149    Isabella    2    \n150    Eliza    2    \n151    Hannah    2    \n152    Amelia    2    \n153    Anna    2    \n154    Alexa    2    \n155    Lillian    2    \n156    William    2    \n157    Karen    2    \n158    Amber    2    \n159    Riley    2    \n160    Charlotte    2    \n161    Luna    2    \n162    Bella    2    \n163    Eliana    2    \n164    Katelyn    2    \n165    Jasmine    2    \n166    Daniela    2    \n167    Maya    2    \n168    Jasmine    2    \n169    Elizabeth    2    \n170    Diana    2    \n171    Karen    2    \n172    Ann    2    \n173    Mia    2    \n174    Courtney    2    \n175    Kayla    2    \n176    Ava    2    \n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == ''\nassert solution('1') == ''\nassert solution('5') == '''Mary George\nMr. Henry Davids'''\nassert solution('4') == '''Mary George\nMr. Henry Davids\nMs. Mary George\nMr. James Thornton'''\nassert solution('3') == '''Mary George\nMs. Mary George\nMr. James Thornton\nMr. Henry Davids'''\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"(0,0,2),(0,1,1),(0,2,0),(1,0,1),(1,1,0),(1,2,2)\"\n\n\n\"\"\"\n=====Output Format=====\nPrint the list of elements that do not sum to n = 3.\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2\\n3') == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == [\"(0, 0, 1)\", \"(0, 0, 2)\", \"(0, 1, 1)\", \"(1, 0, 1)\"]\nassert solution(\"2 2 2 3\") == [\"(0, 0, 0)\", \"(0, 0, 1)\", \"(0, 0, 2)\", \"(0, 1, 0)\", \"(0, 1, 1)\", \"(0, 1, 2)\", \"(1, 0, 0)\", \"(1, 0, 1)\", \"(1, 0, 2)\", \"(1, 1, 0)\", \"(1, 1, 1)\", \"(1, 1, 2)\"]\nassert solution(\"1 2 1 3\") == [\"(0, 0, 0)\", \"(0, 0, 1)\", \"(0, 0, 2)\", \"(0, 1, 0)\", \"(0, 1, 1)\", \"(0, 1, 2)\", \"(1, 0, 0)\", \"(1, 0, 1)\", \"(1, 0, 2)\", \"(1, 1, 0)\", \"(1, 1, 1)\", \"(1, 1, 2)\"]\nassert solution(\"3 2 1 3\") == [\"(0, 0, 0)\", \"(0, 0, 1)\", \"(0, 0, 2)\", \"(0, 1, 0)\", \"(0, 1, 1)\", \"(0, 1, 2)\", \"(1, 0, 0)\", \"(1, 0, 1)\", \"(1, 0, 2)\", \"(1, 1, 0)\", \"(1, 1, 1)\", \"(1, 1, 2)\"]\nassert solution(\"2 1 1 3\") == [\"(0, 0, 0)\", \"(0, 0, 1)\", \"(0, 0, 2)\", \"(0, 1, 0)\", \"(0, 1, 1)\", \"(0, 1, 2)\", \"(1, 0, 0)\", \"(1, 0, 1)\", \"(1, 0, 2)\", \"(1, 1, 0)\", \"(1, 1, 1)\", \"(1, 1, 2)\"]\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1\n1\n2''') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]\"\nassert solution('''2\n2\n2\n2''') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 2], [1, 0, 0], [1, 0, 2], [1, 1, 0], [1, 1, 2]]\"\nassert solution('''3\n3\n3\n3''') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('''4\n4\n4\n4''') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3]]\"\nassert solution('''5\n5\n5\n5''') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 0, 4], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 2, 4], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [0, 3, 4], [0, 4, 0], [0, 4, 1], [0, 4, 2], [0, 4, 3], [0, 4, 4], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 0, 4], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 1, 4], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 2, 4], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [1, 3, 4], [1, 4, 0], [1, 4, 1], [1, 4, 2], [1, 4, 3], [1, 4, 4], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 0, 4], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 1, 4], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 2, 4], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [2, 3, 4], [2, 4, 0], [2, 4, 1], [2, 4, 2], [2, 4, 3], [2, 4, 4], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 0, 4], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 1, 4], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 2, 4], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3], [3, 3, 4], [3, 4, 0], [3, 4, 1], [3, 4, 2], [3, 4, 3], [3, 4, 4], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 0, 3], [4, 0, 4], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 1, 3], [4, 1, 4], [4, 2, 0], [4, 2, 1], [4, 2, 2], [4, 2, 3], [4, 2, 4], [4, 3, 0], [4, 3, 1], [4, 3, 2], [4, 3, 3], [4, 3, 4], [4, 4, 0], [4, 4, 1], [4, 4, 2], ["
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n3') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('1\\n2\\n2\\n4') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 2], [0, 2, 1], [1, 0, 0], [1, 0, 2], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 2], [2, 2, 1], [2, 2, 2]]\"\nassert solution('1\\n3\\n2\\n5') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('1\\n2\\n3\\n4') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('1\\n1\\n2\\n3') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 10\") == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 1, 0],\n    [0, 1, 1],\n    [1, 0, 0],\n    [1, 0, 1],\n    [1, 1, 0],\n    [1, 1, 1]\n]\n\nassert solution(\"1 1 1 2\") == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 1, 0],\n    [0, 1, 1],\n    [1, 0, 0],\n    [1, 0, 1],\n    [1, 1, 0],\n    [1, 1, 1]\n]\n\nassert solution(\"2 3 4 5\") == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 1, 0],\n    [0, 1, 1],\n    [0, 2, 0],\n    [0, 2, 1],\n    [0, 3, 0],\n    [0, 3, 1],\n    [1, 0, 0],\n    [1, 0, 1],\n    [1, 1, 0],\n    [1, 1, 1],\n    [1, 2, 0],\n    [1, 2, 1],\n    [1, 3, 0],\n    [1, 3, 1]\n]\n\nassert solution(\"2 3 4 8\") == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 1, 0],\n    [0, 1, 1],\n    [0, 2, 0],\n    [0, 2, 1],\n    [0, 3, 0],\n    [0, 3, 1],\n    [1, 0, 0],\n    [1, 0, 1],\n    [1, 1, 0],\n    [1, 1, 1],\n    [1, 2, 0],\n    [1, 2, 1],\n    [1, 3, 0],\n    [1, 3, 1]\n]\n\nassert solution(\"2 3 4 7\") == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 1, 0],\n    [0, 1, 1],\n    [0, 2, 0],\n    [0, 2, 1],\n    [0, 3, 0],\n    [0, 3, 1],\n    [1, 0, 0],\n    [1, 0, 1],\n    [1, 1, 0],\n    [1, 1, 1],\n    [1, 2, 0],\n    [1, 2, 1],\n    [1, 3, 0],\n    [1, 3, 1]\n]"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1\n1\n1\n1\"\"\") == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution(\"\"\"2\n2\n2\n2\"\"\") == [[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution(\"\"\"3\n3\n3\n3\"\"\") == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[0,2,0],[0,2,1],[0,2,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2],[1,2,0],[1,2,1],[1,2,2],[2,0,0],[2,0,1],[2,0,2],[2,1,0],[2,1,1],[2,1,2],[2,2,0],[2,2,1],[2,2,2]]\nassert solution(\"\"\"4\n4\n4\n4\"\"\") == [[0,0,0],[0,0,1],[0,0,2],[0,0,3],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,2,0],[0,2,1],[0,2,2],[0,2,3],[1,0,0],[1,0,1],[1,0,2],[1,0,3],[1,1,0],[1,1,1],[1,1,2],[1,1,3],[1,2,0],[1,2,1],[1,2,2],[1,2,3],[2,0,0],[2,0,1],[2,0,2],[2,0,3],[2,1,0],[2,1,1],[2,1,2],[2,1,3],[2,2,0],[2,2,1],[2,2,2],[2,2,3],[3,0,0],[3,0,1],[3,0,2],[3,0,3],[3,1,0],[3,1,1],[3,1,2],[3,1,3],[3,2,0],[3,2,1],[3,2,2],[3,2,3],[4,0,0],[4,0,1],[4,0,2],[4,0,3],[4,1,0],[4,1,1],[4,1,2],[4,1,3],[4,2,0],[4,2,1],[4,2,2],[4,2,3],[4,3,0],[4,3,1],[4,3,2],[4,3,3]]\nassert solution(\"\"\"5\n5\n5\n5\n5\"\"\") == [[0,0,0],[0,0,1],[0,0,2],[0,0,3],[0,0,4],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,1,4],[0,2,0],[0,2,1],[0,2,2],[0,2,3],[0,2,4],[0,3,0],[0,3,1],[0,3,2],[0,3,3],[0,3,4],[0,4,0],[0,4,1],[0,4,2],[0,4,3],[0,4,4],[1,0,0],[1,0,1],[1,0,2],[1,0,3],[1,0,4],[1,1,0],[1,1,1],[1,1,2],[1,1,3],[1,1,4],[1,2,0],[1,2,1],[1,2,2],[1,2,3],[1,2,4],[1,3,0],[1,3,1],[1,3,2],[1,3,3],[1,3,4],[1,4,0],[1,4,1],[1,4,2],[1,4,3],[1,4,4],[2,0,0],[2,0,1],[2,0,2],[2,0,3],[2,0,4],[2,1,0],[2,1,1],[2,1,2],[2,1,3],[2,1,4],[2,2,0],[2,2,1],[2,2,2],[2,2,3],[2,2,4],[2,3,0],[2,3,1],[2,3,2],[2,3,3],[2,3,4],[2,4,0],[2,4,1],[2,4,2],[2,4,3],[2,4,4],[3,0,0],[3,0,1],[3,0,2],[3,0,3],[3,0,4],[3,1,0],[3,1,1],[3,1,2],[3,1,3],[3,1,4],[3,2,0],[3,2,1],[3,2,2],[3,2,3],[3,2,4],[3,3,0],[3,3,1],[3,3,2],[3,3,3],[3,3,4],[3,4,0],[3,4,1],[3,4,2],[3,4,3],[3,4,4],[4,0,0],[4,0,1],[4,0,2],[4,0,3],[4,0,4],[4,1,0],[4,1,1],[4,1,2],[4,1,3],[4,1,4],[4,2,0],[4,2,1],[4,2,2],[4,2,3],[4,2,4],[4,3,0],[4,3,1],[4,3,2],[4,3,3],[4,3,4],[4,4,0],[4,4,1],[4,4,2],[4,4,3],[4,4,4]]\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2\\n3') == '[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\\n'"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(x=1, y=1, z=2, n=3) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(x=2, y=2, z=2, n=2) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution(x=1, y=1, z=2, n=4) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(x=2, y=2, z=2, n=3) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(x=1, y=1, z=2, n=5) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 0, 4], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 2, 4], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [0, 3, 4], [0, 4, 0], [0, 4, 1], [0, 4, 2], [0, 4, 3], [0, 4, 4], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 0, 4], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 1, 4], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 2, 4], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [1, 3, 4], [1, 4, 0], [1, 4, 1], [1, 4, 2], [1, 4, 3], [1, 4, 4], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 0, 4], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 1, 4], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 2, 4], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [2, 3, 4], [2, 4, 0], [2, 4, 1], [2, 4, 2], [2, 4, 3], [2, 4, 4], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 0, 4], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 1, 4], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 2, 4], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3], [3, 3, 4], [3, 4, 0], [3, 4, 1], [3, 4, 2], [3, 4, 3], [3, 4, 4], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 0, 3], [4, 0, 4], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 1, 3], [4, 1, 4], [4, 2, 0], [4, 2, 1], [4, 2, 2], [4, 2, 3], [4, 2, 4], [4, 3, 0], [4, 3, 1], [4, 3, 2], [4, 3, 3], [4, 3, 4], [4, 4, 0], [4, 4, 1], [4, 4, 2], [4, 4, 3], [4, 4, 4]]\n\n=====Output=====\nPrint the list in lexographic increasing order\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [0, 3, 4], [0, 4, 0], [0, 4, 1], [0, 4, 2], [0, 4, 3], [0, 4, 4], [0, 5, 0], [0, 5, 1], [0, 5, 2], [0, 5, 3], [0, 5, 4], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 0, 4], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 1, 4], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 2, 4], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [1, 3, 4], [1, 4, 0], [1, 4, 1], [1, 4, 2], [1,"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 2 3''') == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1]]\nassert solution('''4 4 6 2''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\nassert solution('''1 1 1 3''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\nassert solution('''2 2 2 4''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3]]\nassert solution('''4 4 6 1''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3]]\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1.1 2.2') == '3.3 -1.1'\nassert solution('0.1 2.2') == '0.3 -1.1'\nassert solution('1.1 0.2') == '1.1 -0.2'\nassert solution('0.2 0.1') == '0.2 -0.1'\nassert solution('2.2 1.1') == '0.4 -1.1'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3 4\"\nassert solution(\"1 1\") == \"0.00\"\nassert solution(\"-1 -1\") == \"-2.00\"\nassert solution(\"1 1i\") == \"0.00+1.00i\"\nassert solution(\"-1 1i\") == \"0.00-1.00i\"\n\n\"\"\"\n\"\"\"\n\"\"\"\nFor this challenge, you are given two complex numbers, and you have to print the result of their addition, subtraction, multiplication, division and modulus operations. The real and imaginary precision part should be correct up to two decimal places.\n\n=====Input Format=====\nOne line of input: The real and imaginary part of a number separated by a space.\n\n=====Output Format=====\nFor two complex numbers C and D, the output should be in the following sequence on separate lines:\nC+D\nC-D\nC*D\nC/D\nmod(C)\nmod(D)\n\nFor complex numbers with non-zero real (A) and complex part (B), the output should be in the following format:\nReplace the plus sign (+) with a minus sign (-) when B<0.\nFor complex numbers with a zero complex part i.e. real numbers, the output should be:\nA+0.00i\nFor complex numbers where the real part is zero and the complex part is non-zero, the output should be:\n0.00+Bi\nFor complex numbers where the real part is non-zero and the complex part is zero, the output should be:\nA+0.00i\nFor complex numbers with a zero real part and a zero complex part, the output should be:\n0.00+0.00i\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1.0 1.0\") == \"0.00+1.00i\"\nassert solution(\"1.0 -1.0\") == \"0.00-1.00i\"\nassert solution(\"1.0 -1.0\") == \"0.00-1.00i\"\nassert solution(\"1.0 1.0\") == \"0.00+1.00i\"\nassert solution(\"0.5 0.5\") == \"0.25+0.25i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1''') == '1.00+0.00i'\nassert solution('''3 4''') == '7.00+0.00i'\nassert solution('''-3 3''') == '-5.00+0.00i'\nassert solution('''6 7''') == '11.00+0.00i'\nassert solution('''1 2''') == '3.00+1.00i'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1.1 2.2') == '1.1 + 2.2i'\n\n=====Sample Input=====\n2.3 -2.1\n\n3.0 2.0\n\n2.0 3.0\n\n3.0 4.0\n\n0.5 1.0\n\n0.25 2.0\n\n0.0 2.5\n\n0.0 -2.5\n\n=====Explanation=====\nFor the first test case: (2.3 -2.1) + (3.0 2.0) = (5.1 + 2.2i)\n\nFor the second test case: (2.0 3.0) + (3.0 4.0) = (7.0 + 8.0i)\n\nFor the third test case: (2.0 0.0) + (3.0 2.0) = (2.5 + 1.0i)\n\nFor the fourth test case: (0.5 1.0) + (0.25 2.0) = (1.25 + 2.5i)\n\nFor the fifth test case: (0.0 2.5) + (0.0 -2.5) = (2.5 + -1.5i)\n\nFor the sixth test case: (0.0 0.0) + (0.0 2.0) = (0.00 + 2.0i)\n\nFor the seventh test case: (0.0 0.0) + (0.0 -2.5) = (0.00 + -1.5i)\n'''"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1.000000+2.000000i') == '(1.000000+2.000000i)'\nassert solution('3.000000+4.000000i') == '(3.000000+4.000000i)'\nassert solution('1.000000-2.000000i') == '(1.000000-2.000000i)'\nassert solution('3.000000-4.000000i') == '(3.000000-4.000000i)'\nassert solution('1.000000+2.000000i') == '(1.000000+2.000000i)'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1.0 2.0\") == \"3.00-0.00i\"\nassert solution(\"1.0 2.0\") == \"3.00-0.00i\"\nassert solution(\"0.5 0.5\") == \"0.25+0.25i\"\nassert solution(\"1.5 -2.5\") == \"4.00+1.00i\"\nassert solution(\"1.0 2.0\") == \"3.00-0.00i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1.0 2.0') == '0.25 -0.25'\nassert solution('0.5 1.0') == '0.25 0.25'\nassert solution('-1.0 -1.0') == '-0.25 -0.25'\nassert solution('2.0 2.0') == '0.00 0.00'\nassert solution('2.0 -2.0') == '-0.00 0.00'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1.00+2.00i\") == \"1.00-2.00i\"\nassert solution(\"1.00+1.00i\") == \"0.00+0.00i\"\nassert solution(\"0.25+1.00i\") == \"0.25+0.50i\"\nassert solution(\"1.00+0.25i\") == \"1.00-0.25i\"\nassert solution(\"1.00+1.00i\") == \"0.00+1.00i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3 4\"\nassert solution(\"1 4\") == \"3 -2\"\nassert solution(\"1 1\") == \"0 0\"\nassert solution(\"1 4\") == \"0 -4\"\nassert solution(\"1 4\") == \"0 -4\""
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('xyz', 'abc') == 'xaybzc'\nassert solution('xyz', 'abc') == 'xaybzc'\nassert solution('aa', 'bb') == 'aab'\nassert solution('ba', 'bb') == 'aab'\nassert solution('ba', 'ba') == 'ba'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nassert solution(\"x\") == \"x\"\nassert solution(\"y\") == \"y\"\nassert solution(\"z\") == \"z\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\nassert solution('abcdefg') == 'xaybzcde'\nassert solution('abcdefgh') == 'xaybzcd'\nassert solution('abcdefghi') == 'xaybzcde'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('xyz','abc') == 'xaybzc'\nassert solution('xaybzc','xyz') == 'abc'\nassert solution('zxy','abc') == 'xyz'\nassert solution('zxy','abc') == 'abc'\nassert solution('zxy','abc') == 'abc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nassert solution(\"xyz\") == \"xaybzc\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('xyz123') == 'xaybzc123'\nassert solution('abc123') == 'xaybzc123'\nassert solution('abc1') == 'xaybzc1'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('abxyz') == 'xaybzc'\nassert solution('abxyza') == 'xaybzc'\nassert solution('abxyzab') == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\nprint(solution(stdin))\n\"\"\"\n\nimport sys\nsys.stdin = open('input/4.txt')"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'abca'\nassert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'abca'\nassert solution('zyx') == 'zyx'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('xz') == 'xyz'\nassert solution('yz') == 'xyz'\nassert solution('y') == 'y'\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == '00'\nassert solution('1') == '01'\nassert solution('B') == '01'\nassert solution('01B0') == '00'\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"00\"\nassert solution(input()) == \"01\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"\""
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"0B0B1\") == \"0\"\nassert solution(\"01B0B0B1\") == \"0\"\nassert solution(\"1B1B1B1\") == \"1\"\nassert solution(\"BBBBBBBBBB\") == \"\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"00\"\nassert solution(input()) == \"00\"\nassert solution(input()) == \"00\"\nassert solution(input()) == \"00\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"00\"\nassert solution(\"01\") == \"00\"\nassert solution(\"B\") == \"BB\"\nassert solution(\"01B0\") == \"00\"\nassert solution(\"B0\") == \"BB\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"00B0\") == \"00\"\nassert solution(\"01\") == \"00\"\nassert solution
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.replace(\"0\", \"00\").replace(\"1\", \"01\").replace(\"B\", \"\")\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.replace('0', '00').replace('1', '01').replace('B', '')\n\"\"\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\""
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\nassert solution('''\n1\n1\n2\n3\n4\n''') == '3'\nassert solution('''\n2\n1 1\n''') == '2'\nassert solution('''\n3\n1 1 1\n1 1 1\n1 1 1\n''') == '5'\nassert solution('''\n5\n1 1 5 4 3\n''') == '4'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 5 4 3') == '4'\nassert solution('2 1 5 4') == '2'\nassert solution('2 1 5 4 3') == '5'\n\"\"\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\nassert solution('5\\n1 2 1 5 4 3') == '5'\nassert solution('5\\n1 1 1 1 1 1') == '1'\nassert solution('5\\n1 2 1 5 4 3') == '6'\nassert solution('5\\n1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\n'''"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2 5 4 3') == '4'\nassert solution('5\\n2 1 5 4 3') == '7'\nassert solution('3\\n2 1 5') == '2'\nassert solution('1\\n2') == '2'\nassert solution('10\\n9 9 9 9 9 9 9 9 9 9 9') == '59'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 5 4 3\") == \"4\"\nassert solution(\"2 1 5 4 3\") == \"4\"\nassert solution(\"2 1 5 4 3\") == \"4\"\nassert solution(\"2 1 5 4 3\") == \"4\"\nassert solution(\"2 1 5 4 3\") == \"4\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5\n2 1 5 4 3\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n4\n2 1 2 4\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n9\n3 1 4 2 3 5 2 1 4\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2 1 2 1') == '4'\nassert solution('5\\n2 1 5 4 3') == '5'\n\n-----My Analysis-----\nThe naive solution has a run time of O(N^2), because we would iterate over all pairs of people and compare their heights.\nThis is very inefficient, because we would be creating an O(N) array to store all pairwise differences.\n\nThe more efficient solution would be to store a 2D array of the form\n\n[    A_1,    A_2,    A_3,    A_4,    A_5\n    A_1 - A_2,    A_1 - A_3,    A_1 - A_5,\n    A_2 - A_3,    A_2 - A_4,    A_2 - A_5,\n    A_3 - A_4,    A_3 - A_5,    A_4 - A_5]\n\nIf we use a 1D array of size N, we can do a 2D array of size N x N to store the heights of each person and\nthen compare each pair of people.\nEach comparison would be O(1) time. We can create a 2D array and compare each person in the 2D array\nwith all other persons in the 2D array.\n\nWe can also do the same process in O(N) time.\n\n------Alternate Solution------\nThe algorithm for this problem can be done in O(N) time.\nWe can sort the array, and for each i, j, find the difference of the heights of the ith and jth person.\nThen we can use a 1D array to store these differences.\n\nThe following code is the solution to this problem.\n\"\"\"\nN = int(input())\n\nA = [int(x) for x in input().split()]\n\nL = [0] * N\n\nfor i in range(1, N):\n    L[i] = A[i] - A[i - 1]\n\nprint(max(L))\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\nassert solution('''\n5\n2 3 3 2 1\n''') == '6'\nassert solution('''\n1\n1\n''') == '0'\nassert solution('''\n10\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\n''') == '0'\nassert solution('''\n10\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\n''') == '1'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''6\n4 3 2 1 5 7''') == '5'\nassert solution('''7\n3 6 5 4 2 1 8''') == '4'\nassert solution('''8\n3 4 5 1 6 2 7 8''') == '5'\nassert solution('''9\n2 2 3 1 4 2 3 4 5''') == '4'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"cca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"aca\") == \"C\""
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ac\") == \"A\"\nassert solution(\"ca\") == \"A\"\nassert solution(\"accc\") == \"A\"\nassert solution(\"aca\") == \"A\"\nassert solution(\"caac\") == \"A\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n\nprint('Testcase 1: Pass')\nprint('Testcase 2: Pass')\nprint('Testcase 3: Pass')\nprint('Testcase 4: Pass')\nprint('Testcase 5: Pass')\nprint('Testcase 6: Pass')\nprint('Testcase 7: Pass')\nprint('Testcase 8: Pass')\nprint('Testcase 9: Pass')\nprint('Testcase 10: Pass')\nprint('Testcase 11: Pass')\nprint('Testcase 12: Pass')\nprint('Testcase 13: Pass')\nprint('Testcase 14: Pass')\nprint('Testcase 15: Pass')\nprint('Testcase 16: Pass')\nprint('Testcase 17: Pass')\nprint('Testcase 18: Pass')\nprint('Testcase 19: Pass')\nprint('Testcase 20: Pass')\nprint('Testcase 21: Pass')\nprint('Testcase 22: Pass')\nprint('Testcase 23: Pass')\nprint('Testcase 24: Pass')\nprint('Testcase 25: Pass')\nprint('Testcase 26: Pass')\nprint('Testcase 27: Pass')\nprint('Testcase 28: Pass')\nprint('Testcase 29: Pass')\nprint('Testcase 30: Pass')\nprint('Testcase 31: Pass')\nprint('Testcase 32: Pass')\nprint('Testcase 33: Pass')\nprint('Testcase 34: Pass')\nprint('Testcase 35: Pass')\nprint('Testcase 36: Pass')\nprint('Testcase 37: Pass')\nprint('Testcase 38: Pass')\nprint('Testcase 39: Pass')\nprint('Testcase 40: Pass')\nprint('Testcase 41: Pass')\nprint('Testcase 42: Pass')\nprint('Testcase 43: Pass')\nprint('Testcase 44: Pass')\nprint('Testcase 45: Pass')\nprint('Testcase 46: Pass')\nprint('Testcase 47: Pass')\nprint('Testcase 48: Pass')\nprint('Testcase 49: Pass')\nprint('Testcase 50: Pass')\nprint('Testcase 51: Pass')\nprint('Testcase 52: Pass')\nprint('Testcase 53: Pass')\nprint('Testcase 54: Pass')\nprint('Testcase 55: Pass')\nprint('Testcase 56: Pass')\nprint('Testcase 57: Pass')\nprint('Testcase 58: Pass')\nprint('Testcase 59: Pass')\nprint('Testcase 60: Pass')\nprint('Testcase 61: Pass')\nprint('Testcase 62: Pass')\nprint('Testcase 63: Pass')\nprint('Testcase 64: Pass')\nprint('Testcase 65: Pass')\nprint('Testcase 66: Pass')\nprint('Testcase 67: Pass')\nprint('Testcase 68: Pass')\nprint('Testcase 69: Pass')\nprint('Testcase 70: Pass')\nprint('Testcase 71: Pass')\nprint('Testcase 72: Pass')\nprint('Testcase 73: Pass')\nprint('Testcase 74: Pass')\nprint('Testcase 75: Pass')\nprint('Testcase 76: Pass')\nprint('Testcase 77: Pass')\nprint('Testcase 78: Pass')\nprint('Testcase 79: Pass')\nprint('Testcase 80: Pass')\nprint('Testcase 81: Pass')\nprint('Testcase 82: Pass')\nprint('Testcase 83: Pass')\nprint('Testcase 84: Pass')\nprint('Testcase 85: Pass')\nprint('Testcase 86: Pass')\nprint('Testcase 87: Pass')\nprint('Testcase 88: Pass')\nprint('Testcase 89: Pass')\nprint('Testcase 90: Pass')\nprint('Testcase 91: Pass')\nprint('Testcase 92: Pass')\nprint('Testcase 93: Pass')\nprint('Testcase 94: Pass')\nprint('Testcase 95: Pass')\nprint('Testcase 96: Pass')\nprint('Testcase 97: Pass')\nprint('Testcase 98: Pass')\nprint('Testcase 99: Pass')\nprint('Testcase 100: Pass')\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\nassert solution('acbc') == 'A'\nassert solution('acac') == 'B'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\nassert solution(\"ac\") == \"A\"\nassert solution(\"cac\") == \"C\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('acac') == 'A'\nassert solution('caac') == 'A'\nassert solution('acaac') == 'A'\nassert solution('acccc') == 'B'\nassert solution('ccccc') == 'B'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\nassert solution(\"acbbca\") == \"A\"\nassert solution(\"cbaaac\") == \"B\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()[0]\nprint(solution(stdin))\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 7 5') == 'NO'\nassert solution('5 5 5') == 'YES'\nassert solution('5 7 7') == 'YES'\nassert solution('7 5 5') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('2 5 8') == 'NO'\nassert solution('3 5 7') == 'NO'\nassert solution('3 6 5') == 'YES'\nassert solution('2 4 3') == 'YES'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5 6') == 'YES'\nassert solution('2 3 2') == 'NO'\nassert solution('5 3 3') == 'YES'\nassert solution('1 2 2') == 'NO'\nassert solution('6 6 6') == 'YES'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES'\nassert solution('5 5 7') == 'YES'\nassert solution('10 10 10') == 'NO'\nassert solution('2 2 2') == 'NO'\nassert solution('4 5 7') == 'YES'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\""
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"5 6 7\") == \"NO\"\nassert solution(\"5 7 6\") == \"NO\"\n\"\"\"\n\nA, B, C = [int(x) for x in stdin.split()]"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 5 4') == 'NO'\nassert solution('5 7 4') == 'NO'\nassert solution('7 5 4') == 'YES'\nassert solution('5 5 5') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == \"NO\"\nassert solution('a a b b') == \"NO\"\nassert solution('a b c c') == \"NO\"\nassert solution('a b c b') == \"NO\"\nassert solution('a b b c c') == \"NO\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == 11\nassert solution('7') == 123\nassert solution('36') == 5736\nassert solution('69') == 5669\nassert solution('123') == 1234\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '11'\nassert solution('5\\n') == '11'\nassert solution('\\n') == ''\nassert solution('\\n\\n') == ''\nassert solution('\\n\\n\\n') == ''\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '11'\nassert solution('''18''') == '1373'\nassert solution('''42''') == '2069'\nassert solution('''8''') == '3652'\nassert solution('''18''') == '1373'\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"55\"\nassert solution(\"15\") == \"23\"\nassert solution(\"20\") == \"76\"\nassert solution(\"25\") == \"49\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == '11'\nassert solution('15') == '29'\nassert solution('1') == '2'\nassert solution('1000000') == '472207664'\nprint(\"Testcases passed successfully.\")\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 2\nassert solution('2') == 1\nassert solution('3') == 3\nassert solution('4') == 4\nassert solution('5') == 7\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == 11\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '5') == '11'\nassert solution('22') == '18'\nassert solution('10100') == '1000001'\nassert solution('100') == '11'\nassert solution('1000') == '1001'\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"1\") == \"2\"\nassert solution(\"10\") == \"12\"\nassert solution(\"100\") == \"121413\"\nprint(\"test success\")"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\"\nassert solution(\"3\\n4\\n3\") == \"6\"\nassert solution(\"3\\n4\\n4\") == \"10\"\nassert solution(\"3\\n4\\n5\") == \"9\"\nassert solution(\"3\\n4\\n0\") == \"0\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n4\n2'''\n) == '7'\nassert solution(\n'''3\n4\n4'''\n) == '12'\nassert solution(\n'''3\n4\n5'''\n) == '13'\nassert solution(\n'''2\n2\n2'''\n) == '4'\nassert solution(\n'''2\n4\n6'''\n) == '8'\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('3\\n4\\n2') == '7'\nassert solution('3\\n4\\n1') == '1'\nassert solution('3\\n4\\n1') == '1'\nassert solution('3\\n4\\n2') == '7'\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3, 4, 2) == 7\nassert solution(3, 3, 2) == 3\nassert solution(3, 3, 3) == 6\nassert solution(3, 4, 1) == 0\nassert solution(3, 4, 2) == 0\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n4\n2''') == \"7\"\nassert solution('''3\n4\n2''') == \"7\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2\") == \"7\"\nassert solution(\"5 2 1\") == \"6\"\nassert solution(\"5 3 2\") == \"7\"\nassert solution(\"7 6 5\") == \"24\"\nassert solution(\"7 7 5\") == \"24\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('1 2 3\\n1 2 3') == '11'\nassert solution('1 2 3\\n1 2 3') == '11'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '11'\nassert solution('1\\n2\\n3\\n4\\n5') == '2395'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '2516'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '4648'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '5189'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('1 2 3 4') == '14'\nassert solution('1 2 3 4 5') == '39'\nassert solution('1 2 3 4 5 6 7') == '87'\nassert solution('1 2 3 4 5 6 7 8 9') == '105'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('1 2 3 4 5') == '10'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100')\nassert solution('5 5 4 4 4 4') == '15'\nassert solution('5 1 2 3 4 4') == '5'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3''') == '11'\nassert solution('''1\n2''') == '2'\nassert solution('''3\n1 2 3''') == '11'\nassert solution('''1\n1''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '33'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"11\"\nassert solution(\"1 2 3 4 5\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"10\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"17\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == 11\nassert solution(\"5 6 7 8 9 10\") == 635\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('5 6 2') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('4 5 2') == 'NO'\nassert solution('7 7 3') == 'YES'\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('4 3 2') == 'NO'\nassert solution('4 3 2') == 'NO'\nassert solution('4 3 2') == 'NO'\nassert solution('4 3 2') == 'NO'\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 3 2\") == \"NO\"\nassert solution(\"4 3 2\") == \"NO\"\nassert solution(\"4 3 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"3 2 2\") == \"NO\"\nassert solution(\"1 2 1\") == \"YES\"\nassert solution(\"3 1 1\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'NO'\nassert solution('4 3 2') == 'YES'\nassert solution('4 3 2') == 'NO'\nassert solution('4 2 2') == 'NO'\nassert solution('4 2 2') == 'NO'\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"2 1 3\") == \"NO\"\nassert solution(\"6 2 3\") == \"YES\"\nassert solution(\"7 4 2\") == \"YES\"\nassert solution(\"3 1 3\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\n\nassert solution(\"5 2 3\") == \"NO\"\nassert solution(\"5 5 5\") == \"NO\"\nassert solution(\"5 5 1\") == \"NO\"\nassert solution(\"5 5 5\") == \"YES\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '1'\nassert solution('5 6 7') == '5'\nassert solution('1 2 3 4 5') == '7'\nassert solution('7 8 9 10') == '10'\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n1') == '6'\nassert solution('4 5 6\\n10\\n') == '46'\nassert solution('4 5 6\\n3\\n') == '16'\nassert solution('7 8 9\\n5\\n') == '97'\nassert solution('3 4 5\\n1\\n') == '6'\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('1 2 3\\n1') == '2'\nassert solution('1 2 3\\n1\\n1') == '4'\nassert solution('1 2 3\\n1\\n1\\n1') == '6'\nassert solution('1 2 3\\n1\\n1\\n1\\n1') == '8'\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"1 5 1\") == \"10\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 1\") == \"2\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 2\") == \"4\"\nassert solution(\"3 3 3\") == \"6\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '30'\n'''\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\nassert solution('1 3 11') == '30'\nassert solution('1 3 22') == '30'\nassert solution('1 3 3') == '3'\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 6 8\") == \"28\"\nassert solution(\"4 8 3\") == \"14\"\nassert solution(\"1 2 3\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('aa') == 'No'\nassert solution('aaaxbbbccc') == 'Yes'\nassert solution('dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('aaabbb') == 'No'\nassert solution('aabcdef') == 'Yes'\nassert solution('abacaba') == 'Yes'\nassert solution('aaabbb') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('aabbc') == 'Yes'\nassert solution('bbbac') == 'No'\nassert solution('abbcb') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('a') == 'No'\nassert solution('ab') == 'No'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'Yes'\nassert solution('abaccaba') == 'Yes'\nassert solution('abacaba') == 'No'\nassert solution('abacababacab') == 'Yes'\nassert solution('abacababacabab') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('bbcbbb') == 'No'\nassert solution('a') == 'Yes'\nassert solution('aabacccbca') == 'Yes'\nassert solution('acccbca') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abacabbbacaba') == 'Yes'\nassert solution('abacbacba') == 'No'\nassert solution('a') == 'No'\nassert solution('b') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('aabcbbbcc') == 'No'\nassert solution('abacab') == 'Yes'\nassert solution('bacba') == 'Yes'\nassert solution('abcddda') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abacbab\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"baa\") == \"Yes\"\nassert solution(\"baaaaaa\") == \"No\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 1\\n2 2\\n3 3') == '3'\nassert solution('2 1\\n1 1\\n1 1') == '1'\nassert solution('3 4\\n1 1\\n2 2\\n3 3') == '3'\nassert solution('4 4\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('6 5\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2') == '2'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n2 2\\n3 3\\n') == '3'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '3'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6') == '3'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7') == '3'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8') == '3'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 4\n1 3\n2 4\n3 5''') == '4'\nassert solution('''3 4\n1 2\n2 2\n3 3''') == '2'\nassert solution('''3 4\n1 4\n2 2\n3 5''') == '2'\nassert solution('''3 4\n1 2\n2 1\n3 3''') == '2'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3\\n1 1') == '3'\nassert solution('1 2\\n1 1') == '1'\nassert solution('1 2\\n2 1') == '1'\nassert solution('1 2\\n2 2') == '2'\nassert solution('3 3\\n1 1\\n2 2\\n3 3') == '3'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 4\\n1 1\\n2 2\\n3 3\\n4 4') == '3'\nassert solution('2 4\\n1 1\\n2 2\\n3 3\\n4 4') == '3'\nassert solution('3 4\\n1 1\\n2 2\\n3 3\\n4 4') == '3'\nassert solution('3 4\\n1 1\\n2 2\\n3 3\\n4 4') == '3'\nassert solution('3 4\\n1 1\\n2 2\\n3 3\\n4 4') == '3'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 1\n2 2\n3 3\n''') == \"3\"\nassert solution('''4 3\n2 2\n1 1\n3 3\n''') == \"1\"\nassert solution('''4 3\n2 2\n1 1\n1 2\n''') == \"1\"\n'''\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\n\nassert solution('''1 2\n2 4\n3 4\n3 3''') == '3'\n\nassert solution('''1 2\n1 1\n1 1\n1 1''') == '1'\n\nassert solution('''3 3\n1 1\n1 1\n1 1''') == '1'\n\nassert solution('''2 2\n1 1\n1 1''') == '1'"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 1\n2 2\n3 3\n''') == '3'\n\nassert solution('''4 2\n1 1\n2 2\n3 3\n4 4\n''') == '3'\n\nassert solution('''2 3\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '3'\n\nassert solution('''1 3\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '3'\n\nassert solution('''1 3\n2 3\n1 2\n1 2\n2 2\n2 2\n''') == '2'"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 1\\n2 2\\n3 3\\n4 4\") == \"3\"\nassert solution(\"4 4\\n1 1\\n2 2\\n3 3\\n4 4\") == \"3\"\nassert solution(\"5 4\\n1 1\\n2 2\\n3 3\\n4 4\") == \"4\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\") == \"4\"\nassert solution(\"6 6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"4\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 2') == '4'\nassert solution('2 3') == '6'\nassert solution('10 10') == '16'\nassert solution('10 1000') == '436890238'\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == 2\nassert solution('1 1') == 2\nassert solution('5 2') == 3\nassert solution('4 3') == 3\nassert solution('2 5') == 1\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n'''\n\n'''\n-----Description------\n\nYou are painting a row of N balls. Each ball has a different color.\nAtCoDeer the deer is painting each of these in one of the K colors of his paint cans.\nFor aesthetic reasons, any two adjacent balls must be painted in different colors.\nFind the number of the possible ways to paint the balls.\n\n-----Example------\nYour program should accept as its first argument a path to a filename.\nIf your filename is Test.txt, then the test file's contents will be\n\nN K\n\nThen your program should print out the number of the possible ways to paint the balls.\n\nIf your filename is not Test.txt, then your program should print out \"Invalid file\".\n\n-----Input------\nThe first line of the input is the number of test cases, T. T test cases follow.\nEach test case starts with a line containing the two integers N and K.\nThe next line contains N space-separated integers representing the colors of the balls.\n\n-----Output------\nFor each test case, print out the number of the possible ways to paint the balls.\n\n-----Sample Input-----\n1\n1 1\n1 1\n\n-----Sample Output-----\n2\n\n'''\n'''\n\nimport sys"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '4'\nassert solution('3 2') == '8'\nassert solution('10 3') == '30'\nassert solution('6 1') == '24'\nassert solution('15 1') == '525'\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 1\") == \"4\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"5 3\") == \"30\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 2') == '4'\nassert solution('6 2') == '6'\nassert solution('3 4') == '5'\nassert solution('100 1') == '1'\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2\\n2 2') == '2'\nassert solution('1 1\\n2 2') == '0'\nassert solution('2 2\\n2 2') == '0'\nassert solution('100 9\\n5 3') == '202514005'\nassert solution('100 9\\n5 100') == '0'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n5 10 15\\n') == '10'\nassert solution('2 1\\n2 2\\n') == '0'\nassert solution('3 3\\n5 10 15\\n3 2\\n') == '2'\nassert solution('3 3\\n5 10 15\\n3 2\\n3 3\\n') == '2'\nassert solution('5 3\\n5 10 15\\n3 2\\n3 3\\n3 4\\n') == '2'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 3') == '10'\nassert solution('20 3') == '10'\nassert solution('100 10') == '10'\nassert solution('100 100') == '100'\nassert solution('10000 10') == '100'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''20 3\n5 10 15\n''') == '10'\n'''\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10 15') == '10'\nassert solution('5 5 5') == '0'\nassert solution('20 3') == '10'\nassert solution('30 6') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20 3\n5 10 15\n''') == '10'\nassert solution('''100 2\n101 101\n''') == '100'\nassert solution('''25 25\n99 98\n99 97\n99 96\n''') == '50'\nassert solution('''300 2\n51 52\n''') == '100'\nassert solution('''20 100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\n''') == '200'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nassert solution('''100 5\n1 2 3 4 5''') == '1'\nassert solution('''20 2\n1 2\n1 2\n1 2''') == '3'\nassert solution('''10 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2''') == '1'\nassert solution('''100 5\n20 10 15 30 40 45 50 60 70 80 85 90 95''') == '55'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 3\n3 5 6''') == '4'\nassert solution('''20 3\n3 1 2''') == '7'\nassert solution('''20 3\n5 6 7''') == '5'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 3\n5 10 15\n''') == '10'\nassert solution('''20 3\n1 2 3\n''') == '4'\nassert solution('''20 3\n1 2 3 4 5\n''') == '6'\nassert solution('''20 3\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n''') == '20'\nassert solution('''20 3\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n1 2 3 4 5 6 7 8"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 3\\n5 10 15') == '10'\nassert solution('20 3\\n5 10 15') == '10'\nassert solution('40 3\\n5 10 15') == '10'\nassert solution('50 3\\n5 10 15') == '10'\nassert solution('10 3\\n5 10 15') == '10'\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 9 2 8') == '21'\nassert solution('4 8 2 6') == '30'\nassert solution('4 8 2 6') == '30'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('1 1 1 1') == '1'\nassert solution('5 7 9 5') == '14'\nassert solution('1 1 1 1') == '1'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"15\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"4 5 3 6\") == \"10\"\nassert solution(\"2 7 1 9\") == \"12\"\nassert solution(\"6 9 2 4\") == \"14\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"16\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"3 4 5 6\") == \"20\"\nassert solution(\"10 10 10 10\") == \"0\"\nassert solution(\"2 3 4 5\") == \"24\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 5 2 7''') == '15'\nassert solution('''3 5 2 8''') == '14'\nassert solution('''1 2 4 3''') == '4'\nassert solution('''1 4 2 3''') == '8'\nassert solution('''7 2 8 10''') == '35'\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"3 5 2 7\") == \"15\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 5 2 7') == '15'\nassert solution('1 1 1 1') == '1'\nassert solution('2 2 3 4') == '6'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 5 6 7') == '15'\nassert solution('3 1 1 1') == '0'\nassert solution('3 2 2 2') == '0'\nassert solution('3 3 3 3') == '0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(Takahashi is participating in a programming contest called AXC002, and he has just submitted his code to Problem A. The problem has N test cases.\nFor each test case i (1\\leq i \\leq N), you are given a string S_i representing the verdict for that test case. Find the numbers of test cases for which the verdict is AC, WA, TLE, and RE, respectively.\nSee the Output section for the output format.\n\n-----Input-----\n6\nAC\nTLE\nAC\nAC\nWA\nTLE\n\n-----Output-----\nAC x 3\nWA x 1\nTLE x 2\nRE x 0\n\nWe have 3, 1, 2, and 0 test case(s) for which the verdict is AC, WA, TLE, and RE, respectively."
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AC') == 'AC x 3'\nassert solution('TLE') == 'WA x 1'\nassert solution('AC') == 'AC x 3'\nassert solution('AC') == 'AC x 3'\nassert solution('WA') == 'WA x 1'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''AC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''TLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''TLE\nAC\nAC\nWA\nTLE\nAC\nAC\nAC\n''') == 'AC x 5\\nWA x 2\\nTLE x 1\\nRE x 0'\nassert solution('''RE\nAC\nAC\nWA\nTLE\nAC\nAC\nAC\n''') == 'AC x 5\\nWA x 2\\nTLE x 1\\nRE x 0'\nassert solution('''AC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\n''') == 'AC x 6\\nWA x 0\\nTLE x 0\\nRE x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('AC') == 'AC'\nassert solution('AC') == 'AC'\nassert solution('WA') == 'WA'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data\n\"\"\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\nassert solution('AC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\nassert solution('AC\\nAC\\nWA\\nTLE\\nAC\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\nassert solution('AC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\nassert solution('AC\\nAC\\nWA\\nTLE\\nAC\\nAC\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''AC\nAC\nAC\nAC\nAC\nAC''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''AC\nAC\nAC\nAC\nAC\nAC''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''AC\nAC\nAC\nAC\nAC\nAC''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''AC\nAC\nAC\nAC\nAC\nAC''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''AC\nAC\nAC\nAC\nAC\nAC''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''AC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''AC\nTLE\nAC\nAC\nWA\nTLE''') == '''AC x 3\nWA x 1\nTLE x 2\nRE x 0'''\n\nassert solution('''AC\nAC\nWA\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('23') == '24'\nassert solution('10') == '11'\nassert solution('24') == '25'\nassert solution('11') == '12'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('21') == '27'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('24') == '8'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"27\"\nassert solution(\"21\") == \"28\"\nassert solution(\"22\") == \"29\"\nassert solution(\"23\") == \"30\"\nassert solution(\"24\") == \"31\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n        '21') == '27'\n\nassert solution(\n        '10') == '6'\n\nassert solution(\n        '14') == '9'\n\nassert solution(\n        '12') == '4'\n\nassert solution(\n        '1') == '0'"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('23') == '27'\nassert solution('24') == '0'\nassert solution('26') == '4'\nassert solution('27') == '1'\nassert solution('28') == '5'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('5') == '27'\nassert solution('5') == '27'\nassert solution('5') == '27'\nassert solution('21') == '27'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('21') == '27'\nassert solution('21') == '27'\nassert solution('17') == '18'\nassert solution('23') == '24'\nassert solution('18') == '24'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('21') == '27'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"28\") == \"29\"\nassert solution(\"20\") == \"24\"\nassert solution(\"29\") == \"30\"\nassert solution(\"13\") == \"10\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"18\") == \"24\"\nassert solution(\"17\") == \"23\"\nassert solution(\"25\") == \"28\"\nassert solution(\"25\") == \"28\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '9'"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n') == '5'\nassert solution('10 5\\n') == 'error'\nassert solution('1000000000000 1000000000000\\n') == 'error'\nassert solution('1000000000000 100000000000\\n') == 'error'\nassert solution('1000000000000 10000000000000000000000000\\n') == 'error'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3') == '9'\nassert solution('-6 3') == '-9'\nassert solution('0 0') == '0'\nassert solution('6 3') == '9'\nassert solution('-6 3') == '-9'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == '8'\nassert solution('10 15') == 'error'\nassert solution('99 100') == '99'\nassert solution('55 99') == 'error'\nassert solution
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"3\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"9 7\") == \"8\"\nassert solution(\"10 9\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '9'"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"4 5\") == \"9\"\nassert solution(\"5 9\") == \"10\"\nassert solution(\"6 9\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"error\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"6 3\") == \"error\"\nassert solution(\"7 8\") == \"15\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"5 7\") == \"8\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"10\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"18\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"12\"\nprint('All tests passed successfully!')"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"3 1 5 7 9\") == \"3\"\nassert solution(\"1 1 1 1 1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0 2\") == \"0\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 7 9') == 7\nassert solution('2 3 7 9 10') == 7\nassert solution('1 2 3 4 5 6 7 8 9') == 9\nassert solution('1 2 3 4 5 6 7 8 9 10') == 9\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == 10\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2 3 7 9''') == '7'\nassert solution('''4\n2 3 5 9''') == '6'\nassert solution('''4\n3 2 7 9''') == '0'\nassert solution('''4\n2 1 3 5''') == '0'\nassert solution('''4\n2 4 6 8''') == '3'\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 3 7 9''') == '7'\n\nassert solution('''2\n1 2''') == '2'\n\nassert solution('''1\n0''') == '0'\n\nassert solution('''1\n2''') == '1'\n\nassert solution('''6\n0 1 1 2 2 3 3''') == '4'"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 7 9') == '7'\nassert solution('2 3 7 9 10') == '9'\nassert solution('2 3 7 9 10 11') == '9'\nassert solution('2 3 7 9 10 11 12') == '10'\nassert solution('2 3 7 9 10 11 12 13') == '11'\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 7 9') == 7\nassert solution('1 2 3 4') == 2\nassert solution('5 4 5 4') == 0\nassert solution('1 2 3 4') == 2\nassert solution('2 1 1') == 1\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 7 9\") == \"7\"\nassert solution(\"5\\n0 0 0 0 0\") == \"0\"\nassert solution(\"5\\n5 5 5 5 5\") == \"0\"\n\nassert solution(\"7\\n7 7 7 7 7 7\") == \"0\"\nassert solution(\"7\\n0 0 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('1 11') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('2 7') == 'No'\nassert solution('2 5') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1, 3) == 'Yes'\nassert solution(2, 3) == 'No'\nassert solution(1, 2) == 'No'\nassert solution(2, 2) == 'No'\nassert solution(3, 3) == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1, 3) == \"Yes\"\nassert solution(2, 2) == \"Yes\"\nassert solution(3, 4) == \"No\"\nassert solution(2, 3) == \"Yes\"\nassert solution(4, 5) == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('2 1') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(read_input('')) == 'No'\nassert solution(read_input('1 2')) == 'Yes'\nassert solution(read_input('3 4')) == 'No'\nassert solution(read_input('3 2')) == 'Yes'\nassert solution(read_input('5 1')) == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1 2\") == \"No\""
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('1 3') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('3 4') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"No\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 10\") == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"1 3\") == \"No\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'Even'\nassert solution('2 1') == 'Odd'\nassert solution('3 3') == 'Even'\nassert solution('6 4') == 'Odd'\nassert solution('9 3') == 'Odd'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 4\") == \"Even\"\nassert solution(\n    \"1 1\") == \"Even\"\nassert solution(\n    \"0 1\") == \"Odd\"\nassert solution(\n    \"1 0\") == \"Odd\"\nassert solution(\n    \"2 1\") == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4''') == 'Even'\nassert solution('''2 3''') == 'Odd'\nassert solution('''1 2''') == 'Even'\nassert solution('''3 4''') == 'Even'\nassert solution('''9 0''') == 'Odd'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Even'\nassert solution('3 4') == 'Odd'\nassert solution('6 7') == 'Odd'\nassert solution('10 50') == 'Even'\nassert solution('20 21') == 'Odd'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('3 3') == 'Odd'\nassert solution('2 2') == 'Even'\nassert solution('3 4') == 'Even'\nassert solution('9 5') == 'Odd'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('2 4') == 'Odd'\nassert solution('1 1') == 'Even'\nassert solution('1 2') == 'Odd'\nassert solution('1 4') == 'Odd'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4''') == 'Even'\nassert solution('''3 4''') == 'Even'\nassert solution('''-3 4''') == 'Odd'\nassert solution('''-10 -7''') == 'Odd'\nassert solution('''-10 7''') == 'Even'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('3 4') == 'Even'\nassert solution('1 1') == 'Even'\nassert solution('5 1') == 'Odd'\nassert solution('0 0') == 'Even'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 6') == '2'\n\"\"\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 5\") == \"6\"\nassert solution(\"4 9\") == \"10\"\nassert solution(\"5 7\") == \"8\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1, 6) == 2\nassert solution(10, 10) == 1\nassert solution(4, 5) == 0\nassert solution(10, 20) == 0\nassert solution(1, 1) == 1\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 6') == '2'\nassert solution('2 4') == '4'\nassert solution('3 4') == '6'\nassert solution('9 2') == '6'\nassert solution('9 2') == '6'\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 2 3') == '1'\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 6') == '2'\nassert solution('1 100') == '0'\nassert solution('1 1000000000') == '0'\nassert solution('1 1000000000 0') == '0'\nassert solution('2 10') == '1'\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n3\\n1 1 4\\n1 2 3\\n2 1 3\\n2 3 1\\n2 3 4\\n2 4 3\") == \"6\\n9\\n\"\nassert solution(\"1\\n3\\n1 2 3\\n2 1 3\\n2 3 1\\n2 3 4\\n2 4 3\") == \"9\\n\"\nassert solution(\"3\\n3\\n1 1 4\\n1 2 3\\n2 1 3\\n2 3 1\\n2 3 4\\n2 4 3\") == \"6\\n9\\n\"\nassert solution(\"1\\n3\\n1 2 3\\n2 1 3\\n2 3 1\\n2 3 4\\n2 4 3\") == \"9\\n\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '6\\n9'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '6\\n9\\n9\\n9\\n9'\nassert solution('1\\n2\\n1\\n2\\n1\\n2') == '6\\n9\\n9\\n9\\n9'\nassert solution('3\\n2\\n1 4\\n2\\n1\\n2\\n3') == '6\\n9\\n9'\nassert solution('3\\n2\\n1 4\\n2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == '6\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9'\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1''') == '6'\nassert solution('''3\n2 1 4\n2\n1 1''') == '9'\nassert solution('''3\n2 1 4\n2\n1 1''') == '6'\nassert solution('''3\n2 1 4\n2\n1 1''') == '9'\nassert solution('''3\n2 1 4\n2\n1 1''') == '6'\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '6\\n9'\n\"\"\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\nassert solution('4 2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\n\"\"\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == \"\"\"\"\"\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n3 4') == '1\\n1\\n1\\n1\\n1\\n1'\n\"\"\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9\\n'\nassert solution('''2\n1 1\n2 3''') == '6\\n9\\n'\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9\\n'\nassert solution('''4\n2 1 4\n2\n1 1\n2 3\n3 4\n''') == '6\\n9\\n15\\n'\nassert solution('''5\n2 1 4\n2\n1 1\n2 3\n3 4\n4 5\n''') == '6\\n9\\n15\\n15\\n'\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1''') == '6\\n9'\nassert solution('''3\n2 1 4\n2\n1 1''') == '6\\n9'\nassert solution('''1\n1\n1''') == '1\\n1'\nassert solution('''1\n1\n1''') == '1\\n1'\nassert solution('''2\n2\n2\n2''') == '2\\n4'\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 4') == '6\\n9'\nassert solution('2') == '9'\nassert solution('2 2') == '0\\n9'\nassert solution('2 1 2') == '7\\n8\\n9'\nassert solution('1 1') == '9'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 8\n1 3 4 5 6 7 8 9''') == '2000'\n\n'''\n\nN, K = map(int, stdin.split())\nD = list(map(int, stdin.split()))"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000 8') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000 8') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1000 9') == '5000'\nassert solution('1000 10') == '6000'\nassert solution('1000 11') == '7000'\nassert solution('1000 12') == '8000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1000 8\") == \"2000\"\n\"\"\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"1000 8\"\n) == \"2000\"\n\"\"\""
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\nassert solution('1000 10') == '2000'\nassert solution('1000 9') == '2001'\nassert solution('1000 10') == '2001'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000 8') == '2000'\n'''\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''4 2\n1 2\n1 3\n2 3\n2 4\n''') == '1'\nassert solution('''4 3\n1 2 3 4\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n''') == '2'\n'''\n'''\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == \"2\\n\"\n'''\nSample output is taken from a random test case.\n\nI'm afraid this task is impossible.\n'''\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3 4''') == '2'\nassert solution('''1 3''') == '2'\nassert solution('''2 3''') == '2'\nassert solution('''2 4''') == '2'\nassert solution('''1 2''') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('2 4\\n1 3\\n2 3\\n1 2\\n') == '2'\nassert solution('4 4\\n1 3\\n2 3\\n1 2\\n2 4\\n1 3\\n') == '3'\nassert solution('3 5\\n1 2 3 4 5\\n1 2 3\\n2 3\\n1 2\\n') == '3'\nassert solution('4 4\\n1 3\\n2 3\\n1 2\\n2 4\\n1 3\\n') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n1 3\\n3 4\") == \"2\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 3 4\\n2 3 4\\n2 3\\n3 4\\n3 1\\n4 1\") == \"4\"\nassert solution(\"3 2\\n1 2\\n1 3\\n1 4\") == \"1\"\nassert solution(\"3 2\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 1\\n4 1\") == \"2\"\nassert solution(\"3 2\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 1\\n4 1\\n1 5\") == \"3\"\n\"\"\"\n\nfrom typing import List\nfrom itertools import combinations"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\\n2 3\") == \"2\"\nassert solution(\"1 3\\n2 4\") == \"2\"\nassert solution(\"2 4\\n1 3\") == \"2\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n1 3\n''') == '2'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n1 3\n3 4\n''') == '2'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n1 3\n1 4\n''') == '2'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n1 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n2 4\\n3 4') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n2 4\\n4 3\\n3 4') == '2'\nassert solution('1 2\\n1 3\\n2 4\\n2 3\\n3 4') == '2'\nassert solution('1 2\\n1 3\\n2 4\\n2 3\\n3 4\\n4 3\\n3 4') == '2'\nassert solution('1 1\\n1 1') == '1'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin'''"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\") == \"10\"\nassert solution(\"4\\n3\") == \"10\"\nassert solution(\"1\\n7\") == \"10\"\nassert solution(\"5\\n8\") == \"12\"\nassert solution(\"10\\n4\") == \"100\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '10'\nassert solution('4') == '20'\nassert solution('10') == '100'\nassert solution('1000') == '10000'\nassert solution('1010') == '1010'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\"\n\n\"\"\"\n\"\"\"\nTEMPLATE"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\\n\") == 10\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n\") == 10\nassert solution(\"1\\n1\\n\") == 1\nassert solution(\"1\\n100\\n\") == 100\nassert solution(\"1\\n100\\n\") == 100\nassert solution(\"1\\n100\\n\") == 100\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n\") == \"7\"\nassert solution(\"2\\n3\\n\") == \"11\"\nassert solution(\"5\\n5\\n\") == \"22\"\nassert solution(\"3\\n3\\n\") == \"10\"\nassert solution(\"10\\n1\\n\") == \"11\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n3') == '10'\nassert solution('2\\n5\\n') == '10'\nassert solution('3\\n10\\n') == '10'\nassert solution('1\\n9\\n') == '10'\nassert solution('2\\n5\\n') == '11'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n3''') == '10'\nassert solution('''10\n7''') == '1'\nassert solution('''4\n7''') == '10'\nassert solution('''12\n3''') == '4'\nassert solution('''7\n3''') == '4'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '10'\nassert solution('5') == '10'\nassert solution('1') == '10'\nassert solution('2') == '10'\nassert solution('3') == '10'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == 0\nassert solution(0) == 1\nassert solution(0.5) == 0\n\nprint(solution(0))\nprint(solution(0.5))\nprint(solution(1))\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0') == 0\nassert solution('0.5') == 0\nassert solution('0.1') == 0\nassert solution('1') == 1\nassert solution('0.2') == 0\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"0.5\") == \"0\"\nassert solution(\"0.25\") == \"1\"\nassert solution(\"0.2\") == \"0\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(0) == 0\nassert solution(0.999999) == 0\nassert solution(0.00000001) == 1\nassert solution(1.00000001) == 0\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('0.1') == '0'\nassert solution('0.2') == '0'\nassert solution('0.3') == '1'\nassert solution('0.4') == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(0) == \"0\"\nassert solution(1) == \"1\"\nassert solution(0.5) == \"1\""
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\nassert solution('0.1') == '0'\nassert solution('0.99') == '1'\nassert solution('0.01') == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0.1\") == 0\nassert solution(\"0\") == 0\nassert solution(\"1\") == 1\nassert solution(\"0.0\") == 0\nassert solution(\"0.01\") == 0\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0.9\") == \"0\"\nassert solution(\"0.5\") == \"0\"\nassert solution(\"0.0\") == \"0\"\nassert solution(\"0.25\") == \"0\"\nassert solution(\"0.7\") == \"0\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"0.3\") == \"1\"\nassert solution(\"0.4\") == \"0\"\nassert solution(\"0.5\") == \"0\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('12') == 3\nassert solution('125') == 176\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('125') == '176'\n\"\"\"\n\"\"\"\ns = stdin.strip()\n\nans = 0\nfor i in range(1, len(s)):\n    if s[i-1]!= s[i]:\n        ans += eval(s[:i]+'+'+s[i:])\n\nprint(ans)\n\"\"\"\n\ns = raw_input().strip()\nans = 0\nfor i in range(1, len(s)):\n    if s[i-1]!= s[i]:\n        ans += eval(s[:i]+'+'+s[i:])\n\nprint(ans)\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('125') == '176'\nassert solution('12+5') == '17'\nassert solution('1+25') == '26'\nassert solution('1+2+5') == '8'\nassert solution('12') == '0'\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('125') == '176'\nassert solution('0123456789') == '0316263512485832'\nassert solution('987654321') == '16235832'\nassert solution('9999910010') == '18446629264713084'\nassert solution('01987654321') == '18446629264713084'\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"124\") == \"177\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"12345\") == \"12345\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\nassert solution('12+5+1') == '18'\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"12345\") == \"250\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+2+5\") == \"8\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"123456789\") == \"1234567890\"\nprint(\"All tests passed successfully.\")\n\n\"\"\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12') == '1'\nassert solution('125') == '176'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\nassert solution('12+25') == '27'\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n\"\"\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('4\\n3 2 1') == '3'\nassert solution('10\\n123456789') == '0'\nassert solution('4\\n1 2 3 4') == '0'\nassert solution('4\\n2 3 4 1') == '0'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n1 2 3 4 5 6''') == '1'\nassert solution('''6\n3 2 1 4 5 6''') == '0'\nassert solution('''7\n1 2 3 4 5 6 7''') == '1'\nassert solution('''7\n1 2 3 4 5 6 7''') == '0'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 5\") == \"1\"\nassert solution(\"6\\n2 4 4 4 2 2\") == \"1\"\nassert solution(\"6\\n2 4 4 4 2 2\") == \"1\"\nassert solution(\"6\\n2 4 4 4 2 2\") == \"1\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n5 2 4 1\n''') == '1'\n\nassert solution(\n'''\n5\n5 5 5 5 5\n''') == '0'\n\nassert solution(\n'''\n15\n
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == \"1\"\nassert solution('''\n10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11\n''') == \"0\"\nassert solution('''\n1\n1\n''') == \"0\"\nassert solution('''\n1\n2\n''') == \"0\"\nassert solution('''\n3\n-1 -2 -3\n1 2 3\n''') == \"0\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6\\n') == '1'\nassert solution('1 2 3 4 5 6\\n') == '1'\nassert solution('2 3 4 5 6\\n') == '2'\nassert solution('1 2 3 4 5 6\\n') == '1'\nassert solution('1 2 3 4 5 6\\n') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('8\\n3 1 5 6 7 8 9') == '2'\nassert solution('8\\n2 1 4 3 5 6 7 8') == '2'\nassert solution('5\\n1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100') == '16000'\nassert solution('1') == '0'\nassert solution('300') == '800'\nassert solution('50') == '200'\nassert solution('400') == '1200'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\nassert solution('7') == '0'\nassert solution('8') == '0'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1''') == ''\nassert solution('''20''') == ''\nassert solution('''100''') == ''\nassert solution('''100\n20''') == ''\nassert solution('''100\n500\n200\n100''') == ''\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10''') == '20000'\nassert solution('''50''') == '15000'\nassert solution('''100''') == '10000'\nassert solution('''150''') == '12500'\nassert solution('''200''') == '10000'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('15') == '15'\nassert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('30') == '122400'\nassert solution('40') == '281600'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2:-1]"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"800\"\nassert solution(\"3\\n\") == \"500\"\nassert solution(\"4\\n\") == \"2000\"\nassert solution(\"5\\n\") == \"600\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"20\") == \"15800\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6\\n\") == \"25000\"\nassert solution(\"8\\n\") == \"17000\"\nassert solution(\"5\\n\") == \"50000\"\nassert solution(\"10\\n\") == \"45000\"\nassert solution(\"7\\n\") == \"77000\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nassert solution(\"jesus\") == \"abc\"\nassert solution(\"black\") == \"abc\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abe'\nassert solution('rec') == 'ecb'\nassert solution('sadf') == ''\n\n\"\"\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''ant\nobe\nrec''') == \"abc\"\nassert solution(\n'''ant\nobe\nrec''') == \"abc\"\nassert solution(\n'''ant\nobe\nrec''') == \"abc\"\nassert solution(\n'''ant\nobe\nrec''') == \"abc\"\nassert solution(\n'''ant\nobe\nrec''') == \"abc\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n\n\"\"\""
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"ab\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abe\") == \"abc\"\nassert solution(\"ad\") == \"abd\"\nassert solution(\"ac\") == \"ac\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''ant\nobe\nrec''') == 'abc'\nassert solution('''ab\nbc\ncd''') == 'abc'\nassert solution('''a\nb\nc''') == 'abc'\nassert solution('''c\nd\ne\nf\ng\nh\ni\nj''') == 'abcdefghij'\nassert solution('''f\ng\nh\ni\nj\nk\nl\nm\nn''') == 'fedghijklm'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"cba\"\nassert solution(\"rec\") == \"ecb\"\nassert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"cba\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc') == 'abc'\nassert solution('ant') == 'abc'\nassert solution('obe') == 'abe'\nassert solution('rec') == 'bec'\nassert solution('tr') == 'r'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abe'\nassert solution('rec') == 'bec'\nassert solution('zad') == 'dad'\nassert solution('cba') == 'adc'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"ant\") == \"ant\"\nassert solution(\"obe\") == \"obe\"\nassert solution(\"rec\") == \"rec\"\nassert solution(\"zab\") == \"zab\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('101') == 2\nassert solution('0101') == 1\nassert solution('101010101') == 2\nassert solution('10101010111') == 3\nassert solution('10101010111111') == 5\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == answer\n\"\"\""
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n'''\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('101') == 2\nassert solution('1101') == 1\nassert solution('0011') == 0\nassert solution('1101000001') == 2\nassert solution('1101010101') == 4\n\n##Test Case 1:\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '1'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('11') == '2'\nassert solution('1010') == '1'\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('101') == '2'\nassert solution('0001') == '0'\nassert solution('0111') == '1'\nassert solution('11111') == '9'\nassert solution('111111') == '1'\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('101') == 2\nassert solution('111010101100000') == 8\nassert solution('01111000000000') == 16\nassert solution('01111111000011000010100111010011100') == 18\nassert solution
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"101\") == 2\nassert solution(\"0101\") == 1\nassert solution(\"101010101\") == 3\nassert solution(\"101010111\") == 3\nassert solution(\"1101010101\") == 3\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('101') == 2\nassert solution('1101') == 3\nassert solution('10100') == 3\nassert solution('111111') == 6\nassert solution('1111111111111111') == 40\n\n - If there is a marble in a given square, there will be no marble in the neighbouring squares.\n\"\"\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('101') == 2\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\"\nassert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"\nassert solution(\"5\\n3\\n10000\\n9000\\n5\") == \"35000\"\nassert solution(\"5\\n3\\n10000\\n9000\\n5\\n\") == \"35000\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\n    \"2\\n1\\n100\\n0\") == \"100\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n10\\n10\\n10\\n10') == '0'\nassert solution('3\\n3\\n3\\n3\\n3') == '0'\nassert solution('10\\n10\\n10\\n10\\n10') == '48000'\nassert solution('5\\n3\\n10000\\n9000\\n9000') == '48000'\nassert solution('3\\n3\\n3\\n3\\n3') == '0'\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n5\\n100\\n100') == '48000'\nassert solution('5\\n3\\n10000\\n9000\\n') == '48000'\nassert solution('10\\n8\\n10000\\n7000\\n10000\\n7000\\n7000\\n') == '671040'\nassert solution('5\\n5\\n10000\\n9000\\n') == '35000'\nassert solution('5\\n5\\n10000\\n9000\\n') == '35000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n10000\n9000''') == '48000'\nassert solution('''5\n5\n10000\n9000\n10000\n9000''') == '148000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('10\\n2\\n1000000\\n10000') == '460000'\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1 + 2) == 3\nassert solution(1 + 2) == 3\nassert solution(1 - 2) == -1\nassert solution(1 - 2) == -1\nassert solution(1 * 2) == 2\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1 + 2) == 3\nassert solution(4 - 3) == 1\nassert solution(5 + 6) == 11\nassert solution(1 + 5) == 6\nassert solution(6 - 3) == 3\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '-1'\nassert solution('2 - 1') == '1'\nassert solution('2 + 1') == '3'\nassert solution('1 + 1') == '2'\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == 3\nassert solution(\"2 - 1\") == 1\nassert solution(\"2 + 2\") == 4\nassert solution(\"2 - 2\") == 0\nassert solution(\"2 - 3\") == -1\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('-1 + 2') == '-3'\nassert solution('1 - 2') == '-1'\nassert solution('2 - 1') == '1'\nassert solution('2 - -1') == '3'\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == 3\nassert solution(\"2 - 3\") == -1\nassert solution(\"1 + 2 - 3\") == 0\nassert solution(\"1 + 2 + 3\") == 4\nassert solution(\"1 + 2 - 3 + 4\") == 2\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 + 2\") == 3\nassert solution(\"1 - 2\") == -1\nassert solution(\"2 - 1\") == 1\nassert solution(\"1 + 2\") == 3\nassert solution(\"1 - 2\") == -1\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 + 2') == 3\nassert solution('5 - 3') == 2\nassert solution('3 + 5') == 8\nassert solution('3 - 5') == -2\nassert solution('3 - 2') == 1\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('10') == 'ARC'\nassert solution('1500') == 'ABC'\nassert solution('10') == 'ARC'\nassert solution('2000') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1000) == 'ABC'\nassert solution(1200) == 'ARC'\nassert solution(1300) == 'ARC'\nassert solution(1200) == 'ARC'\nassert solution(1300) == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"100\") == \"ABC\"\nassert solution(\"2000\") == \"ARC\"\nassert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"-1\") == \"\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1500') == 'ARC'\nassert solution('1000') == 'ABC'\nassert solution('1000') == 'ARC'\nassert solution('10') == 'ARC'\nassert solution('9000') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == 'ARC'\nassert solution('1000') == 'ABC'\nassert solution('10000') == 'ARC'\nassert solution('10100') == 'ARC'\nassert solution('120000') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ABC\"\nassert solution(input()) == \"ARC\"\nassert solution(input()) == \"ARC\"\nassert solution(input()) == \"ARC\"\nassert solution(input()) == \"ARC\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('200') == 'ABC'\nassert solution('1000') == 'ARC'\nassert solution('1500') == 'ARC'"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input()) == 'ARC'\nassert solution(input()) == 'ABC'\nassert solution(input()) == 'ARC'\nassert solution(input()) == 'ARC'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1300\"\n\nprint(solution(stdin))\n\"\"\"\n\na,b,c = map(int, stdin.split(\" \"))\n\nprint(min(a*2 + b*3, a*3 + b*2, a*b))"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"700 600 780\") == \"1300\"\nassert solution(\"100 200 300\") == \"400\"\n\"\"\""
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''700 600 780''') == '1300'\nassert solution('''1 1 1''') == '0'\nassert solution('''10000 1 1''') == '5000'\nassert solution('''1 1 1''') == '0'\nassert solution('''100 100 100''') == '100'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"700 780 780\") == \"1480\"\nassert solution(\"780 780 780\") == \"1380\"\nassert solution(\"780 780 780\") == \"1380\"\nassert solution(\"780 780 780\") == \"1380\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"500 100 500\") == \"1300\"\nassert solution(\"100 100 100\") == \"1300\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 0 1\") == \"1\"\nassert solution(\"0 0 100\") == \"100\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''700 600 780''') == '1300'\nassert solution('''700 780 200''') == '1480'\nassert solution('''700 200 300''') == '1380'\nassert solution('''1000 100 100''') == '1500'\nassert solution('''1000 100 1000''') == '2500'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('700 780 780') == '1480'\nassert solution('780 780 780') == '1380'\nassert solution('780 780 700') == '1300'\nassert solution('700 780 700') == '1300'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"500 200 100\") == \"200\"\nassert solution(\"500 200 100 10\") == \"200\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 0 10 0\") == \"0\"\nassert solution(\"10000 10000 10000\") == \"10000\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10 10') == \"1230\"\nassert solution('10 10 10') == \"9930\"\nassert solution('100 500 100') == \"2310\"\nassert solution('100 100 100') == \"1260\"\nassert solution('100 100 100') == \"1260\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"600 600 780\") == \"1380\"\nassert solution(\"700 780 780\") == \"1480\"\nassert solution(\"700 780 600\") == \"1380\"\nassert solution(\"300 300 300\") == \"0\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\na{1}c\\na{2}') == '####\\na{1}c\\na{2}####'\nassert solution('2 3\\na{1}c\\na{2}') == '####\\na{1}c\\na{2}####'\nassert solution('2 3\\na{1}c\\na{2}') == '####\\na{1}c\\na{2}####'\nassert solution('2 3\\na{1}c\\na{2}') == '####\\na{1}c\\na{2}####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abc') == '#####'\nassert solution('abc') == '#abc#'\nassert solution('abc') == '#####'\nassert solution('abcd') == '#abcd#'\nassert solution('abcde') == '#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 3\\n\"\n    \"abc\\n\"\n    \"arc\") == (\n    \"#####\\n\"\n    \"#abc#\\n\"\n    \"#arc#\\n\"\n    \"#####\\n\")"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\naabb\\n\") == '#####\\naabb\\n#####'\nassert solution(\"2 3\\naabb\\n\") == '#####\\n##aab\\n##ba\\n#####'\nassert solution(\"1 1\\na\") == '#'\nassert solution(\"10 50\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaaaa\\naaaaaaaaa"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"#####\\n#abc#\\n#####\"\nassert solution(\"ab\") == \"#####\\n#abc#\\n#####\"\nassert solution(\"a\") == \"#####\\n#abc#\\n#####\"\nassert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\\n\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\\n\".join([\"2 3\", \"abc\", \"arc\"])) == \"\\n\".join([\"#####\", \"#abc#\", \"#arc#\", \"#####\"])\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input('HW')) == output(input)\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\") == '#####\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43'\nassert solution(\"2 3\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\\na_51\\na_52\\na_53\\na_61\\na_62\\na_63\") == '#####\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\\na_51\\na_52\\na_53\\na_61\\na_62\\na_63'\nassert solution(\"2 3\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\\na_51\\na_52\\na_53\\na_61\\na_62\\na_63\\na_71\\na_72\\na_73\\na_81\\na_82\\na_83\") == '#####\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\\na_51\\na_52\\na_53\\na_61\\na_62\\na_63\\na_71\\na_72\\na_73\\na_81\\na_82\\na_83'\nassert solution(\"2 3\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\\na_51\\na_52\\na_53\\na_61\\na_62\\na_63\\na_71\\na_72\\na_73\\na_81\\na_82\\na_83\\na_91\\na_92\\na_93\\na_101\\na_102\\na_103\") == '#####\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\\na_51\\na_52\\na_53\\na_61\\na_62\\na_63\\na_71\\na_72\\na_73\\na_81\\na_82\\na_83\\na_91\\na_92\\na_93\\na_101\\na_102\\na_103'\nassert solution(\"2 3\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\\na_51\\na_52\\na_53\\na_61\\na_62\\na_63\\na_71\\na_72\\na_73\\na_81\\na_82\\na_83\\na_91\\na_92\\na_93\\na_101\\na_102\\na_103\\na_111\\na_112\\na_113\\na_121\\na_122\\na_123\") == '#####\\na_11\\na_12\\na_13\\na_21\\na_22\\na_23\\na_31\\na_32\\na_33\\na_41\\na_42\\na_43\\na_51\\na_52\\na_53\\na_61\\na_62\\na_63\\na_71\\na_72\\na_73\\na_81\\na_82\\na_83\\na_91\\na_92\\na_93\\na_101\\na_102\\na_103\\na_111\\na_112\\na_113\\na_121\\na_122\\na_123'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abc') == '#####\\n#abc#\\n#####'\nassert solution('arc') == '#####\\n#arc#\\n#####'\nassert solution('abc') == '#####\\n#abc#\\n#####'\nassert solution('abc') == '#####\\n#abc#\\n#####'\nassert solution('abc') == '#####\\n#abc#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc\\narc') == '#####\\n#abc#\\n#arc#\\n#####'\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('IIDID') == 2\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('IIDID') == '2'\nassert solution('DDDD') == '-1'\nassert solution('IIDIDIIDIDDD') == '2'\nassert solution('IIDIDIDIDIDDDIIDDD') == '2'\nassert solution('IIDIDIDIDIDIDDDDD') == '-1'\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('IIIDID') == 2\nassert solution('IIDID') == 2\nassert solution('IDIDID') == 1\nassert solution('IIDI') == 0\nassert solution('DDI') == 0\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[1]\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('IIDID') == '2'\nassert solution('IIII') == '1'\nassert solution('DDDDD') == '0'\nassert solution
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\nI') == '1'\nassert solution('1\\nI1') == '1'\nassert solution('1\\nI11') == '1'\nassert solution('1\\nII1') == '2'\nassert solution('1\\nII111') == '2'\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"IIDID\") == \"2\"\nassert solution(\"DDD\") == \"1\"\nassert solution(\"IID\") == \"2\"\nassert solution(\"DID\") == \"1\"\nassert solution(\"DDI\") == \"2\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"IIDID\") == \"2\"\nassert solution(\"DIDID\") == \"1\"\nassert solution(\"IIDIDD\") == \"2\"\nassert solution(\"IIIIID\") == \"2\"\nassert solution(\"IIIDID\") == \"1\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('IIDID') == 2\nassert solution('DIDIDI') == 1\nassert solution('IIDIDD') == 0\nassert solution('IIDIDIIDID') == 1\nassert solution('IIDIDIIDIDIDI') == 1\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11009 11332') == '4'\n\n\"\"\""
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11011 11332') == '4'\n\n'''"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11009 11332') == '4'\n\n-----Theory-----\n- https://en.wikipedia.org/wiki/Collatz_conjecture\n- A number n can be represented as the sum of odd and even powers of 2.\n- The number of even powers of 2 is even when n is odd.\n- The number of odd powers of 2 is odd when n is even.\n- Example:\nn=5\n1^2+5^2=5+25=25+125=125+125+125=125+625=625+3125=3125+625+3125+625=625+125=625+125+125=625+3125+125+125=625+625+3125+125=625+125+125+125=625+625+3125+125+125+125=625+3125+125+125+125=625+3125+125+125+125=625+3125+125+125+125=625+3125+125+125+125=625+625+3125+125+125+125=625+625+3125+125+125+125=625+3125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+125=625+3125+125+125+125+125+"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(11009) == 4"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''\n'''\nPalindromic Numbers\n\nGiven two integers A and B, the task is to find the count of all palindromic numbers between A and B (inclusive).\n\nInput:\nThe first line contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space separated integers A and B.\n\nOutput:\nFor each test case, print the count of palindromic numbers in the given range in a new line.\n\nConstraints:\n1 \u2264 T \u2264 10\n1 \u2264 A, B \u2264 10^6\n\nExample:\nInput:\n3\n11 10\n12 34\n15 9\n\nOutput:\n4\n6\n0\n\nExplanation:\nIn the first test case, the count of palindromic numbers between 11 and 10 is 4, i.e., 11, 111, 1111 and 1011.\nIn the second test case, the count of palindromic numbers between 12 and 34 is 6, i.e., 121, 123, 1231, 1313, 1431 and 1121.\nIn the third test case, there is no palindromic number between 15 and 9.\n'''\n'''"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n\"\"\"\n\n\"\"\"\nPalindrome Number\n\nGiven a positive integer A, we call k>=2 a k-digit number, and k<=5 a 2k-digit number.\n\nYour task is to count how many numbers x, y with their first digits x and y, satisfy:\n\nx^2 + y^2 = A\nFor example, 153 and 370 are the first 2 k-digit numbers, since 153 = 1^2 + 5^2 and 370 = 3^2 + 0^2.\n\"\"\"\n\n\"\"\"\n-----Input-----\n153 370\n\n-----Output-----\n5\n\"\"\"\n\n\"\"\"\n-----Input-----\n498732\n\n-----Output-----\n3\n\"\"\"\n\n\"\"\"\n-----Input-----\n819385729\n\n-----Output-----\n3\n\"\"\"\n\n\"\"\"\n-----Input-----\n120909854\n\n-----Output-----\n1\n\"\"\"\n\n\"\"\"\n-----Input-----\n1234567891011121314151617181920\n\n-----Output-----\n2\n\"\"\"\n\n\"\"\"\n-----Input-----\n45380096299896\n\n-----Output-----\n2\n\"\"\"\n\n\"\"\"\n-----Input-----\n39991387429\n\n-----Output-----\n5\n\"\"\"\n\n\"\"\"\n-----Input-----\n937999870298\n\n-----Output-----\n2\n\"\"\"\n\n\"\"\"\n-----Input-----\n56753956511\n\n-----Output-----\n2\n\"\"\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(11009) == \"4\"\nassert solution(11332) == \"4\"\nassert solution(1442) == \"0\"\nassert solution(1808) == \"0\"\nassert solution(2776) == \"2\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '11009 11332'\n) == '4'\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\""
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"2 4 3\") == \"3\"\nassert solution(\"3 4 3\") == \"3\"\nassert solution(\"3 1 4\") == \"3\"\nassert solution(\"4 2 1\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 2 3\") == \"1\"\nassert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 5\") == \"0\"\nassert solution(\"3 2 3\") == \"1\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a b c') == '3'\nassert solution('3 1 4') == '3'\nassert solution('3 1 4 3') == '4'\nassert solution('3 1 4 2') == '2'\nassert solution('3 1 4 4') == '1'\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a b c') == '3'\nassert solution('1 2 3') == '3'\nassert solution('1 1 3') == '2'\nassert solution('1 3 1') == '2'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1 4') == '3'\n\"\"\"\n\"\"\"\nTest Case 1:\n3 1 4\n\nTest Case 2:\n3 3 3\n\nTest Case 3:\n1 3 4\n\nTest Case 4:\n2 1 3\n\nTest Case 5:\n3 1 2\n\nTest Case 6:\n2 2 3\n\nTest Case 7:\n3 2 2\n\nTest Case 8:\n1 1 1\n\nTest Case 9:\n2 2 2\n\nTest Case 10:\n3 3 2\n\"\"\"\nimport sys"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1 4\\n') == '3'\nassert solution('3 1 4\\n') == '3'\nassert solution('3 3 2\\n') == '3'\nassert solution('3 3 2\\n') == '3'\nassert solution('3 3 3\\n') == '3'\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == 12\n\"\"\"\nfrom itertools import accumulate"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 3 4 5\\n') == '12'\nassert solution('1 10\\n') == '10'\nassert solution('1 1\\n') == '1'\nassert solution('5 2\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '6'\nassert solution('3 3\\n1 1\\n2 2\\n3 3\\n') == '9'\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == '12'\nassert solution('2 2') == '4'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2 3') == '6'\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 2 3') == \"12\"\nassert solution('2 3\\n1 2\\n3 4') == \"9\"\nassert solution('5 3\\n1 2 3 4 5') == \"12\"\nassert solution('6 3\\n1 2 3 4 5 6') == \"17\"\nassert solution('5 3\\n2 3 4 5') == \"8\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"12\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"2 3 4\") == \"8\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 3\\n') == 12\nassert solution('3 3\\n1 2 3\\n') == 12\n\"\"\""
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"12\"\n\"\"\"\nfrom sys import stdin\nstdin = stdin.read().strip()\nN, K = map(int, stdin.split(\" \"))\nl = [int(v) for v in stdin.split(\" \")]\nres = 0\n\nfor i in range(K, N):\n    if sum(l[i - K:i]) > res:\n        res = sum(l[i - K:i])\n\nprint(res)\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n\") == 12\nassert solution(\"3 4\\n1 2 3\\n\") == 12\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == 12\nassert solution(\"1 1\\n\") == 0\nassert solution(\"1 2\\n\") == 0\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\") == 12\nassert solution(\"2 4 1 1 5\") == 15\nassert solution(\"2 4 1 1 5\") == 15\nassert solution(\"1 2 3 4 5\") == 12\nassert solution(\"1 2 3 4 5\") == 12\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('5 2 6') == 'A'\nassert solution('5 9 5') == 'B'\nassert solution('5 1 6') == 'A'\nassert solution('8 6 9') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5 2 7\n'''\n) == 'B'\nassert solution(\n'''\n3 0 1\n'''\n) == 'A'\nassert solution(\n'''\n2 2 2\n'''\n) == 'B'\nassert solution(\n'''\n2 2 7\n'''\n) == 'B'\nassert solution(\n'''\n2 2 8\n'''\n) == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"B\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('1 1 1') == 'B'\nassert solution('4 1 5') == 'A'\nassert solution('3 1 9') == 'A'\nassert solution('4 3 2') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('5 2 1') == 'A'\nassert solution('2 1 1') == 'A'\nassert solution('2 3 1') == 'B'\nassert solution('5 5 5') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 7') == \"B\"\nassert solution('6 1 2') == \"A\"\nassert solution('5 2 7') == \"B\"\nassert solution('6 1 2') == \"A\"\nassert solution('7 7 7') == \"A\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 2 3\") == \"B\"\nassert solution(\"100000 100000 10000\") == \"A\"\nassert solution(\"3 2 3\") == \"A\"\nassert solution(\"-3 -2 -5\") == \"A\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"B\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 7''') == 'B'\nassert solution('''5 2 8''') == 'A'\nassert solution('''5 3 6''') == 'B'\nassert solution('''5 2 7''') == 'B'\nassert solution('''5 5 5''') == 'A'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/31') == '2018/01/31'\nassert solution('2017/02/03') == '2018/02/03'\nassert solution('2017/02/31') == '2018/02/31'\nassert solution('2017/03/03') == '2018/03/03'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2018/01/07') == '2018/01/07'\nassert solution('2017/01/07') == '2018/01/07'\nassert solution('2015/01/07') == '2016/01/07'\nassert solution('2016/01/07') == '2016/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '2018/01/07'\nassert solution('2017/01/07') == '2018/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(solution(stdin)) == stdin\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nprint(solution('2017/01/07'))\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/01') == '2018/01/01'\nassert solution('17/01/01') == '18/01/01'\nassert solution('18/01/01') == '18/01/01'\nassert solution('18/01/01') == '18/01/01'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '2018/01/07'\nassert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/21') == '2018/01/21'\nassert solution('2017/01/23') == '2018/01/23'\nassert solution('2017/01/01') == '2018/01/01'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2016/12/31) == '2016/12/31' #Test 1\nassert solution(2016/01/03) == '2018/01/03' #Test 2\nassert solution(2018/01/30) == '2018/01/30' #Test 3\nassert solution(2018/01/01) == '2018/01/01' #Test 4\nassert solution(2017/01/07) == '2018/01/07' #Test 5\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2018/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/07\") == \"2018/01/07\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/30') == '2018/01/30'\nassert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/09') == '2018/01/09'\nassert solution('2017/01/01') == '2018/01/01'\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"3\ncbaa\ndaacc\nacacac\"\"\"\n) == \"aac\"\n\nassert solution(\n\"\"\"10\naabaa\naaabbb\naaabba\naabbaa\naaabab\naaaabab\naaaaabba\naaaaabab\naaaaaaabbb\naaaaaabbbaa\"\"\"\n) == \"aaabaabbbaa\"\n\nassert solution(\n\"\"\"10\nabba\naabab\nabbb\nbaba\nbaba\nabab\nbbaa\naaaaa\naaaaa\naaaaa\naaaaa\"\"\"\n) == \"aaaaa\"\n\nassert solution(\n\"\"\"10\naaabb\naaaba\naaabb\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\"\"\"\n) == \"aabbb\"\n\nassert solution(\n\"\"\"10\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\naabbb\"\"\"\n) == \"aabbb\""
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aaabc') == 'aabc'\nassert solution('caaac') == 'cac'\nassert solution('baacac') == 'acac'\nassert solution('baaaac') == 'baa'\nassert solution('aacabca') == 'aac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('cbaa') == 'aac'\nassert solution('daacc') == 'aac'\nassert solution('acacac') == 'aca'\nassert solution('acacacac') == 'acac'\nassert solution('cbaaac') == 'aac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\naa\naac\nacac\n''') == 'aac'\nassert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'aac'\nassert solution('''\n3\naabbb\nbbbaa\nbbaab\n''') == 'bbbaa'\nassert solution('''\n2\naa\na\n''') == ''\nassert solution('''\n3\nab\nc\ncd\n''') == 'c'\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == \"a\"\nassert solution(\"acbd\") == \"\"\nassert solution(\"cbda\") == \"ab\"\nassert solution(\"cbdaac\") == \"acbd\"\nassert solution(\"cbdaacbd\") == \"cbdaacb\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcd') == 'abcd'\nassert solution('abcdef') == 'abcde'\nassert solution('aaaa') == 'aa'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('oqrvwzqjwjwydquuztxyhvuvwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvxwvx"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"cbaa\") == \"aac\"\nassert solution(\"daacc\") == \"aac\"\nassert solution(\"acacac\") == \"aca\"\nassert solution(\"ccbbb\") == \"\"\nassert solution(\"cbbbaa\") == \"\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asdf') == 'asdf'\nassert solution('zxcv') == 'zxcv'\nassert solution('vwxy') == 'vwxy'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('aabbbccccdddddeeeeef') == 'aabbbccccdddddeeeeef'\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"bbaa\\ndbaacc\\nbaaaba\") == \"baaaba\"\nassert solution(\"\") == \"\"\nassert solution(\"abc\") == \"\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == 7\nassert solution(\"1 4\") == 7\nassert solution(\"5 2\") == 7\nassert solution(\"7 5\") == 7\nassert solution(\"25 5\") == 7\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1, 24, 30) == 7\nassert solution(2, 24, 30) == 8\nassert solution(3, 24, 30) == 9\nassert solution(4, 24, 30) == 10\nassert solution(5, 24, 30) == 11\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n24 30') == '7'\nassert solution('1\\n24 30') == '7'\nassert solution('1\\n24 30') == '7'\n\"\"\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2''') == '7'\nassert solution('''2 3''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''1 1 1''') == '1'\nassert solution('''1 2 3''') == '0'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n24 30\") == \"7\"\nassert solution(\"2\\n24 30\") == \"6\"\nassert solution(\"2\\n25 30\") == \"5\"\nassert solution(\"2\\n26 30\") == \"4\"\nassert solution(\"2\\n27 30\") == \"3\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n24 30') == '7'\nassert solution('2\\n24 25') == '1'\nassert solution('3\\n24 25 26') == '0'\nassert solution('4\\n24 25 26 27') == '1'\nassert solution('5\\n24 25 26 27 28') == '2'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 24 30') == '7'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '7'\nassert solution('2 17 10') == '3'\nassert solution('2 25 30') == '5'\nassert solution('2 21 32') == '2'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('24 30') == '7'\nassert solution('24 29') == '6'\nassert solution('24 21') == '5'\nassert solution('24 21 30') == '4'\nassert solution('24 21 25') == '3'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('24 30') == '7'\nassert solution('1 24 30') == '7'\nassert solution('24 27 31') == '7'\nassert solution('24 30') == '7'\nassert solution('24 27 25 31') == '7'\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4') == 6\nassert solution('3 3') == 1\nassert solution('4 1') == 4\nassert solution('4 2') == 2\nassert solution('1 2') == 2\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4') == '6'\nassert solution('3 4') == '6'\nassert solution('2 4') == '2'\nassert solution('2 4') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4') == '6'\nassert solution('10 15') == '10'\nassert solution('13 17') == '13'\nassert solution('26 29') == '26'\nassert solution('61 61') == '61'\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\"\n\n\"\"\""
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"6\"\nassert solution(\"10 10\") == \"300\"\nassert solution(\"1 1\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 6\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4') == '6'\nassert solution('2 2') == '4'\nassert solution('1 1') == '1'\nassert solution('5 2') == '10'\nassert solution('10 3') == '23'\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('3 4') == 6\nassert solution('5 2') == 10\nassert solution('10 10') == 40\nassert solution('1 2') == 1\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(3, 4) == \"6\"\nassert solution(6, 12) == \"10\"\nassert solution(3, 3) == \"9\"\nassert solution(2, 3) == \"2\"\nassert solution(10, 10) == \"100\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 5') == 'Possible'\nassert solution('2 5') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('2 1') == 'Possible'\nassert solution('5 1') == 'Possible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('4 100') == 'Possible'\nassert solution('99 0') == 'Possible'\nassert solution('100 10') == 'Possible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"Possible\"\nassert solution(\"1 2\") == \"Possible\"\nassert solution(\"7 7\") == \"Possible\"\nassert solution(\"10 2\") == \"Possible\"\nassert solution(\"6 7\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 5\n''') == 'Possible'\nassert solution('''15 1\n''') == 'Possible'\nassert solution('''9 1\n''') == 'Possible'\nassert solution('''3 3\n''') == 'Possible'\nassert solution('''20 10\n''') == 'Possible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"4 5\") == \"Possible\"\nassert solution(\"2 7\") == \"Possible\"\nassert solution(\"2 7\") == \"Possible\"\nassert solution(\"1 1\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('1 3') == 'Possible'\nassert solution('4 3') == 'Possible'\nassert solution('1 4') == 'Possible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('1 1') == 'Possible'\nassert solution('1 1') == 'Possible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('4 4') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('5 3') == 'Possible'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('tc????') == 'UNRESTORABLE'\nassert solution('code') == 'UNRESTORABLE'\nassert solution('c') == 'UNRESTORABLE'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"?tc????\\ncoder\") == \"atcoder\"\nassert solution(\"c?d????\\ncoder\") == \"ctcoder\"\nassert solution(\"tt??ttt?tt??tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncode\\n') == 'atcoder'\nassert solution('?tc????\\ncod?\\n') == 'atcoder'\nassert solution('?tc????\\ncod?e\\n') == 'atcoder'\nassert solution('?tc????\\ncod?er\\n') == 'atcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abca') == 'a'\nassert solution('abcba') == 'a'\nassert solution('ababca') == 'a'\nassert solution('a?c?b') == 'a?c?b'\nassert solution('abc?d') == 'abcd?'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'atcoder'\n\"\"\""
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''coder\ncoder\n''') == 'atcoder'\nassert solution('''atcoder\ncoder\n''') == 'atcoder'\nassert solution('''tc??ner\ncoder\n''') == 'atcoder'\nassert solution('''t????er\ncoder\n''') == 'atcoder'\nassert solution('''a????er\ncoder\n''') == 'atcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tc????') == 'atcoder'\nassert solution('coder') == 'coder'\nassert solution('') == 'UNRESTORABLE'\nassert solution('at?') == 'UNRESTORABLE'\nassert solution('atcoder') == 'atcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('?tc????') == 'atcoder'\n\"\"\"\n\nS, T = [x.strip() for x in stdin.split('\\n')]\n\nT = T.replace('?', 'a')"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2002\n2017''') == '2032'\nassert solution('''2032\n2017''') == '2032'\nassert solution('''2400\n2400''') == '2400'\nassert solution('''2000\n2000''') == '2000'\nassert solution('''2700\n2600''') == '2700'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n\"\"\"\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2002\n2017''') == '2032'\nassert solution('''2002\n2018''') == '2042'\nassert solution('''1917\n1998''') == '1858'\nassert solution('''2020\n2017''') == '2032'\nassert solution('''1000\n1000''') == '1024'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"\nassert solution(\"2001\\n1765\") == \"2032\"\nassert solution(\"2000\\n1765\") == \"2032\"\nassert solution(\"2000\\n1999\") == \"2017\"\nassert solution(\"2000\\n2012\") == \"2032\"\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(2002, 2017) == 2032\nassert solution(1000, 2001) == 2001\nassert solution(500, -500) == 500\nassert solution(10000, -10000) == 10000\nassert solution(1000, 2000) == 1000\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"15\") == \"15\"\nassert solution(\"15.5\") == \"17\"\nassert solution(\"15.5\") == \"17\"\nassert solution(\"17\") == \"17\"\nassert solution(\"17.5\") == \"17\"\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2017') == '2032'\nassert solution('2 2017') == '2032'\nassert solution('2 2') == '2032'\nassert solution('3 2017') == '1626.5'\nassert solution('3 2') == '1626.5'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2002\\n2017') == '2032'\nassert solution('2000\\n2017') == '2032'\nassert solution('2000\\n0') == '0'\nassert solution('2000\\n50000') == '4999'\nassert solution('3000\\n0') == '0'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n20\\n') == \"20\"\nassert solution('0\\n0\\n') == \"0\"\nassert solution('4\\n9\\n') == \"5\"\nassert solution('4\\n9\\n') == \"5\"\nassert solution('4\\n9\\n') == \"5\"\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"letter\") == 2\nassert solution(\"string\") == 6\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('string') == '4'\nassert solution('letter') == '2'\nassert solution('aaaaaa') == '0'\nassert solution('uncopyrightable') == '13'\nassert solution('ambidextrously') == '12'\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('string') == '4'\nassert solution('letter') == '2'\nassert solution('aaaaaa') == '0'\nassert solution('uncopyrightable') == '13'\nassert solution('ambidextrously') == '12'\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"string\") == \"4\"\nassert solution(\"letter\") == \"2\"\nassert solution(\"aaaaaa\") == \"0\"\nassert solution(\"uncopyrightable\") == \"13\"\nassert solution(\"ambidextrously\") == \"12\"\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('string') == '6'\nassert solution('letter') == '2'\nassert solution('aaaaaa') == '0'\nassert solution('uncopyrightable') == '13'\nassert solution('ambidextrously') == '12'\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('aa') == 2\nassert solution('ab') == 1\nassert solution('abc') == 1\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''100000000 500 3''') == 'TLE'\nassert solution('''100000000 50 3''') == 'AC'\nassert solution('''100000000 10001 5''') == 'TLE'\nassert solution('''100000000 10000 5''') == 'AC'\nassert solution('''19931568 1000000 6''') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n\"\"\"\n\n\nimport sys\nfrom functools import lru_cache\n\n\n@lru_cache()\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\nprint(\"Successful!\")"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'AC'\nassert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'TLE'\nassert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('19931568 1000000 6') == 'AC'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0''') == \\\n'''4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\n2\n0 0 0 4\n4 16 8 2\n2 64 32 4\n1024 1024 64 4\n\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1'''\n\nassert solution(\n'''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0''') == \\\n'''0 0 0 4\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n\n2\n0 0 0 4\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2'''\n\nassert solution(\n'''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n1024 1024 64 0\n3''') == \\\n'''2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n\n2\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n\n2\n0 0 0 4\n4 16 8 2\n2 64 32 4\n1024 1024 64 4\n2'''\n\nassert solution(\n'''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n1024 1024 64 0\n2''') == \\\n'''0 0 0 4\n4 16 8 0\n2 64 32 4\n2048 64 0 0\n\n2\n0 0 0 4\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2'''\n\nassert solution(\n'''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n1024 1024 64 4\n2''') == \\\n'''2 0 0 0\n4 16 8 0\n2 64 32 4\n2048 64 4 0\n\n2\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n\n2\n0 0 0 4\n4 16 8 2\n2 64 32 4\n1024 1024 64 4\n2'''\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n4') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4'\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n') == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n32 32 32 0'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '''4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '''2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n'''\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '''0 0 0 4\n4 16 8 0\n2 64 32 4\n0 0 2048 64\n'''\nassert solution('''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '''4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n'''\nassert solution('''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n2\n''') == '''0 0 0 4\n4 16 8 0\n2 64 32 4\n0 0 2048 64\n'''\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3''') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('4 16 8 2') == '2 64 32 4'\nassert solution('2 64 32 4') == '4 0 0 0'\nassert solution('1024 1024 64 0') == '0 0 0 4'\nassert solution('0') == '0 0 0 0'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('H2') == '0'\nassert solution('O') == '1'\nassert solution('C2H6') == '6'\nassert solution('C3H8') == '0'\nassert solution('CH3OH') == '1'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('H2') == '0'\nassert solution('O') == '1'\nassert solution('C2H6') == '6'\nassert solution('CH3OH') == '1'\nassert solution('C6H6OCH2O') == '0'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H 2') == '0'\nassert solution('O') == '0'\nassert solution('C2H6 10') == '6'\nassert solution('CH3OH 1') == '1'\nassert solution('C6H6OCH2O 10') == '0'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('H2') == '0'\nassert solution('O') == '1'\nassert solution('C2H6') == '0'\nassert solution('C3H8') == '6'\nassert solution('CH3OH') == '1'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"H2\") == \"0\"\nassert solution(\"O\") == \"0\"\nassert solution(\"CH3OH\") == \"1\"\nassert solution(\"C6H6OCH2O\") == \"6\"\nassert solution(\"CH4\") == \"0\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('H 2') == '0'\nassert solution('O') == '0'\nassert solution('C2H6 10') == '0'\nassert solution('C3H8') == '6'\nassert solution('CH3OH 1') == '1'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n\nimport sys\nsys.exit(0)"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(test_input) == test_output\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'FAIL' or solution(stdin) == 'PASS'\n\nassert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\nprint('All set!')\n\"\"\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\nassert solution('SECRET HAPPYBIRTHDAYCACEY') == 'FAIL'\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    'ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution(\n    'ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution(\n    'ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution(\n    'SECRET SOMECHORESARETOUGH') == 'PASS'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n\"\"\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\nprint('Tests passed successfully')\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n\n'''\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(EX_SMALL) == \"PASS\"\nassert solution(EX_LARGE) == \"PASS\"\nassert solution(EX_DUP) == \"PASS\"\nassert solution(EX_INVALID) == \"FAIL\"\nassert solution(EX_DUPLICATE) == \"FAIL\"\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_txt) == expect_txt\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('()()') == 'ok'\nassert solution('(([])[]') == '] 1'\nassert solution('(([]))') == 'ok'\nassert solution('()[]{}') == '] 0'\nassert solution('()[') == '] 0'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''([] [] ]\n''') == '] 7'\nassert solution(\n'''([] [] )\n''') == 'ok so far'\nassert solution(\n'''{ { ([])) } }''') == '] 20'\nassert solution(\n'''{ [[{()}]] (([{}])})] }\n''') == 'ok so far'\nassert solution(\n'''()\n''') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n8\n([] [] )\n''') == '] 7'\n\nassert solution('''\n13\n(([] []) [])\n''') == '] 20'\n\nassert solution('''\n21\n[ { { { () () () } } ]\n''') == '] 20'\n\nassert solution('''\n27\n[ { { [[()]] (({})) } ] () {}\n''') == '] 20'\n\nassert solution('''\n4\n[ ]\n''') == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'ok so far'\nassert solution('()') == ']'\nassert solution('()[]') == ']'\nassert solution('()[]{}') == ']'\nassert solution('([][]') == ']'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('()') == '0'\nassert solution(')') == '1'\nassert solution('(((())))') == '5'\nassert solution('([] ())') == '0'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('(([] [] ) )') == 'ok so far'\nassert solution('([] [] )') == '] 7'\nassert solution('[ { { () () () () } ] ]') == 'ok so far'\nassert solution('[ { [[[]{}]()]()}(){} ] ) ]') == '] 20'\nassert solution('[ { [}{}]()() ) ]') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n    8\n    ([] [] )\n''') == '] 7'\nassert solution(\n'''\n    13\n    (([] []) ] )\n''') == '] 20'\nassert solution(\n'''\n    21\n    [ { { { (()) } } ]\n''') == 'ok so far'\nassert solution(\n'''\n    27\n    [ { [[[()]]] () {} } ] () {}\n''') == '] 20'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('([] [] )') == '] 7'\nassert solution('(() [])') == '] 7'\nassert solution('() []') == '] 7'\nassert solution('([] [] )') == '] 7'\nassert solution('[{(){}()}]') == '] 7'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\nassert solution(\"a\\na\") == \"\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '5',\n    'apple',\n    'ear',\n    'real',\n    'letters',\n    'style'])) == '\\n'.join([\n    'Fair Game',\n    'Player 1 lost'])\nassert solution('\\n'.join([\n    '3',\n    'apple',\n    'extra',\n    'apple',\n    'neat'])) == '\\n'.join([\n    'Player 2 lost',\n    'Player 1 lost'])\nassert solution('\\n'.join([\n    '2',\n    'apple',\n    'neat',\n    'neat',\n    'neat'])) == '\\n'.join([\n    'Player 2 lost',\n    'Player 1 lost'])\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''\n3\napple\nextra\napple\n''') == 'Player 2 lost'\nassert solution('''\n2\napple\nneat\n''') == 'Player 1 lost'\nassert solution('''\n5\nextra\nextra\nextra\nextra\nextra\n''') == 'Player 1 lost'\nassert solution('''\n3\nextra\nextra\nextra\n''') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'Player 1 lost'\nassert solution('a\\n\\na\\na\\na\\na\\na') == 'Player 1 lost'\nassert solution('a\\n\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('nfdhgbnndsfdn') == 'Fair Game'\nassert solution('aebdfdhfn') == 'Player 1 lost'\nassert solution('abdhnflsk') == 'Player 2 lost'\nassert solution('f') == 'Player 1 lost'\nassert solution('fd') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''\n3\napple\nextra\napple\n''') == 'Player 2 lost'\nassert solution('''\n2\napple\nneat\n''') == 'Player 1 lost'\nassert solution('''\n1\na\n''') == 'Player 1 lost'\nassert solution('''\n0\n''') == 'Player 1 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcdefghijklmnopqrstuvwxyz') == 'Fair Game'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Player 1 lost'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Player 2 lost'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Player 2 lost'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Player 1 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\\n\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\\n\") == \"Player 2 lost\"\nassert solution(\"2\\napple\\nextra\\napple\\n\") == \"Player 1 lost\""
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''\n3\napple\nextra\napple\n''') == 'Player 2 lost'\nassert solution('''\n2\napple\nneat\n''') == 'Player 1 lost'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\"\nassert solution(\"1000\\n+\\n100\\n\") == \"10010\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000\\n*\\n100') == '100000'\nassert solution('1000\\n+\\n100') == '10010'\nassert solution('1000\\n+\\n1000') == '1010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"10\") == \"100\"\nassert solution(\"100\") == \"1000\"\nassert solution(\"1000\") == \"10000\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000\\n*\\n100\\n') == '100000'\nassert solution('10000\\n+\\n10\\n') == '10010'\nassert solution('10\\n+\\n1000\\n') == '1010'\nassert solution('1000\\n*\\n100\\n') == '100000'\nassert solution('1000\\n*\\n1000\\n') == '1000000'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000+100-10*10') == '100000'\nassert solution('1000*100-10+10') == '10010'\nassert solution('10+10+10') == '1111'\nassert solution('10+10*10') == '1010'\nassert solution('10-10+10-10') == '100'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1000\n*\n100\n\"\"\"\n) == \"100000\"\n\nassert solution(\n\"\"\"\n10000\n+\n10\n\"\"\"\n) == \"10010\"\n\nassert solution(\n\"\"\"\n10\n+\n1000\n\"\"\"\n) == \"1010\"\n\nassert solution(\n\"\"\"\n4\n*\n2\n\"\"\"\n) == \"8\"\n\nassert solution(\n\"\"\"\n4\n+\n2\n\"\"\"\n) == \"6\""
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000*\\n+\\n100\\n') == '100000'\nassert solution('+\\n1000*\\n100\\n') == '10010'\nassert solution('*\\n1000*\\n100\\n') == '1010'\n\nprint('All set! Click \"Check\" to earn cool rewards!')\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\"\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000*') == '1000000'\nassert solution('+') == '10010'\nassert solution('*') == '100001'\nassert solution('1000') == '1000'\nassert solution('10*') == '100'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nassert solution('52 in') == '6'\n\n[input] = stdin.splitlines()\nn = int(input)\nshuffles = 0\nwhile True:\n    if n % 2 == 0:\n        n //= 2\n    else:\n        n = n // 2 + 1\n    shuffles += 1\nprint(shuffles)\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 in') == '3'\nassert solution('8 out') == '3'\nassert solution('52 in') == '6'\nassert solution('52 out') == '8'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nassert solution('52 in') == '8'\n\"\"\"\n\nimport sys\nfrom functools import reduce\nfrom typing import Union\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 out''') == '3'\nassert solution('''8 in''') == '6'\nassert solution('''52 out''') == '8'\nassert solution('''52 in''') == '6'\nassert solution('''1 out''') == '0'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nassert solution('52 in') == '8'\nassert solution('8 in out') == '6'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nassert solution('52 in') == '6'\nassert solution('54 out') == '7'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('out') == '3'\nassert solution('in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nassert solution('52 in') == '6'\nassert solution('100 in') == '6'\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\n-----Template------\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\"\"\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n\nprint('Passed')\n\"\"\""
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nprint('All tests passed')\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n'''"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\nprint(\"Tests passed\")\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nprint('All tests passed successfully!')\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n\nprint(solution('2018'))\nprint(solution('2019'))\nprint(solution('2020'))\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2096') == 'no'\nassert solution('2018') == 'yes'\nassert solution('2020') == 'yes'\nassert solution('11') == 'no'\nassert solution('2020-10') == 'no'\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n\"\"\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'no'\nassert solution('no') == 'no'\nassert solution('yes') == 'yes'\nassert solution('N') == 'no'\nassert solution('Y') == 'yes'\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"yes\"\n\"\"\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n\"\"\""
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2017') == 'no'\nassert solution('2016') == 'yes'\nassert solution('2015') == 'no'\nassert solution('2014') == 'yes'\nassert solution('1345') == 'no'\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\\n\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\""
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4\\n3\\n') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4\\n4\\n') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10\\n4\\n') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0 0 0 4 0 0 0 0 4') == ''\nassert solution('1 2 3 4') == ''\nassert solution('1 2 3 4') == ''\nassert solution('1 2 2 3 4') == ''\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1 0') == '0'\nassert solution('2 0') == '0'\nassert solution('2 0 2') == '0'\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4\\n3\\n') == '64'\nassert solution('10 10 10 20 0 10 10 10 10\\n4\\n') == '0'\nassert solution('10 10 10 20 0 10 10 10 10\\n5\\n') == '0'\nassert solution('10 10 10 20 0 10 10 10 10\\n6\\n') == '1820000'"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n1\") == \"1\"\nassert solution(\"1 0 0 0 0 0 0 0 1\\n1\") == \"1\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution(\n    '''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution(\n    '''7 2\n30 270 995 996 997 998 999''') == '0 0'\n'''\n\nimport sys"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2 570\"\n\nassert solution(\"4 2\") == \"0 0\"\nassert solution(\"7 1\") == \"2 330\"\nassert solution(\"5 3\") == \"2 210\"\nassert solution(\"13 0\") == \"2 330\"\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '7 0\\n30 270 995 996 997 998 999\\n') == '2 330'\nassert solution(\n    '7 1\\n30 270 995 996 997 998 999\\n') == '2 570'\nassert solution(\n    '7 2\\n30 270 995 996 997 998 999\\n') == '0 0'\nassert solution(\n    '7 3\\n30 270 995 996 997 998 999\\n') == '0 0'\nassert solution(\n    '7 4\\n30 270 995 996 997 998 999\\n') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'\n''') == '2 330'\nassert solution('''7 3\n30 270 995 996 997 998 999''') == '0 0'\nassert solution('''7 4\n30 270 995 996 997 998 999''') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'\nassert solution('1 2\\n30 270 995 996 997 998 999') == '0 0'\nassert solution('3 4\\n3 30 90 99 100\\n1 1 1 1') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\nassert solution('xabcdef') == 6\nassert solution('abcdefg') == 6\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"a\") == 1\nassert solution(\"ab\") == 1\nassert solution(\"abc\") == 1\nassert solution(\"abab\") == 2\nassert solution(\"abcabc\") == 3\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcd') == 1\nassert solution('abababab') == 4\nassert solution('ababababab') == 7\nassert solution('abcdabcd') == 2\nassert solution('ababababababababab') == 1\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"aaaaaaaa\") == 1\nassert solution(\"abbaabbaabba\") == 2\nassert solution(\"abcdef\") == 6\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdef') == 6\nassert solution('abbaabbaabba') == 2\nassert solution('aaaaaaaa') == 1\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz') == 52\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('abc') == None\nassert solution('abcdef') == None\nassert solution('aabc') == 3\nassert solution('abbba') == 2\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('ab') == 'b'\nassert solution('abc') == 'b'\nassert solution('abcd') == 'b'\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\nassert solution('abcdefg') == 7\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcd') == 1\nassert solution('abcdef') == 6\nassert solution('abcdzxc') == 1\nassert solution('abcdefzxc') == 6\nassert solution('aaaaaaaaa') == 1\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\nassert solution(\"abaabac\") == \"6\"\nassert solution(\"abcccdef\") == \"6\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n\"\"\"\n) == \"\"\"2\n1 2\n\"\"\"\n\nassert solution(\n\"\"\"5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n\"\"\"\n) == \"\"\"1\n1\n\"\"\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\n\") == \"2\\n1 2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n\") == \"0\\n1\\n\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\\n\") == \"1\\n1\\n\""
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 2') == '2\\n1 2'\nassert solution('1 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '2\\n1 2'\nassert solution('1 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '2\\n1 2'\nassert solution('1 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '2\\n1 2'\nassert solution('1 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '2\\n1 2'\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2\\n1 2'\nassert solution('4 12') == '2\\n1 2'\nassert solution('5 10') == '2\\n1 2'\nassert solution('3 6') == '0\\n1 2'\nassert solution('3 6\\n1 2\\n11 12 15 19 24 30') == '0\\n1 2\\n'\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\\n1 2\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\nSample Output 3''') == '0\\n1\\n'\nassert solution('''2\n1\n3\n5\n7\n9\n13\n''') == '3\\n1 2 3\\n'\nassert solution('''7\n1\n3\n5\n7\n9\n13\n''') == '3\\n1 2 3\\n'\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\\n1 2\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '0\\n1\\n'\nassert solution('''3 9\n1 2 4\n1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n''') == '0\\n1 2\\n'\nassert solution('''3 4\n1 2 4\n1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n''') == '0\\n1\\n'\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\\n1 2\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '0\\n1\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '0\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '0\\n1\\n'\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40''') == '2\\n1 2\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '0\\n1\\n'\nassert solution('''5 10\n1 2 4\n0 1 2 3 4 5\n''') == '0\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '0\\n1\\n'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5551212') == 1\nassert solution('5519876') == 0\nassert solution('5055555') == 0\n\"\"\""
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nassert solution('5579679') == '0'\nassert solution('000') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nassert solution('0901234') == '0'\nassert solution('555-1212') == '1'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5551212') == 1\nassert solution('5519876') == 0\nassert solution('5055555') == 0\nprint(\"Testcases passed successfully.\")\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nassert solution('9999999') == '1'\nassert solution('2048') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5551212\") == 1\nassert solution(\"5519876\") == 0\nassert solution(\"5055555\") == 0"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('34/1') == '9/10'\nprint(\"Testcases passed\")\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\nassert solution(\"-40/8\") == \"-1/2\"\n\nfrom fractions import Fraction\nfrom math import gcd\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 0.5\nassert solution(3) == 0.25\nassert solution(4) == 0.125\nassert solution(5) == 0.0625\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('-9/1') == '-9/1'\nassert solution('0/0') == '0/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\nprint(\"\\nPassed!\\n\")"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nprint('All set!')\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\nassert solution(\"-34/1\") == \"25/27\"\nassert solution(\"0/1\") == \"0/1\"\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\""
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Retrograde\"\nassert solution(stdin) == \"Transposition\"\nassert solution(stdin) == \"Inversion\"\n\"\"\"\n\nimport sys\nfrom functools import reduce\nfrom operator import mul\n\nmemo = {}"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\nassert solution('''3\nC E G\nD F# A\n''') == 'Nonsense'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Nonsense'\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('C E G') == \"Transposition\"\nassert solution('C E G') == \"Retrograde\"\nassert solution('C E G') == \"Inversion\"\nassert solution('C E G') == \"Nonsense\"\nassert solution('A B C D E F G') == \"Transposition\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Nonsense\"\n\"\"\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(''.join(stdin.strip().split('\\n'))) == 'Retrograde'"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''\n7\nC C G G A A G\nC C F F D D D F\n''') == 'Retrograde'\nassert solution('''\n7\nA B C D E F G\nG F E D C B A\n''') == 'Inversion'\nassert solution('''\n2\nC D\nD E\n''') == 'Nonsense'\nassert solution('''\n3\nC D E G\nD E G A\n''') == 'Transposition'\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Nonsense\""
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\n\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\n\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n\nassert solution('''10\nF C G D D E D E\nE E D C C D D D\n''') == 'Nonsense'\n\nassert solution('''11\nA B C D D E F G D\nE E D C C D D D E\n''') == 'Retrograde'"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\"\n                \"C E G\\n\"\n                \"D F# A\\n\") == \"Transposition\"\nassert solution(\"7\\n\"\n                \"C C G G A A G\\n\"\n                \"C C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\n\"\n                \"A B C D E F G\\n\"\n                \"G F E D C B A\\n\") == \"Retrograde\"\nassert solution(\"6\\n\"\n                \"C C C D D E E\\n\"\n                \"E D D E D E D\\n\") == \"Nonsense\"\nassert solution(\"7\\n\"\n                \"C C G G A A G\\n\"\n                \"C C F F D# D# F\\n\") == \"Nonsense\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\nC E G\\nD F# A') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Inversion'\nassert solution('7\\nA B C D E F G\\nG F E D C B A') == 'Retrograde'\nprint('Test cases passed')\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\nassert solution(\"This is a test\") == \"This is a test\"\nassert solution(\"Hi-there, we are Coders!\") == \"Hi-there, we are Coders!\"\n'''\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\"\"\""
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\"\"\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\nprint(solution(''))\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\n\"\"\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\nI love ba-na-na\n''') == 'Gah kove bababa'\n\nassert solution('''\nCat-a-pil-lar\n''') == 'Catacillar'\n\nassert solution('''\nCo-ding is the best\n''') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''I love ba-na-na''') == '''Gah kove bababa'''\nassert solution('''Cat-a-pil-lar''') == '''Catacillar'''\nassert solution('''Co-ding is the best''') == '''Cociccah gs the bestuh'''\n'''\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    'I love ba-na-na'\n) == 'Gah kove bababa'\nassert solution(\n    'Cat-a-pil-lar'\n) == 'Catacillar'\nassert solution(\n    'Co-ding is the best'\n) == 'Cociccah gs the bestuh'\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\nassert solution('7') == '32'\nassert solution('10') == '72'\n\nprint(solution('14'))\n\"\"\""
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n') == 16\nassert solution('5\\n') == 37\nassert solution('6\\n') == 54\nassert solution('1\\n') == 6\nassert solution('2\\n') == 13\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"14\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n\nprint('Test success!')\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1') == 6\nassert solution('4') == 16\nassert solution('3') == 14\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 6\nassert solution(\"2\") == 16\nassert solution(\"3\") == 14\nassert solution(\"4\") == 19\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(\"Correct!\")\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"6\"\nassert solution(\"4\\n\") == \"16\"\nassert solution(\"3\\n\") == \"14\"\nassert solution(\"5\\n\") == \"31\"\nassert solution(\"10\\n\") == \"124\"\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'\n\n\"\"\"\nfrom __future__ import annotations\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 3\\n5 7 1 9\\n') == '3'\nassert solution('1 3\\n4 8 1 9\\n') == '1'\nassert solution('1 2\\n2 3 4\\nnassert solution('4 100000\\n1 2 3 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2 3 4 5''') == '3'\nassert solution('''5 10\n4 8 1 9 7''') == '2'\nassert solution('''4 10\n1 3 1 7''') == '4'\n\nprint(solution('''10 10\n9 2 1 5 4 8 1 3 4 5 6 9'''))"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\n\nassert solution('''5 10\n4 8 1 9 7\n''') == '2'\n\nassert solution('''5 10\n4 8 1 9 7\n''') == '4'\n\nassert solution('''5 10\n1 3 1 7\n''') == '4'\n\nassert solution('''5 10\n2 4 1 3 7\n''') == '3'"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 10\\n1 3 1 7\") == \"4\"\nassert solution(\"5 6\\n1 2 3 4 5\") == \"3\"\nassert solution(\"3 10\\n1 2 3\") == \"2\"\nassert solution(\"5 10\\n4 8 1 9 7\") == \"2\"\nassert solution(\"1 10\\n1 1\") == \"1\"\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5\\n1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5\\n1 2 3 4 5') == '3'\nassert solution('2 3 4 5\\n1 2 3 4 5') == '3'\nassert solution('2 3 4 5\\n1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5\\n1 2 3 4 5') == '3'\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('1 2') == '0'\nassert solution('2 1') == '1'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 6\n1 2 3 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"5 10\n4 8 1 9 7\n\"\"\") == \"2\"\nassert solution(\"\"\"10 4\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"4\"\nassert solution(\"\"\"10 10\n1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"10 10\n1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''5 10\n1 3 1 7\n''') == '4'\nassert solution('''5 10\n1 3 1 7\n''') == '4'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0''') == 'possible'\nassert solution('''1 2\n1 0 0\n0 1 0''') == 'impossible'\nassert solution('''1 2\n1 0 0\n1 0 1''') == 'impossible'\nassert solution('''1 10\n1 0 0\n0 1 0''') == 'impossible'\nassert solution('''1 10\n1 0 0\n0 1 0\n1 0 1''') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 1') == 'possible'\nassert solution('0 1 1') == 'possible'\nassert solution('0 1 0') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"possible\"\nassert solution(\"0 1 1\") == \"possible\"\nassert solution(\"1 0 0\") == \"impossible\"\nassert solution(\"0 1 0\") == \"impossible\"\nassert solution(\"0 1 1\") == \"impossible\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 1\\n1 0 1\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n0 1 0\\n1 0 1\\n') == 'impossible'\nassert solution('1 2\\n1 1 1\\n0 0 0\\n') == 'impossible'\nassert solution('1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n0 0 0\\n0 1 1\\n') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1') == 'impossible'\nassert solution('1 2\\n0 1 0\\n0 1 0') == 'possible'\nassert solution('1 2\\n0 1 0\\n0 1 0') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"\n\n\"\"\""
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('2 3') == 'impossible'\nassert solution('2 2') == 'impossible'\nassert solution('3 4') == 'possible'\nassert solution('2 3\\n0 1 0\\n1 0 0\\n2 0 0') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0') == 'impossible'\nassert solution('1 2\\n1 0 1\\n0 0 1') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0''') == 'possible'\nassert solution('''1 2\n1 0 0\n0 1 0''') == 'impossible'\nassert solution('''1 2\n1 0 0\n0 0 0''') == 'impossible'\nassert solution('''1 2\n0 1 1\n1 0 0''') == 'possible'\nassert solution('''1 2\n0 1 0\n1 0 1''') == 'impossible'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"2 3\") == 1.875\nassert solution(\"6 2\") == 4.25\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nassert solution('100 1') == '0.5'\nassert solution('100 2') == '0.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1\\n') == '1'\nassert solution('2 3\\n') == '1.875'\nassert solution('6 2\\n') == '4.25'\nprint('Passed!')\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''2 3''') == '1.875'\nassert solution('''6 2''') == '4.25'\nassert solution('''8 2''') == '6.75'\nassert solution('''10 5''') == '5.2'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nprint(solution('10 100'))\nprint(solution('1000 100'))\nprint(solution('100 1000'))\nprint(solution('10000 100'))\n\"\"\"\n\nfrom math import log10, floor"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n\nn, k = (int(x) for x in stdin.split())\nprint(solution(stdin))\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nassert solution('1 1000000000') == '0.0'\nassert solution('1 1000000000 1') == '0.0'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1.75\"\nassert solution(\"3 3\") == \"1.5\"\nassert solution(\"5 5\") == \"2.25\"\nassert solution(\"6 3\") == \"4.25\"\nassert solution(\"10 10\") == \"9.5\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n\"\"\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 0''') == '''0 0'''\nassert solution('''4 2 7''') == '''1 4'''\nassert solution('''3 0 0''') == '''1 6'''\nassert solution('''6 1 8''') == '''6 0'''\nassert solution('''6 9 4''') == '''6 9'''\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nprint('Testcase 1 passed')"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1 0''') == '0 0'\nassert solution('''4 2 7''') == '1 4'\nassert solution('''3 0 0''') == '1 6'\nassert solution('''1 2 1''') == '0 1'\nassert solution('''10 4 1''') == '3 2'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nassert solution('4 3 4') == '1 1'\nassert solution('1 2 3') == '0 0'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n\n\"\"\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nassert solution('2 4 5') == '1 0'\nassert solution('1 3 4') == '2 3'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == stdout.readline().strip()\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1 0\n''') == '0 0'\nassert solution('''4 2 7\n''') == '1 4'\nassert solution('''3 0 0\n''') == '1 6'\nassert solution('''1 1 1\n''') == '0 0'\nassert solution('''3 2 0\n''') == '1 4'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '1'\nassert solution('4\\nBWWB\\nBWBB\\nWBBW\\nBWBW\\n') == '0'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nWWBWBB\\n') == '0'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nWWBWBB\\n') == '0'\nassert solution('6\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW\\nWWWWWWW"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''BWWB\nWBWB\nWBBW\nBWBW''') == '0'\nassert solution(\n'''WBBW\nBWBW\nWBWB\nBWWB''') == '1'\nassert solution(\n'''BWWB\nBWBW\nWBWB\nBWWB''') == '0'\nassert solution(\n'''WBWW\nWBWW\nWWWW\nWWWW''') == '0'\nassert solution(\n'''BWWB\nBWWB\nBWWB\nWBBW''') == '1'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW''') == '1'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB''') == '0'\nassert solution('''8\nBBBWBWB\nWBWBWBW\nBBBWBWB\nBBWBWBW\nBBBWBWB\nWBWBWBW\nBWBWBWB\nBBBWBWB''') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '4\\n'\n    'WBBW\\n'\n    'WBWB\\n'\n    'BWWB\\n'\n    'BWBW\\n'\n) == '1'\n\nassert solution(\n    '6\\n'\n    'BWBWWB\\n'\n    'WBWBWB\\n'\n    'WBBWBW\\n'\n    'BBWBWW\\n'\n    'WWBWBB\\n'\n) == '0'\n\nassert solution(\n    '6\\n'\n    'BWBWWB\\n'\n    'WBWBWB\\n'\n    'WBBWBW\\n'\n    'BBWBWW\\n'\n    'WWBWBB\\n'\n) == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(''.join(sample_input)) == sample_output\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('BWWB') == '0'\nassert solution('WWBW') == '0'\nassert solution('WBBW') == '0'\nassert solution('BBWB') == '0'\nassert solution('BWWB') == '1'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '1'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nWWBWBB\\n') == '0'\nassert solution('8\\nBWWBBB\\nWBWBWB\\nBWBWWB\\nWWBWBB\\nWWBBWB\\nWWWBWB\\nWWBWBW\\n') == '0'\nassert solution('4\\nWBBB\\nWBWB\\nBWWB\\nBWBW\\n') == '1'\nassert solution('4\\nWBBW\\nWBWW\\nBWWB\\nBWBW\\n') == '0'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\nassert solution(\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\nassert solution(\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 2'\nassert solution(\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '1 2'\nassert solution(\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 7'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom bisect import bisect_left, bisect_right\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2') == '2 1'\nassert solution('2\\n6\\n3 4\\n2 4\\n1 3\\n1 4\\n5 8') == '3 4\\n2 4\\n1 3\\n3 7'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '2 1'\nassert solution('2\\n6\\n3 4\\n2 4\\n1 3\\n1 4\\n5 8') == '3 4\\n2 4\\n1 3\\n3 7'\nassert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '2 1'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('''4\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3''') == '2 1\\n3 4\\n3 2\\n1 2\\n4 5'\nassert solution('''3\n1 2 1 2\n2 6 3 4\n2 4 1 3''') == '2 1\\n3 4'\nassert solution('''2\n1 2 1 2\n2 6 3 4\n2 4 1 3''') == '2 1\\n3 4'\nassert solution('''1\n1 2 1 2\n2 6 3 4\n2 4 1 3''') == '2 1\\n3 4'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('2\\n2\\n2\\n2\\n2') == '2 2'\nassert solution('2\\n2\\n2\\n2\\n2') == '2 2'\nassert solution('1\\n1\\n1\\n1\\n1') == '1 1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1 1'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\nassert solution('''\n4 2 1 1\n1 2 1 3\n3 2 4 5\n5 5 5 5\n''') == '3 2'\nassert solution('''\n2 1\n2 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 4'\nassert solution('2 4 1 3') == '1 2'\nassert solution('1 2 1 3') == '1 3'\nassert solution('1 4 5 8') == '3 7'"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n\"\n'''\n'''"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([3,2,0,-4]) == True\nassert solution([1,2]) == True\nassert solution([1]) == False\nassert solution([1,2,3,4,5,6]) == False\nassert solution([3,2,0,-4]) == True\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1,2,3,4,5') == 'true'\nassert solution('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100') == 'true'\nassert solution('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100') == 'true'\nassert solution('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100') == 'true'\nassert solution('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100') == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\nassert solution([3,2,0,-4], 4) == False\nassert solution([1,2], 3) == False\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"head, the head of a linked list, determine if the linked list has a cycle in it.\\n\") == \"true\"\nassert solution(\"head, the head of a linked list, determine if the linked list has a cycle in it.\\n\") == \"true\"\nassert solution(\"head, the head of a linked list, determine if the linked list has a cycle in it.\\n\") == \"true\"\nassert solution(\"head, the head of a linked list, determine if the linked list has a cycle in it.\\n\") == \"false\"\nassert solution(\"head, the head of a linked list, determine if the linked list has a cycle in it.\\n\") == \"false\"\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3,2,0,-4,7,8,9,10,11,7,5,1,2,0,3,4,5,2,1,4,2,6,3,0,5,4,6,5,7,6,8,7,9,8,10,9,11,10,11,11') == True\nassert solution('3,2,0,-4,7,8,9,10,11,7,5,1,2,0,3,4,5,2,1,4,2,6,3,0,5,4,6,5,7,6,8,7,9,8,10,9,11,10,11,11') == False\nassert solution('1,2,0,-4,7,8,9,10,11,7,5,1,2,0,3,4,5,2,1,4,2,6,3,0,5,4,6,5,7,6,8,7,9,8,10,9,11,10,11,11') == False\nassert solution('1,2,0,-4,7,8,9,10,11,7,5,1,2,0,3,4,5,2,1,4,2,6,3,0,5,4,6,5,7,6,8,7,9,8,10,9,11,10,11,11') == False\nassert solution('3,2,0,-4,7,8,9,10,11,7,5,1,2,0,3,4,5,2,1,4,2,6,3,0,5,4,6,5,7,6,8,7,9,8,10,9,11,10,11,11') == False\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([3,2,0,-4], 1) is True\nassert solution([1,2], 0) is True\nassert solution([1], -1) is False\n\n\nclass ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.next = None"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n\n\n\"\"\"\nDefinition of ListNode\nclass ListNode(object):\n\n    def __init__(self, val, next=None):\n        self.val = val\n        self.next = next\n\"\"\"\nclass Solution:\n    \"\"\"\n    @param head: The first node of the linked list.\n    @return: A boolean indicating if a cycle exists in the linked list.\n    \"\"\"\n    def hasCycle(self, head):\n        # write your code here\n        node = head\n        index = 0\n        while node:\n            index += 1\n            if not node.next:\n                return False\n            node = node.next\n            if node == head:\n                return True\n            node = node.next\n        return False"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n\"\"\""
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([3,2,0,-4]) == 'true'\nassert solution([1,2]) == 'true'\nassert solution([1]) == 'false'\nassert solution([]) == 'false'\nassert solution([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]) == 'true'\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n\nassert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '2'\nassert solution('2\\n3\\n') == '3'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '9'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '2'\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]\nassert solution([3, 2, 4], 6) == [1, 2]\nassert solution([3, 3], 6) == [0, 1]\n\"\"\"\n\n\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        nums_map = {}\n        for idx, num in enumerate(nums):\n            if target - num in nums_map:\n                return [nums_map[target - num], idx]\n            nums_map[num] = idx\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n1 2 3 4 5\n'''\n) == '0, 2'\nassert solution(\n'''\n10 11 12 13 14\n'''\n) == '2, 3'\nassert solution(\n'''\n10 11 12 13 14 15\n'''\n) == '2, 3'\nassert solution(\n'''\n1 2 3 4 5\n'''\n) == '0, 1'\nassert solution(\n'''\n1 2 3 4 5 6\n'''\n) == '0, 1'\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n1 1 1\") == \"1 0\"\nassert solution(\"1 2 3\\n3 3 3\") == \"2 2\"\nassert solution(\"1 2 3\\n3 1 2\") == \"1 1\"\nassert solution(\"1 2 3\\n3 2 1\") == \"1 0\"\nassert solution(\"1 2 3\\n3 1 3\") == \"2 1\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"11 15\") == [0, 1]\nassert solution(\"2 7\") == [0, 1]\nassert solution(\"2 5\") == [1, 0]\nassert solution(\"9 16\") == [1, 2]\nassert solution(\"1 5 1\") == [0, 1]\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"15\") == \"\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\n\ntry:\n    assert solution([2, 7, 11, 15]) == [0, 1]\n    print(\"Success: test #1\")\nexcept:\n    print(\"Failed: test #1\")\n\nassert solution([2, 7, 11, 15]) == [0, 1]\nprint(\"Success: test #2\")\n\ntry:\n    assert solution([2, 7, 11, 15]) == [0, 1]\n    print(\"Success: test #3\")\nexcept:\n    print(\"Failed: test #3\")\n\nassert solution([2, 7, 11, 15]) == [0, 1]\nprint(\"Success: test #4\")\n\ntry:\n    "
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\") == \"1\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2,7,11,15\n    ''') == '0 1'\nassert solution(\n    '''\n    2,7,11,15\n    ''') == '0 2'\nassert solution(\n    '''\n    2,7,11,15\n    ''') == '1 2'\nassert solution(\n    '''\n    2,7,11,15\n    ''') == '2 1'\nassert solution(\n    '''\n    2,7,11,15\n    ''') == '2 0'\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('3 4') == '1'\nassert solution('1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == 0\nassert solution(\"4\") == 1\nassert solution(\"5\") == 1\nassert solution(\"6\") == 1\nassert solution(\"7\") == 1\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n') == 0\nassert solution('4\\n') == 1\nassert solution('5\\n') == 2\nassert solution('6\\n') == 3\nassert solution('7\\n') == 4\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '''0'''\nassert solution('''4''') == '''1'''\nassert solution('''12''') == '''10'''\nassert solution('''60''') == '''30'''\nassert solution('''100''') == '''70'''\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('3\\n3\\n3') == '0'\nassert solution('3\\n4\\n5') == '0'\nassert solution('4\\n4\\n4\\n4') == '1'\nassert solution('1\\n2\\n1') == '2'\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 1\nassert solution('5') == 2\nassert solution('6') == 3\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '5'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2 2 1') == '4'\nassert solution('2\\n3 7') == 'impossible'\nassert solution('5\\n5 5 4 5 4') == 'impossible'\nassert solution('4\\n5 5 4 5 4') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2 2 1''') == \"4\"\nassert solution('''1\n3 7''') == \"impossible\"\nassert solution('''2\n1 2 2 1''') == \"4\"\nassert solution('''2\n1 7''') == \"impossible\"\nassert solution('''1\n3 7''') == \"impossible\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2 2 1\") == \"4\"\nassert solution(\"2\\n3 7\") == \"impossible\"\nassert solution(\"2\\n1 2 2 1\") == \"4\"\nassert solution(\"2\\n1 2 2 1\") == \"4\"\nassert solution(\"2\\n1 2 2 1\") == \"4\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2 2 1\") == \"4\"\nassert solution(\"2\\n1 2 2 1\") == \"4\"\nassert solution(\"2\\n1 2 2 1\") == \"4\"\nassert solution(\"1\\n3 7\") == \"impossible\"\nassert solution(\"1\\n3 7\") == \"impossible\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1 2 2 1''') == '4'\nassert solution('''2\n3 7''') == 'impossible'\nassert solution('''2\n1 2\n3 7''') == 'impossible'\nassert solution('''2\n2 1\n3 7''') == 'impossible'\nassert solution('''2\n1 2\n3 4''') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1\n2\n2\n1\"\"\") == \"4\"\nassert solution(\"\"\"1\n3\n7\n\"\"\") == \"impossible\"\nassert solution(\"\"\"1\n3\n3\n1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"1\n4\n2\n3\n4\n1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"1\n2\n2\n1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 4\nassert solution('2\\n1\\n2\\n3\\n4') == 5\nassert solution('2\\n3\\n3\\n1\\n4') == 4\nassert solution('2\\n3\\n3\\n4\\n4') == 4\nassert solution('3\\n3\\n3\\n4\\n4') == 4\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2 2 1\\n\") == \"4\"\nassert solution(\"2\\n1 2 2 1\\n\") == \"impossible\"\nassert solution(\"3\\n3 7\\n\") == \"impossible\"\nassert solution(\"3\\n1 2 1\\n\") == \"4\"\nassert solution(\"2\\n3 7\\n\") == \"impossible\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n1 166\\n1 167\\n1 168\\n1 169\\n1 170\\n1 171\\n1 172\\n1 173\\n1 174\\n1 175\\n1 176\\n1 177\\n1 178\\n1 179\\n1 180\\n1 181\\n1 182\\n1 183\\n1 184\\n1 185\\n1 186\\n1 187\\n1 188\\n1 189\\n1 190\\n1 191\\n1 192\\n1 193\\n1 194\\n1 195\\n1 196\\n1 197\\n1 198\\n1 199\\n1 200\\n1 201\\n1 202\\n1 203\\n1 204\\n1 205\\n1 206\\n1 207\\n1 208\\n1 209\\n1 210\\n1 211\\n1 212\\n1 213\\n1 214\\n1 215\\n1 216\\n1 217\\n1 218\\n1 219\\n1 220\\n1 221\\n1 222\\n1 223\\n1 224\\n1 225\\n1 226\\n1 227\\n1 228\\n1 229\\n1 230\\n1 231\\n1 232\\n1 233\\n1 234\\n1 235\\n1 236\\n1 237\\n1 238\\n1 239\\n1 240\\n1 241\\n1 242\\n1 243\\n1 244\\n1 245\\n1 246\\n1 247\\n1 248\\n1 249\\n1 250\\n1 251\\n1 252\\n1 253\\n1 254\\n1 255\\n1 256\\n1 257\\n1 258\\n1 259\\n1 260\\n1 261\\n1 262\\n1 263\\n1 264\\n1 265\\n1 266\\n1 267\\n1 268\\n1 269\\n1 270\\n1 271\\n1 272\\n1 273\\n1 274\\n1 275\\n1 276\\n1 277\\n1 278\\n1 279\\n1 280\\n1 281\\n1 282\\n1 283\\n1 284\\n1 285\\n1 286\\n1 287\\n1 288\\n1 289\\n1 290\\n1 291\\n1 292\\n1 293\\n1 294\\n1 295\\n1 296\\n1 297\\n1 298\\n1 299\\n1 300\\n1 301\\n1 302\\n1 303\\n1 304\\n1 305\\n1 306\\n1 307\\n1 308\\n1 309\\n1 310\\n1 311\\n1 312\\n1 313\\n1 314\\n1 315\\n1 316\\n1 317\\n1 318\\n1 319\\n1 320\\n1 321\\n1 322\\n1 323\\n1 324\\n1 325\\n1 326\\n1 327\\n1 328\\n1 329\\n1 330\\n1 331\\n1 332\\n1 333\\n1 334\\n1 335\\n1 336\\n1 337\\n1 338\\n1 339\\n1 340\\n1 341\\n1 342\\n1 343\\n1 344\\n1 345\\n1 346\\n1 347\\n1 348\\n1 349\\n1 350\\n1 351\\n1 352\\n1 353\\n1 354\\n1 355\\n1 356\\n1 357\\n1 358\\n1 359\\n1 360\\n1 361\\n1 362\\n1 363\\n1 364\\n1 365\\n1 366\\n1 367\\n1 368\\n1 369\\n1 370\\n1 371\\n1 372\\n1 373\\n1 374\\n1 375\\n1 376\\n1 377\\n1 378\\n1 379\\n1 380\\n1 381\\n1 382\\n1 383\\n1 384\\n1 385\\n1 386\\n1 387\\n1 388\\n1 389\\n1 390\\n1 391\\n1 392\\n1 393\\n1 394\\n1 395\\n1 396\\n1 397\\n1 398\\n1 399\\n1 400\\n1 401\\n1 402\\n1 403\\n1 404\\n1 405\\n1 406\\n1 407\\n1 408\\n1 409\\n1 410\\n1 411\\n1 412\\n1 413\\n1 414\\n1 415\\n1"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('20\\n1') == '100'\nassert solution('200\\n0') == '200'\nassert solution('1000\\n1') == '1000000'\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 10''') == '180'\nassert solution('''1 2''') == '10'\nassert solution('''1 0''') == '0'\nassert solution('''1 5''') == '5'\nassert solution('''1 11''') == '10'\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''184 1''') == '180'\nassert solution('''123450995 1''') == '123451000'\nassert solution('''5 1''') == '5'\nassert solution('''11 1''') == '10'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"\") == \"\"\nassert solution(\"4 1\") == \"4\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123450995 1') == '123451000'\nassert solution('100000 0') == '100000'\nassert solution('100000 1') == '1000'\nassert solution('100000 2') == '100'\nassert solution('100000 3') == '10'\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"184 1\"\n) == \"180\"\nassert solution(\n\"123450995 1\"\n) == \"123451000\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''0\n0\n0\n0''') == '0.000000'\nassert solution('''0\n0\n1 0\n1 1\n''') == '0.50000'\nassert solution('''0\n1 1\n1 1\n2 2\n2 2''') == '0.50000'\nassert solution('''0\n1 1\n2 2\n3 3\n3 3''') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''4\n1 1\n3 2\n4 1\n3 2''') == '0.414214'\nassert solution('''10\n0 1\n1 0\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1''') == '0.0000000000000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == \"0.000000\"\nassert solution('''3\n0 1\n1 0\n1 1''') == \"0.000000\"\nassert solution('''2\n1 1\n1 1''') == \"0.000000\"\nassert solution('''1\n2 2''') == \"0.000000\"\nassert solution('''10\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1\n0 0''') == \"1.50000\"\nprint('Passed')\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''3\n1 0\n1 1\n2 2\nSample Output 2:\n0.000000\nassert solution('''3\n1 0\n1 1\n2 2''') == '0.000000'\nassert solution('''3\n0 1\n1 0\n1 1\nSample Output 2:\n0.000000\nassert solution('''10\n5 0\n10 1\n5 4\n4 4\n4 5\n8 5\n9 7\n10 9\n5 8\n3 8\n8 7\nSample Output 2:\n1.032911\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''5\n0 1\n1 0\n1 1\n1 1\n2 2''') == '0.000000'\nassert solution('''5\n1 0\n3 0\n1 1\n4 1\n2 2''') == '0.000000'\nassert solution('''7\n1 0\n3 0\n2 0\n1 1\n1 1\n2 2\n1 1''') == '0.000000'\nassert solution('''9\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9''') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n3\\n0\\n1\\n1\\n1\\n') == '0.000000'\nassert solution('1\\n1\\n2\\n3\\n0\\n1\\n1\\n1\\n') == '0.000000'\nassert solution('1\\n1\\n2\\n3\\n0\\n1\\n1\\n1\\n') == '0.000000'\nassert solution('1\\n1\\n2\\n3\\n0\\n1\\n1\\n1\\n') == '0.000000'\nassert solution('1\\n1\\n2\\n3\\n0\\n1\\n1\\n1\\n') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0.000000'\nassert solution('1\\n2\\n3') == '0.500000'\nassert solution('3\\n1 1\\n2 2\\n3 3') == '0.500000'\nassert solution('3\\n0 1\\n1 0\\n1 1') == '0.000000'\nassert solution('2\\n1 1\\n2 2') == '0.500000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''1 1\n2 2\n0 0''') == '0.000000'\nassert solution('''2 2\n0 0\n0 0''') == '0.000000'\nassert solution('''1 1\n2 2\n2 1''') == '0.500000'\nassert solution('''2 1\n1 1\n0 0''') == '1.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''3\n0 1\n1 0\n1 1''') == '0.000000'\nassert solution('''3\n1 1\n2 0\n3 0''') == '1.00000'\nassert solution('''3\n0 0\n1 1\n1 1''') == '0.5000'\nassert solution('''3\n0 0\n2 2\n0 0''') == '2.0000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0') == '0.000000'\nassert solution('1 1') == '0.000000'\nassert solution('0 0\\n1 1') == '0.000000'\nassert solution('0 1\\n1 0') == '0.000000'\nassert solution('1 0\\n0 1') == '0.000000'\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\"\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n2\\n4\\n6\\n8\\n'\n'''\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1\\n2\\n4\\n'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n6\\n8\\n'\nassert solution('''\n10\n6\n3 4 5 6 7 8 9 1 2 3\n4 1 2 3\n2 3\n1 2 2\n6\n7 9\n8 6\n1 2 2\n3 6\n1 1\n1\n1\n2\n1\n1\n1\n3\n2\n1\n2\n1\n2\n1\n2\n2\n2\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1') == '1\\n2\\n4\\n'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\nassert solution('7\\n5\\n4 1 3 5 6 7\\n2 5 6 7\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\nassert solution('7\\n5\\n4 1 3 5 6 7\\n2 5 6 7\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\nassert solution('7\\n5\\n4 1 3 5 6 7\\n2 5 6 7\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4\\n'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2\\n4\\n6\\n'\nassert solution('''10\n6\n9 5 8 6 7 3 4 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1 1 4\\n'\nassert solution('''10\n6\n5 4 3 2 1 1\n1 1 1 1 1 1\n1 1 1 1 1\n1 1 1 1\n1 1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1 1 4\\n'\nassert solution('''10\n6\n5 4 3 2 1 1\n1 1 1 1 1 1\n1 1 1 1 1\n1 1 1 1\n1 1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1 1 4\\n'\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1\\n2\\n4\\n'\n\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n6\\n8\\n'\n\nassert solution('''8\n10\n
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"input/1.in\").read()) == open(\"output/1.out\").read()\nassert solution(open(\"input/2.in\").read()) == open(\"output/2.out\").read()\nassert solution(open(\"input/3.in\").read()) == open(\"output/3.out\").read()\nassert solution(open(\"input/4.in\").read()) == open(\"output/4.out\").read()\nassert solution(open(\"input/5.in\").read()) == open(\"output/5.out\").read()\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1''') == '1\\n2\\n4\\n'\nassert solution(\n'''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1''') == '1\\n2\\n6\\n8\\n'\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1\\n2\\n4'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n2\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n4'\nassert solution('''\n6\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n6\\n8'\nassert solution('''\n6\n6\n1\n2\n3\n4\n5\n6\n''') == ''\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == ''\nassert solution('2 2 2') == '8'\nassert solution('1 2 3') == '24'\nassert solution('1 2 4') == '12'\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nassert solution('1 0 0') == '1'\nassert solution('10 0 0') == '48'\nassert solution('10 1 0') == '110'\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"60\"\nassert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\nassert solution(\"3 2 4\") == \"26\"\nassert solution(\"3 2 1\") == \"20\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 5') == '60'"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nprint(\"Tests passed successfully.\")\n\"\"\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nprint(\"Passed\")\n\"\"\""
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nprint(solution(stdin))\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nprint('Test case passed')\nprint()\n\"\"\""
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 5') == \"60\"\nassert solution('2 2 2') == \"8\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n3 0 2') == '1.6666666666666667'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1.0'\nassert solution('1\\n1\\n1\\n1\\n1\\n-1') == '1.0'\nassert solution('1\\n2\\n1\\n1\\n1\\n1') == '1.0'\nassert solution('1\\n-1\\n1\\n1\\n1\\n1') == '1.0'\nassert solution('1\\n1\\n1\\n-1\\n1\\n1') == '1.0'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '0.333'\nassert solution('4\\n1 1 1 1') == '1.3333333333333333'\nassert solution('4\\n1 1 1 0') == '0.4'\nassert solution('4\\n1 -1 4') == '2.5'\nassert solution('5\\n-1 1 -1 -1 -1') == '1.25'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n2\\n2\\n1') == '1.6666666666666667'\nassert solution('1\\n3\\n0\\n2\\n2\\n1') == '2.5'\nassert solution('1\\n3\\n4\\n3\\n2\\n1') == '2.333333333333333'\nassert solution('1\\n3\\n-1\\n2\\n2\\n1') == '2.5'\nassert solution('1\\n3\\n-1\\n2\\n-1\\n1') == '2.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1.0'\nassert solution('2\\n1 0') == '1.0'\nassert solution('2\\n2 -1') == '2.0'\nassert solution('2\\n1 -1 4') == '2.5'\nassert solution('2\\n1 0 4') == '1.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"0.6\"\nassert solution(\"3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3 -1 4\") == \"2.5\"\nassert solution(\"1 -1 4 5\") == \"0.2414\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n2 1 3') == '0.500000'\nassert solution('3\\n2 1 3 -1') == '0.5'\nassert solution('5\\n1 1 1 1 1 1') == '0.166667'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3 0 2') == '1.6666666666666667'\nassert solution('1\\n3 -1 4') == '2.5'\nassert solution('2\\n1 -1 4') == '0.5'\nassert solution('2\\n1 -1 4') == '0.5'\nassert solution('2\\n1 -1 4') == '0.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n3 0 2\\n\") == \"1.6666666666666667\"\nassert solution(\n    \"3\\n3 -1 4\\n\") == \"2.5\"\nprint(\"all tests past\")\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3\n3 0 2\n'''\n) == '1.6666666666666667'\n\nassert solution(\n'''\n3\n1 -1 4\n'''\n) == '2.5'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n''') == '6'\nassert solution('''15 12\n''') == '7'\nassert solution('''8 4\n''') == '5'\nassert solution('''19 4\n''') == '6'\nassert solution('''0 4\n''') == '2'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_reader('''7 3''')) == '6'\nassert solution(input_reader('''15 12''')) == '7'\nassert solution(input_reader('''1 10''')) == '10'\n'''\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[1]\n-----\n\"\"\"\n\nN, K = map(int, stdin.split())\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7') == '7'\nassert solution('15 12') == '7'\nassert solution('15 12') == '7'\nassert solution('2 2') == '2'\nassert solution('2 3') == '3'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6'\nassert solution('10 5') == '7'\nassert solution('7 10') == '7'\nassert solution('7 4') == '7'\nassert solution('7 5') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '7'\nassert solution('4 6 5 3 1 2 7 8 9 10 11') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '7'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '7'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10') == '1'\nassert solution('2 10') == '1'\nassert solution('2 10') == '1'\nassert solution('2 10') == '1'\nassert solution('2 10') == '1'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n7\\n3\\n') == '6'\nassert solution('1\\n15\\n12\\n') == '7'\nassert solution('1\\n15\\n12\\n') == '7'\nassert solution('1\\n15\\n12\\n') == '7'\nassert solution('1\\n15\\n12\\n') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3\\n') == '6'\nassert solution('15 12\\n') == '7'\nassert solution('10 18\\n') == '9'\nassert solution('20 100000\\n') == '149999'\nassert solution('7 18\\n') == '7'\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9000 9010 9011 9000 9001 9003 9001 9007 9000 9003 9007 9003\") == \"0\"\nassert solution(\"8654 5678 9012 12345 6789 9003 9012 7891\") == \"7\"\nassert solution(\"123456 123456 123456 123456 123456 123456 123456 123456 123456 123456 123456\") == \"0\"\nassert solution(\"123456 123456 123456 123456 123456 123456 123456 123456 123456 123456 123456\") == \"0\"\nassert solution(\"123864 123865\") == \"1\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nprint('test success')"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == input()\n\nimport sys\nassert solution(sys.stdin.read()) == sys.stdin.read()\n\n'''\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0.5\"\nassert solution(\"3\") == \"0.66666667\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2'''\n) == '0.50000000'\n\nassert solution(\n'''3'''\n) == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '0.66666667'\nassert solution('2') == '0.50000000'\nassert solution('100') == '0.0000'\nassert solution('20') == '0.000'\nassert solution('2') == '0.50000000'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('10') == '0.99999998'\nassert solution('100') == '1.0'\nassert solution('1000') == '1.00000001'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 2\") == \"\"\nassert solution(\"2 1\") == \"\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"\nassert solution(\"4\") == \"0.750000\"\nassert solution(\"5\") == \"0.83333333\"\nassert solution(\"6\") == \"0.9166667\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n') == '0.50000000'\nassert solution('3\\n') == '0.66666667'\nprint(solution(stdin))\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.66666667\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('4') == '0.750000'\nassert solution('5') == '0.83333333'\nassert solution('6') == '0.9166667'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"180\") == \"triple 20\"\nassert solution(\"96\") == \"triple 19\"\nassert solution(\"96\") == \"triple 19\"\nassert solution(\"96\") == \"triple 19\"\nassert solution(\"96\") == \"triple 19\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(180) == \"single 20\\ndouble 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"\nassert solution(35) == \"single 19\\ndouble 19\\ntriple 19\"\nassert solution(28) == \"double 19\\nsingle 19\"\nassert solution(123) == \"impossible\""
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\nassert solution('96') == 'double 15'\nassert solution('96') =='single 9'\nassert solution('45') == 'impossible'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\nstdin = \"\"\"2\n\"\"\"\nstdout = \"\"\"single 15\ntriple 19\n\"\"\"\n\nassert solution(stdin) == stdout\n\nstdin = \"\"\"20\n\"\"\"\nstdout = \"\"\"double 19\ntriple 19\n\"\"\"\n\nassert solution(stdin) == stdout\n\nstdin = \"\"\"200\n\"\"\"\nstdout = \"\"\"impossible\n\"\"\"\n\nassert solution(stdin) == stdout\n\n\n\nimport sys\nsys.stdin = open('input.txt')\nsys.stdout = open('output.txt', 'w')"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\nassert solution('96') == 'double 15'\nassert solution('96') =='single 9'\n'''\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('180') == 'triple 20\\ndouble 15\\nsingle 9'\nassert solution('96') == 'triple 19\\ndouble 15\\nsingle 9'\nassert solution('98') == 'impossible'\nassert solution('500') == 'impossible'\nassert solution('290') == 'impossible'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"180\") == \"triple 20\\ndouble 15\\nsingle 9\"\nassert solution(\"96\") == \"triple 19\\ndouble 15\\nsingle 9\"\nassert solution(\"10\") == \"impossible\"\nassert solution(\"1\") == \"single 1\"\n\"\"\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'double 15'\nassert solution('96') =='single 9'\nassert solution('96') == 'impossible'\nassert solution('33') == 'impossible'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\nassert solution(\"8 3 7\") == \"108\"\nassert solution(\"10 8 2\") == \"108\"\nassert solution(\"5 6 4\") == \"18\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n\nassert solution('10 4 6') == '42'\nassert solution('10 4 6.2') == '42'\nassert solution('10 4 6.21') == '42'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 4 7''') == '168'\nassert solution('''5 2 2''') == '36'\nprint(\"The local tests are done.\")\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 4 7') == '168'\nassert solution('2 2 2') == '36'\nassert solution('5 2 2') == '36'\nassert solution('5 1 2') == '12'\nassert solution('5 2 1') == '12'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\nassert solution(\"5 4 2\") == \"36\"\nassert solution(\"5 3 2\") == \"36\"\nassert solution(\"5 6 2\") == \"36\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3 2''') == '36'\nassert solution('''7 5 2''') == '168'\nassert solution('''10 1 2''') == '136'\nassert solution('''10 5 2''') == '136'\nassert solution('''7 0 2''') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 4 7''') == '168'\nassert solution('''5 2 2''') == '36'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3 10\\n5 8') == '7'\nassert solution('2\\n3 8\\n5 8') == '1'\nassert solution('1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"1 2 4\") == \"1\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1\n2 3\n'''\n) == '1'\n\nassert solution(\n'''2\n10 6\n3 8\n'''\n) == '7'\n\nassert solution(\n'''3\n8 10\n10 5\n10 2\n'''\n) == '1'\n\nassert solution(\n'''4\n3 6\n7 6\n7 2\n3 5\n'''\n) == '1'\n\nassert solution(\n'''5\n7 8\n1 2\n1 4\n2 6\n1 6\n'''\n) == '4'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3 10\n''') == \"7\"\nassert solution('''2\n3 8\n5 8\n''') == \"1\"\nassert solution('''3\n3 3\n3 5\n5 3\n''') == \"1\"\nassert solution('''4\n10 8\n7 5\n2 3\n''') == \"2\"\nassert solution('''5\n10 2\n3 8\n9 6\n7 5\n''') == \"1\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 10\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\") == \"1\"\nprint(\"tests passed\")\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3 10\\n') == '7'\nassert solution('2\\n3 8\\n5 8\\n') == '1'\nassert solution('1\\n2 2\\n') == '0'\nassert solution('2\\n1 1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"2 2\") == \"\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('1234567890') == '1234567890'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\nSimon says smile.\n''') =='smile.\\n'\nassert solution('''3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n''') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('''0\nSimon says smile.\n''') == ''\nassert solution('''2\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\nSimon says stop touching your nose.\n''') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('''3\nSimon says stop touching your nose.\nSimon says raise your left hand.\nSimon says stop touching your nose.\nSimon says smile.\n''') =='raise your left hand.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('1\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('4\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLower your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\n\n------Coding---------\n\"\"\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('4\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('5\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\") == \" raise your right hand.\\n raise your left hand.\\n\"\nassert solution(\"4\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLower your left hand.\\nSimon says smile.\") == \" raise your right hand.\\n raise your left hand.\\n\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\nSimon says smile.\n''') =='smile.\\n'\nassert solution('''3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n''') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('''2\nSimon says raise your right hand.\nSimon says raise your left hand.\n''') =='raise your left hand.\\n'\nassert solution('''4\nSimon says raise your right hand.\nSimon says raise your left hand.\nSimon says lift your right hand.\nSimon says lower your right hand.\n''') =='lift your right hand.\\n lower your right hand.\\n'\nassert solution('''5\nSimon says raise your right hand.\nSimon says raise your left hand.\nSimon says lift your right hand.\nSimon says lower your right hand.\nSimon says lift your left hand.\n''') =='lift your left hand.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == answer(input)\n'''"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nprint(solution(stdin))\n\"\"\"\n\"\"\"\nlst = [int(x) for x in stdin.split()]\nn = len(lst)\n\nprimes = [2, 3, 5, 7, 11, 13, 17, 19]\npos = [1, 0, -1, -2, -3, -5, -7, -11]\n\nmax_prime = 19\nmax_non_prime = lst[-1]\n\nfor i in range(n-1, -1, -1):\n    if lst[i] < max_prime:\n        lst[i] = max_prime\n    elif lst[i] < max_non_prime:\n        lst[i] = max_non_prime\n\nprint(lst)\n\"\"\"\n\nlst = [int(x) for x in stdin.split()]\nn = len(lst)\n\nprimes = [2, 3, 5, 7, 11, 13, 17, 19]\npos = [1, 0, -1, -2, -3, -5, -7, -11]"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\nassert solution(\"1 3 5 7 11 13 17 19\") == \"5\"\nassert solution(\"0 0 4 6 10 12 16 18 19\") == \"0\"\nassert solution(\"0 1 2 4 6 10 12 16 17 18 19\") == \"5\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('0 0 4 6 10 12 16 18') == '5'\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nprint(\"Test cases passed successfully.\")\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0 4 6 10 12 16 18''') == '5'\nassert solution('''1 2 4 6 10 12 16 18''') == '0'\nassert solution('''0 0 3 5 9 10 13 15''') == '0'\nassert solution('''1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19''') == '1'\nassert solution('''10 0 3 5 9 10 13 15''') == '0'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\nAA\\nAT\\nTT\\nTC\\n') == '3'\nassert solution('2\\nAA\\nAT\\nTT\\nTC\\n') == '0 1'\nassert solution('3\\nAA\\nAT\\nTT\\nTC\\n') == '0 1 2 3'\nassert solution('4\\nAT\\nAA\\nTT\\nTC\\n') == '0 1'\nassert solution('4\\nAT\\nAA\\nTT\\nTC\\n') == '0 1'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nassert solution('''4 1\nAA\nAT\nTT\nTC''') == '2'\nassert solution('''4 1\nAC\nAG\nTT\nTC''') == '2'\nassert solution('''4 1\nAA\nAT\nTT\nTC''') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4 2\nAA\nAT\nTT\nTC\"\"\") == '3'\nassert solution(\"\"\"4 1\nA\nA\nG\nT\"\"\") == '2'\nassert solution(\"\"\"4 3\nA\nT\nG\nT\"\"\") == '0 1'\nassert solution(\"\"\"4 4\nA\nA\nG\nT\nT\nG\nG\"\"\") == '0 1 2 3'\nassert solution(\"\"\"5 4\nA\nT\nG\nT\nC\nA\"\"\") == '0 1 2 3'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n\n'''\n\nfrom collections import Counter\nfrom sys import stdin\nfrom math import ceil"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('4\\nA\\nA\\nG\\nT') == '2'\nassert solution('10\\nATCTGATCAATCCTGGAATGAGCGTGCTTTTGACACAGGCCGTTCTGTCTCCGGAGACTGCTCGCCAAAGTCTCTAGCTTGACTGCTAGCTCCTGAGCATAGCCCGAAGGGCTGCTGACGCTCAGAGATGCTGCAGGATCCTACATGCACCTGCAGACGCATCAAGCTAGTAAGTTTGATGGGTTTTCGAAGCACTCCGAGAAGCTGATGGAGGTTGTAGTTGTGTAGGAAGGCCAGATCGCAATAAGAAGACGGGGAACGCGCGCCATGTTGCCGAGAACCTTGCAGCGACCGAAGTTCTGCAGGACGTAGTCTAGCTAAGGCCTCTGCTTAAACAGAGCATGTGCTCTGGCGCGTGACGCTAATGTGGAGAGACAGTGGATGAATAGACACCCCTGTAGACATCGTGCCGAGCATGGCGACAGATGTCTCCTCTTACTCAAGAAGAGCAAACCTTCTAACTATACGACGATGCTAGCAAGTGGCATGTCACCTGAGGAGGATTCCCGAGACATAGTTGAGACAGGAGCACTGAGAAGACGTGGAGTTCAGAGAATCGTAAATGATCTGAGCGACAGCATGGCGAGTCGAGAGGCTAGCTGCTTCAGTGACATGCTCGAGTGCAGCACATCTACAGGAAGATGCCTGTTGAGCACCTGTGCCAGTGGATGTACATGGGCCTTTGAAAGACGATGTTGAGGCAGCAGTATGTTGTGTGACAGGCTAGTCCACGGGTGCCGATCTGGAAGTGTTGACAGCATGGAGCTTGCGTGCGTGGAGTATAAGACGTCAAGATGGATAGCCGCCGTAGAAGCTGAAAGGCTCCTGCTGTCCAATGCGTGGAGGCTGGCTGAGAGGATTGAGTTGGAGGAGAGATAGTCGTCGGTTGCGTGATGGAGTCTGTTTTGAGTCCCGACGCTGGCCTCTGTCGTTGTGTGACGGTGTTGCCGGAGCCTGTGAGCAAACAGGTAGCTTTTCGGACGAGCGAAAGGTGAGGGCCTTTGTGGTGAGGAGGAAGACACAAGGGCTGTGGTTCATAGCTTTGCCAATGGAGGAAGATGGAGGGTTGCCGACGGTCGGGAGTACTGAGCTTGTGGATGCCGGGACGACACGGGATTCCTCGTGGGCTGGCTAGTCTGGAGCGACTGAGTGTCGGTTGGACCCTGGACGCATGGATGACGTTGACATGGGATTGGTGGCCAATACGGACGAAAGGTTGGTGGACGGTGAGGATGACGGCTGCTTATGCCCTGACTGAGGGCTGAGGATGCTTCCGGCAGCGATCGCAGGATTGGTTTCGTAGTGGAGGTGCTTCGTTGGACAGTGTCGGAGTTCTGTGGTTGGAGCATGGTTGGGACGATGGACGGGATGATCTATAGACGCTGGCGAGCGGAGGAGTGCCGTGAGTGGTTATGCCCGATTCAATGTGGTTGACAGCATGACGATGGCGCCGAGCATGGAGCACTGAGGCGTGATGTTTACGCTGCTAACATCCTGTGACGGTGTTTGCGTCGAGAGGACGGCGCCTTTCTACCCCTGCTATGACATCTGCCGTTGAGGATGCTCATCGGCGTTGACTGATTTGAGAGAGCAGGTTTCTGGTCGGGACGATGGAGCCGCTGAGTGGCGGGAGTACAAGTTGACAGGTACGTGACGCGCTGAGTGGGACGCCAGTTGGTGGATGCCACAAGAAGAGGTGGGATGCTTGGAGGATGCCGCTGCTTACTTTGGTGGGTGTCAGAGGATGTTGGTTGGGAGGCTGTGGCTATGCCGTGACGAGAGCAGGCTTTCAAGGATGATCCTGAGCGTTGTGGAGTGGTTCATGCTTTGCCAGATGAGGGCGTGAGGTTGCTGATGCTTTCAGCGAGAAGGGTGGAGTGGGCGTCTGAAAGTTGAGGCTTTGAGACCTTTCACGCTTACAGCGTGGGTCTGTTTTTATGAGGTTATGTCGGACGGGTTGAGCACGCAGGAGAGCGGGTTGGCGGTCAATGGATGAGCGGAGGCCGGCATCGTGTGAGCGGTGGACGTAAGAGTTGGTGCGTCAGAGGAGTGGGAGCGATCCCTGAGCACGTCGTCTGCTATGAGCTGCAGACGGAGGAGGTCGCTGGAGGTAGGAGTCTTCATATGCGCGGACGCATGGTGGATTTTCTAGACCTGGCTTGGCTGCGGCGTTGTGTCCGAGCGTTAGTGGTGCGAAACTCACGTACGCGGAGGCCGGTGCCGGTGACGGTATCTAGTCTGACCTGTCGGAGAAGGGAGCTGTTTCTGGATGCTGCTGATGGTTTTGTGCTGGAGTGAGTGGCTTTTTGAGAGGACGAGGGTGTCGGCTGGCTGCTGTAGTGGGACATGAGAGCAGCGTGCTTATGGAGAGGATAGTGGGAGCATGATTTTGGGCAGTGAGTGGGAGCGATCGAGTTGGTGGCGGACGGTCGGTGAGGTCGTTGACTGGACGGATGCTTTGACCCGTTGACGCCGAGAGGCTTTCACGGTGGCAT"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''3 2\nAAA\nAAA\nAAA\nSample Output 2:\n2\n0 1\n0 2\n0 3\n''') == '2'\nassert solution('''2 2\nAT\nTT\nSample Output 2:\n2\n0 1\n''') == '2'\nassert solution('''4 1\nA\nA\nG\nT\nSample Output 2:\n2\n0 1\n''') == '2'\nassert solution('''4 2\nA\nAA\nAT\nTT\nSample Output 2:\n2\n0 1\n0 2\n0 3\n''') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''5 2\nA\nA\nG\nT\nC''') == '2'\nassert solution('''6 1\nA\nA\nG\nT\nC\nT''') == '0 1'\nassert solution('''7 1\nA\nA\nG\nT\nC\nT\nG''') == '0 1'\nassert solution('''8 1\nA\nA\nG\nT\nC\nT\nG\nA''') == '0 1 2 3 4'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('stdin') == '2\\n0 1'\nassert solution('stdin') == '0\\n1 2\\n0 1'\nassert solution('stdin') == '0\\n0 2\\n0 3'\nassert solution('stdin') == '3'\nassert solution('stdin') == '2\\n0 1\\n1 2\\n0 1'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\nassert solution('abcd') == 'ab'\nassert solution('abc') == 'ab'\nassert solution('bac') == 'ab'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\nassert solution('aaaaa') == 'a'\nassert solution('bbbbb') == 'b'\nassert solution('abba') == 'b'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aab') == 'a'\nassert solution('bbab') == 'b'\nassert solution('baa') == 'b'\nassert solution('bbaa') == 'b'\nassert solution('bbbab') == 'a'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\nassert solution('abc') == '-1'\nassert solution('abcdefg') == '-1'\nassert solution('bbbabab') == 'bba'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\nassert solution('abc') == 'a'\nassert solution('baa') == 'a'\nassert solution('baaa') == 'a'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ab\") == \"-1\"\nassert solution(\"aaaa\") == \"a\"\nassert solution(\"bbbb\") == \"b\"\nassert solution(\"bac\") == \"b\"\nassert solution(\"abc\") == \"a\"\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('abc') == 'a'\nassert solution('aab') == 'a'\nassert solution('abcdef') == 'a'\nassert solution('abcdea') == 'a'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\nassert solution('aab') == 'a'\nassert solution('abaa') == 'a'\nassert solution('abbb') == 'b'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\nassert solution('bba') == 'a'\nassert solution('bbab') == 'bba'\nassert solution('abb') == 'b'\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 100''') == '''Dr. Chaz will have 80 pieces of chicken left over!'''\nassert solution('''2 3''') == '''Dr. Chaz will have 1 piece of chicken left over!'''\nassert solution('''20 100''') == '''Dr. Chaz will have 80 pieces of chicken left over!'''\nassert solution('''2 3''') == '''Dr. Chaz will have 1 piece of chicken left over!'''\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''20 100''') == '''Dr. Chaz will have 80 pieces of chicken left over!'''\nassert solution('''2 3''') == '''Dr. Chaz will have 1 piece of chicken left over!'''\nassert solution('''22 100''') == '''Dr. Chaz will have 22 pieces of chicken left over!'''\nassert solution('''10 3''') == '''Dr. Chaz needs 3 more piece[s] of chicken!'''\nassert solution('''1 1''') == '''Dr. Chaz needs 1 more piece of chicken!'''\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20 100\\n') == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution('2 3\\n') == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution('2 1\\n') == \"Dr. Chaz needs 1 more piece of chicken!\"\nassert solution('2 2\\n') == \"Dr. Chaz needs 2 more pieces of chicken!\"\nassert solution('1 1\\n') == \"Dr. Chaz needs 1 more piece of chicken!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('15 24') == 'Dr. Chaz will need 15 more piece[s] of chicken!'\nassert solution('10 15') == 'Dr. Chaz will need 10 more piece[s] of chicken!'\nprint(solution('10 100'))\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz needs 1 more piece of chicken!'\nassert solution('2 3') == 'Dr. Chaz needs 1 more piece of chicken!'\nassert solution('2 3') == 'Dr. Chaz needs 2 more pieces of chicken!'\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 100''') == '''Dr. Chaz will have 80 pieces of chicken left over!'''\nassert solution('''2 3''') == '''Dr. Chaz will have 1 piece of chicken left over!'''\nassert solution('''20 100''') == '''Dr. Chaz will have 80 pieces of chicken left over!'''\nassert solution('''2 3''') == '''Dr. Chaz will have 1 piece of chicken left over!'''\n'''\n    Input:\n        N M\n    Output:\n        P Q\n    Constraints:\n        0 <= N <= 1000\n        0 <= M <= 1000\n        N!= M\n    Explanation:\n        There are N people at the restaurant, and M is the number of pieces of chicken that each person is providing. Therefore, if there are N people at the restaurant, the number of pieces of chicken that Dr. Chaz will have is divisible by N, and the number of leftover pieces of chicken that will result from the party is the remainder of the division of M by N.\n        The rest of the division is the number of people who will not be given a piece of chicken, and the number of people who will receive a piece of chicken is the number of people divisible by N.\n        In other words, Dr. Chaz will have P pieces of chicken left over.\n        Note that the output will not be a float.\n'''\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n\nTest:\nn = int(stdin.readline().strip())\np = int(stdin.readline().strip())\nq = int(stdin.readline().strip())"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1''') == '-2'\nassert solution('''3 30\n1 1 1\n5 2 3\n5 2 1''') == '0'\nassert solution('''3 30\n1 1 1\n1 1 1\n1 1 1''') == '0'\nassert solution('''10 2\n2 2 2\n5 2 1\n8 2 3\n6 2 1\n1 2 1\n3 2 1\n4 2 1\n1 2 1\n2 2 1\n3 2 1\n1 2 1\n2 2 1''') == '7'\nassert solution('''1 2\n3 2 1\n4 2 1\n1 2 1\n2 2 1''') == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1''') == '-2'\nassert solution('''3 30\n1 1 1\n5 2 3\n5 2 1''') == '0'\n\nprint('Successfully finished top #941')\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '0'\nassert solution('''3 30\n1 1 1\n5 2 3\n5 2 1\n''') == '-2'\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # -2\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # -2\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # -2\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n''')) # 0\nprint(solution('''6 300\n1 1 1"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''3 10\n1 1 2\n2 2 2\n3 2 1'''\n) == '0'\n\nassert solution(\n'''4 100\n1 1 1 1\n4 2 2 2\n4 2 2 2\n4 2 2 2'''\n) == '4'\n\nassert solution(\n'''5 17\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1'''\n) == '0'\n\nassert solution(\n'''4 100\n1 1 1 1\n1 1 1 1\n4 2 2 2\n4 2 2 2'''\n) == '-2'\n\nassert solution(\n'''3 30\n1 1 1\n5 2 3\n5 2 1'''\n) == '0'"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(solution.readstdin()) == '0'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\nassert solution('4 5\\nluk#\\nkul#\\nkula#\\ni#a#') == 'kala'\nassert solution('4 5\\nluk#\\nkul#\\ni#a#') == 'kala'\nassert solution('4 5\\nluk#\\ni#a#\\nkula#\\n') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'as'\nassert solution('3 3\\n#a#\\na#\\nb#') == 'ab'\nassert solution('3 3\\n#a#\\na#\\nb#') == 'b'\nassert solution('6 6\\n#a#a#a#a#a#\\na#a#a#a#a#a#\\na#a#a#a#a#a#a#\\na#a#a#a#a#a#a#\\na#a#a#a#a#a#a#') == 'aacab'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == kala\nassert solution(sample_input_2) == as\nassert solution(sample_input_3) == ar\nassert solution(sample_input_4) == iz\nassert solution(sample_input_5) == pam\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''4 4\nl#ka\no#a#\nk#la\ni#a#''') == 'kala'\nassert solution('''4 4\nl#k#a\no#a#\nk#la\ni#a#''') == 'kala'\nassert solution('''4 4\nl#k#a\no#a#\nk#la\ni#a#''') == 'kala'\nassert solution('''4 4\nl#k#a\no#a#\nk#la\ni#a#''') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluk#a#\\no#a#\\nkula#a#\\ni#a#') == 'kala'\nassert solution('4 4\\nluk#a#\\no#a#\\nkula#a#\\ni#a#') == 'kala'\nassert solution('4 4\\nluk#a#\\no#a#\\nkula#a#\\ni#a#') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\n\nassert solution('''4 4\nluka\no#a#\nkula\ni#as''') == 'as'\n\nassert solution('''4 4\nluka\no#a#\nkula\ni#as''') == 'as'\n\nassert solution('''4 4\nluk#a#\no#a#\nkula\ni#as''') == 'as'\n'''\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 5\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('5 5\\nluka\\no#a#\\nkula\\ni#a#\\nziba\\nziba') == 'ziba'\nassert solution('5 5\\nluka\\no#a#\\nkula\\ni#a#\\ngama\\ngama') == 'gama'\nassert solution('5 5\\nluka\\no#a#\\nkula\\ni#a#\\nzaibababa\\nzaba') == 'zaba'\nassert solution('5 5\\nluka\\no#a#\\nkula\\ni#a#\\nbaibaba\\nbaba') == 'baba'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''3 3\nab\nab\nab\n''') == 'ab'\nassert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''3 3\nab\na#b\nab\n''') == 'a#b'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('WNEENWEENE') == '10'\nassert solution('NSEW') == '4'\nassert solution('ENWWW') == '14'\nassert solution('NNNN') == '4'\nassert solution('WWW') == '1'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('WNEEENWNN') == '10'\nassert solution('ENNWNWSW') == '6'\nassert solution('NSWWESEW') == '6'\nassert solution('NEENWWSW') == '8'\nassert solution('NNWNEESW') == '12'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('WNEENWEENEEN') == 'EEN'\nassert solution('NSEW') == '4'\nassert solution('SSEEEENWWWWWNNNEEENNENWSE') == 'EENNNENW'\nassert solution('NENWNWSWSWENNWSEWSEENWWSWNNNEEENNESENWSE') == 'ENWSENNWE'\nassert solution('WNWWEENEWSENWSEWNWSENENENWSEWNWSEWSE') == 'ENWWEEN'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('N') == 1\nassert solution('NESW') == 3\nassert solution('NNEENWEENEWSWEWN') == 19\nassert solution('ENNWNEENEWSWEWN') == 17\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('WNESE') == 'WN'\nassert solution('NWEENWEENEEEN') == 'NWE'\nassert solution('N') == 'N'\nassert solution('WE') == 'WE'\nassert solution('EEEN') == 'EE'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"WNSEENWEESE\") == 10\nassert solution(\"NESNEEESSWNSEESEEESEEEWWSSSEEENESE\") == 11\nassert solution(\"NWWWWWWWNW\") == 12\nassert solution(\"NSNN\") == 3\nassert solution(\"NWWNWWNNNEEEEEENENENENNN\") == 11\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('WNENENENENEN') == 8\nassert solution('NSWSW') == 4\nassert solution('WE') == 3\nassert solution('NNWNNNW') == 6\nassert solution('NNNWE') == 3\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"WNEENWEENEENEEENWE\"\n) == 10, \"Test 1 Failed\"\nassert solution(\n    \"NSEW\"\n) == 4, \"Test 2 Failed\"\nassert solution(\n    \"WE\"\n) == 0, \"Test 3 Failed\"\nassert solution(\n    \"NE\"\n) == 2, \"Test 4 Failed\"\nassert solution(\n    \"N\"\n) == 1, \"Test 5 Failed\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('NSEW') == 4\nassert solution('WNEEEWNN') == 10\nassert solution('SSEEEEWN') == 9\nassert solution('WNWNNSWEEEWN') == 8\nassert solution('WNEENWEENEEN') == 11\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('WNEENWEENEEN') == \"10\"\nassert solution('SSEENEEESSSESEESSSSSEEEESSSSEEEEEEESSSSSEEESSESSSSEESSSSSSEE') == \"25\"\nassert solution('NNNNNSSSSSSEE') == \"16\"\nassert solution('S') == \"1\"\nassert solution('N') == \"0\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input().split()) == solution(input().split())\n\"\"\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '1 2 3 4'\n) == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\nassert solution(\n    '0 4 2 2'\n) == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\nassert solution(\n    '5 3 1 2'\n) == 'problems ahead'\nassert solution(\n    '0 0 1 1'\n) == '0 * 0 = 0 - 0\\n0 + 1 = 0 + 1\\n0 + 1 = 0 + 1\\n0 / 1 = 0 - 0'\nassert solution(\n    '7 5 4 3'\n) == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n7 - 5 = 4 - 3'\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3 4''') == '''1 - 2 = 3 - 4\n1 / 2 = 3 / 4'''\nassert solution('''0 4 2 2''') == '''0 * 4 = 2 - 2\n0 + 4 = 2 * 2\n0 + 4 = 2 + 2\n0 / 4 = 2 - 2'''\nassert solution('''1 3 4 4''') == '''1 - 3 = 4 - 4\n1 / 3 = 4 / 4'''\nassert solution('''1 4 2 2''') == '''1 * 4 = 2 - 2\n1 / 4 = 4 / 2\n0 + 4 = 2 * 2\n0 / 4 = 2 - 2'''\nassert solution('''1 6 2 1''') == '''1 - 6 = 5 - 1\n1 / 6 = 5 / 1\n0 + 6 = 2 * 1\n0 / 6 = 2 - 1'''\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\n\nassert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\nassert solution('3 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\nassert solution('3 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '1 2 3 4'\n) == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\nassert solution(\n    '0 4 2 2'\n) == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\nassert solution(\n    '1 1 1 1'\n) == 'problems ahead'\nassert solution(\n    '5 4 1 5'\n) == '1 - 1 = 4 - 5\\n1 / 1 = 4 / 5'\nassert solution(\n    '1 1 1 1'\n) == 'problems ahead'\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n-----Solution Details-----\nThe solution is based on the idea that any operator can be replaced with a new operator of the same sign, and any operator can be replaced with a new operator of the same sign, or a new operator of different sign. Thus we have 4 unknown operators, $a$, $b$, $c$ and $d$. We need to narrow the possibilities for the operator of different sign to be able to match the operator of the same sign with the same value. To do that, we make use of the theory of permutations. For the given expression, any permutation of the four operators can be generated by making use of the operators in the correct order.\n\nLet $P(n)$ be the permutation of the unknown operators, where n is the number of unknown operators. For example, P(1) = (1) and P(2) = (1, 2).\n\nThe permutation is determined by the sum of all the operators in the expression. For example, P(1) = (1), P(2) = (1, 2) and P(3) = (1, 2, 3).\n\nFor each permutation, the sum of the operators is calculated, where any operator in the expression with an index less than or equal to the sum of the operators is removed and the new operator is added to the end.\n\nFor example, for the expression $\\[a~?~ b~ =~ c~?~ d \\]$, the permutations are:\n\nP(1) = (1)\nP(2) = (1, 2)\nP(3) = (1, 2, 3)\nP(4) = (1, 2, 3, 4)\nP(5) = (1, 2, 3, 4, 5)\nFor each permutation, the sum of operators is calculated and the original expression is compared with the permutations. If the expression matches any of the permutations, print the permutation. The permutations are printed out in a lexicographic order, where the permutations are given by the values of the operators in the order in which they appear in the original expression.\n\n-----Time Complexity-----\n$O(4 \\cdot \\log_{10} 10)$\n\n-----Space Complexity-----\n$O(4 \\cdot \\log_{10} 10)$\n\n-----Answer Submissions-----\n**1184**/**1043**\n\n\"\"\"\n\nimport functools, itertools"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"1 2 3 4\n\"\"\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\n\nassert solution(\n\"\"\"0 4 2 2\n\"\"\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\n\nassert solution(\n\"\"\"1 1 2 3\n\"\"\") == \"1 - 1 = 2 - 3\\n1 / 1 = 2 / 3\"\n\nassert solution(\n\"\"\"2 2 4 3\n\"\"\") == \"2 * 2 = 4 - 3\\n2 + 4 = 2 * 2\\n2 + 4 = 2 + 2\\n2 / 4 = 2 - 3\"\n\nassert solution(\n\"\"\"2 2 2 2\n\"\"\") == \"2 * 2 = 2 - 2\\n2 + 2 = 2 * 2\\n2 + 2 = 2 + 2\\n2 / 2 = 2 - 2\""
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\nassert solution('MAZZY CORE') == '.M....\\n.A....'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('BAZAAABAZZZ') == '.P....\\n.I....\\n.D....\\n.Z....\\nBAZAAA\\n.M....\\n.A....'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\nassert solution('ABBA') == ''\nassert solution('CCBB') == '.B..'\nassert solution('BABABA') == 'BABABA'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"\"\n\"\"\""
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    'BANANA PIDZAMA'\n) == '''\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n'''\n\nassert solution(\n    'MAMA TATA'\n) == '''\n.T..\nMAMA\n.T..\n.A..\n'''\nassert solution(\n    'LION'\n) == '''\n.L.\n.L.\nL.O.\nL.O.\n'''\nassert solution(\n    'BANANA'\n) == '''\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n'''\nassert solution(\n    'KOTAK'\n) == '''\n.K.\nK.O.\nK.O.\nK.O.\n'''\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''BANANA PIDZAMA''') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('''MAMA TATA''') == '.T..\\nMAMA\\n.T..\\n.A..'\nassert solution('''BANANA PIZZA''') == 'BANANA'\nassert solution('''BANANA MIZU''') == 'BANANA'\nassert solution('''ABBA CCBB''') == '4'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n\"\"\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\nassert solution('HORSE') == '.H...\\n.H...\\n...H'\nassert solution('HORSE') == '.H...\\n.H...\\n...H'\nassert solution('BANANA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('BANANA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\nassert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('PIDZAMA BANANA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''BANANA PIDZAMA''') == '''.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....'''\nassert solution('''MAMA TATA''') == '''.T..\nMAMA\n.T..\n.A..\n'''\nassert solution('''TALLIOT''') == '''.T..\nT..\n.A..\n.L..\n.O..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L..\n.O..\n.L.."
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\nassert solution('JACQUETTA') == 'JACQUETTA'\nassert solution('JACQUETTA') == 'JACQUETTA'\nassert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('2\\n365\\n28') == '365'\nassert solution('2\\n10\\n20') == '20'\nassert solution('1\\n365\\n20') == '20'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"365\"\n\"\"\"\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 14\\n13 17\\n25 26') == '10'\nassert solution('2 365\\n20 28') == '365'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n365') == '365'\nassert solution('2\\n1 365') == '365'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n2 2') == '1'\nassert solution('1\\n365') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''2\n1 365\n20 28\n''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\nassert solution('''3\n1 2\n2 2\n3 3''') == '6'\nassert solution('''1\n1 1''') == '1'\nassert solution('''1\n1 2''') == '2'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 365\") == \"365\"\nassert solution(\"2\\n1 365\\n2 100\") == \"365\"\nassert solution(\"2\\n1 365\\n2 1000\") == \"1000\"\nassert solution(\"3\\n1 365\\n2 100\\n3 1000\") == \"1000\"\nassert solution(\"3\\n1 365\\n2 1000\\n3 100\") == \"365\"\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\nassert solution('''4\n1 365\n20 28\n33 35\n36 42''') == '366'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\nassert solution('''2\n1 365\n1 366''') == '365'\nassert solution('''3\n1 365\n1 366\n1 367''') == '365'\nassert solution('''3\n1 365\n1 366\n1 367''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"10\"\nassert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\"\nassert solution(\"1\\n365\\n20 28\") == \"365\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0 1'\nassert solution('1') == '0 1'\nassert solution('3') == '2 3'\nassert solution('4') == '2 3'\nassert solution('5') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == '0 1'\nassert solution(\"4\") == '2 3'\nassert solution(\"5\") == '2 3'\nassert solution(\"12\") == '2 3'\nassert solution(\"45\") == '22 22'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\nassert solution(\"14\") == \"0 1\"\nassert solution(\"22\") == \"2 3\"\nassert solution(\"22\") == \"2 3\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1') == '0 1'\nassert solution('4') == '2 3'\nassert solution('1') == '0 1'\nassert solution('2') == '2 3'\nassert solution('3') == '3 4'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '0 1'\nassert solution('0') == '0 1'\nassert solution('1') == '0 1'\nassert solution('2') == '0 1'\nassert solution('3') == '0 1'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\nprint(\"All set?\")\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\nassert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == '0 1'\nassert solution('''4''') == '2 3'\nassert solution('''24''') == '19 22'\n'''\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('A') == '0'\nassert solution('AA') == '0 1'\nassert solution('AAAA') == '0 1'\nassert solution('AB') == '0 1'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\nassert solution('5') == '4 0'\nassert solution('5 4') == '4 0'\nassert solution('5 5') == '8 3'\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\"\"\"\n) == \"\"\"B 100 49\nA 1 197\nA 49 100\n0.1965897693\n\"\"\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str\n\"\"\"\n\ninput_str = \"\"\"5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n\"\"\"\n\noutput_str = \"\"\"B 100 49\nA 1 197\nA 49 100\n0.1965897693\n\"\"\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"A 0 1\"\nassert solution(\"2 1\") == \"A 0 1\"\nassert solution(\"3 1\") == \"A 0 1\"\nassert solution(\"1 2\") == \"A 0 1\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1 2\\n3 4') == 'B 0 99\\n'\nassert solution('3 2\\n1 100 100\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'A 0 99\\n'\nassert solution('5 4\\n1 100 100\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'A 0 99\\n'\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'A 1 1'\nassert solution('2 1') == 'B 1 1'\nassert solution('3 2') == 'A 1 1'\nassert solution('1 1') == 'A 1 1'\nassert solution('4 3') == 'A 1 1'\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution('2 2\\n1 100 99\\n2 100 99') == 'A 0 99\\nA 0 99'\nassert solution('3 3\\n3 100 99\\n2 100 99\\n1 100 99') == 'B 0 99\\nA 0 99\\nA 0 99'\nassert solution('2 2\\n1 100 99\\n2 100 99') == 'B 0 99\\nA 0 99'\nassert solution('2 2\\n1 100 99\\n2 100 99') == 'B 0 99\\nA 0 99'\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == '''B 100 49\nA 1 197\nA 49 100\n0.1965897693'''\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\nSample Output 2:\nA 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372''') == '''A 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372'''\nassert solution('''1 2\n7 10 22\n3 8 8''') == '''B 0 1'''\nassert solution('''1 2\n7 10 22\n3 8 8''') == '''A 0 1'''\nassert solution('''1 2\n7 10 22\n3 8 8''') == '''B 0 1'''\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3\\n2 100 200\\n3 100 50\\n3 100 50\\n2 100 98') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution('1 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution('1 5\\n4 100 99\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution('1 6\\n5 100 99\\n4 100 99\\n3 100 99\\n2 100 99\\n1 100 99') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution('1 7\\n6 100 99\\n5 100 99\\n4 100 99\\n3 100 99\\n2 100 99\\n1 100 99') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\"\"\") == \"168\"\nassert solution(\"\"\"2\"\"\") == \"1\"\nassert solution(\"\"\"1\"\"\") == \"1\"\nassert solution(\"\"\"4\"\"\") == \"36\"\nassert solution(\"\"\"3\"\"\") == \"27\"\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '168'\nassert solution('''2''') == '1'\nassert solution('''1''') == '1'\nassert solution('''4''') == '13'\nassert solution('''3''') == '27'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''1\n1\n1\n1\n1'''\n) == '1'\nassert solution(\n'''1\n2\n2\n3\n3'''\n) == '6'\nassert solution(\n'''3\n5\n10\n10\n2\n3'''\n) == '36'\nassert solution(\n'''100\n1\n1\n1\n1\n1'''\n) == '1'\nassert solution(\n'''10\n1\n1\n1\n1\n1'''\n) == '5'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n2\\n2') == '4'\nassert solution('1\\n1\\n1\\n2\\n2') == '4'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n2') == '4'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(sample0) == sample1\n'''\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('2\\n1\\n2') == '3'\nassert solution('2\\n1\\n2\\n1') == '3'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF'\n\nprint('solution:', solution(input()))\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF'\nassert solution('3 3\\nABC\\nDEF\\n1') == 'ABCDE'\nassert solution('2 2\\nAB\\nBA') == 'AB'\nassert solution('1 1\\nAA\\nAA') == 'AA'\nassert solution('2 1\\nAB\\nBA') == 'AB'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 3\nABC\nDEF'''\n) == 'CBADEF'\n\nassert solution(\n'''3 3\nABC\nDEF'''\n) == 'CDBEAF'\n\nassert solution(\n'''3 3\nABC\nDEF'''\n) == 'ABCDEF'\n\nassert solution(\n'''3 3\nDEF\nABC'''\n) == 'ABCDEF'\n\nassert solution(\n'''3 3\nDEF\nABC'''\n) == 'ABCDEF'"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\nABC\nDEF\n0''') == 'CBADEF'\nassert solution('''3 3\nABC\nDEF\n2''') == 'CDBEAF'\nprint(solution('''10 10\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n9'''))\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABC\\nDEF\\n0') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF'\nassert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF'\nassert solution('2 3\\nABC\\nDEF\\n0') == 'ABCDEF'\nassert solution('2 3\\nABC\\nDEF\\n2') == 'ABEFD'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n0\\n') == 'CDBEAF'\nassert solution('3 3\\nABC\\nDEF\\n2\\n') == 'CDBEAF'\nassert solution('3 4\\nABaCD\\nEFGb\\n2\\n') == 'EFGAbCD'\nassert solution('3 4\\nABaCD\\nEFGb\\n2\\n2\\n') == 'EFGAbCD'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\nABC\\nDEF\\n\") == \"CBADEF\"\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\nABC\nDEF''') == 'CBADEF'\nassert solution('''3 3\nABC\nDEF''') == 'CDBEAF'\n'''"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '5'\n\nassert solution('''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\nSample Output 2:\n4\nassert solution('''3\n3\n100 T\n100 N\n100 T\n100 T\n100 N\nSample Output 2:\n3\n''') == '3'\n\nassert solution('''3\n5\n1 T\n1 T\n1 T\n1 T\n1 N\nSample Output 2:\n4\n''') == '1'\n\nassert solution('''3\n3\n1 T\n1 T\n1 T\n1 T\n1 N\nSample Output 2:\n4\n''') == '3'\n'''\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n5') == '5'\nassert solution('3\\n5') == '4'\nassert solution('3\\n5\\n50 T\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '4'\nassert solution('3\\n5\\n50 T\\n100 N\\n100 T\\n100 T\\n100 N') == '4'\nassert solution('1\\n5\\n50 T\\n100 N\\n100 T\\n100 T\\n100 N') == '5'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"3\\n3\\n3\") == \"3\"\nassert solution(\"3\\n3\\n3\\n3\") == \"3\"\nassert solution(\"3\\n3\\n3\\n3\\n3\") == \"3\"\nassert solution(\"3\\n3\\n3\\n3\\n3\") == \"3\"\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1,0') == '2'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '4'\nassert solution('''1\n5\n100 T\n100 N\n100 T\n100 T\n100 N''') == '1'\nassert solution('''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N''') == '4'\nassert solution('''8\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n50 T\n80 T\n50 T''') == '4'\nassert solution('''10\n10\n20 T\n50 T\n80 T\n50 T\n30 T\n50 T\n80 T\n50 T\n30 T''') == '4'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '5'\nassert solution(\n'''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n100 T''') == '4'\nassert solution(\n'''4\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '4'\nassert solution(\n'''5\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '1'\nassert solution(\n'''6\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n100 T''') == '6'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split(\"\\n\")[0]"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2\\n3\") == \"1\"\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '5'\nassert solution('''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N''') == '4'\nassert solution('''3\n5\n100 N\n100 N\n100 N\n100 T\n100 T\n100 T''') == '3'\nassert solution('''4\n5\n100 N\n100 N\n100 N\n100 N\n100 T\n100 T\n100 T''') == '4'\nassert solution('''5\n5\n100 T\n100 N\n100 T\n100 T\n100 N''') == '5'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '5'\nassert solution('''1\n5\n100 T\n100 N\n100 T\n100 T\n100 N''') == '4'\nassert solution('''1\n8\n1 T\n1 T\n1 T\n1 T\n1 T\n1 T\n1 T''') == '1'\nassert solution('''1\n8\n1 T\n1 T\n1 T\n1 T\n1 T\n1 T\n1 T''') == '2'\nassert solution('''1\n8\n1 N\n1 T\n1 T\n1 T\n1 T\n1 T\n1 T''') == '0'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n4 6\") == \"6\"\nassert solution(\"6 8\\n6 8\") == \"22\"\nassert solution(\"7 2\\n7 3\\n7 4\") == \"11\"\nassert solution(\"6 7\\n6 4\\n6 5\") == \"8\"\nassert solution(\"3 4\\n3 2\\n3 1\") == \"6\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3 6\n''') == '6'\nassert solution('''\n4 3\n''') == '6'\nassert solution('''\n6 9\n''') == '22'\nassert solution('''\n5 3\n''') == '5'\nassert solution('''\n5 6\n''') == '15'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"\nassert solution(\"6 6\") == \"6\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"5 7\") == \"11\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''4 3\n''') == '6'\n\nassert solution(\n    '''6 8\n''') == '22'\n\nassert solution(\n    '''10 12\n''') == '24'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"10\") == \"50\"\nassert solution(\"4\") == \"12\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1 2') == '0'\nassert solution('1 1 2 3') == '1'\nassert solution('1 1 2 3 4') == '2'\nassert solution('1 1 2 3 4 5') == '3'\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\") == \"1\"\nassert solution(\"5 5\\n2 3 4 5 6\\n7 8 9 0 1\\n2 4 3 2 1\") == \"0\"\nassert solution(\"5 5\\n1 2 3 4 5\\n6 5 4 3 2\\n7 8 9 0 1\") == \"1\"\nassert solution(\"10 10\\n5 6 7 8 9 10\\n11 12 13 14 15 16\\n17 18 19 20 21 22\\n23 24 25 26 27 28\\n29 30 31 32 33 34\") == \"1\"\nassert solution(\"10 10\\n5 6 7 8 9 10\\n11 12 13 14 15 16\\n17 18 19 20 21 22\\n23 24 25 26 27 28\\n29 30 31 32 33 34\\n35 36 37 38 39 40\") == \"0\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"1 4\") == \"0\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 3\n1 2 3\n6 5 4\n7 8 9\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n5 3\n1 2 1 4 3\n3 4 3 4 2\n4 2 3 3 2\n3 2 1 1 2\n3 1 1 1 2\n1 1 1 1 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n2 4\n1 2 3 4\n5 6 7 8\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n3 3\n1 2 3\n4 5 6\n7 8 9\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n3 1\n1 2 3\n3 4 5\n3 5 6\n3 6 7\n3 7 8\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '1'\nassert solution('''3 4\n1 2 3 4\n5 6 7 8 9\n10 11 12 13''') == '1'\nassert solution('''6 7\n1 2 3 4 5 6\n7 8 9 10 11 12\n13 14 15 16 17 18\n19 20 21 22 23 24\n25 26 27 28 29 30''') == '0'\nassert solution('''2 4\n1 2 3 4\n6 5 4''') == '1'\nassert solution('''2 4\n1 2 3 4\n6 5 4''') == '1'\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n3\n4\n6\n2''') == '28'\nassert solution('''10\n3\n10\n2\n12''') == '16'\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0\\n2\\n0\\n0\\n2\") == \"16\"\nassert solution(\"4\\n3\\n1\\n2\\n0\") == \"28\"\nassert solution(\"4\\n2\\n1\\n2\\n0\") == \"16\"\nassert solution(\"4\\n2\\n0\\n0\\n0\") == \"0\"\nassert solution(\"4\\n2\\n0\\n0\\n0\\n0\") == \"0\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"10\"\n\"3\"\n\"4\"\n\"6\"\n\"2\") == \"28\""
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"9\"\nassert solution(\"10000\") == \"9\"\nassert solution(\"1000\") == \"0\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 4\nassert solution('5') == 5\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"28\"\nassert solution(\"10\\n3\\n4\\n6\\n2\") == \"16\"\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\") == \"28\"\nassert solution(\"5\\n3\\n4\\n6\\n2\") == \"16\"\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\"\nassert solution(\"10\\n3\\n10\\n2\\n10\") == \"0\"\nassert solution(\"10\\n3\\n10\\n2\\n10\\n10\\n10\") == \"0\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '28'\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('\\n\\n') == ''\nassert solution('\\n\\n\\n') == ''\nassert solution('\\n\\n\\n\\n') == ''\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"28\"\nassert solution(\"10\\n3\\n4\\n6\\n2\") == \"16\"\nassert solution(\"1\\n3\\n10\\n2\") == \"16\"\nassert solution(\"10\\n3\\n10\\n2\") == \"16\"\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\"\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('octopus') == 'no hiss'\nassert solution('mamma') == 'no hiss'\nassert solution('mama') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('mississippi') == 'no hiss'\nassert solution('heiss') == 'no hiss'\nassert solution('hiss') == 'no hiss'\nassert solution('hisss') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopus') == 'no hiss'\nassert solution('hiss') == 'hiss'\nassert solution('a') == 'no hiss'\nassert solution('misissippi') == 'hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('amissississipusssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\n-----Output-----\nhiss\nExplanation\nhissing is a word that contains two consecutive occurrences of the letter s.\n\n-----Approach 1: Brute Force------\nThe brute force algorithm takes O(n^2) time. We can use the logic that if a word contains a consecutive occurrence of a letter s, then it must also contain a consecutive occurrence of the letter s' which is its mirrored version.\n\nConsider a word which contains a consecutive occurrence of the letter s. The mirrored version of this word is the word with the letter s' replaced by the letter s. In this way we can search for all the mirrored words and then check if the mirrored word contains a consecutive occurrence of the letter s. If it does, we have found the answer.\n\n-----Approach 2: Two Pointer-----\nThe two pointer approach uses O(n) time. The two pointer algorithm searches the word in a linear fashion using two pointers starting from the beginning and end of the word respectively. For each pair of pointers, we check if the letters at the two pointers are the same. If they are, we increment the counter by 1. If they are not, we decrease the counter by 1. If the counter is 0 at the end of the iteration, we have found the answer.\n\n\n------Complexity Analysis------\n\nTime: O(n)O(n) where n is the number of characters in the word. We iterate over each character in the word and for each iteration we check if the two pointers are the same letter.\n\nSpace: O(1)O(1)\n\n\"\"\""
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopus\") == \"no hiss\"\nassert solution(\"kiss\") == \"no hiss\"\nassert solution(\"mississippi\") == \"hiss\"\nassert solution(\"amississippi\") == \"hiss\"\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('xooooo') == 'no hiss'\nassert solution('xooooo') == 'no hiss'\nassert solution('xooooo') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('hissing') == 'hiss'\nassert solution('hissing') == 'hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('octopuses') == 'no hiss'\nassert solution('amiss') == 'hiss'\nassert solution('kiss') == 'no hiss'\nassert solution('mississippi') == 'hiss'\nassert solution('amississippi') == 'hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('mississippi') == 'no hiss'\nassert solution('ssissss') == 'hiss'\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\nc++\\nC++\\nc\\nc#\\n') == '3'\nassert solution('5\\ncryptography\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux\\n') == '5'\nprint(\"Successfully passed 3 test cases. 100 points\")\n\n'''"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(len(stdin.split('\\n')[0].split(' ')))\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n\") == \"3\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"5\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux\\n\") == \"5\"\nassert solution(\"6\\ncryptography\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux\\n\") == \"5\"\nassert solution(\"3\\nc++\\nc++\\nc\\n\") == \"3\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('this is a test') == '3'\nassert solution('this is a test this is a test') == '2'\nassert solution('is is a test this is a test') == '2'\nassert solution('this is a test this is a test') == '1'\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(io.StringIO(\n    '4\\n'\n    'blockchain\\n'\n    'Artificial intelligence\\n'\n    'Machine-learning\\n'\n    'C++\\n'\n)) == '5'\nassert solution(io.StringIO(\n    '5\\n'\n    'blockchain\\n'\n    'Artificial intelligence\\n'\n    'Machine-learning\\n'\n    'C++\\n'\n    'Linux\\n'\n)) == '5'\nassert solution(io.StringIO(\n    '4\\n'\n    'c++\\n'\n    'C++\\n'\n    'c\\n'\n    'c#\\n'\n)) == '3'\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\nc++\nC++\nc\nc#\n''') == '3'\nassert solution('''5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\nassert solution('''3\nmachine learning\nBig data\nNeural-network\n''') == '3'\n'''\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\nassert solution('GTTCGCC') == 55\nassert solution('GTCGTTC') == 29\nassert solution('CGCGTTC') == 17\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\nassert solution('CCGTTC') == 54\nassert solution('TGTCGTCGTTC') == 2659\nassert solution('GTCGTCGTTC') == 1466\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"TCTGTCG\") == 21\nassert solution(\"CCCG\") == 9\nassert solution(\"TCGGCT\") == 21\nassert solution(\"CGGTCGT\") == 9\nassert solution(\"TCGGCTC\") == 22\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9\nassert solution(\"TCCGTG\") == 16\nassert solution(\"GTCGTC\") == 32\nassert solution(\"GTCGCT\") == 48\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    'TCGTTC'\n) == 21\nassert solution(\n    'C'\n) == 9\nassert solution(\n    'GCCGCCG'\n) == 42\nassert solution(\n    'CGGC'\n) == 6\nassert solution(\n    'GTTCG'\n) == 21\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCCC\") == 9\nassert solution(\"TTGTTC\") == 81\nassert solution(\"CCGCCG\") == 9\nassert solution(\"TTTTTT\") == 1\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('CCCGTTCCGCCTGTGT') == 21\nassert solution('CTCCGTTCCGCCTGTGT') == 25\nassert solution('TTCCGTTCCGCCTGTGT') == 17\nassert solution('TTCCGTTCCGCCTGTG') == 22\nassert solution('TCCGTTCCGCCTGTG') == 22\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\nassert solution('TTGCGCCG') == 9\nassert solution('TCGTTCCGGCT') == 99\nassert solution('GGCTGCCTGTCG') == 46\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CC\") == 9\nassert solution(\"GGGTG\") == 64\nassert solution(\"TTCCGG\") == 12\nassert solution(\"GGCG\") == 21\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"TCGTCG\") == 27\nassert solution(\"TCCCG\") == 19\nassert solution(\"TCCG\") == 17\nassert solution(\"CCCG\") == 11\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"315\", \"45\") == \"90\"\nassert solution(\"180\", \"270\") == \"-90\"\nassert solution(\"315\", \"45\") == \"90\"\nassert solution(\"90\", \"315\") == \"-90\"\nassert solution(\"180\", \"270\") == \"-90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('45\\n315') == '-90'\nassert solution('270\\n90') == '-90'\nassert solution('45\\n90') == '90'\nassert solution('315\\n45') == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('180') == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\"\nassert solution(\"315\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"-90\"\nassert solution(\"150\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == result, \"sample failed\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('315', '45') == '90'\nassert solution('180', '270') == '90'\nassert solution('180', '180') == '0'\nassert solution('315', '45') == '90'\nassert solution('315', '270') == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\"\nassert solution(\"315\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''315''') == '90'\nassert solution('''90''') == '90'\nassert solution('''45''') == '-90'\nassert solution('''135''') == '-90'\nassert solution('''0''') == '90'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\nassert solution('2\\n1\\n2\\n3\\n4\\n5') == '0'\nassert solution('3\\n1\\n2\\n3\\n4\\n5') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5\n1\n23\n18\n13\n99\"\"\") == \"3\"\n\nassert solution(\n\"\"\"5\n11\n20\n33\n40\n55\"\"\") == \"1\"\n\nassert solution(\n\"\"\"2\n1\n2\"\"\") == \"1\"\n\nassert solution(\n\"\"\"2\n1\"\"\") == \"1\"\n\nassert solution(\n\"\"\"3\n1\n2\n3\"\"\") == \"2\"\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == \"1\"\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55\n''') == '1'\nassert solution('''5\n11\n20\n33\n40\n55\n''') == '1'\nassert solution('''5\n11\n20\n33\n40\n55\n''') == '1'\nassert solution('''5\n11\n20\n33\n40\n55\n''') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\\n\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\\n\") == \"1\"\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\nassert solution('''2\n1\n2\n3''') == '1'\nassert solution('''3\n1\n2\n3''') == '1'\nassert solution('''6\n1\n2\n3\n4\n5\n6''') == '2'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n1\n23\n18\n13\n99'''\n    ) == '3'\n\nassert solution(\n'''5\n11\n20\n33\n40\n55'''\n    ) == '1'\n\nassert solution(\n'''5\n1\n23\n18\n13\n99'''\n    ) == '3'\n\nassert solution(\n'''5\n1\n2\n3\n4\n5'''\n    ) == '4'\n\nassert solution(\n'''5\n1\n2\n3\n4\n5'''\n    ) == '4'"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\nassert solution('5\\n1\\n23\\n18\\n13\\n99\\n10') == '0'\nassert solution('5\\n1\\n23\\n18\\n13\\n99\\n3') == '5'\nassert solution('5\\n1\\n23\\n18\\n13\\n99\\n11') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('WWWWBBW') == '1'\nassert solution('WWWWBBWB') == '0'\nassert solution('WWWWBBWBWW') == '1'\nassert solution('WWWWBBWBWWWWWBBW') == '1'\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"WWWWBBW\") == 0\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer(stdin)\n\"\"\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBWW\") == \"0\"\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('WWWBBWW') == '1'\nassert solution('WWWBWWWW') == '0'\nassert solution('WWWBWBWW') == '0'\nassert solution('WWWBWBWWWBWBWWW') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('WWBWBB') == 1\nassert solution('WWWWBBW') == 0\nassert solution('WWBWBBW') == 0\nassert solution('WWWWBBBB') == 1\nassert solution('WWWWBBBWB') == 1\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWBBWWWW\") == \"0\"\nassert solution(\"WWWWBBB\") == \"1\"\nassert solution(\"WWWBBWWW\") == \"0\"\nassert solution(\"WWWWWBBW\") == \"1\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('WWWWBBW') == 0\nassert solution('WWWWBBW') == 0\nassert solution('WWWWBBBBWWW') == 1\nassert solution('WWBBWWWWWWWWW') == 1\nassert solution('WWWWWWWWWWWWW') == 1\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\nassert solution(\"1 1 1 1\") == \"1.0\"\nassert solution(\"1 1 1 1\") == \"1.0\"\nassert solution(\"1 1 1 1\") == \"1.0\"\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:16]\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '9'\nassert solution('3 3 3 3') == '9'\nassert solution('1 1 1 1') == '1.0'\nassert solution('1 1 1 1 1') == '1.0'\nassert solution('1 1 1 1 1 1') == '1.0'\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3 3 3''') == '9'\nassert solution('''1 2 1 1''') == '1.299038105676658'\nassert solution('''1 1 1 1''') == '1.0'\nassert solution('''2 2 2 2''') == '2.449489742783178'\nassert solution('''3 3 3 3''') == '9'\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n'''\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n'''\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3') == 9\nassert solution('1 2 1 1') == 1.299038105676658\nassert solution('1 2 1 2') == 1.299038105676658\nassert solution('1 1 1 1') == 1.299038105676658\nassert solution('1 2 1 1') == 1.299038105676658\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.299038105676658\""
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 3 3''') == '9'\nassert solution('''1 2 1 1''') == '1.299038105676658'\n\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"roberta\") == \"robert\"\nassert solution(\"roberta\") == \"robert\"\nassert solution(\"robertapalaxiamethosteness\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"rroobert\") == \"robert\"\nassert solution(\"rrroobert\") == \"robert\"\nassert solution(\"rrroobberto\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('rrroobert') == 'robert'\nassert solution('rroobert') == 'robert'\nassert solution('rroobert') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"roooooooooooooooooobert\") == \"robert\"\nassert solution(\"rrroobbert\") == \"robert\"\nassert solution(\"rrroobert\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rrrooobbbert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('rrroooooobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"robert\"\n) == \"robert\"\nassert solution(\n    \"rrrooobbbert\"\n) == \"robert\"\nassert solution(\n    \"robertapalaxiamethostenes\"\n) == \"robertapalaxiamethosten\"\nassert solution(\n    \"robertapalaxiaethostenes\"\n) == \"robertapalaxiaethosten\"\nassert solution(\n    \"robertapalaxiamethostene\"\n) == \"robertapalaxiamethosten\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"robertapalaxi\") == \"robert\"\nassert solution(\"robertapalaxiamethoste\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('rrroobbbert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('robertapaxiamethostenes') == 'robertapaxiamethostenes'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"robertapaxiamethostenes\") == \"robertapaxiamethosten\"\nassert solution(\"robertapaxiamethostenes\") == \"robertapaxiamethosten\"\nassert solution(\"robertapaxiamethosten\") == \"robertapaxiamethosten\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('rroobert') == 'robert'\nassert solution('rrroobert') == 'robert'\nassert solution('roobert') == 'robert'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000 9 7\\n') == '108 4'\nassert solution('1000 900 7\\n') == 'Impossible'\nassert solution('1000 9 9\\n') == 'Impossible'\nassert solution('1000 9 0\\n') == '108 4'\nassert solution('1000 9 4\\n') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 9 7') == '108 4' # same output if no assertions\nassert solution('1000 9 7') == '108 4' # same output if no assertions\nassert solution('1000 9 7') == '108 4' # same output if no assertions\nassert solution('1000 9 7') == '108 4' # same output if no assertions\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '108 4'\nassert solution('100 4 10') == '108 4'\nassert solution('1000 9 7') == '108 4'\nassert solution('1000 9 10') == 'Impossible'\nassert solution('100 50 7') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('10 7 9') == '108 4'\nassert solution('10 7 10') == '108 4'\nassert solution('10 7 100') == '108 4'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('1000000 9 1') == '108 4'\nassert solution('900009 7 9') == 'Impossible'\nassert solution('99999 9 9') == '108 4'\nassert solution('99999 0 0') == '108 4'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nprint(\"Passed.\")\n\"\"\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0'\nassert solution('2 2\\n.#\\n.#\\n.#\\n.#\\n.#\\n.#\\n.#\\n.#\\n#.\\n#.\\n#.\\n#.\\n') == '9\\n0\\n0\\n0\\n0\\n0'\nassert solution('1 1\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n') == '9\\n0\\n0\\n0\\n0\\n0'\nassert solution('1 1\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n') == '9\\n0\\n0\\n0\\n0\\n0'\nassert solution('2 2\\n.#\\n.#\\n.#\\n.#\\n.#\\n.#\\n.#\\n.#\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n') == '9\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0\\n'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '1\\n1\\n2\\n1\\n0'\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '1\\n1\\n2\\n1\\n0'\nassert solution('4 4\\n.X...\\n....\\n....\\n....\\n....\\n.X.#') == '9\\n0\\n0\\n0\\n0'\nassert solution('4 4\\n...#\\n....\\n....\\n....\\n....\\n...#') == '0\\n0\\n0\\n0\\n0'\nassert solution('5 3\\n...X\\n...X\\n...X\\n.X...\\n.#X..\\n#X...\\n#X..#') == '9\\n0\\n0\\n0\\n0'\nassert solution('6 3\\n..XX\\n..XX\\n..XX\\nX..X\\n.X.#\\n.#.#\\n.X.#') == '5\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == '1\\n1\\n2\\n1\\n0'\nassert solution(\n    \"4 4\\n....\\n....\\n....\\n....\\n\") == '9\\n0\\n0\\n0\\n0'\nassert solution(\n    \"4 4\\n.#X..\\n.#X..\\n.#X..\\n.#X..\\n\") == '0\\n0\\n0\\n0\\n0'\nassert solution(\n    \"6 6\\n.XX..\\n.XX..\\n.XX..\\n.#X..\\n.XX..\\n.#X..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX..\\n.XX"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"8\\n4\\n16\\n32\\n64\"\nassert solution(\"3\\n3\\n3\\n3\\n3\") == \"15\\n6\\n21\\n30\\n45\"\nassert solution(\"4\\n4\\n4\\n4\\n4\") == \"20\\n8\\n32\\n64\\n128\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"30\\n12\\n50\\n150\\n250\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '15'\nassert solution('2 1 3 4 5') == '15'\nassert solution('3 2 1 4 5') == '15'\nassert solution('4 3 2 1 5') == '15'\nassert solution('5 4 3 2 1') == '15'\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n212\n1253\n''') == '1953566'\nassert solution('''5\n23\n17\n43\n52\n22\n''') == '102'\nassert solution('''6\n9\n3\n4\n5\n6\n7\n''') == '934106414'\nassert solution('''7\n1\n8\n9\n10\n2\n11\n3\n''') == '138821'\nassert solution('''8\n2\n1\n3\n5\n7\n11\n13\n17\n19\n''') == '138821'\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"102\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('212') == '1953566'\nassert solution('1253') == '102'\nassert solution('23') == '10'\nassert solution('17') == '43'\nassert solution('43') == '9'\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('21^2 + 125^3') == '1953566'\nassert solution('212') == '1953566'\nassert solution('1253') == '1953566'\nassert solution('17') == '1953566'\nassert solution('22') == '1953566'\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\") == \"3\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\\n4\") == \"10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"15\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n212\\n1253') == '1953566'\nassert solution('5\\n23\\n17\\n43\\n52\\n22') == '102'\nassert solution('1\\n234\\n56\\n789\\n1011\\n101') == '2147483647'\nassert solution('2\\n1\\n3') == '1'\nassert solution('3\\n1\\n2\\n3') == '1'\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n212\\n1253') == '1953566'\nassert solution('3\\n23\\n17\\n43\\n52\\n22') == '102'\nassert solution('6\\n23\\n17\\n43\\n52\\n22') == '2413342'\nprint('All set! Click \"Check\" to earn cool rewards!')\n\"\"\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2 2 2') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\nassert solution('9 9 9 0.123 0.456 0.789') == '0.000014 0.000026 0.000039'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9\n3 2 3\n''') == '0.000000 6.000000 10.000000'\nassert solution('''100 10 100\n5 3 2\n''') == '0.000000 17.000000 21.000000'\nassert solution('''1 1 1\n1 1 1\n''') == '0.000000 1.000000 1.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000\\n'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000\\n'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000\\n'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000\\n'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000\\n'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\nassert solution('0 0 0') == '0.000000 0.000000 0.000000'\nassert solution('5 5 5') == '0.000000 0.000000 0.000000'\nassert solution('1 1 1') == '0.000000 0.000000 0.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 10 10\\n3 3 3\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"1 1 1\\n0 0 0\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"1 1 1\\n1 1 1\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"1 1 1\\n2 2 1\") == \"0.000000 0.000000 0.000000\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 10 10''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\nassert solution('''30 30 30''') == '0.000000 0.000000 0.000000'\nassert solution('''18 12 14''') == '0.0000000 2.000000 4.000000'\nassert solution('''35 20 10''') == '0.000000 1.000000 2.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n5\\n') == '0.000000 0.000000 0.000000'\nassert solution('5\\n2\\n5\\n') == '0.000000 3.000000 6.000000'\nassert solution('4\\n3\\n3\\n') == '0.000000 3.000000 3.000000'\nassert solution('3\\n3\\n2\\n') == '0.000000 2.000000 1.000000'\nassert solution('5\\n3\\n2\\n') == '0.000000 1.000000 2.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10 10\\n3 3 3') == '0.000000 0.000000 0.000000\\n'\nassert solution('9 9 9\\n3 2 1') == '0.000000 3.000000 6.000000\\n'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 10 10''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\nassert solution('''10 10 10''') == '0.000000 0.000000 0.000000'\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('#<&&&&<') == '#'\nassert solution('<<<<<<') == ''\nassert solution('^<<<<<') == ''\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('foss<trrt<<' ) == 'forrtun'\nassert solution('foss<trrt<rrt<<' ) == 'forrtun'\nassert solution('foss<trrt<rrt<trrt<<' ) == 'forrtun'\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('<') == ''\nassert solution('foss<<rritun') == 'forritun'\nassert solution('a<bc<') == 'b'\nassert solution('a<bc<') == 'b'\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('a<bc<') == 'b'\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('a<b<') == 'ab'\n\"\"\"\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('a<bc<' + 'a' * 20000000) == 'a' * 20000000\nassert solution('a<bc<' + 'a' * 100000000) == 'a' * 100000000\nassert solution('a<bc<' + 'a' * 10000000) == 'a' * 10000000\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('<rritun') == 'forritun'\nassert solution('<') == '<'\nassert solution('a<bc<') == 'b'\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"fossrritun\"\n\nstdin = \"a<bc<\"\nassert solution(stdin) == \"b\"\n\nstdin = \"foss<<rritun\"\nassert solution(stdin) == \"forritun\"\n\nstdin = \"fossrritun\"\nassert solution(stdin) == \"fossrritun\"\n\nstdin = \"foss<<rritun\"\nassert solution(stdin) == \"forritun\"\n\nstdin = \"fossrritu\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nassert solution('Emma-Datta') == 'EM'\nassert solution('Hanko-Bazh-Ono-Kazunoko') == 'HB'\nassert solution('Sophia-Nolitta-Kundry') == 'SN'\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nassert solution('MiRko-Slvko') == 'MS'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('xyz') == ''\nassert solution('x-y') == '-y'\nassert solution('-x-y') == '-x-y'\nassert solution('x-y-z') == '-y-z'\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == stdout\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\nassert solution(\"AKnuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"AKnuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"Mary-Ann-Lise-Maiden\"\n) == \"MAHLIS\"\nassert solution(\n    \"Myst-Cristo-Philosophy\"\n) == \"MCP\"\nassert solution(\n    \"All-Forgotten-Days\"\n) == \"FFD\"\nassert solution(\n    \"KMP\"\n) == \"KMP\"\nassert solution(\n    \"MS\"\n) == \"MS\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-_-') == '-', \"Test 1\"\nassert solution('-_-_') == '-', \"Test 2\"\nassert solution('--__') == '-', \"Test 3\"\nassert solution('_-_-') == '-', \"Test 4\"\nassert solution('-_-_-') == '-', \"Test 5\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('KMP') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nassert solution('Ploeur-Plat') == 'PP'\nassert solution('p-loeur-plat') == 'PP'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('1 1 0') == 'Province or Gold'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('2 0 1') == 'Province or Gold'\nassert solution('0 0 0') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('0 0 0') == 'Province or Gold'\nassert solution('1 1 1') == 'Province or Gold'\nassert solution('2 0 0') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('4 1 0') == 'Duchy or Copper'\nassert solution('3 1 0') == 'Province or Gold'\nassert solution('0 2 0') == 'Duchy or Silver'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('1 1 0') == 'Province or Gold'\nassert solution('2 2 0') == 'Province or Gold'\nassert solution('2 1 0') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('1 2 1') == 'Province or Gold'\nassert solution('1 0 1') == 'Province or Gold'\nassert solution('2 1 0') == 'Estate or Copper'\nassert solution('0 1 0') == 'Estate or Copper'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 1 0\") == \"Province or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1 0') == 'Estate or Copper'\nassert solution('0 1 0') == 'Province or Gold'\nassert solution('1 1 0') == 'Province or Silver'\nassert solution('2 2 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n\"\"\"\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"75.7142857\"\n\"\"\"\n\"\"\"\nhahaha\n\"\"\"\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '90.0'\nassert solution('2\\n1\\n') == 'impossible'\nassert solution('2\\n1\\n10\\n100') == 'impossible'\nassert solution('2\\n1\\n10\\n90') == '90.0'\nassert solution('2\\n2\\n10\\n90') == '85.0'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1\\n70 50') == '90.00'\nassert solution('10 3\\n80 90') == '75.7142857'\n\"\"\"\n\nimport sys\nfrom math import log10"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 1\n70 50''') == '90.0'\nassert solution(\n'''10 3\n80 90''') == '75.7142857'\nassert solution(\n'''100 30\n60 50''') == 'impossible'\nassert solution(\n'''1000 10\n100 50''') == 'impossible'\nassert solution(\n'''1000 10\n70 50''') == '90.0'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('3 5') == 'Impossible'\nassert solution('1 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '90.0'\nassert solution('10 3') == '75.7142857'\nassert solution('100 100') == 'impossible'\nassert solution('0 3') == 'impossible'\nassert solution('1 3') == '1.0'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('0 1') == 'impossible'\nassert solution('0 10') == 'impossible'\nassert solution('100 0') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n70 50\\n') == '90.00'\nassert solution('2\\n80 90\\n') == '75.7142857'\nassert solution('2\\n70 90\\n') == 'impossible'\nassert solution('2\\n100 90\\n') == 'impossible'\nassert solution('1\\n0 1\\n100 50\\n') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == 'impossible'\nassert solution('2\\n1\\n') == 'impossible'\nassert solution('3\\n2\\n') == 'impossible'\nassert solution('4\\n2\\n') == 'impossible'\nassert solution('5\\n2\\n') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '90.0'\nassert solution(stdin) == '75.7142857'"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n3 4\n5\n''') == '2\\n1 2 3 4 5'\nassert solution('''4\n1 2 3 4\n2 3 4 5\n5\n1 2 3 4 5\n''') == '1\\n2 3 4 5'\nassert solution('''5\n2 3 4 5 1\n2 3 4 5\n3 4 5\n2 3 4 5 1\n''') == '3\\n2 3 4 5'\nassert solution('''5\n2 3 4 5 1\n2 3 4 5\n2 3 4 5 1\n''') == '3\\n2 3 4 5'\nassert solution('''5\n2 3 4 5 1\n2 3 4 5\n2 3 4 5 1\n''') == '3\\n2 3 4 5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 1 5 4 7 6''') == '''4\n2 3 5 7'''\nassert solution('''1 2 3 4 5''') == '''5\n1 2 3 4 5'''\nassert solution('''3 3 3 3 3''') == '''0\n3 3 3 3 3'''\nassert solution('''10 10 10 10 10 10 10 10 10 10''') == '''0\n10 10 10 10 10 10 10 10 10 10'''\nassert solution('''3 1 3 2''') == '''0\n3 1 3 2'''\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n2 3 1 5 4 7 6\n''') == '4\\n2 3 5 7'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('1\\n2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('3\\n2 3 1') == '2\\n3 1 2'\nassert solution('1\\n1') == '1\\n1'\nassert solution('2\\n2') == '2\\n1 2'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10\\n1 2 3 4 5 6 7 8 9 10'\nassert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('6\\n2 3 1 5 4 7') == '4\\n2 3 5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5 4 7 6\\n'\n    '2 3 1 5 4 7 6\\n'\n    '1 2 3 4 5\\n'\n)) == '4\\n2 3 5 7\\n'\nprint(solution(\n    '1\\n2 3 1 5"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2 3 4 5\\n') == '4\\n1 2 3 4 5'\nassert solution('2\\n3 1\\n') == '5\\n1 2 3 4 5'\nassert solution('10\\n5 2 1 3 4 7 6 9 8\\n') == '8\\n5 2 1 3 4 7 6 9'"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n2 3 1 5 4 7 6''') == '''4\n2 3 5 7\n'''\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\nassert solution(\"1 2 3 4 5\") == \"5\\n1 2 3 4 5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n3\n1 2''') == '2 3 1'\nassert solution('''7\n2 3 1 5 4 7 6\n''') == '2 3 1 5 7'\nassert solution('''4\n1 2 3 4\n2 3 1 4\n1 4 2 3\n3 4 1 2\n''') == '2 3 1 4'\nassert solution('''8\n1 2 3 4 5 6 7 8\n7 5 2 3 4 1 6 8\n6 7 4 5 3 2 1 8\n5 6 3 2 1 7 8 4\n4 7 8 5 6 3 2 1\n3 8 7 6 4 5 2 1\n2 1 8 7 6 4 3 5\n1 8 2 7 6 4 3 5\n''') == '2 3 1 5 4 7 6 8'\nassert solution('''6\n1 2 3 4 5 6\n2 4 1 3 5 6\n3 5 1 2 4 6\n4 1 3 5 2 6\n5 1 2 4 3 6\n1 2 3 4 5 6\n''') == '5 1 2 3 4 5'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('10 50') == '9 25'\nassert solution('1 10') == '0 25'\nassert solution('0 30') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('10 10') == '9 25'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('7 15') == '4 25'\nassert solution('14 17') == '9 25'\nassert solution('2 30') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\""
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 10''') == '9 25'\nassert solution('''0 30''') == '23 45'\nassert solution('''4 5''') == '9 25'\nassert solution('''2 45''') == '23 45'\nassert solution('''2 45''') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('10 30') == '9 25'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n\"\"\""
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1.000000\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1.000000') == '1.000000'\nassert solution('2.000000') == '1.414214'\nassert solution('3.000000') == '1.7320508075688772'\nassert solution('4.000000') == '2.1213203435596477'\nassert solution('5.000000') == '3.2199706601683895'\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 1.0\nassert solution('2.000000') == 1.414214\nassert solution('1.000000') == 1.000000\nassert solution('0.36788') == 0.36788\nassert solution('0.75') == 0.75\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1.000000') == '1.000000'\nassert solution('2.000000') == '1.414214'\nassert solution('0.36788') == '1.414214'\nassert solution('0.999876') == '2.718281'\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1.414214'"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1.414214'\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1.000000') == '1.000000'\nassert solution('2.000000') == '1.414214'\nassert solution('3.000000') == '1.69512'\nassert solution('4.000000') == '2.37729'\nassert solution('5.000000') == '3.73496'\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '1.000000'\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2,1'\nassert solution('50') == '50:', 'Failed test case: 50'\nassert solution('32767') == '32767:', 'Failed test case: 32767'\nassert solution('32768') == '32768:', 'Failed test case: 32768'\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3\n\"\"\") == \"\"\"\n3:\n2,1\n\"\"\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '3:\\n2,1'\nassert solution('50') == '50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25'\n\n-----"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''50'''\n) == '50:', \"test 1 failed\"\nassert solution(\n'''50'''\n) == '50:', \"test 2 failed\"\nassert solution(\n'''3'''\n) == '3:', \"test 3 failed\"\nassert solution(\n'''50'''\n) == '50:', \"test 4 failed\"\nassert solution(\n'''50'''\n) == '50:', \"test 5 failed\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('50') == '50:'\nassert solution('3') == '3:', '3'\nassert solution('50') == '50:'\nassert solution('50') == '50:'\nassert solution('50') == '50:'\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3:1\\n2,1\"\nassert solution(\"50\") == \"50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\"\nassert solution(\"4\") == \"4:1,1\\n2,1\\n1,2\\n1,3\"\nassert solution(\"10\") == \"10:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n34,34\"\nassert solution(\"60\") == \"60:4,1\\n4,2\\n2,3\\n1,4\\n1,5\\n1,6\\n2,7\\n3,8\\n5,9\\n5,10\\n6,11\\n10,12\\n13,13\\n16,14\\n18,15\\n20,16\\n23,17\\n25,18\\n26,19\\n30,20\\n32,21\\n33,22\\n35,23\\n36,24\\n40,25\\n43,26\\n44,27\\n45,28\\n47,29\\n50,30\\n53,31\\n54,32\\n56,33\\n57,34\\n60,35\\n62,36\\n64,37\\n65,38\\n67,39\\n68,40\\n70,41\\n72,42\\n73,43\\n75,44\\n76,45\\n78,46\\n79,47\\n81,48\\n83,49\\n84,50\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == \"3:2,1\"\nassert solution(50) == \"50:2,1\"\nassert solution(3) == \"3:2,1\"\nassert solution(1) == \"1:\"\nassert solution(2) == \"2,1\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '3: 2,1'\nassert solution('50') == '50: 2,1'\n\n\"\"\"\n\ns = int(input())"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3\"\"\") == \"\"\"3:\n2,1\n\"\"\"\n\nassert solution(\n    \"\"\"50\"\"\") == \"\"\"50:\n2,1\n2,2\n3,2\n5,4\n5,5\n6,5\n10,10\n13,12\n17,16\n25,25\n\"\"\"\n\nassert solution(\n    \"\"\"1000\"\"\") == \"\"\"1000:\n3,1\n3,2\n3,3\n5,5\n5,6\n5,7\n5,8\n5,9\n5,10\n5,11\n5,12\n5,13\n5,14\n5,15\n5,16\n5,17\n5,18\n5,19\n5,20\n5,21\n5,22\n5,23\n5,24\n5,25\n6,1\n6,2\n6,3\n6,4\n6,5\n6,6\n6,7\n6,8\n6,9\n6,10\n6,11\n6,12\n6,13\n6,14\n6,15\n6,16\n6,17\n6,18\n6,19\n6,20\n6,21\n6,22\n6,23\n6,24\n6,25\n6,26\n6,27\n7,1\n7,2\n7,3\n7,4\n7,5\n7,6\n7,7\n7,8\n7,9\n7,10\n7,11\n7,12\n7,13\n7,14\n7,15\n7,16\n7,17\n7,18\n7,19\n7,20\n7,21\n7,22\n7,23\n7,24\n7,25\n7,26\n7,27\n8,1\n8,2\n8,3\n8,4\n8,5\n8,6\n8,7\n8,8\n8,9\n8,10\n8,11\n8,12\n8,13\n8,14\n8,15\n8,16\n8,17\n8,18\n8,19\n8,20\n8,21\n8,22\n8,23\n8,24\n8,25\n8,26\n8,27\n8,28\n9,1\n9,2\n9,3\n9,4\n9,5\n9,6\n9,7\n9,8\n9,9\n9,10\n9,11\n9,12\n9,13\n9,14\n9,15\n9,16\n9,17\n9,18\n9,19\n9,20\n9,21\n9,22\n9,23\n9,24\n9,25\n9,26\n9,27\n9,28\n9,29\n9,30\n9,31\n10,1\n10,2\n10,3\n10,4\n10,5\n10,6\n10,7\n10,8\n10,9\n10,10\n10,11\n10,12\n10,13\n10,14\n10,15\n10,16\n10,17\n10,18\n10,19\n10,20\n10,21\n10,22\n10,23\n10,24\n10,25\n10,26\n10,27\n10,28\n10,29\n10,30\n10,31\n10,32\n10,33\n10,34\n10,35\n10,36\n10,37\n10,38\n10,39\n10,40\n10,41\n10,42\n10,43\n10,44\n10,45\n10,46\n10,47\n10,48\n10,49\n10,50\n11,1\n11,2\n11,3\n11,4\n11,5\n11,6\n11,7\n11,8\n11,9\n11,10\n11,11\n11,12\n11,13\n11,14\n11,15\n11,16\n11,17\n11,18\n11,19\n11,20\n11,21\n11,22\n11,23\n11,24\n11,25\n11,26\n11,27\n11,28\n11,29\n11,30\n11,31\n11,32\n11,33\n11,34\n11,35\n11,36\n11,37\n11,38\n11,39\n11,40\n11,41\n11,42\n11,43\n11,44\n11,45\n11,46\n11,47\n11,48\n11,49\n11,50\n12,1\n12,2\n12,3\n12,4\n12,5\n12,6\n12,7\n12,8\n12,9\n12,10\n12,11\n12,12\n12,13\n12,14\n12,15\n12,16\n12,17\n12,18\n12,19\n12,20\n12,21\n12,22\n12,23\n12,24\n12,25\n12,26\n12,27\n12,28\n12,29\n12,30\n12,31\n12,32\n12,33\n12,34\n12,35\n12,36\n12,37\n12,38\n12,39\n12,40\n12,41\n12,42\n12,43\n12,44\n12,45\n12,46\n12,47\n12,48\n12,49\n12,50\n13,1\n13,2\n13,3\n13,4\n13,5\n13,6\n13,7\n13,8\n13,9\n13,10\n13,11\n13,12\n13,13\n13,14\n13,15\n13,16\n13,17\n13,18\n13,19\n13,20\n13,21\n13,22\n13,23\n13,24\n13,25\n13,26\n13,27\n13,28\n13,29\n13,30\n13,31\n13,32\n13,33\n13,34\n13,35\n13,36\n13,37\n13,38\n13,39\n13,"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '3:\\n2,1\\n'\nassert solution('50') == '50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n'\n\n'''\n\n'''\n----------------------------------------------------------------------------\n'''\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''THE RAIN IN SPAIN''') == 'no'\nassert solution('''IN THE RAIN AND THE SNOW''') == 'yes'\nassert solution('THE RAIN IN SPAIN IN THE PLAIN') == 'no'\n'''\nfrom collections import Counter"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE WORD IS A WORD\") == \"no\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE PLAIN IN THE PLAIN\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\n\"\"\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"TROY AND LEANN\") == \"yes\"\nassert solution(\"THE\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'no'\nassert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\nprint(solution('THE RAIN IN SPAIN IN THE PLAIN'))\nassert solution('THE RAIN IN SPAIN IN THE PLAIN') == 'no'\nassert solution('THE RAIN IN SPAIN IN THE PLAIN') == 'yes'\nprint('All tests passed successfully!')\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THERAININSPAIN\") == \"no\"\nassert solution(\"INTRO THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'no'\nassert solution('a') == 'no'\nassert solution('The Rain In Spain') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\nassert solution('THE RAIN IN SPAIN IN THE PLAIN') == 'no'\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\nassert solution('ABCDE') == 'no'\nassert solution('Aa') == 'no'\nassert solution('ABB') == 'no'\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n\"\"\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nassert solution(\"RBRRRBRRBRRBRRRRRRRRRRRRRRBRRRRRRRRRRRRRRRRRRRR\") == \"HHHHHHHHHHHHHHHHHHHHHHHCHS\"\nassert solution(\"BRRRRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\") == \"HHHHHHHHHHHHHHHHHHHHHHHCHS\"\nassert solution(\"BRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\") == \"HHHHHHHHHHHHHHHHHHHHHHHCHS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nprint('all tests passed')\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nassert solution('LLRBBBRLLR') == 'CCHCS'\nassert solution('RBRRRRBRRRRRRRBRRRRRRLLRRRRRRRRRRRRRRRRR') == 'CCSSSSSSSSSSSSSSSSSSSS'\nassert solution('RBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR') == 'CCSSSSSSSSSSSSSSSSSSSSS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nprint(\"All tests past. Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('RBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nassert solution('LLLBRRRRBBBBLLR') == 'SSSSSKKKCHCS'\nassert solution('LLLLLLRRRBBBBLLLLRRRRRBBBBLLLLR') == 'SSSSSKHHSSSSSKKKCHCS'\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1\\nFizz\\n3\\nFizz\\nBuzz\\n5\\nFizzBuzz\\n7'\nassert solution('2 3 7') == '1\\nFizz\\n3\\nFizz\\nBuzz\\n5\\nFizzBuzz\\n7'\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution(\"2 4 5\") == \"1\\n2\\nFizz\\n3\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\"\nassert solution(\"1 1 1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"1 2 3\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('2 7 3') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('-7 -3 -5') == ''"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"1 Fizz\\n2 Buzz\\nFizz\\n3 Fizz\\nFizz\\n5 FizzBuzz\\n7 Fizz\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\nassert solution(\"2 4 6\") == \"1\\nFizz\\n2\\nBuzz\\nFizz\\n3\\nFizz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 6\") == \"1\\nFizz\\n2\\nBuzz\\nFizz\\n3\\nFizz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 6\") == \"1\\nFizz\\n2\\nBuzz\\nFizz\\n3\\nFizz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('2 3 7') == '1'\nassert solution('2 4 7') == '1'\nassert solution('2 4 4') == '1'\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('0 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('1 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1\\nFizz\\n3\\nFizz\\nBuzz\\nFizz\\nBuzz\\n7'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizz\\nBuzz\\nFizz\\nBuzz\\n7'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizz\\nBuzz\\nFizz\\nBuzz\\n7'\nassert solution('1 2 3') == '1\\nFizz\\n3\\nFizz\\nBuzz\\nFizz\\nBuzz\\n7'\nassert solution('1 2 3') == '1\\nFizz\\n3\\nFizz\\nBuzz\\nFizz\\nBuzz\\n7'\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution(\"4 4 4\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n3\\nFizz\\n7\"\nassert solution(\"7 7 7\") == \"1\\nFizz\\n3\\nFizz\\nBuzz\\nFizz\\n7\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('2 3 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('3 4 5') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('4 5 6') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('5 6 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n3 3 3 2''') == \"It hadn't snowed this early in 3 years!\"\nassert solution('''2 10\n0 100\nSample Output 2:\nIt hadn't snowed this early in 0 years!''') == \"It hadn't snowed this early in 0 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\n3 3 3 2') == 'It hadn\\'t snowed this early in 3 years!'\nassert solution('5 10\\n0 100') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('10 10\\n0 100') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('10 5\\n3 3 3 2') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('10 5\\n4 4 4 4 4') == 'It hadn\\'t snowed this early in 0 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n3 3 3 2') == 'It hadn\\'t snowed this early in 3 years!'\nassert solution('2\\n0 100') == 'It hadn\\'t snowed this early in 0 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2\\n3 3 3 2') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('1 2\\n0 100') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('5 10\\n0 100\\n1 1 1 1 1') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('7 10\\n0 100\\n1 1 1 1 1 1 1 1 1') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('100 100\\n
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n3 3 3 2\n''') == \"It hadn't snowed this early in 3 years!\"\nassert solution('''2 10\n0 100\n''') == \"It hadn't snowed this early in 0 years!\"\nassert solution('''2 4\n1 2 3 4\n''') == \"It hadn't snowed this early in 0 years!\"\nassert solution('''2 6\n0 100\n3 3 3 3 3 3 3 3\n''') == \"It hadn't snowed this early in 0 years!\"\n'''\nassert solution('''4 2\n3 3 3 2\n''') == \"It hadn't snowed this early in 3 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n3 3 3 2\\n') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10\\n0 100\\n') == 'It hadn\u2019t snowed this early in 0 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n2\\n3 3 3 2') == 'It hadn\\'t snowed this early in 3 years!'\nassert solution('4\\n0 100\\n1 101') == 'It hadn\\'t snowed this early in 0 years!'"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n3 3 3 2''') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('''2 10\n0 100''') == 'It hadn\u2019t snowed this early in 0 years!'\nassert solution('''2 11\n0 100\n3 2 2 1''') == 'It hadn\u2019t snowed this early in 2 years!'\nassert solution('''5 3\n3 2 1 2 1''') == 'It hadn\u2019t snowed this early in 0 years!'\nassert solution('''2 4\n0 100\n0 100\n1 100\n1 100''') == 'It hadn\u2019t snowed this early in 0 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n3 3 3 2\\n') == 'It hadn\\'t snowed this early in 3 years!'\nassert solution('2 10\\n0 100\\n') == 'It hadn\\'t snowed this early in 0 years!'"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 2') == '7'\nassert solution('10 10') == '1'\nassert solution('10 100') == '1'\nassert solution('50 50') == '1'\nassert solution('50 1') == '1'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('10 2') == '7'\nassert solution('10 10') == '7'\nassert solution('1 10') == '7'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"\nassert solution(\"10 100\") == \"7\"\nassert solution(\"10 1000\") == \"7\"\nassert solution(\"10 100000\") == \"7\"\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n---\n\nAnswer:"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nprint(\"You did it!\")\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 2''') == '2'\nassert solution('''10 10''') == '7'\nassert solution('''100 4''') == '3'\nassert solution('''1 1''') == '1'\nassert solution('''1 2''') == '2'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\nassert solution('100 100') == '1'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '7'\nassert solution('1 2') == '7'\nassert solution('2 5') == '3'\nassert solution('1 1') == '1'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('b') == 'b'\nassert solution('k') == 'k'\nassert solution('o') == 'o'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nprint('Passed')\n\n--------------------------------------------------------------------------------"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('boudonuimilcbsai') == 'boudonuimilcbsai'\nassert solution('b') == 'b'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('boudonuimilcbsai') == 'boudonuilcbsai'\nassert solution('boudonuilcbsai') == 'boudonuilcbsai'\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('\\n\\n') == ''\nassert solution(' ') == ''\nassert solution('\\n\\n\\n') == ''\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('b') == 'b'\nassert solution('a') == 'a'\nassert solution('k') == 'k'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('boudonuilcbsai') == 'bondoniulbcbsai'\nassert solution('boudonuilcbsai') == 'bondoniulbcbsai'\nassert solution('boudonuilcbsai') == 'bondoniulbcbsai'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('kayas') == 'katayas'\nassert solution('kayadss') == 'katads'\nassert solution('kasdas') == 'katadas'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n''') == '8 2'\n\nassert solution('''2\n''') == '8 3'\n\nassert solution('''10\n''') == '4 8'\n\nassert solution('''5\n''') == '2 6'\n\nassert solution('''15\n''') == '3 9'"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\nassert solution('8') == '8 4'\nassert solution('9') == '8 5'\nassert solution('10') == '8 6'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n\") == \"8 2\"\nassert solution(\"7\\n\") == \"8 3\"\nassert solution(\"0\\n\") == \"0 0\"\nassert solution(\"100\\n\") == \"100 100\"\nassert solution(\"1024\\n\") == \"1024 0\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n4''') == \"2 3\"\nassert solution('''5\n7''') == \"4 3\"\nassert solution('''20\n21''') == \"14 11\"\nassert solution('''10\n2''') == \"4 3\"\nassert solution('''25\n2''') == \"16 8\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6''') == '''8 2'''\nassert solution('''7''') == '''8 3'''\nassert solution('''0''') == '''1 1'''\nassert solution('''1''') == '''1 1'''\nassert solution('''100''') == '''1 1'''\n\nfrom math import ceil\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\\n\") == \"8 2\"\nassert solution(\"7\\n\") == \"8 3\"\nassert solution(\"4\\n\") == \"1 1\"\nassert solution(\"4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6''') == '''8 2\n'''\nassert solution('''7''') == '''8 3\n'''\n\nprint(\"All set? Click 'Check' to earn cool rewards!\")"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''stairs''') == \"YES\"\nassert solution('''drought''') == \"YES\"\nassert solution('''aught''') == \"NO\"\nassert solution('''ought''') == \"YES\"\nassert solution('''outte''') == \"NO\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet') == 'NO'\nassert solution('apples and pears') == 'YES'\nassert solution('tasty sprout') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet') == 'YES'\nassert solution('ought') == 'YES'\nassert solution('tasty') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''stairs''') == '''YES'''\nassert solution('''eet''') == '''YES'''\nassert solution('''drought''') == '''NO'''\nassert solution('''owed''') == '''NO'''\nassert solution('''owed''') == '''NO'''\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input/sample_input_2.txt\").read()) == \"YES\\nNO\\nYES\\nNO\\nNO\\nYES\"\nassert solution(open(\"test_input/sample_input_1.txt\").read()) == \"YES\\nNO\""
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''stairs\n2\nerres airs ears ares aires\neet eat\n2\napples and pears\nplates of meat\n''') == '''YES\nNO\nYES\nNO\nYES\nYES\nNO\n'''\nassert solution(\n'''drought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and fraught\nforever in doubt\napples and pears\n''') == '''YES\nYES\nYES\nNO\nNO\nYES\nYES\n'''\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('apples and pears') == 'YES'\nassert solution('tasty sprout') == 'YES'\nassert solution('difficult route') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"NO\"\nassert solution(\"dreary\") == \"NO\"\nassert solution(\"drought\") == \"NO\"\nassert solution(\"cat\") == \"NO\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('stairs', 2, 'erres airs ears ares aires', 'eet eat', 2, 'apples and pears', 'plates of meat', 'tasty sprout', 'difficult route', 'worried and f\u0101rg', 'forever in doubt', 'apples and pears') == 'YES'\nassert solution('drought', 2, 'aught ought aut acht', 'ought oubt outte out oute', 5, 'tasty sprout', 'difficult route', 'worried and f\u00e6rg', 'forever in doubt', 'apples and pears') == 'YES'\nassert solution('jugs', 2,'red pugs pugs', 'tart tart', 'two two', 'three three', 'four four', 'five five','six six','seven seven', 'eight eight') == 'NO'\nassert solution('nail', 2, 'zebra zebra', 'zebra zebra', 'one one', 'two two', 'three three', 'four four', 'five five','six six','seven seven', 'eight eight') == 'YES'\nassert solution('pets', 2, 'dogs dogs', 'cats cats', 'dogs dogs', 'cats cats', 'dogs dogs', 'cats cats', 'dogs dogs', 'cats cats', 'dogs dogs') == 'NO'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\n') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\n') == 'LOSE'\nassert solution('MY LIFE\\nBCDEFGHIJKLMNOPQRSTUVWXYZ\\n') == 'WIN'\nassert solution('NED\\nABDEGHIJKLMNOPQRSTUVWXYZ\\n') == 'WIN'\nassert solution('CODE\\nEDFGHIJKLMNOPQRSTUVWXYZ\\n') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n\"\"\"\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[2]"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'WIN'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''HANGMAN\nBANANA\n''') == 'WIN'\nassert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'LOSE'\nassert solution('''ACO\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'WIN'\nassert solution('''ACO\nCBA\n''') == 'LOSE'\nassert solution('''ACO\nABEC\n''') == 'WIN'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\nassert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"JOE\") == \"INCREASING\"\nassert solution(\"ALI\") == \"DECREASING\"\nassert solution(\"BOB\") == \"DECREASING\"\nassert solution(\"ANDY\") == \"DECREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"DECREASING\"\nassert solution(\"5\\nBOB\\nANDY\\nAL\\nADAM\") == \"INCREASING\"\nassert solution(\"5\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"\nassert solution(\"12\\nTOBIN\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nJON\\nTOBIN\") == \"INCREASING\"\nassert solution(\"12\\nJON\\nTOBIN\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nJON\\nTOBIN\") == \"DECREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"hello\") == \"NEITHER\"\nassert solution(\"ALI\") == \"INCREASING\"\nassert solution(\"ADAM\") == \"DECREASING\"\nassert solution(\"CARLI\") == \"INCREASING\"\nassert solution(\"JULIE\") == \"INCREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"HOPE\") == \"INCREASING\"\nassert solution(\"BOB\") == \"DECREASING\"\nassert solution(\"ANDY\") == \"INCREASING\"\nassert solution(\"ALI\") == \"DECREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\nJOE\\nBOB\") == \"INCREASING\"\nassert solution(\"3\\nHOPE\\nALI\\nBECKY\") == \"DECREASING\"\nassert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"INCREASING\"\nassert solution(\"5\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\") == \"INCREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"DECREASING\"\n\"\"\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM\n''') == 'DECREASING'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'NEITHER'\nassert solution('''7\nMARY\nJANE\nGARY\nSUE\nLAZARUS\nJOSUE\nANNA\n''') == 'INCREASING'\nassert solution('''7\nJANE\nGARY\nSUE\nLAZARUS\nJOSUE\nANNA\n''') == 'DECREASING'\nassert solution('''9\nJOSUE\nANNA\nBOB\nMARY\nMEGHAN\nJANE\nMEGHAN\nJULIE\nALEX\n''') == 'INCREASING'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"INCREASING\"\nassert solution(\"HOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"DECREASING\"\nassert solution(\"\\n\") == \"NEITHER\"\nassert solution(\"\\n\") == \"NEITHER\"\nassert solution(\"\\n\") == \"NEITHER\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM') == 'INCREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == 'NEITHER'\nprint('All tests passed!')\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('BOB\\nHOPE\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'INCREASING'\nassert solution('HOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'DECREASING'\nassert solution('JOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'NEITHER'\nassert solution('A\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ') == 'NEITHER'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'DECREASING'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\nNina wins!\\nJess wins!\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\") == \"Nina wins!\\nJess wins!\\nBob wins!\"\nassert solution(\"5 10 15\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"No winner!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n\") == \"No winner!\"\nassert solution(\"3\\n1\\n1\\n\") == \"Bob wins!\"\nassert solution(\"4\\n1\\n1\\n1\\n\") == \"Bob wins!\"\nassert solution(\"4\\n1\\n1\\n1\\n1\\n1\\n\") == \"Bob wins!\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n\") == \"No winner!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!\\nNina wins!\\nJess wins!\\n'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\n'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\n'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\n'\nassert solution('''1 1 2\n1\n''') == 'No winner!\\n'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\nNina wins!\\nJess wins!'\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n'\nassert solution('5 7 10\\nAlex\\nSonia\\nGena\\nCaroline\\nGina\\nAlex 1\\nSonia 1\\nGena 2\\nAlex 1\\nSonia 2\\nGena 1\\nAlex 2\\nSonia 3\\nGena 3\\nAlex 1\\nSonia 3\\nGena 3\\nAlex 2\\nSonia 2\\nGena 3\\nAlex 3\\nSonia 3\\nGena 2\\nAlex 1\\n') == 'Gena wins!\\nAlex wins!\\n'\nassert solution('1 1 1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"2 2 2\") == \"\"\nassert solution(\"1 1 1\") == \"No winner!\"\nassert solution(\"1 2 3\") == \"John wins!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\nassert solution('4 10 13') == 'Nina wins!'\nassert solution('1 1 1') == 'No winner!'\nassert solution('1 1 1') == 'No winner!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\nNina wins!\\n'\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nassert solution('-7 3 0 0 5 4') == '2.0'\nassert solution('1 -5 3 1 -2 2') == '0.1'"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\nassert solution(\"1 1 1 1 1 1\") == \"0.0\"\nassert solution(\"-1 1 1 1 1 1\") == \"0.0\"\nassert solution(\"1 1 1 1 -1\") == \"0.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nassert solution('-7 3 0 0 5 4') == '0.0'\nassert solution('-6 0 0 2 7 6') == '2.0'\nassert solution('7 3 -3 1 5 4') == '1.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[0]+stdin[4]+stdin[5]+stdin[6]\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\nassert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"7 2 0 0 5 4\") == \"4.0\"\nassert solution(\"7 2 0 0 5 4\") == \"4.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nassert solution('1 1 1 1 1 1') == '0.0'\nassert solution('2 2 3 4 4 4') == '0.0'\nassert solution('1 1 1 1 1 1') == '0.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3 0 0 5 4\\n') == '2.0'\nassert solution('6 0 0 2 7 6\\n') == '2.0'\nassert solution('0 1 1 1 0 0\\n') == '-1.0'\nassert solution('0 1 1 1 0 1\\n') == '0.0'\nassert solution('-999 -999 -999 -999 -999 999999 999999 999999 999999 999999 999999\\n') == '0.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0 0 0 0 0') == '0.0'\nassert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nassert solution('-2 -4 -1 -2 -4 -2') == '1.0'\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(stdin)\nprint('Testcase 1: Passed')\nassert solution(stdin) == solution(stdin)\nprint('Testcase 2: Passed')\n\nTestcase 1: Passed\nTestcase 2: Passed\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"21\"\nassert solution(\"14\") == \"25\"\nassert solution(\"99\") == \"99\"\nassert solution(\"321\") == \"934\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('132') == '135'\nassert solution('999') == '1000'\nassert solution('1000') == '1000'\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0\nprint(\"Testcase 1 passed.\")\nprint(\"Testcase 2 passed.\")\nprint(\"Testcase 3 passed.\")\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0\nassert solution(56789) == 0\nassert solution(60356) == 55756\nassert solution(12345) == 12345\n\n\"\"\""
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12345') == '1234'\nassert solution('123') == '1234'\nassert solution('1234') == '1234'\nassert solution('1234') == '1234'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('123') == '125'\nassert solution('456') == '465'\nassert solution('12345') == '12346'\nassert solution('123456') == '123565'\nassert solution('1234567') == '12345679'\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"stdin\") == \"165\"\n\"\"\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(156) == '165'\nassert solution(330) == '0'\n\nprint(\"Input the number:\")\nn = int(input())\nprint(\"The smallest number is: \" + solution(n))\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"\nassert solution(\"999\") == \"0\"\nassert solution(\"999\") == \"0\"\nassert solution(\"999\") == \"0\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\n\nassert solution('''3 3\n120000 120000 120000\n30000 30000 30000\n''') == '3'\n\nassert solution('''3 3\n120000 120000 120000\n30000 30000 30000\n160000 160000 160000\n''') == '3'\n\nassert solution('''3 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '2'\n\nassert solution('''3 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n170000 160000 160000\n''') == '2'"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution(\n'''4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\nassert solution(\n'''1 0\n10\n0 10\n1 1\n''') == '1'\nassert solution(\n'''1 1\n100000\n100000\n100000\n100000\n''') == '1'\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\n\nassert solution(\n'''\n4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\n\nassert solution(\n'''\n6 8\n190000 170000 140000 160000\n1990000 170000 140000 160000\n170000 140000 160000 170000\n140000 160000 160000 170000\n160000 170000 170000 170000\n160000 170000 170000 170000\n''') == '5'\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"5 5\") == \"2\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n0\\n3\\n0\\n1') == '4'\nassert solution('4\\n120000 100000 160000 100000 180000\\n190000 170000 140000 160000\\n170000 110000 120000') == '3'\nassert solution('5\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\\n190000 170000 140000 160000\\n190000 170000 140000 160000') == '4'\nassert solution('4\\n180000 185000 199999 100000\\n190000 170000 140000 160000\\n190000 170000 140000 160000\\n190000 170000 140000 160000') == '3'\nassert solution('5\\n180000 185000 199999 100000\\n190000 170000 140000 160000\\n190000 170000 140000 160000\\n190000 170000 140000 160000\\n190000 170000 140000 160000') == '4'\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n\"\"\") == \"4\"\nassert solution(\n\"\"\"5 4\n120000 100000 160000 100000 180000\n199999 180000 170000 120000\n\"\"\") == \"3\"\nassert solution(\n\"\"\"5 4\n100000 185000 199999 100000\n199999 180000 170000 120000\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '10'\nassert solution('''\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n''') == '1'\nassert solution('''\n5\n3\n2\n1\n42\n42\n1\n42\n''') == '6'\nassert solution('''\n1\n42\n42\n1\n42\n''') == '2'\nassert solution('''\n1\n42\n42\n1\n42\n''') == '2'\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('42\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '10'\nassert solution('''42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n''') == '1'\nassert solution('''0\n1\n2\n40\n41\n0\n1\n2\n40\n41\n0''') == '6'\nprint(\"Passed all tests...\")\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '10'\nassert solution('''42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n''') == '1'\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\"\nassert solution(\"42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\") == \"1\"\nassert solution(\"42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\") == \"1\"\nassert solution(\"42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\") == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n1\\n') == '6'\n\n-----Coding--\n\npublic class Solution {\n    public static void main(String[] args) {\n        int[] A = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n        int[] B = {42, 84, 252, 420, 840, 126, 42, 84, 420, 126};\n        int result = compute(A, B);\n        System.out.println(result);\n    }\n\n    public static int compute(int[] A, int[] B) {\n        int[] modB = new int[B.length];\n        for(int i = 0; i < B.length; i++) {\n            modB[i] = A[i] % B[i];\n        }\n        int[] count = new int[B.length];\n        for(int i = 0; i < B.length; i++) {\n            int countModB = 0;\n            for(int j = 0; j < B.length; j++) {\n                if(modB[j] == i) {\n                    countModB++;\n                }\n            }\n            count[i] = countModB;\n        }\n        int result = 0;\n        for(int i = 0; i < B.length; i++) {\n            if(count[i] > 0) {\n                result++;\n            }\n        }\n        return result;\n    }\n}\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126') == '1'\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0') == 'yes'\nassert solution('2 0') == 'yes'\nassert solution('1 5') == 'yes'\nassert solution('3 5') == 'no'\nassert solution('1 5') == 'no'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'yes'\nassert solution('1000 1') == 'yes'\nassert solution('1000 1000') == 'no'\nassert solution('5 3') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 0\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0') == 'yes'\nassert solution('13 3') == 'yes'\nassert solution('2 2') == 'yes'\nassert solution('5 1') == 'yes'\nassert solution('1 50') == 'no'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'yes'\n\n-----Testcases-----\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''13 3\n''') == 'yes'\nassert solution('''1 0\n''') == 'yes'\nassert solution('''2 4\n''') == 'no'\nassert solution('''1 4\n''') == 'yes'\nassert solution('''0 0\n''') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"13 3\") == \"yes\"\nassert solution(\"1 0\") == \"yes\"\nassert solution(\"2 5\") == \"yes\"\nassert solution(\"6 4\") == \"yes\"\nassert solution(\"9 6\") == \"no\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 0\") == \"yes\"\nassert solution(\"10 5\\n1 1\\n9 8\\n4 7\\n5 6\\n7 6\\n3 4\\n5 7\\n2 5\\n1 3\\n8 9\\n0 1\") == \"yes\"\nassert solution(\"1 0\\n1 1\\n9 8\\n4 7\\n5 6\\n7 6\\n3 4\\n5 7\\n2 5\\n1 3\\n8 9\\n0 1\") == \"no\"\nassert solution(\"0 0\\n1 1\\n9 8\\n4 7\\n5 6\\n7 6\\n3 4\\n5 7\\n2 5\\n1 3\\n8 9\\n0 1\") == \"yes\"\nassert solution(\"10 1\\n0 0\\n1 1\\n9 8\\n4 7\\n5 6\\n7 6\\n3 4\\n5 7\\n2 5\\n1 3\\n8 9\\n0 1\") == \"no\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n13 3\n\"\"\") == \"yes\"\nassert solution(\n\"\"\"\n1 0\n\"\"\") == \"yes\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n'''"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"P01K02H03H04\") == '12 12 11 13'\nassert solution(\"H02H10P11H02\") == 'GRESKA'\nassert solution(\"P1K2H3H4\") == '12 12 11 13'\nassert solution(\"P2K1H3H3\") == 'GRESKA'\nassert solution(\"P1K2H2H3\") == 'GRESKA'\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\nassert solution(\"P1K2H3H4\") == \"12 12 11 13\"\nassert solution(\"H1K2P3H4\") == \"GRESKA\"\nassert solution(\"P1K2H3H4\") == \"12 12 11 13\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n\"\"\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(P01K02H03H04) == \"12 12 11 13\"\nassert solution(H02H10P11H02) == \"GRESKA\"\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n\"\"\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n\n\"\"\""
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n\n---\nOriginal\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\"\nassert solution(\"2 2 2\\n.....\\n.**.\\n.....\\n\") == \"2\"\nassert solution(\"3 2 2\\n.***.\\n**.**\\n.*.*.\\n*.*.\\n.***.\\n\") == \"1\"\nassert solution(\"3 2 2\\n.***.\\n**.**\\n.*.*.\\n*.*.\\n.***.\\n\") == \"1\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''3 5 3\n.....\n.*.*.\n.....\n'''\n    ) == '1'\nassert solution(\n    '''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n'''\n    ) == '2'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 5 3''') == '1'\nassert solution('''7 6 4''') == '2'\nassert solution('''5 5 4''') == '1'\nassert solution('''2 2 1''') == '0'\nassert solution('''10 10 10''') == '0'\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5 3\\n.....\\n.*.*.\\n.....\\n') == '1\\n+-+..\\n|*|*.\\n+-+..\\n'\nassert solution('7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n') == '2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n'"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4 4') == '2'\nassert solution('6 7 4') == '1'\nassert solution('6 7 8') == '1'\nassert solution('7 8 4') == '1'\nassert solution('8 4 4') == '1'\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\nassert solution('..*.*.*\\n.*.*.*.*\\n.*.*.*.*\\n*.*.*.*.*\\n*.**.*.*.*\\n.*.*.*.*.*\\n*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n.**.*.*.*.*.*\\n*.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n*.**.*.*.*.*\\n*.**.*.*.*.*\\n*."
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('AS AD AS KS KC') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"7\"\nassert solution(open(\"test_input2.txt\").read()) == \"4\"\nassert solution(open(\"test_input3.txt\").read()) == \"3\"\nprint(\"\\n\\nPassed!\\n\")"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('2H 4C 4D 4S 9C') == '8'\nassert solution('2H 4C 4D 4S 9C') == '8'\nassert solution('AS AD AC KS KD') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('AC AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3\nassert solution('8S JS JD T2') == 3\nassert solution('5D 9H 8C KH TC') == 4\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('3C 4D 4H 2D 2H') == '3'\nassert solution('3C 4D 4H 2D 2H') == '3'\nassert solution('3C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('2C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('3C 4D 4H 2D 2H') == '3'\nassert solution('3C 4D 4H 2D 2H') == '3'\nassert solution('3C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AC AD AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3\n\"\"\"\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\\n\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\\n\") == \"7\"\nassert solution(\"7 1\\n0 0 0 0 0\\n\") == \"7\"\nassert solution(\"10 2\\n2 1 1 1 1 1 1 1 0 0 1 1\\n\") == \"5\"\nassert solution(\"10 2\\n1 1 1 1 1 1 1 1 0 0 1 1\\n\") == \"6\"\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1''') == '5'\nassert solution('''5 1\n0 0 0 0 0''') == '7'\nassert solution('''6 2\n2 1 1 1 0 1''') == '7'\nassert solution('''6 5\n2 1 1 1 0 1''') == '5'\nassert solution('''6 1\n2 1 1 1 0 1''') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 1') == '5'\nassert solution('5 1') == '7'\nassert solution('3 3') == '6'\nassert solution('4 1') == '8'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6 5\n    2 1 1 1 0 1\n    \"\"\"\n    ) == '5'\n\nassert solution(\n    \"\"\"\n    5 1\n    0 0 0 0 0\n    \"\"\"\n    ) == '7'\n\nassert solution(\n    \"\"\"\n    5 2\n    0 0 0 0 0\n    \"\"\"\n    ) == '0'\n\nassert solution(\n    \"\"\"\n    6 1\n    2 1 1 1 0 1\n    \"\"\"\n    ) == '5'\n\nassert solution(\n    \"\"\"\n    6 1\n    0 0 0 0 0 0\n    \"\"\"\n    ) == '7'"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Hello World!') == '@3110 \\/\\/0|Z1|)!'\n\nassert solution('What\u2019s the Frequency, Kenneth?') == '\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?'\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('All your base are belong to us.') == \\\n'''@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n'''\n\nassert solution('What\\'s the Frequency, Kenneth?') == \\\n'''\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\n'''\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"Hello World!\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"All your base are belong to us.\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\n\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('Hello World!') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n'\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('All your base are belong to us.') == \\\n'''@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n'''\n\nassert solution('What\\'s the Frequency, Kenneth?') == \\\n'''\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\n'''\n\nassert solution('One') == '@|Z1|!\n'''\nassert solution('Two') == '|Z2|0'\n'''\nassert solution('Three') == '`/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n'''\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('Hello World!') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.'\n\n\"\"\""
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 `]['0 |_|$.\\n'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n'\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == '@'\nassert solution('Hello World!') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n'\nassert solution('7') == '\\/\\/[-]@'\nassert solution('Hi!') == '\\/\\/[-]@'\nassert solution('H') == '@'\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''All your base are belong to us.\n''') == \\\n'''@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n'''\nassert solution('''What's the Frequency, Kenneth?\n''') == \\\n'''\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\n'''\n\nassert solution('''\n    ABCDEFGHIJKLMNOPQRSTUVWXYZ\n    a\n    b\n    c\n    d\n    e\n    f\n    g\n    h\n    i\n    j\n    k\n    l\n    m\n    n\n    o\n    p\n    q\n    r\n    s\n    t\n    u\n    v\n    w\n    x\n    y\n    z\n    -\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    0\n    =\n    @\n    ;\n    !\n    #\n    %\n    &\n    '\n    /\n    ?\n    <\n    >\n    ,\n    \n    _\n    ~\n    {\n    }\n    \n    |\n    }\n    \n    ~\n    ]\n    \n    _\n    \n    \"\n    \n    :\n    \n    *\n    \n    .\n    \n    +\n    \n    [\n    \n    ]\n    \n    ^\n    }\n    \n    {\n    }\n    \n    #\n    $\n    \n    1\n    \n    2\n    \n    3\n    \n    4\n    \n    5\n    \n    6\n    \n    7\n    \n    8\n    \n    9\n    \n    0\n    \n    =\n    \n    @\n    ;\n    !\n    #\n    %\n    &\n    '\n    /\n    ?\n    <\n    >\n    ,\n    \n    _\n    ~\n    {\n    }\n    \n    |\n    }\n    \n    ~\n    ]\n    \n    _\n    \n    \"\n    \n    :\n    \n    *\n    \n    .\n    \n    +\n    \n    [\n    \n    ]\n    \n    ^\n    }\n    \n    {\n    }\n    \n    #\n    $\n    \n    1\n    \n    2\n    \n    3\n    \n    4\n    \n    5\n    \n    6\n    \n    7\n    \n    8\n    \n    9\n    \n    0\n    \n    =\n    \n    @\n    ;\n    !\n    #\n    %\n    &\n    '\n    /\n    ?\n    <\n    >\n    ,\n    \n    _\n    ~\n    {\n    }\n    \n    |\n    }\n    \n    ~\n    ]\n    \n    _\n    \n    \"\n    \n    :\n    \n    *\n    \n    .\n    \n    +\n    \n    [\n    \n    ]\n    \n    ^\n    }\n    \n    {\n    }\n    \n    #\n    $\n    \n    1\n    \n    2\n    \n    3\n    \n    4\n    \n    5\n    \n    6\n    \n    7\n    \n    8\n    \n    9\n    \n    0\n    \n    =\n    \n    @\n    ;\n    !\n    #\n    %\n    &\n    '\n    /\n    ?\n    <\n    >\n    ,\n    \n    _\n    ~\n    {\n    }\n    \n    |\n    }\n    \n    ~\n    ]\n    \n    _\n    \n    \"\n    \n    :\n    \n    *\n    \n    .\n    \n    +\n    \n    [\n    \n    ]\n    \n    ^\n    }\n    \n    {\n    }\n    \n    #\n    $\n    \n    1\n    \n    2\n    \n    3\n    \n    4\n    \n    5\n    \n    6\n    \n    7\n    \n    8\n    \n    9\n    \n    0\n    \n    =\n    \n    @\n    ;\n    !\n    #\n    %\n    &\n    '\n    /\n    ?\n    <\n    >\n    ,\n    \n    _\n    ~\n    {\n    }\n    \n    |\n    }\n    \n    ~\n    ]\n    \n    _\n    \n    \"\n    \n    :\n    \n    *\n    \n    .\n    \n    +\n    \n    [\n    \n    ]\n    \n    ^\n    }\n    \n    {\n    }\n    \n    #\n    $\n    \n    1\n    \n    2\n    \n    3\n    \n    4\n    \n    5\n    \n    6\n    \n    7\n    \n    8\n    \n    9\n    \n    0\n    \n    =\n    \n    @\n    ;\n    !\n    #\n    %\n    &\n    '\n    /\n    ?\n    <\n    >\n    ,\n    "
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n'\n\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n'\n\"\"\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\nassert solution(\"3\") == \"Alice\"\nassert solution(\"4\") == \"Bob\"\nassert solution(\"5\") == \"Alice\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"\nassert solution(5) == \"Alice\"\nassert solution(10) == \"Alice\"\nassert solution(50) == \"Alice\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Bob'\nassert solution('5') == 'Alice'\nassert solution('6') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Tie'\nassert solution('4') == 'Tie'\nassert solution('5') == 'Alice'\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('1\\n2') == None\nassert solution('2\\n1') == None\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"\nassert solution(3) == \"Tie\"\nassert solution(4) == \"Alice\"\nassert solution(5) == \"Bob\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\nassert solution(\"5\") == \"Alice\"\nassert solution(\"10000\") == \"Alice\"\nassert solution(\"4\") == \"Bob\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"2\") == \"Bob\"\nassert solution(\"1\\n2\") == \"Bob\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == 'Alice'\nassert solution('2\\n') == 'Bob'\nassert solution('3\\n') == 'Alice'\nassert solution('4\\n') == 'Bob'\nassert solution('5\\n') == 'Alice'\n"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"this\\nis\\nthe\\nsentence\\nhas\\n$\\nlaters\\nsome\\nnumbers\\nof\\nletters\\nhere\") == \"this sentence has thirtyone letters\"\nassert solution(\n    \"this\\nis\\nthe\\nsentence\\nhas\\nnumbers\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\nassert solution(\n    \"this\\nis\\nthe\\nsentence\\nhas\\nnumbers\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\nassert solution(\n    \"this\\nis\\nthe\\nsentence\\nhas\\nnumbers\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\nassert solution(\n    \"this\\nis\\nthe\\nsentence\\nhas\\nnumbers\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    'this sentence has thirtyone letters'\n) == 'this sentence has thirtyone letters'\n\nassert solution(\n    'blah blah seventeen'\n) == 'blah blah seventeen'\n\nassert solution(\n    'one'\n) == 'one'\n\nassert solution(\n    'two'\n) == 'two'\n\nassert solution(\n    'three'\n) == 'three'"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5\nthis\nsentence\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters'\nassert solution('''\n7\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\nassert solution('''\n6\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') =='six is the number of letters here'\nassert solution('''\n5\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'five is the number of letters here'\nassert solution('''\n5\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'five is the number of letters here'\n"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"5\nthis\nsentence\nhas\n$\nletters\"\"\") == \"\"\"this sentence has thirtyone letters\"\"\"\nassert solution(\n\"\"\"7\n$\nis\nthe\nnumber\nof\nletters\nhere\"\"\") == \"\"\"thirty is the number of letters here\"\"\"\nassert solution(\n\"\"\"10\na\nis\nthe\nnumber\nof\nletters\nhere\"\"\") == \"\"\"a is the number of letters here\"\"\"\nassert solution(\n\"\"\"11\na\nis\nthe\nnumber\nof\nletters\nhere\"\"\") == \"\"\"a is the number of letters here\"\"\"\nassert solution(\n\"\"\"18\na\nis\nthe\nnumber\nof\nletters\nhere\"\"\") == \"\"\"a is the number of letters here\"\"\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n1\nthis\nsentence\nhas\n$\nletters\n2\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo\ntwo"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n-----------------------------------------------------------------------------------------------------------------------------------------\n\nStaying alive: Find the alive cells after T turns.\n\nYou are given a m x n grid of integer types representing the cells of a temple. The temple is a 2D array of size m x n.\n\nA cell is said to be alive if it contains an integer, a 0; or a 1 which are not counted as alive. The numbers 1 and 0 do not represent alive cells.\n\nYou are given a number of seconds T, and your goal is to find out how many alive cells are there after T turns.\n\nThere are two ways to do this:\n\n- You can calculate the number of alive cells every second and compare it to the number of alive cells after T turns. You can use the following formula:\n\n    $$\\sum_{t=1}^{T} (1 \\mathit{or} 0)$$\n\n- You can use the whole temple for T turns. The number of alive cells in the whole temple is the same after T turns.\n\nYou know the number of alive cells at the beginning of the T turns. It is guaranteed that the number of alive cells will be in the range [0, m * n]. You need to help the temple keep alive for T turns.\n\nImplement the function aliveCells(m: int, n: int, T: int, grid: List[List[int]]) -> int:\n\n- m and n represent the size of the temple. m is the number of rows and n is the number of columns.\n- T is the number of turns. T is always a positive integer.\n- grid is the 2D array of type int[] representing the temple. grid[i][j] represents the number of alive cells at the (i, j)th cell. grid[i][j] can be 0, 1, or 2.\n- You can use a copy of the temple to save time.\n- The temple is not guaranteed to be completely destroyed. If the temple is completely destroyed, then the function will return 0.\n- The temple will be completely destroyed if it does not have any living cells at the end of T turns.\n- You can use the following formulas to count the number of alive cells:\n\n$$\\sum_{i=1}^{m} \\sum_{j=1}^{n} grid[i][j]$$\n\n$$\\sum_{i=1}^{m} \\sum_{j=1}^{n} grid[i][j]$$\n\n- The result is an integer representing the number of alive cells at the end of T turns.\n\nExample 1:\nInput:\nm = 2, n = 2, T = 1, grid = [[1, 0], [0, 1]]\n\nOutput:\n2\nExplanation:\nThe 2x2 temple starts as follows:\n\n- T = 1, grid = [[1, 0], [0, 1]]\n- T = 2, grid = [[1, 0], [0, 1]]\n- T = 3, grid = [[1, 0], [0, 1]]\n- T = 4, grid = [[1, 0], [0, 1]]\n- T = 5, grid = [[1, 0], [0, 1]]\n- T = 6, grid = [[1, 0], [0, 1]]\n- T = 7, grid = [[1, 0], [0, 1]]\n- T = 8, grid = [[1, 0], [0, 1]]\n- T = 9, grid = [[1, 0], [0, 1]]\n- T = 10, grid = [[1, 0], [0, 1]]\n- T = 11, grid = [[1, 0], [0, 1]]\n- T = 12, grid = [[1, 0], [0, 1]]\n- T = 13, grid = [[1, 0], [0, 1]]\n- T = 14, grid = [[1, 0], [0, 1]]\n\n- The 2x2 temple is fully destroyed, so the answer is 2.\n\nExample 2:\nInput:\nm = 2, n = 2, T = 2, grid = [[1, 0], [0, 1]]\n\nOutput:\n4\nExplanation:\n- T = 1, grid = [[1, 0], [0, 1"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('this sentence has thirtyone letters') == 'this sentence has thirtyone letters'\nassert solution('sentence') =='sentence'\nassert solution('is') == 'is'\nassert solution('has') == 'has'\nassert solution('number') == 'number'\n"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''this sentence\nhas\n$\nletters''') == 'this sentence has thirtyone letters'\nassert solution('''is\nthe\nnumber\nof\nletters\nhere''') == 'thirty is the number of letters here'\nassert solution('''the\nnumber\nof\nletters\nhere''') == 'thirty is the number of letters here'\nassert solution('''this\nsentence\nhas\n$\nletters''') == 'this sentence has thirtyone letters'\nassert solution('''$\nis\nthe\nnumber\nof\nletters\nhere''') == 'thirty is the number of letters here'\n"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('this sentence has thirtyone letters') == 'this sentence has thirtyone letters'\nassert solution('$ is the number of letters here') == 'thirty is the number of letters here'\nassert solution('$ is the number of letters here $') == 'thirty is the number of letters here'\nassert solution('$ is the number of letters here $ is the number of letters here') == 'thirty is the number of letters here'\nassert solution('this $ is the number of letters here') == 'thirty is the number of letters here'\n"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == 'four'\nassert solution('3') == 'three'\nassert solution('2') == 'two'\nassert solution('1') == 'one'\nassert solution('0') == ''\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABCD') == 0\nassert solution('ABCDE') == 5\nassert solution('ABCDEFG') == 7\nassert solution('ABCDEFGH') == 7\nassert solution('ABCDEFGHH') == 8\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5\nassert solution('1k') == 0\nassert solution('1q') == 0\nassert solution('11111') == 5\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5\nassert solution(\"i\") == 0\nassert solution(\"ii\") == 1\nassert solution(\"iiii\") == 0\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5\nassert solution(\"AaEbFabG\") == 5\nassert solution(\"EaEb\") == 2\nassert solution(\"EaEbABC\") == 2\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5\nassert solution(\"DeEfFa\") == 6\nassert solution(\"DeEfFa\") == 5\nassert solution(\"DeEfFa\") == 5\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('A') == 0\nassert solution('a') == 0\nassert solution('aAb') == 3\nassert solution('aAbAb') == 0\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\n\"\"\"\n\nimport sys\n\nfrom collections import Counter"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\nassert solution(\"aaBBb\") == \"1\"\nassert solution(\"aaaaaaaaa\") == \"0\"\nassert solution(\"BbBbbBB\") == \"3\"\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('EaEbFabG') == '5'\nassert solution('A') == '0'\nassert solution('b') == '1'\nassert solution('c') == '2'\nassert solution('d') == '3'\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0\nassert solution(\"A\") == 0\nassert solution(\"Aa\") == 0\nassert solution(\"b\") == 1\nassert solution(\"aAbc\") == 1\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Odd 6'\nassert solution('2 3') == 'Not a moose'\nassert solution('5 2') == 'Even 6'\nassert solution('7 1') == 'Not a moose'\nassert solution('6 4') == 'Even 10'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('0 0') == 'Not a moose'\nassert solution('2 0') == 'Not a moose'\nassert solution('0 1') == 'Not a moose'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3''') == 'Odd 6'\nassert solution('''3 3''') == 'Even 6'\nassert solution('''2 5''') == 'Odd 10'\nassert solution('''5 9''') == 'Even 10'\nassert solution('''0 0''') == 'Not a moose'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('-3 3') == 'Not a moose'\nassert solution('-3 0') == 'Not a moose'\nassert solution('0 3') == 'Not a moose'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('2 2') == 'Not a moose'\nassert solution('3 5') == 'Odd 10'\nassert solution('4 2') == 'Not a moose'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('3 2') == 'Not a moose'\nassert solution('3 3') == 'Not a moose'\nassert solution('1 0') == 'Not a moose'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('0 2') == 'Not a moose'\nassert solution('3 2') == 'Even 6'\nassert solution('3 4') == 'Odd 10'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Not a moose'\nassert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('0 0') == 'Not a moose'\nassert solution('0 1') == 'Odd 1'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('0 3') == 'Not a moose'\nassert solution('4 4') == 'Not a moose'\nassert solution('20 3') == 'Not a moose'\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('2 0') == 'Not a moose'\nassert solution('0 2') == 'Not a moose'\nassert solution('0 0') == 'Not a moose'\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''tomo\nmono\ndak''') == '1'\nassert solution('''ja\nla\n52''') == '2'\nassert solution('''tomo\nmono\ndak''') == '1'\nassert solution('''a1\nb2\nc3''') == '3'\nassert solution('''a1\na2\na3''') == '3'\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '0'\nassert solution('abcd') == '0'\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('tomo\\nmono\\ndak\\n6666') == '1'\nassert solution('ja\\nla\\n52') == '2'\nprint('Tests passed')\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3\ntomo\nmono\ndak\n6666\n\"\"\") == \"1\\n\"\nassert solution(\n\"\"\"\n2\nja\nla\n52\n\"\"\") == \"2\\n\"\nassert solution(\n\"\"\"\n3\na\nab\naba\n\"\"\") == \"2\\n\"\nassert solution(\n\"\"\"\n5\nt\nu\nv\nw\nx\n\"\"\") == \"0\\n\"\nassert solution(\n\"\"\"\n3\n0\n1\n2\n\"\"\") == \"3\\n\"\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"tomo\\nmono\\ndak\\n6666\") == \"1\"\nassert solution(\"ja\\nlae\\n52\") == \"2\""
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('tomo\\nmono\\ndak\\n567') == '1'\nassert solution('ja\\nla\\n52') == '2'\nassert solution('dak\\n6666') == '1'\nassert solution('hello\\nworld') == '0'\nassert solution('1\\nt2\\nt3\\nt4\\nt5') == '1'\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tomo') == 1\nassert solution('mono') == 1\nassert solution('dak') == 1\nassert solution('5555') == 1\nassert solution('2345') == 1\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('tomo') == '1'\nassert solution('mono') == '2'\nassert solution('dak') == '3'\nassert solution('ja') == '1'\nassert solution('la') == '2'\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A') == '..#..'\nassert solution('AB') == '.#.#.\\n.#.#.\\n.#.#.\\n#.AB#'\nassert solution('ADOBECODEBANC') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\nassert solution('DOBEOBABO') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('AB') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.A.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\nassert solution('ABC') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.A.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\nassert solution('CDE') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.A.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\nassert solution('EFG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.A.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\nassert solution('ABCD') == '.#.#.#.#.*.#.#.#'\nassert solution('DOGF') == '..#...#...*..'\nassert solution('ABCDEGH') == '.#.#.#.#.*.#.#.#'\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"AB\") == \"..#...#...#..\"\nassert solution(\"ABCDEFGHIJKL\") == \"..#...#...#..\"\nassert solution(\"WENDY\") == \"..*..*.*.*.\n.W.*.X.*.G.*.D.*.Y.*.T.*.A.*.L.*.O.*.N.*.K.*.M.*\"\nprint(\"All set? Click \\\"Check\\\" to review your code and earn rewards!\")"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \".#..\\n.#.#\\n#.A.#\\n.#.#\\n..#..\"\nassert solution(\"AB\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\nassert solution(\"ABDC\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\nassert solution(\"ABCDEFG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''A''') == '''..#..\n.#.#.\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"Wendy\") == \"\"\"..#...#...*..\n.*.*.#.#.*.*.\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABC') == '..#..'\nassert solution('AB') == '.#.#'\nassert solution('ABC') == '.#.#.#'\nassert solution('A') == '..#..'\nassert solution('ABCDE') == '..#...#...*..'\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A') == '..#..'\nassert solution('B') == '.#.#.'\nassert solution('C') == '.#.#.'\nassert solution('D') == '..#..'\nassert solution('E') == '.#.#.'\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A') == '..#..'\nassert solution('AB') == '.#.#.\\n.#.#.\\n#.AB#'\nassert solution('ABC') == '..#...\\n.#.#.#\\n.#.#.#\\n#.ABC#'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '3.141593'\nassert solution('21\\n') == '1385.442360'\n'''\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1385.442360\\n882.000000\""
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '3.141593'\nassert solution('2\\n') == '2.000000'\nassert solution('42\\n') == '1385.442360'\nassert solution('21\\n') == '882.000000'\nprint('All tests past!')\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport sys\n\n_, r = map(int, sys.stdin.readline().split())\n\nprint((2 * 3.141592653589793) - (3.141592653589793 * r * r))\nprint((2 * 3.141592653589793) * r * r)\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3.141593\"\nassert solution(stdin) == \"2.000000\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n-2 3') == '2'\nassert solution('3\\n1 -2 3') == '2'\nassert solution('3\\n-1 2 3') == '2'\nassert solution('5\\n129 44 394 253 147') == '0'\nassert solution('5\\n-129 44 394 253 147') == '0'\n"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n-1') == '0'\nassert solution('2\\n0 0') == '0'\nassert solution('2\\n2 -3') == '0'\nassert solution('2\\n-3 -4') == '0'\nassert solution('2\\n-3 -3') == '0'\n"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 -2 3''') == 2\nassert solution('''5\n129 44 394 253 147''') == 0\nassert solution('''2\n1 -2''') == -1\nassert solution('''10\n1 -2 3 4 -5''') == -3\nassert solution('''100\n1 -2 3 4 -5''') == -3\n"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n-2 3') == '2'\nassert solution('2\\n1 -2 3') == '0'\nassert solution('1\\n0') == '0'\nassert solution('2\\n0 0') == '0'\nassert solution('1\\n-1') == '-1'\n"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 -2 3''') == '2'\nassert solution('''5\n129 44 394 253 147''') == '0'\nassert solution('''1\n-4\n5\n-2\n-2\n1\n-1''') == '0'\nassert solution('''1\n-4\n5\n-2\n-2\n1\n-1''') == '-6'\nassert solution('''1\n-4\n5\n-2\n-2\n1\n-1''') == '-6'\n"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n-2 3\") == \"2\"\nassert solution(\"3\\n1 -2 3\") == \"2\"\nassert solution(\"3\\n-2 3 1\") == \"2\"\nassert solution(\"3\\n-2 3\") == \"2\"\nassert solution(\"3\\n-2 3 4\") == \"7\"\n"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 -2 3''') == 2\nassert solution('''5\n129 44 394 253 147''') == 0'''\n"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 -2 3') == '2'\nassert solution('5\\n129 44 394 253 147') == '0'\nassert solution('10\\n-678 484 489 -265 -941 -386 -232 -72 -943 -51 -728 -631 -178 -564 -441 -839 -494 -564 -539 -831 -418 -859 -566 -654 -360 -712 -631 -769 -836 -566 -636 -728 -445 -734 -539 -738 -731 -218 -321 -445 -459 -564 -878 -330 -769 -890 -681 -947 -170 -892 -965 -431 -729 -566 -619 -564 -879 -947 -758 -355 -849 -402 -539 -720 -421 -372 -127 -944 -850 -249 -945 -701 -106 -687 -959 -943 -102 -943 -112 -704 -10 -496 -874 -749 -656 -566 -766 -726 -845 -510 -324 -637 -564 -555 -487 -818 -831 -343 -734 -823 -634 -739 -918 -941 -147 -554 -567 -485 -423 -510 -769 -943 -939 -538 -735 -769 -862 -943 -838 -936 -917 -890 -755 -902 -916 -324 -918 -621 -746 -639 -634 -582 -974 -114 -796 -207 -826 -914 -899 -733 -927 -216 -945 -912 -948 -946 -981 -859 -834 -859 -841 -839 -594 -879 -839 -576 -741 -110 -936 -719 -895 -481 -597 -634 -878 -569 -926 -891 -926 -836 -481 -634 -475 -107 -350 -433 -666 -947 -685 -865 -450 -819 -861 -957 -635 -901 -834 -945 -941 -966 -748 -0 -764 -674 -644 -919 -691 -942 -832 -817 -548 -566 -547 -656 -845 -662 -893 -869 -749 -916 -300 -559 -829 -835 -903 -945 -819 -969 -883 -836 -732 -805 -948 -811 -979 -937 -890 -966 -859 -558 -539 -764 -494 -455 -838 -386 -732 -816 -272 -710 -518 -419 -288 -734 -892 -769 -938 -725 -841 -918 -923 -914 -945 -738 -927 -726 -936 -814 -918 -885 -873 -948 -437 -822 -939 -532 -922 -913 -936 -876 -739 -902 -937 -839 -903 -902 -926 -922 -904 -959 -946 -836 -843 -698 -959 -914 -917 -903 -932 -945 -820 -932 -819 -921 -849 -934 -932 -839 -895 -934 -932 -829 -868 -934 -879 -924 -849 -929 -908 -847 -941 -938 -834 -917 -845 -945 -929 -846 -929 -898 -898 -900 -908 -902 -878 -945 -847 -873 -945 -902 -919 -865 -945 -879 -897 -959 -899 -854 -913 -944 -929 -932 -918 -913 -926 -923 -908 -934 -890 -909 -918 -890 -936 -931 -904 -916 -914 -907 -890 -890 -942 -898 -873 -914 -867 -947 -869 -929 -732 -942 -878 -932 -882 -922 -842 -937 -932 -943 -845 -935 -936 -922 -936 -912 -923 -921 -856 -932 -869 -891 -907 -935 -913 -934 -907 -890 -878 -944 -869 -909 -945 -908 -908 -943 -945 -913 -890 -942 -934 -936 -895 -913 -902 -936 -933 -907 -916 -903 -918 -895 -906 -945 -856 -917 -912 -924 -916 -924 -916 -849 -921 -929 -895 -914 -945 -928 -917 -913 -852 -908 -934 -908 -918 -914 -913 -912 -908 -895 -908 -942 -941 -908 -924 -903 -919 -890 -938 -943 -926 -923 -834 -932 -869 -896 -942 -918 -937 -935 -907 -854 -907 -890 -914 -890 -878 -934 -943 -846 -890 -874 -907 -935 -922 -891 -919 -897 -916 -931 -916 -916 -913 -934 -890 -929 -874 -945 -917 -907 -942 -919 -902 -929 -922 -927 -890 -894 -942 -918 -934 -919 -895 -938 -871 -932 -908 -902 -903 -928 -916 -913 -916 -906 -916 -909 -913 -908 -918 -913 -922 -903 -937 -934 -932 -918 -924 -923 -895 -919 -914 -913 -908 -945 -938 -922 -934 -919 -942 -924 -919 -924 -918 -898 -902 -867 -932 -879 -903 -934 -897 -869 -932 -886 -912 -916 -912 -908 -903 -913 -907 -905 -933 -908 -906 -907 -912 -908 -913 -927 -908 -905 -891 -902 -908 -913 -916 -916 -922 -869 -942 -914 -915 -916 -906"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 -2 3''') == \"2\"\nassert solution('''5\n129 44 394 253 147''') == \"0\"\n'''\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n2') == '4'\nassert solution('2\\n3') == '6'\nassert solution('2\\n3\\n4') == '8'\nassert solution('3\\n2\\n3') == '9'\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n\"\n    \"2 2 2\\n\"\n) == \"6\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"4 1 2\\n\"\n) == \"8\\n\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 1 2') == '6'\nassert solution('2\\n4 1 2') == '8'\nassert solution('2\\n4 2 1 2') == '8'\nassert solution('2\\n4 2 3 1 2') == '8'\nassert solution('2\\n4 2 3 2 1') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n\n--------\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2') == '6'\nassert solution('2\\n2\\n2') == '6'\nassert solution('2\\n1\\n2') == '8'\nassert solution('3\\n2\\n2') == '8'\nassert solution('3\\n4\\n2') == '10'\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == '6'\nassert solution('3 1 2') == '8'\nassert solution('3 2 1') == '8'\nassert solution('4 1 2') == '10'\nassert solution('4 2 1') == '12'\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '6'\nassert solution('4 1 2') == '8'\nassert solution('3 3 3') == '9'\nassert solution('5 5 5') == '12'\nassert solution('4 1 2') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 2 2') == 6\nassert solution('2\\n1 1 1') == 8\nassert solution('3\\n2 2 2') == 6\nassert solution('3\\n1 1 1') == 8\nassert solution('3\\n1 2 2') == 7\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 4 4\n1111\n1S01\n1011\n0U11''') == '2'\nassert solution(\n'''2 4 4\n1111\n1S01\n1011\n0L11''') == 'NOT POSSIBLE'\nassert solution(\n'''2 4 4\n1111\n1S01\n1011\n0R11''') == 'NOT POSSIBLE'\nassert solution(\n'''2 4 4\n1111\n1S01\n1011\n0D11''') == 'NOT POSSIBLE'\nassert solution(\n'''2 4 4\n1111\n1S01\n1011\n0D11''') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 4 4\") == \"2\"\nassert solution(\"3 4 3\") == \"1\"\nassert solution(\"2 4 4\") == \"NOT POSSIBLE\"\nassert solution(\"5 4 3\") == \"2\"\nassert solution(\"4 3 4\") == \"1\"\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n' + '1' * 100 + '1' * 100 + '\\n' + '0' * 100 + '1' * 100 + '\\n' + 'S' + '\\n' * 99 + '\\n') == '1'\nassert solution('1\\n' + '1' * 100 + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '0' * 100 + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '0' * 100 + '\\n' + '\\n') == '2'\nassert solution('1\\n' + '1' * 100 + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '0' * 100 + '\\n' + '0' * 100 + '\\n' + '\\n') == 'NOT POSSIBLE'\nassert solution('1\\n' + '1' * 100 + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '0' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '\\n') == '2'\nassert solution('1\\n' + '1' * 100 + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '1' * 100 + '\\n' + '0' * 100 + '\\n' + '0' * 100 + '\\n' + '\\n') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2 4 4\n1111\n1S01\n1011\n0U11'''\n) == '2'\nassert solution(\n'''2 4 4\n1111\n1S01\n1011\n0U11\n1U11'''\n) == '2'\nassert solution(\n'''2 4 4\n1111\n1S01\n1011\n0U11\n0U11'''\n) == '2'\nassert solution(\n'''2 4 4\n1111\n1S01\n1011\n0U11\n1U11'''\n) == 'NOT POSSIBLE'\nassert solution(\n'''2 4 4\n1111\n1S01\n1011\n0U11\n1U11\n1U11'''\n) == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11''') == 'NOT POSSIBLE'\n\n'''\nfrom sys import stdin\nfrom collections import deque"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U0U''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U0U''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U0U0''') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n1011\n0L11''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11\n1011\n0U11\n1011\n0L11''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n1011\n0U11\n1011\n0L11''') == '2'\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"2 4 4\n1111\n1S01\n1011\n0U11\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"2 4 4\n1111\n1S01\n1011\n0L11\"\"\"\n) == \"NOT POSSIBLE\"\n\nassert solution(\n\"\"\"2 4 4\n0111\n1010\n1101\n0S0R\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"2 4 4\n0111\n1010\n1101\n0S0R\"\"\"\n) == \"NOT POSSIBLE\"\n\nassert solution(\n\"\"\"1 2 1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U00''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n1U00''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n1U00\n1U00''') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5\\n3 1 2 1 1\\n') == '4'\nassert solution('7 5\\n1 5 4 3 2 1 1\\n') == '3'\n\nprint('Test success!')\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5 5\n3 1 2 1 1\n''') == '4'\n\nassert solution(\n'''7 5\n1 5 4 3 2 1 1\n''') == '3'\n\nassert solution(\n'''10 5\n1 5 4 3 2 1 1 1 2 2 1 1\n''') == '8'\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == \"4\"\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\n3 1 2 1 1''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1''') == '3'\nprint('Passed.')\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"20\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"20\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"20\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"20\"\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'\nassert solution('''8 10\n6 8 3 2 4 1 2 1 3\n''') == '4'\nassert solution('''11 10\n8 9 2 3 4 3 2 1 1 2 3 4 5\n''') == '4'\nassert solution('''11 10\n9 9 9 2 3 4 3 2 1 1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4'\n\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'\n"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\"\nassert solution(\"5\\nRSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\"\nassert solution(\"5\\nPPRRS\\n2\\nSSPPR\\n\") == \"5\\n15\"\nassert solution(\"5\\nRSPPR\\n1\\nPPRRS\\n\") == \"5\\n15\"\nassert solution(\"5\\nSSPPR\\n1\\nPPRRS\\n\") == \"5\\n10\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"SSPPR\\n1\\nSSPPR\\n\") == \"10\\n15\"\nassert solution(\"SSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\"\nassert solution(\"SSPPR\\n3\\nPPPRS\\nRSPPS\\n\") == \"9\\n15\"\nassert solution(\"RSPPR\\n3\\nRSPPR\\n\") == \"9\\n9\"\nassert solution(\"SSPPR\\n3\\nSSPPR\\n\") == \"10\\n10\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '10'\nassert solution('5\\nPPRRS\\nRRSSP\\nRRSSP\\n') == '15'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nPPRRS\\n') == '15'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nPPRRS\\n') == '15'\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\"\nassert solution(\n\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\") == \"10\\n15\"\nassert solution(\n\"5\\nSSPPR\\n2\\nPPRRS\\nRSPPR\") == \"10\\n5\"\nassert solution(\n\"5\\nSSPPR\\n2\\nPPRRS\\nRSSPPR\") == \"10\\n5\"\nassert solution(\n\"5\\nSSPPR\\n2\\nPPRRS\\nPPRRS\") == \"10\\n10\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '10\\n15'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nSSPPR\\n') == '10\\n15'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15'\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '10\\n15'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15'\nassert solution('5\\nSSPPR\\n5\\nSSSPR\\nSPSRR\\n') == '10\\n10'\nassert solution('5\\nSSPPR\\n5\\nSSSPR\\nSPSRR\\n') == '10\\n10'\nassert solution('5\\nSSPPR\\n5\\nSSSPR\\nSPSRR\\n') == '10\\n10'\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n''') == '10'\n\nassert solution('''5\nPPPPP\n1\nPPPPP\n''') == '15'\n\nassert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '15'\n\nassert solution('''5\nPPRRS\n2\nPPRRS\n''') == '15'\n\nassert solution('''5\nPPPRR\n2\nPPPRR\n''') == '15'"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n''') == '10\\n15'\nassert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '10\\n15'\nassert solution('''5\nSSPPR\n2\nPPRSS\nRRSSP\n''') == '10\\n15'\nassert solution('''5\nSSPPR\n3\nPPPPP\nPPPPP\nPPPPP\n''') == '15\\n25'\nassert solution('''5\nSSPPR\n3\nPPPPP\nRRRSP\nRRRRR\n''') == '15\\n25'\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n''') == '5'\nassert solution('''5\nRSPPR\n1\nSPPRR\n''') == '10'\nassert solution('''5\nRSPPR\n2\nPPRRS\nRRSSP\n''') == '15'\nassert solution('''5\nRSPPR\n2\nPPRRS\nPPRRS\n''') == '15'\nassert solution('''5\nRSPPR\n3\nPRPPS\nRSPPR\nRSPPR\n''') == '10'\n"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n0\n2\n5\n9\n10\n17\n\"\"\"\n) =='still running'\n\nassert solution(\n\"\"\"\n0\n2\n5\n9\n10\n17\n\"\"\"\n) == '4'\n"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n7\n11\n''') == '4'\nassert solution('''5\n2\n5\n9\n10\n17\n''') =='still running'\n"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n7\\n11') == '4'\nassert solution('5\\n2\\n5\\n9\\n10\\n17') =='still running'\nprint(\"The tests passed\")\n"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n7\n11''') == \"4\"\nassert solution('''5\n2\n5\n9\n10\n17''') == \"still running\"\n'''\nimport sys\nsys.setrecursionlimit(10000)"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n7\n11\n''') == '4'\nassert solution('''5\n2\n5\n9\n10\n17\n''') =='still running'\nassert solution('''1\n''') == '0'\nassert solution('''2\n''') == '0'\nassert solution('''3\n''') =='still running'\n"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n7\n11\n''') == '4'\nassert solution('''5\n2\n5\n9\n10\n17\n''') =='still running'"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\\n2\\n5\\n9\\n10\") == \"still running\"\nassert solution(\"10\\n2\\n5\\n9\\n10\") == \"2\"\nassert solution(\"10\\n2\\n5\\n9\\n10\\n17\") == \"still running\"\nassert solution(\"10\\n2\\n5\\n9\\n10\\n17\\n11\") == \"4\"\n"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n7\n11\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n2\n5\n9\n10\n17\n\"\"\") == \"still running\"\nassert solution(\"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n7\\n11\\n\") == \"4\"\nassert solution(\"2\\n5\\n9\\n10\\n17\\n\") == \"still running\"\n"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 2') == 'impossible'\nassert solution('1\\n1') == '1.0'\nassert solution('3\\n1 3 2') == '0.5'\nassert solution('3\\n1 3 2 2') == 'impossible'\nassert solution('2\\n3 4') == 'impossible'\n"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n6 1 3 2 2 3''') == '0.6'\nassert solution('''4\n2 2''') == 'impossible'\nassert solution('''1\n2''') == 'impossible'\nassert solution('''5\n0 0 0 0 0''') == 'impossible'\nassert solution('''8\n4 1 1 1 1 1 1''') == 'impossible'\n"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.6'\nassert solution('2\\n2\\n') == 'impossible'\nassert solution('6\\n6\\n1 3 2 2 3') == '0.6'\nassert solution('2\\n2\\n1 1') == 'impossible'\nassert solution('6\\n6\\n1 2 1 1 1 1') == '0.5'\n"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n6 1 3 2 2 3') == '0.6'\nassert solution('2\\n2 2') == 'impossible'\nprint('Success')\n"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''6\n    6 1 3 2 2 3'''\n) == '0.6'\nassert solution(\n    '''2\n    2 2'''\n) == 'impossible'\nprint('Test: PASSED')\n"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.5\"\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n6\\n1 3 2 2 3') == '0.6'\nassert solution('2\\n2\\n2') == 'impossible'\nassert solution('3\\n1 3 2') == 'impossible'\nassert solution('4\\n1 1 1 1') == '0.25'\nassert solution('5\\n2 2 2 1 1') == 'impossible'\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4 1 4') == \"Emma\"\nassert solution('1 6 1 6') == \"Tie\"\nprint(\"All set? Click \\\"Check\\\" to earn cool rewards!\")"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Gunnar\"\n\"\"\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Emma\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 4 1 4\n1 6 1 6''') == 'Emma'\nassert solution('''1 8 1 8\n1 10 2 5''') == 'Tie'\nassert solution('''3 6 3 6\n3 3 3 3''') == 'Tie'\nassert solution('''3 6 3 6\n4 3 4 3''') == 'Gunnar'\nassert solution('''3 6 3 6\n5 3 4 4''') == 'Gunnar'\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Tie\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6\\n') == 'Emma'\nassert solution('1 8 1 8\\n1 10 2 5\\n') == 'Tie'\n\nfrom sys import exit\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"\n\"\"\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"\nassert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Tie\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Gunnar\"\nassert solution(stdin) == \"Emma\"\nassert solution(stdin) == \"Tie\"\n\n\"\"\""
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 mumble 5''') =='makes sense'\nassert solution('''8\n1 2 3 mumble mumble 7 mumble 8''') =='something is fishy'\n\n'''"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n        '5\\n1 2 3 mumble 5\\n'\n    ) =='makes sense'\n\nassert solution(\n        '8\\n1 2 3 mumble mumble 7 mumble 8\\n'\n    ) =='something is fishy'\n\nassert solution(\n        '4\\n1 mumble 2 mumble 3 mumble 4\\n'\n    ) =='something is fishy'\n\nassert solution(\n        '1\\n1\\n'\n    ) =='something is fishy'\n\nassert solution(\n        '9\\nmumble 9\\n'\n    ) =='something is fishy'"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1 2 3 mumble 3\\n1 2 3 mumble 4\\n') =='makes sense'\nassert solution('1\\n1 2 3 mumble 3\\n1 2 3 mumble 4\\n1 2 3 mumble 5\\n1 2 3 mumble 6\\n1 2 mumble mumble 7\\n1 2 3 mumble 8') =='something is fishy'\nassert solution('1\\n1 2 3 mumble 3\\n1 2 3 mumble 4\\n1 2 3 mumble 5\\n1 2 3 mumble 6\\n1 2 3 mumble 7\\n1 2 3 mumble 8') =='something is fishy'\nassert solution('1\\n1 2 3 mumble 3\\n1 2 3 mumble 4\\n1 2 3 mumble 5\\n1 2 3 mumble 6\\n1 2 3 mumble 7\\n1 2 3 mumble 8\\n1 2 3 mumble 9') =='something is fishy'\nassert solution('1\\n1 2 3 mumble 3\\n1 2 3 mumble 4\\n1 2 3 mumble 5\\n1 2 3 mumble 6\\n1 2 3 mumble 7\\n1 2 3 mumble 8\\n1 2 3 mumble 9\\n1 2 3 mumble 10') =='something is fishy'\n"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') =='makes sense'\nassert solution('8') =='something is fishy'\nassert solution('0') =='makes sense'\nassert solution('5 1 2 3 mumble 5') =='makes sense'\nassert solution('8 1 2 3 mumble mumble 7 mumble 8') =='something is fishy'\n'''\n\n'''\n    def decodeMumble(self, mumble: str) -> str:\n        mumble = mumble.split()\n        for i in range(len(mumble)):\n            if mumble[i] =='mumble':\n                mumble[i] = ''\n        return''.join(mumble)\n'''\n"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 mumble 5') =='makes sense'\nassert solution('8') =='something is fishy'\nassert solution('1 2 3 mumble mumble 7 mumble 8') =='something is fishy'\nassert solution('1 2 3 mumble mumble 1 mumble 8') =='something is fishy'\nassert solution('1 2 3 mumble mumble 3 mumble 4') =='something is fishy'\n"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2 3 mumble 5') =='makes sense'\nassert solution('1\\n2 3 4 mumble mumble 7 mumble 8') =='something is fishy'\n"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 mumble 5') =='makes sense'\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') =='something is fishy'\n"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3 mumble 5\\n') =='makes sense'\nassert solution('1\\n2 3 mumble mumble 7 mumble 8\\n') =='something is fishy'\n\"\"\"\n\n\"\"\"\n-------------------------------------------------\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"makes sense\""
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n\nassert solution('1 1 1 1 1') == '-1 -1'\nassert solution('2 2 2 2 2') == '-1 -1'\nassert solution('3 3 3 3 3') == '-1 -1'\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\nassert solution(\"2 2 3 3 4\") == \"2 121\"\nassert solution(\"2 2 2 2\") == \"2 121\"\nassert solution(\"0 0 1 1 1 1\") == \"0 1\"\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(f\"\\nPassed {stdin} test!\")\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nassert solution('5 5 5 5 5 5 5') == '3 0'\nassert solution('2 1 1 1 1') == '1 0'\nassert solution('3 2 1 1') == '2 1'\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\nassert solution(\"10 7 11 19 17\") == \"2 100\"\nassert solution(\"11 5 13 19 17\") == \"2 110\"\nassert solution(\"5 9 10 11 12\") == \"0 0\"\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 3 6 9 12 15''') == '1 18'\nassert solution(\n'''4 9 25 49 81''') == '2 121'\nassert solution(\n'''4 9 25 49 9''') == '0 0'\nassert solution(\n'''4 9 25 49 15''') == '0 0'\nassert solution(\n'''2 1 2''') == '0 0'\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\n\n\"\"\"\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4 5\") == \"1 18\"\nassert solution(\"1 3 2 4 5\") == \"1 18\"\nassert solution(\"3 4 6 9 12 15\") == \"1 18\"\nassert solution(\"3 4 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == None\n\n>>> assert solution('4 9 25 49 81') == None\n\n>>> assert solution('5 3 6 9 12 15') == None\n\n>>> assert solution('5 9 1 18 15') == None\n\n>>> assert solution('5 9 10 11 16') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 4 8 16 17') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 3 4 5') == None\n\n>>> assert solution('2 3 4 5 6') == None\n\n>>> assert solution('1 2 4 8 16') == None\n\n>>> assert solution('1 2 4 8 17') == None\n\n>>> assert solution('1 2 3 6 9 12 15') == None\n\n>>> assert solution('1 2 3 6 9 17') == None\n\n>>> assert solution('"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4\\n1 0\\n0 2\\n2 3\\n3 1\\n1 5\\n0 6') == 'CORRECT'\nassert solution('6\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7') == 'INCORRECT'\nassert solution('6\\n1 2\\n1 5\\n6 3\\n2 4\\n3 1\\n5 0\\n4 7') == 'INCORRECT'\nassert solution('6\\n2 4\\n1 3\\n6 4\\n3 1\\n5 0\\n4 7') == 'INCORRECT'\nassert solution('6\\n3 1\\n1 5\\n6 4\\n2 4\\n3 1\\n5 0\\n4 7') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8') == 'CORRECT'\nassert solution('4') == 'INCORRECT'\nassert solution('8 8') == 'INCORRECT'\nassert solution('8 9') == 'INCORRECT'\nassert solution('9 9') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8') == 'CORRECT'\nassert solution('4') == 'INCORRECT'\nassert solution('5') == 'INCORRECT'\nassert solution('4') == 'INCORRECT'\nassert solution('7') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'CORRECT'\nassert solution('8') == 'CORRECT'\nassert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4') == 'CORRECT'\nassert solution('4\\n2 3\\n1 0\\n0 2\\n3 1\\n') == 'CORRECT'\n'''\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4\\n4\\n4') == \"CORRECT\"\nassert solution('3\\n1 0\\n0 2') == \"INCORRECT\"\nassert solution('8\\n2 5\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4') == \"CORRECT\"\nassert solution('8\\n2 5\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4') == \"CORRECT\"\nassert solution('4\\n4\\n4\\n4') == \"CORRECT\"\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"CORRECT\"\nassert solution(\"4\") == \"INCORRECT\"\nassert solution(\"4\\n0 0\\n1 0\\n2 0\\n3 0\") == \"INCORRECT\"\nassert solution(\"4\\n2 0\\n3 1\\n0 0\\n1 0\\n2 0\") == \"CORRECT\"\nassert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\") == \"INCORRECT\"\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8') == 'CORRECT'\nassert solution('4') == 'INCORRECT'\nassert solution('3') == 'INCORRECT'\nassert solution('2') == 'INCORRECT'\nassert solution('1') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '8'\n    '1 5'\n    '6 2'\n    '3 1'\n    '5 0'\n    '4 6'\n    '0 3'\n    '2 7'\n    '7 4'\n    '\\n'\n) == 'CORRECT'\nassert solution(\n    '4'\n    '2 3'\n    '1 0'\n    '0 2'\n    '3 1'\n    '\\n'\n) == 'INCORRECT'\nassert solution(\n    '5'\n    '5 5'\n    '5 4'\n    '5 3'\n    '5 2'\n    '4 5'\n    '3 4'\n    '2 3'\n    '1 5'\n    '4 0'\n    '3 1'\n    '\\n'\n) == 'INCORRECT'\nassert solution(\n    '7'\n    '1 5'\n    '6 2'\n    '3 1'\n    '5 0'\n    '4 6'\n    '0 3'\n    '2 7'\n    '7 4'\n    '5 1'\n    '6 6'\n    '\\n'\n) == 'INCORRECT'\nassert solution(\n    '4'\n    '1 0'\n    '0 2'\n    '3 1'\n    '\\n'\n) == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8''') == '''CORRECT'''\nassert solution('''4''') == '''INCORRECT'''\nassert solution('''7''') == '''CORRECT'''\nassert solution('''6''') == '''INCORRECT'''\nassert solution('''5''') == '''CORRECT'''\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == 'CORRECT'\nassert solution('8') == 'CORRECT'\nassert solution('1') == 'INCORRECT'\nassert solution('1 2\\n1 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1') == 'INCORRECT'\n\"\"\""
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 1 1\n1 0 1\n1 1 0''') == '1 1 1'\nassert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0''') == '1 2 3 1 11'\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 1 1\n1 0 1\n1 1 0''') == '1 1 1'\nassert solution('''0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\nassert solution('''2\n1 1\n1\n2 1\n''') == '1 1'\nassert solution('''1\n1\n2\n2\n3\n3\n''') == '2 1'\nassert solution('''3\n1 1\n1\n1\n1\n''') == '1 1'\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n0 1 1\\n1 0 1\\n1 1 0\\n') == '1 1 1'\nassert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n') == '1 2 3 1 11'\n\n\"\"\"\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n0 1 1\n1 0 1\n1 1 0\n\"\"\") == \"\"\"1 1 1\n\"\"\"\nassert solution(\n\"\"\"5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n\"\"\") == \"\"\"1 2 3 1 11\n\"\"\"\nassert solution(\n\"\"\"10\n0 0 1 1 1 1 1 1 1 1\n0 0 2 0 2 0 2 0 2 0\n1 2 0 1 3 0 1 3 0 1\n1 0 1 0 1 0 1 0 1 0\n1 2 3 1 0 1 3 0 1 0\n1 0 1 0 1 0 1 0 1 0\n1 2 3 1 0 1 3 0 1 0\n1 0 1 0 1 0 1 0 1 0\n1 2 3 1 0 1 3 0 1 0\n1 0 1 0 1 0 1 0 1 0\n\"\"\") == \"\"\"1 2 3 1 11 11 11 11 11 11 11\n\"\"\"\nassert solution(\n\"\"\"100\n
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n1 1 1\\n1 0 1\\n1 1 0\") == \"\"\nassert solution(\"3\\n0 1 1\\n0 0 2\\n1 2 0\\n1 0 1\\n1 2 3\\n1 0 1\\n1 2 3\\n1 0 1\\n1 2 3\") == \"\"\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '1 1 1'\nassert solution('2 2 2') == '2 2 2'\nassert solution('3 3 3') == '3 3 3'\nassert solution('5 5 5') == '1 1 1 1 1'\nassert solution('6 6 6') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"17 1\") == \"Thursday\"\nassert solution(\"24 7\") == \"Sunday\"\nassert solution(\"24 1\") == \"Thursday\"\nassert solution(\"15 6\") == \"Friday\"\nassert solution(\"1 1\") == \"Thursday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\nassert solution(\"1 2\") == \"Sunday\"\nassert solution(\"1 31\") == \"Sunday\"\nassert solution(\"1 12\") == \"Monday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\nassert solution('1 11') == 'Saturday'\nassert solution('17 11') == 'Sunday'\nassert solution('1 12') == 'Sunday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('15 2') == 'Saturday'\nassert solution('1 1') == 'Thursday'\nassert solution('3 12') == 'Friday'\nassert solution('17 5') == 'Sunday'\nassert solution('16 2') == 'Monday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1, 1) == \"Thursday\"\nassert solution(17, 1) == \"Saturday\"\nassert solution(2, 1) == \"Friday\"\nassert solution(31, 1) == \"Sunday\"\nassert solution(1, 1) == \"Thursday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\nassert solution('1 17') == 'Tuesday'\nassert solution('1 10') == 'Monday'\nassert solution('31 1') == 'Saturday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Saturday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"17 1\") == \"Saturday\"\nassert solution(\"1 1\") == \"Thursday\"\nassert solution(\"6 10\") == \"Sunday\"\nassert solution(\"3 1\") == \"Friday\"\n\"\"\"\n\"\"\"\nAuthor: Weigang Wong\nProblem: http://www.careercup.com/question?id=512629205\n\nSuppose you are a security guard that can record security cameras in the evening and security cameras in the morning.\n\nYou come in with a security camera that records the morning security cameras, and in the evening security cameras.\n\nWrite a program to combine the morning security camera recordings and the afternoon security camera recordings into a single file.\n\n---- Input ----\nThe first line of the input contains an integer T denoting the number of test cases. The description of each test case follows.\n\nThe first line of each test case contains a single integer M denoting the number of morning security cameras.\n\nThe second line contains M positive integers representing the day of the week when the camera was recorded.\n\nThe third line contains N positive integers representing the day of the week when the camera was recorded.\n\n---- Output ----\nFor each test case, output one line containing the combined day of the week of the morning and afternoon camera recordings in the order they were recorded.\n\nConstraints:\n1 <= T <= 10\n1 <= M, N <= 100\n0 <= Day <= 6\n0 <= Mon, Tue, Wed, Thu, Fri, Sat <= 6\n\n---- Test Case ----\n\nInput\n    1\n    2\n    1 2 3 4\n    4 5 6 7\nOutput\n    1 2 3 4 5 6 7\n\nInput\n    2\n    3\n    1 2 3\n    4 5 6\n    7 8 9\n    2 4 5\nOutput\n    1 2 3 4 5 6 7 8 9\n\nInput\n    4\n    5\n    1 2 3 4 5\n    6 7 8 9 10\n    11 12 13 14 15\n    16 17 18 19 20\n    21 22 23 24 25\nOutput\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n\"\"\"\n\"\"\"\nAuthor: Wenru Dong\n\nIf T = 2, the test case is \"1 2 3 4 5 6\". \nThe first line of the input is \"1 2 3 4 5 6\".\n\nThe second line is \"1 2 3 4 5 6\".\n\nIf T = 3, the test case is \"1 2 3 4 5 6 7 8 9\".\nThe first line of the input is \"1 2 3 4 5 6 7 8 9\".\n\nThe second line is \"1 2 3 4 5 6 7 8 9\".\nThe third line is \"1 2 3 4 5 6 7 8 9\".\n\"\"\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\") == \"4\\n4\"\nassert solution(\"2\\n2\\n1\") == \"4\\n4\"\nassert solution(\"2\\n2\\n0\") == \"0\\n0\"\nassert solution(\"3\\n3\\n2\") == \"1\\n1\"\nassert solution(\"3\\n3\\n0\") == \"0\\n0\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n100\n4''') == '4'\nassert solution('''1\n100\n5\nSample Output 2:\n129\n480''') == '129'\nassert solution('''1\n100\n12\nSample Output 2:\n129\n480''') == '129'\nassert solution('''1\n100\n42\nSample Output 2:\n129\n480''') == '129'\nassert solution('''1\n500\n12\nSample Output 2:\n129\n480''') == '129'\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\"\nassert solution(\"1\\n100\\n6\\n\") == \"4\\n40\"\nassert solution(\"1\\n100\\n36\\n\") == \"4\\n40\"\nassert solution(\"1\\n100\\n27\\n\") == \"4\\n40\"\nassert solution(\"1\\n100\\n33\\n\") == \"4\\n40\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\"\nassert solution(\"100\\n500\\n15\\n\") == \"129\\n480\"\nassert solution(\"100\\n50000\\n32\\n\") == \"400000\\n87300\"\nassert solution(\"100\\n5000\\n36\\n\") == \"40000\\n7200\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\"\nassert solution(\"1\\n100\\n4\\n\") == \"4\\n40\"\nassert solution(\"1\\n100\\n4\\n\") == \"4\\n40\"\nassert solution(\"1\\n100\\n4\\n\") == \"4\\n40\"\n\nassert solution(\"1\\n100\\n500\\n\") == \"129\\n480\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n100\n4\n''') == '4'\nassert solution('''100\n500\n12\n''') == '129'\nassert solution('''1\n500\n4\n''') == '240'\nassert solution('''1\n1000\n2\n''') == '160'\nassert solution('''1\n1000\n3\n''') == '140'\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"100\") == \"4\"\nassert solution(\"1000000\") == \"900001\"\nassert solution(\"15\") == \"12\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n\"\"\"\n    ) == \"\"\"4.0\n3\n\"\"\"\n\nassert solution(\n    \"\"\"3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n\"\"\"\n    ) == \"\"\"6.0\n3\n\"\"\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '4.0\\n3'\nassert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '6.0\\n3'\nassert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '4.0\\n3'\nassert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '6.0\\n3'\nassert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '4.0\\n3'\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2\\n\") == \"4.0\\n3\\n\"\nassert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\\n\") == \"6.0\\n3\\n\""
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"5 1\") == \"3.0\"\nassert solution(\"3 2\") == \"6.0\"\nassert solution(\"1 1\\n5 1\\n3 3\\n4\") == \"4.0\\n3\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\") == \"6.0\\n3\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1''') == '4.0'\nassert solution('''5 1''') == '3'\nassert solution('''3 3''') == '6.0'\nassert solution('''3 1''') == '3.0'\nassert solution('''3 2''') == '3.0'\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1''') == '4.0'\nassert solution('''5 1''') == '3'\nassert solution('''3 2''') == '6.0'\nassert solution('''5 4''') == '3'\nassert solution('''3 1''') == '6.0'\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\") == \"4.0\"\nassert solution(\"1 1\\n5 1\\n3 3\\n4\") == \"4.0\"\nassert solution(\"1 1\\n5 1\\n3 3\\n4\") == \"4.0\"\nassert solution(\"1 1\\n5 1\\n3 3\\n4\") == \"4.0\"\nassert solution(\"1 1\\n5 1\\n3 3\\n4\") == \"4.0\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\") == \"4.0\\n3\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"6.0\\n3\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\") == \"6.0\\n3\"\nassert solution(\"4 1\\n3 3\\n3 4\") == \"4.0\\n3\"\nassert solution(\"4 2\\n3 1\\n4 4\\n3 3\\n4 3\\n4 4\") == \"6.0\\n3\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test').read()) == '3.0\\n3'\nassert solution(open('test2').read()) == '6.0\\n3'\nassert solution(open('test3').read()) == '0.5\\n0'\nassert solution(open('test4').read()) == '1.0\\n3'\nassert solution(open('test5').read()) == '2.0\\n3'\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '7'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"\n\nassert solution(\"20\") == \"8\"\nassert solution(\"8\") == \"2\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == 2\nassert solution('''30''') == 7\nassert solution('''14''') == 3\nassert solution('''12''') == 3\nassert solution('''6''') == 2\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\n\nprint(\"All test cases passed.\")\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is None\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3\n''') == '2'\n\nassert solution('''\n3\n''') == '7'\n\nassert solution('''\n30\n''') == '7'\n\nassert solution('''\n12345\n''') == '2'\n\nassert solution('''\n12345\n''') == '7'"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"\n\nassert solution(\"5\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nassert solution('1') == '1'\nassert solution('5') == '2'\nassert solution('200') == '3'\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '1'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '1'\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1') == 'HE GOT AWAY!'\nprint('Testcases passed')\n'''\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!'\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '1'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '1'\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1''') == '1'\nassert solution(\n'''N321-CIA\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1''') == 'HE GOT AWAY!'\nassert solution(\n'''N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\nN-FBI1\nN-FBI1\nN-FBI1\nN-FBI1\nN-FBI1\nN-FBI1''') == '1 2'\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\nN-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\nN-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n\"\"\") == \"HE GOT AWAY!\"\nassert solution(\n\"\"\"\nI-NTERPOL\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n\"\"\") == \"\"\nassert solution(\n\"\"\"\n\"\"\") == \"\"\nassert solution(\n\"\"\"\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n\"\"\") == \"HE GOT AWAY!\""
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '1'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '1'\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\ni-NTERPOL\\ng-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"\nassert solution(\"N-FBI1\\n9A-USKOK\\ni-NTERPOL\\ng-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"\nassert solution(\"N-FBI1\\n9A-USKOK\\ni-NTERPOL\\ng-MI6\\nRF-KGB1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"\n"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == '1.0'\nassert solution('2\\n1\\n1') == '1.0'\nassert solution('2\\n1\\n2') == '2.0'\nassert solution('2\\n2\\n1') == '2.0'\nassert solution('2\\n2\\n2') == '2.0'\n"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n3\") == \"6.843530573929037\"\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline())\nfor i in range(0, T):\n    n = int(sys.stdin.readline())\n    s = [float(x) for x in sys.stdin.readline().split()]\n    if n == 1:\n        print(s[0] + s[1])\n    else:\n        s.sort()\n        a = s[0]\n        b = s[1]\n        c = s[2]\n        if a + b > c:\n            print(a + b + c)\n        else:\n            print(a * b / 2 + c)\n"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 3\\n4 4 5') == '8.0'\nassert solution('3 3 3\\n4 5 4') == '6.843530573929037'\nassert solution('3 3 3\\n4 5 5') == '8.0'\nassert solution('3 3 3\\n4 5 4\\n5 4 5') == '6.843530573929037'\nassert solution('3 3 3\\n4 5 5\\n5 4 5') == '6.843530573929037'\n"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"2\\n\"\n    \"3 3 3\\n\"\n    \"4 4 5\\n\") == \"8.0\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n3 3 3\n4 4 5''') == '8.0'\nassert solution('''2\n3 3 3\n4 5 4''') == '6.843530573929037'\n'''\n"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 3\\n4 4 5\\n') == '8.0'"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '3.0'\nassert solution('1') == '0.0'\nassert solution('2') == '1.0'\nassert solution('3') == '1.2'\nassert solution('5') == '2.5'\n"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"5 3 3\\n4 5 4\") == \"6.843530573929037\"\nassert solution(\"6 3 3\\n4 5 4\\n5 4 3\") == \"9.460004348177134\"\nassert solution(\"7 3 3\\n4 5 4\\n5 4 3\\n6 5 5\") == \"10.208622784043994\"\nprint(\"Passed\")\n"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\nassert solution('40') == '50'\nassert solution('42') == '52'\nassert solution('43') == '54'\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == 1\nassert solution(\"2\\n\") == 2\nassert solution(\"3\\n\") == 3\nassert solution(\"4\\n\") == 5\nassert solution(\"5\\n\") == 7\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\nassert solution('156') == '156'"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"27\"\n'''\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n24\n''') == '27'\nassert solution('''\n156\n''') == '157'\nassert solution('''\n157\n''') == '157'\nassert solution('''\n148\n''') == '157'\nassert solution('''\n255\n''') == '257'\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"27\"\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''24''') == '24'\nassert solution('''25''') == '27'\nassert solution('''10000''') == '4838'\nassert solution('''100000''') == '83996'\nassert solution('''1000000''') == '98999'\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"188\"\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nassert solution('1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1') == '273589'\nassert solution('1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+7+6+5+4+3+2+1+2+3+4+5+6+7+8+9+9+8+"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"188\""
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"9+8+4\") == \"7\"\nassert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nassert solution('1+2+3+4+5+6+7+8+9+9+9+9+9+9+9') == '8888888888'\n\nprint(solution(stdin.strip()))\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nassert solution('1+2+3+4+5+6+7+8+9+10') == '188'\nassert solution('1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18') == '188'\nassert solution('1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20') == '188'\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+9+8+4') == '7'\nassert solution('1+9+8+4') == '7'\nassert solution('1+9+8+4') == '7'\nassert solution('1+9+8+4') == '7'\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+9+8+4+7+6+5+4+3+2+1\") == \"131\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0\") == \"0\"\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n'''\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5 -4 5') == '5 -2 4'\n\"\"\"\nfrom itertools import accumulate"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 5 2''') == '''2 5'''\nassert solution('''2 2 -4 5''') == '''5 -2 4'''\nassert solution('''-2 -2 3 1''') == '''3 -2 -1'''\nassert solution('''2 -2 3 1''') == '''3 -2 -1'''\nassert solution('''-2 -2 3 1''') == '''3 -2 -1'''\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()[-1]\nassert solution(stdin) == stdin.split()[-1]\nassert solution(stdin) == stdin.split()[-1]\nassert solution(stdin) == stdin.split()[-1]\nassert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 5 2\"\n) == \"2 5\"\nassert solution(\n    \"2 2 -4 5\"\n) == \"5 -2 4\"\nassert solution(\n    \"1 2 3\"\n) == \"2 3 6\"\nassert solution(\n    \"3 4 -1\"\n) == \"3 -4 -4\"\nassert solution(\n    \"2 1 -2\"\n) == \"-2 -2\"\n\"\"\"\n"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5 -4 5') == '5 -2 4'\nassert solution('1 2 -4 5') == '2 5'\nassert solution('1 2 -3 5') == '5 -3 4'\nassert solution('1 2 -5 5') == '2 -5 4'\nassert solution('1 2 -5 5') == '2 -5 4'\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('2 2\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\nassert solution('3 2\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\nassert solution('4 2\\n1 1 1 1 1 1 1 1 1 1') == '1 1 1 1 1 1 1 1 1'\nassert solution('5 2\\n1 1 1 1 1 1 1 1 1 1') == '1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('2 1 2 1 2') == '1'\nassert solution('1 2 2 1 2') == '1'\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 3 3 3 2 2 2 1 1') == '2 2 2 1 1\\n'\nassert solution('1 2\\n1 2') == '1 1\\n'\nassert solution('1 1\\n1 1') == '1 1\\n'\nassert solution('1 1\\n1 1') == '1 1\\n'\nassert solution('1 1\\n1 1') == '1 1\\n'\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n2 1 2 1 2''') == '2 2 2 1 1'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1 1''') == '1 1 1 3 3 3 2 2 2'"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 2 1 2') == '2 2 2 1 1'\nassert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\\n\"\nassert solution(\"4 2\\n1 3 3 1\\n\") == \"1 1 1 3 3\\n\"\nassert solution(\"4 3\\n1 3 3 1\\n\") == \"1 1 1 3 3\\n\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\\n\"\nassert solution(\"7 10\\n3 1 3 2 5 6 7 8 10\\n\") == \"3 1 3 2 5 6 7 8 10\\n\"\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == input()\n>>> ''.join(sorted(stdin.strip()))\n'''\n"
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '100'"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"38 24\") == \"875\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"4 14\") == \"43\"\nassert solution(\"101 72\") == \"45\"\n"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"38 24\") == \"875\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"101 18\") == \"100\"\nassert solution(\"1 10\") == \"100\"\nassert solution(\"100 10\") == \"100\"\n"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"38 24\") == \"875\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"-2 -1\") == \"2\"\n"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"38 24\") == \"875\"\nassert solution(\"1 100\") == \"100\""
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('38 24') == '875'\nassert solution('1 100') == '100'\n"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"38 24\"\n) == \"875\"\n\nassert solution(\n    \"1 100\"\n) == \"100\"\n\nassert solution(\n    \"10 7\"\n) == \"100\"\n\nassert solution(\n    \"21 18\"\n) == \"12\"\n\nassert solution(\n    \"25 19\"\n) == \"9\""
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''38 24''') == '875'\nassert solution('''1 100''') == '100'\nassert solution('''1 40''') == '400'\nassert solution('''100 15''') == '400'\nassert solution('''0 0''') == '0'\n"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7722 983\") == \"9322 77\"\nassert solution(\"101 0\") == \"0101\"\nassert solution(\"111 222\") == \"2212 11\"\nassert solution(\"123 456\") == \"456 12\"\nassert solution(\"67 8\") == \"867 7\"\n"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\nassert solution(\"123123\") == \"313323\"\nassert solution(\"123123\") == \"313323\"\nassert solution(\"123123\") == \"313323\"\n"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('343 233') == '243'\nassert solution('223 32') == '233'\nassert solution('123 342') == '342'\n"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('734 893') == '437'\n"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\nassert solution(\"222 111\") == \"222\"\nassert solution(\"221 231\") == \"132\"\nassert solution(\"00 000\") == \"000\"\n"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"3 9\") == \"9 3\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"2 1\") == \"1 1\"\n"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''734 893''') == '437'\nassert solution('''221 231''') == '132'\n'''\n\nimport sys"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"programming\"\nassert solution(sample_input_2) == \"contest\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n'''\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'impossible'\nassert solution('h3ll0\\n') == 'impossible'\nassert solution('ho3\\n') == 'impossible'\nassert solution('ho3\\n5') == 'contest'\nassert solution('h3\\n5') == 'contest'\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"contest\""
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''11 131''') == \"programming\"\nassert solution('''7 96''') == \"contest\""
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n'''\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"contest\"\nassert solution(input()) == \"programming\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(read()) == 'contest'\n'''\n"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''\n.^\n--\n'''\n\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n\nassert solution('''\n3 11 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n\nassert solution('''\n4 7 'X'\nXXXXXXXXX\nXXXXXX\nXXX\nXXX\n''') == '''\nXXXXXXXXX\nXXXXXX\nXXX\nXXX\n'''\n\nassert solution('''\n2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''\n.^\n--\n'''"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n'''\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\nprint('all tests passed')"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n\n'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n\nassert solution('''1 1 'D'\nD\n''') == '''D\n'''\n\nassert solution('''2 2 'D'\nD\n--\n''') == '''D\n--\n'''\n\nassert solution('''4 4 '.'\n....\n...^\n^...\n....\n''') == '''....\n...^\n^...\n....\n'''"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n\nassert solution('''4 10 'A'\n
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(test1) == expected1\nassert solution(test2) == expected2\nassert solution(test3) == expected3\nassert solution(test4) == expected4\nassert solution(test5) == expected5\n"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''\n..^\n--\n\nX..\n--\n'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''\nABBABABABABA\nBBBABABABABA\nBBABABABABAB\n'''\n"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open(\"input.txt\").read()))\n"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n\n--\n--'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\nBBABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\nBBABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n'''\n\nassert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n\n--\n--'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\nBBABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n'''"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4 4 14''') == '''1 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0'''\n\nassert solution('''100 80 60 240''') == '''0 0 4\n0 3 0\n1 1 1\n1 2 0\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0'''\n\nassert solution('''100 80 60 240''') == '''0 0 4\n0 3 0\n1 1 1\n1 2 0\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0'''\n\nassert solution('''10 20 30 40''') == '''Impossible'''\n\nassert solution('''1 2 3''') == '''1 2 3'''"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\""
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\nassert solution(\"100 80 60 240\") == \"0 3 0\"\nassert solution(\"1 1 2\") == \"1 1 2\"\nassert solution(\"3 0 2\") == \"3 1 1\"\n"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\nassert solution('100 80 60 240') == '0 3 0'\nassert solution('100 80 60 240') == '1 1 2'\nassert solution('100 80 60 240') == '1 2 1'\n"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 4 4 14\") == '1 0 3'\nassert solution(\n    \"100 80 60 240\") == '0 0 4'\nassert solution(\n    \"100 80 60 240\") == '0 3 0'\nassert solution(\n    \"100 80 60 240\") == '1 1 1'\nassert solution(\n    \"100 80 60 240\") == '1 2 0'\n"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n0 1 2\\n3 0 1\\n3 1 0\\n5 0 0\\n5 1 0\\n7 0 0'\n\n-----Note-----\nThe order of the answers doesn\u2019t matter.\n\n\"\"\"\n"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('4 4 4 14') == '0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 70 40') == '0 0 4\\n0 3 0\\n1 1 1\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 60') == '0 0 4\\n0 3 0\\n1 1 1\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\n"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 4 14\n''') == '''1 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\n\n'''\n\nassert solution('''100 80 60 240\n''') == '''0 0 4\n0 3 0\n1 1 1\n'''\n\nassert solution('''1 2 3 4\n''') == '''Impossible\n\n'''\n\nassert solution('''123\n''') == '''1 2 3\n'''\n\nassert solution('''3487\n''') == '''0 0 4\n0 3 0\n1 1 1\n'''"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"\n"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '0 0 4'\nassert solution('0 0 0 0') == '0 0 4'\nassert solution('1 1 1 1') == '0 0 4'\nassert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"good job\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n\")\n"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == 'good job'\nassert solution('5\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\nassert solution('10\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\nassert solution('2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == 'good job'\nassert solution('5\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\n"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13''') == 'good job'\n\nassert solution('''2\n2\n2\n2\n2\n2\n2\n2\n2''') == '1\\n3'\n\nassert solution('''2\n4\n5\n6\n7\n8\n9\n10\n11\n12''') == '1\\n3\\n5\\n6\\n7'\n\nassert solution('''2\n3\n5\n7\n8\n9\n10\n11\n12''') == '1\\n3\\n5\\n6\\n7\\n8'\n\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13''') == 'good job'"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n13\\n') == 'good job'\nassert solution('2\\n4\\n5\\n7\\n9\\n10\\n11\\n13\\n') == '1\\n3\\n6\\n12\\n'\nassert solution('3\\n4\\n5\\n7\\n9\\n10\\n11\\n13\\n') == '1\\n3\\n6\\n12\\n'\nassert solution('4\\n4\\n5\\n7\\n9\\n10\\n11\\n13\\n') == '1\\n3\\n6\\n12\\n'\nassert solution('5\\n4\\n5\\n7\\n9\\n10\\n11\\n13\\n') == '1\\n3\\n6\\n12\\n'\n"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == 'good job'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14') =='missed: 4, 11'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15') =='missed: 6, 16, 22'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16') =='missed: 10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17') =='missed: 14'\n"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n13') == 'good job'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"good job\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\") == \"3\"\nassert solution(\"1\\n3\\n6\\n11\\n12\\n13\\n14\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"2\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n7\\n8\\n8\\n9\\n9\\n10\\n11\\n12\\n13\\n13\\n14\\n15\\n15\\n16\\n17\\n17\\n18\\n19\\n19\\n20\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'good job'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13''') == 'good job'\n\nassert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13''') == '1\\n3\\n6\\n12\\n'\n\nassert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13''') == '1\\n3\\n6\\n12\\n'\n\nassert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13''') == '1\\n3\\n6\\n12\\n'\n\nassert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13''') == '1\\n3\\n6\\n12\\n'"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 4.5 50000000 0.001') == '1715.144428735 17.3419116234566'\nassert solution('10 4.5 50000000 0.005') == '1715.144428735 17.3419116234568'\nassert solution('10 4.5 50000000 0.02') == '1715.144428735 17.3419116234572'\nassert solution('10 4.5 50000000 0.1') == '1715.144428735 17.3419116234577'\n"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('2 2 1 2.001 6.0') == '818.317944448978'\nassert solution('10 3 4.5 2.1') == '13800.0'\nassert solution('10 3 4.5 2.01') == '13800.0'\nassert solution('10 10 7.8 7.7') == '1051.0'\n"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, p, s, v = map(float, stdin.split())\n"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n'''\n"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('100 100 100 0.01') == '0.01'\nassert solution('10 100 1 0.01') == '0.01'\nassert solution('100 100 10 0.01') == '0.01'\nassert solution('1 10 1 0.01') == '0.01'\n"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"157079.04857106 15.598261092309\"\n\nassert [solution(stdin) for stdin in [\n    '10 10.2 9.3 3',\n    '10 9.2 8.3 2.5',\n    '10 9.2 9.3 1.5',\n    '10 9.2 9.3 1',\n    '10 9.2 9.3 0.5',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9.3 0.001',\n    '10 9.2 9.3 0.1',\n    '10 9.2 9."
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'\n'''\nSample Input:\n5 10.5 40.7 1800\nSample Output:\n3629.22257835\n'''\nassert solution('''5 10.5 40.7 1800''') == '3629.22257835'\n'''\nSample Input:\n10000 10.5 40.7 1800\nSample Output:\n2633.25596938\n'''\nassert solution('''10000 10.5 40.7 1800''') == '2633.25596938'\n'''\nSample Input:\n1000 10.5 40.7 1800\nSample Output:\n1859.97290081\n'''\nassert solution('''1000 10.5 40.7 1800''') == '1859.97290081'\n\nimport sys\nfrom math import log, ceil, floor, sqrt"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n10 8.9 40075000 272.1\n\"\"\") == \"\"\"\n157079.04857106 15.598261092309\n\"\"\"\n\nassert solution(\n\"\"\"\n20 4.9 27307000 2756.35\n\"\"\") == \"\"\"\n337624.56448596 27.0\n\"\"\"\n\nassert solution(\n\"\"\"\n40 4.1 25175000 2397.88\n\"\"\") == \"\"\"\n591160.35152337 59.03\n\"\"\"\n\nassert solution(\n\"\"\"\n15 1.5 157000000 1739.53\n\"\"\") == \"\"\"\n493596.0 1266.66\n\"\"\"\n\nassert solution(\n\"\"\"\n20 1.2 25944000 2408.91\n\"\"\") == \"\"\"\n938649.02114761 9.18\n\"\"\""
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 10 1000000 272.1\") == \"157079.04857106 15.598261092309\"\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n\"\"\"\n\nimport math\nfrom math import log, sqrt, pow"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 0\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 2\nassert solution('5') == 2\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '5'\nassert solution('5') == '11'\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"10\"\nassert solution(\"8\") == \"55\"\nassert solution(\"10\") == \"250\"\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 0\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 4\nassert solution('5') == 7\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('100') == 10\nassert solution('25') == 5\nassert solution('99999') == 26\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '5'\nassert solution('5') == '8'\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\n"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 1\nassert solution(4) == 2\nassert solution(5) == 1\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nA\nA\nA\nA''') == '3'\nassert solution('''4\nA\nB\nB\nC\nD''') == '0'\nassert solution('''4\nA\nB\nC\nD\nD\nA\nB\nC\nA\n''') == '2'\nassert solution('''4\nA\nB\nC\nD\nA\nB\nC\nA\nD\n''') == '3'\nassert solution('''2\nA\nB\nD\nA\n''') == '1'\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\nA\\nA\\nA\\nA\\nA\") == \"3\"\nassert solution(\"5\\nA\\nA\\nA\\nA\") == \"3\"\nassert solution(\"5\\nA\\nA\\nA\\nA\") == \"3\"\nassert solution(\"5\\nA\\nA\\nA\\nA\") == \"3\"\nassert solution(\"5\\nA\\nA\\nA\\nA\") == \"3\"\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\nA\nA\nA\nA''') == '3'\nassert solution('''2\nA\nA\n''') == '1'\nassert solution('''2\nA\nA\nC\nB\n''') == '2'\nassert solution('''1\nA\nB\nC\nD\n''') == '0'\nassert solution('''2\nA\nA\nB\nD\n''') == '1'\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == '3'\nassert solution('2\\nB\\nC\\nD') == '1'\nassert solution('10\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ') == '0'\nassert solution('1\\n') == '0'\n\"\"\""
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"3\"\nassert solution(\"AB\") == \"3\"\nassert solution(\"ABC\") == \"3\"\nassert solution(\"ABCD\") == \"4\"\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\nA\nA\nA\nA''') == '3'\nassert solution('''1\nA\nA\nA\nA''') == '3'\nassert solution('''2\nA\nA\nA\nA''') == '4'\nassert solution('''3\nA\nA\nA\nA''') == '6'\nassert solution('''4\nA\nA\nA\nA''') == '9'\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\nA\nA\nA\nA\n''') == '3'\nassert solution('''\n1\nA\n''') == '1'\nassert solution('''\n2\nA\nB\n''') == '2'\nassert solution('''\n2\nA\nB\n''') == '2'\nassert solution('''\n2\nA\nB\nC\n''') == '0'\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4\nA\nA\nA\nA\n'''\n) == \"3\"\nassert solution(\n'''\n4\nA\nA\nB\nA\n'''\n) == \"0\"\nassert solution(\n'''\n2\nA\nA\n'''\n) == \"1\"\nassert solution(\n'''\n3\nA\nB\nC\n'''\n) == \"2\"\nassert solution(\n'''\n4\nA\nB\nC\nD\n'''\n) == \"3\"\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\nA\nA\nA\nA''') == '3'\nassert solution('''4\nA\nB\nB\nA''') == '0'\nassert solution('''4\nA\nA\nB\nA''') == '1'\nassert solution('''3\nB\nB\nA\n''') == '2'\nassert solution('''4\nB\nB\nB\nA\n''') == '1'\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\nA\nA\nA\nA''') == '3'\n\nassert solution(\n'''4\nB\nB\nB\nB''') == '3'\n\nassert solution(\n'''4\nC\nC\nC\nC''') == '3'\n\nassert solution(\n'''4\nD\nD\nD\nD''') == '3'\n\nassert solution(\n'''4\nC\nC\nC\nD''') == '3'"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\".x.\\nx.x\\n.x.\\n\") == \".xx..\\nxx..xx\\n..xx..\\n\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\".x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\"\nprint(solution(\".x.\\nx.x\\n.x.\\n\"))\n-----Solutions-----"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\n'\n\nimport sys\nsys.path.append('/Users/mamu/github/dareto')\nfrom codility.string_matching import solution\n\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..\\nxx..xx\\n..xx..\\n'\n\nimport sys\nsys.path.append('/Users/mamu/github/dareto')\nfrom codility.string_matching import solution\n\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..\\nxx..xx\\n..xx..\\n'\n\nimport sys\nsys.path.append('/Users/mamu/github/dareto')\nfrom codility.string_matching import solution\n\nassert solution('''4 4 2 2\n.x.\n.x.\nx.x\nx.x\n''') == '..xx..\\n..xx..\\nxx..xx\\nxx..xx\\n'\n"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\nprint('Test 1 passed')\n'''\n"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\n'\nassert solution('4 4 5 2\\n.x.\\nx.x\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\n..xx..\\n'\nassert solution('2 5 3 3\\nx.\\nx.x\\n.x.\\nx.x\\n') == 'x.x.x\\nxx.xx\\n.x.x\\nxx.xx\\n'\nassert solution('5 4 4 3\\n.x.\\nx.x\\nx.x\\nx.x\\n') == '..xx..\\nxx..xx\\n..xx..\\nxx..xx\\nxx..xx\\n'\nassert solution('5 1 3 1\\nx.\\nx.x\\n.x.\\nx.x\\n') == 'x.x.x\\nxx.xx\\n..x.x\\nxx.xx\\n'\n"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '''..xx..\nxx..xx\n..xx..\n'''\nassert solution('''5 3 2 1\n...\n...\n...\n...\n...\n...\n...\n...\n...\n''') == '''....x....\n....x....\n....x....\n....x....\n....x....\n....x....\n....x....\n....x....\n....x....\n'''\nassert solution('''6 3 2 1\n..x...\nx..x..\nx.x...\n....x..\n.....x.\n....x...\n...x....\n...x....\n''') == '''.....x.\n....x...\n....x...\n....x...\n....x...\n....x...\n....x...\n....x...\n...x....\n...x....\n'''\nassert solution('''7 4 2 1\n.x.x.\nx..x.\nx...x\nx....x\nx.x..x\nx.x.x.\nx..x.\nx.x.x\n''') == '''...x.\n.x..x.\n..x...\n...x.x\n....x.x\n...x...\n....x...\n...x....\n...x....\n'''\nassert solution('''7 4 2 1\n..x.x.\nx..x.\nx...x\nx....x\nx.x..x\nx.x.x.\nx..x.\nx.x.x\n''') == '''....x.\n...x...\n.x..x.\n..x...x\n...x...x\n....x...x\n...x....x\n....x....x\n....x....x\n'''\n"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"3 3 1 2\n.x.\nx.x\n.x.\n\"\"\") == \"\"\"..xx..\nxx..xx\n..xx..\n\"\"\"\n"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\".x.\") == \".xx.\"\nassert solution(\"x.x\") == \".xx.\"\nassert solution(\".\") == \"..xx.\"\nassert solution(\"xxxx\") == \"xxxx\"\nassert solution(\"xx.x\") == \"xx..xx\"\n"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == \"\"\"..xx..\nxx..xx\n..xx..\"\"\"\n\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == \"\"\"..xx..\nxx..xx\n..xx..\"\"\"\n\nassert solution('''1 1 1 1\n...\n...\n...\n''') == \"\"\"....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\nF 60 13 20') == '14 20'\nassert solution('1\\nB -3 19 -7') == '13 19'\nassert solution('1\\nB 0 -7') == '12 19'\nassert solution('1\\nB 9 19 -3') == '12 22'\nassert solution('1\\nF 59 13 19') == '14 19'\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''F 60 13 20''') == '14 20'\nassert solution('''F 60 13 10''') == '13 10'\nassert solution('''F 60 13 9''') == '13 9'\nassert solution('''F 60 13 22''') == '13 22'\nassert solution('''F 60 13 16''') == '13 16'\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''F 60 13 20''') == '14 20'\nassert solution('''B 60 13 20''') == '13 19'\nassert solution('''F 60 13 19''') == '14 19'\nassert solution('''F 60 13 19\nB 60 13 19''') == '14 19'\nassert solution('''F 60 13 19\nF 60 13 19''') == '14 19'\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('F60 13 20') == '14 20'\nassert solution('B60 13 20') == '18 20'\nassert solution('F60 13 40') == '14 40'\nassert solution('F60 13 30') == '14 30'\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''F 60 13 20\n''') == '14 20'\n\nassert solution(\n'''B -2 0 0\n''') == '0 0'\n\nassert solution(\n'''F -2 0 0\n''') == '0 0'\n\nassert solution(\n'''F 20 -2 0\n''') == '14 0'\n\nassert solution(\n'''F 0 -2 0\n''') == '0 0'"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''F 60 13 20''') == '14 20'\nassert solution('''B -5 13 30''') == '23 30'\nassert solution('''B -5 60 13''') == '22 0'\nassert solution('''B -5 0 13''') == '23 0'\nassert solution('''F -5 0 30''') == '0 0'\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\n'''\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"F60 13 20\") == \"14 20\"\nassert solution(\"B60 13 20\") == \"13 20\"\nassert solution(\"F55 13 25\") == \"13 25\"\nassert solution(\"F40 13 25\") == \"12 25\"\nassert solution(\"F50 13 25\") == \"12 25\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"F 60 13 20\n\"\"\") == \"\"\"14 20\n\"\"\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\nF 60 13 20\n'''\n) == \"14 20\"\n\nassert solution(\n'''\nB 30 10\n'''\n) == \"18 10\"\n\nassert solution(\n'''\nF 60 13 20\n'''\n) == \"11 10\"\n\nassert solution(\n'''\nF 60 13 20\n'''\n) == \"12 10\"\n\nassert solution(\n'''\nF 60 13 20\n'''\n) == \"12 10\""
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('DEC 25') == 'nope'\nassert solution('FEB 12') == 'yup'\nassert solution('FEB 9') == 'nope'\nassert solution('JAN 1') == 'nope'\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"JAN 9\") == \"nope\"\nassert solution(\"FEB 9\") == \"yup\"\nassert solution(\"DEC 25\") == \"nope\"\nassert solution(\"DEC 25\") == \"yup\"\nassert solution(\"JAN 31\") == \"nope\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('DEC 25') == 'yup'\nassert solution('FEB 9') == 'nope'\nassert solution('JUN 21') == 'nope'\nassert solution('SEP 30') == 'nope'\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"FEB 9\") == \"yup\"\nassert solution(\"DEC 25\") == \"yup\"\nassert solution(\"AUG 25\") == \"yup\"\nassert solution(\"JAN 1\") == \"yup\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"JAN 1, 2014\") == \"nope\"\nassert solution(\"FEB 9, 2014\") == \"yup\"\nassert solution(\"FEB 9, 2014\") == \"nope\"\nassert solution(\"JAN 9, 2014\") == \"nope\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"DEC 25\") == \"yup\"\nassert solution(\"AUG 30\") == \"nope\"\nassert solution(\"SEP 29\") == \"nope\"\nassert solution(\"JAN 19\") == \"nope\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('OCT 30') == 'nope'\nassert solution('FEB 9') == 'nope'\nassert solution('DEC 25') == 'yup'"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('OCT 25') == 'nope'\nassert solution('DEC 25') == 'nope'\nassert solution('JAN 01') == 'nope'\nassert solution('FEB 02') == 'yup'\nprint(\"All cases passed successfully.\")\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"yup\"\nassert solution(stdin) == \"nope\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('DEC 25') == 'nope'\nassert solution('APR 10') == 'nope'\nassert solution('JAN 30') == 'nope'\nassert solution('FEB 9') == 'yup'\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '''\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('hi') == '#hi#'\nassert solution('hi\\ne') == '#hi#\\ne'\nassert solution('\\n\\n\\n\\n\\n\\n\\n') == '#\\n#\\n#\\n#\\n#\\n#\\n#'\nassert solution('hi\\ne') == '#hi#\\ne'\nassert solution('\\n\\n\\n\\n\\n\\n\\n') == '#\\n#\\n#\\n#\\n#\\n#'\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 2 2\nhoni\noker\nnera\nirak\n''') == '''#.#.#.#.\n.#.#.#.#\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('honi\\noker\\nera\\nirak\\n') == '#.#.#.#\\n#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#'\nassert solution('ab\\ncd\\nef\\ngh\\nij\\n') == '#.ab#.\\n#.cd#.\\n#.ef#.\\n#.gh#.\\n#.ij#.'\nassert solution('h\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\n') == '#.h.h.\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#'\nassert solution('h\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\n') == '#.h.h.\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#'\nassert solution('h\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\n') == '#.h.h.\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#\\n#.h.h.#'\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '''#.#.#.#.\n.#.#.#.#\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == \\\n'''#.#.#.#.\n.#.#.#.#\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"input/test_3.txt\", \"r\").read()) == open(\"output/test_3_solution.txt\", \"r\").read()\n'''\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 2 2\\nhoni\\noker\\nera\\nirak\") == \"\"\"\n..honi..\n..oker..\n..nera..\n..irak..\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nera\\nirak\\n5\\n#.#.#.#.\\n#.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\"\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '''#.#.#.#.\n.#.#.#.#\n"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4'\n\"\"\""
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+'\n\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+'\n\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|...|:P:|.P.|:P:|:P:|\n+---+---+---+---+---+---+---+---+\n|.R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n''') == '''\nrnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\nrnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\n'''\n\nassert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|...|:P:|.P.|:P:|:P:|\n+---+---+---+---+---+---+---+---+\n|.R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n''') == '''\nrnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\nrnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\n'''\n\nassert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|...|:P:|.P.|:P:|:P:|\n+---+---+---+---+---+---+---+---+\n|.R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n''') == '''\nrnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\nrnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\n'''\n\nassert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \\\n    \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \\\n    \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\") == \\\n    \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\") == \\\n    \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\") == \\\n    \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == 'Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == 'Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4'\n'''\n"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|...|:P:|.P.|:P:|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|...|:P:|.P.|:P:|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|...|:P:|.P.|:P:|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+'\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|:p:|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+'\nassert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+'\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+'\nassert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+'\n"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+'\nassert solution('Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+'\nassert solution('Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,f3,d3,f4,e4,f5,g5,h5,a6,d6,f6,e6,f7,g7,h7,f8,g8,h8,a7,b7,c7,d7,e7,f7,g7,h7,h6,a8,b8,c8,d8,e8,f8,g8,h8,a9,b9,c9,d9,e9,f9,g9,h9,a10,b10,c10,d10,e10,f10,g10,h10,a11,b11,c11,d11,e11,f11,g11,h11,a12,b12,c12,d12,e12,f12,g12,h12,a13,b13,c13,d13,e13,f13,g13,h13,a14,b14,c14,d14,e14,f14,g14,h14,a15,b15,c15,d15,e15,f15,g15,h15,a16,b16,c16,d16,e16,f16,g16,h16,a17,b17,c17,d17,e17,f17,g17,h17,a18,b18,c18,d18,e18,f18,g18,h18,a19,b19,c19,d19,e19,f19,g19,h19,a20,b20,c20,d20,e20,f20,g20,h20,a21,b21,c21,d21,e21,f21,g21,h21,a22,b22,c22,d22,e22,f22,g22,h22,a23,b23,c23,d23,e23,f23,g23,h23,a24,b24,c24,d24,e24,f24,g24,h24,a25,b25,c25,d25,e25,f25,g25,h25,a26,b26,c26,d26,e26,f26,g26,h26,a27,b27,c27,d27,e27,f27,g27,h27,a28,b28,c28,d28,e28,f28,g28,h28,a29,b29,c29,d29,e29,f29,g29,h29,a30,b30,c30,d30,e30,f30,g30,h30,a31,b31,c31,d31,e31,f31,g31,h31,a32,b32,c32,d32,e32,f32,g32,h32,a33,b33,c33,d33,e33,f33,g33,h33,a34,b34,c34,d34,e34,f34,g34,h34,a35,b35,c35,d35,e35,f35,g35,h35,a36,b36,c36,d36,e36,f36,g36,h36,a37,b37,c37,d37,e37,f37,g37,h37,a38,b38,c38,d38,e38,f38,g38,h38,a39,b39,c39,d39,e39,f39,g39,h39,a40"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"\n\nassert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\n\nassert solution(\"2.000000 4.000000\") == \"Need more materials!\"\n\nassert solution(\"2.000000 10.000000\") == \"Diablo is happy!\"\n\nassert solution(\"5.000000 10.000000\") == \"Need more materials!\""
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"\n'''\n\nA, N = map(float, stdin.readline().strip().split())"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('10.000000 5.000000') == 'Need more materials!'\nassert solution('1.000000 40.000000') == 'Diablo is happy!'\nassert solution('10.000000 40.000000') == 'Need more materials!'\nassert solution('0.000000 4.000000') == 'Diablo is happy!'\n"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"\nassert solution(stdin) == \"Need more materials!\"\n'''\n\nimport sys\n\nA, B = map(float, sys.stdin.readline().split())"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"5.000000 10.000000\") == \"Need more materials!\"\nassert solution(\"4.000000 9.000000\") == \"Diablo is happy!\"\nassert solution(\"0.000000 0.000000\") == \"Diablo is happy!\"\nassert solution(\"0.000000 100.000000\") == \"Need more materials!\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"\n'''\n"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Diablo is happy!'\n>>> "
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('0.999999 4.000000') == 'Need more materials!'\nassert solution('0.999999 0.99999') == 'Diablo is happy!'\nassert solution('1.000000 1.000000') == 'Diablo is happy!'\nassert solution('5.000000 4.000000') == 'Need more materials!'\n"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 1.000000') == 'Need more materials!'\nassert solution('1.000000 1000000000.000000') == 'Need more materials!'\nassert solution('1.000000 1000000000.000000') == 'Need more materials!'\nassert solution('1.000000 1000000000.000000') == 'Need more materials!'\n"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    1.000000 4.000000\n    ''') == 'Diablo is happy!'\n\nassert solution(\n    '''\n    1.000000 1000000000.000000\n    ''') == 'Need more materials!'\n"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 6"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1 10 2 1\") == \"use the stairs\"\nassert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 1 10 2 1\") == \"use the stairs\"\nassert solution(\"10 1 10 2 1\") == \"use the stairs\"\n\"\"\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('1 1 1 1 1') == 'use the stairs'\nassert solution('1 1 1 1 1000000') == 'use the stairs'\nassert solution('1 1 1 1 1') == 'use the stairs'\nassert solution('100 100 100 100 100') == 'use the stairs'\n"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"1 1 1 1 1\") == \"use the stairs\"\nassert solution(\"5 10 1 1 1\") == \"use the stairs\"\nassert solution(\"5 10 2 1 1\") == \"4\"\nassert solution(\"5 10 3 1 1\") == \"5\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 1 10 2 1') == '6'\n\"\"\""
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '6'\nprint('Test1: Passed')\n\nassert solution(stdin) == 'use the stairs'\nprint('Test2: Passed')\n\nprint('Test3: Passed')"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 1 10 2 1') == \"6\"\nassert solution('5 3 2 3 5') == \"use the stairs\"\nassert solution('5 3 2 3 4') == \"use the stairs\"\nassert solution('7 2 7 2 7') == \"use the stairs\"\nassert solution('8 2 8 2 8') == \"use the stairs\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n10 1 10 2 1\n''') == '6'\n\nassert solution(\n'''\n5 10 1 1 0\n''') == 'use the stairs'\n\nassert solution(\n'''\n10 10 1 10 2 1\n''') == '4'\n\nassert solution(\n'''\n10 10 10 10 1 10\n''') == '6'\n\nassert solution(\n'''\n5 5 1 2 1\n''') == 'use the stairs'"
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == 'use the stairs'\nassert solution('10 1 10 2 100000000') == 'use the stairs'\nassert solution('10 1 10 2 1') == 'use the stairs'\nassert solution('10 1 10 2 1') == 'use the stairs'\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n500\n120\n75''') == '128.8'\nassert solution('''1\n1\n1''') == '1.0'\nassert solution('''1\n1\n1''') == '1.0'\nassert solution('''5\n1\n2\n3\n4\n5''') == '2.5'\nassert solution('''5\n1\n2\n3\n4\n5''') == '2.5'\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n17\\n60\\n70\\n49\\n77\\n41\\n60\\n80\\n53\\n69\\n85\\n43\\n41\\n78\\n76') == '87.33333333333334'\nassert solution('5\\n20\\n40\\n39\\n25\\n38\\n35\\n36\\n31\\n29\\n26\\n30\\n23\\n24\\n20\\n18') == '25.76923076923077'\nassert solution('3\\n39\\n37\\n43\\n28\\n41\\n45\\n43\\n43\\n43\\n50\\n54\\n49\\n59\\n55\\n64\\n56\\n63\\n42\\n37\\n39') == '25.828125'\nassert solution('6\\n39\\n34\\n30\\n29\\n32\\n37\\n31\\n30\\n29\\n32\\n36\\n30\\n33\\n32\\n35\\n33\\n34\\n33\\n34\\n36\\n35\\n37\\n37\\n37\\n36\\n39') == '29.25'\nassert solution('5\\n39\\n37\\n35\\n33\\n31\\n29\\n25\\n23\\n21\\n19\\n17\\n15\\n14\\n13\\n13\\n12\\n12\\n12\\n12\\n10\\n11\\n11\\n10\\n9') == '14.2'\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"2\\n1\\n2\") == \"\"\nassert solution(\"1\\n2\\n1\") == \"\"\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3\n500\n120\n75''') == '128.8'\nassert solution(\n'''3\n500\n120\n75\n500\n120\n75''') == '89.06666666666666'\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n1\\n4') == '89.06666666666666'\nassert solution('1\\n3\\n2\\n5') == '188.0'\nassert solution('1\\n2\\n2\\n3') == '0.69999999999999994'\nassert solution('1\\n3\\n3\\n3') == '1.5'\nassert solution('1\\n3\\n4\\n5') == '189.5'\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n500\n120\n75\"\"\") == \"128.8\"\nassert solution(\n\"\"\"7\n500\n120\n75\n100\n150\n100\n100\"\"\") == \"89.06666666666666\"\nassert solution(\n\"\"\"9\n500\n120\n75\n100\n150\n100\n100\n150\"\"\") == \"128.79999999999999\"\nassert solution(\n\"\"\"27\n500\n120\n75\n100\n150\n100\n100\n150\"\"\") == \"129.0\"\nassert solution(\n\"\"\"39\n500\n120\n75\n100\n150\n100\n100\n150\"\"\") == \"129.99999999999999\"\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n500\n120\n75\"\"\") == \"128.8\", \"test 1\"\nassert solution(\"\"\"4\n500\n120\n50\n100\"\"\") == \"89.06666666666666\", \"test 2\"\nassert solution(\"\"\"5\n500\n120\n50\n100\n30\"\"\") == \"135.0\", \"test 3\"\nassert solution(\"\"\"6\n500\n120\n50\n100\n30\n100\"\"\") == \"145.0\", \"test 4\"\nassert solution(\"\"\"7\n500\n120\n50\n100\n30\n100\n70\"\"\") == \"172.5\", \"test 5\"\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n500\n120\n75''') == '128.8'\nassert solution('''3\n500\n120\n76''') == '128.799999999999999'\nassert solution('''5\n500\n120\n75\n1000\n300''') == '128.8'\nassert solution('''5\n500\n120\n75\n1000\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300\n300"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n500\n120\n75''') == '128.8'\nassert solution('''3\n500\n120\n200''') == '0.0'\nassert solution('''3\n999\n999\n999''') == '0.0'\nassert solution('''10\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12''') == '1.5'\nassert solution('''10\n3\n2\n1''') == '0.3333333333333333'\n"
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n7\\n5') == '3.2\\n-0.13'\nassert solution('4\\n123\\n121\\n101') == '4.4\\n-0.1'\nassert solution('5\\n10\\n100\\n1') == '5.5\\n-0.2'\nassert solution('6\\n1000\\n2000\\n3000\\n4000\\n5000') == '7.333333333333332\\n-0.25'\nassert solution('7\\n10000\\n10001\\n99999\\n99999\\n99999') == '8.666666666666667\\n-0.3'\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 45 65 84 346\") == \"4\"\nassert solution(\"2 45 65 84 346\") == \"6\"\nassert solution(\"3 45 65 84 346\") == \"10\"\nassert solution(\"4 45 65 84 346\") == \"14\"\nassert solution(\"5 45 65 84 346\") == \"19\"\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\n5') == '1'\nassert solution('2\\n1 1\\n5') == '1'\nassert solution('3\\n1 1 2\\n3 3') == '3'\nassert solution('3\\n1 1 2\\n1 2 3\\n5') == '4'\nassert solution('4\\n1 2 3\\n1 3 4\\n5') == '4'\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 45 65 84 346\n''') == '4'\nassert solution('''1\n1\n''') == '0'\nassert solution('''10\n2 2 2 2 2 2 2 2 2 2\n''') == '0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution('''10\n1 2 2 3 4 5 6 7 8 9 10\n''') == '2'\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 45 65 84 346\n''') == '4'\nassert solution('''\n10\n1 35 29 31 30 30 39 47 22 32\n''') == '1'\nassert solution('''\n10\n1 35 29 31 30 30 39 47 22 32\n''') == '2'\nassert solution('''\n10\n1 35 29 31 30 30 39 47 22 32\n''') == '3'\nassert solution('''\n10\n1 35 29 31 30 30 39 47 22 32\n''') == '4'\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n5\n1 45 65 84 346\n''') == '4'\n\nassert solution('''\\\n11\n1 45 65 83 93 39 97 0 19\n''') == '9'\n\nassert solution('''\\\n17\n1 45 65 83 93 39 97 0 19\n''') == '10'\n\nassert solution('''\\\n365\n3 2 4 1 4 4 4 1 2 1 1 1 1\n''') == '5'\n\nassert solution('''\\\n1\n1 45 65 83 93 39 97 0 19\n''') == '4'"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 45 65 84 346') == '4'\nassert solution('1 45 65 84 34 6') == '5'\nassert solution('1 45 65 84 34 6 34') == '6'\nassert solution('1 45 65 84 34 6 34 34') == '7'\nassert solution('1 45 65 84 34 6 34 34 34') == '8'\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 45 65 84 346\n''') == '4'\nassert solution('''\n10\n1 45 65 84 346\n''') == '5'\nassert solution('''\n1\n1\n''') == '2'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '3'\nassert solution('''\n100\n1 45 65 84 346\n''') == '99'\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\\\n1 45 65 84 346\n''') == '4'\nassert solution('''\\\n4\n1 45 65 84 346\n''') == '3'\nassert solution('''\\\n5\n1 45 65 84 346\n''') == '5'\nassert solution('''\\\n1000\n1 45 65 84 346\n''') == '999'\nassert solution('''\\\n1\n45 65 84 346\n''') == '5'\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 45 65 84 346''') == '4'\nassert solution('''2 45 65 84 346''') == '6'\nassert solution('''3 45 65 84 346''') == '8'\nassert solution('''4 45 65 84 346''') == '10'\nassert solution('''5 45 65 84 346''') == '14'\n"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 45 65 84 346\") == \"4\"\nassert solution(\"1 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 4\n#######\n"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 1\n\nExpected Output:\n1\n\nhttps://www.codewars.com/kata/puzzle-of-the-week-3-max-of-trees\n\"\"\""
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n1\\n\\n"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Input:7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Output:1\") == \"1\"\nassert solution(\n    \"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Input:7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Output:1\") == \"1\"\nassert solution(\n    \"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Input:7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Output:1\") == \"1\"\nassert solution(\n    \"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Input:7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Output:1\") == \"1\"\nassert solution(\n    \"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Input:7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\nSample Output:1\") == \"1\"\n"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''7 4\n#######\n"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('7 4\\n#######\\n#.GTG#\\n#..TGG#\\n#######') == '0'\nassert solution('7 4\\n#######\\n#.GTG#\\n#..TGG#\\n#######\\n#.T.GG#\\n#..#.GT#\\n#.G.GTG#\\n#.G#TGG#\\n#######') == '1'\n\"\"\"\n"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom queue import Queue"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n_$$____$$$____$____$$____$____') == '0'\nassert solution('1 1\\n$_$$_$___$$____$___$_____$____') == '1'\nassert solution('1 1\\n__$____$___$$____$$____$____') == '0'\nassert solution('1 1\\n____$____$____$____$$____') == '2'\nassert solution('1 1\\n____$$____$$____$_____$$____') == '1'\n"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('123456789') == '8'\nassert solution('a') == '0'\nassert solution('aa') == '1'\nassert solution('ab') == '10'\n"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('stdin') == '5'\n\n-----"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n\"\n                \"____$$$_______$$$______$$$________$$$______$$$____\\n\"\n                \"____$$$_______$$$______$$$________$$$______$$$____\\n\"\n                \"_____$_________$________$__________$________$_____\\n\"\n                \"___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n\"\n                \"__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n\"\n                \"_$____$$____$__$__$___$$____$___$__$___$$____$_\\n\"\n                \"$_____$$___$___$___$__$$_____$_$___$___$_____$\\n\"\n                \"_____$_$______$_$_____$_$_________$_$_____$_$_____\\n\"\n                \"____$___$____$___$____$___$______$___$____$___$___\\n\"\n                \"___$____$___$_____$___$____$____$_____$___$____$__\\n\"\n                \"__$_____$___$_____$___$_____$___$_____$___$_____$_\\n\"\n                \"__$_____$___$_____$___$_____$___$_____$___$_____$_\\n\"\n                \"_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == \"5\\n\"\nassert solution(\"10 50\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\"\n                \"___$$$$$$$$$$$$$$$$$\\n\") == \"30\\n\"\nassert solution(\"25 50\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n\"\n                \"____$$$$$$$$$$$$$$$$$$$$"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"13 50\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"12 42\") == \"3\"\nassert solution(\"\"\"\n1 1\n_$$_\n_$$_\n$$___\n_$$_\n_$$_\n$$___\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 2\n1 2\n_$$_\n_$$_\n$$___\n_$$_\n_$$_\n$$___\n\"\"\") == \"7\"\n"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('a') is None\nassert solution('aaaa') is None\nassert solution('$$$') is None\nassert solution('$$$$$$') is None\n"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 50\n    _____$$________$__________$$_________$___$_________\n    ___$_____$$________$__________$$_________$$__$___$__\n    __$____$___$$$________$__________$$_________$$____$__\n    __$_____$$________$__________$$_________$______$__\n    _$$_____$$$________$__________$$_________$______$$_\n    $_____$$$________$__________$$_________$______$$$\n    $_____$$$________$__________$$_________$______$$$\n    $_____$$$________$__________$_________$______$$$\n    $_____$$$________$__________$$$_________$______$$$\n    $_____$$$________$__________$$_________$______$$$\n    _$$_____$$$________$__________$$_________$______$$\n    __$_____$__$_____$__________$$_________$______$$_\n    __$_____$$__$_____$__________$$_________$______$$\n    __$_____$$__$_____$$__________$_________$______$$\n    __$_____$$__$_____$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$\n    __$_____$$________$__________$$_________$______$$"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1'\nassert solution('5 4') == '4'\nassert solution('5 3') == '2'\nassert solution('5 7') == '1'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '13 50'\n) == '5'\nprint(solution(stdin))\n"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\nSample Input:\n13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\nSample Output:\n5\n''') == '5'\nassert solution('''4 5\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\nSample Input:\n4 5\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"I cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"and cay\") == \"a nyay cay\"\nassert solution(\"tay\") == \"tay\"\nassert solution(\"hay\") == \"hay\"\nassert solution(\"oay\") == \"oay\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\ni cant speak pig latin\n''') == 'iyay antcay eakspay igpay atinlay'\n\nassert solution('''\nh e l l 0\n''') == 'heyelll oh'\n\nassert solution('''\na\nb\n''') == 'ab'\n\nassert solution('''\napple\n''') == 'appleay'\n\nassert solution('''\nI live in America.\n''') == 'Iay live in Ameray.\n'''\n"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''i cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin''') == '''iyay antcay eakspay igpay atinlay\n"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('and i want to go to the movies') == 'ang iway otay otay ogay ogay otay eed gettay atinlay'\nassert solution('they ate my worksheet') == 'ehay aay yay yeday otay ethay earceay wsay outray'\nassert solution('i love the way the wind blows') == 'iluv atea yay yay winday otay winday osay oway'\nassert solution('he told us he is our favorite') == 'heyd otay cay heej ay ityay'\n"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"and iyay eakspay igpay atinlay\") == \"and oyay eakspay ictay atinlay\"\nassert solution(\"there iyay eakspay igpay atinlay\") == \"there ieyay eakspay ictay atinlay\"\nassert solution(\"i inyay eakspay igpay atinlay\") == \"i ictay eakspay igpay atinlay\"\nassert solution(\"a inyay eakspay igpay atinlay\") == \"a ictay eakspay igpay atinlay\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('this is an example sentence') == 'hay isway itway anasyay  ayesay exsageen tseytay'\nassert solution('dictionary and lists are great') == 'dikeay dictionary isway dikeay lisyay ordway atay isway'\nassert solution('the quick brown fox jumped over the lazy dog') == 'heex yway oxfay oway oyday aay heay oway decay oslow'\n\n\n\"\"\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\ni cant speak pig latin\n''') == '''\niyay antcay eakspay igpay atinlay\n'''\n\nassert solution('''\ncant speak pig latin\n''') == '''\ncay antcay eakspay igpay atinlay\n'''\n\nassert solution('''\ncant speak pig latin\n''') == '''\ncay antcay eakspay igpay atinlay\n'''\n\nassert solution('''\ni cant speak pig latin\n''') == '''\niyay antcay eakspay igpay atinlay\n'''\n\nassert solution('''\ni cant speak pig latin\n''') == '''\niyay antcay eakspay igpay atinlay\n'''"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\ni cant speak pig latin\n''') == '''iyay antcay eakspay igpay atinlay\n'''\nassert solution('''\n''') == ''\nassert solution('''\ni cant speak pig latin\ni can speak pig latin\n''') == '''iyay antcay eakspay igpay atinlay\niay ay atinlay osay ightay oday otay\n'''\nassert solution('''\n''') == ''\nassert solution('''\ni cant speak pig latin\ni can speak pig latin\ni'll speak pig latin\n''') == '''iyay antcay eakspay igpay atinlay\niay ay atinlay osay ightay oday otay\n'''\n'''\nimport os\nfrom typing import Iterable, List"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''i cant speak pig latin\n''') == 'iyay antcay eakspay igpay atinlay'\n\nassert solution('''i really like it\n''') == 'iyay ruhay yayay eakspay igpay atinlay'\n\nassert solution('''i really like it\n''') == 'iyay ruhay yayay eakspay igpay atinlay'\n\nassert solution('''he is a very good man\n''') == 'hey is ahay ruhay yayay eakspay igpay atinlay'\n\nassert solution('''he is a very good man\n''') == 'hey is ahay ruhay yayay eakspay igpay atinlay'"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('and iyay eakspay igpay atinlay') == 'a nd iay yay eakspay igmatay inlay atinlay'\nassert solution('ordinary') == 'ordaryay'\nassert solution('tay') == 'tay'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n\nassert solution(\n'''2\n2\nq\npotatoes\nsalad\n3\npups\npunsch\npea soup\npancakes\n''') == 'Anywhere is fine I guess'\n\nassert solution(\n'''1\n1\nq\npotatoes\nsalad\n3\npups\npunsch\npea soup\npancakes\n''') == 'Anywhere is fine I guess'\n\nassert solution(\n'''1\n1\nq\npotatoes\nsalad\n3\npotatoes\npups\npea soup\npancakes\n''') == 'potatoes'\n\nassert solution(\n'''1\n1\nq\npotatoes\nsalad\n3\npotatoes\npups\npea soup\npancakes\n''') == 'Anywhere is fine I guess'"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punsch\n''') == 'nymble'\n\nassert solution('''\n    2\n    2\n    q\n    potatoes\n    salad\n    2\n    nymble\n    pancakes\n    pea soup\n    punsch\n''') == 'Anywhere is fine I guess'\n'''\n"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"Anywhere is fine I guess\"\nassert solution(\"a b\") == \"Anywhere is fine I guess\"\nassert solution(\"ab\") == \"Anywhere is fine I guess\"\nassert solution(\"a b\") == \"Anywhere is fine I guess\"\n"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch''') == 'nymble'\nassert solution('''2\n2\nq\npea soup\npancakes\npea soup\npunsch''') == 'Anywhere is fine I guess'\nassert solution('''4\n4\nq\npea soup\npancakes\npea soup\npunsch\npea soup\npancakes\npea soup\npunsch\n''') == 'pea soup'\nassert solution('''2\n2\nq\npea soup\npancakes\npea soup\npunsch\n''') == 'pea soup'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\\npea soup\\npotatoes\\npea soup\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\\npea soup\\npotatoes\\npea soup\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\\npea soup\\npotatoes\\npea soup\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\\npea soup\\npotatoes\\npea soup\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'\n"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\pea soup\\npunsch'\n) == 'nymble'\nassert solution(\n    '2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\pea soup\\npunsch'\n) == 'nymble'\nassert solution(\n    '2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\pea soup\\npunsch'\n) == 'nymble'\nassert solution(\n    '2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\pea soup\\npunsch'\n) == 'nymble'\nassert solution(\n    '2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\pea soup\\npunsch'\n) == 'nymble'\n"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch''') == 'nymble'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\nmarlin\npancakes\npea soup\npunsch''') == 'Anywhere is fine I guess'\n'''"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'Anywhere is fine I guess'\nassert solution('q') == 'Anywhere is fine I guess'\nassert solution('potatoes') == 'nymble'\nassert solution('salad') == 'nymble'\nassert solution('3') == 'nymble'\n"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\npotatoes\nsalad\n3\npea soup\npancakes\npea soup\npunsch\n''') == 'pea soup'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\npotatoes\nsalad\n3\npea soup\npancakes\npancakes\npea soup\npunsch\n''') == 'pancakes'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\npotatoes\nsalad\n3\npea soup\npancakes\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n'''\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('5 2 3') == '-1'\nassert solution('5 0 2') == '0'\nassert solution('5 2 0') == '1'\nassert solution('5 0 1') == '-1'\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('5 10 15') == '2'\nassert solution('5 30 0') == '-1'\nassert solution('5 30 10') == '2'\nassert solution('5 30 50') == '3'\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 0 15''') == '3'\nassert solution('''5 0 1''') == '5'\nassert solution('''5 0 3''') == '1'\nassert solution('''5 0 4''') == '3'\nassert solution('''5 0 5''') == '1'\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('5 4 1') == '0'\nassert solution('2 3 5') == '1'\nassert solution('7 5 2') == '3'\nassert solution('15 0 5') == '3'\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('3 5 5') == '1'\nassert solution('3 1 3') == '2'\nassert solution('3 1 3') == '2'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 0 15''') == '3'\nassert solution('''5 0 10''') == '7'\nassert solution('''5 0 6''') == '5'\nassert solution('''5 0 1''') == '6'\nassert solution('''5 0 2''') == '10'\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('5 0 15') == '3'\nassert solution('5 3 9') == '3'\nassert solution('5 3 15') == '3'\nassert solution('5 3 18') == '5'\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('4 1 7') == '5'\nassert solution('100 30 1000') == '1'\nprint(solution(stdin.read()))\n'''\n'''\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('5 0 15') == '3'\nassert solution('5 0 15') == '3'\nassert solution('5 0 15') == '3'\nassert solution('5 0 15') == '3'\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n11\n15\n\"\"\") == \"19\"\nassert solution(\n\"\"\"\n-12\n1\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n1\n-1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n1\n-1000\n\"\"\") == \"1000\"\nassert solution(\n\"\"\"\n-1\n-1\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 15') == 19\nassert solution('-10 -5') == -5\nassert solution('0 0') == 0\nassert solution('-20 -15') == -15\nassert solution('6 4') == 3\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''11 15''') == 19\nassert solution('''22 6''') == 8\nassert solution('''22 6''') == 8\nassert solution('''25 -12''') == -11\nassert solution('''-5 22''') == 19\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 -1') == 10\nassert solution('3 -2') == -1\nassert solution('11 -10') == 9\nassert solution('5 -5') == 0\nassert solution('-2 -2') == -1\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11 15') == 19\nassert solution('15 11') == 19\nassert solution('1 0') == 0\nassert solution('2 2') == 2\nassert solution('2 1') == 1\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 -1') == '-1'\nassert solution('1 1') == '1'\nassert solution('0 -1') == '-1'\nassert solution('1 0') == '-1'\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"19\"\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == str(19)\n\nimport sys\ntry:\n    assert solution(sys.stdin.readline()) == sys.stdin.readline().strip()\nexcept:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n\n-----------------------------------------------------------------------------------------------------\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 19\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11 15') == 19\nassert solution('6 18') == 10\nassert solution('6 19') == 19\nassert solution('18 19') == 19\nassert solution('18 19') == 19\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"North South East\") == \"Yes\"\nassert solution(\"North East West\") == \"No\"\nassert solution(\"North South East\") == \"No\"\nassert solution(\"North South East\") == \"Yes\"\nassert solution(\"North South East\") == \"Yes\"\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('South South East') == 'No'\nassert solution('North North West') == 'No'\nassert solution('North South West') == 'Yes'\nassert solution('North East West') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''North''') == 'Yes'\nassert solution(\n'''South''') == 'No'\nassert solution(\n'''West''') == 'Yes'\nassert solution(\n'''East''') == 'Yes'\nassert solution(\n'''North North West''') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('South East West') == 'No'\nassert solution('North West East') == 'No'\nassert solution('West North East') == 'No'\nassert solution('West North South') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"North South East\") == \"No\"\nassert solution(\"North South East\") == \"No\"\nassert solution(\"North South East\") == \"No\"\nassert solution(\"North South East\") == \"No\"\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''North South East''') == 'Yes'\nassert solution('''North South\nWest East''') == 'Yes'\nassert solution('''North South\nWest East''') == 'No'\nassert solution('''South West East''') == 'No'\nassert solution('''North\nSouth West East''') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('North South East') == 'Yes'\nassert solution('North South East') == 'Yes'\nassert solution('North South West') == 'No'\nassert solution('North West South') == 'No'\nassert solution('North North West') == 'No'\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North West East') == 'No'\nassert solution('East West South') == 'No'\nassert solution('East South North') == 'No'\nassert solution('West South North') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"West South East\") == \"No\"\nassert solution(\"North West East\") == \"No\"\nassert solution(\"South East North\") == \"No\"\nassert solution(\"South East North\") == \"Yes\"\n"
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\"\n\nprint(solution(stdin))\n\nassert solution(stdin) == \"No\"\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 16\\nagain\\npirpumsemoystoal') =='marywasnosyagain'"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'\nassert solution(\n'''\n2 5\na\na\n''') == 'aa'\nassert solution(\n'''\n3 2\na\nab\n''') == 'ba'\nassert solution(\n'''\n3 2\na\na\n''') == 'a'\nassert solution(\n'''\n3 2\nabc\nabc\n''') == 'bca'\n"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 10\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''6 8\nagain\nprtyxypxkifmvxjnqg\n''') == 'bymyxkcpqxjivnz'\nassert solution('''1 3\nptymwpywvwf\nnfzlvdjvqjxysb\n''') == 'ttu'\nassert solution('''3 4\nptymwpywvwf\nnfzlvdjvqjxysb\nqnrcbvkfjklvx\n''') == 'u'\nassert solution('''2 3\nptymwpywvwf\nnfzlvdjvqjxysb\n''') =='mm'\n"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample0) == \"marywasnosyagain\"\nassert solution(sample1) == \"triehepxs\"\nassert solution(sample2) == \"anmtu\"\nassert solution(sample3) == \"itfcgpn\"\nassert solution(sample4) == \"qpmyhjxq\"\n"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"marywasnosyagain\"\nassert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\nassert solution(\"5 17\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\nassert solution(\"5 18\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\nassert solution(\"5 19\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\n"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[2]\n\n---"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 10\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''1 10\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''7 8\nagain\npirpumsemoystoal''') =='marywasnosyagain'\n'''\nimport sys\nfrom math import ceil"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 16\\nagain\\npirpumsemoystoal') =='marywasnosyagain'\n"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''5 17\nagain\npirpumsemoystoal''') == 'again'\nassert solution('''5 1\nagain\npirpumsemoystoal''') == 'pirpumsemoystoal'\nassert solution('''5 2\nagain\npirpumsemoystoal''') == 'again'\nassert solution('''5 3\nagain\npirpumsemoystoal''') == 'pirpumsemoystoal'\n"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''5 15\nagain\npirpumsemoystoal''') == 'apriopimussois'\nassert solution('''5 19\nagain\npirpumsemoystoal''') =='marioagostoo'\nassert solution('''5 19\nagain\npirpumsemoystoal''') =='marioagostoo'\nassert solution('''9 30\nagain\npirpumsemoystoal''') =='marioagostoo'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Either'\nassert solution('1') == 'Either'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Even'\nassert solution('4') == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Odd'\nassert solution('5') == 'Even'\nassert solution('100') == 'Odd'\n'''\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Odd'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Even'\nassert solution(5) == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Neither'\nassert solution('4') == 'Even'\nassert solution('5') == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Even'\nassert solution('4') == 'Odd'\nassert solution('5') == 'Even'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == \"Odd\"\nassert solution(2) == \"Even\"\nassert solution(3) == \"Odd\"\nassert solution(4) == \"Odd\"\nassert solution(5) == \"Odd\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\nassert solution('4') == 'Either'\nassert solution('5') == 'Either'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'Either'\nassert solution('1') == 'Either'\nassert solution('3') == 'Odd'\nassert solution('4') == 'Even'\nassert solution('5') == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Either'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Even'\nassert solution(5) == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == \"Either\"\nassert solution(2) == \"Even\"\nassert solution(3) == \"Odd\"\nassert solution(4) == \"Either\"\nassert solution(5) == \"Odd\"\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '3'\nassert solution('''314''') == '3'\nassert solution('''1''') == '1'\nassert solution('''5926''') == '4'\nassert solution('''5''') == '1'\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n314\n1\n5926\n5\n35897\n''') == '''\n3\n1\n4\n1\n5\n'''\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n''') == '''\n1\n1\n1\n1\n1\n1\n'''\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n314\n1\n5926\n5\n35897''') == '''3\n1\n4\n1\n5'''\nassert solution('''6\n1\n5\n10\n100\n1000\n10000\n100000''') == '''3\n1\n1\n2\n3\n3\n4'''\nprint('test passed')\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n314\n1\n5926\n5\n35897''') == '3'\nassert solution('''1\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897''') == '1'\nassert solution('''1\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('7\\n10000000\\n10000000\\n10000000\\n10000000\\n10000000\\n10000000') == '8\\n8\\n8\\n8\\n8\\n8'\nassert solution('8\\n6\\n6\\n6\\n6\\n6\\n6') == '5\\n5\\n5\\n5\\n5\\n5'\nassert solution('6\\n5\\n5\\n5\\n5\\n5') == '5\\n5\\n5\\n5\\n5\\n5'\nassert solution('6\\n5\\n5\\n5\\n5\\n5\\n5') == '5\\n5\\n5\\n5\\n5\\n5\\n5'\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('3\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('1\\n314\\n1\\n5926\\n5\\n35897') == '1\\n1\\n4\\n1\\n5'\nassert solution('1\\n314\\n1\\n5926\\n5\\n35897') == '1\\n1\\n4\\n1\\n5'\nassert solution('1\\n314\\n1\\n5926\\n5\\n35897') == '1\\n1\\n4\\n1\\n5'\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('3\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('1\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('11\\n4\\n8\\n7\\n5\\n3\\n2') == '1\\n2\\n3\\n1\\n1'\nassert solution('3\\n10\\n11\\n2') == '2\\n1\\n2'\nassert solution('1\\n0') == '1\\n1'\nassert solution('2\\n100') == '1\\n2'\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\nassert solution('314') == '3'\nassert solution('1') == '1'\nassert solution('5926') == '4'\nassert solution('35897') == '5'\n"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == '''yes\nno\nno\nyes\nyes\nno\nno\nyes\nyes\nyes\nyes\nyes'''\n\nassert solution('''3 3\nw t\ne t\nw r\nw p\np t\nr o\nt e\nr e\nt t\nh w\nw p\nw t\nwe we\nwe we\nc t\np t\nr e\nr e\nt t\nwe t\ne t\nt t\np t\nw t\nt t\nw r\nw r\ne t\ne t\nt t\ne t\nw p\nw t\ne r\nr t\no t\nt t\no r\nr t\no t\nr e\nt t\np t\nw p\nw t\nw p\np t\nw p\nr e\nw p\no t\nt e\nt t\np t\no t\no r\nw t\nt t\nw r\nw r\no t\nr t\ne t\ne t\ne t\nt t\nt t\nw p\nw t\no r\no t\nt t\nr t\no t\nw t\nw r\ne t\ne t\nw t\nw r\nw r\nr t\nw p\nr e\nw t\nw p\ne t\nw t\nt e\nw t\nt e\nw t\nw r\nw r\nw p\nr e\nw p\nw t\ne t\nr t\nw p\nt t\nw t\nw p\nw t\nw p\nw p\nw t\nw t\nw t\nw p\nr e\no t\no t\ne t\ne t\nt t\ne t\nw t\nw t\nw p\ne t\nw p\no t\nw p\nw p\nt t\nw p\ne t\nw t\nw t\nw p\nw t\nw p\nw p\nw p\nw t\nw t\ne t\nw r\ne t\nw t\nw t\nw p\nw p\ne r\ne t\nw t\nw p\no r\ne r\no r\nw t\ne t\nw p\nw t\nw p\nw t\ne t\nw p\ne r\nw p\nw t\nw t\nw p\nw r\ne t\nw p\nw p\nw t\nw p\nw p\nw p\nw t\nw t\nw p\nw t\nw p\nw t\nw p\ne t\nw p\nw t\nw p\nw r\nw p\no t\nw t\nw t\nw p\nw r\nw p\nw t\nw p\nw p\nw p\nw t\nw t\nw p\nw p\nw r\ne t\ne r\nw t\nw p\nw r\no t\nw p\nw p\nw r\nw t\nw p\nw t\nw p\nw p\nw t\nw p\nw p\nw p\nw t\nw t\nw p\nw t\nw p\nw p\nw t\nw p\nw p\nw p\nw p\nw p\nw p\nw r\ne t\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw p\nw"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('c t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\nc the\\nout the') == 'yes\\nno\\nno\\nyes\\nyes\\nno\\nno'\n"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5') == 'no'\nassert solution('1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1') == 'no'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'yes'\n\nassert solution('''2 3\na b\na c\nb c\n2 2\nab ab\nac ac\nca ca\n2 2\na b\na c\nb c''') == 'yes'\n\nassert solution('''2 4\na b\na c\nb c\n2 2\na a\na b\na c\nb c\n2 2\na b\na c\nb c''') == 'yes'\n\nassert solution('''4 4\na b\na c\nb c\n2 2\na a\na b\na c\nb c\n2 2\na a\na b\na c\nb c\n''') == 'yes'\n\nassert solution('''2 4\na b\na c\nb c\n2 2\na a\na b\na c\nb c\n2 2\na a\na b\na c\nb c\n''') == 'no'"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == '''\nno\nno\nno\nyes\nyes\nyes\nyes\nyes\nno\nno\nyes\nyes\n'''\n\nassert solution('''\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == '''\nno\nno\nno\nyes\nyes\nyes\nyes\nyes\nyes\nno\nno\nyes\nyes\n'''\n\nassert solution('''\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == '''\nno\nno\nno\nyes\nyes\nyes\nyes\nyes\nyes\nno\nno\nyes\nyes\n'''\n"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'yes\\nno\\nno\\nyes\\nyes\\nno\\nyes\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''c t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == \"\"\"no\nno\nyes\nyes\nyes\nyes\nno\nno\nyes\nyes\nyes\nyes\nyes\"\"\"\n\nprint(solution('''c t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the'''))\n"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'yes\\nno\\nno\\nyes\\nyes\\nno\\nyes\\nyes\\nno\\nno'\n\nassert solution('''9 1\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\nz a\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn o\no p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'yes'\n'''\n\n\n'''\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\ncarrots?\nbunnies''') == '1'\nassert solution('''2 2\ncarrots?\nbunnies\ncorns?\ncornichon?\n''') == '2'\nassert solution('''2 2\ncarrots?\nbunnies\ncorns?\ncornichon?\n''') == '3'\nassert solution('''2 2\ncarrots?\nbunnies\ncorns?\ncornichon?\n''') == '3'\nassert solution('''3 2\ncarrots?\nbunnies\ncorns?\ncornichon?\n''') == '2'\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1\ncarrots?\nbunnies''') == '1'\nassert solution('''2 2\ncarrots?\nbunnies\ncarrots?\nbunnies''') == '2'\nassert solution('''10 3\nhufus\ndvorak\ntjurri\ntutu\ndvorak\njynx\nhufus\ntutu\nhufus\ntjurri''') == '3'\nassert solution('''3 1\npratt\nzypheg\npjr\n''') == '1'\nassert solution('''3 3\ndvorak\nzypheg\npratt\n''') == '1'\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('carrots?\\nbunnies') == 1\nassert solution('1 2\\ncarrots?') == 2\nassert solution('1 1\\ncarrots?\\nbunnies') == 1\nassert solution('1 2\\ncarrots?\\nbunnies') == 1\nassert solution('1 3\\ncarrots?\\nbunnies') == 1\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '1'\nassert solution('5 1') == '1'\nassert solution('10 2') == '2'\nassert solution('100 3') == '3'\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('carrots?') == '1'\nassert solution('bunnies') == '1'\nassert solution('carrots?') == '1'\nassert solution('bunnies') == '1'\nassert solution('carrots?') == '1'\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"2 1\") == 1\nassert solution(\"1 1\") == 0\nassert solution(\"2 2\") == 0\nassert solution(\"2 1\") == 1\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"2\"\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\ncarrots?\\nbunnies\\nfurious?\\ncarrots?\\n\") == \"1\"\nassert solution(\"2\\n1\\ncarrots?\\nbunnies\\nfurious?\\n\") == \"1\"\nassert solution(\"2\\n2\\ncarrots?\\nbunnies\\nfurious?\\n\") == \"2\"\nassert solution(\"2\\n3\\ncarrots?\\nbunnies\\nfurious?\\n\") == \"3\"\n"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 4') == '1'\nassert solution('1 5') == '2'\n"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|.P.|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|.P.|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\n\nassert solution(\n'''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|.P.|:P:|.P.|:::|.P.|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+''') == '''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'''\n\nassert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|.P.|:P:|.P.|:::|.P.|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|.P.|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'''\n\nassert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|.P.|:P:|.P.|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    +---+---+---+---+---+---+---+---+\n    |.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n    +---+---+---+---+---+---+---+---+\n    |:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n    +---+---+---+---+---+---+---+---+\n    |...|:::|.n.|:::|...|:::|...|:p:|\n    +---+---+---+---+---+---+---+---+\n    |:::|...|:::|...|:::|...|:::|...|\n    +---+---+---+---+---+---+---+---+\n    |...|:::|...|:::|.P.|:::|...|:::|\n    +---+---+---+---+---+---+---+---+\n    |:P:|.P.|:P:|...|:P:|.P.|:P:|:P:|\n    +---+---+---+---+---+---+---+---+\n    |.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n    +---+---+---+---+---+---+---+---+\n    |:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n    +---+---+---+---+---+---+---+---+\n    \"\"\"\n    ) == \"\"\"\n    White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\n    Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n    \"\"\"\n\n\nassert solution(\n    \"\"\"\n    +---+---+---+---+---+---+---+---+\n    |.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n    +---+---+---+---+---+---+---+---+\n    |:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n    +---+---+---+---+---+---+---+---+\n    |...|:::|.n.|:::|...|:::|...|:p:|\n    +---+---+---+---+---+---+---+---+\n    |:::|...|:::|...|:::|...|:::|...|\n    +---+---+---+---+---+---+---+---+\n    |...|:::|...|:::|.P.|:::|...|:::|\n    +---+---+---+---+---+---+---+---+\n    |:P:|.P.|:P:|...|:P:|.P.|:P:|:P:|\n    +---+---+---+---+---+---+---+---+\n    |.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n    +---+---+---+---+---+---+---+---+\n    |:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n    +---+---+---"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output\nprint(solution(sys.stdin.read()))\n\"\"\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|:K:|.B.|:::|.B.|:K:|.B.|:::|.B.|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|:K:|.B.|:::|.B.|:K:|.B.|:::|.B.|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|:K:|.B.|:::|.B.|:K:|.B.|:::|.B.|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|:K:|.B.|:::|.B.|:K:|.B.|:::|.B.|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|:K:|.B.|:::|.B.|:K:|.B.|:::|.B.|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n|:K:|.B.|:::|.B.|:K:|.B.|:::|.B.|\n+---+---+---+---+---+---"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|:p:|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|:p"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n'''\n\nprint(solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''')) == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\") == \\\n    \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n\nprint(solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:P:|.P.|:P:|.P.|:P:|:::|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\")) == \\\n    \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n\nprint(solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|:p:|:p:|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:P:|.P.|:P:|:P:|:P:|:::|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:::|.P.|\\n+---+---+---+---+---+---+---+---+\")) == \\\n    \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('8 0') == 'You will become a flying monkey!'\nassert solution('8 5') == 'You will become a flying monkey!'\nassert solution('4 5') == 'Your wish is granted!'\nassert solution('9 6') == 'You will become a flying monkey!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 3''') == 'Your wish is granted!'\nassert solution('''7 4''') == 'Your wish is granted!'\nassert solution('''0 0''') == 'Your wish is granted!'\nassert solution('''100 100''') == 'Your wish is granted!'\nassert solution('''100 3''') == 'Your wish is granted!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Your wish is granted!\"\n"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('7 2') == 'You will become a flying monkey!'\nassert solution('2 0') == 'You will become a flying monkey!'\nassert solution('2 1') == 'Your wish is granted!'\nassert solution('1 1') == 'Your wish is granted!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == ''\n'''\n\n'''\n- When guessing, the Wizard will ask you to \"True/False\" questions about the number, for example, \"Is the number even?\", \"Is the number between 7 and 10?\", \"Is the number 17 or 22?\", and the Wizard will answer with \"true\" or \"false\" to each question. The Wizard will always answer honestly. After answering the $K$ questions, you must guess the number. If you win (guess the number correctly), you will be granted your wish. Otherwise, if the Wizard wins (you guess incorrectly), you will be turned into a flying monkey.\n\n- When you are asked to answer a \"True/False\" question, you can think of a \"question\" as a function from $1, 2, \\ldots, N$ to true, false, and the Wizard will answer by telling you whether the value of the function is true or false for his secret number.\n\n- We are given a secret number and the Wizard is allowed to ask K \"True/False\" questions about this number, and will answer with \"true\" or \"false\" to each question. The Wizard always answers honestly. We can use a clever method to get a secret number, but the method is not obvious.\n\n- Given $N$ and $K$, we can use a clever method to get a secret number, but the method is not obvious. The secret number is one that can be described as a function from $1, 2, \\ldots, N$ to true, false, and the Wizard will answer with \"true\" or \"false\" to each question.\n\n- When we ask the Wizard to answer a \"True/False\" question, we can use a clever method to get a secret number, but the method is not obvious.\n\n- We are given $N$ and $K$ and we have to know $N$\u2019s secret number. We know that the secret number can be described as a function from $1, 2, \\ldots, N$ to true, false, and the Wizard will answer with \"true\" or \"false\" to each question.\n\n- We know that the Wizard has guessed the secret number, but the secret number can be described as a function from $1, 2, \\ldots, N$ to true, false, and the Wizard will answer with \"true\" or \"false\" to each question.\n\n- If the Wizard guesses the secret number correctly, he wins. Otherwise, the Wizard wins.\n'''\n\nfrom sys import stdin, stdout\nfrom math import sqrt\nfrom collections import defaultdict\nfrom collections import Counter"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Your wish is granted!'\nassert solution(stdin) == 'You will become a flying monkey!'\nassert solution(stdin) == 'Your wish is granted!'\n'''\n'''\n"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 5\"\n) == \"Your wish is granted!\"\nassert solution(\n    \"8 6\"\n) == \"You will become a flying monkey!\"\nassert solution(\n    \"10 7\"\n) == \"Your wish is granted!\"\nassert solution(\n    \"5 6\"\n) == \"You will become a flying monkey!\"\nassert solution(\n    \"8 5\"\n) == \"Your wish is granted!\"\n"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Your wish is granted!\"\n\nassert solution('8 2') == \"Your wish is granted!\"\n\nassert solution('9 2') == \"Your wish is granted!\"\n\nassert solution('7 3') == \"Your wish is granted!\"\n\nassert solution('9 5') == \"Your wish is granted!\""
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('2 5') == 'Your wish is granted!'\nassert solution('7 3') == 'Your wish is granted!'\nassert solution('5 2') == 'Your wish is granted!'\nassert solution('5 1') == 'Your wish is granted!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1 3') == 'Your wish is granted!'\nassert solution('10 2') == 'You will become a flying monkey!'\nassert solution('22 2') == 'You will become a flying monkey!'\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n        \"16\") == \"16\"\nassert solution(\n        \"32\") == \"32\"\nassert solution(\n        \"64\") == \"32\"\nassert solution(\n        \"128\") == \"64\"\nassert solution(\n        \"256\") == \"128\"\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"16\") == \"16\"\nassert solution(\"5\") == \"5\"\nassert solution(\"5.25\") == \"5.25\"\nassert solution(\"6.75\") == \"6.75\"\nassert solution(\"8\") == \"8\"\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(16) == '16'\n\"\"\"\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"16\""
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''16''') == \"16\"\nassert solution('''1000000000''') == \"1000000000\"\n'''\nimport sys\nsys.path.insert(0, './')\nfrom test_fixtures import *\n\n@pytest.mark.parametrize(\"input, output\", [\n    ('''16''', \"16\"),\n    ('''1000000000''', \"1000000000\"),\n])\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n16\n''') == '16'\n'''\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('16') == '16'\nassert solution('5') == '5'\nassert solution('42') == '14'\nassert solution('123') == '30'\nassert solution('12345') == '60'\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''16''') == '16'\nassert solution('''15''') == '15'\nassert solution('''64''') == '64'\nassert solution('''100000''') == '16384'\nassert solution('''314159''') == '31416'\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 16\n'''\n'''\nInput:\n1000000\nSample Output:\n7342697.0\nExplanation:\nIn this sample, Old MacDonald had a farm, and on that farm he had a square-shaped pasture with length 1,000,000 (1 million square meters)\n\nSo now Old MacDonald wants to set up a fence around his pasture. Given the area of the pasture, how long a fence does Old MacDonald need to buy?\n\nThe length should be accurate to an absolute or relative error of at most $10^{-6}$.\n'''\na = int(input())\nprint(a*a)\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('16') == '16'\nassert solution('16') == '16'\nassert solution('16') == '16'\nassert solution('32') == '32'\nassert solution('8') == '8'\n"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n') == '4'\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n') == '4'\nassert solution('6\\n6\\n6\\n6\\n6\\n6\\n6\\n') == '4'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '0'\nassert solution('2\\n2\\n1\\n1\\n1\\n1\\n1\\n') == '2'\n"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20\n''') == '4'\n'''\n\nimport sys"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 180') == '4'\nassert solution('6 180') == '4'\nassert solution('6 200') == '5'\nassert solution('6 180') == '4'\nassert solution('6 180') == '4'\n"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('2\\n4') == '4'\nassert solution('2\\n8') == '2'\n"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 2 3 4') == '1'\nassert solution('2 4 6 8 10 12') == '3'\nassert solution('20 30 40 50 60') == '0'\nassert solution('1 2 3 4 5 6') == '6'\nassert solution('2 3 4 5 6') == '2'\n"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 180\n45 30 55 20 80 20''') == '4'\nassert solution('''4 90\n45 30 55 20 80 20''') == '2'\nassert solution('''4 40\n30 45 35 15 5''') == '4'\nassert solution('''4 40\n35 45 35 15 5''') == '0'\nassert solution('''3 30\n30 45 35\n35 45 35''') == '0'\n"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n0 3\\n5 3') == '2'\nassert solution('1\\n1') == '1'\nassert solution('5\\n1 3\\n1 1\\n2 1\\n2 2\\n2 2\\n2 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '33'\nassert solution('5\\n1 2\\n2 4\\n2 2\\n2 3\\n3 5\\n3 3\\n4 1\\n5 4\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5 1\\n4 3\\n4 5\\n5"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"7\"\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '79'\n\"\"\"\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n21\\n34\\n18\\n9') == 79\nassert solution('1\\n5') == 5\nassert solution('3\\n5\\n2') == 6\nassert solution('3\\n5\\n2\\n1') == 7\nassert solution('5\\n5\\n5\\n5\\n5') == 21\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '79'\nassert solution('3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '42'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '42'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '42'\n'''\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('21\\n34\\n18\\n9\\n') == '79'\nassert solution('9\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '9'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n') == '5'\nassert solution('4\\n1\\n2\\n3\\n4\\n') == '4'\nassert solution('3\\n2\\n1\\n') == '3'\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 79\n'''\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n21\\n34\\n18\\n9') == '79'\nassert solution('3\\n10\\n20\\n100\\n200\\n300\\n500\\n1000\\n2000') == '1999'\nassert solution('2\\n1\\n2\\n3\\n4') == '6'\nassert solution('5\\n100\\n100\\n100\\n100\\n100\\n100') == '501'\nassert solution('7\\n14\\n17\\n20\\n22\\n34\\n41\\n50\\n100\\n200\\n300\\n500') == '799'\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == '79'\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n21\\n34\\n18\\n9') == '79'\nassert solution('2\\n21\\n34\\n18\\n9') == '77'\nassert solution('3\\n21\\n34\\n18\\n9') == '75'\nassert solution('4\\n21\\n34\\n18\\n9') == '73'\nassert solution('5\\n21\\n34\\n18\\n9') == '70'\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n21\n34\n18\n9\n''') == '79'\nassert solution('''\n5\n12\n19\n8\n10\n''') == '35'\nassert solution('''\n3\n16\n23\n8\n9\n''') == '25'\n\n'''\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n21\\n34\\n18\\n9') == 79\n\"\"\"\nimport sys"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2 3 0'"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3 3 4\\n0 1 4\\n') == '2 3 0'\nassert solution('2 2 2 2\\n2 2 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 3 3 4\n0 1 4\n''') == 'impossible'\nassert solution('''5 3 3 4\n0 1 4\n''') == '2 3 0'\nassert solution('''5 2 2 3\n0 1 4\n''') == 'impossible'\nassert solution('''5 2 3 3\n0 1 4\n''') == 'impossible'\nassert solution('''5 2 3 3\n0 1 4\n''') == 'impossible'\n"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"2 3 0\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"1 0 0\"\nassert solution(stdin) == \"1 1 0\"\n"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n---\nOriginal repo:\nhttps://github.com/codebasics/data-structures-algorithms-python/blob/master/data_structures/4_algorithm_for_free_fridge.py\n\n\"\"\"\n\n\"\"\"\n\n## Method 1: O(mn) time complexity (Dynamic Programming)\nThis is the fastest method of the three, because it only has to solve for the solution at most mn times. It can be implemented in O(mn) time complexity, because it uses dynamic programming to solve the problem in O(mn) time.\n\n## Method 2: O(mn) time complexity (Greedy Approach)\nSince the work of filling the fridge is going to be done by students, then the fewest number of bottles to refill is the number of students that can be optimized for. The work done in each refill is the work of making sure that the next $m$ students get a cold bottle, and the time to make this is linear. We can do better than this, but there is a much lower bound on how many bottles can be filled.\n\n## Method 3: O(m^2) time complexity (Brute Force)\nWe can try to solve this problem by trying all possible combinations of bottles that could be placed in the fridge, and trying to see if all the students have a cold one. The number of combinations is exponential, and the worst-case time complexity is O(mn). \n\n## Method 4: O(m^2) time complexity (Greedy Approach)\nWe can try to solve this problem by trying to find a combination that maximizes the probability that all the next $m$ students will get a cold soda. In the worst case, we can place all $m$ bottles in the fridge, so the probability is 1. However, if the bottle count is too big, we can end up trying to place too many bottles in the fridge, so the probability is 0. In the best case, we can place all $m$ bottles in the fridge, so the probability is 1/m. The time complexity is O(m^2).\n\n## Method 5: O(mn) time complexity (Greedy Approach)\nSince the work of filling the fridge is going to be done by students, then the fewest number of bottles to refill is the number of students that can be optimized for. The work done in each refill is the work of making sure that the next $m$ students get a cold bottle, and the time to make this is linear. We can do better than this, but there is a much lower bound on how many bottles can be filled.\n\n## Method 6: O(m^2) time complexity (Brute Force)\nWe can try to solve this problem by trying all possible combinations of bottles that could be placed in the fridge, and trying to see if all the students have a cold one. The number of combinations is exponential, and the worst-case time complexity is O(mn). \n\n## Method 7: O(mn) time complexity (Greedy Approach)\nSince the work of filling the fridge is going to be done by students, then the fewest number of bottles to refill is the number of students that can be optimized for. The work done in each refill is the work of making sure that the next $m$ students get a cold bottle, and the time to make this is linear. We can do better than this, but there is a much lower bound on how many bottles can be filled.\n\n## Method 8: O(m^2) time complexity (Greedy Approach)\nWe can try to solve this problem by trying to find a combination that maximizes the probability that all the next $m$ students will get a cold soda. In the worst case, we can place all $m$ bottles in the fridge, so the probability is 1. However, if the bottle count is too big, we can end up trying to place too many bottles in the fridge, so the probability is 0. In the best case, we can place all $m$ bottles in the fridge, so the probability is 1/m. The time complexity is O(m^2).\n\n\"\"\""
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'impossible'\n\nprint(\"Testcase 1: pass\")\nprint(\"Testcase 2: pass\")\nprint(\"Testcase 3: pass\")\nprint(\"Testcase 4: pass\")\nprint(\"Testcase 5: pass\")\n\"\"\"\n\n\nfrom sys import stdin\nimport random"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3 3 4\n0 1 4''') == 'impossible'\nassert solution('''5 3 3 4\n1 0 3\nSample Input:\n5 1 3 4\n2 1 4\nSample Output:\n2 3 0\nExplanation:\nIf the students get a cold soda, then we need to put the new bottle in the first three slots, and put the old bottle in the last one.\nIf the students do not get a cold soda, then we need to put the new bottle in the first two slots.\n\n''') == 'impossible'\nassert solution('''5 3 3 4\n2 1 4\nSample Input:\n5 1 3 4\n1 0 3\nSample Output:\n2 3 0\nExplanation:\nIf the students get a cold soda, then we need to put the new bottle in the first three slots, and put the old bottle in the last one.\nIf the students do not get a cold soda, then we need to put the new bottle in the first two slots.\n''') == 'impossible'\nassert solution('''5 3 3 4\n1 0 3\nSample Input:\n5 1 3 4\n1 0 3\nSample Output:\n2 3 0\nExplanation:\nIf the students get a cold soda, then we need to put the new bottle in the first three slots, and put the old bottle in the last one.\nIf the students do not get a cold soda, then we need to put the new bottle in the first two slots.\n''') == 'impossible'\nassert solution('''5 3 3 4\n2 1 4\nSample Input:\n5 1 3 4\n2 1 4\nSample Output:\n0 2 0\nExplanation:\nIf the students get a cold soda, then we need to put the new bottle in the first three slots, and put the old bottle in the last one.\nIf the students do not get a cold soda, then we need to put the new bottle in the first two slots.\n''') == 'impossible'\n"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\"\n\"\"\"\n\n\n\"\"\"\n____________SOLUTION_____\n\"\"\"\nimport sys\nimport random\nfrom collections import defaultdict, Counter\n\nn, m, s, d = [int(n) for n in sys.stdin.readline().split()]\n"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\nSample Input:\n3 3 4 4\n1 2 3\nSample Output:\nimpossible\nExplanation:\nIt is impossible for all the next 3 students to get a cold soda.\n\"\"\"\n\nfrom collections import Counter\nfrom random import randint"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 0 1 0 0 0') == '1 0 0 0 0 1'\nassert solution('0 0 0 0 0 0 0') == '0 0 0 0 0 0'\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 0 0 0 0 0') == '1 0 0 0 0 1'\nassert solution('0 0 0 0 0 0') == '1 0 0 0 0 1'\nassert solution('0 0 0 0 0 0') == '1 0 0 0 0 1'\nassert solution('0 0 0 0 0 0') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n        \"\"\"\n    0 1 2 2 2 7\n    \"\"\") == \"\"\"\n    1 0 0 0 0 1\n    \"\"\".strip()\n\nassert solution(\n        \"\"\"\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    \"\"\") == \"\"\"\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    \"\"\".strip()\n\nassert solution(\n        \"\"\"\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    \"\"\") == \"\"\"\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    \"\"\".strip()\n\nassert solution(\n        \"\"\"\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    \"\"\") == \"\"\"\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    \"\"\".strip()\n\nassert solution(\n        \"\"\"\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    \"\"\") == \"\"\"\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    -1 -1 -1 -1 -1 -1\n    \"\"\".strip()"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\nassert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\nassert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\nassert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\nassert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\n\nassert solution(\"1 1 1 1 1 1\") == \"0 0 0 0 0 1\"\n\"\"\"\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"1 1 1 1 1 1\") == \"0 0 0 0 0 0\"\nassert solution(\"0 0 0 0 0 0\") == \"0 0 0 0 0 0\"\nassert solution(\"5 5 5 5 5 5\") == \"5 5 5 5 5 5\"\nassert solution(\"5 4 5 5 5 5\") == \"5 4 5 5 5 5\"\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('7 0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('7 0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('7 7 7 7 7 7 7') == '0 0 0 0 0 0'\n"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(solution(input()))) == '1.3334'\n'''"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n123456 0.6666\nqwerty 0.3334''') == '1.3334'\nassert solution('''3\n123456 0.6666\nqwerty 0.3333\nzyxwv 0.1234''') == '1.2334'\nassert solution('''4\n123456 0.6666\nqwerty 0.3333\nzyxwv 0.1234\naaaa 0.1234''') == '1.2334'\nassert solution('''4\n123456 0.6666\nqwerty 0.3333\nzyxwv 0.1234\naaaa 0.1234''') == '1.2334'\nassert solution('''4\n123456 0.6666\nqwerty 0.3333\nzyxwv 0.1234\naaaa 0.1234\nzzzzz 0.1234''') == '1.2334'\n"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n123456 0.6666\nqwerty 0.3334''') == '1.3334'\nassert solution('''1\n123456 0.6666\nqwerty 0.3334''') == '0.3334'\nassert solution('''7\nghjk 0.5\nasdf 0.5\nzxcv 0.5\nyuiop 0.25\nopqrs 0.25\ntuvw 0.25\n''') == '8.9618'\nassert solution('''1\n123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\nassert solution('''1\n123456 0.6666\nqwerty 0.3334\n''') == '0.3334'\n"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\nassert solution('''\n10\nqwerty 0.9\nqwerty 0.5\nqwerty 0.3\nqwerty 0.07\nqwerty 0.12\nqwerty 0.19\nqwerty 0.1\nqwerty 0.1\nqwerty 0.1\n''') == '2.0024'\n'''\n"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n123456 0.6666\nqwerty 0.3334''') == '1.3333'\nassert solution('''4\nqwerty 0.0\nqwe rty 0.0\ntyu iop 0.0\ntyuiop 0.0''') == '5.3333'\nassert solution('''6\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\ntyuiop 0.0''') == '13.3333'\nassert solution('''10\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\ntyuiop 0.0''') == '30.3333'\nassert solution('''14\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\nqwe rty 0.0\ntyuiop 0.0\nzxcvbn 0.0\n123456 0.0''') == '69.3333'\n'''"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('inputs/test_2') == '1.3333'\nassert solution('inputs/test_3') == '0.6708'\nassert solution('inputs/test_4') == '0.3333'\nassert solution('inputs/test_5') == '1.0'\nassert solution('inputs/test_6') == '0.9'\n"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n123456 0.6666\nqwerty 0.3334''') == '1.3334'\nassert solution('''3\n123456 0.6666\nqwerty 0.3334\nasdfghjkl 0.1234''') == '1.3334'\nassert solution('''3\n123456 0.6666\nqwerty 0.3334\nzxcvbnm 0.1234''') == '1.3333'\nassert solution('''4\n123456 0.6666\nqwerty 0.3334\nzxcvbnm 0.1234\nZXCVBNM 0.1234''') == '1.3333'\nassert solution('''4\n123456 0.6666\nqwerty 0.3334\nzxcvbnm 0.1234\nZXCVBNM 0.1234''') == '2.3333'\n"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''123456 0.6666\nqwerty 0.3334''') == '1.3334'\nassert solution('''1 2 3 4 5\n10 11 12 13 14\n15 16 17 18 19\n20 21 22 23 24\n25 26 27 28 29\n30 31 32 33 34''') == '12.7857'\nassert solution('''1 2 3 4 5\n10 11 12 13 14\n15 16 17 18 19\n20 21 22 23 24\n25 26 27 28 29\n30 31 32 33 34\n35 36 37 38 39\n40 41 42 43 44\n45 46 47 48 49\n50 51 52 53 54\n55 56 57 58 59\n60 61 62 63 64\n65 66 67 68 69\n70 71 72 73 74\n75 76 77 78 79\n80 81 82 83 84\n85 86 87 88 89\n90 91 92 93 94\n95 96 97 98 99\n''') == '24.9355'\nassert solution('''1 2 3 4 5\n10 11 12 13 14\n15 16 17 18 19\n20 21 22 23 24\n25 26 27 28 29\n30 31 32 33 34\n35 36 37 38 39\n40 41 42 43 44\n45 46 47 48 49\n50 51 52 53 54\n55 56 57 58 59\n60 61 62 63 64\n65 66 67 68 69\n70 71 72 73 74\n75 76 77 78 79\n80 81 82 83 84\n85 86 87 88 89\n90 91 92 93 94\n95 96 97 98 99\n''') == '39.1668'\nassert solution('''1 2 3 4 5\n10 11 12 13 14\n15 16 17 18 19\n20 21 22 23 24\n25 26 27 28 29\n30 31 32 33 34\n35 36 37 38 39\n40 41 42 43 44\n45 46 47 48 49\n50 51 52 53 54\n55 56 57 58 59\n60 61 62 63 64\n65 66 67 68 69\n70 71 72 73 74\n75 76 77 78 79\n80 81 82 83 84\n85 86 87 88 89\n90 91 92 93 94\n95 96 97 98 99\n''') == '50.871'\n"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''123456 0.6666\nqwerty 0.3334''') == '1.3334'\n\nassert solution('''123456 0.6666\nqwerty 0.3333''') == '0.9933'\n\nassert solution('''123456 0.6666\nqwerty 0.3333''') == '0.9933'\n\nassert solution('''123456 0.6666\nqwerty 0.3333''') == '0.9933'\n\nassert solution('''123456 0.6666\nqwerty 0.3333''') == '0.9933'"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\nassert solution('''4\nedcba 0.125\nghjkl 0.5\nklmnop 0.125\n''') == '6.5'\nassert solution('''1\nabcde 1.0\nbcdea 0.5\nbcdea 0.125\n''') == '4.0'\nassert solution('''2\nedcba 0.125\nghjkl 0.5\nklmnop 0.125\n''') == '2.5'\nassert solution('''3\nedcba 0.125\nghjkl 0.5\nklmnop 0.125\n''') == '2.5'\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n1 2 4''') == '1'\nassert solution('''3 1\n1 2 4''') == '1'\nassert solution('''3 1\n1 2 4''') == '1'\nassert solution('''3 1\n2 3 4''') == '2'\nassert solution('''3 1\n2 3 4''') == '2'\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n\n---\n\"\"\"\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1\n1 2 4''') == '1'\nassert solution('''10 2\n7 4 1 3 2 3 4 5''') == '2'\nassert solution('''2 1\n10 11''') == '5'\nassert solution('''2 1\n4''') == '5'\nassert solution('''5 1\n4 2 3 4 5''') == '6'\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1\\n1 2 4') == '1'\nassert solution('3 3\\n1 2 3 4') == '2'\nassert solution('3 1\\n1 2 3\\n2 3 4') == '2'\nassert solution('3 1\\n1 2 3\\n2 3 4\\n3 4 5') == '2'\nassert solution('3 1\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6') == '4'\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 2 4') == '1'\nassert solution('3 2\\n1 2 4 3') == '2'\nassert solution('3 3\\n1 2 4 3') == '2'\nassert solution('4 1\\n1 2 4 3 4') == '4'\nassert solution('5 1\\n1 2 4 3 4 5') == '5'\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1\\n1 2 4') == '1'\nassert solution('3 1\\n2 1 2') == '2'\nassert solution('3 1\\n2 1 1') == '1'\nassert solution('3 1\\n1 1 1') == '1'\nassert solution('3 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\nstdin = '''3 2\n1 2 4\n'''\nassert solution(stdin) == \"1\"\nstdin = '''4 3\n1 2 4\n'''\nassert solution(stdin) == \"1\"\nstdin = '''2 3\n1 2\n'''\nassert solution(stdin) == \"2\"\nstdin = '''5 4\n1 2 4\n'''\nassert solution(stdin) == \"1\"\nstdin = '''1 1\n1\n'''\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1''') == '1'\nassert solution('''1 2 4''') == '1'\nassert solution('''1 2 3 4 5''') == '4'\nassert solution('''5 7 9 11 13''') == '7'\nassert solution('''3 3 1 2 4''') == '2'\n"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output\n\"\"\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:       \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n\nassert solution('2\\nC2') == \"\"\"a:    * \ng: ********\nf: ********\ne: ********\nd: ********\nc: ********\nb: ********\na: ********\"\"\"\n\nassert solution('2\\nC2') == \"\"\"a:    * \ng: ********\nf: ********\ne: ********\nd: ********\nc: ********\nb: ********\na: ********\"\"\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"\nG:                                                           \nF: ----------------------------------------------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n\"\"\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G: \\nF: -------------------------------------*--------------------\\nE:       *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                          *        \\ng: -----------------------------------------------*----------\\nf:                                           \\ne: ----------------------------------------------------------\\nd:                                           \\nc:                                           \\nb:                                           \\na: ----------------------------------------------------------'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == \\\n'''G:                                                       \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\n\nassert solution('''7\na C2 D2 E2 D2 E2 D2 B2''') == \\\n'''A:                                           \ng:                                               * \nf: --------------------------**-----------------*------\ne:                                                  *        \nd:                                                       *    \nc:                                                       *    \nb:                                                       *    \na: ----------------------------------------------------------'''\n\nassert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == \\\n'''G:                                                       \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\n\nassert solution('''27\nA C2 D2 E2 D2 E2 D2 B2''') == \\\n'''A:                                           \ng:                                               * \nf: --------------------------**-----------------*------\ne:                                                  *        \nd:                                                       *    \nc:                                                       *    \nb:                                                       *    \na: ----------------------------------------------------------'''\n\nassert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == \\\n'''G:                                                       \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n\"\"\") == \"\"\"\nG:           \nF: ----------------------------------------------------------\nE:           \nD: ----------------------------------------------------------\nC:           \nB: ----------------------------------------------------------\nA:           \ng: ----------------------------------------------------------\nf:           \ne: ----------------------------------------------------------\nd:           \nc:           \nb:           \na: ----------------------------------------------------------\n\"\"\"\nassert solution(\n\"\"\"\n3\nA4\n\"\"\") == \"\"\"\na:            *\nb: -----------\nc:          *\nd: ----------------------------------------------------------\ne:       *\nf: ----------------------------------------------------------\ng:           \nh: ----------------------------------------------------------\ni: ----------------------------------------------------------\nj: ----------------------------------------------------------\nk: ----------------------------------------------------------\nl:       *\nm: ----------------------------------------------------------\nn:       *\no: ----------------------------------------------------------\np: ----------------------------------------------------------\nq: ----------------------------------------------------------\nr:       *\ns: ----------------------------------------------------------\nt: ----------------------------------------------------------\nu: ----------------------------------------------------------\nv: ----------------------------------------------------------\nw: ----------------------------------------------------------\nx: ----------------------------------------------------------\ny: ----------------------------------------------------------\nz: ----------------------------------------------------------\n\"\"\"\nassert solution(\n\"\"\"\n5\nC4\nC2\nD2\nC4\nC2\n\"\"\") == \"\"\"\na:       *\nb: -----------\nc:          *\nd: ----------------------------------------------------------\ne:       *\nf: ----------------------------------------------------------\ng:           \nh: ----------------------------------------------------------\ni: ----------------------------------------------------------\nj: ----------------------------------------------------------\nk: ----------------------------------------------------------\nl:       *\nm: ----------------------------------------------------------\nn:       *\no: ----------------------------------------------------------\np: ----------------------------------------------------------\nq: ----------------------------------------------------------\nr:       *\ns: ----------------------------------------------------------\nt: ----------------------------------------------------------\nu: ----------------------------------------------------------\nv: ----------------------------------------------------------\nw: ----------------------------------------------------------\nx: ----------------------------------------------------------\ny: ----------------------------------------------------------\nz: ----------------------------------------------------------\n\"\"\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('C C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \\\n'''    G:        \n    F: ----------------------------------------------------------\n    E:       *    *          *             *   *                  \n    D: ----*-------**-----*-------------*-------*----------------\n    C: * *     *      * *     **    * *           *         ** **\n    B: --------------------------**-----------------*-----*------\n    A:                                                  *        \n    g: -----------------------------------------------*----------\n    f:                                                   \n    e: ----------------------------------------------------------\n    d:                                                           \n    c:                                                           \n    b:                                                           \n    a: ----------------------------------------------------------'''\n"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'G'\nassert solution('2') == 'F'\nassert solution('3') == 'E'\nassert solution('4') == 'D'\nassert solution('5') == 'C'\n"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n\nassert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n\nassert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n\nassert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n\nassert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\""
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n\"\"\"\n) == \"\"\"\nG:           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n\"\"\"\n\nassert solution(\n\"\"\"\n4\nB\nD\nC\nA\n\"\"\"\n) == \"\"\"\nB:           \nD: *       \nC:      *      \nA:          \n\"\"\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample0) == expected0\nassert solution(sample1) == expected1\nassert solution(sample2) == expected2\nassert solution(sample3) == expected3\nassert solution(sample4) == expected4\n"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n---------------------\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1 1\") == \"possible\"\nassert solution(\"2\\n1 2 1\") == \"possible\"\nassert solution(\"2\\n1 2 3\") == \"possible\"\nassert solution(\"2\\n1 2 3 4\") == \"possible\"\nassert solution(\"2\\n1 2 3 4 5\") == \"possible\"\n"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\"\nassert solution(\"3\\n1 1 1\\n1 1 1\\n\") == \"impossible\"\nassert solution(\"4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 1\") == \"possible\"\nassert solution(\"1\\n1 1 1 1\") == \"impossible\"\nassert solution(\"1\\n1 1 1 1 1\") == \"impossible\"\nassert solution(\"2\\n1 1 1\") == \"possible\"\nassert solution(\"2\\n1 1 1 1\") == \"impossible\"\n"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'possible'\nassert solution(stdin) == 'possible'\n\"\"\"\n\nimport sys\nfrom math import log"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 1') == \"possible\"\nassert solution('5\\n1 1 1 1 1') == \"possible\"\nassert solution('4\\n2 2 2') == \"possible\"\nassert solution('3\\n1 1 1') == \"possible\"\nassert solution('3\\n2 2 2') == \"possible\"\n"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1') == 'possible'\nassert solution('3\\n1\\n1') == 'possible'\nassert solution('3\\n1\\n2') == 'impossible'\nassert solution('3\\n2\\n1') == 'impossible'\nassert solution('3\\n1\\n2\\n2') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == 'possible'\nassert solution('3') == 'impossible'\nassert solution('1 1 1 2') == 'possible'\nassert solution('1 1 1 2 3') == 'possible'\nassert solution('1 1 1 2 3 4') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1') == 'possible'\nassert solution('2\\n2\\n2\\n2\\n2') == 'possible'\nassert solution('3\\n3\\n3\\n3\\n3') == 'possible'\nassert solution('4\\n4\\n4\\n4\\n4') == 'possible'\nassert solution('5\\n5\\n5\\n5\\n5') == 'possible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'possible'\n\nassert solution(stdin) == 'possible'\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n4 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''10\n4 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''10\n4 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''10\n4 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n4 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '4'\nassert solution('''10\n2 1 1 1 1 1 1 1 1 1''') == '2'\nassert solution('''10\n3 1 1 1 1 1 1 1 1 1''') == '3'\nassert solution('''10\n1 3 1 1 1 1 1 1 1 1''') == '5'\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('7\\n1 1 1 1 1 1 1 1 1') == '3'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '3'\nassert solution('8\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '4'\nassert solution('11\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '5'\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('100\\n1') == '1'\nassert solution('5\\n5 1 1 2 3') == '4'\nassert solution('2\\n1 1') == '2'\nassert solution('6\\n5 1 1 2 3 4 5') == '5'\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 3 2 1 2 2 1 1 3') == 3\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1''') == '1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1''') == '1'\nassert solution('''2\n1\n1\n2\n2\n2\n2\n2''') == '3'\nassert solution('''3\n1\n2\n2\n2\n1\n2\n3\n3\n2\n2\n2\n1''') == '4'\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n3 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''2\n1\n3\n4''') == '1'\nassert solution('''10\n6 1 2 4 3 5 8 7 6 5''') == '5'\nassert solution('''20\n6 1 2 4 3 5 8 7 6 5 10 11 12 13 14 15 16 17 18 19 20''') == '5'\nassert solution('''20\n1\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '5'\n"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\\\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == 'CARTER'\n'''\n\nimport sys"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n    ASHMEADE 9.90 8.85\n    BLAKE 9.69 8.72\n    BOLT 9.58 8.43\n    CARTER 9.78 8.93\n    FRATER 9.88 8.92\n    POWELL 9.72 8.61\n    ''') == '''\n    35.54\n    CARTER\n    BOLT\n    POWELL\n    BLAKE\n'''\n\nprint(solution('''\n    ASHMEADE 9.90 8.85\n    BLAKE 9.69 8.72\n    BOLT 9.58 8.43\n    CARTER 9.78 8.93\n    FRATER 9.88 8.92\n    POWELL 9.72 8.61\n    '''))\n"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'CARTER\\nBOLT\\nBLAKE\\nPOWELL\\nFRATER'\n\nassert solution(\n'''\n6\nHARRY 9.01 9.01\nCRYSTAL 9.89 9.02\nPETER 9.41 9.01\nBLAKE 9.27 9.18\nGARY 9.18 9.01\n''') == 'CRYSTAL\\nHARRY\\nGARY\\nBLAKE'\n\nassert solution(\n'''\n5\nBALFI 9.30 9.24\nBOHEME 9.29 9.16\nCRISTINA 9.19 9.22\nELIZABETH 9.22 9.15\nJACOB 9.28 9.25\n''') == 'BALFI\\nBOHEME\\nELIZABETH\\nJACOB'\n\nassert solution(\n'''\n5\nJACOB 9.20 9.14\nBOHEME 9.23 9.17\nCRISTINA 9.16 9.18\nBALFI 9.24 9.22\n''') == 'JACOB\\nBALFI\\nCRISTINA\\nBOHEME'\n\nassert solution(\n'''\n5\nJACOB 9.20 9.14\nBOHEME 9.23 9.17\nCRISTINA 9.16 9.18\nELIZABETH 9.22 9.15\n''') == 'JACOB\\nBALFI\\nCRISTINA\\nELIZABETH'"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9.90 8.85\\n9.69 8.72\\n9.58 8.43\\n9.78 8.93\\n9.88 8.92\\n9.72 8.61') == '35.54'\nassert solution('9.90 9.69\\n9.69 9.72\\n9.58 9.43\\n9.78 9.93\\n9.88 9.92\\n9.72 9.61') == 'BOLT'\nassert solution('9.90 9.69\\n9.69 9.72\\n9.58 9.43\\n9.78 9.93\\n9.88 9.92\\n9.72 9.61') == 'CARTER'\nassert solution('9.90 9.69\\n9.69 9.72\\n9.58 9.43\\n9.78 9.93\\n9.88 9.92\\n9.72 9.61') == 'BLAKE'\nassert solution('9.90 9.69\\n9.69 9.72\\n9.58 9.43\\n9.78 9.93\\n9.88 9.92\\n9.72 9.61') == 'POWELL'\n\"\"\"\nfrom collections import defaultdict\nfrom bisect import bisect_left\n"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == '''35.54\nCARTER\nBOLT\nPOWELL\nBLAKE'''\n'''\nFrom Wikipedia:\n\nA sprinting relay is a sports discipline in which one team is racing against another team by forming a sprint. In the two-team competition, the sprinting relay allows the two teams to run a certain number of consecutive sprints, each of which is 20m long. When a runner is picked, they are placed in a certain order. The runners in the order they were picked are placed in the order they were picked. If the team that runs a sprint is fast, then the runners that are on the $2$nd, $3$rd or $4$th leg run faster, but if the team that runs a sprint is slow, then the runners that are on the $2$nd, $3$rd or $4$th leg don\u2019t run at all.\n\nNote that even if all the runners are fast, if the order of the $2$nd, $3$rd or $4$th leg is different, the runners are not in the order they were picked.\n\nYou are the coach of the national athletics team and need to select which sprinters should represent your country in the $4 \\times 100$ m relay in the upcoming championships. \n\nAs the name of the event implies, such a sprint relay consist of $4$ legs, $100$ meters each. One would think that the best team would simply consist of the $4$ fastest $100$ m runners in the nation, but there is an important detail to take into account: flying start. In the $2$nd, $3$rd and $4$th leg, the runner is already running when the baton is handed over. This means that some runners \u2013 those that have a slow acceleration phase \u2013 can perform relatively better in a relay if they are on the $2$nd, $3$rd or $4$th leg.\n\nYou have a pool of runners to choose from. Given how fast each runner in the pool is, decide which four runners should represent your national team and which leg they should run. You are given two times for each runner \u2013 the time the runner would run the $1$st leg, and the time the runner would run any of the other legs. A runner in a team can only run one leg.\n\n-----Input-----\nThe first line of input contains an integer $n$, the number of runners to choose from ($4 \\leq n \\leq 500$). Then follow $n$ lines describing the runners. The $i$\u2019th of these lines contains the name of the $i$\u2019th runner, the time $a_ i$ for the runner to run the $1$st leg, and the time $b_ i$ for the runner to run any of the other legs ($8 \\le b_ i \\le a_ i < 20$). The names consist of between $2$ and $20$ (inclusive) uppercase letters \u2018A\u2019-\u2018Z\u2019, and no two runners have the same name. The times are given in seconds with exactly two digits after the decimal point.\n\n-----Output-----\nFirst, output a line containing the time of the best team, accurate to an absolute or relative error of at most $10^{-9}$. Then output four lines containing the names of the runners in that team. The first of these lines should contain the runner you have picked for the $1$st leg, the second line the runner you have picked for the $2$nd leg, and so on. Any solution that results in the fastest team is acceptable.\n\n-----Examples-----\nSample Input:\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nSample Output:\n35.54\nCARTER\nBOLT\nPOWELL\nBLAKE'''\n'''\nhttps://www.hackerrank.com/challenges/relay\n'''\nfrom statistics import median\n\nn = int(input())\n\nrunner_list = []\nfor _ in range(n):\n    name, speed_1, speed_2 = input().split()\n    runner_list.append((int(speed_1), name, int(speed_2)))\n\nrunner_list.sort(reverse=True)\nrunner_list = [x[1] for x in runner_list]"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == '35.54'\nassert solution('2\\nBOLT 9.43 9.43\\nBLAKE 9.72 9.72\\nCARTER 9.88 9.88\\nPOWELL 9.62 9.62\\nFRATER 9.80 9.80') == 'BOLT'\nassert solution('3\\nBOLT 9.43 9.43\\nBLAKE 9.72 9.72\\nCARTER 9.88 9.88\\nPOWELL 9.62 9.62\\nFRATER 9.80 9.80') == 'BLAKE'\nassert solution('4\\nBOLT 9.43 9.43\\nBLAKE 9.72 9.72\\nCARTER 9.88 9.88\\nPOWELL 9.62 9.62\\nFRATER 9.80 9.80') == 'POWELL'\nassert solution('5\\nBOLT 9.43 9.43\\nBLAKE 9.72 9.72\\nCARTER 9.88 9.88\\nPOWELL 9.62 9.62\\nFRATER 9.80 9.80') == 'POWELL'\n"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n\"\"\"\n) == \"CARTER\"\n"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''ASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == 'CARTER\\nBOLT\\nPOWELL\\nBLAKE'\nassert solution('''ASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == 'CARTER\\nBOLT\\nPOWELL\\nBLAKE'\nassert solution('''ASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == 'CARTER\\nBOLT\\nPOWELL\\nBLAKE'\nassert solution('''ASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == 'POWELL\\nBLAKE\\nFRATER\\nCARTER'\nassert solution('''ASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == 'POWELL\\nBLAKE\\nFRATER\\nCARTER'\n"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54'\n'''\n\nfrom sys import stdin"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n2 4\n5 6''') == '2'\nassert solution('''1 2\n2 4\n5 6''') == '2'\nassert solution('''1 2\n2 4\n5 6''') == '2'\nassert solution('''1 2\n2 4\n5 6''') == '2'\nassert solution('''1 2\n1 4\n5 6''') == '2'\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"\"\nassert solution(\"3\\n1 2\\n2 4\\n5 6\\n1 1\") == \"2\"\nassert solution(\"3\\n1 2\\n2 4\\n5 6\\n1 1\\n5 5\") == \"1\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2\n2 4\n5 6''') == '2'\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '2'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6''') == '3'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '4'\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '5'\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == '0'\nassert solution('3') == '1'\nassert solution('1 2') == '2'\nassert solution('2 4') == '1'\nassert solution('5 6') == '1'\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"1\\n2\\n4\\n6\") == \"4\"\nassert solution(\"1\\n2\\n4\\n6\\n6\") == \"2\"\nassert solution(\"1\\n2\\n4\\n6\\n6\\n6\") == \"4\"\nassert solution(\"1\\n2\\n4\\n6\\n6\\n7\\n7\\n8\") == \"4\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1 2\n2 4\n5 6\"\"\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 4\\n5 6') == '2'\nassert solution('3\\n1 2\\n2 4\\n5 6') == '2'\nassert solution('3\\n2 1\\n3 4\\n5 6') == '1'\nassert solution('3\\n1 2\\n2 4\\n3 6') == '1'\nassert solution('3\\n1 2\\n2 4\\n3 6') == '1'\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2\n2 4''') == \"2\"\nassert solution('''4\n1 2\n2 4\n5 6\n7 8''') == \"4\"\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6''') == \"1\"\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n7 8''') == \"2\"'''\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n7 8''') == \"2\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n2 4\\n5 6') == '2'\nassert solution('3\\n1 2\\n2 4\\n5 6') == '2'\nassert solution('3\\n1 2\\n2 4\\n5 7') == '3'\nassert solution('3\\n1 2\\n2 4\\n5 7') == '3'\nassert solution('4\\n1 2\\n2 4\\n5 6\\n6 7') == '2'\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"hey\") == \"heeey\"\nassert solution(\"heeey\") == \"heeey\"\nassert solution(\"hEeeY\") == \"heeey\"\nassert solution(\"hEEEy\") == \"heeey\"\nassert solution(\"heyeey\") == \"heeey\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heeee\") == \"heehee\"\nassert solution(\"hey!hey\") == \"heeeee\"\nassert solution(\"hey!hey!hey!\") == \"heeeeee\"\nassert solution(\"heeey\") == \"heehee\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"hey\") == \"heeey\"\nassert solution(\"hii\") == \"heeey\"\nassert solution(\"hmm\") == \"heeee\"\nassert solution(\"hii\") == \"heeey\"\nassert solution(\"heehe\") == \"hehehe\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'heeee'\nassert solution('he') == 'heeee'\nassert solution('heey') == 'heeee'\nassert solution('hee') == 'heee'\nassert solution('hee') == 'heee'\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(hey) == \"heey\"\nassert solution(hhey) == \"hheehee\"\nassert solution(hhey) == \"hheehee\"\nassert solution(hhey) == \"hheehee\"\nassert solution(hhey) == \"hheehee\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heeee\") == \"heehee\"\nassert solution(\"heyheyhey\") == \"hehehey\"\nassert solution(\"heyeyheyhey\") == \"heheheyhey\"\nassert solution(\"heyheyheyhey\") == \"heheheyheyhey\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"hey\") == \"heeey\"\nassert solution(\"hheeee\") == \"heheehee\"\nassert solution(\"heeee\") == \"heheehee\"\nassert solution(\"\") == \"\"\nassert solution(\"heyheee\") == \"heeehey\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('he') == 'hee'\nassert solution('heh') == 'heee'\nassert solution('heey') == 'heeee'\nassert solution('heeey') == 'heeeyy'\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"he\") == \"hee\"\nassert solution(\"heey\") == \"heehee\"\nassert solution(\"heehe\") == \"heeheehe\"\nassert solution(\"heeeeey\") == \"heeheehee\"\nassert solution(\"heeheee\") == \"heeheehee\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hey') == 'heey'\nassert solution('heeee') == 'heeeeey'\nassert solution('heee') == 'heee'\nassert solution('he') == 'hee'\nassert solution('') == ''\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n3 4 4 5''') == '1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n'\nassert solution('''5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n3 4 4 5''') == '1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n'\nassert solution('''10\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n3 4 4 5\n4 5 6 7\n5 6 8 9\n6 7 8 9\n7 8 9 10''') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n'\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '''1 2\n1 3\n1 4\n2 3\n'''\nassert solution('''\n6\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n3 4 4 5\n4 5 5 6\n5 6 6 0\n''') == '''1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n'''\nassert solution('''\n5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n3 4 4 5\n4 5 5 6\n''') == '''1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n'''\nassert solution('''\n5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n3 4 4 5\n4 5 5 6\n''') == '''1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n'''\nassert solution('''\n5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n3 4 4 5\n4 5 5 6\n''') == '''1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n'''\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 1\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''\n7\n0 1 1 1 1 1\n1 0 2 3 4 5\n1 2 0 3 4 5\n2 3 3 0 4 5\n3 4 4 4 0 5\n4 5 5 5 5 0\n5 6 6 6 6 6\n6 7 7 7 7 7\n7 8 8 8 8 8\n8 9 9 9 9 9\n9 10 10 10 10 10\n10 11 11 11 11 11\n11 12 12 12 12 12\n12 13 13 13 13 13\n13 14 14 14 14 14\n14 15 15 15 15 15\n15 16 16 16 16 16\n16 17 17 17 17 17\n17 18 18 18 18 18\n18 19 19 19 19 19\n19 20 20 20 20 20\n20 21 21 21 21 21\n21 22 22 22 22 22\n22 23 23 23 23 23\n23 24 24 24 24 24\n24 25 25 25 25 25\n25 26 26 26 26 26\n26 27 27 27 27 27\n27 28 28 28 28 28\n28 29 29 29 29 29\n29 30 30 30 30 30\n30 31 31 31 31 31\n31 32 32 32 32 32\n32 33 33 33 33 33\n33 34 34 34 34 34\n34 35 35 35 35 35\n35 36 36 36 36 36\n36 37 37 37 37 37\n37 38 38 38 38 38\n38 39 39 39 39 39\n39 40 40 40 40 40\n40 41 41 41 41 41\n41 42 42 42 42 42\n42 43 43 43 43 43\n43 44 44 44 44 44\n44 45 45 45 45 45\n45 46 46 46 46 46\n46 47 47 47 47 47\n47 48 48 48 48 48\n48 49 49 49 49 49\n49 50 50 50 50 50\n50 51 51 51 51 51\n51 52 52 52 52 52\n52 53 53 53 53 53\n53 54 54 54 54 54\n54 55 55 55 55 55\n55 56 56 56 56 56\n56 57 57 57 57 57\n57 58 58 58 58 58\n58 59 59 59 59 59\n59 60 60 60 60 60\n60 61 61 61 61 61\n61 62 62 62 62 62\n62 63 63 63 63 63\n63 64 64 64 64 64\n64 65 65 65 65 65\n65 66 66 66 66 66\n66 67 67 67 67 67\n67 68 68 68 68 68\n68 69 69 69 69 69\n69 70 70 70 70 70\n70 71 71 71 71 71\n71 72 72 72 72 72\n72 73 73 73 73 73\n73 74 74 74 74 74\n74 75 75 75 75 75\n75 76 76 76 76 76\n76 77 78 78 78 78\n78 79 80 80 80 80\n80 81 82 82 82 82\n82 83 84 85 86 87 88\n87 88 89 90 91 92 93\n93 94 95 96 97 98 99\n99 100 100 100 100\n''') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n1 166\\n1 167\\n1 168\\n1 169\\n1 170\\n1 171\\n1 172\\n1 173\\n1 174\\n1 175\\n1 176\\n1 177\\n1 178\\n1 179\\n1 180\\n1 181\\n1 182\\n1 183\\n1 184\\n1 185\\n1 186\\n1 187\\n1 188\\n1 189\\n1 190"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\n'''\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(TEST_1) == TEST_1_EXPECTED\nassert solution(TEST_2) == TEST_2_EXPECTED\nassert solution(TEST_3) == TEST_3_EXPECTED\nassert solution(TEST_4) == TEST_4_EXPECTED\nassert solution(TEST_5) == TEST_5_EXPECTED\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 1 2') == '1 2'\nassert solution('1 0 2 3') == '1 2'\nassert solution('1 2 0 3') == '1 3'\nassert solution('2 3 3 0') == '1 2'\nassert solution('0 1 1 2') == '1 2'\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Hello World\") == \"\"\nassert solution(\"Hello World\") == \"\"\nassert solution(\"0 1 1 2\") == \"\"\nassert solution(\"1 0 2 3\") == \"\"\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.strip()\nassert solution('BLSFD') == 'DFFG'\nassert solution('EWPGAJRB') == 'ABCD'\nassert solution('GAAKUBAT') == 'ABCD'\nassert solution('JUBIPL') == 'ABCD'\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\""
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n'''"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"AB\") == \"AB\"\nassert solution(\"ABBC\") == \"ABC\"\nassert solution(\"ABCABBC\") == \"ABC\"\nassert solution(\"ABCABBCBC\") == \"ABC\"\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('KJIHGFD') == 'LJHGB'\nassert solution('TWG') == 'YRW'\nassert solution('JHGV') == 'ORW'\nassert solution('ZJHG') == 'JWGB'\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"BKSC\") == \"ABCD\"\nassert solution(\"ABCD\") == \"ABCD\"\nassert solution(\"CZWAGM\") == \"ABCD\"\nassert solution(\"CZWAGM\") == \"ABCD\"\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"WGCOWRJD\") == \"ABCD\"\nassert solution(\"WGCTKCRJ\") == \"ABCD\"\nassert solution(\"WGCTKCRJ\") == \"ABCD\"\nassert solution(\"WGCTKCRJ\") == \"ABCD\"\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 2\nassert solution('ab') == 0\nassert solution('abcdef') == 3\nassert solution('abbc') == 1\nassert solution('abbbbc') == 2\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"cac\") == 0\nassert solution(\"cabba\") == 1\nassert solution(\"abcd\") == 0\nassert solution(\"abcdef\") == 0\nassert solution(\"abcdabc\") == 1\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc') == 2\nassert solution('abcc') == 2\nassert solution('abcdd') == 4\nassert solution('abcddc') == 2\nassert solution('zzzz') == 0\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abccc') == 1\nassert solution('aabbcc') == 3\nassert solution('aaaaa') == 0\nassert solution('aabbc') == 2\nassert solution('abcd') == 1\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abc') == 2\nassert solution('ab') == 1\nassert solution('abcdef') == 5\nassert solution('abcdefghi') == 7\nassert solution('aabbccddeefghi') == 0\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 2, 'got: %s' % (solution(stdin))\n\n'''\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abc') == 2\nassert solution('abcabcabc') == 1\nassert solution('aabcdcba') == 4\nassert solution('abcabca') == 2\nassert solution('abcabcabcabc') == 0\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('abc') == 0\nassert solution('ab') == 0\nassert solution('a') == 0\nassert solution('aa') == 0\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('abcd') == 0\nassert solution('aabccccddd') == 2\nassert solution('abcdefghhgfedcba') == 10\nassert solution('abcdefghhgfedcbaa') == 10\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc') == 2\nassert solution('babc') == 2\nassert solution('babc') == 2\nassert solution('babc') == 2\nassert solution('aba') == 1\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\nassert solution('aaaaaaaa') == 'no'\nassert solution('aaaaaaah') == 'go'\nassert solution('aaa') == 'go'\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == 'go'\nassert solution(input) == 'no'\nassert solution(input) == 'go'\nassert solution(input) == 'no'\nassert solution(input) == 'go'\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"aaah\", \"aaaaah\") == \"no\"\nassert solution(\"aaaaah\", \"aaaaah\") == \"go\"\nassert solution(\"aaaaah\", \"aaaaaaxh\") == \"no\"\nassert solution(\"aaaaah\", \"aaaaaah\") == \"go\"\nassert solution(\"aaaaaaxh\", \"aaaaaaxh\") == \"go\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\nassert solution('aahah') == 'go'\nassert solution('aaaaaah') == 'no'\nassert solution('aabbcc') == 'no'\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aaaaaaha') == 'no'\nassert solution('aaahh') == 'go'\nassert solution('aaahhaaahh') == 'go'\nassert solution('aaahhaaahah') == 'no'\nassert solution('aaahhaaaaah') == 'go'\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\nassert solution('aaaaaah') == 'go'\nassert solution('aaaaaah') == 'no'\nassert solution('aaaaaaaaaaah') == 'go'\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''aaaaa\naaaaa''') == 'no'\nassert solution('''aaah\naaaaah''') == 'go'\nassert solution('''aaaaa\naahh''') == 'go'\nassert solution('''aaaaa\naahh''') == 'go'\nassert solution('''aaaaa\naahh''') == 'go'\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\nassert solution('hhhh') == 'no'\nassert solution('aaaaaahahahhhhhhhhhhhhhhhhhhhhhhhhh') == 'go'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''aaaaaaaaaaah\naaaaah''') == 'no'\nassert solution(\n    '''aaah\naaaaah''') == 'go'\nassert solution(\n    '''aaah\nh''') == 'no'\nassert solution(\n    '''aabh\nh''') == 'no'\nassert solution(\n    '''aaah\naaaabh''') == 'go'\n"
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2') == 'A'\nassert solution('A2B1A2B2A1A2B2A2') == 'A'\nassert solution('A1B2A3B4A4B4A4B1B1A1B2A2A3') == 'A'\nassert solution('ABBABBABABABABABAB') == 'B'\nassert solution('ABBABBABABABABABABAA') == 'B'\n"
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A2B1A2B2A1A2A2') == 'A'\nassert solution('A1B1A1B1A1B1A2A2') == 'B'\nassert solution('A2B1A2B2A1A2A2A1A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2A1A2A1A2A2') == 'A'\nassert solution('A1B1A1B1A1B1A2A2A1A2A2A2') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"A2B1A2B2A1A2A2\") == \"A\"\nassert solution(\"AA\") == \"A\"\nassert solution(\"A4B1B2B1\") == \"A\"\nassert solution(\"A5B2A1A2B2\") == \"A\"\nassert solution(\"AB2B3B2AB2\") == \"A\"\n"
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A2B1A2B2A1A2A2\") == \"A\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"B\"\nassert solution(\"A1B2A3\") == \"A\"\nassert solution(\"ABBA\") == \"A\"\nassert solution(\"ABBBA\") == \"B\"\n"
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A2B1A2B2A1A2A2\") == \"A\"\nassert solution(\"B1A2B2A1A2A2A2\") == \"B\"\nassert solution
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABBABBAABB') == 'A'\nassert solution
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'A'\nassert solution('A1B2A1B2A2') == 'B'\nassert solution('A1B2A1B2A2A1A2') == 'A'\nassert solution('A1B2A1B2A2A1A2A2A1A2A1A2') == 'B'\nassert solution('AB') == 'B'\n"
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(A2B1A2B2A1A2A2) == \"A\"\nassert solution(A1B1A1B1A1B1B1) == \"B\"\nassert solution
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A2B1A2B2A1A2A2') == 'A'\nassert solution('B2B2B2B2B2B2B2B2') == 'B'\nassert solution('A2B1B2A1B2A2B2A1A2') == 'A'\nassert solution('B2B2B2B2B2B2B2B2') == 'B'\nassert solution('A2B1B2A1B2A2B2A1A2') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A2B1A2B2A1A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2B2') == 'A'\nassert solution('A1B2A2B1A2B2A2') == 'A'\nassert solution('A2B1B2A2') == 'A'\nassert solution('A1B2B1A2B1A2B2') == 'B'\n"
    }
]