[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution(\n'''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\nassert solution(\n'''\n9\n1 2\n2 3\n3 4\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n6 7\n6 8\n''') == '1 8 6'\nassert solution(\n'''\n5\n1 2\n2 3\n3 4\n3 5\n''') == '5'\nassert solution(\n'''\n5\n1 2\n2 3\n3 4\n4 5\n1 3\n4 5\n4 1\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'\nassert solution(stdin) == '1 8 6'\nassert solution(stdin) == '2 3 1'\nassert solution(stdin) == '1 8 6'\nassert solution(stdin) == '2 3 1'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"5\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"5\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"5\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"5\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"5\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n4 7\n1 7\n''') == '1 8 6'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n4 7\n3 8\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n') == '5\\n1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n3 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20') == '15'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n3 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n19 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40') == '35'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n3 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n19 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n39 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n197 199\\n198 200\\n199 201\\n200 202\\n201 203\\n202 204\\n203 205\\n204 206\\n205 207\\n206 208\\n207 209\\n208 210\\n209 211\\n210 212\\n211 213\\n212 214\\n213 215\\n214 216\\n215 217\\n216 218\\n217 219\\n218 220\\n219 221\\n220 222\\n221 223\\n222 224\\n223 225\\n224 226\\n225 227\\n226 228\\n227 229\\n228 230\\n229 231\\n230 232\\n231 233\\n232 234\\n233 235\\n234 236\\n235 237\\n236 238\\n237 239\\n238 240\\n239 241\\n240 242\\n241 243\\n242 244\\n243 245\\n244 246\\n245 247\\n246 248\\n247 249\\n248 250\\n249 251\\n250 252\\n251 253\\n252 254\\n253 255\\n254 256\\n255 257\\n256 258\\n257 259\\n258 260\\n259 261\\n260 262\\n261 263\\n262 264\\n263 265\\n264 266\\n265 267\\n266 268\\n267 269\\n268 270\\n269 271\\n270 272\\n271 273\\n272 274\\n273 275\\n274 276\\n275 277\\n276 278\\n277 279\\n278 280\\n279 281\\n280 282\\n281 283\\n282 284\\n283 285\\n284 286\\n285 287\\n286 288\\n287 289\\n288 290\\n289 291\\n290 292\\n291 293\\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\nimport sys"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n\nassert solution('''7\n1 2 3 4 5 6 7''') == '7 1'\n\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == '45 196'\n\nassert solution('''1000\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '193 45'\n'''"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '4 3\\n1 3\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '1 3\\n3 4\\n1 4\\n'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6') == '4 1\\n3 1\\n'\nassert solution('2\\n1\\n1\\n2\\n3\\n4\\n5\\n6') == '1 2\\n1 3\\n'\nassert solution('3\\n1\\n2\\n3\\n4\\n5\\n6') == '1 2\\n2 3\\n'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3\\n1\\n2\\n4\\n1\\n2\\n3\\n4\\n5') == '4 8'\nassert solution('4\\n5\\n1\\n2\\n3\\n4\\n5') == '20 8'\nassert solution('2\\n4\\n1\\n2\\n3\\n4\\n5') == '20 8'\nassert solution('2\\n3\\n1\\n2\\n4\\n1\\n2\\n3\\n4\\n5') == '4 8'\nassert solution('10\\n4\\n1\\n2\\n3\\n4\\n5') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n10 2 8 1 2 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\nassert solution(\"10\\n2 1 2 8 1 2 4 1 20 4 5\") == \"20 8\"\nassert solution(\"10\\n2 2 1 2 4 1 1 2 4 5\") == \"20 8\"\nassert solution(\"10\\n4 4 1 1 2 2 4 5\") == \"20 8\"\nassert solution(\"10\\n1 2 3 4 5 6\") == \"20 8\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''5\n2 1 5 6 10 6 10\n''') == '20 8'\nassert solution('''10\n3 4 6 6 3 2 2 4 1 1 1\n''') == '20 8'\nassert solution('''100\n11 76 31 48 42 85 76 90 42 54 46\n''') == '20 8'\nassert solution('''500\n201 44 32 152 122 143 193 93 122 82 123 118 122 123 122 129 124 145 88 145 87 145 86 146 88 116 117 144 117 109 112 119 122 123 123 122 124 123 123 123 122 135 132 122 122 119 118 116 123 122 131 122 127 125 123 123 122 125 122 133 134 123 122 123 122 122 127 123 123 122 131 125 123 123 122 134 123 122 123 122 122 134 123 123 122 122 122 131 125 123 122 129 122 123 122 123 122 123 122\n''') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''5\n5 6 8 6 4''') == '6'\nassert solution('''5\n5 6 8 6 7''') == '0'\nassert solution('''4\n4 6 8 4 1''') == '0'\nassert solution('''3\n3 6 6 1''') == '0'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\n\"\"\"\n\"\"\"\nNote:\nYou can also check the solution at the following link:\nhttps://www.codewars.com/kata/sudoku-solution-algorithm\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"24\"\n\n\"\"\"\n\n\"\"\"\n----SOLUTION----\n\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n\n----SOLUTION----\n\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n\n24\n\n\"\"\""
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n\"\"\""
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\n\n\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == answer\n\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\n\n\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '24'\nassert solution(stdin) == '56'\n\n'''\n\n'''\nTest Cases\n\nInp:    3 4 3\n    1 2 3 4\n    5 2 2 2\n    7 1 1 4\nOut:    24\n\nInp:    5 5 4\n    1 2 4 2 1\n    3 5 1 2 4\n    1 5 7 1 2\n    3 8 7 1 2\n    8 4 7 1 6\nOut:    56\n'''\n\n'''\nSOLUTION\n\nA brute force solution is to iterate through all possible rows and calculate the sums of each row. If the sum is divisible by k, add it to the result and reset the sums for the next row. Keep iterating until all rows are calculated.\n\nIn this approach, we will use a dictionary to store the sums of each row. The key is the sum, the value is the row number.\n\nFor each row, iterate through the rows above it and calculate the sums.\n\nFor each row, if the sum is divisible by k, store the sum in the dictionary.\n\nThen, iterate through the dictionary and return the maximum of the sums.\n\nTime Complexity: O(n^2)\nSpace Complexity: O(n^2)\n'''"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '24'\n\n\"\"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\nassert solution('''7 7 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n1 1 1 1 1''') == '57'\nassert solution('''30 30 5\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '29'\nassert solution('''7 7 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '59'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 3 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\") == \"56\"\nassert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\nTest.assert_equals(solution(stdin), stdout)\n\nTest.assert_equals(solution(stdin), stdout)\nTest.assert_equals(solution(stdin), stdout)\nTest.assert_equals(solution(stdin), stdout)\nTest."
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 4 3 2\\n') == '4'\nassert solution('5\\n1 2 4 3 2\\n') == '4'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6'\nassert solution('3\\n2 2 2\\n') == '1'\nassert solution('4\\n1 2 4 3\\n') == '4'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom collections import deque\n\nn = int(input())\na = deque(map(int, input().split()))\n\ns = 'L'\nk = 1\n\nwhile k < n:\n    if a[0] < a[-1]:\n        if a[0] == a[-1]:\n            k += 1\n            a.popleft()\n        else:\n            k += 1\n            a.popleft()\n            s += 'R'\n    else:\n        if a[0] == a[-1]:\n            k += 1\n            a.pop()\n        else:\n            k += 1\n            a.pop()\n            s += 'L'\n\nprint(k)\nprint(s)\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\nassert solution('''3\n2 2 2\n''') == '1'\nassert solution('''4\n1 2 4 3\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('7\\n1 3 5 6 5 4 2') == '6'\nassert solution('1\\n1') == 'L'\nassert solution('7\\n1 3 5 6 5 4 2') == '6'\nassert solution('1\\n2') == 'R'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 4 3 2') == '4'\nassert solution('1 3 5 6 5 4 2') == 'LRLRRR'\nassert solution('2 2 2') == '1'\nassert solution('3 3 3') == '3'\nassert solution('4') == 'R'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6'\nassert solution('3\\n2 2 2\\n') == '1'\nassert solution('4\\n1 2 4 3\\n') == '4'\nassert solution('2\\n2 2\\n') == 'R'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"1 2 4 3 2\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"4\") == \"LLRR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\nassert solution('''3\n2 2 2\n''') == '1'\nassert solution('''4\n1 2 4 3\n''') == '4'\nassert solution('''6\n1 3 5 6 5 4 2\n''') == 'LRLRRR'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '-1'\nassert solution('2\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '3'\nassert solution('2\\n8\\n') == '3'\nassert solution('2\\n4\\n4\\n7\\n7\\n1') == '3'\nassert solution('1\\n4\\n7\\n7\\n1') == '3'\nassert solution('1\\n4\\n7\\n7\\n1') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == '3'\nassert solution('2 2 3 3 5 5 6 7 8 9') == '3'\nassert solution('1 4 3 5 3 5 5 6 7 8 9') == '3'\nassert solution('1 3 3 5 3 5 5 6 7 8 9') == '3'\nassert solution
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 4 4 7 4 1''') == '3'\nassert solution('''6\n1 4 4 7 4 1''') == '3'\nassert solution('''6\n2 2 5 2 5''') == '3'\nassert solution('''5\n2 2 5 2 5''') == '-1'\nassert solution('''7\n1 3 3 7 7 1''') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6') == 3\nassert solution('2 2 2 2 2 2') == 3\nassert solution('2 2 2 2 1') == -1\nassert solution('2 2 2 1 1') == -1\nassert solution('1 2 3 4 5 6') == 3\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"1\\n4\\n7\\n4\\n1\") == \"-1\"\nassert solution(\"1\\n4\\n7\\n7\\n1\") == \"3\"\nassert solution(\"2\\n1\\n4\\n7\\n7\\n1\") == \"3\"\nassert solution(\"2\\n1\\n4\\n7\\n7\\n1\") == \"3\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"1 0 2 1\") == \"YES\"\nassert solution(\"1 1 2 2\") == \"NO\"\nassert solution(\"2 1 2 1\") == \"NO\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n\"\"\"\n\nfrom math import ceil, log10"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\"\"\"\"\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 4 4''') == 'NO'\nassert solution('''1 1 3 5''') == 'NO'\nassert solution('''3 1 5 5''') == 'YES'\nassert solution('''5 2 10 5''') == 'YES'\n\n\n\nassert solution('''2 2 4 4''') == 'NO'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2 4 4''') == 'NO'\nassert solution('''2 2 4 4''') == 'NO'\nassert solution('''2 2 4 4''') == 'NO'\nassert solution('''0 0 4 4''') == 'YES'\nassert solution('''0 0 4 4''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"NO\"\n\n'''\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n'''\n\n'''\nPROGRAM NAME: woodcutting\n\nWrite a program that reads a sequence of numbers from standard input and writes the minimum number of woodcuts needed to make a piece of wood with the maximum length.\n\nFor example, if you are given the sequence: 1 2 3 4 5 6 7 8 9 10, you should write the sequence: 1 3 6 9.\n\nIn this example, the maximum length is 10, so you need to make 10 cuts.\n\nThe sequence is given on a single line, with each number separated by a space.\n'''\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n- Output:\n1 3 6 9\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n- Output:\n1 3 4 5 6 7 8 9 10\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n- Output:\n1 3 4 5 6 7 8 9 10\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n- Output:\n1 3 4 5 6 7 8 9 10\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n- Output:\n1 2 3 4 5 6 7 8 9 10\n'''\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n- Output:\n1 3 4 5 6 7 8 9 10\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n- Output:\n1 2 3 4 5 6 7 8 9 10\n'''\n\n\n'''\nPROGRAM NAME: p\n\nWrite a program that reads a sequence of numbers from standard input and writes the sum of the largest and the smallest of the numbers. For example, if you are given the sequence: 1 2 3 4 5 6 7 8 9 10, you should write the sequence: 2 1.\n\nIn this example, the largest and the smallest are the numbers $9$ and $1$.\n\nThe sequence is given on a single line, with each number separated by a space.\n'''\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n10 1\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n10 1\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n10 1\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n10 1\n'''\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n10 1\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n10 1\n'''\n\n\n'''\nPROGRAM NAME: a\n\nWrite a program that reads a sequence of numbers from standard input and writes the average of the numbers. For example, if you are given the sequence: 1 2 3 4 5 6 7 8 9 10, you should write the sequence: 2 4.\n\nThe sequence is given on a single line, with each number separated by a space.\n\nThe average is the sum of the numbers divided by the number of numbers.\n'''\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n'''\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n'''\n\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n'''\n\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n'''\n\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n'''\n\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n'''\n\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n'''\n\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n'''\n\n\n'''\n- Input:\n1 2 3 4 5 6 7 8 9 10\n\n- Output:\n2 4\n\n- Input:"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('990') == '19'\nassert solution('99') == '19'\nassert solution('12345') == '5'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10098\") == \"20\"\nassert solution(\"10\") == \"19\"\n\"\"\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('10099') == '101'\nassert solution('100') == '1010'\n\n\n-----"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('11') == '2'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1098) == 19\nassert solution(10) == 19"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('10') == '1'\nassert solution('1098') == '20'\nassert solution('1098109810') == '19'\nassert solution('10981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810981098109810"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('10') == '19'\nassert solution('99') == '10098'\nassert solution('999') == '999'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1098''') == '20'\nassert solution('''10''') == '19'\nassert solution('''10099''') == '101'\nassert solution('''10098''') == '20'\nassert solution('''14891''') == '21'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0'\nassert solution('2\\n0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0'\nassert solution('2\\n0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0'\nassert solution('2\\n0\\n0\\n0\\n0\\n0') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 0 0 1 2\\n0\\n4\\n0\\n1\\n2\\n4\") == \"0 1 4 3 2\"\nassert solution(\"5\\n0 0 0 1 2 4\\n0\\n0\\n0\\n0\\n0\") == \"0 1 4 3 2\"\nassert solution(\"5\\n0 0 0 1 2 4\\n0\\n1\\n1\\n1\\n1\") == \"0 1 4 3 2\"\nassert solution(\"7\\n0 0 0 1 2 4 0 6\\n0\\n0\\n0\\n0\\n0\") == \"0 1 4 3 2\"\nassert solution(\"5\\n7 4 0 3 0 5 1\\n0\\n0\\n0\\n0\\n0\") == \"0 1 4 3 2\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 0 0 0\\n\") == \"2 1 4 5 3\"\nassert solution(\"4\\n4 0 0 0\\n4 1 0 0\\n4 2 0 0\\n4 3 0 0\\n\") == \"4 3 1 2 3\"\nassert solution(\"5\\n5 0 0 0 0\\n5 1 0 0 0\\n5 2 0 0 0\\n5 3 0 0 0\\n\") == \"5 3 1 2 3 4\"\nassert solution(\"5\\n5 0 0 0 0\\n5 1 0 0 0\\n5 2 0 0 0\\n5 3 0 0 0\\n\") == \"5 3 1 2 3 4\"\nassert solution(\"6\\n6 0 0 0 0 0\\n6 1 0 0 0 0\\n6 2 0 0 0 0\\n6 3 0 0 0 0\\n\") == \"6 3 2 1 4 5 6\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\n\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\n\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\n5 0 0 2 4\n\"\"\") == \"\"\"-1\n5 3 1 2 4 \n\"\"\"\n\nassert solution(\"\"\"7\n7 0 0 1 4 0 6\n\"\"\") == \"\"\"-1\n7 3 2 1 4 5 6 \n\"\"\"\n\nassert solution(\"\"\"7\n7 4 0 3 0 5 1\n\"\"\") == \"\"\"-1\n7 4 2 3 6 5 1 \n\"\"\"\n\nassert solution(\"\"\"5\n2 1 0 0 0\n\"\"\") == \"\"\"-1\n2 1 4 5 3\n\"\"\"\n\nassert solution(\"\"\"7\n7 4 0 3 0 5 1\n\"\"\") == \"\"\"-1\n7 4 2 3 6 5 1 \n\"\"\""
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"7\") == \"3\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'\nassert solution('5 4\\n2 1 1 2 1\\n3 2 2 2 2 1\\n1 2 1 2 1 3\\n') == 'YES\\n2 1 1 2 2\\n1 2 2 1 2 3\\n1 2 2 1 2 1'\nassert solution('5 2\\n2 1 1 2 1\\n3 2 2 2 2 1\\n1 2 1 2 1 3\\n') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('4 2\\n3 2 1 2\\n') == 'YES\\n2 1 1 2 1'\nassert solution('3 2\\n1 1 1\\n') == 'YES\\n1 1 1 1'\nassert solution('6 3\\n1 2 1 3 2 1 3\\n') == 'NO'\nassert solution('6 3\\n2 1 2 2 3 1 2\\n') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n4\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('2\\n3\\n1 2 1\\n') == 'NO'\nassert solution('2\\n2\\n2 1 1\\n') == 'YES\\n1 1 2 2'\nassert solution('2\\n3\\n2 1 1\\n') == 'NO'\nassert solution('2\\n2\\n2 1 1\\n') == 'YES\\n2 1 1 2 1'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == 'YES\\n1 1 2 2'\nassert solution('5 2') == 'YES\\n2 1 1 2 1'\nassert solution('5 2') == 'NO'\nassert solution('3 2') == 'NO'\nassert solution('6 3') == 'YES\\n1 1 1 2 2 1'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"4 2\n1 2 2 3\"\"\"\n) == \"YES\\n1 1 2 2\"\nassert solution(\n\"\"\"5 2\n3 2 1 2 3\"\"\"\n) == \"YES\\n2 1 1 2 1\"\nassert solution(\n\"\"\"5 2\n2 1 1 2 1\"\"\"\n) == \"NO\"\nassert solution(\n\"\"\"6 2\n2 1 1 2 1 3\"\"\"\n) == \"NO\"\nassert solution(\n\"\"\"6 2\n2 1 1 2 1 3\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'\n\n\n'''"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'\nassert solution('5 2\\n1 1 1 2 1\\n') == 'NO'\n\n\n-----"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\" or \"NO\"\nassert solution(stdin) == \"YES\" or \"NO\"\nassert solution(stdin) == \"YES\" or \"NO\"\nassert solution(stdin) == \"YES\" or \"NO\"\nassert solution(stdin) == \"YES\" or \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"NO\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"5 3\") == \"NO\"\nassert solution(\"5 3\") == \"NO\"\nassert solution(\"2 2\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 3\\n1 2 1 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('2 2 1 1 3\\n2 1 1 1 2 3\\n') == 'YES\\n2 1 1 1 2'\nassert solution('2 1 1 1 3\\n2 1 1 1 2 3\\n') == 'NO'\nassert solution('2 1 1 1 3\\n2 1 1 1 2 3\\n') == 'YES\\n1 1 1 1 2'\nassert solution('2 1 1 1 3\\n2 1 1 1 2 3\\n') == 'NO'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '3'"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n11 5 2\n11010100101\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n11 5 1\n11010100101\n\"\"\") == \"3\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 9 1\") == \"1\"\nassert solution(\"10 19 1\") == \"3\"\nassert solution(\"21 12 1\") == \"1\"\nassert solution(\"21 1 1\") == \"1\"\nassert solution(\"50 11 1\") == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    input(\"\")\n) == \"\"\n\n\n\"\"\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 16 1') == '20'\nassert solution('11 16 0') == '20'\nassert solution('11 100 1') == '20'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 7 1\") == \"7\"\nassert solution(\"99999 100000 1\") == \"1\"\n\"\"\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"11 5 2\n11010100101\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"11 5 1\n11010100101\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"11 10 2\n11010100101\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"11 10 3\n11010100101\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"11 16 3\n11010100101\n\"\"\") == \"5\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '2'\nassert solution('2\\n') == '0'\nassert solution('6\\n') == '3'\nassert solution('10000000\\n') == '5000000'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\\\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''\\\n4\n3\n1 2 1\n3\n1 2 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''\\\n4\n3\n1 2 1\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''\\\n4\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''\\\n5\n3\n1 2 1\n5\n1 2 2 3 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4') == 'NO\\nYES\\nNO\\nNO'\nassert solution('3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\\n') == 'NO\\nNO\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1') == 'YES'\nassert solution('5') == 'NO'\nassert solution('1 2 2 3 2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1 1 2') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'NO\\nNO\\nNO\\nYES'\nassert solution('1\\n1\\n1\\n1') == 'YES\\nYES\\nYES\\nYES'\nassert solution('5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'NO\\nNO\\nNO\\nYES\\nNO'\nassert solution('3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2') == 'NO\\nNO\\nNO\\nYES\\nNO'\nassert solution('10\\n1 1 2 2 3 3 4 4 5 5\\n10\\n1 1 2 2 3 3 4 4 5\\n10') == 'NO\\nNO\\nNO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO'\n\n\n\n\"\"\""
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nNO\\nYES\\nNO\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1') == 'YES\\nNO\\nNO\\nYES\\nNO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'NO\\nNO\\nYES\\nYES\\nNO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n9\n1 1 2 2 3 3 4 4 5 5 6 6 7 7''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n9\n1 1 2 2 3 3 4 4 5 5 6 6 7 7''') == 'NO\\nNO\\nYES\\nYES\\nNO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n9\n1 1 2 2 3 3 4 4 5 5 6 6 7 7''') == 'NO\\nYES\\nNO\\nYES\\nNO'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n9\n1 1 2 2 3 3 4 4 5 5 6 6 7 7''') == 'YES\\nYES\\nNO\\nYES\\nNO'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4\n1337\n1 2 5 4 6 6 3 1 9\n\n\"\"\") == \"1557\"\n\nassert solution(\n\"\"\"\n5\n11111\n9 8 7 6 5 4 3 2 1\n\n\"\"\") == \"99999\"\n\nassert solution(\n\"\"\"\n2\n33\n1 1 1 1 1 1 1 1 1\n\n\"\"\") == \"33\""
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n1\\n
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n11111\\n1 1 1 1 1 1 1 1 1') == '99999'\nassert solution('1\\n11111\\n9 8 7 6 5 4 3 2 1') == '1557'\nassert solution('2\\n33\\n9 8 7 6 5 4 3 2 1') == '33'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1') == '99999'\nassert solution('2\\n33\\n9 8 7 6 5 4 3 2 1') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == ''\n\ninput = '2\\n11111\\n9 8 7 6 5 4 3 2 1'\nassert solution(input) == '99999'\n\ninput = '1\\n1\\n9 9\\n5 8 7 6 6 5 4 4 3 3 1'\nassert solution(input) == '99999'\n\ninput = '2\\n11111\\n9 8 7 6 5 4 3 2 1'\nassert solution(input) == '1557'\n\ninput = '3\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1'\nassert solution(input) == '99959'\n\ninput = '4\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.splitlines()[-1]"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''1\n9\n1 1 1 1 1 1 1 1 1\n''') == '9'\nassert solution('''2\n101\n1 1 1 1 1 1 1 1 1\n''') == '101'\n'''\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1553'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''\n2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\n\nassert solution('''\n10\n123456789\n1 2 3 4 5 6 7 8 9 0\n''') == '999999'\nassert solution('''\n10\n123456789\n0 1 2 3 4 5 6 7 8 9\n''') == '123456789'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9''') == '1553'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1''') == '33'\nprint(solution(input()))\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1553'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''\n2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n\nassert solution('''\n3\n21\n1 3 1\n''') == '2'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\" * 3\nassert solution(input()) == \"99999\"\nassert solution(input()) == \"99899\"\nassert solution(input()) == \"97982\"\nassert solution(input()) == \"98989898\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_cases/medium/equal_divisor.txt\", \"r\").read()) == \"1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\n\nprint(solution(open(\"test_cases/medium/equal_divisor.txt\", \"r\").read()))\n\n\n-----Time Limit Exceeded\n-----Memory Limit Exceeded\n\"\"\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\\n1 1 3\\n1 2 3\\n1 1 3\\n1 2 3\"\nassert solution(\"2\\n2 2 3\") == \"1 1 3\\n1 2 3\\n1 1 3\\n1 2 3\"\nassert solution(\"3\\n1 3 3\") == \"1\\n1 1 3\\n1 3 3\\n1 1 3\\n1 1 3\"\nassert solution(\"4\\n1 1 3\\n1 2 3\\n1 1 3\\n1 2 3\") == \"1\\n1 1 3\\n1 2 3\\n1 1 3\\n1 2 3\"\nassert solution(\"5\\n1 3 3\\n1 2 3\\n1 1 3\\n1 2 3\") == \"1\\n1 1 3\\n1 3 3\\n1 1 3\\n1 2 3\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\nsys.path.append(\"./Code/\")\nfrom Code import easy10"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3''') == '1'\nassert solution('''123 321 456''') == '1 1 3'\nassert solution('''5 10 15''') == '4'\nassert solution('''15 18 21''') == '4'\nassert solution('''100 100 101''') == '4'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n8\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n'''\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3''') == '1 1 3'\nassert solution('''123 321 456''') == '1 1 3'\nassert solution('''5 10 15''') == '1 1 3'\nassert solution('''15 18 21''') == '4'\nassert solution('''100 100 101''') == '4'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2 3''') == '1'\nassert solution('''123 321 456''') == '102'\nassert solution('''15 18 21''') == '114 228 456'\nassert solution('''15 18 21''') == '114 228 456'\nassert solution('''100 100 101''') == '4'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\\n1 1 3\"\nassert solution(\"2\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"2 1 100000\") == \"0\"\nassert solution(\"1 100000\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"2 1 2 3\") == \"1\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 3 3\\n') == '2'\nassert solution('2\\n1 100000\\n') == '0'\nassert solution('2\\n1 1\\n') == '0'\nassert solution('2\\n1 1\\n') == '0'\nassert solution('2\\n1 1\\n') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\nassert solution('''3\n1 100000\n1 7\n''') == '0'\nassert solution('''3\n1 100000\n1 100000\n1 7\n''') == '0'\nassert solution('''3\n1 100000\n1 100000\n1 100000\n1 7\n''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 3 3 7''') == '2'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''2\n1 100000''') == '0'\nassert solution('''5\n3 8 9 11 13''') == '2'\nassert solution('''2\n1 100000''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n3\\n7\\n') == '2'\nassert solution('2\\n1000000\\n') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\n\n'''\n\nimport sys\nassert sys.argv[1] == '4'\nassert sys.argv[2] == '1 3 3 7'\nassert sys.argv[3] == '2'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n3\") == \"2\"\nassert solution(\"1\\n4\") == \"3\"\nassert solution(\"1\\n5\") == \"4\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n7') == '2'\nassert solution('2\\n1\\n100000') == '0'\nassert solution('2\\n1\\n1000000') == '0'\nassert solution('2\\n1\\n10000000') == '0'\nassert solution('2\\n1\\n100000000') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 0\nassert solution('1\\n2') == 1\nassert solution('2\\n1') == 1\nassert solution('2\\n2') == 0\nassert solution('2\\n3') == 1\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '1 2 3 0 3'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('2 2') == '-1'\nassert solution('10 5') == '2 2 1 1 0 2 3 0 0 0'\nassert solution('4 4') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2 2 2 1 1'\nassert solution('5 2') == '-1'\nassert solution('3 2') == '1 1 1 0 0'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('3 5 2') == '1 1 1 0 0 0 2 2 1 1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('3 2') == '-1'\nassert solution('10 4') == '2 2 2 1 1 0 4 3 4 4'\n\n\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"10 3\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"2 2\") == \"0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"5 3\") == \"2 2 2 1 1 0 4 3 4 4\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 3 1\\n') == '2 2 2 1 1 0 3 3 4 4'\nassert solution('3 2\\n1 3 1\\n1 2 1\\n') == '2 2 1 1 0 3 3 4 4'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '2 2 2 1 1 0 3 3 4 4'\n\n\n\n\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nDATE: 2016-01-10\n\nMy solution is not correct. I have to write my own.\n\n\nMy solution was wrong. The program was not able to run.\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nCorrect solution (PEP8 compliant)"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''10 4\n5 3 2 4 1\n6 3 1 4 2\n2 4 1 1 3\n3 5 1 4 2\n3 4 1 1 2\n1 4 1 1 3\n1 4 1 1 2\n4 4 1 1 3\n1 4 1 1 2''') == '5 2 1 5 2 5 1 1 5 0 2 1 2 3 1 1 4 1 1 2 1 3 1 3 4 2 4 3 4 4 3 4'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 0\n\n'''"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n\n\n-----Solution 1-----\n\nIdea is to check if $n$ is divisible by $2$ or $3$ and count the steps.\n\nFor example, $n=42$ is divisible by $2$ and we can multiply it by $2$ and then by $3$ and divide by $2$ or $3$ (or neither). So we have to count $2$ and $3$ steps.\n\nIf $n$ is divisible by $3$ but not by $2$, then we need to divide $n$ by $3$ to get a quotient of a positive integer and then we need to add $2$ to get $n$.\n\nThis is the same idea as the first solution."
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\nassert solution(\"90 120\") == \"-1\"\n\n\"\"\""
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'\nassert solution('120 0') == '-1'\nassert solution('0 0') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, m = tuple(map(int, stdin.readline().split()))\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"42 42\") == \"0\"\nassert solution(\"120 51840\") == \"7\"\nassert solution(\"48 72\") == \"-1\"\nassert solution(\"39 84\") == \"-1\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('1 1') == '0'\nassert solution('1212') == '1'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('catcat') == 'catcat'\nassert solution('cat') == 'cat'\nassert solution('aba') == 'ababababa'\nassert solution('abc') == 'abc'\nassert solution('abca') == 'abca'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\nInput\n5 1\nabab\n\nOutput\nab\n\nInput\n4 3\nabc\n\nOutput\nabc\n\nInput\n3 2\nabc\n\nOutput\nab\n'''\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('ab') == 'abab'\nassert solution('aaa') == 'ab'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"catcat\""
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4\naba''') == 'ababababa'\nassert solution('''3 2\ncat''') == 'catcat'\nassert solution('''2 1\naaa''') == 'a'\nassert solution('''1 1\naa''') == ''\nassert solution('''4 4\naaaa''') == 'aaaa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('abc') == 'aab'\nassert solution('abcabc') == 'aabb'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aba', 'abc') == 'ababababa'\nassert solution('cat', 'cat') == 'catcat'\nassert solution('cd', 'cat') == 'cdcd'\nassert solution('ab', 'cat') == 'catcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('abc') == 'abcabc'\nassert solution('ac') == 'aacac'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''3\n1 2 3 1\n''') == '1 4'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('2 3') == ''\nassert solution('3 3') == '0'\nassert solution('4 3') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 5 1 2 2''') == '3'\nassert solution('''4\n8 3 5 2''') == '2'\nassert solution('''5\n2 1 2 4 3''') == '0'\nassert solution('''4\n2 1 2 4''') == '1 4'\nassert solution('''5\n2 1 2 4 3''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 3 3') == '3\\n0'\nassert solution('3\\n3 3 3') == '3\\n0'\nassert solution('4\\n1 2 3 4') == '4\\n1 2 3'\nassert solution('5\\n2 1 2 2 3') == '5\\n4'\nassert solution('4\\n2 1 2 2') == '4\\n0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\""
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n3\\n3\\n2\\n5\\n1\\n2\\n2') == '2\\n1\\n4\\n3'\nassert solution('3\\n2\\n1\\n2\\n1') == '0'\nassert solution('4\\n8\\n3\\n5\\n2') == '2\\n1\\n4'\nassert solution('4\\n3\\n1\\n2\\n1') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"5\n2 5 1 2 2\"\"\") == \"\"\"3\n4 1 5\"\"\"\n\nassert solution(\n    \"\"\"4\n8 3 5 2\"\"\") == \"\"\"2\n1 4 \n\"\"\"\n\nassert solution(\n    \"\"\"5\n2 1 2 4 3\"\"\") == \"\"\"0\n\"\"\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n8 3 5 2\\n\") == \"2\\n4 1 5\\n\"\nassert solution(\"4\\n2 1 2 4 3\\n\") == \"0\\n\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\\n\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\\n\"\nassert solution(\"4\\n8 3 5 2\\n\") == \"2\\n1 4 5\\n\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\n3\\n5\\n2\\n2') == '0\\n'\nassert solution('5\\n2\\n1\\n2\\n2') == '3\\n4\\n'\nassert solution('4\\n8\\n3\\n5\\n2') == '2\\n1\\n4\\n'\nassert solution('5\\n2\\n1\\n2\\n2') == '0\\n'\nassert solution('5\\n2\\n1\\n2\\n2') == '0\\n'"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == -1\nassert solution('asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfas"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('asdf') == '4'\nassert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('asd') == '-1'\nassert solution('hihiushda') == '233'\n\n\"\"\"\n\nn, k = [int(x) for x in stdin.split()]\ns = stdin[n:]\n\nr = 0\nfor i in range(1, n + 1):\n    t = s[i:i + n - i]\n    if t in s[:i] or t in s[i + 1:]:\n        r += n - i"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'b'\nassert solution('abc') == ''\nassert solution('abcdef') == 'c'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nprint('assertions passed')\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('asdf') == 4\nassert solution('aaaaa') == 15\nassert solution('ajihiushda') == -1\nassert solution('sdfghjk') == -1\nassert solution('ertyuihosd') == -1\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abaca') == 'aba'\nassert solution('aabaca') == 'a'\nassert solution('bcaa') == ''\nassert solution('aabaca') == ''\nassert solution('aaaaa') == 'a'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == '15'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('k') == '-1'\nassert solution('ppu') == '-1'"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'YES'\n'''\n\n'''"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'NO'\nassert solution('2 3 1') == 'YES'\nassert solution('2 3 2') == 'NO'\nassert solution('2 4 1') == 'YES'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin,stdout\n\nn,m,D = [int(x) for x in stdin.readline().split()]\n\nedges = [set() for x in range(n)]\n\nfor _ in range(m):\n    u,v = [int(x) for x in stdin.readline().split()]\n    edges[u-1].add(v-1)\n    edges[v-1].add(u-1)\n\nvisited = set()\nfor i in range(n):\n    if len(edges[i]) == D:\n        visited.add(i)"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 4\\n2 3\\n3 4\"\nassert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 2\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"NO\"\nassert solution(\"4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5\") == \"YES\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"NO\"\nassert solution(\"4 5 1\") == \"NO\"\nassert solution(\"4 5 2\") == \"YES\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1:2\") == \"1:3\"\nassert solution(\"2:2\") == \"2:3\"\nassert solution(\"2:02\") == \"2:03\"\nassert solution(\"2:02\") == \"2:03\"\nassert solution(\"10:02\") == \"11:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"10:00\"\n\"11:00\") == \"10:30\"\nassert solution(\n\"11:10\"\n\"11:12\") == \"11:11\"\nassert solution(\n\"01:02\"\n\"03:02\") == \"02:02\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:00\"\nassert solution(\"10:30\") == \"11:00\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"10:01\") == \"10:30\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10:00''') == '10:30'\nassert solution('''11:00''') == '10:30'\nassert solution('''11:10''') == '10:11'\nassert solution('''01:02''') == '02:02'\nassert solution('''03:02''') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10:00\n11:00''') == '10:30'\nassert solution('''11:10\n11:12''') == '11:11'\nassert solution('''01:02\n03:02''') == '02:02'\nassert solution('''10:00\n20:00\n''') == '10:30'\nassert solution('''10:20\n20:30\n''') == '20:30'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"\nassert solution(\"00:01\\n00:01\") == \"00:00\"\nassert solution(\"00:00\\n00:00\") == \"00:00\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"\nassert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"1\") == 1\nassert solution(\"2\") == 1\nassert solution(\"3\") == 2\nassert solution(\"4\") == 2\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('12') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"1\"\nassert solution(\"b\") == \"2\"\nassert solution(\"c\") == \"3\"\nassert solution(\"d\") == \"4\"\nassert solution(\"e\") == \"5\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"100\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 4\nassert solution('5') == 5\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\nassert solution('4') == 2\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\nassert solution('5') == 3\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n\n\"\"\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == 1\nassert solution('2\\n') == 2\nassert solution('3\\n') == 3\nassert solution('4\\n') == 4\nassert solution('5\\n') == 5\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\nassert solution(stdin) == ''\nassert solution(stdin) == ''\nassert solution(stdin) == ''\nassert solution(stdin) == ''\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('4\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\n\n\"\"\"\n\nN = int(input())\nA = [0] + [int(x) for x in input().split()]\n\nintersections = []\n\nfor i in range(1, N):\n    x0 = A[i - 1]\n    x1 = A[i]\n    \n    if x1 > x0:\n        if x1 > x0 + 1:\n            intersections.append(x0 + 1)\n        \n        if x0 > x1 - 1:\n            intersections.append(x1 - 1)\n        \nfor x in intersections:\n    print(x)"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n') == '1'\nassert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '0'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '7'\nassert solution('2\\n3 10\\n1 5\\n') == '2'\nassert solution('2\\n3 10\\n1 5\\n') == '2'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\nassert solution('1\\n3 10\\n1 5\\n') == '7'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\nassert solution('''2\n3 10\n1 5\n''') == '7'\nassert solution('''4\n4 5\n1 2\n9 20\n''') == '2'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution(\n'''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution(\n'''\n3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution(\n'''\n4\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '7'\n\nassert solution(\n'''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('7\\n2 1 1 2 5 7 7') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n100 1 4\\n\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n2\\n') == 'NO'\nassert solution('2\\n1\\n') == 'YES'\nassert solution('3\\n2\\n') == 'NO'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n2\\n2\\n') == 'NO'\nassert solution('2\\n1\\n2\\n2\\n1\\n') == 'YES'\nassert solution('3\\n1\\n2\\n2\\n2\\n') == 'NO'\nassert solution('3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n5 2 3') == 'NO'\nassert solution('1\\n2 1') == 'YES'\nassert solution('2\\n2 2') == 'YES'\nassert solution('1\\n1 1') == 'YES'\nassert solution('1\\n1 1') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n') == 'NO'\nassert solution('2\\n2\\n') == 'YES'\nassert solution('5\\n1 2 1 2 5\\n') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n') == 'NO\\n'\nassert solution('2\\n10 10\\n') == 'YES\\n'\nassert solution('3\\n1 2 3\\n') == 'NO\\n'\nassert solution('3\\n1 3 2\\n') == 'YES\\n'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"2 2 1 1 2\") == \"YES\"\nassert solution(\"2 10\") == \"NO\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\nasdf''') == '4'\nassert solution('''5 6\naaaaa''') == '15'\nassert solution('''5 7\naaaaa''') == '-1'\nassert solution('''10 100\najihiushda''') == '233'\nassert solution('''10 22\najihiushda''') == '-1'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ajihiushda\") == \"233\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"asdf\") == \"4\"\nassert solution(\"asd\") == \"1\"\nassert solution(\"adf\") == \"2\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('asdf') == '4'\nassert solution('asd') == '2'\nassert solution('adf') == '2'\nassert solution('asf') == '2'\nassert solution('sdf') == '1'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\n\n\n\n-----\n\n-----\n\n\"\"\""
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n'''\n'''\n    We can do a simple brute force approach: create a set of size $k$ and add each of the strings to it until we reach size $k$, then we can return the sum of the cost for each element in the set, and if the size is not $k$, we can't do it.\n\n    Time Complexity: O(nk)\n    Space Complexity: O(k)\n'''\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == 4\nassert solution('asdfasdf') == -1\nassert solution('aaaaa') == 15\nassert solution('aaaa') == -1\nassert solution('a') == 0\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"asdf\") == \"4\"\nassert solution(\"asdf\") == \"4\"\nassert solution(\"aaaaa\") == \"15\"\nassert solution(\"asdf\") == \"4\"\nassert solution(\"aaaaa\") == \"15\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\nwelcome to leetcode\n\nGiven a string $s$ consisting of $n$ lowercase Latin letters, you are required to find the minimum possible total cost to obtain a set $S$ of size $k$ or report that it is impossible to do so. $S$ can be a subset of $s$, or even a super set of $s$ (if the cost of the super set is less than the cost of the subset).\n\nThe cost of a string is defined as the sum of the absolute values of the ASCII values of the symbols in the string. For example, the cost of the string \"abaca\" is the sum of the absolute values of \"a\", \"b\", \"c\", \"a\", \"k\" and \"a\" (0 + 1 + 2 + 3 + 4 + 5 = 19).\n\nThe absolute value of a number is the number of digits in it, so the ASCII value of a character is its ASCII code. For example, the ASCII value of the lowercase letter \"a\" is 97.\n\nNote that the cost of a string $s$ is defined as:\n\n$s$ is not a super set of the string \"$s$\" if the cost of the super set is less than the cost of the subset.\n\nYour task is to find out the minimum possible total cost to obtain a set $S$ of size $k$ or report that it is impossible to do so.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $k$ ($1 \\le n, k \\le 100$) \u2014 the length of the string and the size of the set, correspondingly.\n\nThe second line of the input contains a string $s$ consisting of $n$ lowercase Latin letters.\n\n\n-----Output-----\n\nPrint one integer \u2014 if it is impossible to obtain the set $S$ of size $k$, print -1. Otherwise, print the minimum possible total cost to do it.\n\n\n-----Examples-----\nInput\n4 5\nasdf\n\nOutput\n4\n\nInput\n5 6\naaaaa\n\nOutput\n15\n\nInput\n5 7\naaaaa\n\nOutput\n-1\n\nInput\n10 100\najihiushda\n\nOutput\n233\n\nInput\n5 7\nbajihiushdabhahagb\n\nOutput\n-1\n\nInput\n7 4\nzababababab\n\nOutput\n24\n\nInput\n10 15\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('1 10 1') == '3'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"2 1 1\") == \"7\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"30 20 3\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('30 22 22') == '42'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1 1''') == '4'\nassert solution('''3 2 2''') == '7'\nassert solution('''1 100 1''') == '3'\nassert solution('''30 20 10''') == '39'\nassert solution('''20 10 5''') == '8'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('2 1 1') == '4'\nassert solution('4 3 1') == '5'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == 'YES'\n\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == 'NO'\n\n\n'''\n\n'''\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == 'YES' or 'NO'\nassert solution(open('input1.txt').read()) == 'YES' or 'NO'\n\n\n\n\"\"\""
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open(\"test/034.txt\").read()) == \"NO\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\nThe second test case of the input has two types of tiles, they are shown on the picture below. [Image] \n\nMasha can construct, for example, the following square of size $4 \\times 4$ which is a symmetric matrix: $\\left. \\begin{array}{|c|c|c|c|} \\hline 5 & {6} & {8} & {9} \\\\ \\hline 6 & {5} & {7} & {8} \\\\ \\hline 7 & {8} & {4} & {6} \\\\ \\hline 8 & {9} & {5} & {6} \\\\ \\hline 9 & {8} & {7} & {4} \\\\ \\hline \\end{array} \\right.$\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == \"YES\"\n\nassert solution('''2 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2') == 'YES'\nassert solution('1 1\\n1 1') == 'YES'\nassert solution('1 1\\n1 1\\n1 1') == 'NO'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == 'NO'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == 'YES'\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"5 6\") == \"YES\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"/dev/stdin\", \"r\").read()) == 'NO'\nassert solution(open(\"/dev/stdin\", \"r\").read()) == 'NO'\nassert solution(open(\"/dev/stdin\", \"r\").read()) == 'NO'\nassert solution(open(\"/dev/stdin\", \"r\").read()) == 'NO'\nassert solution(open(\"/dev/stdin\", \"r\").read()) == 'NO'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2') == '0'\nassert solution('4\\n1') == '0'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''7''') == '2'\nassert solution('''8''') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"6\") == \"\"\nassert solution(\"1, 2, 3, 4\") == \"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn = int(input())\n\na = set(int(i) for i in input().split())\nb = set(int(i) for i in input().split())\n\nprint(abs(sum(a) - sum(b)))\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n\"\"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''10''') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == 0\nassert solution('''5''') == 1\nassert solution('''6''') == 1\nassert solution('''12''') == 0\nassert solution('''48''') == 1\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '0'\nassert solution('2\\n1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '1'\nassert solution('3\\n1\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '1'\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '0'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('5') == ''\nassert solution('3') == ''\nassert solution('3 3') == '1'\nassert solution('2 4') == '0'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('()') == 1\nassert solution('(()())') == 2\nassert solution('((()))()()') == 1\nassert solution('(()()(()()))') == 1\nassert solution('((()()(()())()))') == 1\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('()())') == 0\nassert solution('((()))())') == 0\nassert solution('((()))()') == 1\nassert solution('()((()))()') == 1\nassert solution('((()))()') == 2\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('()') == '1'\nassert solution('((()))') == '1'\nassert solution('((()))') == '1'\nassert solution('()()') == '1'\nassert solution('((()))') == '1'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('()') == '1'\nassert solution('((()))') == '5'\nassert solution('((()))') == '5'\nassert solution('((()))') == '5'\nassert solution('((()))') == '5'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('()') == '0'\nassert solution(')(') == '0'\nassert solution(')((') == '0'\nassert solution('()(()') == '1'\nassert solution('()(()())') == '2'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 (3)\") == \"\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(()())') == '5'\nassert solution('((()))())') == '5'\nassert solution('((()))()') == '5'\nassert solution('((()))())') == '5'\nassert solution('()((()))()') == '5'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('()') == '0'\nassert solution('()())') == '1'\nassert solution('(()())') == '1'\nassert solution('()()') == '0'\nassert solution('(()())') == '0'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('()()') == '2'\nassert solution('(())') == '4'\nassert solution('())()') == '0'\nassert solution('(((()))())') == '2'\nassert solution('(()(()))()') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('()') == '0'\nassert solution('()()') == '2'\nassert solution('(()())') == '5'\nassert solution('((()))()') == '10'\nassert solution('(()()()') == '7'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n\nprint(solution(int(stdin.read())))\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('49800000') == '-1'\n\n\n'''"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"10000000\") == \"24\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('1003025') == '5'\nassert solution('7269') == '8'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('12345678') == '0'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == -1\nassert solution('-1') == -1\nassert solution('641367') == -1\nassert solution('7051') == 4\nassert solution('123') == 1\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'\nassert solution(1241360) == '-1'\nassert solution(1241363) == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\n'''"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('159935') == '-1'\nassert solution('379915') == '4'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abcd') == '1'\nassert solution('abc') == '1'\nassert solution('abab') == '2'\nassert solution('abcab') == '2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 1 2 3'\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2 1'\nassert solution('abacbecfd') == '2'\nassert solution('abcdefgh') == '1 1 1 1 1 1 1 1 1'\nassert solution('a') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacbecfd') == '2', \"First\"\nassert solution('aaabbcbb') == '2', \"Second\"\nassert solution('abcdedc') == '3', \"Third\"\nassert solution('abcde') == '1', \"Fourth\"\nassert solution('abcdefgh') == '4', \"Fifth\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abacbe') == '1'\nassert solution('abcdedc') == '1'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdefg') == '2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abacbecfd\") == \"2\"\nassert solution(\"aaabbcbb\") == \"2\"\nassert solution(\"abcdedc\") == \"3\"\nassert solution(\"abcde\") == \"1\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"26\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('ab') == '1'\nassert solution('abc') == '1'\nassert solution('abcdef') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\nabacbecfd\n''') == '2'\nassert solution('''8\naaabbcbb\n''') == '2'\nassert solution('''7\nabcdedc\n''') == '3'\nassert solution('''5\nabcde\n''') == '1'\nassert solution('''4\nabcd\n''') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9\nabacbecfd\n''') == '2'\nassert solution('''8\naaabbcbb\n''') == '2'\nassert solution('''7\nabcdedc\n''') == '3'\nassert solution('''5\nabcde\n''') == '1'\nassert solution('''4\nabcd\n''') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('adcdef') == '3'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcdedc') == '1 1 1 1 1 2 3 '\nassert solution('aaabbcbb') == '1 2 1 2 1 2 1 2 1 '\nassert solution('aaabbbcc') == '1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 '\nassert solution('aaabbbce') == '1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 '\nassert solution('abcdefg') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 '\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES\\nba\\naba\\na\\naba\\nabacaba'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'NO'\nassert solution('''4\na\naba\nabacaba\nba\naba\n''') == 'YES\\na\\na\\naba\\naba\\nabacaba'\nassert solution('''2\naba\nabacaba\n''') == 'NO'\nassert solution('''7\npeter\npeter\npeter\n''') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\nqwerty\nqwerty\nqwerty\n''') == 'YES'\nassert solution('''3\nabcdef\nabcdef\nabcdef\n''') == 'YES'\nassert solution('''5\nz\nza\nzaz\nzaa\n''') == 'NO'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'YES'\nassert solution('''2\nqwerty\nqwerty\n''') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('asdfasdfasdfasdf') == 'NO'\nassert solution('asdfasdfasdfasdf') == 'NO'\nassert solution('asdfasdfasdfasdf') == 'NO'\nassert solution('asdfasdfasdfasdf') == 'NO'\nassert solution('asdfasdfasdfasdf') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"inputs/a.in\") == \"YES\\naabacaba\\n\"\nassert solution(\"inputs/b.in\") == \"YES\\nba\\nba\\nabacaba\\n\"\nassert solution(\"inputs/c.in\") == \"NO\\n\"\nassert solution(\"inputs/d.in\") == \"NO\\n\"\nassert solution(\"inputs/e.in\") == \"NO\\n\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('no\\na\\nabacaba\\nba\\na\\nabab') == 'NO'\nassert solution('a\\nba\\na\\nabacaba\\nba\\na\\nabab') == 'YES\\na\\nabacaba\\nba\\na\\nabab'\nassert solution('codeforces') == 'NO'\nassert solution('a\\nb\\nc\\nd\\ne\\nf\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('ab') == None\nassert solution('aba') == 'YES'\nassert solution('abacaba') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == \"YES\"\nassert solution(\"abc\") == \"YES\"\nassert solution(\"abc\") == \"NO\"\nassert solution(\"abccba\") == \"YES\"\nassert solution(\"abccba\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('10 200\\n1 2 3 4 5 6 7 8 9 10') == '10'\n\n\n\n>>> ================================ RESTART ================================\n>>> \nEnter your code here. Read input from STDIN. Print output to STDOUT\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"1 1 2 3 4\") == \"5\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\"\nassert solution(\"12 34 55 43 21\") == \"5\"\nassert solution(\"2 1 2 1 3\") == \"0\""
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n4 2 3 1\\n') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\nassert solution('3 3\\n3 2 1\\n') == '2'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '0'\nassert solution('4 4') == '5'\nassert solution('4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2') == '0'\nassert solution('3 1 2 1 3') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == '5'\nassert solution('8 4') == '5'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\nassert solution('1 3 2 1 3') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == str(0)\nassert solution(input()) == str(0)\nassert solution(input()) == str(0)\nassert solution(input()) == str(0)\nassert solution(input()) == str(0)\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '0'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\nassert solution('13 43 21 34 12') == '3'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\nprint(\"All set? Click \\\"Check\\\" to earn cool rewards!\")\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == '8'\n\nprint(solution(open('/stdin').read()))\n\"\"\""
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\nassert solution('3 2') == '4'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n\nassert solution('3 8') == '14'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '4 4'\n) == '12'\nassert solution(\n    '3 9'\n) == '14'\nassert solution(\n    '9 3'\n) == '14'\nassert solution(\n    '3 6'\n) == '12'\nassert solution(\n    '506 2708'\n) == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\nprint(\"All set? Click \\\"Check\\\" to earn cool rewards!\")\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == ''\n\n'''"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdedc') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcde') == 'NO'\nassert solution('abcdeabcd') == 'YES'\nassert solution('abcde') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('a') == 'NO'\nassert solution('abacb') == 'YES'\nassert solution('abacbca') == 'YES'\nassert solution('abacbcaebacbca') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcdedc') == 'YES','should be YES'\nassert solution('aaabbcbb') == 'YES','should be YES'\nassert solution('abcde') == 'NO','should be NO'\nassert solution('aaaa') == 'NO','should be NO'\nassert solution('aabacb') == 'YES','should be YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'YES'\nassert solution('a') == 'YES'\nassert solution('a'*2) == 'YES'\nassert solution('a'*3) == 'NO'\nassert solution('a'*4) == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n9\nabacbecfd\n''') == 'YES'\nassert solution('''\n8\naaabbcbb\n''') == 'YES'\nassert solution('''\n7\nabcdedc\n''') == 'NO'\nassert solution('''\n5\nabcde\n''') == 'YES'\nassert solution('''\n7\nabcdefg\n''') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abacbe') == 'YES'\nassert solution('aaaab') == 'NO'\nassert solution('abacbe') == 'YES'\nassert solution('abcdedc') == 'YES'\nassert solution('abcde') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abc') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'YES'\nassert solution('abcde') == 'NO'\nassert solution('abcdefg') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcdef') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcdedc') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abacbecfd') == 'YES'\nassert solution('aaabbbac') == 'NO'\nassert solution('abcdef') == 'YES'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 4') == '-1'\nassert solution('2 2') == '25'\nassert solution('1 3') == '-1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 100') == '-1'\nassert solution('4 100') == '-1'\nassert solution('4 1') == '5'\nassert solution('10 1000') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 100') == '25'\nassert solution('2 2') == '25'\nassert solution('100 200') == '25'\nassert solution('1000 1000') == '25'\nassert solution('-1 2') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[0:-1]\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"25\"\nassert solution(\"2 1\") == \"25\"\nassert solution(\"2 2\") == \"25\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2''') == '25'\nassert solution('''2 2''') == '25'\nassert solution('''100 100''') == '0'\nassert solution('''2 2''') == '25'\nassert solution('''2 5''') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 2\") == \"25\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"100 200\") == \"100\"\nassert solution(\"2 3\") == \"-1\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == str(2)\n\n'''\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 1') == '-1'\nassert solution('4 2') == '6'\nassert solution('3 4') == '9'\nassert solution('3 4') == '9'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 6') == '40'\nassert solution('2 2') == '25'\nassert solution('10 2') == '0'\nassert solution('20 2') == '0'\nassert solution('2 2') == '25'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES\\n1'\nassert solution('9 4') == 'NO'\nassert solution('9 5') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3') == 'NO'\nassert solution('26 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 4') == 'NO'\nassert solution('9 4') == 'YES\\n1 2 3 4'\nassert solution('1 1') == 'YES\\n1'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"26 6\\n\") == \"YES\\n1 2 4 5 6 8\\n\"\nassert solution(\"8 3\\n\") == \"NO\\n\"\nassert solution(\"1 1\\n\") == \"YES\\n1\\n\"\nassert solution(\"9 4\\n\") == \"NO\\n\"\nassert solution(\"999899999999999999999999999999999999999999999999999999999\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('8 3') == 'NO\\n'\nassert solution('1 1') == 'YES\\n1\\n'\nassert solution('9 4') == 'NO\\n'\nassert solution('3 1') == 'YES\\n1\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 3') == 'NO'\nassert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''26 6\n''') == 'YES'\nassert solution('''8 3\n''') == 'NO'\nassert solution('''1 1\n''') == 'YES'\nassert solution('''9 4\n''') == 'NO'\nassert solution('''6 2\n1 2 4 5 6 8\n''') == 'YES'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n26 6\n\"\"\") == 'YES\\n1 2 4 5 6 8'\n\nassert solution(\n\"\"\"\n8 3\n\"\"\") == 'NO\\n'\n\nassert solution(\n\"\"\"\n1 1\n\"\"\") == 'YES\\n1'\n\nassert solution(\n\"\"\"\n9 4\n\"\"\") == 'NO\\n'\n\nassert solution(\n\"\"\"\n2 3\n\"\"\") == 'NO\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 4 5 6 8 ') == 'YES\\n1 2 4 5 6 8'\nassert solution('1 2 4 5 6 8') == 'YES\\n1 2 4 5 6 8'\nassert solution('9 4') == 'NO'\nassert solution('9 4\\n1 2 4 5 6 8') == 'YES\\n1 2 4 5 6 8'\nassert solution('9 4\\n1 2 4 5 6 8\\n9 8 7 6 5 4') == 'YES\\n1 2 4 5 6 8\\n9 8 7 6 5 4'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''26 6''') == 'YES'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'\nassert solution('''9 10''') == 'NO'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''5 100\n10 -2\n3 -4\n5 -7\n8 -5\n9 -10\n''') == '0'\nassert solution('''5 1000\n-10 -3\n-1 10\n1 9\n2 8\n3 7\n4 6\n5 5\n6 5\n7 5\n8 5\n9 5\n10 5\n11 5\n12 5\n13 5\n14 5\n15 5\n16 5\n17 5\n18 5\n19 5\n20 5\n21 5\n22 5\n23 5\n24 5\n25 5\n26 5\n27 5\n28 5\n29 5\n30 5\n31 5\n32 5\n33 5\n34 5\n35 5\n36 5\n37 5\n38 5\n39 5\n40 5\n41 5\n42 5\n43 5\n44 5\n45 5\n46 5\n47 5\n48 5\n49 5\n50 5\n51 5\n52 5\n53 5\n54 5\n55 5\n56 5\n57 5\n58 5\n59 5\n60 5\n61 5\n62 5\n63 5\n64 5\n65 5\n66 5\n67 5\n68 5\n69 5\n70 5\n71 5\n72 5\n73 5\n74 5\n75 5\n76 5\n77 5\n78 5\n79 5\n80 5\n81 5\n82 5\n83 5\n84 5\n85 5\n86 5\n87 5\n88 5\n89 5\n90 5\n91 5\n92 5\n93 5\n94 5\n95 5\n96 5\n97 5\n98 5\n99 5\n100 5\n101 5\n102 5\n103 5\n104 5\n105 5\n106 5\n107 5\n108 5\n109 5\n110 5\n111 5\n112 5\n113 5\n114 5\n115 5\n116 5\n117 5\n118 5\n119 5\n120 5\n121 5\n122 5\n123 5\n124 5\n125 5\n126 5\n127 5\n128 5\n129 5\n130 5\n131 5\n132 5\n133 5\n134 5\n135 5\n136 5\n137 5\n138 5\n139 5\n140 5\n141 5\n142 5\n143 5\n144 5\n145 5\n146 5\n147 5\n148 5\n149 5\n150 5\n151 5\n152 5\n153 5\n154 5\n155 5\n156 5\n157 5\n158 5\n159 5\n160 5\n161 5\n162 5\n163 5\n164 5\n165 5\n166 5\n167 5\n168 5\n169 5\n170 5\n171 5\n172 5\n173 5\n174 5\n175 5\n176 5\n177 5\n178 5\n179 5\n180 5\n181 5\n182 5\n183 5\n184 5\n185 5\n186 5\n187 5\n188 5\n189 5\n190 5\n191 5\n192 5\n193 5\n194 5\n195 5\n196 5\n197 5\n198 5\n199 5\n200 5\n201 5\n202 5\n203 5\n204 5\n205 5\n206 5\n207 5\n208 5\n209 5\n210 5\n211 5\n212 5\n213 5\n214 5\n215 5\n216 5\n217 5\n218 5\n219 5\n220 5\n221 5\n222 5\n223 5\n224 5\n225 5\n226 5\n227 5\n228 5\n229 5\n230 5\n231 5\n232 5\n233 5\n234 5\n235 5\n236 5\n237 5\n238 5\n239 5\n240 5\n241 5\n242 5\n243 5\n244 5\n245 5\n246 5\n247 5\n248 5\n249 5\n250 5\n251 5\n252 5\n253 5\n254 5\n255 5\n256 5\n257 5\n258 5\n259 5\n260 5\n261 5\n262 5\n263 5\n264 5\n265 5\n266 5\n267 5\n268 5\n269 5\n270 5\n271 5\n272 5\n273 5\n274 5\n275 5\n276 5\n277 5\n278 5\n279 5\n280 5\n281 5\n282 5\n283 5\n284 5\n285 5\n286 5\n287 5\n288 5\n289 5\n290 5\n291 5\n292 5\n293 5\n294 5\n295 5\n296 5\n297 5\n298 5\n299 5\n300 5\n''') == '0'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3'\nassert solution('5 10\\n-999 -999\\n999 999\\n-999 -999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999\\n999 999"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '3'\nassert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('5 4') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\\n0\\n0\\n2\"\nassert solution(\"3 4 5 6 7\") == \"3\"\nassert solution(\"8 9 10 11 12\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"1\\n0\\n0\\n2\"\nassert solution(\"45 -6 34 -15 10 34\") == \"5\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n300 -300\\n1 299\\n1 123\\n40 -45') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5'\nassert solution('3 1\\n1 -1\\n1 2\\n') == '0'\nassert solution('5 5\\n15 -4\\n-1 2\\n-2 -3\\n-1 -3\\n3 2\\n') == '1'\nassert solution('3 2\\n100 -100\\n1 2\\n2 -3\\n') == '0'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[0]\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4\\n4 6\\n10 -2\\n8 -1') == '3'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123') == '3'\n\n'''"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123''') == '3'\nassert solution('''100 100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100 -100\n100"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 3 1 3 1 1\") == \"NO\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 1 1 1 1 3 3 3 3\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\") == \"NO\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"1\\n1\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1\n1\n1\n1''') == 'YES'\nassert solution('''1\n2\n2\n3\n3''') == 'NO'\nassert solution('''1\n3\n1\n2\n1\n1''') == 'YES'\nassert solution('''1\n3\n2\n3\n2\n1\n1\n1\n1\n1''') == 'NO'\nassert solution('''2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == 'YES\\n1\\n'\nassert solution('2\\n1') == 'NO\\n'\nassert solution('1\\n1\\n1') == 'YES\\n1\\n'\nassert solution('2\\n1\\n1') == 'NO\\n'\nassert solution('1\\n2\\n1') == 'NO\\n'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"1 2 1\") == \"YES\"\nassert solution(\"1 3 1\") == \"NO\"\nassert solution(\"1 8 1 2 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn = int(input())\n\nnumbers = [int(num) for num in input().split()]\n\nmatrix = [[numbers[i*n + j] for j in range(n)] for i in range(n)]"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == 'YES\\n1\\n'\nassert solution('1\\n2') == 'NO\\n'\nassert solution('1\\n3') == 'NO\\n'\nassert solution('1\\n4') == 'NO\\n'\nassert solution('2\\n2') == 'NO\\n'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\\n1 1 1 1 1 1 1 1 1\") == \"YES\\n1 3 1\\n1 3 1\\n3 1 3\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3\\n4 -2') == 'YES'\nassert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0') == 'NO'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n5 -3\\n5 -2\\n2 1\\n4 -2\\n') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('3 10') == 'YES'\nassert solution('10 0') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('4 5') == 'YES'\nassert solution('5 4') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 -10\\n10 0\\n30 0\\n') == 'NO'"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n\n\n-----\n\n## Challenge\n\n\n\n\"\"\""
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 3 2\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n\"\"\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '7 3 2'\n    '1 2 1'\n) == 'YES\\n0 1 0 2 2 0 3\\n'\nassert solution(\n    '10 1 11'\n    '1'\n) == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n'\nassert solution(\n    '10 1 5'\n    '2'\n) == 'YES\\n0 0 0 0 1 1 0 0 0 0\\n'\nassert solution(\n    '10 1 4'\n    '3'\n) == 'NO\\n'\nassert solution(\n    '10 1 4'\n    '2'\n) == 'NO\\n'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''14 2 7''') == 'YES'\nassert solution('''13 5 5''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7 3 2\") == \"YES\"\nassert solution(\"10 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nassert solution(\"1 2 1\") == \"YES\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''7 3 2''') == 'YES'\nassert solution('''2 1''') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('11 1 11') == 'YES'\nassert solution('10 1 2') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 6') == 'NO'\nassert solution('10 2 1') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('100 50 50\\n10\\n') == 'NO'\nassert solution('100 50 50\\n10\\n') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 4 3\\n1 2 1\\n') == 'NO\\n'\nassert solution('8 4 3\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('7 4 3\\n1 2 1\\n') == 'NO\\n'\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\n\n-----Test-----\n\n\"\"\""
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n\"\"\"\nThe goal of the problem is to find the maximum length of the substring that can be\nremoved to make the string t a subsequence of s.\n\nIf you want to remove the substring s[l;r] then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to find the maximum possible length of the substring you can remove so that t\nis still a subsequence of s.\n\nIf you want to remove the substring $s[l;r]$ then the string s will be transformed to\ns_1 s_2 \\dots s_{l-1} s_{r+1} s_{r+2} \\dots s_{|s|-1} s_{|s|}\n(where $|s|$ is the length of s)\n\nYour task is to"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbababa\", \"bb\") == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"ababab\", \"abab\") == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbaba\", \"bb\") == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nprint(solution(stdin, stdin))\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''bbaba\nbb\n\n''') == '3'\nassert solution('''baaba\nab\n\n''') == '2'\nassert solution('''abcde\nabcde\n\n''') == '0'\nassert solution('''asdfasdf\nfasd\n\n''') == '3'"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution(' ') == None\nassert solution('1.0') == None\nassert solution('1.2') == None\nassert solution('1.23') == None\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'\nassert solution(5.00000) == '9 9'\nassert solution(5.123456) == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n\n\"\"\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"2 1\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"4\") == \"1 2\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1 1'\nassert solution('2') == '2 2'\nassert solution('3') == '3 3'\nassert solution('4') == '4 4'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n'''\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint(\"tests passed\")\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0.0) == \"0 1\"\nassert solution(1.0) == \"1 1\"\nassert solution(2.0) == \"1 2\"\nassert solution(2.5) == \"3 2\"\nassert solution(3.0) == \"3 3\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6'\nassert solution('1000 2 100') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\nassert solution(\"10 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\") == \"NO\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n6 10\\n8 2\\n4 3\\n5 6\\n7 3\\n\"\nassert solution(\"4 5 3\") == \"YES\\n2 4\\n3 2\\n1 5\\n1 3\\n5 4\\n5 3\\n3 1\\n1 4\\n6 3\\n7 4\\n\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('2 3 3') == 'YES'\nassert solution('2 3 3') == 'YES'\nassert solution('2 2 2') == 'NO'\nassert solution('3 1 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 3 3\\n') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('10 4 3\\n') == 'NO'\nassert solution('8 5 3\\n') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 4 2\\n') == 'YES\\n2 1\\n1 4\\n4 2\\n2 1'\nassert solution('8 5 3\\n') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\") == \"NO\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"10 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\n\n\"\"\""
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('10 3 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''6 2 3'''\n) == 'YES'\nassert solution(\n'''6 3 3'''\n) == 'NO'\nassert solution(\n'''10 4 3'''\n) == 'YES'\nassert solution(\n'''8 5 3'''\n) == 'YES'"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n\nimport sys\n\na, b, x = map(int, sys.stdin.readline().strip().split(\" \"))\ns = \"\".join([\"1\" for i in range(a)])\nfor i in range(b):\n    s += \"0\"\n    s += \"\".join([\"1\" if j == x else \"0\" for j in range(a + b - 1)])\nprint(s)\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\""
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n') == '1100'\nassert solution('3 3 3\\n') == '101100'\nassert solution('5 3 6\\n') == '010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\""
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '010100'\nassert solution('4 4 4') == '101110'\nassert solution('6 6 6') == '011000'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\nab\nbc\n''') == 'YES'\nassert solution('''3\naa\nbc\n''') == 'YES'\nassert solution('''1\ncb\nac\n''') == 'YES'\nassert solution('''2\nab\nbc\n''') == 'NO'\nassert solution('''3\naa\nbc\n''') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == 'YES'\nassert solution('''2\nab''') == 'YES'\nassert solution('''2\nab\nbc''') == 'NO'\nassert solution('''3\nab\nbc''') == 'NO'\nassert solution('''3\naa\nbc''') == 'YES'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\nab\\nbc\") == \"YES\\nacbbac\"\nassert solution(\"3\\naa\\nbc\") == \"NO\"\nassert solution(\"2\\ncb\\nac\") == \"YES\\ncacbacbab\"\nassert solution(\"1\\ncb\\nac\") == \"YES\\ncbacbac\"\nassert solution(\"1\\nab\\nbc\") == \"YES\\ncbacbac\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abc\", \"bc\") == \"YES\\nacbacbab\"\nassert solution(\"aa\", \"bc\") == \"NO\"\nassert solution(\"ab\", \"bc\") == \"YES\\nacbacbab\"\nassert solution(\"ab\", \"bc\") == \"YES\\nacbacbab\"\nassert solution(\"ab\", \"bc\") == \"YES\\nacbacbab\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ab') == 'YES\\nab'\nassert solution('aa') == 'YES\\naa'\nassert solution('aa') == 'YES\\naa'\nassert solution('a') == 'NO'\nassert solution('aa') == 'YES\\naa'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn = int(stdin.readline())\n\ns = stdin.readline().strip()\n\nt = stdin.readline().strip()\n\nf = True\n\nfor i in range(len(s)):\n    if s.find(t)!= -1:\n        f = False\n        break"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2\nab\nbc\n'''\n) == 'YES\\nacbbac'\n\nassert solution(\n'''3\naa\nbc\n'''\n) == 'YES\\ncacbacbab'\n\nassert solution(\n'''1\ncb\nac\n'''\n) == 'YES\\nabc'\n\nassert solution(\n'''2\naa\nbc\n'''\n) == 'NO'\n\nassert solution(\n'''3\nab\nbc\n'''\n) == 'YES\\ncacbacbab'"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\nab\n''') == 'YES'\nassert solution('''2\nab\nac\n''') == 'NO'\nassert solution('''1\nbc\n''') == 'YES'\nassert solution('''1\na\n''') == 'NO'\nassert solution('''3\na\n''') == 'YES'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''9\n1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7 8 9'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '-1'\nassert solution('3\\n-1') == '3'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2') == '2'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''8\n1 1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7 8'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n-1 2\n''') == '1 2'\nassert solution('''2\n1 1\n''') == '1 2'\nassert solution('''2\n1 1\n-1\n''') == '1 2'\nassert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''3\n1 1 1\n-1\n''') == '1 2 3'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n-2 1') == '3 1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('4\\n-1 2 2') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n-2 1''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''9\n0 0 0 0 0 0 0 0''') == '0 0 0 0 0 0 0 0'\nassert solution('''8\n0 0 0 0 0 0 0 0''') == '0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7'"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2\"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\") == \"-1\"\nassert solution(\"2\\n1 1\") == \"1\"\nassert solution(\"3\\n-1 1\\n\") == \"-1\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'\nassert solution('1\\n1') == '0'\nassert solution('5\\n2 2 2 2 2') == '4'\nassert solution('10\\n3 4 5 6 7 8 9 10') == '10'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == '1\\n'\nassert solution('5\\n2 2 2 3 3') == '2\\n'\nassert solution('2\\n2 2 2 2') == '1\\n'\n\n\n\n##\n\nIn a certain castle, a king's castle move is a special movement consisting of the following:\n\n- The king moves up to the left in one column, and moves two rows.\n- Then the rook moves up to the left in the same column, and moves two rows.\n- Then the rook moves down to the right in one column, and moves two rows.\n- Finally, the king moves down to the right in one column, and moves two rows.\n\nAfter one castle move, the king and the rook are at the same position:\n\n- The king and the rook are at coordinates $(0, 0)$ and $(2, 0)$ respectively, since the first castle move moves the king and the rook to $(0, 0)$ and $(2, 0)$ respectively.\n- The king has moved to the left by $2$ and the rook has moved to the left by $2$ (both $2$ can be 0).\n- The king and the rook are at the same position again after the second castle move.\n\nYour task is to calculate the minimum number of moves needed to move the king and the rook to the same position after $n$ castle moves.\n\n'''\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"1 2 2 3 3\") == \"\"\nassert solution(\"2 2 2 3 3\") == \"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '1'\nassert solution('''5''') == '2'\nassert solution('''2 2 2 3 3''') == '2'\nassert solution('''1 2 2 3 3''') == '2'\n\n'''\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3''') == '1'\nassert solution('''5\n2 2 2 3 3''') == '2'\nassert solution('''8\n1 1 1 1 1 1 1 1 1''') == '2'\nassert solution('''6\n3 3 3 3 3 3 3''') == '3'\nassert solution('''4\n1 1 1 1''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == result, result\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5'''\n) == '2'\nassert solution(\n'''2'''\n) == '1'\nassert solution(\n'''3'''\n) == '1'\nassert solution(\n'''1'''\n) == '0'\nassert solution(\n'''4'''\n) == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('15') == '8'\nassert solution('100000000000000') == '99999999999999'\nassert solution('5') == '5'\nassert solution('20') == '10'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == \"\"\nassert solution('1') == \"\"\nassert solution('10') == \"\"\nassert solution('100') == \"\"\nassert solution('1000') == \"\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '10'\nassert solution('10000') == '32'\nassert solution('20000') == '63'\nassert solution('1000000') == '31'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == 5\n\nimport sys\nsys.setrecursionlimit(5000)\nassert solution(sys.stdin.read()) == 5\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10') == 5\nassert solution('5') == 2\nassert solution('10') == 6\nassert solution('2') == 1\nassert solution('3') == 1\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == '5'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(10) == 5\n\nassert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 3\nassert solution(4) == 2\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '5'\nassert solution('10') == '5'\nassert solution('15') == '5'\nassert solution('27') == '5'\nassert solution('1000000000000') == '5'\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"25\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == 5\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\nassert solution('686') == '22 334'\n\n\n\"\"\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n0 1 1\n1 1 0''') == '0 1'\nassert solution('''15\n5 5 5\n5 5 5''') == '0 15'\nassert solution('''3\n0 0 3\n3 0 0\n''') == '3 3'\nassert solution('''686\n479 178 29\n11 145 530''') == '22 334'\nassert solution('''319\n10 53 256\n182 103 34''') == '119 226'"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == ''\nassert solution('''0 1 1''') == '0 1'\nassert solution('''1 1 0''') == '1 2'\nassert solution('''1 1 0''') == '2 1'\nassert solution('''1 1 1''') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"3\") == \"3 3\"\nassert solution(\"686\") == \"22 334\"\nassert solution(\"319\") == \"119 226\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('1\\n1 1 1\\n1 1 1') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('10\\n5 5 5\\n5 5 5') == '0 15'\nassert solution('6\\n0 0 3\\n3 0 0') == '3 3'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''15\n5 5 5\n5 5 5\n''') == '0 15'\nassert solution('''3\n0 0 3\n3 0 0\n''') == '3 3'\nassert solution('''686\n479 178 29\n11 145 530\n''') == '22 334'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('686') == '22 334'\nassert solution('319') == '119 226'"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n0\\n0\\n') == '0 0'\nassert solution('1\\n1\\n1\\n') == '0 1'\nassert solution('2\\n0\\n0\\n') == '0 1'\nassert solution('3\\n0\\n0\\n') == '0 2'\nassert solution('4\\n0\\n0\\n') == '0 3'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\\n3\\n1 1 1\\n1 1 0\\n2 1 1\\n2 1 0\\n3 1 1\\n3 1 0\\n4 1 1\\n4 1 0\\n5 1 1\\n5 1 0\\n6 1 1\\n6 1 0\\n7 1 1\\n7 1 0\\n8 1 1\\n8 1 0\\n9 1 1\\n9 1 0\\n10 1 1\\n10 1 0\\n11 1 1\\n11 1 0\\n12 1 1\\n12 1 0\\n13 1 1\\n13 1 0\\n14 1 1\\n14 1 0\\n15 1 1\\n15 1 0\\n16 1 1\\n16 1 0\\n17 1 1\\n17 1 0\\n18 1 1\\n18 1 0\\n19 1 1\\n19 1 0\\n20 1 1\\n20 1 0\\n21 1 1\\n21 1 0\\n22 1 1\\n22 1 0\\n23 1 1\\n23 1 0\\n24 1 1\\n24 1 0\\n25 1 1\\n25 1 0\\n26 1 1\\n26 1 0\\n27 1 1\\n27 1 0\\n28 1 1\\n28 1 0\\n29 1 1\\n29 1 0\\n30 1 1\\n30 1 0\\n31 1 1\\n31 1 0\\n32 1 1\\n32 1 0\\n33 1 1\\n33 1 0\\n34 1 1\\n34 1 0\\n35 1 1\\n35 1 0\\n36 1 1\\n36 1 0\\n37 1 1\\n37 1 0\\n38 1 1\\n38 1 0\\n39 1 1\\n39 1 0\\n40 1 1\\n40 1 0\\n41 1 1\\n41 1 0\\n42 1 1\\n42 1 0\\n43 1 1\\n43 1 0\\n44 1 1\\n44 1 0\\n45 1 1\\n45 1 0\\n46 1 1\\n46 1 0\\n47 1 1\\n47 1 0\\n48 1 1\\n48 1 0\\n49 1 1\\n49 1 0\\n50 1 1\\n50 1 0\\n51 1 1\\n51 1 0\\n52 1 1\\n52 1 0\\n53 1 1\\n53 1 0\\n54 1 1\\n54 1 0\\n55 1 1\\n55 1 0\\n56 1 1\\n56 1 0\\n57 1 1\\n57 1 0\\n58 1 1\\n58 1 0\\n59 1 1\\n59 1 0\\n60 1 1\\n60 1 0\\n61 1 1\\n61 1 0\\n62 1 1\\n62 1 0\\n63 1 1\\n63 1 0\\n64 1 1\\n64 1 0\\n65 1 1\\n65 1 0\\n66 1 1\\n66 1 0\\n67 1 1\\n67 1 0\\n68 1 1\\n68 1 0\\n69 1 1\\n69 1 0\\n70 1 1\\n70 1 0\\n71 1 1\\n71 1 0\\n72 1 1\\n72 1 0\\n73 1 1\\n73 1 0\\n74 1 1\\n74 1 0\\n75 1 1\\n75 1 0\\n76 1 1\\n76 1 0\\n77 1 1\\n77 1 0\\n78 1 1\\n78 1 0\\n79 1 1\\n79 1 0\\n80 1 1\\n80 1 0\\n81 1 1\\n81 1 0\\n82 1 1\\n82 1 0\\n83 1 1\\n83 1 0\\n84 1 1\\n84 1 0\\n85 1 1\\n85 1 0\\n86 1 1\\n86 1 0\\n87 1 1\\n87 1 0\\n88 1 1\\n88 1 0\\n89 1 1\\n89 1 0\\n90 1 1\\n90 1 0\\n91 1 1\\n91 1 0\\n92 1 1\\n92 1 0\\n93 1 1\\n93 1 0\\n94 1 1\\n94 1 0\\n95 1 1\\n95 1 0\\n96 1 1\\n96 1 0\\n97 1 1\\n97 1 0\\n98 1 1\\n98 1 0\\n99 1 1\\n99 1 0\\n100 1 1\\n100 1 0\\n101 1 1\\n101 1 0\\n102 1 1\\n102 1 0\\n103 1 1\\n103 1 0\\n104 1 1\\n104 1 0\\n105 1 1\\n105 1 0\\n106 1 1\\n106 1 0\\n107 1 1\\n107 1 0\\n108 1 1\\n108 1 0\\n109 1 1\\n109 1 0\\n110 1 1\\n110 1 0\\n111 1 1\\n111 1 0\\n112 1 1\\n112 1 0\\n113 1 1\\n113 1 0\\n114 1 1\\n114 1 0\\n115 1 1\\n115 1 0\\n116 1 1\\n116 1 0\\n117 1 1\\n117 1 0\\n118 1 1\\n118 1 0\\n119 1 1\\n119 1 0\\n120 1 1\\n120 1 0\\n121 1 1\\n121 1 0\\n122 1 1\\n122 1 0\\n123 1 1\\n123 1 0\\n124 1 1\\n124 1 0\\n125 1 1\\n125 1 0\\n126 1 1\\n126 1"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '''3\n7 7\n2 3\n4 5'''\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '''2\n3 4\n1 1\n2 2\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10'''\nassert solution('''16\n3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16''') == '''4\n3 3\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16'''\nassert solution('''3\n1 1 1''') == '''1\n1 1\n1 1'''\nassert solution('''4\n1 1 1 1''') == '''1\n1 1\n1 1\n1 1'''\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4\n1 1 1 1\n''') == '4\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution(\n'''4\n1 1 1 1\n''') == '4\\n1 1\\n1 1\\n1 1'\nassert solution(\n'''4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n1 1\\n1 1'\nassert solution(\n'''4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n1 1\\n1 1'\nassert solution(\n'''7\n1 1 1 1 1 1 1\n''') == '7\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3'\nassert solution('7\\n4 1 2 2 1 5 3') == '3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('4\\n1 1 1 1') == '4'\nassert solution('4\\n1 1 1 1') == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4 1 2 2 1 5 3\\n') == '3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2'\nassert solution('7\\n4 1 2 2 1 5 3\\n') == '3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2'\nassert solution('4\\n1 1 1 1\\n') == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2\\n3 4\\n1 1\\n4 4\\n1 1\\n2 2\\n3 3\\n4 5'\nassert solution('''7\n1 1 1 1 1''') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n4 5'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2\\n3 4\\n1 1\\n4 4\\n1 1\\n2 2\\n3 3\\n4 5'\nassert solution('''9\n3 3 4 4 4 4 4 4 4 4 4 4 4 4''') == '1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '''\n3\n7 7\n2 3\n4 5\n'''\n\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '''\n2\n3 4\n1 1\n'''\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-123 456 -789') == '2\\n3 4\\n1 1\\n1 1'\nassert solution('1 1 1 1') == '1\\n1 1\\n1 1\\n1 1'\nassert solution('1 2 2 3') == '1\\n2 2\\n1 1'\nassert solution('2 3 4 5 6 7 8') == '2\\n3 4\\n1 1'\nassert solution('1 1 1 1 1 1 1 1 1') == '1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '3'\nassert solution('1\\n5') == '4'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == \"YES\"\n\nassert solution('''\n3\n3 1 2\n''') == \"NO\"\n'''\n\n'''\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3 1 2\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 3 2\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 2\") == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 2\\n') == 'YES'\nassert solution('1\\n3\\n2\\n') == 'NO'\nassert solution('3\\n3 1 2\\n') == 'YES'\nassert solution('1\\n3\\n2\\n') == 'NO'\nassert solution('2\\n1 2\\n') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 1 2') == 'NO'\nassert solution('3 3 2') == 'YES'\nassert solution('2 3 1') == 'YES'\nassert solution('2 3 2') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 1 2\n''') == 'YES'\n\nassert solution('''2\n3 1\n''') == 'NO'\n\nassert solution('''2\n1 1\n''') == 'NO'\n\nassert solution('''1\n1\n''') == 'NO'\n\nassert solution('''2\n3\n1 2\n''') == 'YES'"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"3 1 2\") == \"NO\"\nassert solution(\"3 3 1 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"3 1 2\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n\"\"\""
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n\n''') == '4', \"Example 1\"\nassert solution('''\n4\nabcd\naccd\n\n''') == '-1', \"Example 2\"\nassert solution('''\n4\nabcd\nabdfec\n\n''') == '0', \"Example 3\"\nassert solution('''\n6\nacdef\nabdfec\n\n''') == '4', \"Example 4\"\nassert solution('''\n5\nabcde\nabdfec\n\n''') == '-1', \"Example 5\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"abcd\",\n    \"accd\"\n) == \"-1\"\n\nassert solution(\n    \"abcdef\",\n    \"abdfec\"\n) == \"4\"\n\nassert solution(\n    \"abcdef\",\n    \"abdfec\"\n) == \"3 5 4 5\"\n\nassert solution(\n    \"abdfec\",\n    \"abcd\"\n) == \"3 5 4 5\"\n\nassert solution(\n    \"abdfec\",\n    \"abcdef\"\n) == \"-1\""
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\nabcdef\nabdfec\n''') == '4'\nassert solution('''4\nabcd\naccd\n''') == '-1'\nassert solution('''7\nabcdefg\nabcdeh\n''') == '7'\nassert solution('''1\nab\n''') == '0'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdef') == 'abdfec'\nassert solution('abdfec') == 'abdcef'\nassert solution('abcde') == -1\nassert solution('abc') == 0\nassert solution('abcd') == 3, solution('abcd')\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcd', 'abdfec') == '4','should equal 4'\nassert solution('abcdef', 'abdfec') == '-1'\nassert solution('abcdef', 'abcdef') == '0'\nassert solution('abcd', 'accd') == '5','should equal 5'\nassert solution('abcd', 'abcd') == '0'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdef', 'abdfec') == '-1'\nassert solution('abcd', 'accd') == '1 3 4 5'\nassert solution('abcd', 'aecd') == '1 2 5 4'\nassert solution('abcd', 'abdcd') == '1 1 1 1'\nassert solution('abcd', 'abdcdf') == '1 1 1 1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\nabcdef\nabdfec''') == '4\\n3 5 4 5\\n'\nassert solution('''4\nabcd\naccd''') == '-1\\n'\nassert solution('''6\nabcdef\nabdfec''') == '4\\n3 5 4 5\\n'\nassert solution('''6\nabcd\naccd''') == '-1\\n'\nassert solution('''6\nabcd\naccde''') == '-1\\n'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcdef', 'abdfec') == '4','should be 4'\nassert solution('abcd', 'accd') == '-1','should be -1'\nassert solution('abcdef', 'acdfe') == '-1','should be -1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == stdout\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '''SPPSPSPS'''\nassert solution('''3''') == '''PS'''\nassert solution('''2''') == '''PS'''\nassert solution('''10''') == '''PPSSSPSPSPSSPSSPSPSPPPPPPPSPPPPSPPPPSPPPSPPPPPPPPPSPPPPPPPSPPPPPPPPPPSPPPSPPPPPSPPPSPPPPPSPPPPPSPPPPPPPSPPPPSPPPPPPPPSPPPSPPPPPPPPPPPSPPPPPPPPPPPPPPP'''\nassert solution
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '5'\n) == 'SPPSPSPS', 'incorrect result'\nassert solution(\n    '3'\n) == 'PS', 'incorrect result'\nassert solution(\n    '2'\n) == 'PS', 'incorrect result'\nassert solution(\n    '4'\n) == 'PSP', 'incorrect result'\nassert solution(\n    '5'\n) == 'PSPSPSPS', 'incorrect result'\n\n'''"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abab') == 'PPSPSPS'\nassert solution('aa') == 'PS'\nassert solution('a') == 'P'\nassert solution('c') == 'P'\nassert solution('ba') == 'PPSPSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('i\\nn\\ns') == 'SS'\nassert solution('a\\n') == 'PS'\nassert solution('a\\nabab') == 'PSPPSPS'\nassert solution('a\\na\\na') == 'PPSPSPS'\nassert solution('a\\nba') == 'PPPSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"P\"\nassert solution(\"abab\") == \"SPPSPSPS\"\nassert solution(\"a\") == \"P\"\nassert solution(\"aba\") == \"PS\"\nassert solution(\"baba\") == \"PS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdef') == 'SP'\nassert solution('aaaaa') == 'PPSP'\nassert solution('aaaaaab') == 'PSPSP'\nassert solution('aaaaaabccc') == 'PSPPPSPSP'\nassert solution('aaaaaabcccddddd') == 'PSPPPSPPPSPSPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == 'PPS'\nassert solution('a') == 'P'\nassert solution('aa') == 'PS'\nassert solution('b') == 'S'\nassert solution('abc') == 'PPS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '''SPPSPSPS'''\nassert solution('''3''') == '''PPSS'''\nassert solution('''2''') == '''PS'''\nassert solution('''ba''') == '''SPSPSPS'''\nassert solution('''aa''') == '''PPSS'''\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 4 6 8 10\"\n) == \"1\"\n\nassert solution(\n    \"2 4 6 8 10\"\n) == \"1\"\n\nassert solution(\n    \"2 4 5 8 7\"\n) == \"4\"\n\nassert solution(\n    \"2 4 5 8 7\"\n) == \"4\"\n\nassert solution(\n    \"1 1 1 1 1\"\n) == \"9\""
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"5\"\nassert solution(\"1 1 1 1 1 1\") == \"5\"\nassert solution(\"1 1 1 1 1 1 1\") == \"5\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"5\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 6 8 10') == 1\nassert solution('2 3 4 5 6 7 8 9 10') == 2\nassert solution('4 3 2 5') == 2\nassert solution('9 9 9') == 3\nassert solution('10 8 7 6 5 4 3 2 1') == 1\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 3 4 5') == '1'\nassert solution('2 3 4 5 6') == '2'\nassert solution('2 3 4 5 6 7') == '3'\nassert solution('2 3 4 5 6 7 8') == '4'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('3 6 9 12 18') == '2'\nassert solutionn\n-----Answer-----\n\nReturns the number of integers in the input that are greater than the previous number.\n\"\"\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8 10 19 22 25 26 30 33 35 36 41 42 43 45 46 49 50 54 55 58 59 62 63 64 66 67 70 71 72 73 74 78 78 79 80 82 83 85 86 87 90 91 92 93 94 95 96 97 98 99 100') == 2\nassert solution('4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 3\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == 1\nassert solution(\"\") == 0\nassert solution(\"1 2 3 4 5\") == 0\nassert solution(\"100 100 100 100 100\") == 0\nassert solution
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''0\n1 1 1 1\n''') == '0'\nassert solution('''1\n1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == 2\nassert solution('''5\n1 1 0 0 0''') == 0\nassert solution('''4\n1 1 1 1''') == 0\nassert solution('''6\n1 1 1 1 1 1''') == 0\nassert solution('''8\n1 1 1 1 1 1 1 1''') == 1\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 0 1 1 0 1 0 1 0\") == 2\nassert solution(\"10\\n1 1 0 0 0 0 0 0 0 0\") == 0\nassert solution(\"4\\n1 1 1 1\") == 0\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == 2\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == 2\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10''') == '2'\nassert solution('''5''') == '0'\nassert solution('''4''') == '0'\n'''\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 0 1 1 0 1 0 1 0\") == 2\nassert solution(\"5\") == 0\nassert solution(\"1 1 0 0 0\") == 0\nassert solution(\"1 1 1 1 1\") == 0\nassert solution(\"5\") == 0\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 0 0 0\\n') == '0'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1\\n') == '0'\nassert solution('4\\n1 1 1 1\\n') == '0'\nassert solution('0\\n') == ''\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '0'\n\"\"\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\nassert solution(\"4\\n0 1 1 1\") == \"3\"\nassert solution(\"4\\n0 1 1 1\") == \"3\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n10\n1 1 0 1 1 0 1 0 1 0\n'''\n    ) == '2'\n\nassert solution(\n'''\n5\n1 1 0 0 0\n'''\n    ) == '0'\n\nassert solution(\n'''\n4\n1 1 1 1\n'''\n    ) == '0'\n\nassert solution(\n'''\n10\n1 1 1 0 1 1 0 1 0 1\n'''\n    ) == '2'\n\nassert solution(\n'''\n10\n0 0 0 0 0 0 0 0 0 0\n'''\n    ) == '0'"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 3') == '1'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('5\\n1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n2\\n2\\n2\\n1') == '3'\nassert solution('1\\n2\\n2\\n2\\n2\\n1') == '1'\nassert solution('5\\n1 2 3 4 5') == '4'\nassert solution('6\\n6 90 12 18 30 18') == '4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n1') == '0'\nassert solution('3\\n2') == '1'\nassert solution('4\\n2') == '2'\nassert solution('5\\n1') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\nassert solution('''3\n2 4 2\n''') == '1'\nassert solution('''7\n2 2 2 2 2 2 2\n''') == '4'\nassert solution('''9\n2 2 2 2 2 2 2 2 2\n''') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 2 3 4 5\") == \"2\"\nassert solution(\"4\\n6 90 12 18 30 18\") == \"4\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"2\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 4 5\") == \"1\"\nassert solution(\"3\\n1 2 3 4 5 6\") == \"2\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n1\\n1') == '3'\nassert solution('1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1') == '5'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"\"\nassert solution(\"6 90 12 18 30 18\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"4\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '1'\nassert solution('1\\n5') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == 2\n'''\nfrom sys import stdin, stdout\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('1\\n100') == '1'\nassert solution('5\\n1 2 4 3 3 2') == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''0\n1\n2\n3''') == '0'\nassert solution('''1\n1\n1\n1\n1''') == '1'\nassert solution('''2\n4\n5\n6\n1\n2\n3\n4\n5\n6''') == '3'\nprint(solution(input()))\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('1\\n4') == '1'\nassert solution('2\\n1 1 2 2') == '2'\nassert solution('3\\n1 2 3') == '3'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 4 3 3 2') == 2\nassert solution('100') == 1\n\"\"\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n100\") == \"\"\nassert solution(\"1\\n1\") == 1\nassert solution(\"1\\n100\\n100\") == 2\nassert solution(\"1\\n1\\n1\") == 1\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('6\\n1 2 4 3 3 2') == '2'\nassert solution('7\\n1 2 4 3 3 2 4 1') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '1'\nassert solution('100\\n1 2 4 3 3 2 9 22 32 16 5 4 4 1 8 19 32 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n1 2 4 3 3 2\n''') == '2'\n\nassert solution('''1\n100\n''') == '1'\n\nassert solution('''6\n1 2 4 3 3 2\n''') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('1\\n10') == '3'\nassert solution('10\\n1 2 4 3 3 2') == '2'\nassert solution('2\\n1 2') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 3') == '2'\nassert solution('4\\n1 2 3 4') == '3'\nassert solution('5\\n1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n0 0 0 0 0\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"3\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"\n\"\"\"\n\nN, M = [int(x) for x in stdin.readline().split()]\narray = [int(x) for x in stdin.readline().split()]\n\nheaters = {}\nfor i in range(len(array)):\n    if array[i] == 1:\n        if i not in heaters:\n            heaters[i] = []\n        heaters[i].append(i)\n\nfor heater in heaters:\n    if len(heaters[heater]) == M:\n        print(-1)\n        exit()\n\nfor heater in heaters:\n    for i in range(heater - M + 1, heater + M - 1):\n        if i in heaters:\n            heaters[i] += heaters[heater]\n            del heaters[heater]\n\nprint(len(heaters))\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n0 1 1\\n0\\n') == '3'\nassert solution('3 5\\n0 0 0 0 0\\n0\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n0\\n') == '3'\nassert solution('10 10\\n0 0 1 1 0 0 0 0 1\\n0\\n') == '3'\nassert solution('100 3\\n0 0 1 1 0 0 0 0 1\\n0\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('5 10\\n0 0 0 0 0\\n') == '-1'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('10 7\\n0 0 0 0 0 0 0 0 0\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n6 2\n0 1 1 0 0 1\n\"\"\"\n    ) == '3'\n\nassert solution(\n\"\"\"\n5 3\n0 0 0 0 0\n\"\"\"\n    ) == '2'\n\nassert solution(\n\"\"\"\n10 3\n0 0 1 1 0 1 0 0 1\n\"\"\"\n    ) == '3'\n\nassert solution(\n\"\"\"\n5 10\n0 0 1 1 0 1 0 0 1\n\"\"\"\n    ) == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10\\n' +\n    '0,1,2,3,4,5,6,7,8,9,10') == '3'\nassert solution('3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10') == '3'\nassert solution('3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10') == '3'\nassert solution('3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,10\\n' +\n    '3,3,4,5,6,7,8,9,10,10,10,"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n0 0 0 0 0\n''') == '2'\nassert solution('''5 10\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '2'\nassert solution('''10 10\n0 0 1 1 0 1 0 0 0 1\n''') == '3'"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n0 0 0 0 0\\n') == '2'\nassert solution('5 10\\n0 0 0 0 0\\n') == '-1'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 1 1 0 1 0 0 1\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == '3'\nassert solution('5 3\\n0 0 0 0 0') == '2'\nassert solution('5 10\\n0 0 0 0 0') == '3'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == '3'\nassert solution('10 30\\n0 0 0 0 0 0 0 0 0 0 0') == '-1'"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n0 1 1\\n') == '3'\nassert solution('5 3\\n0 0 1 1\\n') == '2'\nassert solution('5 10\\n0 0 1 1 0 1 0 0 1\\n') == '-1'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1 0 1 0 0 1\\n') == '3'\n\n-----\n\n\"\"\""
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '3'\nassert solution('''0''') == '0'\nassert solution('''9''') == '1'\nassert solution('''10''') == '2'\nassert solution('''12''') == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '3'\nassert solution('''10''') == '3'\nassert solution('''1000''') == '0'\nassert solution('''10000''') == '0'\nassert solution('''4''') == '0'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('6') == '3'\n\n[10, 4, 3, 2, 1]"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '0'\nassert solution('10') == '3'\nassert solution('100') == '15'\nassert solution('1000') == '60'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"100\") == \"24\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '2'\nassert solution('5\\n') == '2'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('10') == '2'\nassert solution('1000') == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\"\n) == \"3\"\nassert solution(\n    \"5\"\n) == \"5\"\nassert solution(\n    \"15\"\n) == \"5\"\nassert solution(\n    \"2\"\n) == \"1\"\nassert solution(\n    \"8\"\n) == \"3\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('(((()))') == '0'\nassert solution('(()())()') == '0'\nassert solution('))(((((((((((((())))))))))))))') == '0'\nassert solution('(((()))') == '0'\nassert solution('((())') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(((()' == solution('((()'))\nassert solution('((()))' == solution('((()))')\nassert solution('((()()))' == solution('((()()))')\nassert solution('((()(()()))' == solution('((()(()()))')\nassert solution('((()((()' == solution('((()(()()'))"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''((\n'''\n    ) == 0\nassert solution(\n'''()()()\n'''\n    ) == 0\nassert solution(\n'''()()\n'''\n    ) == 0\nassert solution(\n'''((\n'''\n    ) == 0\nassert solution(\n'''(()\n'''\n    ) == 1\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"(())\") == \"0\"\nassert solution(\"()()\") == \"0\"\nassert solution(\"(((\") == \"3\"\nassert solution(\"(((())\") == \"3\"\nassert solution(\")())\") == \"3\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"()()()\") == 0\nassert solution(\"(()\") == 1\nassert solution(\"))\") == 2\nassert solution(\"((()\") == 0\nassert solution(\"(((()))\") == 1\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"((()\") == \"1+1\"\nassert solution(\"()()()\") == \"((1+1)+1)\"\nassert solution(\")()\") == \"0\"\nassert solution(\"()()()\") == \"0\"\nassert solution(\"((()\") == \"0\""
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('(())') == 3\nassert solution('()()') == 0\nassert solution(')') == 0\nassert solution('())(())') == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('((()') == '0'\nassert solution('()()()') == '0'\nassert solution(')(') == '0'\nassert solution('(((((()))))') == '0'\nassert solution('()())()') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('(((()' == solution('()()()'))\nassert solution('(()' == solution('))()'))\nassert solution('()()()' == solution(')(())((()())'))\nassert solution('()()' == solution('()()()'))\nassert solution('()' == solution(')('))\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''bbaba\nbb''') == '3'\nassert solution('''baaba\nab''') == '2'\nassert solution('''abcde\nabcde''') == '0'\nassert solution('''asdfasdf\nfasd''') == '3'\nassert solution('''aaaaa\naaaaa''') == '0'\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('asdfasdf', 'fasdf') == 0"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('baaab', 'ba') == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('abcdef', 'abcdef') == 0\n\n-----You are given a string $s$ consisting of lowercase Latin letters. It is guaranteed that $s$ is a word.\n\nYour task is to find the maximum possible length of the substring you can remove so that the result string is a word.\n\nA substring is a contiguous sequence of characters within a string.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $N$ \u2014 the number of test cases. The description of $N$ test cases follows.\n\nThe first line of each test case contains a single string $s$ consisting of lowercase Latin letters.\n\nThe second line of each test case contains a single string $t$ consisting of lowercase Latin letters.\n\nIt is guaranteed that $t$ is a word.\n\n\n-----Output-----\n\nFor each test case, output one integer \u2014 the maximum possible length of the substring you can remove so that $t$ is still a word.\n\n\n-----Constraints------\n\n1 \u2264 $N$ \u2264 10\n1 \u2264 length of $s$ \u2264 10\n1 \u2264 length of $t$ \u2264 10\n$s$ and $t$ consist only of lowercase Latin letters.\n\nIf there is no such substring that removes the whole word, then print -1.\n\n-----Examples-----\nInput\n2\na b\naa\na\n\nOutput\n1\n-1\n\nInput\n3\na b\naa\nba\n\nOutput\n2\n2\n1\n\nNote\nYou can assume that the substring is in the word.\n\n\n\"\"\""
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"qwertyuiop\", \"asdf\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbababb\", \"bbabab\") == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\nbbaba\nbb\n\"\"\"\n    ) == 3\n\nassert solution(\n\"\"\"\nbaaba\nab\n\"\"\"\n    ) == 2\n\nassert solution(\n\"\"\"\nabcde\nabcde\n\"\"\"\n    ) == 0\nassert solution(\n\"\"\"\nasdfasdf\nfasd\n\"\"\"\n    ) == 3"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('','fasd') == 3\n\n\"\"\""
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[3:len(stdin)-3]\n\"\"\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 3 1 1\") == \"3\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"2 2 1 1\") == \"2\"\nassert solution(\"1 1 1 2\") == \"1\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('-10 10 10 -10') == '-10'\nassert solution('1 1 1 1') == '4'\nassert solution('1 1 1 1') == '4'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"-10 9 3 4\") == \"4\"\nassert solution(\"9 9 9 9\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 2 1') == '4'\nassert solution('1 2 3 1') == '4'\nassert solution('1 2 3 2') == '6'\nassert solution('1 2 2 3') == '6'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"1 1 1 1\") == \"8\"\nassert solution(\"1 1 1 1\") == \"16\"\nassert solution(\"1 1 1 1\") == \"32\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 1 1 1') == '4'\nassert solution('10 10 1 1') == '20'\nassert solution('5 2 1 1') == '10'\nassert solution('5 1 1 1') == '5'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 0') == '0'\nassert solution('1 1 1 -2') == '0'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"2 1 1 1\") == \"2\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n'''\n\na,b,c,d = map(int, stdin.split())"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 1 4 4 6 7') == '2'\nassert solution('6 1 4 4 6 7') == '2'\nassert solution('6 1 4 4 6 7') == '2'\nassert solution('1 1 1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"9 1 4 4 6 7\\n\") == \"2\\n\"\n\n-----Explanation-----\n\n- There are 3 lines, each containing one integer.\n- The integers represent the difficulties for the problems in the order as given in the input.\n- The integer K is the number of problems for ARCs and the number of problems for ABCs.\n- The objective is to choose K such that the number of problems for ARCs and the number of problems for ABCs are the same.\n- The answer is the number of choices of K that make the number of problems for ARCs and the number of problems for ABCs the same.\n\n\"\"\"\n\nn = int(input())\nm = list(map(int, input().split()))\n\ncount = 0\nfor i in range(0, n):\n    for j in range(i + 1, n):\n        if m[i] > m[j]:\n            count += 1\nprint(count)"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '0'\nassert solution('20\\n
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\n\n-----Best Practice-----"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == \"2\"\nassert solution('2\\n1\\n') == \"1\"\nassert solution('2\\n5\\n') == \"1\"\nassert solution('1\\n1\\n') == \"1\"\nassert solution('10\\n
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 1 4 4 6 7') == '2'\nassert solution('6 1 4 4 6 7') == '2'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('2 1 4 4 6 7') == '0'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input('''\n6\n9 1 4 4 6 7\n''')) == '2'\n\nassert solution(input('''\n1\n1\n''')) == '1'\n\nassert solution(input('''\n100\n
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 1 4 4 6 7') == '2'\nassert solution('1 1 1 1 1 1') == '5'\nassert solution('4 5 4 6 3 2 1') == '0'\nassert solution('3 4 4 2 2 1 1') == '3'\nassert solution('6 5 4 3 4 3 3 2') == '3'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''3\n9 1 4 4''') == '0'\nassert solution('''3\n9 1 4''') == '0'\nassert solution('''15\n9 1 4 4 6 7 8 9 10 11 12 13 14 15''') == '7'\nassert solution('''3\n8 9 2 6 5 4 3 1 7 8 9 10 11 12 13 14 15''') == '0'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('10\\n20 40 5 5 8') == '1'\nassert solution('10\\n2 1 4 4 6 7') == '0'\nassert solution('10\\n3 1 4 4 6 7') == '0'\nassert solution('10\\n4 1 4 4 6 7') == '1'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '7 24 21 23'\n    '16 17 14 20 20 11 22') == '3'\nassert solution(\n    '7 24 21 22'\n    '16 17 14 20 20 11 22') == '1'\nassert solution(\n    '7 24 21 22'\n    '16 17 14 20 19 11 22') == '0'\nassert solution(\n    '7 24 21 22'\n    '16 17 14 19 11 22') == '1'\nassert solution(\n    '7 24 21 22'\n    '16 17 14 19 12 22') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('3 12 11 1\\n3 1 2') == '2'\nassert solution('7 24 21 23\\n16 17 14 20 20 11 22\\n3 12 11 1') == '3'\nassert solution('7 24 21 23\\n16 17 14 20 20 11 22\\n3 12 11 1\\n1 1 1\\n3 1 2') == '2'\nassert solution('7 24 21 23\\n16 17 14 20 20 11 22\\n3 12 11 1\\n1 1 1\\n3 1 2\\n2 2 2\\n1 1 1\\n1 1 1\\n1 1 1') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 22 21''') == '2'\nassert solution('''8 9 10 11 12 13 14''') == '4'\nassert solution('''9 10 11 12 13 14''') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('1 1 1 1\\n2 2 2 2 2 2 2') == '2'\nassert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('7 24 21 23\\n
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"0 0 0 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 10 3 5 2') == '3'\nassert solution('20 24 21 23') == '3'\nassert solution('8 14 3 4 6 10 6') == '2'\nassert solution
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 24 21 23', '16 17 14 20 20 11 22', '7') == '3'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22', '16') == '2'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22', '19') == '2'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22', '20') == '2'\nassert solution('7 24 21 23', '16 17 14 20 20 11 22', '21') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 9\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 9 10\") == \"2\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\"\"\"\nfrom math import ceil, log2\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '4'\nassert solution('3\\n1\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3') == '3'\nassert solution('4\\n1\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3') == '4'\nassert solution('5\\n2\\n5\\n10\\n50\\n10\\n50\\n50\\n50\\n50') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n2 10 50 110') == '1'\nassert solution('10\\n4 7 12 100 150 199') == '3'\nassert solution('5\\n2 10 50 110 250') == '3'\nassert solution('6\\n4 7 12 100 150 199') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n5\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('1\\n2 10 50 110 250\\n') == '1'\nassert solution('2\\n4 7 12 100 150 199\\n') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4\\n'\nassert solution('5\\n2 10 50 110 250\\n') == '1\\n'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3\\n'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3\\n'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3\\n'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"10\n1 2 5 6 7 10 21 23 24 49\"\"\") == '4'\nassert solution(\"\"\"5\n2 10 50 110 250\"\"\") == '1'\nassert solution(\"\"\"6\n4 7 12 100 150 199\"\"\") == '3'\n\"\"\"\nfrom __future__ import annotations\n\nproblemset = list(map(int, stdin.split()))\ndifficulty = list(map(int, stdin.split()))"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n10\n1 2 5 6 7 10 21 23 24 49\n\n\"\"\"\n    ) == \"4\"\n\nassert solution(\n\"\"\"\n5\n2 10 50 110 250\n\n\"\"\"\n    ) == \"1\"\n\nassert solution(\n\"\"\"\n6\n4 7 12 100 150 199\n\n\"\"\"\n    ) == \"3\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2\n2 4 6 10\n5\n1 2 3 4 5\n\n''') == '1'\n\nassert solution(\n'''\n5\n1 2 5 6 7 10 21 23 24 49\n\n''') == '4'\n\nassert solution(\n'''\n6\n2 10 50 110 250\n\n''') == '3'\n\nassert solution(\n'''\n7\n4 7 12 100 150 199\n\n''') == '2'\n\nassert solution(\n'''\n10\n2 10 50 110 250\n\n''') == '1'"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n10\n1 2 5 6 7 10 21 23 24 49\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n5\n2 10 50 110 250\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n6\n4 7 12 100 150 199\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == ''\nassert solution('''5\n2 4 8 3 6''') == ''\nassert solution('''5\n2 4 8 3 6''') == ''\nassert solution('''6\n2 5 10 1 10 2''') == ''\nassert solution('''2\n5 2 11 3 7''') == ''\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n\") == \"1 2\"\nassert solution(\"2 4\\n\") == \"2 4\"\nassert solution(\"5\\n2 4 8 3 6\\n\") == \"1 2\"\nassert solution(\"5\\n5 2 11 3 7\\n\") == \"2 4\"\nassert solution(\"6\\n2 5 10 1 10 2\\n\") == \"1 4\"\n\n\"\"\"\n\nfrom math import gcd\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\nassert solution('6 2 5 10 1 10 2') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 2 3') == '2 1'\nassert solution('1 2 3 4') == '2 3'\nassert solution('1 2 3 4 5') == '2 3'\nassert solution('1 2 3 4 5 6') == '2 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '1 4'\nassert solution('6 2 5 10 1 10 2') == '1 4'\n\nassert solution('4 3 2 1') == '1 3'\nassert solution('1 2 3 4') == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 8 3 6\\n2 4 8 3 6') == '1 2'\nassert solution('2 5 11 3 7\\n2 5 11 3 7') == '1 4'\nassert solution('6 2 11 3 7\\n6 2 11 3 7') == '1 4'\nassert solution('5\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n5 2 11 3 7') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '''1 2'''\nassert solution('''5\n2 4 8 3 6''') == '''1 2'''\nassert solution('''6\n2 5 10 1 10 2''') == '''1 4'''\nassert solution('''7\n2 5 10 1 10 2 11''') == '''1 4'''\nassert solution('''8\n2 5 10 1 10 2 11 12''') == '''1 4'''\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '''1 2'''\nassert solution('''6''') == '''1 4'''\nassert solution('''1000000000''') == '''1 4'''\nassert solution('''0''') == '''1 2'''\nassert solution('''0''') == '''1 2'''\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1 1\\n1 1\\n\") == \"1 1\"\nassert solution(\"1 1 1 1 1\\n1 1\\n\") == \"1 4\"\nassert solution(\"1 1 1 1 1\\n1 1\\n\") == \"1 4\"\nassert solution(\"1 1 1 1 1\\n1 1\\n\") == \"1 4\"\nassert solution(\"1 1 1 1 1\\n1 1\\n\") == \"1 4\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('121') == '021'\nassert solution('1') == '1'\nassert solution('12') == '12'\nassert solution('21') == '21'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_) == output_\nprint(solution(input_))\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('121') == '021'\nassert solution('0011') == '0110'\nassert solution('211200') == '211202'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"021\") == \"021\"\nassert solution(\"2222\") == \"2222\"\nassert solution(\"122\") == \"222\"\nassert solution(\"1120\") == \"1110\"\nassert solution(\"1110\") == \"1110\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('121') == '021'\nassert solution('211200') == '120120'\nassert solution('120110') == '120120'\nassert solution('123456789') == '1234567890'\nassert solution('12345678901') == '12345678901'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"211200\") == \"120120\"\nassert solution(\"120110\") == \"120120\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"123456789\") == \"8523070987654321\"\nassert solution(\"1\" * 10000) == \"1\" * 10000\nassert solution(\"2\" * 10000) == \"2\" * 10000\nassert solution(\"3\" * 10000) == \"3\" * 10000\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('12') == '21'\nassert solution('121') == '021'\nassert solution('123') == '312'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"10110\") == \"01100\"\nassert solution(\"120110\") == \"120120\""
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 1''') == '4'\nassert solution('''6 2''') == '6'\nassert solution('''6 3''') == '8'\nassert solution('''6 4''') == '12'\nassert solution('''6 5''') == '18'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"3 5\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '6'\nassert solution('6 3') == '2'\nassert solution('6 4') == '8'\nassert solution('6 5') == '0'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '4'\nassert solution('2 1') == '1'\nassert solution('3 1') == '5'\nassert solution('4 1') == '7'\nassert solution('5 1') == '10'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 1\\n3\\n') == '4'"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1\\n3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1') == '4'\nassert solution('0 1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '1'\nassert solution('1 1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('0 0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('2 1\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '2'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 1''') == '4'\nassert solution('''6 3''') == '6'\nassert solution('''4 5''') == '24'\nassert solution('''1 1''') == '1'\nassert solution('''100 1''') == '1'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 1\\n3\\n') == '4'\nassert solution('3\\n3\\n') == '0'\nassert solution('6 1\\n2\\n') == '1'\nassert solution('6 1\\n3\\n') == '4'\nassert solution('6 1\\n4\\n') == '0'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 1') == '4'\nassert solution('1 1') == '1'\nassert solution('6 2') == '8'\nassert solution('6 3') == '15'\nassert solution('6 4') == '23'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('2 2 4') == '0'\nassert solution('5 2 2') == '0'\nassert solution('100 100 1') == '0'\nassert solution('20 10 2') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2 4''') == \"2\"\nassert solution('''4 7 5''') == \"4\"\nassert solution('''0 10 1''') == \"0\"\nassert solution('''6 6 1''') == \"1\"\nassert solution('''-1 4 5''') == \"-1\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 2 4''') == '2'\nassert solution('''12 7 3''') == '5'\nassert solution('''10000 999 99''') == '9999'\nassert solution('''1000 9999 99''') == '9999'\nassert solution('''12 22 10''') == '11'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"0 10 0\") == \"10\"\nassert solution(\"6 -10 10\") == \"10\"\nassert solution(\"0 10 -10\") == \"0\"\nassert solution(\"-6 -10 -10\") == \"0\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-1 -1 -1') == '0'\nassert solution('2 0 -1') == '0'\nassert solution('3 0 1') == '3'\nassert solution('10 0 1') == '3'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('1,1,1') == 0\nassert solution('11,1,1,1,1,1') == 0\nassert solution('1111111') == 1\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"11\") == 2\nassert solution(\"14\") == 0\nassert solution(\"61441\") == 2\nassert solution(\"571576\") == 10\nassert solution(\"2128506\") == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\nprint('The test is done! Click on \"Check\" to earn cool rewards!')\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n\n\n\"\"\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1234\") == 0\nassert solution(\"12345\") == 5\nassert solution(\"1234567\") == 1\nassert solution(\"12345678\") == 2\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(3) == 27"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3) == 27\nInput\n\n5\n\nOutput\n36\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 4\nassert solution(3) == 9\nassert solution(4) == 16\nassert solution(5) == 25\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '10'\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 27\nassert solution('3') == 27\nassert solution('1') == 27\nassert solution('1\\n') == 27\nassert solution('1\\n2') == 27\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 27\nprint(\"Test 1 passed\")\nassert solution(\"2\") == 4\nprint(\"Test 2 passed\")\nassert solution(\"10\") == 36\nprint(\"Test 3 passed\")\nassert solution(\"5\") == 9\nprint(\"Test 4 passed\")\nassert solution(\"30\") == 27\nprint(\"Test 5 passed\")\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('3') == '3'\nassert solution('4') == '12'\nassert solution('5') == '55'\nassert solution('30') == '234567891011121314151617181920'\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == 27\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 4\nassert solution(3) == 9\nassert solution(4) == 16\nassert solution(5) == 25\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(10) == \"1\"\nassert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"\nassert solution(489) == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"13\") == 1\nassert solution(\"927\") == 1\nassert solution(\"48\") == 0\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 1"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"\nassert solution(1534) == \"0\"\nassert solution(19) == \"1\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 5 3 1''') == 4\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5 3 1') == 4\nassert solution('2 5 3 1\\n4') == 4\nassert solution('5 3 1 2 4 3') == 4\nassert solution('5 3 1 2 4 3\\n4') == 4\nassert solution('5 3 1 2 4 3\\n4') == 4\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2 3 3 3 1\") == 1\nassert solution(\"2 2 3 3 3 1\") == 2\nassert solution(\"1 2 3 4 5 6 7\") == 1\nassert solution(\"2 3 4 5 6 7 1\") == 2\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 5 3 1\") == 4\nassert solution(\"1\\n0\") == 0\nassert solution(\"5\\n1 1 2 4 5\") == 2\nassert solution(\"5\\n2 2 3 4 4\") == 2\nassert solution(\"5\\n4 2 1 4 1\") == 2\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 5 3 1''') == 4\n'''"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n2 5 3 1') == 4\nassert solution('4\\n2 3 1') == 1\nassert solution('4\\n2 3 1') == 1\nassert solution('4\\n2 3 1') == 1\nassert solution('4\\n1 2 3 4') == 0\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2 5 3 1') == 4\nassert solution('7\\n1 3 2 4 5 6 7') == 1\nassert solution('5\\n1 2 3 4 5') == 4\n\n\n-----Note-----\n\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5 4 3 2 1\""
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aaaa') == 'aaaa'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 7') == '2'\nassert solution('8 1') == '8'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '999999733'\nassert solution('999999733 999999733') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123') == \"333\"\nassert solution('456') == \"666\"\nassert solution('789') == \"987\"\nassert solution('9999') == \"999999\"\nassert solution('999999') == \"999999\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1\\n'\nassert solution('4 1\\n3 6\\n5 4') == '3\\n1\\n1\\n3\\n'\nassert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1\\n999999733\\n1\\n'\nassert solution('999999999 999999998\\n999999999 999999998\\n999999999 999999998\\n999999999 999999998\\n999999999 999999998') == '1\\n1\\n1\\n1\\n1\\n1\\n'\nassert solution('999999999 999999998\\n999999999 999999998\\n999999999 999999998\\n999999999 999999998\\n999999999 999999998') == '0\\n0\\n0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\"\"\"\n\nn,k = map(int, stdin.readline().split())\npackage = [0] * k\npackage[0] = n\nfor i in range(1,k):\n    package[i] = package[i-1] - 1\n    while package[i] < 0:\n        package[i] = n - 1\n        package[i-1] -= 1\nprint(package)\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 7\n8 1\n6 10''') == '2'\nassert solution('''8 7\n8 1\n6 10''') == '8'\nassert solution('''8 7\n8 1\n6 10''') == '1'\nassert solution('''999999733 999999732\n999999733 999999733''') == '1'\nassert solution('''999999733 999999733\n999999733 999999733''') == '999999733'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 7\n8 1\n6 10''') == '2'\nassert solution('''8 1\n6 10''') == '8'\nassert solution('''999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''1 10\n1 10''') == '1'\nassert solution('''3 4\n3 2\n''') == '6'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1') == '2'\nassert solution('3\\n1\\n1\\n1') == '1'\nassert solution('4\\n1\\n1\\n1') == '1'\nassert solution('5\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(1)\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == 1\nassert solution(\"2 1 2\") == 1\nassert solution(\"2 1 2\") == 1\nassert solution(\"0 1\") == 1\nassert solution(\"1 2\") == 1\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 0''') == '2'\nassert solution('''2 2\n2 1 2\n1 2\n1 2''') == '0'\nassert solution('''2 2\n2 1 2\n1 2\n0 1\n1 1''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 0\n1 0''') == '2'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2 3\") == \"1\"\nassert solution(\"2 1 2 3 4\") == \"2\"\nassert solution(\"2 3 4 5\") == \"0\"\nassert solution(\"2 3 2 4 4\") == \"4\"\nassert solution(\"2 3 2 4 4\") == \"4\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 1\") == \"1\"\n\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('3 3\\n2 1 2 3\\n1 2 3\\n0 0 0') == '4'\nassert solution('5 5\\n2 1 2 3 4 5\\n1 1 1 1 1 1\\n0 0 0 0 0 0') == '6'\nassert solution('2 3\\n1 2 3\\n0 1\\n2 1 1\\n0 0') == '1'\n\"\"\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution('''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution('''\n4 4\n2 2 1 1\n2 1 2 1\n1 1 2 1\n0 0 2 1\n''') == '9'\nassert solution('''\n4 4\n2 2 1 1\n2 1 2 1\n1 1 2 1\n0 0 2 1\n''') == '8'\nassert solution('''\n4 4\n2 2 1 1\n2 1 2 1\n1 1 2 1\n0 0 2 1\n''') == '3'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('2 1 2') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 4 9 0'''\n) == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == '5.00000000000000000000'\nassert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 1 9 0') == '4.20382168966415'\nassert solution('3 4 9 0') == '4.20382168966415'\nassert solution('3 4 5 0') == '6.129600007922'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"1 2 3 0\") == \"1.00000000000000000000\"\nassert solution(\"2 1 3 0\") == \"5.00000000000000000000\"\nassert solution(\"3 2 3 0\") == \"5.00000000000000000000\"\nassert solution(\"3 3 3 0\") == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 9 0') == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"5 8 17 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 5\") == \"7.294922831859472619174808e-13\"\nassert solution(\"5 9 2 0\") == \"4.99500741438394723384543e-13\"\nassert solution(\"4 5 1 0\") == \"4.999999779471126054341022e-14\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n'''"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5.00000000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4 5 60 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\nassert solution('3 2\\n1 2 3\\n') == '0'\nassert solution('3 2\\n1 2 3\\n') == '0'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n3') == '2'\nassert solution('2\\n2') == '2'\nassert solution('2\\n2\\n1') == '2'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '8'\nassert solution('1 1 1') == '6'\nassert solution('1 2 3') == '6'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '97'\nassert solution
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1') == '4'\nassert solution('1\\n2\\n2') == '1'\nassert solution('5 3\\n2 3 3 2 3') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3') == '97'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4''') == '8'\nassert solution('''3 1''') == '6'\nassert solution('''15 2''') == '97'\nassert solution('''3 3''') == '1'\nassert solution('''20 1''') == '1'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '97'\nassert solution
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n15') == '97'\nassert solution('1\\n2') == '3'\nassert solution('1\\n5') == '7'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10\\n'\n
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '6'\nassert solution('2 3') == '1'\nassert solution('4 5') == '2'\nassert solution('1 3') == '4'\nassert solution('2 5') == '2'"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2\\n3 4\\n2 5\\n1 3\") == \"6\\n2\\n1 4\\n\"\nassert solution(\"3 2\\n-2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"7\\n2\\n3 2\\n\"\nassert solution(\"3 2\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"0\\n0\\n\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\\n\"\nassert solution(\"3 2\\n2 -3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2\\n\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == '6'\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == '7'\nassert solution(\"1 0\\n1000000\\n\") == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1000000\\n') == '0'\nassert solution('2\\n1000000\\n') == '7'\nassert solution('2\\n1000000\\n') == '7'\nassert solution('3\\n1000000\\n') == '1'\nassert solution('3\\n1000000\\n') == '1'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1000000\\n') == '0'\nassert solution('2\\n-2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('2\\n-2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('2\\n-2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n1 3\\n') == '0'\nassert solution('2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '1'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('inputs/hard/A') == '3'\nassert solution('inputs/easy/A') == '2'\nassert solution('inputs/easy/B') == '7'\n\n\n-----"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5') == '7'\nassert solution('1 2 3 4 5') == '0'\nassert solution('-1 -2 -3 -4 -5') == '-1'\nassert solution('100 1000') == '999'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"5 5\") == \"7\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"1 1000000\") == \"0\"\nassert solution(\"1000000\") == \"0\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('fced\\nxyz\\nr\\ndabcef\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n\n\n\nimport sys\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''az\naa\nbad\nbabc''') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n'\nassert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('''az\naa\nbad\nbabc\n''') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbac\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"abc\\nde\\nfgh\\ngij\\nklm\\nmno\\nopq\\nrst\\nsvw\\ntxyz\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == \"Yes\"\nassert solution(\"bca\") == \"Yes\"\nassert solution(\"bac\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"dabc\") == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"No\\nYes\\nNo\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"5\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"No\\nNo\\nYes\\nYes\\nYes\\nNo\"\nassert solution(\"6\\nfced\\nxyz\\r\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nNo\\nYes\\nNo\\nNo\\nYes\"\nassert solution(\"8\\nfced\\nxyz\\r\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nNo\\nNo\\nNo\\nNo\\nNo\\nYes\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"4\\naz\\naa\\nbad\\nbabc\") == \"No\\nNo\\nNo\\nYes\\n\"\nassert solution(\"4\\naa\\nbad\\nbabc\") == \"No\\nNo\\nNo\\nYes\\n\"\nassert solution(\"4\\nfced\\nxyz\\nr\\ndabcef\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"4\\nfced\\nxyz\\nr\\ndabcef\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbacd\\nbad\\nbad\\nbad\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbacd\\nbab\\nbacd\\nbad\\nbad\\nbad\") == \"No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naaz\\naa\\nbacd\\nbad\\nbab\\nbacd\\nbad\\nbad\\nbad\") == \"No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naaz\\naa\\nbacd\\nbab\\nbacd\\nbab\\nbacd\\nbad\\nbad\\nbad\") == \"No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naaz\\naa\\nbacd\\nbab\\nbacd\\nbab\\nbacd\\nbad\\nbad\\nbad\") == \"No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_diverse.txt\").read()) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(open(\"test_not_diverse.txt\").read()) == \"No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\"\n\n\n\n------Note on speeding up the solution:\n\nThe solution here is quite straightforward: since the input is text, the characters we iterate over in the solution are a single character strings (e.g. \"f\", \"c\", \"e\", \"d\", \"a\", etc.). We create a character map, which is a python dictionary of the form {character : [index in string]} i.e. if the character 'd' is found at index 5, we would store the value of 5 in the map, with the value being a list of indices at which the character 'd' occurs. We then iterate over our input string, and for each character, we check if the character is already in the map, and if it is not, we add it to the map. If the character is indeed already in the map, we update the value of the character at the map's key to include the current index.\n\nWe can use a less-efficient approach: first, we iterate over the input string, and store all the characters in a set (to speed up lookup). Then we iterate over the characters in the input string again, and for each character we check if it is already in the set, if not we add it to the set. If it is already in the set, we check if the current index is not yet in the list of indices of the character, if not, we add the index to the list.\n\nThis approach is O(n*k) where k is the length of the alphabet, and thus not very efficient.\n\nMore efficiently, we can solve the problem in O(n*logn) where logn is the length of the alphabet. We do this by using a Fenwick tree, which is a binary indexed tree (Bin.Index) with a modified data structure that is used to store the data efficiently, similar to the Fenwick tree.\n\"\"\"\nfrom __future__ import print_function\nfrom collections import defaultdict\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abcdefg\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"abcdabcd\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"ababab\") == \"Yes\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('1000000\\n') == '0'\nassert solution('1 -2 3 1 2\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\n\n\n-----\n\nfrom itertools import combinations\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1\\n\"\nassert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"7\\n2\\n3 2\\n\"\nassert solution(\"1000000\\n\") == \"0\\n0\\n\"\nassert solution(\"2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1\\n\"\n\n\n\n\n\"\"\""
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1000000\\n') == '0\\n0'\nassert solution('1\\n0\\n') == '0\\n0'\nassert solution('1\\n2\\n') == '3\\n2'\nassert solution('1\\n100000\\n') == '999999\\n999999'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == ''\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4\\n4 5\\n1 3\\n') == '6\\n2\\n4 1\\n'\nassert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '7\\n2\\n3 2\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('1000000\\n') == '0\\n0\\n'\n\"\"\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n5 2') == '3'\nassert solution('-1 -2\\n-10 -20\\n-15 -10\\n-10 10\\n-10 -10\\n-10 -20\\n-15 10') == '11'\nassert solution('3 10\\n0 2\\n2 3\\n3 9\\n3 10\\n3 15\\n4 9\\n4 10\\n4 7\\n6 4\\n4 8\\n3 7\\n5 1\\n2 1') == '3'\nassert solution('2 10\\n0 2\\n2 3\\n3 9\\n3 10\\n3 15\\n4 9\\n4 10\\n4 7\\n6 4\\n4 8\\n3 7\\n5 1\\n2 1') == '9'\nassert solution('1 10\\n0 2\\n2 3\\n3 9\\n3 10\\n3 15\\n4 9\\n4 10\\n4 7\\n6 4\\n4 8\\n3 7\\n5 1\\n2 1') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '4'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '7'\nassert solution('1000000') == '0'\nassert solution('5 4') == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\", \"1 2\", \"1 3\", \"2 4\") == \"1 2\"\nassert solution(\"1000000\", \"1000000\") == \"0\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('1 0\\n1000000\\n') == '0'\n\n'''\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nsegments = []\n\nfor _ in range(m):\n    l, r = map(int, input().split())\n    segments.append([l, r])\n\nmax_value = 0\n\nfor segment in segments:\n    min_value = min(a[segment[0]-1:segment[1]])\n    max_value -= min_value\n\nprint(max_value)\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n1 2\\n1 2') == '2'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1000000\\n') == '0'\nassert solution('-2 3 1 2\\n1 3\\n4 5') == '6'\nassert solution('-2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('1 3') == '2'\nassert solution('4 5') == '2'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == 'LLL'\nassert solution('1\\n2 3\\n3\\n4') == 'LRRRLLL'\nassert solution('4\\n1 2 4 3\\n2 3 4 5') == 'LRLRLLL'\nassert solution('6\\n1 2 3 4 5 6 7\\n2 3 4 5 6 7 8') == 'LRLRLLL'\nassert solution('2\\n1 2\\n1 2') == 'LR'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == answer_1\n\nassert solution(input2) == answer_2\n\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"L\"\nassert solution(\"2\") == \"LRLR\"\nassert solution(\"3\") == \"LLL\"\nassert solution(\"4\") == \"LLLRLLL\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"\nassert solution(\"1\\n1\") == \"1\\nL\"\n\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"LRLRRLR\"\nassert solution(\"5\\n2 1 5 4 3\\n\") == \"4\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == 'LLL'\nassert solution(\"4\\n1 2 4 3\\n\") == 'LLLR'\nassert solution(\"2\\n1 2\\n\") == 'L'\nassert solution(\"1\\n1\\n\") == 'L'\nassert solution(\"3\\n1 2 3\\n\") == 'LLL'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcd') == 'L'\nassert solution('abbc') == 'L'\nassert solution('aaabc') == 'L'\nassert solution('abcd') == 'L'\nassert solution('abcde') == 'L'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == '7LRLRLLL'\nassert solution('''3\n1 2 3''') == '3'\nassert solution('''4\n1 2 4 3''') == 'LLL'\n\nassert solution('''5\n8 9 10 11 12 13 14\n1 8 9 10 11 12 13\n1 8 9 10 11 12 13\n1 8 9 10 11 12 13\n1 8 9 10 11 12 13\n1 8 9 10 11 12 13''') == '1'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1\\nLL'\nassert solution('2\\n1 1') == '1\\nLL'\nassert solution('3\\n1 1 1') == '1\\nLL'\nassert solution('4\\n1 1 1 1') == '1\\nLL'\nassert solution('5\\n1 1 1 1 1') == '1\\nLL'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''1000\n
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n') == '4'\n\n'''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('3\\n4\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n\n'''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('3 2 1') == ''\nassert solution('4 1 2 3') == ''\nassert solution('5 4 3 2 1') == ''\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4\\n'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2\\n'\nassert solution('2\\n1 2\\n') == '2\\n'\nassert solution('2\\n1 2\\n') == '2\\n'\nassert solution('2\\n1 2\\n') == '2\\n'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5''') == '4'\nassert solution('''2''') == '2'\nassert solution('''7''') == '2'\nassert solution('''6 5 4 3 2 4 3''') == '2'\nassert solution('''1 2 5 3 4''') == '4'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 5 3 4') == '4'\nassert solution('2\\n1 2') == '2'\nassert solution('7\\n6 5 4 3 2 4 3') == '2'\nassert solution('7\\n6 5 4 3 2 4 3') == '2'\nassert solution('3\\n1 2 3') == '1'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '4'\nassert solution('1 2 5 3 4') == '4'\nassert solution('2') == '2'\nassert solution('6 5 4 3 2 4 3') == '2'\nassert solution('7') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input('')) == '2'"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 3 3\n''') == '2'\nassert solution('''6 2\n1 2 3 4 5 6\n''') == '0'\nassert solution('''7 2\n1 2 3 4 5 6 7\n''') == '2'\nassert solution('''8 2\n1 2 3 4 5 6 7 8\n''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 3 3\") == \"0\"\nassert solution(\"1 2 3 3 3 3\") == \"3\"\nassert solution(\"1 2 3 3 3 3\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n3') == '2'\nassert solution('2\\n2') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\"\n\n\"\"\"\nSample Output\n4\n\"\"\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('3 1 1') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 3 4\") == \"4\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()[3]\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 6 8\") == \"4\"\nassert solution(\"2 3 6\") == \"1\"\nassert solution(\"3 1 3\") == \"0\"\nassert solution(\"7 3 4\") == \"0\"\nassert solution(\"6 6 8\") == \"0\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 4 0') == '2'\nassert solution('8 4 0') == '2'\nassert solution('8 4 0') == '2'\nassert solution('8 4 0') == '2'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\n\"\"\"\n\n\n\"\"\"\n\nGiven an integer A, find and return the Ath term in the row of Pascal's Triangle.\n\nPascal's Triangle: To generate A rows of the Pascal's Triangle, you need to calculate A - 1 rows of the Pascal's Triangle. You may refer to the following forum for details.\n\n\"\"\""
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 5 5') == '0'\nassert solution('1 2 3') == '0'\nassert solution('3 2 1') == '2'\nassert solution('5 10 7') == '4'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('9 7 2') == '1'\nassert solution('5 2 3') == '2'\nassert solution('10 10 10') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2\n4\n4\n''') == '4'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n1\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n8\n''') == '48'"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('inputs/lc8.in') == '-1'\nassert solution('inputs/lc8_1.in') == '2'\nassert solution('inputs/lc8_2.in') == '24'\nassert solution('inputs/lc8_3.in') == '48'\nassert solution('inputs/lc8_4.in') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\\n1\") == \"-1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"8\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"-1\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"48\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n2\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\n'''\n\n'''\nfrom math import sqrt\n\nn = int(input())\ndivisors = list(map(int, input().split()))\n\nfor _ in range(n):\n    guess = int(input())\n    if sqrt(guess) % 1 == 0:\n        x = guess\n        break\nelse:\n    x = -1"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\") == \"48\"\nassert solution(\"1\\n2\\n2\") == \"-1\"\nassert solution(\"3\\n1\") == \"-1\"\nassert solution(\"2\\n1\\n2\") == \"-1\"\nassert solution(\"1\\n2\\n1\") == \"-1\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n5\\n2\\n1\\n3\\n2\\n4') == '48'\nassert solution('1\\n2\\n2\\n5\\n1\\n3\\n2\\n4') == '4'\nassert solution('1\\n2\\n5\\n2\\n1\\n3\\n2\\n4') == '-1'\nassert solution('1\\n5\\n2\\n1\\n3\\n2\\n4') == '4'\nassert solution('1\\n3\\n2\\n1\\n3\\n2\\n4') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == '-1'\nassert solution('3') == '3'\nassert solution('6') == '6'\nassert solution('12') == '12'\nassert solution('24') == '12'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n2\\n1\") == \"-1\"\nassert solution(\"1\\n100\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\") == \"48\"\nassert solution(\"1\\n4\\n2\\n4\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n2 4 2 4 4\\n6 6 6 6 6') == '2\\n4 6'\nassert solution('5\\n2 4 2 4 4\\n6 6 6 6 6') == '2\\n4'\nassert solution('3\\n4 3 5 4\\n4 3 5 2\\n6 6 5 4\\n6 6 5 4') == '2\\n3 4 5'\nassert solution('3\\n4 3 5 4\\n4 3 5 2\\n6 6 5 4\\n6 6 5 4') == '2\\n4 3 5'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '1 2 3 4'\nassert solution('1 2 3 4 5') == '1 2 4'\nassert solution('2 3 4 4 4') == '2 3 4'\nassert solution('2 4 2 4 4') == '2 4'\nassert solution('2 4 3 4 4') == '2 4'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 5 1 6 1') == '3', '3'\nassert solution('2 4 2 4 4') == '2', '2'\nassert solution('6 6 6 6 6') == '1', '1'\nassert solution('1 2 1 2 3 4') == '4', '4'\nassert solution('1 1 2 2 2 3 3 4 4') == '4', '4'\n\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '3\\n1 2 3 4'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('6\\n6 6 6 6 6\\n') == '1\\n6'\n\n\"\"\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == result\n\nIn this task Petya is a good hacker so he can do it in few lines of code. But still he is not clever, so help him to make it faster.\n\n\"\"\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('2 4 2 4 4') == '2\\n4 2'\nassert solution('5 6 6 6 6') == '1\\n6'\nassert solution('6 6 6 6 6') == '1\\n6'\nassert solution('6 6 6 6 6') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6''') == '3'\nassert solution('''1 5 5 1 6 1''') == '3'\nassert solution('''5''') == '2'\nassert solution('''2 4 2 4 4''') == '2'\nassert solution('''6 6 6 6 6 6''') == '1'\n\nprint('solution passed')\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1,2,3,4,5,5,5') == '3'\nassert solution('2,2,2,2,2') == '2'\nassert solution('2,3,3,3,3') == '1'\nassert solution('1,3,4,4,4,4') == '2'\nassert solution('3,3,3,3,3') == '1'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123') == '124'\nassert solution('1023') == '1024'\nassert solution('100') == '101'\nassert solution('123') == '124'\nassert solution('43') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('abc') == None\nassert solution('12345') == None\nassert solution('1234') == None\nassert solution('5') == None\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('43') == '44'\nassert solution('99') == '103'\nassert solution('102') == '104'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"43\"\n) == \"45\"\n\nassert solution(\n\"0\"\n) == \"1\"\n\nassert solution(\n\"57\"\n) == \"58\"\n\nassert solution(\n\"101\"\n) == \"103\"\n\nassert solution(\n\"111\"\n) == \"113\""
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"101\"\nassert solution(\"100\") == \"101\"\nassert solution(\"999\") == \"1000\"\nassert solution(\"1000\") == \"1001\"\nassert solution(\"42\") == \"44\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1 2') == None\nassert solution('1 2 3') == None\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('42') == '44'\nassert solution('99') == '103'\nassert solution('432') == '435'\nassert solution('237') == '237'\nassert solution('42') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 'a'\nassert solution('bca') == 'b'\nassert solution('a') == 'a'\nassert solution('z') == 'z'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n-38 13 24 14 11 5 3 24 17 0''') == 'b'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n1 2 3 4 5 0''') == 'aab'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n1 2 3 4 5 0''') == 'codeforces'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''abc\n2\n0\nabc\n1\n0\naac''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''aac\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abc\n1\n0\nabac\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n1\n0\nabc\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'b'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aba'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('aabc') == 'ab'\nassert solution('abcab') == 'a'\nassert solution('abcabc') == 'abc'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\nprint('Test success!')\n\n'''"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('aba') == 'codeforces'\nassert solution('abcdefghij') == 'defghij'\nassert solution('abcdefghijkl') == 'defghij'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ecoosdcefr') == 'forgesd'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ecoosdcefr') == 'frodo'\nassert solution('codeforces') == 'frodo'"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ecoosdcefr') == 'for'\nassert solution('absdea') == 'ab'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7\") == 'bb'\nassert solution(\"a\") == 'a'\nassert solution(\"z\") == 'z'\nassert solution(\"a1\") == 'a'\nassert solution(\"ba\") == 'b'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1''') == 'b'\nassert solution('''27''') == 'z'\nassert solution('''27''') == 'za'\nassert solution('''702''') == 'zy'\nassert solution('''18277''') == 'zz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(read_input('''9\n3\n2\n4\n5\n6\n7\n8\n9\n1\n''')) == 'baa'\nassert solution(read_input('''3\n3\n2\n1\n2\n''')) == 'z'\nassert solution(read_input('''2\n2\n1\n''')) == 'z'\nassert solution(read_input('''1\n1\n''')) == 'z'\nassert solution(read_input('''25\n1\n''')) == 'zy'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abcdefg') == 'bcdefg'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') == '0123456789'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('3') == 'b'\nassert solution('10') == 'ab'\nassert solution('12') == 'abc'\nassert solution('100') == 'abcd'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n''') == 'b'\nassert solution('''27\n''') == 'za'\nassert solution('''701\n''') == 'zzz'\nassert solution('''18278\n''') == 'zzz'\nassert solution('''475254\n''') == 'zzzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0\n''') == ''\nassert solution('''1\n''') == 'a'\nassert solution('''26\n''') == 'z'\nassert solution('''27\n''') == 'aa'\nassert solution('''701\n''') == 'zz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1') == 'a'\nassert solution('100') == 'z'\nassert solution('1000') == 'zz'\nassert solution('1000000') == 'zzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n''') == 'b'\nassert solution('''9\n''') == 'zzz'\nassert solution('''13\n''') == 'aaaaa'\nassert solution('''21\n''') == 'zzzzz'\nassert solution('''45\n''') == 'aaaaaaaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''to be or not to be\n''') == '12'\nassert solution('''a ab a a b ab a a b c\n''') == '13'\nassert solution('''aa bb aa aa bb bb\n''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('a bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n6\nto be or not to be\n\"\"\") == \"12\"\n\nassert solution(\n\"\"\"\n10\na ab a a b ab a a b c\n\"\"\") == \"13\"\n\nassert solution(\n\"\"\"\n6\naa bb aa aa bb bb\n\"\"\") == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('to be or not to be') == 12\nassert solution('a ab a a b ab a a b c') == 13\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('aa bb aa aa bb bb') == 11\nassert solution('a bb aa aa bb bb') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3''') == '20'\nassert solution('''5 1''') == '1'\nassert solution('''4 2''') == '4000'\nassert solution('''1 1000 2000 2''') == '1 2 3'\nassert solution('''4 1''') == '1 5'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('input') == '4000\\n2 2\\n'\nassert solution('2\\n2') == '2\\n2\\n'\n\"\"\""
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '5'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nassert solution('''9 9\n1 9 9 9 9 9 9 9 9 9 9''') == '1'\nassert solution('''8 5\n1 1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 2 1\\n') == '3\\n2 2'\nassert solution('2 1\\n1 1\\n') == '2\\n1'\nassert solution('4 2\\n1 2000 2000 2\\n') == '4000\\n2 2'\n\n\"\"\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == None\n\n\"\"\""
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1\\n1 1 1 1 1') == '4000\\n1 2 3'"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\") == \"20\\n3 2 3\"\nassert solution(\"5 1\\n1 1 1 1 1\\n\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\\n2 2\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\\n2 2\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\\n2 2\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == \"\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n'''\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n-5 3 2') == '1'\nassert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 -5 3 2''') == '1'\nassert solution('''5\n4 -2 3 -9 2''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1''') == '3'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4''') == '3'\nassert solution('''8\n1 2 4 6 5 3 -1 -2''') == '1'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '1'\nassert solution('''5''') == '0'\nassert solution('''9''') == '3'\nassert solution('''16 -5 -11 -15 10 5 4 -4''') == '6'\nassert solution('''8''') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == ''\n\n\"\"\""
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n-1 1') == '2'\nassert solution('2\\n1 -1') == '2'\nassert solution('2\\n1 -1 1') == '3'\nassert solution('2\\n1 -1 1 1') == '3'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\"\nassert solution(\"2\\n1 2\\n\") == \"1\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4'''\n) == '1'\n\nassert solution(\n'''5'''\n) == '0'\n\nassert solution(\n'''9'''\n) == '6'\n\nassert solution(\n'''-1 1 -1 1 -1 1 1 -1 -1'''\n) == '3'\n\n\n'''\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '0'"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''5\n2 2\n2 2\n2 2\n2 2\n2 2\n''') == '0\\n2\\n2\\n2\\n2'\nassert solution('''5\n3 3\n3 3\n3 3\n3 3\n3 3\n''') == '0\\n0\\n0\\n0\\n0'\nassert solution('''6\n3 3\n2 2\n2 2\n2 2\n2 2\n2 2\n''') == '0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000'''\n) == '0\\n2\\n10\\n1000000000\\n2000000000'\n\nassert solution(\n'''5\n1 100\n2 1\n5 5\n2 1000000000\n1000000000 1000000000'''\n) == '2\\n10\\n1000000000\\n2000000000'\n\nassert solution(\n'''5\n1 100\n2 1\n5 5\n2 1000000000\n1000000000 1000000000'''\n) == '2\\n10\\n1000000000\\n2000000000'\n\nassert solution(\n'''5\n1 100\n2 1\n5 5\n2 1000000000\n1000000000 1000000000'''\n) == '2\\n10\\n1000000000\\n2000000000'\n\nassert solution(\n'''5\n1 100\n2 1\n5 5\n2 1000000000\n1000000000 1000000000'''\n) == '2\\n10\\n1000000000\\n2000000000'"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1\n10\n100''') == '0'\nassert solution('''10\n1000000000\n10000000000''') == '0'\nassert solution('''1\n1000000000\n10000000000''') == '0'\nassert solution('''1\n1\n1''') == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\nassert solution('''5 5\n2 1000000000\n1000000000 1000000000\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''5 5\n2 1000000000\n1000000000 1000000000\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\nassert solution('''3 3\n3 3\n3 3\n2 2\n2 2\n2 2''') == '0'\nassert solution('''3 3\n3 3\n3 3\n2 2\n2 2\n2 2\n1 1\n1 1\n1 1\n2 2\n1 2\n1 2\n1 2''') == '2'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\") == \"3\\n3\\n3\"\nassert solution(\"2\\n2\\n2\\n2\") == \"0\\n0\\n0\\n0\"\nassert solution(\"2\\n2\\n2\\n5\") == \"2\\n1\\n1\\n1\"\nassert solution(\"5\\n2\\n5\\n5\\n0\") == \"2\\n1\\n1\\n1\"\nassert solution(\"5\\n1000000000\\n1000000000\") == \"0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '2'\nassert solution('3\\n3') == '3'\nassert solution('2\\n5') == '1'\nassert solution('5\\n3') == '2'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''1\n1\n''') == '0'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''2\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''3\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2\\n2') == '0'\nassert solution('5\\n5\\n5') == '0'\nassert solution('1 100\\n1 100\\n1 100') == '0'\nassert solution('1 10\\n1 10\\n1 10') == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 1''') == '1'\nassert solution('''1 1''') == '0'\nassert solution('''1 1 0''') == '0'\nassert solution('''1 0 2''') == '2'\nassert solution('''2 1 0''') == '1'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 100') == '0'\nassert solution('2 2') == '0'\nassert solution('2 1000000000') == '2'\nassert solution('1 1000000000') == '1000000000'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('101') == 4\nassert solution('7') == -1\nassert solution('777') == 4\nassert solution('7777') == 7\nassert solution('777777') == 9\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"77\") == \"77\"\nassert solution(\"777\") == \"77\"\nassert solution(\"7777\") == \"77\"\nassert solution(\"777777\") == \"77\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == stdout.rstrip()\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 2\nassert solution(5) == 2\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '1'\nassert solution('77') == '2'\nassert solution('777') == '3'\nassert solution('7777') == '4'\nassert solution('77777') == '5'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(7) == 4\nassert solution(77) == 4\nassert solution(777) == 4\nassert solution(101) == 4\nassert solution(1010) == -1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"101\") == 4\n\"\"\""
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == str(4)\nassert solution(stdin) == str(-1)\nassert solution(stdin) == str(0)\nassert solution(stdin) == str(1)\nassert solution(stdin) == str(2)\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('101') == 4\nassert solution('100') == -1\nassert solution('100 ') == -1\nassert solution('101 ') == 4\nassert solution('101 ') == 4\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('101') == 4\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nfrom collections import Counter, defaultdict"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4''') == '4'\nassert solution('''5 5''') == '1'\nassert solution('''15 8''') == '48'\nassert solution('''1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n\n\n\n'''\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4\\n'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1\\n'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48\\n'\nassert solution('1\\n1\\n') == '1\\n'\n\n\n'''\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 5 3 1') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\nassert solution('1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1\\n'\nassert solution('4 3') == '2\\n'\nassert solution('5 1') == '1\\n'\nassert solution('10 4') == '2\\n'\nassert solution('15 8') == '48\\n'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4') == '4'\nassert solution('2 4 5 3 1') == '4'\nassert solution('5 5') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 1 1 1 1') == '6'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom __future__ import annotations\n\nn, m = map(int, stdin.split())\np = list(map(int, stdin.split()))\n\nprint(len([i for i in range(1, n) if p[i - 1] < p[i] < p[i + 1]]) // 2)\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\nassert solution('15 4') == '4'\nassert solution('1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('5 15\\n5 5 5 5 5') == '2'\nassert solution('5 26\\n5 5 5 5 5') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 3\") == \"2\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5 5\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5 5\") == \"1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"-1\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10000)"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == result_for_input(stdin)\nprint('test for \"easy\" passed')\n\nassert solution(stdin) == result_for_input(stdin)\nprint('test for \"hard\" passed')\n\nassert solution(stdin) == result_for_input(stdin)\nprint('test for \"hard\" passed')\n'''"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    stdin = '5 8\\n2 3 1 1 2'\n) == '4'\n\nassert solution(\n    stdin = '7 10\\n1 3 4 2 1 4 2'\n) == '2'\n\nassert solution(\n    stdin = '5 15\\n5 5 5 5 5'\n) == '1'\n\nassert solution(\n    stdin = '5 26\\n5 5 5 5 5'\n) == '-1'\n\nassert solution(\n    stdin = '5 26\\n5 5 5 5 5'\n) == '-1'"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n24 21 14 10\n''') == \"3\"\nassert solution('''\n2\n500 500\n''') == \"0\"\nassert solution('''\n3\n14 5 1\n''') == \"1\"\nassert solution('''\n5\n1 3 6 9 12\n''') == \"-1\"\nassert solution('''\n6\n1 4 3 2 5 6\n''') == \"1\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '1'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n1 3 6 9 12\\n') == '1'"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/solutions/problem_0.txt') == '3'\nassert solution('inputs/solutions/problem_1.txt') == '1'\nassert solution('inputs/solutions/problem_2.txt') == '0'\nassert solution('inputs/solutions/problem_3.txt') == '3'\nassert solution('inputs/solutions/problem_4.txt') == '4'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n24 21 14 10''') == '3'\nassert solution('''2\n500 500''') == '0'\nassert solution('''3\n14 5 1''') == '-1'\nassert solution('''5\n1 3 6 9 12''') == '1'\nassert solution('''6\n1 3 6 9 12 14 15''') == '2'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n24 21 14 10\n\n''') == '3'\n\nassert solution('''2\n500 500\n\n''') == '0'\n\nassert solution('''3\n14 5 1\n\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n\n''') == '1'\n\nassert solution('''6\n1 1 1 1 1 1\n\n''') == '0'"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n2 3 1\") == \"0\"\nassert solution(\"3\\n1 2 1\") == \"2\"\nassert solution(\"2\\n1 2\") == \"-1\"\nassert solution(\"3\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n24 21 14 10\\n\") == \"3\"\nassert solution(\"2\\n500 500\\n\") == \"0\"\nassert solution(\"3\\n14 5 1\\n\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('24 21 14 10') == '3'\nassert solution('2 4 3') == '0'\nassert solution('1 3 5 8') == '-1'\nassert solution('500 500') == '0'\nassert solution('1 2 4 3') == '2'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\nassert solution('''2\n500 500\n''') == '0'\nassert solution('''3\n14 5 1\n''') == '-1'\nassert solution('''5\n1 3 6 9 12\n''') == '1'\nassert solution('''6\n1 2 3 4 5 6\n''') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1\\n1 10 100 1000') == '4'\nassert solution('4 2\\n1 2 15 15 15') == '5'\nassert solution('5 2\\n1 2 15 15 15') == '5'\nassert solution('6 1\\n36 4 1 25 9 16') == '2'\nassert solution('6 2\\n36 4 1 25 9 16') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6 7 8 9') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 10') == '4'\nassert solution('1 2 15 15 15') == '5'\nassert solution('36 4 1 25 9 16') == '2'\nassert solution('1 10 100 1000') == '4'\n\n\n-----"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"4\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\n\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\n\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\n\nassert solution('''5 2\n10 5 2 7 9\n''') == '4'\n\nassert solution('''6 2\n1 10 100 1000\n1 15 5 2 7 9\n''') == '3'"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n10') == '0'\nassert solution('10\\n1') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1 2 15 15 15\n1 2 15 15 15\n1 2 15 15 15\n1 2 15 15 15\n1 2 15 15 15\n1 2 15 15 15''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n1 10 100 1000\n1 10 100 1000\n1 10 100 1000\n1 10 100 1000''') == '2'\nassert solution('''3 2\n3 5 4\n3 4 3\n3 5 4\n3 4 3\n3 5 4\n3 4 3''') == '2'\nassert solution('''3 2\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3''') == '3'\nassert solution('''4 2\n1 10 100 1000\n1 10 100 1000\n1 10 100 1000\n1 10 100 1000\n1 10 100 1000\n1 10 100 1000\n1 10 100 1000\n1 10 100 1000''') == '3'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"3\\n2\\n\") == \"3\"\nassert solution(\"3\\n1\\n\") == \"2\"\nassert solution(\"3\\n2\\n4\\n\") == \"2\"\nassert solution(\"3\\n2\\n4\\n5\\n\") == \"3\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('1\\n2') == '1'\nassert solution('2\\n2') == '2'\nassert solution('1\\n3') == '0'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 3 7') == '8'\nassert solution('100 1000 10000') == '-1'\nassert solution('10 7 2') == '5'\nassert solution('0 1 2') == '1'\nassert solution('2 3 4') == '2'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('4 5 3') == '-1'\nassert solution('2 4 5') == '3'\nassert solution('4 10 3 6') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == str(solution(stdin))\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"8 10 3 6\") == \"8\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 10 4 2') == '2'\nassert solution('5 10 7') == '8'\nassert solution('2 2 3') == '-1'\nassert solution('1 100 100') == '-1'\nassert solution('2 4 7') == '4'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == \"8\"\n\nassert solution(input(\"\")) == \"0\"\n\nassert solution(input(\"\")) == \"1\"\n\nassert solution(input(\"\")) == \"-1\"\n\nassert solution(input(\"\")) == \"1\""
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"1 3 4 6 9\") == \"5\"\nassert solution(\"10 5 7\") == \"-1\"\nassert solution(\"6 2 7\") == \"2\"\nassert solution(\"10 5 7\") == \"4\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 10 10') == '0'\nassert solution('2 3 4 5') == '1'\nassert solution('1 1 1') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 10 7') == 8\nassert solution('8 10 3 6') == 8\nassert solution('8 10 3 6') == -1\nassert solution('1 1 1') == 1\nassert solution('1 2 3') == -1\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 1') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('5 3 4') == 'No'\nassert solution('1 3 4') == 'No'\nassert solution('1 3 2') == 'Yes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"6 3 4\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3 3 3\") == \"No\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"No\"\nassert solution(\"4 3 2\\n1\\n3\\n2\\n2\\n1\") == \"Yes\"\nassert solution(\"4 3 2\\n1\\n3\\n2\\n2\\n1\\n2\\n1\") == \"No\"\n\"\"\"\n\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6 3 4\n3\n1\n3\n2\n''') == 'No\\n'\nassert solution('''\n6 3 4\n3\n1\n3\n2\n''') == 'No\\n'\nassert solution('''\n6 3 4\n3\n1\n3\n2\n''') == 'No\\n'\nassert solution('''\n6 3 4\n3\n1\n3\n2\n''') == 'No\\n'\nassert solution('''\n6 3 4\n3\n1\n3\n2\n''') == 'No\\n'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"2 2 1\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"1 1 1\") == \"Yes\\nYes\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"2 4 6\") == \"No\\nNo\\nYes\\nYes\\nYes\\nYes\"\nassert solution(\"3 1 2\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1\\n3\\n2\\n2\\n3') == 'No\\nNo\\nYes\\nNo\\nNo'\nassert solution('2 3 4\\n3\\n1\\n3\\n2\\n2\\n3\\n2\\n3\\n3') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('2 4 6\\n1\\n3\\n2\\n2\\n2\\n3\\n3\\n3\\n4') == 'No\\nNo\\nNo\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\nassert solution('3 4 6\\n1\\n3\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4') == 'No\\nNo\\nNo\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\nassert solution('1 5 7\\n1\\n3\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n5') == 'No\\nNo\\nNo\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('5 1 5\\n4\\n3\\n2\\n1\\n') == 'No\\nNo\\nNo\\nNo\\nYes'\nassert solution('5 2 3\\n5\\n1\\n4\\n5\\n') == 'No\\nNo\\nNo\\nYes\\nNo'\nassert solution('5 4 2\\n3\\n4\\n1\\n1\\n') == 'No\\nNo\\nNo\\nYes\\nNo'\nassert solution('5 3 1\\n2\\n3\\n4\\n5\\n') == 'No\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 3 4\") == \"No\"\nassert solution(\"6 3 4\\n3\\n3\\n3\\n3\\n3\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n3\\n3\\n3\\n3\\n3\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"5 2 2\") == \"Yes\\nNo\"\nassert solution(\"5 2 2\\n3\\n3\\n3\\n3\") == \"No\\nYes\\nNo\\nYes\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"YES\\n010\\n0000\"\nassert solution(\"2 3\") == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'YES'\nassert solution('''4 2\n0 0 0\n0 0 1\n1 1 1\n0 1''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\""
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\\n\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\\n\"\nassert solution(\"3 4\\n0 0 0\\n0 0 0\\n1 1 1\\n\") == \"NO\\n\"\n\n-----Answer-----\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n0 1 0\") == \"NO\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n0 0 0\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == 'YES\\n00\\n10'\nassert solution('''2 2\n1 1\n1 1\n''') == 'NO'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\nassert solution('''3 4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'YES\\n010\\n0000'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"YES\\n1 0\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\\n0000\"\nassert solution(\"2 2\") == \"YES\\n0101\"\nassert solution(\"2 3\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('12345') == 'Yes'\nassert solution('123456789') == 'Yes'\nassert solution('6') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"12345\") == \"Yes\"\nassert solution(\"1234567\") == \"No\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"124135\") == \"No\"\nassert solution(\"54321\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\nassert solution(\"426\") == \"Yes\"\nassert solution(\"373\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('456') == 'No'\nassert solution('876') == 'Yes'\nassert solution('123') == 'No'\nassert solution('456') == 'Yes'\nassert solution('3736') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('122') == 'Yes'\nassert solution('356') == 'Yes'\nassert solution('43') == 'No'\nassert solution('436') == 'Yes'\nassert solution('0') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('21') == 'No'\nassert solution('22') == 'Yes'\nassert solution('23') == 'No'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('6 2 1') == '3'\nassert solution('6 2 1') == '3'\nassert solution('6 2 1') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5'\n\n'''\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 3 2') == '3'\nassert solution('7 1 1') == '2'\nassert solution('6 2 1') == '3'\nassert solution('9 4 1') == '4'\nassert solution('9 1 1') == '2'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1\") == \"5\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"5 2 1\") == \"5\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"1 2 0 1 0\") == \"5\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\nassert solution('2 2 1\\n0 1 0 1 0\\n') == '2'\n\"\"\"\n\n##############################################################"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 1''') == '5'\nassert solution('''6 2 1''') == '3'\nassert solution('''9 2 1''') == '3'\nassert solution('''12 2 1''') == '4'\nassert solution('''18 2 1''') == '7'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_out\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 1''') == '5'\nassert solution('''6 2 1''') == '3'\nassert solution('''6 2 0''') == '5'\nassert solution('''5 2 0''') == '5'\nassert solution('''7 2 0''') == '5'\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\nassert solution(6) == 8\nassert solution(3) == 3\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nprint('Passed')\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\n\nprint('solution:', solution(input()))\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('112-37') == 375"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\n\"\"\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nprint(\"Tests passed\")\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375\nprint(solution(stdin))\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\n\"\"\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3') == 'YES\\n1 3\\n2 3'\nassert solution('1 2\\n2 1\\n1 3') == 'NO'\nassert solution('1 2\\n2 1\\n1 3\\n2 3') == 'NO'\nassert solution('1 2\\n2 3\\n1 3\\n2 1') == 'YES'\nassert solution('1 2\\n2 3\\n1 3\\n3 2') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 3\\n5 4\\n6 5\") == \"YES\\n1 1\\n3 1\\n2 1\\n3 2\"\nassert solution(\"2 4\\n1 3\\n3 1\\n2 3\") == \"NO\"\nassert solution(\"9 3\\n9 2\\n2 2\\n1 3\\n5 2\\n3 2\\n2 1\") == \"YES\\n5 1\\n1 1\\n1 2\\n1 1\\n3 1\\n2 3\\n1 1\""
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''4 2''') == 'NO'\nassert solution('''10 4''') == 'YES'\nassert solution('''10 3''') == 'YES'\nassert solution('''4 1''') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\nassert solution('13 4') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n---"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''10 4''') == 'YES'\nassert solution('''13 4''') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"10 2\") == \"NO\"\nassert solution(\"14 5\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3\\n') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n'\nassert solution('10 4\\n') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\nassert solution('13 4\\n') == 'NO\\n'\n\n\n-----Test-----\n\nRun the solutions:\n\n./004.py < solution.py > solution.out\n./004.py < solution-3.py > solution.out\n./004.py < solution-4.py > solution.out\n\nCheck the result:\ndiff solution.out solution.txt\n\n\"\"\""
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"10 14\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"7 8\") == \"YES\\n2 1\\n1 3\\n3 2\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 3\n'''\n    ) == 'YES'\n\nassert solution(\n'''\n10 4\n'''\n    ) == 'YES'\n\nassert solution(\n'''\n13 4\n'''\n    ) == 'NO'\n\nassert solution(\n'''\n13 4\n'''\n    ) == 'NO'\n\nassert solution(\n'''\n5 4\n'''\n    ) == 'YES'"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100'\n\nassert solution('''4 3 1\n1 100 1 1\n''') == '-1'"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'\n\nassert solution('''4 3 1\n1 100 1 1\n''') == '100'\n\nassert solution('''4 3 1\n1 100 1 1\n''') == '-1'\n\nassert solution('''2 2 2\n1 1 1\n''') == '2'"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 2 3\n5 1 3 10 1'''\n) == '18'\n\nassert solution(\n'''6 1 5\n10 30 30 70 10 10'''\n) == '-1'\n\nassert solution(\n'''4 3 1\n1 100 1 1'''\n) == '100'"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"\nassert solution(\"4 3 3\\n1 1 1 1\\n\") == \"-1\"\nassert solution(\"5 3 1\\n1 100 1 1 1\\n\") == \"100\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10') == '-1'\nassert solution('4 3 1\\n1 100 1 1') == '100'\n\nprint(solution(stdin))"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\\n\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\\n\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\\n\"\nassert solution(\"6 3 2\\n3 100 2 1\\n\") == \"2\\n\"\nassert solution(\"4 3 4\\n3 2 1 4\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n00100') == '3'\nassert solution('4 1\\n0011') == '4'\nassert solution('6 1\\n000000') == '21'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('12 6\\n000000\\n111111') == '24'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\n\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '21'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\nassert solution('001011') == '4'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0011') == '4'\nassert solution('3 1\\n0011') == '5'\nassert solution('5 1\\n000000') == '21'\nassert solution('6 1\\n000000') == '15'\nassert solution('6 2\\n0000100') == '21'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n00100\\n') == '3'\nassert solution('6 1\\n000000\\n') == '21'\nassert solution('4 1\\n0011\\n') == '4'\nassert solution('12 6\\n000010000100\\n') == '15'\n\n\"\"\"\n\nn, k = map(int, stdin.split())\ns = stdin.strip()"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\n\n\n\"\"\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('10 2\\n00000') == '8'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('inputs/ex_3_1.txt') == '3'\nassert solution('inputs/ex_3_2.txt') == '15'\nassert solution('inputs/ex_3_3.txt') == '4'\nassert solution('inputs/ex_3_4.txt') == '21'\nassert solution('inputs/ex_3_5.txt') == '4'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('zzz') == 'No'\nassert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"abcde\") == \"No\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('applepie') == 'No'\nassert solution('apple') == 'Yes'\nassert solution('applepie') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('zzzzz') == 'Yes'\nassert solution('zzz') == 'Yes'\nassert solution('azzzz') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('zleet') == 'No'\nassert solution('zet') == 'No'\nassert solution('zloty') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('applez') == 'No'\nassert solution('applez') == 'Yes'\nassert solution('apple') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"aazzel\") == \"No\"\nassert solution(\"aaaaaa\") == \"No\"\nassert solution(\"a\") == \"Yes\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('abcde') == 'No'\nassert solution('abcdff') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('aa') == 'No'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    stdin\n) == \"Yes\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n'''\n\nfrom itertools import combinations"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 1 2\\n2 1 3\") == \"YES\\n5\"\nassert solution(\"1 1 1\\n2 2 2\\n2 1 3\") == \"YES\\n5\"\nassert solution(\"3 2 2\\n2 1 3\\n2 2 1\") == \"NO\\n2\"\nassert solution(\"2 2 2\\n2 1 3\\n2 2 1\") == \"YES\\n6\"\nassert solution(\"1 2 2\\n1 1 2\\n2 1 3\") == \"YES\\n5\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 1\\n1 3 2\\n2 3 2') == '1'\nassert solution('2 1\\n2 1\\n1 1') == '-1'\nassert solution('2 2\\n1 1\\n1 1') == '0'\nassert solution('1 1\\n1 1\\n1 1') == '0'\nassert solution('2 2\\n1 1\\n2 1') == '1'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3 5 6\\n3 3 3 6\") == \"10\"\nassert solution(\"4 3 5 6\\n3 2 2 6\") == \"10\"\nassert solution(\"4 3 5 6\\n3 1 1 6\") == \"6\"\nassert solution(\"4 3 5 6\\n1 1 1 6\") == \"6\"\nassert solution(\"5 5 5 5\\n1 1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\\n5 2 2 5 4\\n2 3 1 1 1\\n5 4 1 1 5\\n7 4 1 1 5\") == \"X\"\nassert solution(\"5\\n5 2 2 2\\n2 3 3 3\\n3 4 2 1\\n4 5 2 1\") == \"X\"\nassert solution(\"7\\n6 2 2 2 4\\n2 3 3 3\\n3 4 1 1 5\\n4 5 1 1 5\\n5 6 2 2 6\") == \"X\"\nassert solution(\"7\\n8 3 2 2 4\\n2 3 1 1 5\\n3 4 1 1 5\\n4 5 1 1 5\\n5 6 2 2 6\") == \"X\"\nassert solution(\"7\\n9 3 3 2 4\\n2 3 1 1 5\\n3 4 1 1 5\\n4 5 1 1 5\\n5 6 2 2 6\") == \"X\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1 10\n1 1\n1 2\n2 1\n2 2\n''') == '1'\nassert solution('''\n4 3\n1 2\n2 3\n3 1\n''') == '0'\nassert solution('''\n4 1\n3 4\n1 3\n2 4\n1 1\n''') == '1'\nassert solution('''\n4 1\n3 4\n1 1\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''\n5 3\n1 2\n1 3\n1 4\n1 5\n1 1\n''') == '0'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '27'\n\nassert solution('''\nHello World\n''') == 'Hello World'\n\nassert solution('''\nabc\ncba\n''') == 'bac'\n\nassert solution('''\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\n''') == '5'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n1 1\") == \"Yes\\n1\\n\"\nassert solution(\"4\\n1\\n1 1\") == \"No\\n2\\n\"\nassert solution(\"5\\n2\\n1 1\") == \"No\\n1\\n\"\nassert solution(\"5\\n3\\n2 2\") == \"Yes\\n2\\n\"\nassert solution(\"5\\n3\\n1 1\") == \"No\\n2\\n\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''3 600\n3 200\n5 800''') == '3'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '3'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '1'\nassert solution('2 50') == '2'\nassert solution('2 700') == '3'\nassert solution('3 4') == '2'\nassert solution('2 300') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4\\n1 1\\n2 2') == '1'\nassert solution('1 10\\n1 2\\n2 1\\n1 1\\n2 2') == '2'\nassert solution('3 100\\n1 1\\n1 1\\n1 1\\n1 1') == '2'\nassert solution('10 100\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '10'\nassert solution('10 1000\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '11'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 700\n3 500\n5 800\n''') == '3'\nassert solution('''1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n11 100\n12 100\n13 100\n14 100\n15 100\n16 100\n17 100\n18 100\n19 100\n20 100\n21 100\n22 100\n23 100\n24 100\n25 100\n26 100\n27 100\n28 100\n29 100\n30 100\n31 100\n32 100\n33 100\n34 100\n35 100\n36 100\n37 100\n38 100\n39 100\n40 100\n41 100\n42 100\n43 100\n44 100\n45 100\n46 100\n47 100\n48 100\n49 100\n50 100\n51 100\n52 100\n53 100\n54 100\n55 100\n56 100\n57 100\n58 100\n59 100\n60 100\n61 100\n62 100\n63 100\n64 100\n65 100\n66 100\n67 100\n68 100\n69 100\n70 100\n71 100\n72 100\n73 100\n74 100\n75 100\n76 100\n77 100\n78 100\n79 100\n80 100\n81 100\n82 100\n83 100\n84 100\n85 100\n86 100\n87 100\n88 100\n89 100\n90 100\n91 100\n92 100\n93 100\n94 100\n95 100\n96 100\n97 100\n98 100\n99 100\n100 100\n''') == '1'\nassert solution('''1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n11 100\n12 100\n13 100\n14 100\n15 100\n16 100\n17 100\n18 100\n19 100\n20 100\n21 100\n22 100\n23 100\n24 100\n25 100\n26 100\n27 100\n28 100\n29 100\n30 100\n31 100\n32 100\n33 100\n34 100\n35 100\n36 100\n37 100\n38 100\n39 100\n40 100\n41 100\n42 100\n43 100\n44 100\n45 100\n46 100\n47 100\n48 100\n49 100\n50 100\n51 100\n52 100\n53 100\n54 100\n55 100\n56 100\n57 100\n58 100\n59 100\n60 100\n61 100\n62 100\n63 100\n64 100\n65 100\n66 100\n67 100\n68 100\n69 100\n70 100\n71 100\n72 100\n73 100\n74 100\n75 100\n76 100\n77 100\n78 100\n79 100\n80 100\n81 100\n82 100\n83 100\n84 100\n85 100\n86 100\n87 100\n88 100\n89 100\n90 100\n91 100\n92 100\n93 100\n94 100\n95 100\n96 100\n97 100\n98 100\n99 100\n100 100\n''') == '4'\nassert solution('''1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n11 100\n12 100\n13 100\n14 100\n15 100\n16 100\n17 100\n18 100\n19 100\n20 100\n21 100\n22 100\n23 100\n24 100\n25 100\n26 100\n27 100\n28 100\n29 100\n30 100\n31 100\n32 100\n33 100\n34 100\n35 100\n36 100\n37 100\n38 100\n39 100\n40 100\n41 100\n42 100\n43 100\n44 100\n45 100\n46 100\n47 100\n48 100\n49 100\n50 100\n51 100\n52 100\n53 100\n54 100\n55 100\n56 100\n57 100\n58 100\n59 100\n60 100\n61 100\n62 100\n63 100\n64 100\n65 100\n66 100\n67 100\n68 100\n69 100\n70 100\n71 100\n72 100\n73 100\n74 100\n75 100\n76 100\n77 100\n78 100\n79 100\n80 100\n81 100\n82 100\n83 100\n84 100\n85 100\n86 100\n87 100\n88 100\n89 100\n90 100\n91 100\n92 100\n93 100\n94 100\n95 100\n96 100\n97 100\n98 100\n99 100\n100 100\n''') == '9'\nassert solution('''1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n11 100\n12 100\n13 100\n14 100\n15 100\n16 100\n17 100\n18 100\n19 100\n20 100\n21 100\n22 100\n23 100\n24 100\n25 100\n26 100\n27 100\n28 100\n29 100\n30 100\n31 100\n32 100\n33 100\n34 100\n35 100\n36 100\n37 100\n38 100\n39 100\n40 100\n41 100\n42 100\n43 100\n44 100\n45 100\n46 100\n47 100\n48 100\n49 100\n50 100\n51 100\n52 100\n53 100\n54 100\n55 100\n56 100\n57 100\n58 100\n59 100\n60 100\n61 100\n62 100\n63 100\n64 100\n65 100\n66 100\n67 100\n68 100\n69 100\n70 100\n71 100\n72 100\n73 100\n74 100\n75 100\n76 100\n77 100\n78 100\n79 100\n80 100\n81 100\n82 100\n83 100\n84 100\n85 100\n86 100\n87 100\n88 100\n89 100\n90 100\n91 100\n92 100\n93 100\n94 100\n95 100\n96 100\n97 100\n98 100\n99 100\n100 100\n''') == '16'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 700\n3 500\n5 800'''\n) == '3'\n\nassert solution(\n'''2 700\n3 500\n5 800'''\n) == '3'\n\nassert solution(\n'''2 700\n3 500\n5 800'''\n) == '3'\n\nassert solution(\n'''2 700\n3 500\n5 800'''\n) == '3'\n\nassert solution(\n'''2 700\n3 500\n5 800'''\n) == '3'"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"3 500\") == \"1\"\nassert solution(\"5 800\") == \"1\"\nassert solution(\"2 100\") == \"1\"\nassert solution(\"1 100\") == \"1\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1') == '1'\nassert solution
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 700\\n3 500\\n5 800\\n\"\n) == \"3\"\nassert solution(\n    \"2 750\\n3 500\\n5 800\\n\"\n) == \"5\"\nassert solution(\n    \"1000000 1000000\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('2 5\\n1 100\\n2 1000\\n3 2000\\n4 10000\\n5 50000\\n6 100000') == '1'\nassert solution('2 4\\n1 100\\n2 500\\n3 1000\\n4 2000\\n5 10000\\n6 50000\\n7 100000') == '2'\nassert solution('2 10\\n1 100\\n2 500\\n3 1000\\n4 2000\\n5 10000\\n6 50000\\n7 100000') == '3'\nassert solution('2 10\\n1 100\\n2 500\\n3 1000\\n4 2000\\n5 10000\\n6 50000\\n7 100000') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7''') == '2'\nassert solution('''8''') == '2'\nassert solution('''9''') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n1 2 3') == '0'\nassert solution('2\\n1 2 3 4') == '2'\nassert solution('3\\n1 3 2 4') == '1'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"5\\n4 5 5 5 5 6\") == \"2\"\nassert solution(\"6\\n2 3 4 2 2 3 2 4\") == \"3\"\nassert solution(\"7\\n2 3 4 2 2 3 2 4 2\") == \"3\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2\\n3') == '4'\nassert solution('5\\n4 3 2 1 3') == '1'\nassert solution('7\\n4 3 5 5 4 2 3') == '4'\nassert solution('9\\n2 3 4 2 2 3 2 4') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7''') == '''2'''\nassert solution('''8''') == '''2'''\nassert solution('''9''') == '''3'''\nassert solution('''4 8 8 7 8 4 4 5''') == '''2'''\nassert solution('''2 3 4 2 2 3 2 2 4''') == '''3'''\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n') == '1\\n'\nassert solution('2\\n1\\n1\\n') == '1\\n'\nassert solution('3\\n1\\n1\\n') == '2\\n'\nassert solution('3\\n2\\n1\\n') == '2\\n'\nassert solution('4\\n1\\n1\\n') == '2\\n'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7''') == '2'\nassert solution('''8''') == '2'\nassert solution('''9''') == '3'\nassert solution('''4 8 8 7 8 4 4 5''') == '2'"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4 3 2 1\\n') == '2'\nassert solution('5\\n5 4 3 2 1\\n') == '1'\nassert solution('7\\n2 3 4 5 6 7 8\\n') == '3'\nassert solution('7\\n3 3 3 2 2 1\\n') == '2'\nassert solution('7\\n4 4 4 4 4 4 4\\n') == '2'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n3\\n3') == '2'\nassert solution('2\\n1\\n4\\n3') == '3'\nassert solution('2\\n3\\n1\\n4') == '2'\nassert solution('2\\n4\\n3\\n1') == '2'\nassert solution('1\\n4\\n3\\n3') == '2'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100'\nassert solution('1 3 2\\n5 2 3 4 1\\n') == '8'\nassert solution('1 3 2\\n5 2 3 4 1\\n') == '8'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n5\\n1\\n1\\n1\\n1') == '18'\nassert solution('6\\n1\\n10\\n30\\n30\\n70\\n10\\n10') == '100'\nassert solution('1\\n100\\n1\\n1\\n1\\n1') == '100'\nassert solution('2\\n1\\n2\\n2\\n2\\n2') == '4'\nassert solution('4\\n1\\n2\\n3\\n4') == '-1'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\nassert solution('''4 3 2\n1 100 1 1''') == '-1'\nassert solution('''5 2 1\n1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'\nassert solution('4 3 1') == '100'\nassert solution('1 100 1 1') == '100'\n\n\"\"\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('1\\n1\\n2\\n1\\n1\\n1\\n1\\n1') == '6'\nassert solution('1\\n1\\n2\\n1\\n1\\n1\\n1\\n1') == '100'\nassert solution('1\\n1\\n2\\n1\\n1\\n1\\n1\\n1') == '3'\nassert solution('1\\n1\\n2\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n100') == '100'\nassert solution('5\\n1 3 10 1') == '18'\nassert solution('6\\n10 30 30 70 10 10') == '100'\nassert solution('4\\n1 100 1 1') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n2\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '4'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n') == '-1'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n') == '-1'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n') == '-1'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10\\n5 1 3 10 1\\n') == '18'\nassert solution('15\\n
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"101\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5\\n6\\n7\\n8\") == \"Yes\"\nassert solution(\"5\\n4\\n3\\n2\\n1\") == \"No\"\nassert solution(\"10\\n10\") == \"Yes\"\nassert solution(\"15\\n15\") == \"No\"\nassert solution(\"100\\n99\\n98\\n97\\n96\\n95\\n94\\n93\\n92\\n91\\n90\\n89\\n88\\n87\\n86\\n85\\n84\\n83\\n82\\n81\\n80\\n79\\n78\\n77\\n76\\n75\\n74\\n73\\n72\\n71\\n70\\n69\\n68\\n67\\n66\\n65\\n64\\n63\\n62\\n61\\n60\\n59\\n58\\n57\\n56\\n55\\n54\\n53\\n52\\n51\\n50\\n49\\n48\\n47\\n46\\n45\\n44\\n43\\n42\\n41\\n40\\n39\\n38\\n37\\n36\\n35\\n34\\n33\\n32\\n31\\n30\\n29\\n28\\n27\\n26\\n25\\n24\\n23\\n22\\n21\\n20\\n19\\n18\\n17\\n16\\n15\\n14\\n13\\n12\\n11\\n10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n0\")\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8\\n\") == \"No\"\nassert solution(\"7\\n\") == \"Yes\"\nassert solution(\"3\\n\") == \"Yes\"\nassert solution(\"29\\n\") == \"Yes\"\nassert solution(\"99\\n\") == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\nassert solution('6') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n3') == 'Yes'\nassert solution('5\\n3') == 'No'\nassert solution('100\\n100') == 'No'\nassert solution('100\\n47') == 'Yes'\nassert solution('100\\n95') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n') == \"Yes\"\nassert solution('3\\n') == \"No\"\nassert solution('8\\n') == \"Yes\"\nassert solution('2\\n') == \"No\"\nassert solution('8\\n') == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('10') == 'Yes'\nassert solution('100') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"4\\n\"\n    \"0\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"11\\n\"\n    \"12\\n\"\n) == \"Yes\"\nassert solution(\n    \"1\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\""
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n\nN = int(input())"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n\"\"\".strip()\n) == \"2 2 6\"\n\nassert solution(\n    \"\"\"4\n2 3 5\n2 3 5\n3 2 5\n1 2 5\n\"\"\".strip()\n) == \"3 2 6\"\n\nassert solution(\n    \"\"\"4\n3 3 3\n3 3 3\n3 3 3\n2 2 2\n\"\"\".strip()\n) == \"3 3 3\"\n\nassert solution(\n    \"\"\"4\n3 3 3\n3 3 3\n3 3 3\n2 2 2\n\"\"\".strip()\n) == \"3 3 3\"\n\nassert solution(\n    \"\"\"4\n4 4 4\n4 4 4\n3 3 3\n2 2 2\n\"\"\".strip()\n) == \"2 2 2\""
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nassert solution('''2\n2 3 4\n1 2 5\n1 3 6''') == '1 2 8'\nassert solution('''3\n2 3 4\n1 2 5\n1 3 6''') == '1 2 8'\nassert solution('''4\n0 0 5\n2 3 4\n2 1 5\n1 2 5''') == '0 0 10'\nassert solution('''6\n4 6 7\n0 0 5\n2 3 4\n2 1 5\n1 2 5\n1 3 6''') == '2 2 8'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == \"2 2 6\"\nassert solution('''\n1\n0 0 4\n''') == \"0 0 4\"\nassert solution('''\n2\n0 0 4\n2 1 6\n''') == \"0 0 4\"\n'''\nassert solution('''\n2\n1 1 1\n1 1 1\n''') == \"1 1 1\"\nassert solution('''\n4\n3 4 6\n6 1 6\n6 2 8\n7 3 9\n''') == \"1 1 3\"\n'''\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2 5\\n2 1 5\\n1 2 5\\n3 2 5\\n') == '2 2 6'\nassert solution('3\\n1 1 3\\n2 2 1\\n1 1 3\\n2 1 3\\n2 1 1\\n') == '1 1 3'\nassert solution('2\\n1 1 3\\n2 2 1\\n1 1 3\\n2 1 3\\n') == '1 1 3'\nassert solution('2\\n1 1 3\\n2 2 1\\n1 1 3\\n2 1 3\\n2 1 1\\n') == '1 1 3'\nassert solution('1\\n1 1 3\\n2 2 1\\n1 1 3\\n2 1 3\\n2 1 1\\n') == '1 1 3'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 5') == '2 2 6'\nassert solution('2 1 5') == '2 2 5'\nassert solution('1 2 5') == '2 1 5'\nassert solution('3 2 5') == '1 2 5'\nassert solution('1 3 5') == '1 2 5'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('2\\n3 1 5\\n1 2 5\\n3 2 5') == '3 2 6'\nassert solution('1\\n2 3 4 5\\n2 1 5\\n3 2 5') == '2 2 6'\nassert solution('1\\n2 2 3 4 5\\n2 1 5\\n3 2 5') == '1 1 4'\nassert solution('1\\n2 2 3 4 5\\n2 1 5\\n3 2 5') == '1 1 4'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"2\\n1 1 1\\n2 2 2\") == \"1 1 3\"\nassert solution(\"2\\n1 1 1\\n1 1 1\") == \"1 1 1\"\nassert solution(\"2\\n1 1 1\\n2 2 2\") == \"1 1 1\"\nassert solution(\"1\\n1 1 1\\n1 1 1\") == \"1 1 1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('redcoder') == 1\nassert solution('k') == 0\nassert solution('a') == 0\nassert solution('aa') == 0\nassert solution('aab') == 1\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('redcoder') == 1\nassert solution('dabacddbacb') == 0\nassert solution('cababac') == 2\nassert solution('cc') == 1\nassert solution('ccc') == 3\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('redcoder') == 1\nassert solution('iloveyou') == 2\nassert solution('takahashi') == 0\nassert solution('a') == 0\nassert solution('asdfghjkl') == 0\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 1\n\"\"\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('redcoder') == '1'\nassert solution('red') == '2'\nassert solution('aa') == '0'\nassert solution('civic') == '3'\nassert solution('ab') == '2'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n\n\"\"\""
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"peddle\") == \"3\"\nassert solution(\"welcome\") == \"1\"\nassert solution(\"babbledee\") == \"1\"\nassert solution(\"deedee\") == \"2\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('redcoder') == 1\nassert solution('abcdef') == 5\n\"\"\""
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n\n'''\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('5') == 'Yes'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == 'Yes'\nassert solution('15') == 'No'\nassert solution('12') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5120') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"12\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"1234\") == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == \"No\"\nassert solution(2) == \"No\"\nassert solution(3) == \"No\"\nassert solution(4) == \"Yes\"\nassert solution(5) == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(10) == \"Yes\"\nassert solution(4) == \"No\"\nassert solution(10) == \"Yes\"\nassert solution(101) == \"No\"\nassert solution(4) == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == 'Yes'\nassert solution('11') == 'No'\nassert solution('99') == 'Yes'\nassert solution('999') == 'Yes'\nassert solution('9999') == 'Yes'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"1 4 4 7 5\") == \"5\"\nassert solution(\"1 4 1 4 1\") == \"0\"\nassert solution(\"1 4 1 4 1\") == \"0\"\nassert solution(\"1 4 1 4 1\") == \"0\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n4 4 9 7 5\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n100\n5 4 6 5 1\n\"\"\") == \"40\"\n\nassert solution(\n\"\"\"\n7\n1 2 3 4 5 6 7\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n8\n1 2 3 4 5 6 7 8\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n3') == '1'\nassert solution('3\\n4') == '1'\nassert solution('4\\n5') == '1'\nassert solution('5\\n6') == '1'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4 9 7 5') == '5'\nassert solution('1 2 3 4 5') == '1'\nassert solution('2 2 2 2 2') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4 9 7 5') == 5\n\"\"\""
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''4\n4 4 9 7 5''') == '5'\nassert solution('''8\n1 2 1 1 1 1 1 1''') == '10'\nassert solution('''16\n
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''6\n6 6 6 6 6''') == '1'\nassert solution('''2\n4 4''') == '0'\nassert solution('''6\n1 2 3 4 5 6''') == '0'\nassert solution('''5\n6 6 6 6 6''') == '0'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2, 5) == 10\nassert solution(3, 7) == -1\nassert solution(1, 1) == 1\nassert solution(1, 3) == 3\nassert solution(20, 19) == 19 * 19\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 4') == '-1'\nassert solution('2 5') == '10'\nassert solution('1 10') == '10'\nassert solution('3 10') == '30'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == 10\nassert solution(\"3 4\") == -1\nassert solution(\"1 9\") == -1\nassert solution(\"-1 2\") == -1\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 1') == '1'\nassert solution('0 1') == '-1'\nassert solution('0 9') == '-1'\nassert solution('2 9') == '10'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"1 3\") == \"6\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"1 9\") == \"10\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 1') == '1'\nassert solution('2 2') == '4'\nassert solution('1 5') == '-1'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 10\nassert solution('2 5') == 10\nassert solution('2 1') == -1\nassert solution('2 3') == 6\nassert solution('1 3') == -1\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == '10'\nassert solution('0 0') == '-1'\nassert solution('2 3') == '4'\nassert solution('4 5') == '2'\nassert solution('10 11') == '1'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '10'\n'''"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 7\") == \"-1\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"6 4\") == \"-1\"\nassert solution(\"10 30\") == \"300\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 5\n10 12 1 2 14'''\n) == '5'\n\nassert solution(\n'''6 4\n1 2 3 4 5 6 7'''\n) == '10'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '5'\nassert solution('2 1') == '0'\nassert solution('2 1') == '0'\nassert solution('3 6') == '4'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 10') == '5'\nassert solution('5 5') == '1'\nassert solution('10 5') == '4'\nassert solution('5 10') == '4'\nassert solution('10 5') == '9'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\n\n'''\n\n'''"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\n'''\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''3 6\n1 2 3 4 5 6\n7 8 9 10 11 12''') == '6'\nassert solution('''4 5\n1 2 3 4 5 6\n7 8 9 10 11 12''') == '7'\nassert solution('''5 5\n1 2 3 4 5 6\n7 8 9 10 11 12''') == '7'\nassert solution('''5 5\n1 2 3 4 5 6\n2 3 4 5 6 7''') == '1'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\n'''\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('3 4\\n1 2 3 4') == '2'\nassert solution('3 4\\n1 2 3 4') == '2'\nassert solution('5 7\\n4 0 2 1 4 1 7') == '2'\nassert solution('10 10\\n5 1 2 3 4 5 6 7 8 9 10') == '10'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('2 5\\n10 11 1 2 14') == '5'\nassert solution('2 5\\n10 11 1 3 14') == '5'\nassert solution('2 5\\n10 11 1 4 14') == '4'\nassert solution('2 5\\n10 11 1 5 14') == '3'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"\nassert solution(\"3 6 1\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"1\\n00100\\n11110\\n11010\\n10101\\n10110\\n10111\\n\"\nassert solution(\"5 6 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"1\\n101001\\n\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\"\"\"\n) == \"\"\"\n2\n1110\n1011\n\"\"\"\nassert solution(\n\"\"\"\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\"\"\"\n) == \"\"\"\n1\n101001\n110110\n\"\"\""
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('4 6 3') == '1'\nassert solution('5 6 2') == '2'\nassert solution('5 7 2') == '1'\nassert solution('5 7 2') == '1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('2 4 3') == '1110'\nassert solution('2 6 3') == '1011'\nassert solution('4 6 3') == '101001'\nassert solution('5 6 2') == '1110001'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"1\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '2\\n1110\\n1011'\nassert solution('2 2\\n2 3\\n1 4\\n4 3\\n') == '1\\n1011'\nassert solution('1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2\\n111100\\n110110'\nassert solution('4 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '1\\n101001\\n110110'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n') == '2\\n111100\\n110110'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 4 3\n1 2\n2 3\n1 4\n4 3''') == '2\\n1110\\n1011\\n'\nassert solution(\n'''4 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5''') == '1\\n101001\\n110110\\n'\nassert solution(\n'''7 4 4\n1 2\n2 3\n1 4\n4 5\n4 6\n1 7\n1 5\n1 3\n2 7\n2 6\n1 4\n4 5\n2 3\n2 5\n2 6\n3 4\n3 6\n3 7\n4 5\n5 6\n4 7\n4 6\n3 5\n6 4\n1 7\n5 6\n1 2\n1 3\n2 4\n2 5\n1 6\n6 4\n6 7\n3 4\n3 5\n3 7\n5 4\n5 6\n5 7\n4 6\n4 7\n5 6\n1 4\n4 3\n3 4\n6 4\n1 4\n6 7\n5 4\n5 6\n3 4\n6 4\n5 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 6\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3 4\n4 7\n1 3\n1 4\n3 4\n1 4\n2 4\n3"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\\n2\") == \"NO\"\nassert solution(\"1\\n1\\n2\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n\n'''\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"2 1 1 2 5\") == \"YES\"\nassert solution(\"2 1 1 2 5\\n3 3 3\") == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"input_01.txt\") == \"NO\"\nassert solution(\"input_02.txt\") == \"NO\"\nassert solution(\"input_03.txt\") == \"NO\"\nassert solution(\"input_04.txt\") == \"YES\"\nassert solution(\"input_05.txt\") == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n') == 'NO'\nassert solution('1\\n2\\n') == 'YES'\nassert solution('2\\n1 2\\n') == 'NO'\nassert solution('2\\n1 2 3\\n') == 'YES'\nassert solution('1\\n1\\n') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n''') == 'YES'\n\nassert solution('''\n2\n10 10\n''') == 'YES'\n\nassert solution('''\n3\n1 2 3\n''') == 'NO'\n\nassert solution('''\n2\n10 10\n''') == 'NO'"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'YES'\nassert solution('2\\n10 10\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'\nassert solution('1\\n10\\n') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4 5 6') == 'NO'\nassert solution('1 2 3 4 5 6 7') == 'NO'\nassert solution('2 3 4 5') == 'NO'\nassert solution('4 5 6 7') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 3\\n') == 'YES'\nassert solution('2\\n1 2\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'NO'\nassert solution('5\\n1 2 3 4 5\\n') == 'YES'\nassert solution('7\\n1 2 2 3 4 5 6 7\\n') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'NO'\nassert solution('1') == 'NO'\nassert solution('1\\n1') == 'NO'\nassert solution('2\\n1 2 1') == 'YES'\nassert solution('2\\n1 2 3') == 'YES'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == '9'\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\\n\") == '4999999999996'\nassert solution(\"100000000000 3\\n-2 0 -1 1\\n\") == '-1'\nassert solution(\"100000000000 6\\n-100 -200 -300 125 77 -4\\n\") == '9'\nassert solution(\"100 10\\n0 0\\n\") == '10'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''10 3\n-3 -6 2 4''') == '-1'\nassert solution('''10 3\n-3 -6 -2 4''') == '3'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''3 0 0 0 0''') == '1'\nassert solution('''4 0 0 0 0''') == '2'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4999999999996'\n'''"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''10 3\n1 2 3''') == '1'\nassert solution('''10 3\n-2 -4 1''') == '1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1000 6\n-100 -200 -300 125 77 -4''') == '9'\n\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\n\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\\n\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"-1\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"-1\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"-1\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"AAABAAA\") == \"AAA\"\nassert solution(\"ABCBCAB\") == \"AB\"\nassert solution(\"ABABCABA\") == \"AB\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"ZZ\") == \"ZZ\"\nassert solution(\"\") == \"\"\nassert solution(\"ABA\") == \"AB\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\n\n\n\n\"\"\""
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('BBAABBBA') == 'BB'\nassert solution('BAABABAA') == 'B'\nassert solution('BABABA') == 'BA'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''ABACABA''') == 'AB'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''AAABAA''') == 'AA'\nassert solution('''AAABAA''') == 'AA'\nassert solution('''BBAABB''') == 'BB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('AAAZZZ') == 'AZ'\nassert solution('BBAABBBA') == 'BB'\nassert solution('AAAZZZ') == 'AZ'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"AAAZAA\") == \"AA\"\nassert solution(\"ZZZZZ\") == \"ZZ\"\nassert solution(\"ABCABC\") == \"AB\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('AAZZZZZ') == 'AA'\nassert solution('AAZZZZZ') == 'AA'\nassert solution('AAZZZZZ') == 'AA'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"ABACABA\"\"\"\n) == 'AB'\nassert solution(\n    \"\"\"ZZZAA\"\"\"\n) == 'ZZ'\nassert solution(\n    \"\"\"BBAABBBA\"\"\"\n) == 'BB'\n\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == '7'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"where\") == \"here\"\nassert solution(\"a\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"yes\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('test') == '2'\nassert solution('codeforces') == '9'\nassert solution('test') == '7'\nassert solution('b') == '1'\nassert solution('ab') == '1'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('west') == 'west'\nassert solution('codeforces') == 'codeforces'\nassert solution('b') == 'b'\nassert solution('yes') == 'yes'\nassert solution('est') == 'est'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"codeforces\") == \"es\"\nassert solution(\"west\") == \"we\"\nassert solution(\"b\") == \"\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('test') == 2\nassert solution('west') == 2\nassert solution('codeforces') == 9\nassert solution('test') == 2\nassert solution('yes') == 7\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('codeforces') == 'es'\nassert solution('test') == 'no'\nassert solution('b') == 'a'\nassert solution('ab') == 'a'\n\"\"\""
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('east') == 'east'\nassert solution('west') == 'west'\nassert solution('codeforces') == 'es'\nassert solution('b') == 'b'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''3 3\n1 7 11\n''') == '2'\nassert solution(\n    '''3 3\n1 2 3\n''') == '1'\nassert solution(\n    '''2 3\n1 2\n''') == '1'\nassert solution(\n    '''10 2\n1 2 3 4 5 6 7 8 9 10\n''') == '3'\nassert solution(\n    '''10 2\n1 2 3 4 5 6 7 8 9 10\n''') == '3'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3 3\n1 7 11\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n9 10\n2 8 9 7 6 5 4 3 1 10\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n3 4\n1 7 11\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n4 1\n1 7 11\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n5 4\n1 7 11\n\"\"\"\n) == \"1\""
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 3\n1 7 11'''\n    ) == '2'\nassert solution(\n'''3 3\n1 7 11'''\n    ) == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"2 2\") == \"\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 7 11\") == \"2\"\nassert solution(\"2 3\\n1 7 11\\n1 4\") == \"2\"\nassert solution(\"2 3\\n1 7 11\\n1 4\\n2 4\") == \"2\"\nassert solution(\"2 3\\n1 7 11\\n1 4\\n2 4\\n3 4\") == \"2\"\nassert solution(\"2 3\\n1 7 11\\n1 4\\n2 4\\n3 4\\n5 4\") == \"2\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''akasaka''') == 'Yes'\nassert solution('''zaszasa''') == 'No'\nassert solution('''asdasdasdasd''') == 'No'\nassert solution('''asdasd''') == 'No'\nassert solution('''akasasa''') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abcdef') == 'No'\nassert solution('a') == 'Yes'\nassert solution('abac') == 'Yes'\nassert solution('ab') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('asakas') == 'No'\nassert solution('kasakas') == 'Yes'\nassert solution('kasakasas') == 'Yes'\nassert solution('akasakas') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'Yes'\nassert solution('aba') == 'No'\nassert solution('abaab') == 'Yes'\nassert solution('abbba') == 'No'\nassert solution('ababab') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abba\") == \"Yes\"\nassert solution(\"aba\") == \"No\"\nassert solution(\"aaaaa\") == \"No\"\nassert solution(\"cccccc\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('pppppp') == 'No'\nassert solution('pppp') == 'Yes'\nassert solution('pppp') == 'Yes'\nassert solution('ppp') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"makadakasaka\") == \"No\"\nassert solution(\"makadakasaka\") == \"Yes\"\nassert solution(\"makadakas\") == \"No\"\nassert solution(\"akas\") == \"No\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('zorzorzor') == 'Yes'\nassert solution('ekak') == 'No'\nassert solution('aabbba') == 'Yes'\nassert solution('y') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('dkkdlad') == 'Yes'\nassert solution('ad') == 'No'\nassert solution('aa') == 'No'\nassert solution('aba') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('a') is None\nassert solution('aba') == 'Yes'\nassert solution('abb') == 'No'\nassert solution('aab') == 'Yes'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''198 1.10''') == '217'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"0.1 0.1\") == \"0\"\nassert solution(\"1.1 0.1\") == \"1\"\nassert solution(\"1 0.1\") == \"1\"\nassert solution(\"2 0.1\") == \"2\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('0 0') == '0'\nassert solution('0 0.1') == '0'\nassert solution('-2 0.1') == '-2'\nassert solution('10 0.1') == '10'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"9 1\") == \"9\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('1.1 2') == '3'\nassert solution('1.01 2') == '3'\nassert solution('1.99 1') == '4'\nassert solution('9.9 9') == '10'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"10 11\") == \"101\"\nassert solution(\"100 0\") == \"0\"\nassert solution(\"100 1\") == \"1\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 0.8') == '0'\nassert solution('1 0.9') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1.2') == '1'\nassert solution('1 1.3') == '2'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0\") == \"0\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1.1\") == \"0\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('198 1.10') == '217'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\n\nassert solution('''\n4\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '0'\n\nassert solution('''\n10000\n1000000\n''') == '1'\n\nassert solution('''\n5\n7\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '999999999'\n\nassert solution('''\n10\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '381621773'\n'''\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\"\"\""
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(''.join(map(str, range(1, 1000)))) == '999999999'\nassert solution(''.join(map(str, range(1, 101)))) == '381621773'\nassert solution(''.join(map(str, range(1, 10)))) == '3'\nassert solution(''.join(map(str, range(1, 11)))) == '0'\nassert solution(''.join(map(str, range(1, 21)))) == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abc') == 'abc'\nassert solution('ab') == 'ab'\nassert solution('aab') == 'aab'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\"\"\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n1') == 3\nassert solution('7\\n5') == 0\nassert solution('7\\n2') == 0\nassert solution('7\\n2') == 0\nassert solution('7\\n1') == 3\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == 3\nassert solution('10') == 0\nassert solution('1') == 1\nassert solution('2000000000') == 9999999999\nassert solution('763243547') == 381621773\n\nprint('All set! Click \"Check\" to earn sweet rewards!')\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n4 2\n5 1\n6 1\n7 1\n8 1''') == '1'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n4 2\n5 1\n6 1\n7 1\n8 1\n''') == '1'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n4 2\n5 1\n6 1\n7 1\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n''') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9 9 1') == '3'\nassert solution('5 4 5') == '1'\n\"\"\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''7 3 1\n1 2\n2 3\n3 4\n4 1\n5 6\n6 1\n1 8\n9 8\n7 1''') == '1'\nassert solution('''8 7 1\n1 2\n2 3\n3 4\n4 1\n5 6\n6 1\n1 8\n9 8\n7 1''') == '0'\nassert solution('''2 10 4\n3 1\n1 2\n2 4\n2 3\n1 5\n1 6\n1 3\n5 1\n5 7\n7 1\n7 2\n1 4\n3 2\n1 6\n4 5\n4 6\n6 5\n6 7\n6 1\n1 5\n5 4\n4 3\n3 6\n4 2\n2 1\n2 5\n3 4\n1 3\n4 1\n5 2\n6 3\n5 1\n3 2\n2 6\n4 1\n1 6\n3 5\n6 4\n1 3\n4 5\n5 1\n6 4\n6 3\n6 2\n3 2\n6 1\n2 1\n6 5\n2 4\n6 2\n2 3\n5 2\n5 4\n5 3\n5 1\n5 6\n5 4\n4 2\n4 3\n3 2\n1 2\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n5 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4 3\n3 1\n1 5\n1 4\n4 2\n4"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\n\nassert solution(\n'''\n6 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n\nassert solution(\n'''\n9 7 1\n1 2\n2 3\n3 4\n4 1\n''') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 1\\n\\n') == '3'\nassert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\\n') == '3'\n\n\n\n'''\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 7 1\") == \"1\"\nassert solution(\"4 7 2\") == \"0\"\nassert solution(\"7 4 2\") == \"1\"\nassert solution(\"7 4 1\") == \"0\"\nassert solution(\"6 7 1\") == \"1\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 1 3') == '2'\nassert solution('5 4 5') == '1'\nassert solution('3 2 1') == '0'\n\"\"\""
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"2 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9 9 1''') == '3'\nassert solution('''5 4 5''') == '1'\nassert solution('''5 4 2''') == '1'\nassert solution('''5 4 3''') == '1'\nassert solution('''5 4 4''') == '0'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('1 2 2 3 4 5') == '5'\nassert solution('1 1 1 4 4 4') == '5'\nassert solution('1 2 1 2 3 4 5') == '5'\nassert solution('1 1 1 4 4 4') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n3 2 4 1\\n') == '4'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5'\n\"\"\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\nassert solution('''1\n1''') == '1'\nassert solution('''4\n1 1 1 4 4 4''') == '5'\nassert solution('''8\n1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '2'\nassert solution('4\\n4') == '3'\nassert solution('4\\n1') == '3'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '4'\nassert solution('2\\n1 2') == '2'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('150000\\n
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\"\n\"\"\"\n\nn = int(input())\na = [int(x) for x in input().split()]\n\nresult = 0\n\nfor x in a:\n    if x > result:\n        result = x\n\nprint(result)\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3 2 4 1\n''') == '4'\n\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'\nassert solution('''\n3\n1 3 5\n''') == '4'\nassert solution('''\n4\n1 3 2 4\n''') == '5'\nassert solution('''\n5\n1 3 2 4 5\n''') == '6'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n - Standard Test\n\"\"\"\n\nfrom unittest import TestCase\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 2\") == \"000002000001\"\nassert solution(\"1 1\") == \"000001000001\"\nassert solution(\"1 1 2 3 4 5 6 7 8 9\") == \"00000001000001\"\nassert solution(\"1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"00000000000100\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001'\n'''\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 3\n1 32\n2 63\n1 12''') == \"000001000002\\n000002000001\\n000001000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\nassert solution(\"1 2\") == \"000001000002\"\nassert solution(\"1 2\") == \"000001000002\"\nassert solution(\"1 2\") == \"000001000002\"\n\n\"\"\""
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"0001\"\nassert solution(\"2 2\\n1 1\") == \"0101\"\nassert solution(\"2 2\\n1 3\\n2 1\") == \"01010\"\nassert solution(\"2 2\\n1 5\\n2 1\") == \"010101\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12''') == '000001000002\\n000002000001\\n000001000001'\n'''\n\nN, M = map(int, stdin.split())\n\nP, Y = [], []\nfor _ in range(M):\n    p, y = stdin.split()\n    P.append(int(p))\n    Y.append(int(y))\n\nP.sort()\nY.sort()\n\nD = {k: v for k, v in zip(P, Y)}"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '000001000001'\nassert solution('1\\n2') == '000002000001'\nassert solution('1\\n2\\n2\\n3') == '000001000002'\nassert solution('1\\n1\\n1\\n1') == '000001000001'\nassert solution('2\\n2\\n2\\n2') == '000002000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\""
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('4\\n2 10 8 40\\n2 10 8 40\\n2 10 8 40\\n2 10 8 40') == '2'\nassert solution('2\\n1 1') == '1'\nassert solution('10\\n
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n') == '3'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '5'\nassert solution('5\\n') == '8'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 8 40') == 2\nassert solution('2 10 8 40') == 2\nassert solution('2 10 8 40') == 2\nassert solution('2 10 8 40') == 2\nassert solution('2 10 8 40') == 2\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"2 10 8 40\") == \"2\"\nassert solution(\"2 10 8 40\") == \"2\"\nassert solution(\"2 10 8 40\") == \"2\"\nassert solution(\"2 10 8 40\") == \"2\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 10 8 40') == '2'\nassert solution('2\\n1 10 8 40\\n2 7 4 5') == '2'\nassert solution('2\\n1 10 8 40\\n2 7 4 5\\n3 3 2 1') == '1'\nassert solution('2\\n1 10 8 40\\n2 7 4 5\\n3 3 2 1\\n4 5 6 7') == '2'\nassert solution('2\\n1 10 8 40\\n2 7 4 5\\n3 3 2 1\\n4 5 6 7\\n5 8 9 10 11') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"4\\n2 10 8 30\") == \"1\"\nassert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"4\\n2 10 8 30\") == \"1\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('5\\n1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 10 8 40') == '2'\nassert solution('2 10 8 40\\n1 1 1 1') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1\\n1 1 1') == '0'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''?(_-_/___*__):-___>__.''') == '0010'\nassert solution('''?(__-_+_/_____):-__>__,_____<__.''') == 'false'\nassert solution('''?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.''') == '0250341'\nprint('All set! Click \"Check\" to earn cool rewards!')\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('?(____*_):-____>__,_____<__. ') == '0250341'\nassert solution('?(____________/_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. ') == '0101'\nassert solution('?(____/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. ') == 'false'\nassert solution('?(____/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. ') == 'false'\nassert solution('?(____/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. ') == 'false'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == stdout\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('?(__-_+_/_____):-__>__,_____<__') == \"0250341\"\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == \"0101\"\nassert solution('?(__+___+__-___):-___>__.') == \"false\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('?(__-_+_/_____):-__>__,_____<__.') == '0101'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\nassert solution('?(___________+________*__________-_________*__________/__________):________-___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\n\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1\\n3\\n2\\n2\\n0') == '3'\nassert solution('3\\n4\\n2\\n1\\n3\\n3\\n1\\n0') == '5'\nassert solution('4\\n3\\n1\\n3\\n3\\n3\\n3\\n2\\n3\\n3\\n1\\n3\\n2\\n1\\n2\\n0') == '5'\n\n\n\"\"\""
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == '4'\nassert solution('2 4 3\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '8'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '1'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '4'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 3\nassert solution('0 0 0') == 1\nassert solution('1 1 2') == 0\nassert solution('3 3 2') == 3\nassert solution('3 4 2') == 5\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n3\\n2\\n0') == '3'\nassert solution('3\\n4\\n1000000000000000000\\n1\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == input()\n\n\"\"\""
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"z\") == \"z\"\nassert solution(\"codeforces\") == \"secrofedoc\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\n\n\n\n'''"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"z\"\n\"\"\"\n\nn = int(input())\nt = input()"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"thisisexampletwo\") == \"thisisexampletwo\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\nassert solution(\"rocesfedoc\") == \"orcesfedoc\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\nassert solution('z') == 'z'\n\n\n'''\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('codeforces') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n\n\"\"\""
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''rocesfedoc\n''') == 'codeforces'\nassert solution('''plmaetwoxesisiht\n''') == 'thisisexampletwo'\nassert solution('''z\n''') == 'z'\n'''\n'''\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"873\"\n\n\"\"\"\n\na,b = map(int,input().split())\nprint(a+b)"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '3'\nassert solution('3 5') == '8'\nassert solution('0 3') == '3'\nassert solution('0 0') == '0'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('5 0') == 5\nassert solution('3 3') == 6\nassert solution('1 4') == 5\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"10 0\") == \"10\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"10 2\") == \"12\"\nassert solution(\"3 8\") == \"11\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10') == 11\nassert solution('4 10') == 14\nassert solution('6 10') == 16\nassert solution('0 1') == 1\nassert solution('1 3') == 4\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 11') == 13\nassert solution('1 9') == 10\nassert solution('7 6') == 19\nassert solution('3 1') == 4\nassert solution('9 8') == 26\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('2+3-7') == '++++++++++[<]>-]<'\nassert solution('9-7+7') == '++++++++++[<]>-]<'\nassert solution('2+3-7+7') == '++++++++++[<]>-]<'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2+3') == '++>\\n+++>\\n<[<+>-]<\\n+++++++++++++++++++++++++++++++++++++++++++++++'\nassert solution('9-7') == '+++++++++>\\n+++++++>\\n<[<->-]<\\n+++++++++++++++++++++++++++++++++++++++++++++++'\nassert solution('15-2') == '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'\nassert solution('-2-2') == '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'\nassert solution('-2-1') == '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Simple addition\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Simple subtraction\"\nassert solution(\"2+3+5\") == \"+++>\", \"Addition with double addition\"\nassert solution(\"2+3-5\") == \">+>\", \"Subtraction with double addition\"\nassert solution(\"2++3\") == \">+>\", \"Double addition\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"+>++>-<[<+>-]<\"\nassert solution(\"9-7\") == \"++++++++++>+[<->-]<\"\nassert solution(\"5-6-7\") == \"+[->[-]<+[-]>-]<\"\nassert solution(\"7/3/5\") == \"+[->[-]<+[-]>-]<\"\nassert solution(\"7//3//5\") == \"+[->[-]<+[-]>-]<\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nsys.path.append(\"../../DataStructures/\")\nfrom test_utils import Test\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n\n\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\", \"You are missing an operator\"\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++>\", \"2+3\"\nassert solution(\"9-7\") == \"++++++++++>\", \"9-7\"\nassert solution(\"6-2+8\") == \"+++++++>\", \"6-2+8\"\nassert solution(\"5+8-7\") == \"+++++++++>\", \"5+8-7\"\nassert solution(\"3-7+2+3\") == \"+++++++++>\", \"3-7+2+3\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nTest your solution with the following stdin and stdout:\n\nTest 1\n\n1\n3\n20\n38\n56\n\n\"\"\""
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == '1\\n2\\n5\\n2\\n0'\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000''') == '8\\n2\\n4\\n1'\nassert solution('''3\n1\n10\n123456789\n12345678900\n1000000000000000000''') == '6\\n8\\n6\n'''\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"2345\"\nassert solution(\"2\\n3\\n4\\n5\") == \"345\"\nassert solution(\"3\\n4\\n5\\n6\") == \"456\"\nassert solution(\"4\\n5\\n6\\n7\") == \"4567\"\nassert solution(\"5\\n6\\n7\\n8\") == \"568\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_) == output_\n\"\"\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('9') == '1'\nassert solution('98') == '8'\nassert solution('999999') == '9'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1\n2\n3\n4\n5\n''') == '''\n1\n2\n3\n4\n5\n'''\n\nassert solution(\n'''\n2\n1\n2\n3\n4\n5\n''') == '''\n2\n1\n2\n3\n4\n5\n'''\n\nassert solution(\n'''\n1\n2\n3\n4\n5\n''') == '''\n1\n2\n3\n4\n5\n'''\n\nassert solution(\n'''\n1\n2\n3\n4\n5\n''') == '''\n1\n2\n3\n4\n5\n'''\n\nassert solution(\n'''\n1\n2\n3\n4\n5\n''') == '''\n1\n2\n3\n4\n5\n'''"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"2\\n1\\n3\\n4\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '12345'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '987654321'\nassert solution('123456789') == '987654321'\nassert solution('112123123412345$\\dots$') == '112123123412345123456712345678912345678912345678912345678910'\nassert solution('112123123412345123456712345678912345678912345678912345678910') == '112123123412345123456712345678912345678912345678912345678910'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('11') == ''\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '2'\nassert solution('''7''') == '5'\nassert solution('''575''') == '4'\nassert solution('''555''') == '0'\nassert solution('''1000000''') == '7'\n'''\nimport sys"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"575\") == \"4\"\n\"\"\""
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13') == '7'\nassert solution('14') == '7'\nassert solution('15') == '7'\nassert solution('16') == '7'\nassert solution('17') == '7'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('575') == '4'\nassert solution('73') == '1'\nassert solution('973') == '2'\nassert solution('12') == '3'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"575\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"100\") == \"0\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"4\"\n\"\"\""
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('123') == '1'\nassert solution('0') == '0'\nassert solution('5') == '0'\nassert solution('567') == '1'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('575') == '4'\n\"\"\"\n\"\"\"\nNotes:\n- For a Shichi-Go-San number to exist, it must:\n  - Be an integer\n  - Have at least one 7, at most one 5 and at most one 3\n- It must have at least one 7, at most one 5 and at most one 3\n- It must have at least one 7, at most one 5 and at most one 3\n- It must have at least one 7, at most one 5 and at most one 3\n- It must have at least one 7, at most one 5 and at most one 3\n\"\"\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0001\") == \"0\"\nassert solution(\"0010\") == \"1\"\nassert solution(\"0000\") == \"2\"\nassert solution(\"1111\") == \"4\"\nassert solution(\"0110\") == \"3\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('000') == '1'\nassert solution('1101') == '2'\nassert solution('010110') == '2'\nassert solution('001011') == '3'\nassert solution('110110') == '4'\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"111\") == 2\nassert solution(\"1111\") == 2\nassert solution(\"000000\") == 2\nassert solution(\"11111\") == 2\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('000') == '1'\nassert solution('010') == '3'\nassert solution('11') == '0'\nassert solution('001') == '0'\nassert solution('111') == '1'\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"111\") == 0\nassert solution(\"101\") == 1\nassert solution(\"001\") == 2\nassert solution(\"010\") == 2\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"01010\") == 3\nassert solution(\"10100\") == 0\nassert solution(\"01010\") == 1\nassert solution(\"00100\") == 1\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 1\n\n\"\"\"\n\n\"\"\"\nAC\n\nThe function S should be an iterable, i.e. a list or a tuple.\n\n\"\"\""
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"010\") == 1\nassert solution(\"111\") == 0\nassert solution(\"0111\") == 1\nassert solution(\"0110\") == 1\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('00') == '0'\nassert solution('11111') == '0'\nassert solution('00000') == '1'\nassert solution('01111') == '0'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 7 9 10') == 'DENIED'\nassert solution('6 7 9') == 'APPROVED'\nassert solution('6 7') == 'DENIED'\nassert solution('6') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n6 7 9 10 31\n''') == 'APPROVED'\nassert solution('''5\n7 9 11 15\n''') == 'DENIED'\nassert solution('''7\n6 7 9 10 31\n''') == 'DENIED'\nassert solution('''7\n8 9 11 15\n''') == 'APPROVED'\nassert solution('''10\n7 8 9 10 11 12 13 14 15\n''') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\n'''"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\n'''\n\nimport sys\n\nN = int(sys.stdin.readline())\nA = map(int, sys.stdin.readline().split())"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"6 7 9 10 30\") == \"DENIED\"\nassert solution(\"6 7 9 10 32\") == \"DENIED\"\nassert solution(\"6 7 9 10 33\") == \"APPROVED\"\nassert solution(\"6 7 9 10 34\") == \"APPROVED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''3\n1 1 1 1''') == 'APPROVED'\nassert solution('''6\n1 2 4 9 16 32''') == 'DENIED'\nassert solution('''4\n1 1 2 1''') == 'DENIED'\nassert solution('''2\n1 1''') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'DENIED'\nassert solution('5') == 'DENIED'\nassert solution('6 7 9 10 31') == 'APPROVED'\nassert solution('6 7 9 10 30') == 'DENIED'\nassert solution('6 7 9 10 9') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1') == 'DENIED'\nassert solution('5\\n1 3 5 7 9') == 'APPROVED'\nprint('Tests passed')\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n6 7 9 10 31''') == 'DENIED'\nassert solution('''1\n3 4 5 6 7 8 9''') == 'DENIED'\nassert solution('''1\n2 3 4 5 6 7''') == 'DENIED'\nassert solution('''1\n2 3 4 5 6 7 8''') == 'DENIED'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RURDLDRLDRUDDLLUURRRRRRUULDRL') == 'Yes'\nassert solution('RURDRUDDUUUUUUUUUUUUUUUUUUUURDDLRRR') == 'No'\nassert solution('RUUUDDDLLDDUDRRURDDRUDUULLDDLLRRRRRRRRRR') == 'No'\nassert solution('RURDRUDUURUDUDULURURURRUDUUDLLDRRLRRRR') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDR') == 'No'\nassert solution('RDU') == 'No'\nassert solution('RUD') == 'No'\nassert solution('RDRUDRUDD') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == 'Yes'\nassert solution(\"RDRRUUDR\") == 'No'\nassert solution(\"RDRRUDLDR\") == 'Yes'\nassert solution(\"RDRRUDUDUDUUUDLR\") == 'Yes'\nassert solution(\"RDRRUDUDRUDUDLR\") == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RU') == 'No'\nassert solution('R') == 'No'\nassert solution('D') == 'No'\nassert solution('L') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'Yes'\nassert solution('DDRUD') == 'Yes'\nassert solution('LLDDRDRUDDDRDDRRUDL') == 'Yes'\nassert solution('DDDRRUDUDRDDRUD') == 'No'\nassert solution('RRUDDDUDUDDURDDLRRDDDDDUDUDLRR') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDR') == 'No'\nassert solution('DDR') == 'Yes'\nassert solution('D') == 'No'\nassert solution('DUDUDUDRD') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(Takahashi_will_do_a_tap_dance.txt) == 'Yes'\nprint(solution(input()))\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LDRRUULDLLUDRUDLULUDDRRDRUDUD') == 'No'\nassert solution('RULDRULRUUDLRLR') == 'Yes'\nassert solution('LDRDRDRUDRULDRUDDUDRRDLUDDLLL') == 'No'\nassert solution('RDRUUUUUUUDRDL') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'Yes'\nassert solution('L') == 'Yes'\nassert solution('LL') == 'Yes'\nassert solution('RDD') == 'Yes'\nassert solution('DRUD') == 'Yes'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n3\n2\n4\n3\n5\n\"\"\") == \"7\"\nassert solution(\n\"\"\"\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"17\"\nassert solution(\n\"\"\"\n10\n3\n1\n5\n4\n2\n6\n3\n7\n9\n10\n\"\"\") == \"15\"\nassert solution(\n\"\"\"\n10\n6\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"14\"\nassert solution(\n\"\"\"\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"13\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"4\\n\"\n    \"3\\n\"\n    \"5\\n\") == \"7\"\n\nassert solution(\n    \"3\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"2\\n\") == \"4\"\n\nassert solution(\n    \"2\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"2\\n\") == \"2\"\n\nassert solution(\n    \"5\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"4\\n\"\n    \"3\\n\"\n    \"5\\n\") == \"7\"\n\nassert solution(\n    \"5\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"4\\n\"\n    \"3\\n\"\n    \"5\\n\") == \"7\""
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n2\\n4') == 7\n\"\"\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n2\\n4\\n3\\n5\\n') == 7\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == 7\nassert solution('5\\n2\\n3\\n4\\n5\\n') == 7\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == 7\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == 7\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3\n2\n4\n3\n5\n''') == \"7\"\nassert solution('''\n4\n2\n1\n2\n2\n3\n''') == \"3\"\nassert solution('''\n4\n3\n3\n3\n3\n3\n''') == \"3\"\nassert solution('''\n5\n3\n3\n4\n4\n5\n''') == \"7\"\nassert solution('''\n5\n3\n3\n3\n3\n4\n''') == \"3\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2\\n4\\n3\") == \"7\"\nassert solution(\"4\\n3\\n2\\n1\") == \"6\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"0\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"0\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n1\\n2\\n3\\n4\\n5\\n6\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"4\\n3\\n2\\n1\\n2\\n3\") == \"5\"\nassert solution(\"2\\n1\\n2\\n3\\n4\") == \"2\"\nassert solution(\"0\\n1\\n2\\n3\\n4\\n5\") == \"7\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '5'\nassert solution('1000\\n1000\\n1000\\n1000\\n1000\\n') == '1000'\nassert solution('2\\n3\\n2\\n3\\n2\\n') == '9'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '5'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\n\"\"\"\n\nN = int(input())\nA, B, C, D, E = map(int, input().split())\n\ntime = A * N\ntime += B * (N - 1)\ntime += C * (N - 2)\ntime += D * (N - 3)\ntime += E * (N - 4)\n\nprint(time)\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 2\nassert solution('0') == 0\nassert solution('9') == 9\nassert solution('111') == 0\nassert solution('1111') == 1\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2''') == '2'\n\nassert solution(\n'''10''') == '10'\n\nassert solution(\n'''10\n0''') == '10'\n\nassert solution(\n'''10\n9''') == '10'\n\nassert solution(\n'''10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0''') == '2'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '2'\n'''\nstdin: n\n'''\n\nassert solution('1') == '1'\n'''\nstdin: 1\n'''\n\nassert solution('10') == '1'\n'''\nstdin: 10\n'''\n\nassert solution('100') == '1'\n'''\nstdin: 100\n'''\n\nassert solution('1000') == '1'\n'''\nstdin: 1000\n'''"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"10\") == 6\nassert solution(\"100\") == 126\nassert solution(\"1000\") == 484288\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '6'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"12\") == \"2\"\nassert solution(\"8\") == \"0\"\nassert solution(\"9\") == \"0\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 2\nassert solution('3') == 2\nassert solution('4') == 4\nassert solution('5') == 4\nassert solution('6') == 6\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"1000\") == \"0\"\nassert solution(\"0\") == \"9\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(20) == 23\nassert solution('20') == 23\nassert solution('12') == 13\nassert solution('11') == 11\nassert solution('22') == 23\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20') == '23'\nassert solution('2') == '2'\nassert solution('34') == '3'\nassert solution('12') == '13'\nassert solution('2') == '3'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''20''') == ''\nassert solution('''2''') == ''\nassert solution('''3''') == ''\nassert solution('''4''') == ''\nassert solution('''5''') == ''\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20') == '23'\nassert solution('2') == '3'\nassert solution('5') == '7'\nassert solution('6') == '11'\nassert solution('3') == '5'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20') == 23\nprint(solution('20'))\n'''"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('5') == ''\nassert solution('5\\n') == ''\nassert solution('22\\n') == '23'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20') == '23'\nassert solution('20') == '23'\nassert solution('2') == '3'\nassert solution('5') == '7'\nassert solution('10') == '11'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == 3\nassert solution(\"2\") == 2\nassert solution(\"5\") == 5\nassert solution(\"6\") == 7\nassert solution(\"20\") == 23\n\n\"\"\""
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20') == '23'\nassert solution('20') == '23'\nassert solution('20') == '23'\nassert solution('20') == '23'\nassert solution('20') == '23'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1 3 2') == '1'\nassert solution('6\\n2 2 3 2 1 1') == '2'\nassert solution('5\\n1 1 2 2 3') == '1'\nassert solution('4\\n1 2 3 4') == '1'\nassert solution('9\\n9 9 9 9 9 9 9') == '0'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n3 1 3 2''') == \"1\"\nassert solution('''6\n11 14 22 21 14 22''') == \"3\"\nassert solution('''8\n111 1111 1111 1111''') == \"4\"\nassert solution('''10\n11 111 111 111 1111''') == \"5\"\nassert solution('''16\n1212 1212 1212 1212''') == \"5\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 3 2') == 1\nassert solution('1\\n2') == 1\nassert solution('2\\n1') == 1\nassert solution('2\\n2') == 0\nassert solution('2\\n1 1') == 1\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 3 2') == '1'\nassert solution('2\\n1 2') == '0'\nassert solution('3\\n2 2 1') == '2'\nassert solution('2\\n1 1') == '0'\nassert solution('2\\n1 1 2') == '2'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''8\n2 1 2 3 3 3 4 4 5 5 6 6''') == '2'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '0'\nassert solution('''8\n2 1 2 3 3 3 4 4 5 5 6''') == '1'\nassert solution('''10\n3 3 3 4 4 4 4 4 4 4 4''') == '0'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('2\\n1 1') == '1'\nassert solution('3\\n1 1 1') == '2'\nassert solution('3\\n1 1 2') == '2'\nassert solution('6\\n1 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n\n---"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 100 90 80\n98\n40\n30\n21\n80\"\"\") == \"23\"\nassert solution(\"\"\"5 100 90 80\n40\n30\n21\n80\"\"\") == \"13\"\nassert solution(\"\"\"5 10 50 60\n10\n30\n50\n70\n40\n30\n30\n30\"\"\") == \"53\"\nassert solution(\"\"\"5 10 50 60\n10\n30\n50\n70\n40\n30\n30\n30\"\"\") == \"31\"\nassert solution(\"\"\"5 10 50 60\n10\n30\n50\n70\n40\n30\n30\n30\"\"\") == \"34\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 100 90 80\n98\n40\n30\n21\n80\n\"\"\".strip()) == \"23\"\nassert solution(\"\"\"\n5 10 9 8\n8\n7\n6\n5\n4\n3\n2\n1\n\"\"\".strip()) == \"26\"\nassert solution(\"\"\"\n7 10 9 8\n1\n2\n3\n4\n5\n6\n7\n\"\"\".strip()) == \"16\"\nassert solution(\"\"\"\n7 10 9 8\n8\n7\n6\n5\n4\n3\n2\n1\n\"\"\".strip()) == \"17\"\nassert solution(\"\"\"\n7 10 9 8\n9\n8\n7\n6\n5\n4\n3\n2\n1\n\"\"\".strip()) == \"21\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 8 3\\n7') == '3'\nassert solution('5 100 90 80') == '23'\nassert solution('8 4 3 2') == '9'\nassert solution('5 1 2 3 4 5 6 7 8 9') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '3'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9 4 2 3') == '1'\nassert solution('2 4 1 3') == '3'\nassert solution('10 1 1 2') == '6'\nassert solution('8 1 1 2') == '5'\nassert solution('10 1 1 2') == '7'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"3\\n3\\n2\") == \"3\"\nassert solution(\"4\\n2\\n1\\n3\") == \"1\"\nassert solution(\"5\\n1\\n2\\n2\\n1\") == \"3\"\nassert solution(\"5\\n1\\n2\\n2\\n1\\n2\") == \"2\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 10 10 3') == '24'\nassert solution('5 100 90 80') == '23'\nassert solution('3 2 10 3') == '7'\nassert solution('5 10 90 80') == '23'\nassert solution('1 3 5 7') == '9'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nfrom functools import lru_cache\n\n@lru_cache(None)\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'bca'\nassert solution('abcxyz') == 'cdezab'\nassert solution('XYZ') == 'YZab'\nassert solution('ABCXYZ') == 'BCZA'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZABC') == 'CDEZA'\nassert solution('XYZABC') == 'CDEZA'\nassert solution('ABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"AB\") == \"BC\"\nassert solution(\"\") == \"\"\nassert solution(\"AB\") == \"BA\"\nassert solution(\"A\") == \"B\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZABC') == 'DEZABC'\nassert solution('A') == 'B'\nassert solution('AA') == 'BB'\nassert solution('AAA') == 'BBB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCXYZ\", 5) == \"EFGHAB\"\nassert solution(\"ABCXYZ\", 2) == \"CDEZAB\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('a') == 'a'\nassert solution('AB') == 'BA'\nassert solution('ABC') == 'CBA'\nassert solution('ABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"BCCDEGHIJK\") == \"DEJHGIKNBC\"\nassert solution(\"ZYXWVUTSRQPONMLKJIHGFEDCBA\") == \"JIHGKDBCNAZWYVUTSRQPONML\"\nassert solution(\"AYR\") == \"YHR\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZABC') == 'CDEZAB'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'QRSTUVWXYZABCDEFGHIJKLMNOP'\nassert solution('zyxwvutsrqponmlkjihgfedcba') == 'abcdefghijklmnop'\nassert solution('zyxwvutsrqponmlkjihgfedcba0123456789') == '1abcdefghijklmnop'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZABC') == 'CDEZAB'\nassert solution('XYZABC') == 'CDEZAB'\nassert solution('XYZABC') == 'CDEZAB'"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nprint(solution('''8\n233574 375982 3444371 111732226 2278386 1347387 9999921'''))"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1'\nassert solution('3\\n') == '3 2 1'\nassert solution('3\\n5 2 3 2 4\\n') == '3 4 2'"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n2750131 199999\\n2750131 199999\") == \"199999\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2 '\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''2\n3 6''') == '6'\nassert solution('''1\n4''') == '4'\nassert solution('''1\n17''') == '17'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1''') == '1'\nassert solution('''2750131 199999''') == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3 5 2 3 2 4\") == \"3 4 2\"\nassert solution(\"3 5 2 3 2 4\") == \"3 4 2\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3 2 5'\nassert solution('2') == '2'\nassert solution('3 5 2 3 2 4') == '3 4 2'\nassert solution('1') == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 5 2 3 2 4\\n') == '3 4 2\\n'\nassert solution('1\\n2750131 199999\\n') == '199999\\n'\nassert solution('1\\n3 6\\n') == '6\\n'\nassert solution('1\\n4 3\\n') == '3\\n'\nassert solution('1\\n1 1\\n') == '1\\n'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n2 4 1 3\\n') == '11111'\nassert solution('2 1\\n7 1 2 1 3 5 4 6\\n') == '22111'\nassert solution('5 1\\n2 4 5 3 1\\n') == '1121122'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('8 1\\n7 2 1 3 5 4 6 7\\n') == '1211222'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n2 4 5 3 1') == '11211'\nassert solution('4 1\\n2 1 3 5 4') == '22112'\nassert solution('5 1\\n2 4 5 3 1') == '11111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('7 3\\n1 7 2 1 3 5 4 6') == '1111222'\n\n\n\"\"\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"1121122\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"11211222\"\n\n\n\n-----Best Practice-----\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '11111'\nassert solution(stdin) == '21112'\nassert solution(stdin) == '22111'\nassert solution(stdin) == '1121122'\n\n\n\"\"\""
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2 4 5 3 1') == '1121'\nassert solution('5 1\\n2 1 3 5 4') == '2211'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('7 3\\n4 1 2 6 3 5') == '21113'\nassert solution('4 1\\n1 2 1 3 4') == '22111'\n\n\n-----"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nassert solution('5 1') == '21112'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n2 4 5 3 1') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n2 4 5 3 1') == '1121122'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n2 4 5 3 1\\n7 6 1 3 5 4 6\\n2 4 5 3 1') == '11211222'\nassert solution('1 1\\n1 2 1 3 5 4 6\\n1 2 4 5 3 1') == '1111222'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 3\\n3 7') == '2'\nassert solution('3\\n1 2 3\\n3 1') == '2'\nassert solution('2\\n1 3\\n3 1') == '4'"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''8\n1 4 1 4 7 8 5 4 3''') == '3'\nassert solution('''4\n1 3 1 4''') == '1'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''7\n1 3 3 7''') == '4'\nassert solution('''10\n5 6 9 8 7 1 2 3 4''') == '8'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 2 3') == 2\nassert solution('100 1') == 2\nassert solution('100 100') == 0\nassert solution('1 3 3 7') == 4\nassert solution('10 100 10 10') == 4\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 2 3\\n') == '2'\nassert solution('2\\n1 2 1 2 3') == '2'\nassert solution('1 1\\n1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('4\\n1 3 3 7\\n') == '4'\nassert solution('1 3 3 7\\n') == '4'"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5\n1 2 1 2 3\n''') == '2'\n\nassert solution(\n'''\n2\n100 1\n''') == '2'\n\nassert solution(\n'''\n4\n1 3 3 7\n''') == '4'\n\nassert solution(\n'''\n6\n1 2 1 2 3 4\n''') == '4'\n\nassert solution(\n'''\n7\n1 2 1 2 3 4 5 6\n''') == '4'"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('5\\n1 2 1 2 3') == '1'\nassert solution('2\\n1') == '0'\nassert solution('5\\n1 2 1 2 3') == '2'\nassert solution('2\\n100 1') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 3 3 7\n''') == '2'\n\nassert solution('''\n2\n1 2\n''') == '2'\n\nassert solution('''\n4\n1 3 3 7\n''') == '4'\n\nassert solution('''\n6\n1 1 1 1 1 1\n''') == '1'\n\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '5'"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 1 2 3\n''') == '2'\n\nassert solution('''\n2\n100 1\n''') == '4'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n4 7 1 5 4 9') == '1'\nassert solution('1\\n16') == '1'\nassert solution('4\\n1 1 1 1023') == '0'\nassert solution('1\\n4 1 1 1023') == '1'\nassert solution('1\\n1 1 1 1023') == '2'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1023') == '0'\nassert solution('2\\n1\\n1\\n1023') == '1'\nassert solution('2\\n1\\n1\\n2') == '1'\nassert solution('1\\n16\\n1\\n1023') == '1'\nassert solution('1\\n4\\n1\\n1023') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n16\\n') == '0'\nassert solution('1\\n1\\n1\\n1023\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1 1 1023\\n') == '1'\nassert solution('5\\n1 2 3 4 5\\n') == '2'\nassert solution('1\\n16\\n') == '1'\nassert solution('4\\n1 1 1 1023\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n') == '2'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\nn = int(input())\na = list(map(int,input().split()))\n\na.sort()\n\nstart = 0\nwhile start < n and a[start]%2 == 0:\n    start += 1\n\ncnt = 0\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4') == 0\nassert solution('1\\n1') == 0\nassert solution('1\\n1\\n1\\n1') == 0\nassert solution('1\\n1\\n1\\n1\\n1') == 0\nassert solution('2\\n3') == 1\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('1\\n3') == '0'\nassert solution('1\\n4') == '0'\nassert solution('1\\n5') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6\n4 7 1 5 4 9\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n1\n16\n''') == '1'\nassert solution('''\n4\n1 1 1 1023\n''') == '0'\n\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '0'\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"0101\") == \"1\"\nassert solution(\"01011101\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"101010101\") == \"5\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('0011') == 4\nassert solution('11110') == 3\nassert solution('11111') == 1\nassert solution('11111') == 1\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('0011') == 4\nassert solution('00111') == 3\nassert solution('01111') == 3\nassert solution('01111') == 1\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0011\") == \"4\"\n\"\"\""
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0011') == '4'\nassert solution('0101') == '1'\nassert solution('1010') == '1'\nassert solution('1111') == '0'\nassert solution('000') == '0'\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"001111\") == \"1\"\nassert solution(\"10101\") == \"3\"\nassert solution(\"1010101101010111100010\") == \"1\"\nassert solution(\"100110110101101101111000000100000010\") == \"3\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('001') == 1\nassert solution('0') == 1\nassert solution('111') == 2\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('00110') == 0\nassert solution('0100') == 0\nassert solution('10001') == 0\nassert solution('0010001') == 0\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1011\") == \"2\"\nassert solution(\"0011101\") == \"1\"\nassert solution(\"10100101\") == \"3\"\nassert solution(\"11100000\") == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"011101\") == 1\nassert solution(\"01110110\") == 1\nassert solution(\"0111010110\") == 2\nassert solution(\"1111111111\") == 1\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 4') == '2'\nassert solution('1 3') == '2'\nassert solution('1 3') == '2'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2\\n2 4\\n\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"2 1\\n2 1\\n\") == \"0\"\nassert solution(\"1 2\\n2 1\\n\") == \"0\"\nassert solution(\"1 1\\n2 2\\n\") == \"0\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5') == '5'\nassert solution('4 3\\n1 3\\n2 4\\n3 4') == '4'\nassert solution('10 10\\n1 10\\n2 10\\n3 10\\n4 10\\n5 10\\n6 10\\n7 10\\n8 10') == '8'\nassert solution('10 10\\n1 10\\n2 10\\n3 10\\n4 10\\n5 10\\n6 10\\n7 10\\n8 10\\n9 10') == '10'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 4') == '1'\nassert solution('1 3\\n2 4') == '2'\nassert solution('2 4\\n1 3') == '1'\nassert solution('2 4\\n1 3\\n2 4') == '2'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 3\n2 4\n''') == '2'\n'''"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.splitlines()[0]\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '2'\nassert solution('3 4') == '3'\nassert solution('3 2\\n2 2') == '2'\nassert solution('3 3\\n2 3') == '1'\nassert solution('10 10\\n1 1') == '0'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 3\n2 4''') == '2'\nassert solution('''4 2\n1 2\n1 2\n1 2''') == '3'\nassert solution('''4 2\n3 1\n3 1\n3 1\n3 1''') == '3'\nassert solution('''4 2\n2 1\n1 2\n2 1\n1 2\n1 2''') == '1'\nassert solution('''10 10\n9 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1\n''') == '0'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n2\\n1') == '2'\nassert solution('1\\n2\\n2\\n1') == '2'\nassert solution('1\\n2\\n2\\n1') == '2'\nassert solution('1\\n2\\n2\\n1') == '2'\nassert solution('1\\n2\\n2\\n1') == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2 1') == 2\nassert solution('1 2 2 1 2') == 0\nassert solution('4') == 0\nassert solution('1 2 2 1 4') == 2\nassert solution('1 2 2 1 4 1') == 2\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n2\\n1') == '2'\nassert solution('4\\n1 2 2 1') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '5'\nassert solution('10\\n1 2 2 3 4 5 6 7 8 9 10') == '6'\nassert solution('10\\n1 1 2 2 3 4 5 6 7 8 9 10') == '0'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('1 2 2 1\\n1 2 2 1') == '2'\nassert solution('1 2 2 1\\n1 2 2 1') == '2'\n\"\"\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('1 2 2 1') == '2'\nassert solution('2 3 3 2') == '1'\nassert solution('1 2 2 1') == '2'\nassert solution('1 2 2 1') == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"5\\n1 2 2 3 4 5\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 2 2 3 4 5\") == \"2\"\nassert solution(\"4\\n1 2 2 1\") == \"2\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 10') == '2'\nassert solution('2 4 1 2') == '2'\nassert solution('2 4 1 2 -1 -1 -1 1') == '4'\nassert solution('2 4 1 2 -1 -1 -1 1 -1 -1 -1 1') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 1 -3\\n') == '3'\nassert solution('4 10\\n2 4 1 2\\n') == '2'\nassert solution('4 10\\n-1 1\\n') == '4'\nassert solution('4 10\\n2 4 1 2\\n') == '2'\nassert solution('2 4\\n-1 1\\n') == '4'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n-1 1\") == \"2\"\nassert solution(\"3 5\\n2 1 -3\") == \"3\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"\nassert solution(\"3 10\\n2 3 4 5 6 7 8 9 10\\n-1 1\") == \"0\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2 4\n2 1 -3''') == '3'\nassert solution(\n'''1\n5\n3 4 1 2''') == '4'\nassert solution(\n'''10\n4\n1 2 1 2 1 2 1 2''') == '0'\nassert solution(\n'''10\n5\n-1 1 -2 -3 -4 -5 -6 -7 -8 -9 -10''') == '0'\nassert solution(\n'''4 10\n2 4 1 2''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 -3\") == \"0\"\nassert solution(\"2 4 1 2\") == \"2\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"2 4 1 2\") == \"2\"\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nfrom sys import stdin, stdout\n\nn, w = map(int, stdin.readline().split())\na = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5\\n2 1 -3') == '3'\nassert solution('2 4\\n-1 1') == '4'\nassert solution('4 10\\n2 4 1 2') == '2'\n\n\n\"\"\""
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 -3') == '3'\nassert solution('2 4 1 2') == '4'\nassert solution('4 10') == '2'\nassert solution('10 20 30 40') == '0'\nassert solution('10 30 60') == '0'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126\\n') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('7\\n12 10 9 8 7 6 5 4 3 2 1 0\\n') == '1 0 2 3 4 5 6 7 8 9 10'\nassert solution('9\\n2 2 2 2 2 2 2 2 2 2 2 2 2\\n') == '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\n\n\"\"\""
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\n\nassert solution('''\n4\n42 28 84 126\n''') == '126 42 84 28'\n\nassert solution('''\n2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'\n\n'''\n'''\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('2') == '2'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('4') == '4'\nassert solution('42 28 84 126') == '126 42 84 28'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('2\\n1000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('2\\n1000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\n\n\n-----Answer-----\n\n\"\"\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('1000000000000000000 3000000000000000000') == None\nassert solution('2') == None\nassert solution('42 28 84 126') == None\nassert solution('9 3 6 12 4 8') == None\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") is None\nassert solution(\"1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000 \"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"9 3 6 12 4 8 \"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"12 9 6 3 1 8 \"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"1 3 6 12 4 8 \"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '3 9 6 12 4 8'\nassert solution('1000000000000000000 3000000000000000000') == '3 9 6 12 4 8'\nassert solution('1000000000000000000 3000000000000000000') == '3 9 6 12 4 8'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('4 8 6 3 12 9\\n') == '9 3 6 12 4 8'\nassert solution('42 28 84 126\\n') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\nassert solution('10000000000000001 1000000000000000001\\n') == '100000000000000000000000000000001 1000000000000000001'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''\n5\n-1 2 5 8 11\n''') == '1'\nassert solution('''\n1\n-5\n''') == '1'\nassert solution('''\n7\n3 2 4 6 8 10\n''') == '3'\nassert solution('''\n9\n7 2 5 4 8 11 10 9\n''') == '7'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '1'\nassert solution('''9\n4 7 10 13 14 15 16\n''') == '1'\nassert solution('''12\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1\n''') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\"\nassert solution(\"5\\n-3 2 -1 5 -8 11\") == \"2\"\nassert solution(\"5\\n5 5 5 5 5\") == \"0\"\nassert solution(\"5\\n-5 -5 -5 -5 -5\") == \"1\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n3 5 4 7 10 12''') == '3'\nassert solution('''-1 2 5 8 11''') == '1'\nassert solution('''1 2 5 8 11''') == '1'\nassert solution('''-3 -4 -5 -6 -7 -8 -9 -10''') == '1'\nassert solution('''1 2 2 4 6 8 10 12 14 16 18''') == '3'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n3 5 4 7 10 12\\n') == '3\\n7 3 5'\nassert solution('5\\n-1 2 5 8 11\\n') == '1\\n8'\nassert solution('4\\n1 -1 -2 2\\n') == '1\\n2 -2'\nassert solution('10\\n
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('inputs/test_2') == '9'\nassert solution('inputs/test_1') == '3'\nassert solution('inputs/test_3') == '2'\nassert solution('inputs/test_4') == '6'\nassert solution('inputs/test_5') == '3'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('6') == '3'\nassert solution('3 5 4 7 10 12') == '3'\nassert solution('-1 2 5 8 11') == '1'"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n-1 2 5 8 11\\n') == '1'\nassert solution('5\\n-1 2 5 8 11\\n') == '3'\nassert solution('7\\n1 2 5 8 11\\n') == '3'\nassert solution('9\\n1 2 5 8 11\\n') == '3'\nassert solution('10\\n1 2 5 8 11\\n') == '3'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 5 4 7 10 12\\n') == '3'\nassert solution('5\\n-1 2 5 8 11\\n') == '1'\nassert solution('3\\n-1 2 5 8 11\\n') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '4'\nassert solution('10\\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10\\n') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 3') == '2'\nassert solution('2\\n1 4') == '1'\nassert solution('2\\n1 5') == '1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 3') == '0 2'\n'''\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 3') == '0 2'\n\"\"\"\n\nfrom itertools import accumulate"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 3') == '0 2'"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 3') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 2 3') == '0 2'\nassert solution('1 1 1') == '0 0'\nassert solution('1 2 1') == '0 1'\nassert solution('1 1 1') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '0 2'\n'''"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"2 1 2\") == \"0 1\"\nassert solution(\"1 10 10\") == \"0 1\"\nassert solution(\"0 0 0\") == \"0 0\"\nassert solution(\"1 1 1\") == \"0 0\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('3 2 3') == '0 2'\nassert solution('3 2 4') == '1 3'\nassert solution('3 2 7') == '1 2'\nassert solution('0 0 0') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 1 2') == '2 0'\nassert solution('4 1 3') == '0 2'\nassert solution('4 2 1') == '1 0'\nassert solution('1 1 1') == '0 1'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('101') == '3'\nassert solution('100') == '1'\nassert solution('10') == '2'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100\") == \"3\"\nassert solution(\"1000000000000\") == \"2\"\nassert solution(\"1000000000\") == \"2\"\nassert solution(\"10000000000000000\") == \"1\"\nassert solution(\"999\") == \"999\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nX = int(input())\nY = 100\nfor i in range(3):\n    Y = (Y + X) * 0.01\nprint(round(Y,3))\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''100''') == '0'\nassert solution('''1000''') == '0'\nassert solution('''10003''') == '3'\nassert solution('''30''') == '2'\nassert solution('''3029988084''') == '0'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n103\n''') == '3'\nassert solution(\n'''\n6000000\n''') == '5'\nassert solution(\n'''\n2000000\n''') == '8'\nassert solution(\n'''\n1000000\n''') == '9'\nassert solution(\n'''\n9000000\n''') == '10'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\n\"\"\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == 3\nassert solution(\"10\") == 1\nassert solution(\"10000\") == 5\nassert solution(\"1000000000000\") == 10\nassert solution(\"1000000000\") == 17\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('103') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n0') == '3'\nassert solution('100\\n100') == '0'\nassert solution('999\\n999') == '1'\nassert solution('9999\\n9999') == '2'\nassert solution('10000\\n10000') == '2'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '18'\nassert solution('4') == '36'\nassert solution('5') == '60'\nassert solution('6') == '72'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == '9'\nassert solution(3) == '12'\nassert solution(4) == '12'\nassert solution(5) == '12'\nassert solution(6) == '12'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(input()))"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('10') == '1'\nassert solution('111') == '1'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '9'\nassert solution('10') == '45'\nassert solution('100') == '99'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '9'\nassert solution('3') == '27'\nassert solution('4') == '81'\nassert solution('5') == '225'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '9'"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''3\n3 4 6''') == '10'\nassert solution('''3\n3 4 5''') == '6'\nassert solution('''4\n2 1 5 3''') == '7'\nassert solution('''8\n-4 -2 2 4 2 4 4 -2''') == '-1'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"12345\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('3\\n3 5 6') == '0'\nassert solution('3\\n3 6 7') == '0'\nassert solution('3\\n3 7 7') == '0'\nassert solution('3\\n3 7 7\\n7 7 7') == '0'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''3\n3 4 6''') == '10'\nassert solution('''2\n3 4''') == '4'\nassert solution('''2\n3 4''') == '4'\nassert solution('''3\n2 3 4''') == '3'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''1\n2 3 5''') == '4'\nassert solution('''1\n2 3 4''') == '6'\nassert solution('''2\n2 3''') == '2'\nassert solution('''2\n2''') == '2'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('4\\n2 6 4 8\\n') == '6'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('3\\n2 3 4\\n') == '2'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(None) is None\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"1 2 3 4 5 6\") == \"7\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''1\n1''') == '1'\nassert solution('''100\n1''') == '1'\nassert solution('''1000\n1''') == '1'\nassert solution('''9999\n1''') == '1'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('6 6') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('3 2') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2''') == 'Yes'\nassert solution('''5\n2 2\n3 3\n4 4\n5 5\n2 2''') == 'No'\nassert solution('''1\n2''') == 'Yes'\nassert solution('''1\n1''') == 'No'\nassert solution('''10\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output\n'''\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n6 6') == 'Yes'\nassert solution('6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n1 1') == 'No'\nassert solution('6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n1 1\\n1 2') == 'No'\nassert solution('3 3\\n3 1\\n3 1\\n3 2') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Yes'\n'''\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '5\\n'\n    '1 2\\n'\n    '6 6\\n'\n    '4 4\\n'\n    '3 3\\n'\n    '3 2\\n'\n) == 'Yes'\nassert solution(\n    '5\\n'\n    '1 2\\n'\n    '6 6\\n'\n    '4 4\\n'\n    '3 3\\n'\n    '2 2\\n'\n) == 'No'\nassert solution(\n    '3\\n'\n    '1 1\\n'\n    '2 2\\n'\n    '3 3\\n'\n) == 'Yes'\nassert solution(\n    '3\\n'\n    '1 1\\n'\n    '2 2\\n'\n    '3 3\\n'\n    '3 2\\n'\n) == 'No'\nassert solution(\n    '3\\n'\n    '1 1\\n'\n    '2 2\\n'\n    '3 3\\n'\n    '2 2\\n'\n) == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 3\") == \"No\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 2\") == \"Yes\"\nassert solution(\"1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 2\\n6 6\") == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1 2') == 'No'\nassert solution('6 6') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('3 3') == 'No'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 4\nassert solution(input()) == 4\nassert solution(input()) == 4\nassert solution(input()) == 4\nassert solution(input()) == 4\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"12\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"20\"\nassert solution(\"6\") == \"24\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 4\nassert solution(3) == 9\nassert solution(100) == 1\nassert solution(1000) == 100\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('5') == '20'\nassert solution('7') == '56'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '4'"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 4\nassert solution(3) == 9\nassert solution(4) == 16\nassert solution(5) == 25\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == 0\nassert solution(\"2\") == 1\nassert solution(\"5\") == 2\nassert solution(\"100\") == 26\nassert solution(\"14\") == 3\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('5') == '5'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"10\"\nassert solution(\"50000\") == \"0\"\nassert solution(\"9999999999\") == \"1\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('4 3 5 1') == 'Yes'\nassert solution('4 3 7 3') == 'No'\nassert solution('4 3 5 1') == 'No'\nassert solution('3 3 3 3') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 8 5 1') == \"Yes\"\nassert solution('1 1 1 1') == \"No\"\nassert solution('1 1 1 1') == \"Yes\"\nassert solution('8 8 6') == \"Yes\"\nassert solution('1 1 1 1') == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4\n3 8 5 1\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"3\n3 1 4\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"3\n1 4 5\n\"\"\") == \"No\"\n\nassert solution(\n\"\"\"5\n3 8 5 1 6\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"7\n1 1 1 1 1 1 1\n\"\"\") == \"No\""
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4\n3 8 5 1'''\n) == 'Yes'\n\nassert solution(\n'''6\n1 3 2 4 1 1'''\n) == 'No'\n\nassert solution(\n'''2\n1 2'''\n) == 'Yes'\n\nassert solution(\n'''3\n3 1 2'''\n) == 'Yes'\n\nassert solution(\n'''6\n1 4 2 3 2 1'''\n) == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n8 5 1') == 'Yes'\nassert solution('1\\n1') == 'No'\nassert solution('3\\n5 1') == 'Yes'\nassert solution('2\\n10 9') == 'No'\nassert solution('2\\n100 9') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin\n\nn = int(stdin.readline().strip())\nsides = map(int, stdin.readline().strip().split(' '))\n\nmaximum_side = max(sides)\nother_sides = [side for side in sides if side!= maximum_side]"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('4 3 4 1') == 'No'\nassert solution('2 4 5 4') == 'Yes'\nassert solution('3 5 5 1') == 'Yes'\nassert solution('4 6 7 4') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"4\\n3 8 5 1\") == \"No\"\nassert solution(\"3\\n8 5 1\") == \"Yes\"\nassert solution(\"3\\n8 5 1\") == \"No\"\nassert solution(\"1\\n1\") == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n3 8 5 1''') == 'Yes'\nassert solution('''4\n4 8 5 1''') == 'Yes'\nassert solution('''4\n1 4 4 2''') == 'Yes'\nassert solution('''4\n1 4 2 3''') == 'No'\nassert solution('''4\n1 1 1 1''') == 'Yes'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7\\n3 2') == '702'\nassert solution('3 3\\n1 7\\n3 2') == '702'\nassert solution('3 3\\n1 7\\n3 2\\n5 1\\n2 1') == '-1'\nassert solution('3 3\\n1 7\\n3 2\\n5 1\\n2 9') == '-1'\nassert solution('3 3\\n1 7\\n3 2\\n5 1\\n2 9\\n6 1') == '-1'\n\nprint(\"All Tests passed successfully.\")\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 3') == '-1'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"0 0\") == \"-1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 2') == '702'\nassert solution('4 1') == '-1'\nassert solution('1 3') == '-1'\nassert solution('3 2') == '-1'\nassert solution('3 3') == '7'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '-1'\nassert solution('2 3') == '-1'\nassert solution('3 2') == '-1'\nassert solution('2 3') == '-1'\nassert solution('1 2') == '-1'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"2 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"2 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"2 3\\n1 7\\n3 2\\n1 7\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == stdout\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '3 3\\n1 7\\n3 2\\n1 7\\n') == '702'\nassert solution(\n    '3 3\\n1 7\\n3 2\\n1 7\\n') == '702'\nassert solution(\n    '3 3\\n1 7\\n3 2\\n1 7\\n') == '702'\nassert solution(\n    '3 3\\n1 7\\n3 2\\n1 7\\n') == '702'\nassert solution(\n    '3 3\\n1 7\\n3 2\\n1 7\\n') == '702'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 7') == '702'\nassert solution('1 7\\n1 7') == '702'\nassert solution('2 1\\n1 1') == '-1'\nassert solution('2 2\\n0 9') == '-1'\nassert solution('2 3\\n1 0\\n1 1') == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '9'\n\n'''\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '9'\n\nassert solution('1 5') == '4'\n\nassert solution('1 1') == '0'\n\nassert solution('1 10') == '0'\n\nassert solution('10 5') == '0'"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2''') == '9'\nassert solution('''5 8''') == '0'\nassert solution('''4 2''') == '5'\nassert solution('''10 8''') == '0'\nassert solution('''3 10''') == '9'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 2\") == \"9\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 3') == '6'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '9'\nassert solution('1 1') == '1'\nassert solution('2 1') == '0'\nassert solution('3 1') == '0'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == '9'\n'''\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-999\") == \"11110101\"\nassert solution(\"-1000\") == \"111111111\"\nassert solution(\"-1001\") == \"1111111001\"\nassert solution(\"-8\") == \"10011\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('-9') == '1011'\nassert solution('-10') == '1101'\nassert solution('-100') == '11011101'\nassert solution('-1000') == '1101110111011101'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == solution(input())\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(0) == \"0\"\nassert solution(-5) == \"101\"\nassert solution(-9) == \"1011\"\nassert solution(1) == \"1\"\nassert solution(4) == \"100\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('-9') == '1011'\nassert solution('9') == '1001'\nassert solution('123') == '1111'\nassert solution('-123') == '1011'\nassert solution('1111') == '-1011'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"1011\""
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[::-1]\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('-9') == '1011'\nassert solution('4') == '0110'\nassert solution('6') == '1101'\nassert solution('-7') == '0101'\nassert solution('-10') == '1010'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(10) == '10101'\nassert solution(-9) == '10101'\nassert solution(100) == '10000'\nassert solution(-10) == '01010'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '1011'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('2 1\\n1 1') == '1'\nassert solution('2 1\\n1 1') == '1'\nassert solution('2 1\\n1 1') == '1'\nassert solution('2 1\\n1 1') == '1'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 5\n4 9\n2 4''') == \"12\"\nassert solution('''2 4\n4 4\n2 4''') == \"1\"\nassert solution('''2 4\n4 4\n1 2''') == \"5\"\nassert solution('''2 4\n4 4\n2 1''') == \"0\"\nassert solution('''2 4\n4 4\n4 1''') == \"1\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"1 2\") == 2\nassert solution(\"1 3\") == 3\nassert solution(\"1 4\") == 4\nassert solution(\"1 5\") == 5\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5\\n4 9\\n2 4\\n') == '12'\nassert solution('2 5\\n4 9\\n2 4\\n') == '11'\nassert solution('2 5\\n4 9\\n2 4\\n') == '10'\nassert solution('1 100\\n1 100\\n1 100\\n') == '0'\nassert solution('5 1\\n4 1\\n4 1\\n4 1\\n4 1\\n') == '13'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 9\\n2 4\\n2 4') == '12'\nassert solution('1 1000\\n1 1001') == '1010'\nassert solution('3 1000\\n1 1000\\n2 1000') == '2000'\nassert solution('2 4\\n1 1') == '5'\nassert solution('2 2\\n1 1') == '1'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 5\n4 9\n2 4\n\"\"\"\n) == \"12\"\n\nassert solution(\n\"\"\"\n3 3\n1 1\n3 1\n2 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n3 2\n1 1\n2 2\n3 3\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n3 10\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('2 7\\n4 5\\n1 6') == '14'\nassert solution('1 1\\n100 100') == '1'\nassert solution('2 2\\n1 1') == '0'\nassert solution('1 10\\n1 100') == '10'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5') == '12'\nassert solution('4 9') == '12'\nassert solution('2 4') == '8'\nassert solution('2 4\\n4 9') == '12'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expected_output"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10 3 5 10 2\") == \"3\"\nassert solution(\"10 3 10 3\") == \"2\"\nassert solution(\"10 10 10\") == \"1\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 4 8 7 3') == '2'\nassert solution('5') == '1'\nassert solution('10 4 8 7 3 5 6 2 8 3') == '5'\nassert solution('8 10 2 7 3 4 1 9 6 10') == '4'\nassert solution('9 10 2 7 3 4 1 9 6 10 8') == '5'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_stdout\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 4 8 7 3') == '2'\nassert solution('100 10 1 1') == '1'\nassert solution('9 9 9 9') == '0'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('9 9 9 9') == '0'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 4 8 7 3\") == \"2\"\n\n\"\"\"\n\n\"\"\"\n-- Python3 --\nimport sys"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"2 2 3 3 3 3 3 3 3 3\") == \"8\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"4\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"10 4 8 7 3\") == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2 4 5\\n1 2 3 3 3\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 2 4 5\\n1 2 3 3 3\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"\nassert solution(\"10 4\\n1 2 2 3 4 5 6 7 8 9 10\\n\") == \"2\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2 4 5\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"1 2 2 4 5\\n1 2 2 4 5\\n\") == \"0\"\nassert solution(\"1 2 2 4 5\\n1 2 2 4 5\\n\") == \"0\"\nassert solution(\"1 2 2 4 5\\n1 2 2 4 5\\n\") == \"0\"\nassert solution(\"1 2 2 4 5\\n1 2 2 4 5\\n\") == \"0\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0'\nassert solution('') == ''\nassert solution('3') == ''\nassert solution('0') == ''\nassert solution('0 1') == ''\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2 2 3 3 3') == '0'\nassert solution('1\\n1 2 2 4 4 4') == '1'\nassert solution('1\\n1 2 3 3 3') == '2'\nassert solution('1\\n1 2 3 3 3 3') == '3'\nassert solution('1\\n1 2 3 3 3 3') == '4'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2 2\\n') == '1'\nassert solution('1\\n2 3\\n') == '1'\nassert solution('1\\n2 1\\n') == '1'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('1\\n2\\n') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 3 3') == '0'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 4 4') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 4 5\\n1 2 3 3 3') == '1\\n'\nassert solution('1 2 2 4 5\\n1 2 3 3 3') == '2\\n'\nassert solution('1 2 2 4 5\\n1 2 3 3 4') == '0\\n'\n\n\n\"\"\"\nfrom typing import Iterable\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 2 4') == '3'\nassert solution('2 3\\n1 1 1') == '2'\nassert solution('1 1\\n1') == '0'\nassert solution('1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3''') == '4'\nassert solution('''14 5\n
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3\n''') == '4'\nassert solution('''15 5\n2 3 3 2 1 4 6 3 2 5 7 2 3 8 1 4 2\n''') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5') == '3'\nassert solution('7 5') == '4'\nassert solution('1 2 2 4 2 3') == '3'\nassert solution('3 3 2 1 1 1 3') == '4'\nassert solution('10 10 10 10 10 10') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n2\\n4\\n2\\n3') == '3'\nassert solution('2\\n2\\n2\\n4\\n2\\n3') == '4'\nassert solution('2\\n1\\n2\\n4\\n2\\n3') == '4'\nassert solution('1\\n2\\n2\\n4\\n2\\n3') == '3'\nassert solution('2\\n1\\n2\\n4\\n2\\n3') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3\n''') == '4'\nassert solution('''4 4\n1 2 2 3 3\n''') == '0'\nassert solution('''4 4\n3 3 2 1 1\n''') == '1'\nassert solution('''4 4\n3 3 2 1 1\n''') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2 2 4 2 3''') == '3'\nassert solution('''5 5\n3 3 2 1 1 1 3''') == '4'\nassert solution('''7 5\n1 2 2 4 2 3''') == '4'\nassert solution('''10 2\n1 2 2 4 2 3''') == '5'"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('3\\n1\\n') == '1'\nassert solution('3\\n2\\n') == '0'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 1 3''') == '10'\nassert solution('''7 3 2''') == '9'\nassert solution('''1 1000 1''') == '1000'\nassert solution('''1000000000000 42 88''') == '42000000000000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == 1\nassert solution('2\\n') == 2\nassert solution('3\\n') == 3\nassert solution('5\\n') == 5\nassert solution('0\\n') == 0\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 5\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 1002 1\") == \"1\"\nassert solution(\"1 1 2\") == \"1\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '1\\n2\\n3'\nassert solution('1\\n2\\n3\\n4\\n5') == '2\\n3\\n5'\nassert solution('1\\n100\\n1000000000\\n10000000000') == '100\\n1000000000\\n10000000000'\nassert solution('1\\n100\\n1000000000\\n10000000000\\n1000000000\\n10000000000') == '100\\n1000000000\\n10000000000'\nassert solution('1\\n1000000000\\n10000000000\\n1000000000\\n10000000000\\n1000000000\\n1000000000') == '1000000000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''10 1 3\n7 3 2\n1 10 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''10 1 3\n7 3 2\n1 10 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''10 1 3\n7 3 2\n1 10 1\n1000000000000 42 88\n4 1 3\n6 1 1\n1 100 2\n1 1 2''') == '100\\n0\\n4\\n1000000000\\n10000'\nassert solution('''10 1 3\n7 3 2\n1 10 1\n1000000000000 42 88\n4 1 3\n6 1 1\n1 100 2\n1 1 2''') == '100\\n0\\n4\\n1000000000\\n10000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''6\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''6\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n4 6 8\n''') == '1'\nassert solution('''10 10\n2 2 2 2 2 2 2 2 2 2\n''') == '0'\nassert solution('''7 10\n2 2 2 2 2 2 2 2 2\n''') == '4'\nassert solution('''10 10\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n''') == '4'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '6'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 1') == '2'\nassert solution('3 1 2') == '1'\nassert solution('3 2 1') == '2'\nassert solution('4 2 1 3') == '3'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n2 6 4\n''') == '1'\nassert solution('''3 4\n3 4 4\n''') == '0'\nassert solution('''5 8\n8 2 2 4 2 4\n''') == '2'\nassert solution('''3 8\n3 2 2 4 2 4\n''') == '0'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 6''') == '2'\nassert solution('''3 4 5''') == '2'\nassert solution('''3 5 3''') == '1'\nassert solution('''3 7 2''') == '1'\nassert solution('''3 10 1''') == '1'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 6\\n3 4 5') == '2'\n\"\"\""
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 2\\n2 1\\n2 1\\n3 1\\n3 1\") == \"1\\n1\\n2\\n0\"\nassert solution(\"1 2\\n1 2\\n2 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\") == \"2\\n3\\n4\\n0\"\nassert solution(\"1 2\\n1 2\\n2 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\") == \"2\\n3\\n4\\n0\"\n\"\"\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 6\n3 4 5\n''') == \"2\\n\"\n\nassert solution('''3 7\n3 4 5\n''') == \"1\\n\"\n\nassert solution('''3 7\n4 5 6\n''') == \"0\\n\"\n\nassert solution('''3 7\n4 5 6\n''') == \"1\\n\"\n\nassert solution('''4 7\n1 2 3 4\n''') == \"0\\n\""
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hoge') == 'Yes'\nassert solution('english') == 'No'\nassert solution('hogehoge') == 'Yes'\nassert solution('enigma') == 'Yes'\nassert solution('e') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('Hello, World!') == 'Yes'\nassert solution('it is a can') == 'No'\nassert solution('As hoge is announced multiple times, the rules of shiritori was not observed') == 'No'\nassert solution('AABCAAADEAABCAAABBCAAAD') == 'No'\nassert solution('AABCAAADEAABCAAABBCAAAD') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('\"hoge\"\\n\"english\"\\n\"hoge\"\\n\"enigma\"') == \"No\"\nassert solution('\"hoge\"\\n\"english\"\\n\"hoge\"\\n\"enigma\"') == \"Yes\"\nassert solution('\"hoge\"\\n\"english\"\\n\"fuga\"\\n\"enigma\"') == \"No\"\nassert solution('\"hoge\"\\n\"english\"\\n\"hoge\"\\n\"enigma\"') == \"Yes\"\nassert solution('\"hoge\"\\n\"english\"\\n\"hoge\"\\n\"enigma\"') == \"No\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('stdin') == 'No'\nassert solution('stdin') == 'No'\nassert solution('stdin') == 'No'\nassert solution('stdin') == 'No'\nassert solution('stdin') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('\\n'.join([\n    '4',\n    'hoge',\n    'english',\n    'hoge',\n    'enigma',\n])) == 'Yes'\nassert solution('\\n'.join([\n    '4',\n    'hoge',\n    'english',\n    'hoge',\n    'enigma',\n])) == 'No'\nassert solution('\\n'.join([\n    '4',\n    'hoge',\n    'english',\n    'hoge',\n    'enigma',\n])) == 'No'\nassert solution('\\n'.join([\n    '4',\n    'hoge',\n    'english',\n    'hoge',\n    'enigma',\n])) == 'Yes'\nassert solution('\\n'.join([\n    '6',\n    'hoge',\n    'english',\n    'hoge',\n    'enigma',\n    'hogehoge',\n])) == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hoge') == 'No'\nassert solution('hogehoge') == 'Yes'\nassert solution('takahashii') == 'Yes'\nassert solution('taikakakakaka') == 'Yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcd\\nefgh\\nijklm\\nmnop\\n') == 'Yes'\nassert solution('a\\nb\\nc\\n') == 'No'\nassert solution('abc\\n') == 'No'\nassert solution('abc\\nefgh\\nijklm\\nmnop\\n') == 'Yes'\nassert solution('abcd\\nefgh\\nijklm\\na\\nb\\nc\\nd\\nefgh\\nijklm\\nmnop\\n') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\nhoge\\nenglish\\nhoge\\nenigma') == 'Yes'\nassert solution('10\\nhogehoge\\nenglish\\nhoge\\nenigma') == 'Yes'\nassert solution('2\\nhogehoge\\nenglish\\nhoge\\nenigma') == 'No'\nassert solution('1\\n') == 'Yes'\nassert solution('0') == 'No'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 3') == '2'\nassert solution('2 3') == '4'\nassert solution('3 3') == '6'\nassert solution('6 3') == '9'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"2 10\") == \"12\"\nassert solution(\"2 10\") == \"12\"\nassert solution(\"3 2\") == \"9\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('3 4') == '4'\nassert solution('3 4 5') == '4'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 3') == '10'\nassert solution('2 3') == '6'\nassert solution('4 5') == '11'\nassert solution('6 7') == '16'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3''') == '6'\nassert solution('''2 3''') == '6'\nassert solution('''7 5''') == '10'\nassert solution('''7 5''') == '10'\nassert solution('''1 3''') == '3'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3''') == '6'\nassert solution('''2 4''') == '6'\nassert solution('''2 3''') == '6'\nassert solution('''2 4''') == '6'\nassert solution('''2 5''') == '8'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n2 3\\n') == '6'\nassert solution('1 2\\n1 2\\n') == '4'\nassert solution('2 4\\n2 4\\n') == '8'\nassert solution('3 5\\n3 5\\n') == '9'\nassert solution('1 1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 3') == '6'\nassert solution('10 5') == '5'\nassert solution('2 3') == '6'\nassert solution('10 5') == '5'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"6\""
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '9'\nassert solution('8 10') == '64'\nassert solution('2 3') == '6'\nassert solution('10 6') == '36'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"sardine\") == \"xxxxxxx\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('is') == 'xxxxxxx'\nassert solution('test') == 'xxxxxxx'\nassert solution('abcdefgh') == 'xxxxxx'\nassert solution('abcdefghi') == 'xxxxx'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\nprint(\"All test cases passed.\")\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\n\"\"\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('az') == 'ax'\nassert solution('z') == 'ax'\nassert solution('abbbccc') == 'axbxxc'\nassert solution('abcdefgh') == 'axbxxc'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"xxxxxxx\"\n\"\"\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('as') == 'ax'\nassert solution('asdf') == 'axsdf'\nassert solution('a') == 'ax'\nassert solution('aaa') == 'axa'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == None\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 1 1 3\") == \"Yes\"\nassert solution(\"1 2 1 1 3\\n2 1 1 1 3\") == \"No\"\nassert solution(\"1 2 1 1 3\\n2 1 1 1 3\\n3 1 1 1 3\") == \"Yes\"\nassert solution(\"1 2 1 1 3\\n2 1 1 1 3\\n3 1 1 1 3\\n4 1 1 1 3\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('5\\n1 2 1 1 3') == 'No'\nassert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('5\\n2 1 1 1 3') == 'No'\nassert solution('5\\n1 2 1 1 3') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 2 1 1 3') == 'No'\nassert solution('1 2 3 4 5 6') == 'Yes'\nassert solution('2 1 1 1 1 1') == 'Yes'\nassert solution('2 1 1 1 1 1') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(stdin)) == stdin[:-1]\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"1 2 1 1 3\") == \"Yes\"\nassert solution(\"1 2 2 1 3\") == \"No\"\n\"\"\""
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1\\n1\\n3\") == \"No\"\nassert solution(\"5\\n1\\n2\\n1\\n3\") == \"Yes\"\nassert solution(\"1\\n2\\n1\\n1\\n3\") == \"No\"\nassert solution(\"2\\n1\\n1\\n2\") == \"Yes\"\nassert solution(\"1\\n1\\n1\\n1\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 1 1\") == \"Yes\"\nassert solution(\"3\\n1 1 1 1\") == \"No\"\nassert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\\n1 2 1 3 1\") == \"No\"\nassert solution(\"5\\n2 1 1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('1\\n1\\n1') == 1\nassert solution('1\\n-100\\n1') == 0\nassert solution('1\\n1\\n-100') == 0\nassert solution('2\\n1\\n1\\n1') == 1\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 1') == ''\nassert solution('-1 -1') == ''\nassert solution('1 -1') == ''\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '2'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 1 2') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 1 2\\n1 1 1') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 1 2\\n1 1 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '1'\n\nassert solution(\n'''\n2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '0'\n\nassert solution(\n'''\n7 2 -10\n1 2 3\n3 2 1\n1 2 2\n1 2 3\n3 2 1\n3 2 2\n3 2 3\n''') == '1'\n\nassert solution(\n'''\n1 1 2\n3 4 4\n2 3 1\n''') == '1'\n\nassert solution(\n'''\n10 2 10\n1 2 3\n3 2 1\n1 2 2\n1 2 3\n3 2 1\n3 2 2\n3 2 3\n3 2 4\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 10\n''') == '9'"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 2 3') == None\nassert solution('3 2 1') == None\nassert solution('1 2 2') == None\nassert solution('1 2 3') == None\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"2 3 -10\n1 2 3\n3 2 1\n1 2 2\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"1 1 -10\n2 2 1\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"2 3 -10\n1 1 2\n2 1 3\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"2 3 -10\n1 1 2\n2 1 3\n3 1 1\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"3 1 -10\n1 1 2\n2 1 3\n3 1 1\"\"\"\n) == \"0\""
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '1'\nassert solution('3 2 1') == '0'\n'''\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100') == '1'\nassert solution('1') == '0'\nassert solution('101') == '1'\nassert solution('10') == '10'\nassert solution('100100') == '100'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1900') == '100'\nassert solution('100') == '0'\nassert solution('1000') == '1'\nassert solution('10000') == '2'\nassert solution('9999') == '5'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('100\\n') == '100\\n'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == 10\nassert solution('20') == 10\nassert solution('100') == 100\nassert solution('1000') == 1000\nassert solution('10000') == 10000\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1900') == 100\nassert solution('2') == 0\nassert solution('1000') == 1\nassert solution('500') == 0\nassert solution('10000') == 0\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1100') == 100\nassert solution('100') == 1\nassert solution('0') == 0\nassert solution('2') == 2\nassert solution('12') == 2\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('3') == ''\nassert solution('10') == ''\nassert solution('100') == ''\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''1\n''') == 1\nassert solution(\n'''1000\n''') == 1\nassert solution(\n'''3000\n''') == 1\nassert solution(\n'''10000\n''') == 1\nassert solution(\n'''9999\n''') == 0\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"42\") == \"2\"\nassert solution(\"842\") == \"24\"\nassert solution(\"1242\") == \"24\"\nassert solution(\"1842\") == \"24\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('5\\n') == '5\\n'\nassert solution('100\\n') == '100\\n'\nassert solution('10000\\n') == '100\\n'\nassert solution('12345\\n') == '234\\n'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 5 2') == '9'\nassert solution('3\\n3 2 2') == '3'\nassert solution('4\\n4 1 1 3\\n4 2 1 1') == '4'\nassert solution('5\\n3 2 1 1 1\\n3 2 2 1 1\\n3 2 2 2 1\\n3 2 2 3 1\\n3 2 3 2 1\\n3 2 3 3 1\\n3 2 3 4 1\\n3 2 4 3 1\\n3 2 4 4 1\\n3 2 4 4 2\\n3 2 4 5 1\\n3 2 5 4 1\\n3 2 5 5 1\\n3 2 5 5 2\\n3 2 5 6 1\\n3 2 6 5 1\\n3 2 6 6 1\\n3 2 6 6 2\\n3 2 6 7 1\\n3 2 7 6 1\\n3 2 7 7 1\\n3 2 7 7 2\\n3 2 7 8 1\\n3 2 8 7 1\\n3 2 8 8 1\\n3 2 8 8 2\\n3 2 8 9 1\\n3 2 9 8 1\\n3 2 9 9 1\\n3 2 9 9 2') == '20'\nassert solution('4\\n4 1 1 1 3\\n4 2 1 1 1\\n4 3 1 1 1\\n4 4 1 1 1') == '4'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"2\\n3 5 2\\n1 1\") == \"1\"\nassert solution(\"2\\n1 2\\n3 4\") == \"1\"\n\"\"\""
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''3\n1 1 1\n1 1 1\n1 1 1\n''') == '2'\nassert solution('''4\n4 1 4 4\n2 1 1 1\n2 1 1 1\n2 1 1 1\n2 1 1 1\n''') == '1'\nassert solution('''8\n9 1 9 9 1 9 1\n5 1 5 1 5 1 5\n5 1 5 1 5 1 5\n5 1 5 1 5 1 5\n5 1 5 1 5 1 5\n5 1 5 1 5 1 5\n5 1 5 1 5 1 5\n''') == '3'\nassert solution('''10\n9 9 9 9 9 9 9 9\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n''') == '5'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n2') == '1'\nassert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n3') == '3'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''6\n10 10 10 10 10 10\n100 100 100 100 100''') == '1'\nassert solution('''3\n10 9 9\n5 4 4\n7 4 7''') == '4'\nassert solution('''5\n100 100 100 100 100\n5 5 5 5 5 5\n4 4 4 4 4\n3 3 3 3 3\n2 2 2 2 2\n1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nprint('Test Successful')"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 5 2\") == \"9\"\nassert solution(\"2\\n4 5\\n2\") == \"9\"\nassert solution(\"2\\n3 4 3\\n1 2\") == \"9\"\nassert solution(\"2\\n4 5\\n2\\n5\") == \"7\"\nassert solution(\"2\\n3 4 3\\n1 2\\n5\") == \"7\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20\\n8 15 13') == 'No War'\nassert solution('1 100 100 100') == 'War'\nassert solution('1 1 1 1') == 'War'\nassert solution('1 1 1 1\\n1 1 1 1') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\nprint(solution(input))\n\"\"\"\n\nN, M, X, Y = list(map(int, input().split()))\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 20\n8 15 13\n16 22''') == 'War'\n'''\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 20\n8 15 13\n16 22''') == 'War'\n'''\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('8 15 13') == 'War'\nassert solution('16 22') == 'War'\nassert solution('1 2 3 4') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\nfrom sys import stdin\n\nx, y, n, m = map(int, stdin.readline().split())\nx_list, y_list = [], []\n\nfor _ in range(n):\n    x_i = int(stdin.readline().strip())\n    x_list.append(x_i)\n\nfor _ in range(m):\n    y_i = int(stdin.readline().strip())\n    y_list.append(y_i)\n\nfor i in x_list:\n    for j in y_list:\n        if x < j <= y:\n            print('War')\n            exit()\n    if y < x <= j:\n        print('War')\n        exit()\nprint('No War')\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22\\n') == 'No War'\nassert solution('3 2 10 10\\n8 15 13\\n16 22\\n') == 'War'\nassert solution('3 2 10 10\\n8 15 13\\n16 22\\n') == 'War'\nassert solution('3 2 10 10\\n8 15 13\\n16 22\\n') == 'War'\nassert solution('3 2 10 10\\n8 15 13\\n16 22\\n') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution(\n'''1 2 3\n4 5 6\n7 8 9''') == 'War'\nassert solution(\n'''2 1 1\n1 1 1''') == 'War'\nassert solution(\n'''3 2 0 0\n0 0 0 0\n0 0 0 0''') == 'War'\nassert solution(\n'''4 1 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0''') == 'War'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\n3\n''') == '6'\n\nassert solution('''\n2\n2\n3\n''') == '6'\n\nassert solution('''\n10\n1\n''') == '10'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\\n\"\n    \"2\\n\"\n) == \"6\"\nassert solution(\n    \"2\\n\"\n    \"3\\n\"\n) == \"12\"\nassert solution(\n    \"2\\n\"\n    \"4\\n\"\n) == \"16\"\nassert solution(\n    \"2\\n\"\n    \"6\\n\"\n) == \"24\"\nassert solution(\n    \"2\\n\"\n    \"8\\n\"\n) == \"48\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('1\\n1\\n1') == '0'\nassert solution('2\\n1\\n2') == '1'\nassert solution('2\\n2\\n2') == '0'\nassert solution('3\\n2\\n1') == '5'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n3\\n') == '6'\n\n\"\"\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n4') == '8'\nassert solution('2\\n2\\n5') == '10'\nassert solution('2\\n2\\n6') == '12'\nassert solution('2\\n2\\n7') == '14'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n4''') == '4'\nassert solution('''2\n2\n5''') == '6'\nassert solution('''2\n2\n6''') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[6:18]\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output_a\n\"\"\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n3\\n') == '6'\nassert solution('2\\n3\\n3\\n') == '3'\nassert solution('2\\n2\\n4\\n') == '10'\nassert solution('2\\n3\\n6\\n') == '9'\nassert solution('2\\n3\\n6\\n') == '7'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('2 2 1 1 1') == '0'\nassert solution('3 3 2 2 1') == '2'\nassert solution('2 3 1 2 1') == '2'\nassert solution('5 5 2 2 2') == '6'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0'\n'''\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == 0\nassert solution(\"1 2 3\") == 0\nassert solution(\"1 2 3 4 5\") == 0\nassert solution(\"1 2 3 4 5 6\") == 3\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == 1\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('2 3 4') == '0'\nassert solution('3 4 5') == '1'\nassert solution('2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n') == 0\nassert solution('1 2 3\\n') == 0\nassert solution('3 2 1\\n') == 0\nassert solution('3 2 1\\n') == 0\nassert solution('1 2 3\\n') == 0\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('1\\n') == '0'\nassert solution('3\\n') == '0'\nassert solution('2\\n2\\n') == '1'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1, 2, 3) == 0\nassert solution(2, 1, 3) == 1\nassert solution(4, 1, 4) == 1\nassert solution(5, 1, 5) == 0\nassert solution(6, 1, 6) == 1\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n') == 0\nassert solution('2 4 6 8 10\\n') == 0\nassert solution('3 9 11 12 15\\n') == 1\nassert solution('4 13 17 19 22 25\\n') == 1\nassert solution('5 15 19 22 25 28 32\\n') == 2\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == '3'\nassert solution('1 2 3 4 5 6 7') == '4'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3''') == '0'\nassert solution('''1\n2\n3''') == '0'\nassert solution('''1\n2\n3''') == '0'\nassert solution('''1\n2\n3''') == '0'\nassert solution('''1\n2\n3''') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\nassert solution('''4 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n13 14 15 16\n''') == '4'\nassert solution('''4 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n13 14 15 16\n''') == '4'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1 1') == None\nassert solution('1 2 3') == None\nassert solution('1 2 3 4 5 6') == None\nassert solution('2 2 3 2 1 1') == None\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'\nassert solution('4 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16\\n17 18 19 20') == '0'\nassert solution('10 4\\n1 6 3 4 5 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'\n\n\"\"\""
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == '0'\nassert solution('3 3') == '0'\nassert solution('3 2 1') == '6'\nassert solution('3 4') == '0'\nassert solution('3 4 3 2 1') == '2'"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\""
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'\n\n\n\"\"\""
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\nassert solution('''5 2\n1 2\n3 4\n5 6\n7 8\n9 10\n''') == '1'\nassert solution('''6 3\n1 2 3 4 5 6\n7 8 9 10 11\n12 13 14 15 16\n17 18 19 20 21\n22 23 24 25 26\n''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16') == '2'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9') == '6'\n\n\n\n------Solutions------\n\n##    Python3"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 100') == '5'\nassert solution('1\\n100') == '99'\nassert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('1\\n100') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('6\\n1 100\\n') == '99'\nassert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 100') == '99'\nassert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('1\\n1 100') == '99'\nassert solution('3\\n1 100 2 4') == '99'\nassert solution('1\\n1 2') == '2'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\n\n\n\n\"\"\""
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('5\\n1 100 3 4 2') == '1'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('4\\n1 1 1 1') == '1'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n5 10 2 3 14 5''') == '5'\nassert solution('''2\n1 100''') == '99'\nassert solution('''8\n2 2 3 2 2 3 4''') == '5'\nassert solution('''3\n1 1 2''') == '2'\nassert solution('''4\n1 1 2 1 2''') == '2'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('6\\n3 1 5 4 2 3') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n1 100') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\"\nassert solution(\"2\\n1 100\") == \"99\"\nassert solution(\"2\\n1 100\\n2 10\") == \"99\"\nassert solution(\"3\\n1 100\\n2 10\\n3 10\") == \"7\"\nassert solution(\"4\\n1 100\\n2 10\\n3 10\\n4 10\") == \"9\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('6\\n5 10 2 3 14 5\\n') == '5'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\n\"\"\""
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('3\\n0 0 0') == '0'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('9\\n0 0 0 0 1 0 0 1 0') == '2'\nassert solution('2\\n0 0') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('3\\n1 0 1') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 0') == '0'\nassert solution('1 0 1 0 1') == '2'\nassert solution('0 1 0 1 1 0') == '2'\nassert solution('1 1 1 1 1 1') == '3'\nassert solution('1 0 1 0 1') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '''2'''\nassert solution('''6''') == '''2'''\nassert solution('''7''') == '''3'''\nassert solution('''3''') == '''0'''\nassert solution('''0''') == '''0'''\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('3\\n0 0 0 0') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 0 1 0 1''') == '2'\nassert solution('''6\n0 1 0 1 1 0''') == '2'\nassert solution('''7\n1 0 1 1 1 0 1''') == '3'\nassert solution('''3\n0 0 0''') == '0'\nassert solution('''0\n0 0 0''') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('7') == '0'\nassert solution('16') == '0'\nassert solution('-1') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"11\") == \"\"\nassert solution(\"1112\") == \"\"\nassert solution(\"111112\") == \"\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\nprint(solution(8))\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"0\"\nassert solution(3) == \"1\"\nassert solution(4) == \"0\"\nassert solution(5) == \"0\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution(' ') is None\nassert solution('0') == '0'\nassert solution('4') == '0'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('10') == '2'\nassert solution('11') == '1'\nassert solution('12') == '2'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n brie hard\\n camembert soft\\n eta soft\\n goat soft\\n muenster soft\\n asiago hard\\n cheddar hard\\n gouda hard\\n swiss hard') == '3'\nassert solution('3\\n cheddar soft\\n gouda soft\\n emmental hard\\n cheddar hard\\n muenster soft\\n brie soft\\n asiago hard') == '4'\nassert solution('5\\n brie hard\\n parmesan soft\\n eta soft\\n goat soft\\n muenster soft\\n cheddar hard\\n asiago hard') == '4'\nassert solution('7\\n emmental hard\\n cheddar hard\\n gouda soft\\n swiss hard\\n brie soft\\n eta soft\\n parmesan soft') == '5'\nassert solution('1\\n gouda soft') == '1'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3\n\n'''"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\n') == '3'\nassert solution('5\\nlambaste soft\\nchai soft\\nbergamot soft\\nmacaroni soft\\n') == '4'\nassert solution('3\\nparmesan hard\\nemmal hard\\nedam hard\\ngouda hard\\n') == '3'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '1'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == 3\nassert solution('parmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nashiago hard') == 4\nassert solution('dummy') == 0\n\n'''"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '3'\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '4'\nassert solution('''1\neggs soft\n''') == '1'\nassert solution('''2\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '1'\nassert solution('''3\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '3'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\"\n\"chocolate\\n\"\n\"gouda soft\\n\"\n\"\\n\"\n\"\\n\"\n\"\\n\"\n\"\") == \"1\"\nassert solution(\"2\\n\"\n\"chocolate\\n\"\n\"gouda soft\\n\"\n\"chocolate\\n\"\n\"\\n\"\n\"\\n\"\n\"\") == \"2\"\nassert solution(\"6\\n\"\n\"parmesan hard\\n\"\n\"emmental hard\\n\"\n\"edam hard\\n\"\n\"colby hard\\n\"\n\"gruyere hard\\n\"\n\"asiago hard\\n\"\n\"\") == \"4\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9\\nbrie\\nsample\\n') == 3\nassert solution('6\\nparmesan\\n') == 4\nassert solution('3\\n') == 1\nassert solution('3\\n') == 1\nassert solution('3\\n') == 1\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard''') == '3'\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == '4'\nassert solution('''1\nantonia gouda''') == '1'\nassert solution('''2\nbrie hard\ngouda hard''') == '1'\nassert solution('''1\na soft''') == '1'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n0\\n1\\n0\\n1\\n1\\n') == '1 0 0 2'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '1 1 1 1 1'\nassert solution('1\\n1\\n1\\n1\\n1\\n2\\n') == '2 0 0 1'\nassert solution('2\\n0\\n2\\n1\\n2\\n1\\n') == '1 1 0 2'\nassert solution('2\\n1\\n2\\n1\\n2\\n1\\n0\\n') == '1 1 1 1 1'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2\\n'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\"\"\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nprint(solution('''8\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10 11\n'''))\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''5\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nprint(\"All Tests Passed\")"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n0 1 2 1\\n3 2 1 1\\n\"\n) == \"1 0 0 2\\n\"\nassert solution(\n    \"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\"\n) == \"0 0 0 1 0 2 4\\n\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''4\n1 2 3 4\n2 3 4 5\n''') == '1 2 4 3'\nassert solution('''7\n1 2 3 4 5 6 7\n2 3 4 5 6 7 8\n''') == '1 2 4 3 5 6 7'\nassert solution('''14\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\n2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '1 2 4 3 5 6 7 8 9 10 11 12 13'"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''10\n1 3 1 5 3 4 5 3 3 2 2 3 1 1\n3 2 1 3 1 2 3 3 1 1 2 3 2 1 3\n''') == '0 0 0 1 0 2 4'\nassert solution('''4\n1 3 4 0 2\n2 1 1 3 4\n3 4 1 2 1\n1 1 4 2 0\n''') == '0 0 1 0 2 3'\nassert solution('''8\n1 1 1 3 4 4 4 3 1 1\n4 2 3 4 1 2 4 1 3 4\n1 1 1 2 1 3 3 2 4 3\n3 1 3 3 1 4 3 3 4 3\n3 1 1 1 1 2 2 2 3 2\n4 2 3 3 3 1 1 2 3 1\n1 1 1 3 3 3 4 3 4 1\n3 1 3 1 3 1 1 1 2 1\n1 1 1 1 1 2 2 2 1 1\n''') == '0 0 1 0 2 2 3 3 4'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n0\\n0') == '1'\nassert solution('1\\n1\\n0\\n1') == '1'\nassert solution('1\\n0\\n0\\n0') == '0'\nassert solution('0\\n0\\n0\\n0') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(0) == 0\nassert solution(1) == 1\nassert solution(0) == 0\nassert solution(1) == 1\nassert solution(1) == 1\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\"\nprint(\"Test 1 passed\")\n\n-----Answer-----"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"1\\n0\\n1\\n1\") == \"1\"\nassert solution(\"0\\n1\\n0\\n0\") == \"1\"\nassert solution(\"0\\n0\\n0\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n\n-----\nIf you have passed the above test, the result data will be accepted.\n\"\"\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n1\n0''') == '0'\nassert solution('''0\n1\n1\n1''') == '1'\nassert solution('''1\n1\n1\n0''') == '1'\nassert solution('''1\n0\n1\n0''') == '1'\nassert solution('''1\n1\n0\n0''') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == 0\nassert solution('1') == 1\nassert solution('1') == 1\nassert solution('0') == 0\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"0\\n0\\n1\\n0\") == \"1\"\nassert solution(\"1\\n1\\n0\\n0\") == \"1\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\nassert solution('001') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == 0\nassert solution(\"1\\n1\\n0\\n0\") == 1\nassert solution(\"0\\n1\\n1\\n0\") == 0\nassert solution(\"1\\n0\\n1\\n0\") == 1\nassert solution(\"0\\n1\\n0\\n1\") == 0\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 0"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('100 15 80') == 'Yes'\nassert solution('1000 15 80') == 'No'\nassert solution('10 15 40') == 'Yes'\nassert solution('10 15 40') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('D,T,S') == 'Yes'\nassert solution('10,20,40') == 'No'\nassert solution('10,20,40') == 'Yes'\n\"\"\""
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 15 80') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('5 5 10') == 'Yes'\nassert solution('500 1000 1000') == 'No'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"500 0 30\") == \"No\"\nassert solution(\"5000 0 30\") == \"Yes\"\nassert solution(\"1050 0 30\") == \"No\"\nassert solution(\"5000 0 30\") == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000 15 80') == \"Yes\"\nassert solution('1000 15 82') == \"No\"\nassert solution('1000 15 81') == \"Yes\"\nassert solution('1060 1432 1103') == \"No\"\nassert solution('100 500 100') == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('100 5 5') == 'No'\nassert solution('1000 100 1000') == 'Yes'\nassert solution('1000 1000 1000') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000 15 80') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1000 15 80''') == 'Yes'\n\nassert solution(\n'''1000 14 54''') == 'No'\n\nassert solution(\n'''1000 15 80''') == 'No'\n\nassert solution(\n'''1000 14 81''') == 'Yes'\n\nassert solution(\n'''1000 14 81''') == 'Yes'"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'Yes'\nassert solution('3\\n29\\n3\\n-\\n29\\n3\\n3\\n3') == 'Yes'\nassert solution('4\\n5\\n15\\n17\\n30\\n30\\n30\\n30') == 'Yes'\nassert solution('4\\n5\\n15\\n17\\n30\\n30\\n30\\n30') == 'No'\nassert solution('3\\n5\\n15\\n15\\n30\\n30\\n30\\n30') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('56 90 54') == 'No'\nassert solution('56 90 54') == 'No'\nassert solution('59 70 57') == 'Yes'\nassert solution('59 70 57') == 'Yes'\nassert solution('99 77 17') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1\\n1 1 1\\n1 1 1') == 'Yes'\nassert solution('2 2 2\\n2 2 2\\n2 2 2') == 'Yes'\nassert solution('3 3 3\\n3 3 3\\n3 3 3') == 'Yes'\nassert solution('3 4 7\\n3 2 3\\n3 2 3') == 'No'\nassert solution('1 1 2\\n1 1 1\\n1 1 2') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A1 A2 A3\\nB1 B2 B3\\nC1 C2 C3\\nD1 D2 D3\") == \"Yes\"\nassert solution(\"A1 A2 A3\\nB1 B2 B3\\nC1 C2 C3\\nD1 D2 D3\\nE1 E2 E3\") == \"No\"\nassert solution(\"A1 A2 A3\\nB1 B2 B3\\nC1 C2 C3\\nD1 D2 D3\\nE1 E2 E3\\nF1 F2 F3\") == \"Yes\"\nassert solution(\"A1 A2 A3\\nB1 B2 B3\\nC1 C2 C3\\nD1 D2 D3\\nE1 E2 E3\\nF1 F2 F3\\nG1 G2 G3\") == \"Yes\"\nassert solution(\"A1 A2 A3\\nB1 B2 B3\\nC1 C2 C3\\nD1 D2 D3\\nE1 E2 E3\\nF1 F2 F3\\nG1 G2 G3\\nH1 H2 H3\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution('4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n3\\n4\\n4\\n1\\n2\\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1, 1, 2, 2, 3, 3\") == \"Yes\"\nassert solution(\"1, 1, 2, 2, 3, 4\") == \"No\"\nassert solution(\"1, 1, 2, 2, 3, 3\") == \"Yes\"\nassert solution(\"1, 1, 2, 2, 3, 4\") == \"No\"\nassert solution(\"1, 1, 2, 2, 3, 4\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('4 4\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 1 2 3\\n1 3 4 5\\n2 4 5 6\\n3 1 2 3') == 'Yes'\nassert solution('5 3\\n1 2 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 1 2 3\\n1 3 4 5\\n2 4 5 6\\n3 1 2 3') == 'No'\nassert solution('5 4\\n1 2 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 1 2 3\\n1 3 4 5\\n2 4 5 6\\n3 1 2 3') == 'Yes'\nassert solution('5 4\\n1 2 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 1 2 3\\n1 3 4 5\\n2 4 5 6\\n3 1 2 3') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1\\n2 2 2\\n3 3 3') == 'Yes'\nassert solution('1 1 1\\n2 2 2\\n3 3 3\\n4 4 4') == 'No'\nassert solution('5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5') == 'Yes'\nassert solution('1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6') == 'Yes'\nassert solution('1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"2 3 4 5\") == \"No\"\nassert solution(\"1 2 3 4 5\") == \"Yes\"\nassert solution(\"2 1 4 5 6 7 8\") == \"No\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 30\n'''"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n\n\"\"\"\n\nN, M = [int(x) for x in stdin.split(\" \")]\nA = [int(x) for x in stdin.split(\" \")]"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('41 2') == 30\nassert solution('5 6') == 30\nassert solution('1 2') == -1\n\n'''\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('41 2') == '30'\nassert solution('0 0') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 0') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 30\n\"\"\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('41 2\\n5 6') == '30'\nassert solution('5 7\\n6 7') == '-1'\nassert solution('2 2\\n1 1') == '0'\nassert solution('2 3\\n1 1') == '1'\nassert solution('3 4\\n1 1') == '1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2\\n5 6') == '30'\n\"\"\"\n\n\nfrom sys import stdin, stdout\n\nn, m = map(int, stdin.readline().strip().split())\na = sorted(map(int, stdin.readline().strip().split()))\n\nans = 0\nfor _ in range(n):\n    for _ in range(m):\n        if not ans and _ + a[0] > n:\n            break\n        ans = max(ans, _ + a[0])\n    a.pop(0)\n\nstdout.write(str(ans) if ans!= n else '-1')\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''41 2\n5 6''') == '30'\nassert solution('''4 2\n5 6\n5 4\n1 1''') == '-1'\nassert solution('''4 1\n5 6\n5 4\n1 1''') == '-1'\nassert solution('''4 4\n5 6\n5 4\n1 1''') == '-1'\nassert solution('''10 10\n10 9\n9 9\n9 8\n8 8\n8 7\n7 7\n7 6\n6 6\n6 5\n5 5\n5 4\n4 4\n4 3\n3 3\n3 2\n2 2\n2 1\n1 1\n1 0\n''') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('41 2\\n5 6\\n') == '30'\nassert solution('43 1\\n11 3\\n') == '-1'\nassert solution('21 2\\n1 3\\n') == '2'\nassert solution('11 3\\n1 3\\n') == '-1'\nassert solution('12 3\\n1 3\\n') == '-1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 5') == '5'\nassert solution('2 5') == '10'\nassert solution('3 5') == '15'\nassert solution('4 5') == '20'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 5''') == '5'\nassert solution('''0 1''') == '2'\nassert solution('''0 2''') == '4'\nassert solution('''1 2''') == '3'\nassert solution('''1 3''') == '6'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 6') == '6'\nassert solution('1 11') == '11'\nassert solution('2 22') == '22'\nassert solution('3 30') == '30'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2') == '2'\nassert solution('2 0') == '2'\nassert solution('1 0') == '100'\nassert solution('2 0') == '100'\nassert solution('0 5') == '5'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 5''') == '5'\nassert solution('''2 4''') == '2'\nassert solution('''3 3''') == '2'\nassert solution('''4 4''') == '4'\nassert solution('''5 4''') == '2'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 3\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"5 1\") == \"10\"\nassert solution(\"10 3\") == \"25\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 5''') == '5'\nassert solution('''1 1''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''2 2''') == '2'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5') == '5'\nassert solution('0 5') == '5'\nassert solution('0 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1\") == \"1\"\nassert solution(\"0 2\") == \"10\"\nassert solution(\"0 3\") == \"100\"\nassert solution(\"0 4\") == \"1000\"\nassert solution(\"0 5\") == \"10000\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('5\\n1 2 3 4 5') == '1'\nassert solution('2\\n1 2') == '1'\nassert solution('8\\n6 17 19 10 19 9 19 8 19 10 19 13 19 17 19 19') == '19'\nassert solution('9\\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9') == '9'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('7\\n6 8\\n9') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"6\\n3 1 4 1 6 3\") == \"2\"\nassert solution(\"7\\n4 1 2 3 5 1\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('3\\n7 4 8') == '2'\nassert solution('10\\n5 1 2 3 4 5 6 7 8 9 10') == '5'\nassert solution('10\\n5 1 3 4 5 6 7 8 9 10') == '1'\nassert solution('10\\n5 1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2 1') == '1'\nassert solution('7 6 8') == '2'\nassert solution('3 4 6') == '1'\nassert solution('7 6 7') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 6 8') == '2'\nassert solution('1 2 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 1 1') == '2'\nassert solution('2 2 2') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('6\\n7 6 8') == '2'\nassert solution('10\\n7 6 8') == '2'\nassert solution('100\\n7 6 8') == '2'\nassert solution('1000\\n7 6 8') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 6 8') == '2'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 6') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('7 6 8') == '2'\nassert solution('2 2 1') == '1'\nassert solution('5 5 1') == '5'\nassert solution('2 2 1 2') == '1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"2 3 1\") == \"3 1 2\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n1 1') == '2 1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2\\n3') == '2 3 1'\nassert solution('3\\n3 3\\n1 1') == '3 1 1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n2 1') == '2 1'\nassert solution('1\\n1') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1 2'\nassert solution('1\\n2') == '2 1'\nassert solution('2\\n3') == '3 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 1\\n') == '3 1 2\\n'\nassert solution('2\\n3\\n1\\n') == '3 1 2\\n'\nassert solution('1\\n2\\n3\\n') == '3 1 2\\n'\nassert solution('4\\n2 3 1 4\\n') == '3 1 2 4\\n'\nassert solution('1\\n1\\n1\\n') == '1 1 1\\n'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n1 1 1') == '1 1 1'\nassert solution('3\\n1 2 3') == '1 1 2 2'\nassert solution('3\\n1 2 3 4') == '1 1 2 2 3 3'\nassert solution('3\\n1 2 3 4 5') == '1 1 2 2 3 3 4'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1 2'\nassert solution('1\\n2') == '2 1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"4 7 2 4 1 4 3\") == \"4 1 4 3 2 7\"\nassert solution(\"5 4 2 4 1 5 2 3\") == \"4 1 4 2 5 2 3\"\nassert solution(\"8 5 2 4 8 4 3 8 4 3 7 1\") == \"4 1 4 2 8 3 8 5 7\"\nassert solution(\"7 3 1 2\") == \"3 1 2\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 7 100\\n') == '9'\nassert solution('1 100 10\\n') == '0'\nassert solution('1 1 1\\n') == '0'\nassert solution('1 100 10000\\n') == '0'\nassert solution('1 1 1\\n') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 11') == '0'\nassert solution('1 0 0') == '0'\nassert solution('12345 12345 12345') == '12345'\nassert solution('10000000000 1000000000 1000000000') == '1000000000000000000'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 0 0') == '0'\nassert solution('10 12345') == '12345'\n\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"1000000001 1 100\") == \"1\"\nassert solution(\"5 8 3\") == \"0\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 10') == '0'\nassert solution('5 7 3') == '4'\nassert solution('10 7 2') == '0'\nassert solution('3 1 9') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"10 7 100\") == \"9\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"10 7 100\") == \"9\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('10 1 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('10 0 100') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('2 5 7') == '4'\nassert solution('1000000 1000000 10000 1000') == '999999'\nassert solution('1000000 1000000 10000 1000') == '99999'\nassert solution('10000000 10000000 10000 1000') == '999999999'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 1\nassert solution('1 2 3 4') == 0\nassert solution('2 3') == 1\nassert solution('1 2 3') == 2\nassert solution('3 1') == 1\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 4') == '0'\nassert solution('1 2 4 5') == '2'\nassert solution('1 1 3') == '1'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 100\") == \"0\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 150\n150 140 100 200''') == '2'\nassert solution('''10 50\n1 2 3 4 5 6 7 8 9 10''') == '1'\nassert solution('''20 30\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20''') == '20'\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10''') == '10'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 4\") == \"0\"\nassert solution(\"2 4\") == \"2\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 150\n150 140 100 200'''\n) == '2'\n\nassert solution(\n'''4 150\n150 140 100 200'''\n) == '2'\n\nassert solution(\n'''1 10\n1'''\n) == '1'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('1 4') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1 2\\n1 1') == 'Yes'\nassert solution('1 1\\n1 2\\n1 1') == 'No'\nassert solution('2 3\\n3 2\\n1 3') == 'No'\nassert solution('2 3\\n3 2\\n3 2') == 'Yes'\nassert solution('4 5\\n1 2 2 3 4\\n3 3 4 4 4') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('1 1') == 'No'\nassert solution('4 1') == 'Yes'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('2 2') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 1''') == 'Yes'\nassert solution('''1 2''') == 'No'\nassert solution('''2 1''') == 'Yes'\nassert solution('''10 5''') == 'Yes'\nassert solution('''10 1''') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('5 2') == 'No'\nassert solution('1 3') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 1') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"100 100\") == \"No\"\nassert solution(\"8 2\") == \"Yes\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('1 2\\n3 4') == 'No'\nassert solution('1 1\\n1 1') == 'No'\n\"\"\"\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nA = list(map(int, sys.stdin.readline().split()))\n\nA.sort(reverse=True)"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"No\"\nassert solution(\"4 2\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"2 4\") == \"Yes\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"4 1\") == \"No\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''2 3 2\n..#\n###\n''') == '5'\nassert solution('''2 3 2\n..#\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''\\\n2 3 2\n..#\n###\n'''\n) == '5'\nassert solution(\n    '''\\\n4 2 2\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 2') == '5'\nassert solution('..#') == '5'\nassert solution('#') == '1'\nassert solution('#.#') == '1'\nassert solution('#.#.#') == '1'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('#.. #') == '1'\nassert solution('..#..') == '1'\nassert solution('##') == '1'\nassert solution('#.#') == '1'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''3 3 2\n..#\n###\n..#''') == '5'\nassert solution('''4 4 2\n.#.\n.#.\n.#.\n.#.\n''') == '8'\nassert solution('''4 4 3\n.#.\n.#.\n.#.\n.#.\n''') == '7'\nassert solution('''4 4 3\n..#\n.#.\n.#.\n.#.\n''') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4 3') == '5'\nassert solution('5 4 2') == '6'\nassert solution('2 3 2') == '5'\nassert solution('3 5 1') == '5'\nassert solution('2 5 1') == '4'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\") == \"5\"\nassert solution(\"1 2 2\\n#\\n#\") == \"1\"\nassert solution(\"1 2 2\\n#\\n#\") == \"0\"\nassert solution(\"1 1 1\\n#\\n#\") == \"1\"\nassert solution(\"1 1 1\\n#\\n#\") == \"0\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '2 3 2'\n    '..#'\n    '###') == '5'\nassert solution(\n    '2 3 2'\n    '..#'\n    '.#'\n    '###') == '5'\nassert solution(\n    '2 3 2'\n    '...#'\n    '.#'\n    '###') == '5'\nassert solution(\n    '2 3 2'\n    '...#'\n    '...#'\n    '###') == '5'\nassert solution(\n    '2 3 2'\n    '...#'\n    '...#'\n    '...#') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''2 3 4\n..#\n###''') == '0'\nassert solution('''2 1 1\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\") == \"5\"\nassert solution(\"1 1 2\") == \"5\"\nassert solution(\"2 3 2\") == \"5\"\nassert solution(\"1 1 2\") == \"5\"\nassert solution(\"1 1 2\") == \"5\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10000)\n\nfrom typing import Tuple, List, Set"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2020, 2040) == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2020 40') == '20'\nassert solution('2000 2') == '1'\nassert solution('2000 20') == '20'\nassert solution('2000 2000') == '0'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2020 2040''') == '2'\n'''\n\nfrom functools import reduce"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert stdin == '2020 2040\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"2020 2040\"\"\") == \"\"\"2\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2020 2040') == '2'\n\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2020 2040\") == \"2\"\nassert solution(\"2 2040\") == \"2\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AtCoder1') == 'WA'\nassert solution('AtCoder2') == 'WA'\nassert solution('AtCoder3') == 'WA'\nassert solution('AtCoder4') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AC') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('WeDont') == 'WA'\nassert solution('wEd') == 'WA'\nassert solution('WE') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'WA'\nassert solution('AC') == 'AC'\nassert solution('CaDe') == 'WA'\nassert solution('AtC') == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('caC') == 'AC'\nassert solution('ccaC') == 'AC'\nassert solution('CaC') == 'AC'\nassert solution('cCc') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AC') == 'AC'\nassert solution('WA') == 'WA'\nassert solution('A') == 'AC'\nassert solution('a') == 'AC'\nassert solution('ab') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('aCb') == 'WA'\nassert solution('A') == 'AC'\nassert solution('aCbC') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('abc') == 'WA'\nassert solution('tCAB') == 'AC'\nassert solution('tCAB') == 'WA'\nassert solution('tCAB') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"Hello\") == \"WA\"\nassert solution(\"HelloC\") == \"WA\"\nassert solution(\"\") == \"WA\"\nassert solution(\"A\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AC') == 'AC'\nassert solution('AtCoder') == 'AC'\nassert solution('Hjdfk') == 'WA'\nassert solution('AtCoder') == 'AC'\nassert solution('abcd') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'AC'\nassert solution('A') == 'AC'\nassert solution('AA') == 'AC'\nassert solution('AAa') == 'WA'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1214\", 4) == \"2\"\nassert solution(\"1333224444\", 4) == \"2\"\nassert solution(\"133333333322224444444444444444\", 4) == \"2\"\nassert solution(\"1234567890\", 4) == \"2\"\nassert solution(\"1214\", 5) == \"22\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 1) == '1'\nassert solution('1234567', 3) == '3'\nassert solution('1234567', 1) == '1'\nassert solution('1234567', 4) == '5'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[4]\n\n-----Note-----\n- If S is as long as the length of the string after 5 \\times 10^{15} days, then there is no need to change S each time.\n\"\"\""
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1214''') == '2'\nassert solution('''1214''') == '2'\nassert solution('''123456789''') == '7'\nassert solution('''123456789''') == '7'\nassert solution('''123456789''') == '7'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\", 4) == \"1\"\nassert solution(\"1214\", 4) == \"2\"\nassert solution(\"1222214444444444444444\", 4) == \"2\"\nassert solution(\"1222222221444444444444444444444444444444444444444444444444444444444444444444\", 4) == \"2\"\nassert solution(\"12222222214444444444444444444444444444444444444444444444444444444444444444\", 4) == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[5]\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"12\") == \"22\"\nassert solution(\"13\") == \"22\"\nassert solution(\"14\") == \"22\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('123456789', 5) == '5'\nassert solution('123456789', 1) == '1'\nassert solution('123456789', 2) == '2'\nassert solution('123456789', 3) == '3'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 4) == '2'\nassert solution('1214', 4) == '2'\nassert solution('1214', 4) == '2'\nassert solution('1214', 4) == '2'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3 4') == 'YES'\nassert solution('4\\n1 2 3 4') == 'NO'\nassert solution('5\\n2 3 4 1 5') == 'YES'\nassert solution('5\\n2 3 4 1 5') == 'NO'\nassert solution('5\\n4 3 2 1 5') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"5 2 3 4 1\") == \"NO\"\nassert solution(\"5 2 3 4 1\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == 'NO'\nassert solution('2\\n1\\n') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == 'NO'\nassert solution('3\\n1 2\\n2 3\\n') == 'NO'\nassert solution('3\\n1 2\\n2 3\\n4\\n') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2') == 'NO'\nassert solution('2\\n1 2') == 'NO'\nassert solution('2\\n1 1') == 'YES'\nassert solution('2\\n1 1 2') == 'NO'\nassert solution('2\\n1 1 1') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 4') == 'NO'\nassert solution('5\\n5 2 3') == 'YES'\nassert solution('5\\n5 2') == 'NO'\nassert solution('5\\n5') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 4 1') == 'YES'\n\nassert solution('5\\n2 1 4 3 5') == 'NO'\nassert solution('5\\n2 1 4 3 5') == 'NO'\n\nassert solution('5\\n1 2 4 3 5') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n3 2 4 1 5') == 'NO'\nassert solution('2\\n2 1') == 'NO'\nassert solution('3\\n2 3 1') == 'YES'\nassert solution('4\\n2 3 4 1') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('1\\n1') == 'YES'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'NO'\nassert solution('100\\n2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 'NO'\nassert solution('100\\n2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 2 3 4 1\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n5\n1 5 3 2 4\n''') == 'YES'\nassert solution('''\n10\n3 2 5 8 6 7 1 4 9\n''') == 'NO'\nassert solution('''\n10\n3 2 5 8 6 7 1 4 9\n''') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5 2 3 4 1''') == \"YES\"\nassert solution('''7\n1 2 3 4 5 6 7''') == \"NO\"\nassert solution('''3\n1 2 3''') == \"YES\"\nassert solution('''8\n1 2 3 4 5 6 7 8''') == \"NO\"\nassert solution('''50\n
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000000000000000000000000000000000') == '33'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\n\"\"\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('1') == None\nassert solution('101') == None\nassert solution('0123') == None\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000000000000000000000000000000000') == '33'\nassert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3121\") == 2\nassert solution(\"6\") == 1\nassert solution(\"1000000000000000000000000000000000\") == 33\nassert solution(\"201920181\") == 4\nassert solution(\"9\") == 1\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\nassert solution(\"999\") == \"0\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('12345678901234567890') == '9'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(3121) == \"2\"\nassert solution(6) == \"1\"\nassert solution(1000000000000000000000000000000000) == \"33\"\nassert solution(\"201920181\") == \"4\""
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == 2\nassert solution('1 2 3 4 -5') == 2\nassert solution('1 2 3 -4 5') == 2\nassert solution('1 2 3 -4 -5') == 0\nassert solution('1 2 3 -4 -5 -7') == 2\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"6\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2\\n'\nassert solution('0\\n0\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '0\\n'\nassert solution('0\\n-10\\n0 0 0 0 0\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '0\\n'\nassert solution('0\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2\\n'\nassert solution('0\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2\\n'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('2 4 7 11 3') == '2'\nassert solution('13 37 39') == '2'\nassert solution('1 2 -1') == '0'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input/1.txt') == '3'\nassert solution('input/2.txt') == '0'\nassert solution('input/3.txt') == '3'\nassert solution('input/4.txt') == '2'\nassert solution('input/5.txt') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '0'\nassert solution('3\\n1 2 3\\n-6 -12 6\\n') == '3'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('4\\n1 2 3 4\\n1 2 3 4\\n') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nfrom collections import deque\n\nN = int(input())\na = deque(map(int, input().split()))\nb = deque(map(int, input().split()))\n\nres = 0"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5\\n2 4 7 11 3\\n') == 2\nassert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == 2\nassert solution('3\\n13 37 39\\n1 2 3\\n') == 0\nassert solution('3\\n-1 -2 -3\\n-6 -12 6\\n') == 3\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == 2\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('code for cs') == '2'\nassert solution('abaca?b') == '5'\nassert solution('zabbbcc') == '5'\nassert solution('bambarbia') == '0'\nassert solution('hellocode') == '10'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\\nabcdefg\\neeeeffff\\n\") == \"5\"\nassert solution(\"9\\nbbbbccc\\nccccbbbb\\n\") == \"5\"\nassert solution(\"10\\nbbbbccc\\neeeeffff\\n\") == \"5\"\nassert solution(\"10\\nbbbbccc\\neeeeffff\\n\") == \"5\"\nassert solution(\"10\\ncccccc\\ncccccc\\n\") == \"5\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('codeforces\\ndodivthree\\n') == '5'\nassert solution('bambarbia\\nhellocode\\n') == '0'\nassert solution('code??????\\n??????test\\n') == '10'\nassert solution('a\\nabc\\n') == '1'\nassert solution('z\\nabc\\n') == '1'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"????\") == \"\"\nassert solution(\"?????\") == \"\"\nassert solution(\"??????\") == \"\"\nassert solution(\"??????????\") == \"\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('ab') == None\nassert solution('abcd') == None\nassert solution('abcda') == None\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('code??????') == '10'\nassert solution('hellocode') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '0'\nassert solution('code??????') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('a') == 0\nassert solution('codeforces') == 0\nassert solution('abcdefg') == 0\nassert solution('zabczcaabzczca') == 0\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('??') == 1\nassert solution('???') == 3\nassert solution('??????') == 9\nassert solution('??'*10) == 19\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n7\n4 1 2 2 1 5 3\n\"\"\") == \"\"\"\n3\n7 7\n2 3\n4 5\n\"\"\"\nassert solution(\n\"\"\"\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"\"\"\n2\n3 4\n1 1\n2 2\n\"\"\"\nassert solution(\n\"\"\"\n4\n1 1 1 1\n\"\"\") == \"\"\"\n4\n4 4\n1 1\n2 2\n\"\"\"\nassert solution(\n\"\"\"\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11\n\"\"\") == \"\"\"\n2\n3 4\n1 1\n2 2\n\"\"\"\nassert solution(\n\"\"\"\n1\n1\n\"\"\") == \"\"\"\n1\n1\n\"\"\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0') == '0'\nassert solution('1\\n0') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n2') == '2'\nassert solution('4\\n3') == '2'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1\\n1'\nassert solution('2\\n1') == '1\\n1'\nassert solution('3\\n1') == '1\\n1'\nassert solution('4\\n1') == '1\\n1'\nassert solution('5\\n1') == '1\\n1'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is None\nassert solution(\"2 3\") == \"2 3\"\nassert solution(\"2 1 2\") == \"2 3\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 2\") == \"1 2\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 1') == '1 1'\nassert solution('1 2 3') == '1 1'\nassert solution('1 2 3 4') == '1 2'\nassert solution('1 2 3 4 5') == '1 2'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n7\\n1 1 1 1 1\\n') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('1\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5\\n6 6\\n7 7'\nassert solution('1\\n4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2'\nassert solution('1\\n4\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n2 2\\n4 4'\nassert solution('1\\n4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"-5 -4 -3 -2 -1\") == \"\"\nassert solution(\"4 1 2 2 1 5 3\") == \"\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"\"\nassert solution(\"11\") == \"\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 2 1\\n') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5\\n6 6'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5\\n6 6'\nassert solution('3\\n1 1 1\\n') == '3\\n1 1\\n2 2\\n3 3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5\\n6 6'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\nassert solution('''6 2\n3 7 19 3 3''') == '0'\nassert solution('''7 2\n3 7 19 3 3''') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 11\\n45 1 10 12 11 7\\n') == '7'\nassert solution('5 2\\n3 7 19 3 3\\n') == '12'\nassert solution('4 2\\n2 78 4 10\\n') == '0'"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1210\"\n'''\n\n'''\n'''\n\nfrom sys import stdin\n\nn, k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\nprint(solution(input()))\n'''"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 11') == '7'\nassert solution('4 2') == '12'\nassert solution('5 2') == '0'\nassert solution('45 1 10 12 11 7') == '12'\nassert solution('1234') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '7'\nassert solution(input()) == '0'\nassert solution(input()) == '12'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 5') == '0'\nassert solution('4 4') == '7'\nassert solution('2 2') == '12'\nassert solution('3 3') == '18'\nassert solution('6 5') == '7'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\nassert solution('6 11\\n45 1 10 12 11 7\\n') == '7'\nprint(solution(''))\nassert solution('') == ''\n\"\"\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == '0'\nassert solution('1 2') == '1'\nassert solution('2 4') == '0'\nassert solution('2 3') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 5') == '9'\nassert solution('3\\n2 5') == '9'\nassert solution('3\\n2 3 3') == '7'\nassert solution('3\\n1 3 2') == '6'\nassert solution('3\\n1 2 3') == '6'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n2 5\n''') == \"9\"\nassert solution('''3\n5 3\n''') == \"8\"\nassert solution('''4\n2 4 3 7\n''') == \"13\"\nassert solution('''10\n5 3 9 8 12 7 4 6 10 0\n''') == \"43\"\n'''"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n\") == \"9\"\nassert solution(\"4 6\\n\") == \"9\"\nassert solution(\"2 1\\n\") == \"1\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"1 2\\n\") == \"2\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3 1 2\") == \"5\"\nassert solution(\"3 1 1 2\") == \"5\"\nassert solution(\"3 1 2\") == \"4\"\nassert solution(\"3 1 3\") == \"5\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 3') == '4'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n3\\n5') == '8'\nassert solution('1\\n2\\n3\\n4\\n5') == '10'\nassert solution('1\\n3\\n5\\n9') == '17'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 5\n''') == '9'\nassert solution('''5\n-6 1 -5 4\n''') == '11'\nassert solution('''3\n2 1\n''') == '2'\nassert solution('''9\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9\"\n\"\"\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input) == '110'\n\"\"\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\n\nassert solution('''2 3 2\n1 3 3 100\n1 2 2 10''') == '110'\n\nassert solution('''3 4 1\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\n\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\n\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n3 4 3 100\n1 2 2 10\n2 3 2 10''') == '110'"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 4\\n1 2 2 10\\n2 3 2 10\\n') == 110\nassert solution('1 3 4\\n1 2 2 10\\n2 3 2 10\\n') == 110\nassert solution('1 3 4\\n1 2 2 10\\n1 1 1 10\\n1 1 1 10\\n') == 90\nassert solution('1 2 1\\n1 1 1 1\\n1 1 1 1\\n') == 0\nassert solution('1 2 1\\n1 1 1 1\\n1 1 1 1\\n') == 0\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[33:38]\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 2 10') == 110\nassert solution('1 2 2 3') == 0\nassert solution('1 2 3 2') == 0\nassert solution('1 3 3 3') == 0\nassert solution('1 3 3 4') == 110\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\nassert solution('1 2 2 10\\n1 3 3 100\\n1 2 2 10') == '110'\nassert solution('1 2 2 10\\n1 3 3 100\\n1 2 2 10\\n1 2 2 10') == '110'\nassert solution('1 2 2 10\\n1 3 3 100\\n1 2 2 10\\n1 1 2 10') == '110'\nassert solution('1 2 2 10\\n1 3 3 100\\n1 2 2 10\\n2 1 1 1\\n1 1 1 1') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3 4 3\"\"\"\n\"\"\"1 3 3 100\"\"\"\n\"\"\"1 2 2 10\"\"\"\n\"\"\"2 3 2 10\"\"\"\n) == \"110\"\nassert solution(\n\"\"\"1000000 10000000 1000000\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"1000000 10000000 1000000\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"1000000 10000000 1000000\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"1000000 10000000 1000000\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n\"\"\"1 1 1 1 1\"\"\"\n) == \"1\""
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10''') == '69'\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n1 3 3 100\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10''') == '109'\nassert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n1 3 3 100\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3 2 10\n1 3 3 1\n2 2 2 10\n3 3"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '110'\nassert solution('2 3 2 10') == '110'\nassert solution('1 2 1 1') == '0'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == str(solution(input))\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4 6 3') == 5\nassert solution('2 4 2') == 0\nassert solution('1 1 1 1 1') == 0\nassert solution('1 1 1 1 1 1') == 0\nassert solution('1 1 1 1 1 1') == 0\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4 6 3') == '5'\n\nimport sys\nassert sys.getsizeof(solution(sys.stdin.read())) < 1000, \"There is a hidden order in execution\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 4 6 3') == '5'\nassert solution('1 4 6 0') == '5'\nassert solution('1 4 6 3') == '5'\nassert solution('1 4 6 3') == '5'\nassert solution('1 4 6 0') == '5'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n6\\n3\\n') == '5'\n\"\"\"\n\nN = int(input())\nA = [int(a) for a in input().split()]\n\nmax_diff = abs(A[0] - A[1])\nfor i in range(1, N):\n    if abs(A[i]-A[i-1]) > max_diff:\n        max_diff = abs(A[i]-A[i-1])\nprint(max_diff)\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"0 0\\n1 0\\n0 1\\n\") == \"2.276142\"\nassert solution(\n    \"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\n    \"1\\n1\\n\") == \"1\"\nassert solution(\n    \"2\\n1 1\\n0 1\\n1 1\\n\") == \"3\"\nassert solution(\n    \"2\\n2 2\\n2 2\\n2 2\\n\") == \"5\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n0') == '2.276042'\nassert solution('1\\n1') == '4.4721359549995796'\nassert solution('2\\n0 0') == '1.4142135623730951'\nassert solution('2\\n1 0') == '1.7320508075688772'\nassert solution('2\\n2 0') == '3.1622776601683795'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == '2.276142'\nassert solution('1 0') == '3.41421356237'\nassert solution('2 1') == '5.0'\nassert solution('1 1') == '4.0'\nassert solution('1 2') == '1.41421356237'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0\n1 0\n0 1\n''') == '2.2761423749'\nassert solution('''3\n0 0\n1 0\n0 1\n''') == '2.2761423749'\nassert solution('''3\n-1000 1000\n-100 1\n-10 0\n-1 1\n-1 -1\n1 1\n1 -1\n1000 1000\n''') == '1.0'\nassert solution('''5\n0 0\n1 0\n1 1\n-1 1\n1 -1\n''') == '3.41421356237'\n'''\nassert solution('''6\n-10 1\n-10 1\n-1 1\n1 -1\n1 -1\n-1 1\n''') == '1.3846153846'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\"\n\"\"\"\nimport math\nimport sys\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n0 0\n1 0\n0 1\n\"\"\"\n) == '2.2761423749'\n\nassert solution(\n\"\"\"4\n2 2\n-2 -2\n0 0\n1 1\n1 -1\n\"\"\"\n) == '3.0'\n\nassert solution(\n\"\"\"5\n2 2\n0 0\n1 1\n-1 1\n-1 -1\n2 2\n\"\"\"\n) == '3.25'\n\nassert solution(\n\"\"\"6\n2 2\n0 0\n1 1\n-1 1\n-1 -1\n2 2\n-2 -2\n\"\"\"\n) == '3.5'\n\nassert solution(\n\"\"\"7\n3 3\n0 0\n1 1\n-1 1\n-1 -1\n2 2\n0 0\n-2 -2\n\"\"\"\n) == '4.2857142857'"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\") == \"2.2761423749\"\nassert solution(\"1 0\") == \"1.41421356237\"\nassert solution(\"0 1\") == \"2.8284271247\"\nassert solution(\"2 4\") == \"5.65685424949\"\nassert solution(\"1 1\") == \"1.41421356237\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n1 0\\n0 1\\n') == '2.2761423749'\nassert solution('1 1\\n1 1\\n') == '4.0'\nassert solution('0 0\\n0 0\\n0 0\\n') == '0'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('-1 1\\n1 1\\n') == '-2'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '1'\nassert solution('0 1') == '1'\nassert solution('1 1') == '0'\nassert solution('0 2') == '2'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.276142...\"\n\"\"\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12 4') == '4'\nassert solution('34 25') == '12'\nassert solution('5 5') == '0'\nassert solution('4 7') == '0'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12 4') == '4'\nassert solution('4 6') == '4'\nassert solution('4 1') == '0'\nassert solution('1 0') == '0'\nassert solution('100 6') == '10'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 4\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('2 5') == '3'\nassert solution('3 6') == '3'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"12 4\") == \"4\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"13 4\") == \"3\"\nassert solution(\"2 4\") == \"0\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12 4') == '4'\nassert solution('5 4') == '10'\nassert solution('15 5') == '10'\nassert solution('3 2') == '1'\nassert solution('3 4') == '7'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 4') == '0'\nassert solution('1 10') == '9'\nassert solution('1 10 3') == '6'\nassert solution('3 4') == '6'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 4') == '4'\nassert solution('7 4') == '6'\nassert solution('13 4') == '10'\nassert solution('5 4') == '8'\nassert solution('11 4') == '14'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10000') == '3'\n\"\"\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"100\") == \"3\"\nassert solution(\"101\") == \"4\"\nassert solution(\"1000\") == \"5\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10000') == 3\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"123\") == \"6\"\nassert solution(\"1000\") == \"10\"\nassert solution(\"10000\") == \"3\"\nassert solution(\"100000\") == \"100\"\nassert solution(\"1000000\") == \"1000\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '10000\\n') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10000') == '3'\nassert solution('1000000000') == '0'\nassert solution('100000000000') == '0'\nassert solution('1000000000000') == '0'\nassert solution('1000000000000000') == '0'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '3'\nassert solution('10000\\n') == '3'\nassert solution('100000\\n') == '3'\nassert solution('100000\\n') == '3'\nassert solution('100000000\\n') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10000') == '3'\n\n'''\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000') == '3'\nassert solution('100') == '2'\nassert solution('10') == '1'\nassert solution('01') == '1'\nassert solution('001') == '1'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10000') == '3'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('2 3\\n2 1 3\\n2 3 2') == '0'\nassert solution('4 5\\n1 4 2 2 2\\n4 1 2 2 2\\n2 1 2 2 2\\n2 1 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2') == '1'\nassert solution('3 3\\n1 3 2\\n2 3 2\\n1 3 2') == '1'\nassert solution('4 4\\n1 4 2 2 2\\n4 1 2 2 2\\n2 1 2 2 2\\n2 1 2 2 2\\n2 1 2 2 2\\n2 1 2 2 2') == '0'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\\n3 2 3\\n2 3 3\\n2 3 3') == '1'\nassert solution('3 4\\n3 1 2 3\\n2 3 2\\n3 2 3\\n2 3 3\\n2 3 3') == '3'\nprint(solution(stdin))\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 1\nassert solution('3 4') == 1\nassert solution('2 3 2') == 1\nassert solution('1 2 3 4 5 6 7 8 9 10') == 1\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 1\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"Katsusando loves omelette rice.\") == \"1\"\nassert solution(\"Katsusando loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\") == \"15\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"3 1 2 3\") == \"1\"\nassert solution(\"2 3 2\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 1 3') == '1'\nassert solution('2 3\\n2 3 2\\n2 3 2') == '1'\nassert solution('3 2\\n3 1 2') == '0'\nassert solution('3 2\\n2 1 3\\n2 3 2') == '2'\nassert solution('3 2\\n1 2 3\\n3 2 1') == '3'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\nassert solution('''4 4\n2 1 3\n3 1 2 3\n2 3 2\n2 3 2''') == '0'\nassert solution('''5 3\n2 1 3\n3 1 2 3\n2 3 2\n2 3 2''') == '3'\nassert solution('''6 5\n2 1 3\n3 1 2 3\n2 3 2\n2 3 2\n2 3 2''') == '3'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4') == '1'\nassert solution('3 4') == '2'\nassert solution('2 3') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 2') == '0'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 1\nassert solution('3 1 2 3') == 1\nassert solution('2 3 2') == 1\n'''\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == 0.0\nassert solution(\"1\") == 0.0\nassert solution(\"2\") == 0.5\nassert solution(\"3\") == 0.5\nassert solution(\"4\") == 0.25\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0.5'\nassert solution('3') == '0.6666666667'\nassert solution('4') == '1.0'\nassert solution('5') == '0.636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('3') == '0.50000'\nassert solution('1') == '0.500000'\nassert solution('0') == '0'\nassert solution('2') == '0.500000'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n') == '0.5000000000'"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '0.5'\nassert solution('2\\n') == '0.25'\nassert solution('3\\n') == '0.16666666666666666'\nassert solution('4\\n') == '0.0833333333333333333333333333'\nassert solution('5\\n') == '0.04166666666666666666666666666667'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n') == 0\nassert solution('2\\n') == 0.5\nassert solution('4\\n') == 0.5\nassert solution('6\\n') == 0.5\n\nassert solution('2\\n') == 0.5\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('1') == '0.0'\nassert solution('2') == '0.5'\nassert solution('3') == '0.5'\nassert solution('4') == '0.5000000000'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(4) == 0.5\nassert solution(5) == 0.25\nassert solution(10) == 0.125\nassert solution(100) == 0.0625\nassert solution(1000) == 0.005"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '0.5'\nassert solution('10') == '0.1'\nassert solution('1000') == '0.001'\nassert solution('100000') == '0.0001'\nassert solution('999999999') == '0.00001'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n2 0') == 2\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == 1\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 1\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 1\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 1\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"4\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"3\"\nassert solution(\"5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"6\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 0\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 0\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 0\\n1\\n1 1\\n1\\n2 0\\n') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT1) == OUTPUT1\nassert solution(SAMPLE_INPUT2) == OUTPUT2\n\n\"\"\""
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\") == \"2\"\nassert solution(\"2\\n2\\n2\") == \"2\"\nassert solution(\"3\\n3\\n3\") == \"3\"\nassert solution(\"3\\n2\\n2\\n1\") == \"2\"\nassert solution(\"3\\n3\\n3\\n2\") == \"3\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\\n3\\n2 0\\n1 1\\n2 1\\n1 1 1\\n1\\n2 0\\n1 1 2\\n1 1 2\\n1 1 1\\n1\\n1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''\n4\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''\n4\n1\n2 2\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''\n6\n1\n2 2\n1\n1 1\n1\n2 0\n''') == '3'\nassert solution('''\n8\n1\n2 2\n1\n1 1\n1\n2 0\n''') == '4'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split()[0]\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('4\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\nassert solution('6\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '4'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\nnikoandsolstice\\n') == 'nikoand...'\nassert solution('7\\nnikoandsolstice\\n') == 'nikoand...'\nassert solution('8\\nnikoandsolstice\\n') == 'nikoand...'\nassert solution('1\\nabcde\\n') == 'abcde'\nassert solution('1\\nabcde\\n') == 'abcde'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('hello') == 'hello'\nassert solution('hello world') == 'hello world'\nassert solution('nikoandsolstice') == 'nikoand...'\nassert solution('nikoandsolstice') == 'nikoand...'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\nHello World') == 'Hello World'\nassert solution('1\\nHello World') == 'Hello World'\nassert solution('1\\nHello World') == 'Hello World'\nassert solution('1\\nHello World') == 'Hello World'\nassert solution('1\\nHello World') == 'Hello World'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n2\nnikoandsolstice\n'''\n) == 'nikoand...'\n\nassert solution(\n'''\n8\nnikoandsolstice\n'''\n) == 'nikoand...'\n\nassert solution(\n'''\n100\nnikoand...\n'''\n) == 'nikoand...'\n\nassert solution(\n'''\n10\nnikoandsolstice\n'''\n) == 'nikoand...'\n\nassert solution(\n'''\n10\nnosklo\n'''\n) == 'nosklo'"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\n\n------------------------------------------------------------------------------------------------------------------------------------------\n\nCreate a function that will take a list of numbers and return the sum of all even numbers in the list."
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\nnikoandsolstice\\n') == 'nikoand...'\nassert solution('7\\nnikoandsolstice\\n') == 'nikoand...'\n\"\"\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('7\\nsomesomelongstring') =='somesomelongstring'\nassert solution('7\\n') == '\\n'\nassert solution('0') == ''\nassert solution('1') == '\\n'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\nhello') == 'hel'\nassert solution('3\\nhello') == 'helo'\nassert solution('4\\nhello') == 'helo'\nassert solution('1\\nab') == 'a'\nassert solution('10\\nab') == 'a'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('5\\nnikoandsolstice') == 'nikoand...'\nassert solution('1\\nnikoandsolstice') == 'nikoans...'\nassert solution('2\\nnikoandsolstice') == 'nikoans...'\nassert solution('3\\nnikoandsolstice') == 'nikoans...'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"nikoandsolstice\") == \"nikoand...nikoand...nikoand...\"\nassert solution(\"stefano\") == \"ste...fano\"\nassert solution(\"matt\") == \"mat\"\nassert solution(\"mitchell\") == \"mitchell\"\nassert solution(\"camelot\") == \"camelot\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == solution(stdin)\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"tooth\") == \"teeth\"\nassert solution(\"cat\") == \"cats\"\nassert solution(\"person\") == \"persons\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"hello\") == \"hellos\"\nassert solution(\"tomato\") == \"tomatoes\"\nassert solution(\"order\") == \"orders\"\nassert solution(\"goat\") == \"goats\"\n\nprint(\"all tests passed\")\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('apple') == 'apples'\nassert solution('appl') == 'apples'\nassert solution('applz') == 'apples'\nassert solution('applzs') == 'apples'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"apples\") == \"apples\"\nassert solution(\"fruity\") == \"fruitties\"\nassert solution(\"taft\") == \"tafts\"\nassert solution(\"hammer\") == \"hammers\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('brass') == 'brasses'\nassert solution('tack') == 'tacks'\nassert solution('tac') == 'tacs'\nassert solution('tick') == 'ticks'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('kiwi') == 'kiwis'\nassert solution('watermelon') == 'watermelons'\nassert solution('snail') =='snails'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''a''') == '''a'''\nassert solution('''apples''') == '''apples'''\nassert solution('''banana''') == '''bananas'''\nassert solution('''bit''') == '''bits'''\nassert solution('''bee''') == '''bees'''\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('1 2') == '0'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '0'\nassert solution('3 2\\n2\\n1 3\\n1\\n2\\n') == '2'\nassert solution('3 2\\n2\\n1 3\\n1\\n2\\n') == '0'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 2\\n2\\n1 2\\n1') == '2'\nassert solution('3 2\\n2\\n1 2\\n1') == '0'\nassert solution('3 2\\n2\\n1 2\\n1') == '0'\nassert solution('3 2\\n2\\n1 3\\n1') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\") == \"1\"\nassert solution(\"4 5\\n2\\n3 4\\n5 3\\n2\\n4 2\") == \"4\"\nassert solution(\"3 2\\n2\\n1 3\\n1\") == \"1\"\nassert solution(\"5 4\\n2\\n1 3\\n1\\n1\\n3\\n3\\n2\\n2\") == \"3\"\nassert solution(\"3 2\\n2\\n1 3\\n1\") == \"1\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1') == '1'\nassert solution('3 4\\n2\\n1 3\\n1\\n2\\n1 2\\n3\\n1') == '3'\nassert solution('5 4\\n2\\n1 3\\n1\\n2\\n1 2\\n1 3\\n1\\n2\\n1 2\\n1 3\\n1\\n3\\n1') == '2'\nassert solution('8 4\\n2\\n1 3\\n1\\n2\\n1 2\\n1 3\\n1\\n2\\n1 2\\n1 3\\n1\\n3\\n1') == '5'\nassert solution('8 4\\n2\\n1 3\\n1\\n2\\n1 2\\n1 3\\n1\\n2\\n1 2\\n1 3\\n1\\n3\\n1') == '6'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('2') == '0'\nassert solution('3 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split(\"\\n\")[2]\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\naabbbbaaca''') == '5'\nassert solution('''10\naabbbbaaca''') == '5'\nassert solution('''10\naabbbbaaca''') == '5'\nassert solution('''10\naabbbbaaca''') == '5'\nassert solution('''10\naabbbbaaca''') == '5'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'abc'\nassert solution('aabbbbaaca') == 'abaca'\nassert solution('aabbbbaaca') == 'abaca'\nassert solution('bbbbbbbbaa') == 'bbbbbbbbaa'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('abcabc') == '3'\nassert solution('abcabcab') == '2'\nassert solution('aabbbbaaca') == '5'\nassert solution('aaabbb') == '5'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('bbaaaa') == '3'\nassert solution('aabbbbbbb') == '3'\nassert solution('aa') == '2'\nassert solution('aab') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('baaaa') == '1'\nassert solution('baaaaabaaaa') == '3'\nassert solution('baaaaaaa') == '1'\nassert solution('baaaaaaaaaa') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aabbbbb') == '8'\nassert solution('abaaaaa') == '3'\nassert solution('a') == '1'\nassert solution('ab') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aaaaaa') == '1'\nassert solution('aaaaaaaaaaaaa') == '11'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == '127'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == '140'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"aabbbbaaca\") == \"5\"\nassert solution(\"aabbbbaa\") == \"3\"\nassert solution(\"aabbbbbbaaa\") == \"5\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aabbbbaaab') == '8'\nassert solution('aabbbbaaaa') == '2'\nassert solution('aabbbbaaaba') == '2'\nassert solution('aabbbbaabab') == '2'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('2 3 3') == '4'\nassert solution('3 3 3') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 2') == '0'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nN = int(input())\na = [int(x) for x in input().split()]\n\nres = 0\n\nfor i in range(N):\n    while a[i] % 2 == 0:\n        a[i] /= 2\n        res += 1\n\n    while a[i] % 3 == 0:\n        a[i] /= 3\n        res += 1\n\nprint(res)\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n5 2 4\"\"\") == \"3\"\nassert solution(\"\"\"1\n1\"\"\") == \"1\"\nassert solution(\"\"\"1\n2\"\"\") == \"2\"\nassert solution(\"\"\"1\n3\"\"\") == \"3\"\nassert solution(\"\"\"3\n3 3 3\"\"\") == \"1\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_out\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\") == 1\nassert solution(\"5 2 4\") == 3\nassert solution(\"3\") == 1\nassert solution(\"10 2 1\") == 2\nassert solution(\"4 9 2\") == 3\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 2 4''') == '3'\nassert solution('''3\n5 2 4''') == '3'\nassert solution('''5\n1 1 1 1 1''') == '1'\nassert solution('''1\n1''') == '1'\nassert solution('''5\n1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 2 4') == '3'\nassert solution('5\\n5 3') == '3'\nassert solution('5\\n5 4') == '3'\nassert solution('5\\n5 3 4') == '3'\nassert solution('5\\n5 2 4 5') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n5 2 4\n''') == '3'\nassert solution(\n'''\n1\n1\n''') == '0'\nassert solution(\n'''\n10\n1 1 1 1 1 1 1 1 1 1\n''') == '10'\nassert solution(\n'''\n5\n1 2 4 5 7\n''') == '5'\nassert solution(\n'''\n1\n9 9\n''') == '0'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('2\\n1 2') == '1'\nassert solution('5\\n5 5 5 5 5') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '3'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n5 2 4\n\"\"\") == \"3\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"1\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"2\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"1\n2\n3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3') == '2'\n\"\"\"\n\nn, m, l, k = map(int, stdin.split())\n\nprint(m*(l - k) + n*(k - 1))\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 1 1 3\"\n) == \"2\"\nassert solution(\n    \"2 3 1 3\"\n) == \"5\"\nassert solution(\n    \"2 3 3 3\"\n) == \"0\"\nassert solution(\n    \"2 1 2 3\"\n) == \"2\"\nassert solution(\n    \"2 3 1 3\"\n) == \"5\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 1 3') == \"2\"\nassert solution('1 0 1 2') == \"3\"\nassert solution('10 10 10 10') == \"0\"\nassert solution('3 2 2 3') == \"3\"\nassert solution('2 2 2 2') == \"4\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 1 -1 3') == '2'\nassert solution('2 1 0 3') == '2'\nassert solution('2 -1 0 3') == '2'\nassert solution('2 -1 -1 3') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3') == 2\nassert solution('2 1 -1 3') == 2\nassert solution('1 1 1 1') == 5\nassert solution('1 -1 -1 -1') == 0\nassert solution('0 0 0 0') == 10\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 2 1 3') == '5'\nassert solution('2 1 1 2') == '4'\nassert solution('2 2 2 3') == '4'\nassert solution('2 1 1 3') == '5'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 5\") == \"No\"\nassert solution(\"4 5\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 8''') == 'Yes'\nassert solution('''1 0''') == 'No'\nassert solution('''0 0''') == 'Yes'\nassert solution('''1 100''') == 'Yes'\nassert solution('''3 0''') == 'No'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"3 8\n\"\"\") == 'Yes'\nassert solution(\n    \"\"\"2 3\n\"\"\") == 'No'\nassert solution(\n    \"\"\"8 4\n\"\"\") == 'Yes'\nassert solution(\n    \"\"\"8 3\n\"\"\") == 'No'\nassert solution(\n    \"\"\"1 100\n\"\"\") == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('2 6') == 'No'\nassert solution('2 7') == 'No'\nassert solution('3 7') == 'No'\nassert solution('1 6') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 8') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('5 5') == 'No'\nassert solution('2 2') == 'No'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 8''') == \"Yes\"\nassert solution('''5 1''') == \"Yes\"\nassert solution('''100 5''') == \"No\"\nassert solution('''1 5''') == \"No\"\nassert solution('''5 50''') == \"No\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 8\") == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 8\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 8') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2\\n1 3\") == \"2\"\nassert solution(\"2 3\\n1 3\\n1 2\") == \"1\"\nassert solution(\"2 3\\n1 3\\n2 3\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 3') == '2'\nassert solution('3 3') == '2'\nassert solution('3 3') == '2'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n1 2\") == \"2\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 3\n1 2\n1 3\n2 3\"\"\") == \"2\"\nassert solution(\"\"\"3 3\n1 2\n1 3\n2 3\"\"\") == \"2\"\nassert solution(\"\"\"3 3\n1 2\n2 3\n2 1\"\"\") == \"3\"\nassert solution(\"\"\"6 6\n1 2\n1 4\n2 4\n2 3\n2 4\n5 2\n5 4\n5 3\n5 6\"\"\") == \"8\"\nassert solution(\"\"\"6 6\n1 2\n1 4\n2 4\n2 3\n2 4\n5 2\n5 4\n5 3\n5 6\"\"\") == \"8\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3''') == \"2\"\nassert solution('''3 3\n1 2\n1 3\n2 3\n1 3''') == \"2\"\nassert solution('''3 3\n1 2\n1 3\n2 3\n2 1''') == \"2\"\nassert solution('''3 3\n1 2\n1 3\n2 3\n3 1''') == \"2\"\nassert solution('''3 3\n1 2\n1 3\n2 3\n3 1\n2 1''') == \"2\"\n'''\n    pass\n\n## Solution\n\n'''\nimport sys\nfrom collections import defaultdict\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 3\n1 2\n1 3\n2 3\"\"\") == \"2\"\nassert solution(\"\"\"3 3\n1 2\n1 3\n2 3\n2 3\"\"\") == \"2\"\nassert solution(\"\"\"3 2\n1 2\n2 3\"\"\") == \"1\"\nassert solution(\"\"\"3 2\n1 2\n2 3\n1 3\"\"\") == \"2\"\nassert solution(\"\"\"3 2\n2 3\n1 3\"\"\") == \"2\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4') == '3'\nassert solution('5 4') == '4'\nassert solution('5 5') == '5'\n\nprint('Testcase 1: Passed!')\n\nassert solution('3 1') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('1 2') == '1'\nassert solution('1 3\\n2 3') == '2'\nassert solution('1 2\\n2 3') == '1'\nassert solution('1 2\\n2 3\\n1 3') == '2'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 3') == '5'\nassert solution('5 3') == '11'\nassert solution('6 3') == '8'\nassert solution('7 3') == '13'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 2') == '18'\nassert solution('5 2') == '18'\nassert solution('5 2') == '18'\nassert solution('5 2') == '18'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n        \"5 2\"\n    ) == \"18\""
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"5 6\") == \"-1\"\nassert solution(\"3 5\") == \"6\"\nassert solution(\"11 5\") == \"-1\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '3'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '18'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 0') == '0'\nassert solution('-10 0') == '0'\nassert solution('100 100') == '0'\nassert solution('-100 100') == '0'\nassert solution('1000 100') == '0'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"18\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"20 -100\") == \"18\"\nassert solution(\"10000000 -1000000000\") == \"18\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n''') == '18'\nassert solution('''10 0\n''') == '0'\nassert solution('''5 4\n''') == '9'\nassert solution('''20 10\n''') == '1'\nassert solution('''6 4\n''') == '9'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18'\nassert solution('1 1') == '1'\nassert solution('7 2') == '20'\nassert solution('2 1') == '1'\nassert solution('5 3') == '13'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('15') == '60'\n\nassert solution('0') == '0'\n\nassert solution('0\\n0') == '0'\n\nassert solution('-15\\n0') == '0'\n\nassert solution('3\\n0') == 'Fizz'"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('15') == 60\nassert solution('10') == 10\nassert solution('1') == 1\nassert solution('100') == 43\nassert solution('3') == 3\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('100') == '11'\nassert solution('111') == 'Fizz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('15') == '60'\nassert solution('1') == '1'\nassert solution('-1') == '0'\nassert solution('-3') == '0'\nassert solution('3') == 'Fizz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('11') == 'Fizz'\nassert solution('111') == 'Fizz'\nassert solution('1111') == 'Fizz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('15') == '60'\nassert solution('1000') == '5050'\nassert solution('15000') == '45105'\nassert solution('9001') == '45105'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('15') == '60'\n'''"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('15') == 60\nassert solution('12') == 12\nassert solution('14') == 14\nassert solution('16') == 16\nassert solution('6') == 6\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 7 10 6 5\") == \"8\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5''') == '8'\nassert solution('''6 7 10 6 5''') == '8'\nassert solution('''1 2 3 4 5''') == '1'\nassert solution('''1 2 3 4 5 6 7''') == '1'\nassert solution('''1 3 5 7 9''') == '1'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"8\"\nprint(\"Test case 1 passed.\")\n\nstdin = \"\"\"\n1 3\n1 2\n\"\"\"\nassert solution(stdin) == \"1\"\nprint(\"Test case 2 passed.\")\n\nstdin = \"\"\"\n4 3\n5 4 2 1\n\"\"\"\nassert solution(stdin) == \"3\"\nprint(\"Test case 3 passed.\")\n\nstdin = \"\"\"\n0 2\n3 4\n\"\"\"\nassert solution(stdin) == \"4\"\nprint(\"Test case 4 passed.\")\n\nstdin = \"\"\"\n0 2\n-1 -1\n\"\"\"\nassert solution(stdin) == \"2\"\nprint(\"Test case 5 passed.\")\n\nstdin = \"\"\"\n1 3\n-10 -10\n\"\"\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('4\\n2\\n3') == '2'\nassert solution('6\\n4\\n3') == '4'\nassert solution('1\\n3\\n4') == '3'\nassert solution('2\\n1\\n4') == '3'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == 2\nassert solution(\"2 3\") == 2\nassert solution(\"2 1\") == 2\nassert solution(\"2 1\") == 2\nassert solution(\"2 1\") == 2\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''2 3\n1 2 3''') == '2'\nassert solution('''5 4\n1 1 2 1 2''') == '1'\nassert solution('''5 4\n2 3 2 2''') == '2'\nassert solution('''5 4\n1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[6:-1]\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 5\") == \"8\"\nassert solution(\"6 5\") == \"8\"\nassert solution(\"7 6\") == \"8\"\nassert solution(\"7 8\") == \"7\"\nassert solution(\"7 7\") == \"7\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 7 10 6 5\") == \"8\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"6 5\") == \"8\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''6 5\n8 6 7 10 6 5''') == '8'\nassert solution('''6 5\n9 4 7 10 6 5''') == '6'\nassert solution('''6 5\n8 6 7 10 6 5''') == '8'\nassert solution('''6 5\n8 6 7 10 6 5''') == '8'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n2 1''') == '1'\nassert solution('''3 2\n2 1''') == '1'\nassert solution('''2 1\n2 1''') == '0'\nassert solution('''3 2\n2 3\n''') == '1'\nassert solution('''3 2\n1 2\n1 2\n''') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 1') == '1'"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    'standard input'\n) == '1'\nassert solution(\n    'input'\n) == '1'\nassert solution(\n    '1 2'\n) == '1'\nassert solution(\n    '5 4'\n) == '4'\nassert solution(\n    '20 10'\n) == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('10 10') == ''\nassert solution('1 1') == ''\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '1'\nassert solution('1 1') == '0'\nassert solution('10 50') == '49'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1\\n3 2') == '1\\n'\nassert solution('2 1\\n3 2\\n5 3') == '0\\n'\nassert solution('1 2\\n1 1') == '2\\n'\nassert solution('1 1\\n1 1') == '0\\n'\nassert solution('1 1\\n1 2') == '0\\n'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n2 1\\n') == '1'\n'''"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 7 5 1 10 3 20') == '6'\nassert solution('3 7 5 1 10 3 20') == '-1'\nassert solution('2 3 1') == '2'\nassert solution('1 2 1') == '-1'\nassert solution('2 2 2') == '1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2') == '-1'\nassert solution('7 4') == '6'\nassert solution('7 2') == '-1'\nassert solution('7 10') == '9'\nassert solution('7 100') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '-1'\nassert solution('2\\n1') == '-1'\nassert solution('3\\n1') == '-1'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '2'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\n\n\n'''\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 4') == '6'\nassert solution('7 2') == '-1'\nassert solution('1 1') == '-1'\nassert solution('7 5') == '5'\nassert solution('3 7 5 1 10 3 20') == '6'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\n\n\"\"\""
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\nassert solution('''7 5\n3 7 5 1 10 3 20''') == '-1'\nassert solution('''7 4\n2 7 5 1 10 3 20''') == '-1'\nassert solution('''7 3\n1 7 5 1 10 3 20''') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\nassert solution(\"7 5\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('3 4') == ''\nassert solution('1 1') == '1 1'\nassert solution('3 3') == '3 3'\nassert solution('1 1') == '3 4'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '-1'\nassert solution('3 3') == '-1'\nassert solution('5 5') == '-1'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\nfrom typing import List"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '-1'\nassert solution('4 6') == '3'\nassert solution('6 8') == '3'\nassert solution('8 7') == '3'\nassert solution('3 5') == '3'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"/dev/stdin\").read()) == \"3\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n...*\\n.*.*.\\n.*.*.\\n.*.*.\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"2 3\\n*.*\\n.*.\") == \"-1\"\nassert solution(\"2 4\\n*.*\\n.*.\") == \"-1\"\nassert solution(\"5 5\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\") == \"-1\"\n\n\n\nn, m = [int(x) for x in stdin.split()]\nstar_grid = []\nfor _ in range(n):\n    star_grid.append(stdin.rstrip('\\n'))\n\nstars_in_grid = 0\nmax_stars_in_grid = n * m\nfor row in star_grid:\n    stars_in_row = 0\n    for char in row:\n        if char == '*':\n            stars_in_row += 1\n        if stars_in_row > max_stars_in_grid:\n            break\n    if stars_in_row > max_stars_in_grid:\n        break\n    stars_in_grid += stars_in_row"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 8\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n....\") == \"3\"\nassert solution(\"5 5\\n.*.*\\n.*.*\\n.*.*\\n.....\") == \"3\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\nimport sys"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 8''') == '''3\n3 4 1\n3 5 2'''\n\nassert solution('''5 5''') == '''3\n2 2 1\n3 3 1\n3 4 1'''\n\nassert solution('''3 3''') == '''-1'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1'''\n\nassert solution('''6 8\n.****\n.*...\n.*...\n.*...\n.*...\n....*''') == '''3\n3 4 1\n3 5 2'''"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 8''') == '''3'''\nassert solution('''5 5''') == '''3'''\nassert solution('''5 7''') == '''-1'''\nassert solution('''7 7''') == '''-1'''\nassert solution('''3 3''') == '''3'''\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('x') == 'x'\nassert solution('ab') == 'ab'\nassert solution('aa') == ''\nassert solution('zzz') == ''\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''good\n''') == '0'\nassert solution('''abc\n''') == '0'\nassert solution('''aaa\n''') == '0'\nassert solution('''aabc\n''') == '2'\nassert solution('''aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('good') == 0\nassert solution('aabc') == 2\nassert solution('aaa') == 3\n\nassert solution('ba') == 1\nassert solution('b') == 0\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"bad\") == \"bad\"\nassert solution(\"string\") == \"str\"\nassert solution(\"aaaa\") == \"\"\nassert solution(\"baab\") == \"b\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('good') == ''\nassert solution('aabc') == ''\nassert solution('aa') == ''\nassert solution('ab') == ''\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('ab') == 'b'\nassert solution('abcd') == ''\nassert solution('abc') == 'c'\nassert solution('abccd') == 'cd'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abcde\") == \"\"\nassert solution(\"aabcde\") == \"\"\nassert solution(\"aabcde\") == \"\"\nassert solution(\"aaa\") == \"\"\nassert solution(\"aaaa\") == \"\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(good) == \"0\"\nassert solution(string) == \"ab\"\nassert solution(aaa) == \"ab\"\nassert solution(bad) == \"ab\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\ngood\n''') == '0'\nassert solution('''\ngood\n''') == 'good'\nassert solution('''\nbad\n''') == 'bad'\nassert solution('''\nabcdef\n''') == '2'\nassert solution('''\nabcdefg\n''') == '4'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('good') == 0\nassert solution('aaa') == 3\nassert solution('aa') == 0\nassert solution('a') == 1\nassert solution('x') == 1\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"10100\"\nassert solution(stdin) == \"10101\"\nassert solution(stdin) == \"10110\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n2 1\\n4 1\\n6 1') == 'YES\\n100'\n\n'''\n\nfrom collections import defaultdict"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\n\n\"\"\""
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == 'NO'\n\nThe picture corresponding to the second example: [Image]\n\nAnd one of possible answers: $\\text{of}$\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\n\n-----Note-----\n\nThis is a well-known problem in computer science. We can use the Wilson's theorem for finding a Hamiltonian cycle: https://en.wikipedia.org/wiki/Hamiltonian_path"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"6 5\n1 5\n2 1\n1 4\n3 1\n6 1\"\"\") == \"YES\\n10100\"\n\nassert solution(\n    \"\"\"6 4\n1 5\n2 1\n3 1\n4 1\n5 1\n\"\"\") == \"NO\"\n\nassert solution(\n    \"\"\"6 4\n1 5\n2 1\n3 1\n4 1\n5 1\n1 2\n2 3\n3 4\n4 5\n5 1\"\"\") == \"YES\\n000001\"\n\nassert solution(\n    \"\"\"6 5\n1 4\n2 1\n1 4\n3 1\n2 3\n3 4\n4 5\n5 4\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"NO\"\n\nassert solution(\n    \"\"\"4 4\n1 3\n2 3\n3 4\n4 5\n1 2\n2 4\n3 4\n\"\"\") == \"YES\\n111010\""
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"NO\"\nassert solution(\"2 5\\n1 3\\n2 1\") == \"NO\"\nassert solution(\"1 1\\n1 1\") == \"YES\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"NO\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"NO\"\n\n\"\"\"\n\n\nfrom queue import Queue\nfrom collections import deque"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"10100\"\n\n-----"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4'\nassert solution('''1 7\n1 7\n''') == '0'\nassert solution('''1 8\n1 8\n''') == '0'\nassert solution('''1 7\n1 6\n2 7\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n155 155\n155 156\n155 157\n157 158\n158 159\n159 160\n159 161\n160 162\n162 163\n163 164\n163 165\n165 166\n165 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n197 199\n198 200\n199 201\n199 202\n200 203\n200 204\n199 205\n198 206\n197 207\n196 208\n195 209\n194 210\n193 211\n192 212\n191 213\n190 214\n189 215\n188 216\n187 217\n186 218\n185 219\n184 220\n183 221\n182 222\n181 223\n180 224\n179 225\n178 226\n177 227\n176 228\n175 229\n174 230\n173 231\n172 232\n171 233\n170 234\n169 235\n168 236\n167 237\n166 238\n165 239\n164 240\n163 241\n162 242\n161 243\n160 244\n159 245\n158 246\n157 247\n156 248\n155 249\n154 250\n153 251\n152 252\n151 253\n150 254\n149 255\n148 256\n147 257\n146 258\n145 259\n144 260\n143 261\n142 262\n141 263\n140 264\n139 265\n138 266\n137 267\n136 268\n135 269\n134 270\n133 271\n132 272\n131 273\n130 274\n129 275\n128 276\n127 277\n126 278\n125 279\n124 280\n123 281\n122 282\n121 283\n120 284\n119 285\n118 286\n117 287\n116 288\n115 289\n114 290\n113 291\n112 292\n111 293\n110 294\n109 295\n108 296\n107 297\n106 298\n105 299\n104 300\n103 301\n102 302\n101 303\n100 304\n99 305\n98 306\n97 307\n96 308\n95 309\n94 310\n93 311\n92 312\n91 313\n90 314\n89 315\n88 316\n87 317\n86 318\n85 319\n84 320\n83 321\n82 322\n81 323\n80 324\n79 325\n78 326\n77 327\n76 328\n75 329\n74 330\n73 331\n72 332\n71 333\n70 334\n69 335\n68 336\n67 337\n66 338\n65 339\n64 340\n63 341\n62 342\n61 343\n60 344\n59 345\n58 346\n57 347\n56 348\n55 349\n54 350\n53 351\n52 352\n51 353\n50 354\n49 355\n48 356\n47 357\n46 358\n45 359\n44 360\n43 361\n42 362\n41 363\n40 364\n39 365\n38 366\n37 367\n36 368\n35 369\n34 370\n33 371\n32 372\n31 373\n30 374\n29 375\n28 376\n27 377\n26 378\n25 379\n24 380\n23 381\n22 382\n21 383\n20 384\n19 385\n18 386\n17 387\n16 388\n15 389\n14 390\n13 391\n12 392\n11 393\n10 394\n9 395\n8 396\n7 397\n6 398\n5 399\n4 400\n3 401\n2 402\n1 403\n0 404\n-405\n-406\n-407\n-408\n-409\n-410\n-411\n-412\n-413\n-414\n-415\n-416\n-417\n-418\n-419\n-420\n-421\n-422\n-423\n-424\n-425\n-426\n-427\n-428\n-429\n-430\n-431\n-432\n-433\n-434\n-435\n-436\n-437\n-438\n-439\n-440\n-441\n-442\n-443\n-444\n-445\n-446\n-447\n-448\n-449\n-450\n-451\n-452\n-453\n-454\n-455\n-456\n-457\n-458\n-459\n-460\n-461\n-462\n-463\n-464\n-465\n-466\n-467\n-468\n-469\n-470\n-471\n-472\n-473"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 2\\n2 3\\n3 4') == '2 3\\n'\nassert solution('2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '0\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '0\\n'\nassert solution('1 2\\n1 3\\n2 3') == '2\\n'\n\n\n\n\"\"\""
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2\\n2 2') == '0'\nassert solution('1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 7') == '0'"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3 5\n2 2\n1 2\n5 5\n\"\"\"\n) == \"\"\"\n2\n3 4\n\"\"\"\n\nassert solution(\n\"\"\"\n1 7\n1 7\n\"\"\"\n) == \"\"\"\n0\n\"\"\"\n\nassert solution(\n\"\"\"\n1 1\n\"\"\"\n) == \"\"\"\n0\n\"\"\"\n\nassert solution(\n\"\"\"\n1 100\n\"\"\"\n) == \"\"\"\n0\n\"\"\""
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '2\\n3 4\\n'\nassert solution('1 7') == '0\\n1 7\\n'\nassert solution('2 2') == '0\\n'\nassert solution('2 2') == '0\\n'\nassert solution('1 1') == '0\\n'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2\\n2 2') == '3 4'\nassert solution('1 7\\n1 7') == '0'\nassert solution('1 7\\n2 2') == '0'\nassert solution('1 7\\n1 7\\n2 2') == '0'"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4\\n'\nassert solution('''1 7\n1 7''') == '0\\n'\nassert solution('''1 1\n1 1\n''') == '0\\n'\nassert solution('''1 100\n1 100\n''') == '0\\n'\nassert solution('''4 4\n3 5\n1 1\n4 4\n''') == '0\\n'\n\n\n\"\"\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[stdin.find('\\n') + 1:]\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 9 2 3') == '2'\n\"\"\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 9 2 3') == '2'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 9 2 3\") == 2\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 9 2 3') == '2'\n\nassert solution('4 9 2 3') == '2'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"9123456789\") == \"Yes\"\nassert solution(\"0000123456789\") == \"No\"\nassert solution(\"1234567890\") == \"Yes\"\nassert solution(\"0\") == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('45789') == 'No'\nassert solution('1234567') == 'No'\nassert solution('94578') == 'Yes'\nassert solution('94567') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(987654321) == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(1234567891) == \"No\"\nassert solution(123456789456789) == \"Yes\"\nassert solution(123456789) == \"Yes\"\nassert solution(1234567891234) == \"No\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(123456789) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234567\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"1234567892\") == \"Yes\"\nassert solution(\"1234567892\") == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(100) == \"No\"\nassert solution(1234567890123456789012345678901234567890) == \"Yes\"\nassert solution(1234567890123456789012345678901234567890) == \"No\"\nassert solution(12345678901234567890123456789012345678901234567890123456789012345678901234567890) == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456789a') == 'No'\nassert solution('1234567891') == 'Yes'\nassert solution('12345678955') == 'Yes'\nassert solution('12345678966') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(123456786) == 'No'\nassert solution(123456778) == 'Yes'\nassert solution(123456755) == 'No'\nassert solution(123456781) == 'Yes'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"1234\") == \"2\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"30\") == \"1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('-1') == ''\nassert solution('-1') == ''\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == '2'\nassert solution('40') == '5'\nassert solution('1000000') == '1'\nassert solution('1000000000') == '10'\nassert solution('10000000000000000') == '67'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('10') == '4'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('9') == '1'\nassert solution('123') == '2'\nassert solution('12345') == '3'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('koto') == 'No'\nassert solution('kyoto') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\", \"tokyo\") == \"Yes\"\nassert solution(\"tokyo\", \"kyoto\") == \"Yes\"\nassert solution(\"red\", \"re\") == \"No\"\nassert solution(\"re\", \"red\") == \"No\"\nassert solution(\"abba\", \"abaa\") == \"No\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('kyoto', 'tokyo') == 'Yes'\nassert solution('hello', 'ohell') == 'Yes'\nassert solution('abcdef', 'cdeabf') == 'Yes'\nassert solution('abcdef', 'fecbdef') == 'No'\nassert solution('hello', 'hello') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('waco') == 'No'\nassert solution('tokyo') == 'No'\nassert solution('ohio') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'No'\nassert solution('kyoto') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\", \"tokyo\") == \"Yes\"\nassert solution(\"tokyo\", \"kyoto\") == \"No\"\n\"\"\"\n\ns, t = input().strip().split(\" \")"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tyoto') == 'No'\nassert solution('a') == 'Yes'\nassert solution('a' * 100) == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('kyoto', 'tokyo') == 'Yes'\nassert solution('tokyo', 'kyoto') == 'Yes'\nassert solution('cabana', 'caban') == 'No'\nassert solution('cabana', 'caban!') == 'No'\nassert solution('cabana', 'cabanb') == 'No'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('xyyz') == 3\nassert solution('xyz') == 1\nassert solution('ab') == 0\n\"\"\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '1'\nassert solution('abdac') == '2'\nassert solution('abcd') == '4'\nassert solution('abcdc') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('aaaaaaab') == 4\nassert solution('aaaa') == 4\nassert solution('aaaaaa') == 4\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"abcabc\") == \"0\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '1'\nassert solution('abcabc') == '0'\nassert solution('abcabcabc') == '2'\nassert solution('abcabcabcabc') == '3'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''cabacc\nabc''') == '1'\nassert solution('''cabacc\ncba''') == '1'\nassert solution('''abcdefghijklmnopqrstuvwxyz\naabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxy''') == '3'\nassert solution('''aaaaaaaaaa\nbbbbbbbbbb''') == '3'\nassert solution('''zxcvbnm,./!@#$%^&*()_+-=?{}|[]\\:\";'<>?,./~`''') == '15'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cabacc', 'abc') == '1'\nassert solution('cabacc', 'acc') == '0'\nassert solution('cabacc', 'ab') == '3'\nassert solution('abc', 'abc') == '0'\nassert solution('abc', 'acc') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cabacc', 'abc') == '1'\nassert solution('abc', 'cabacc') == '1'\nassert solution('abc', 'abc') == '0'\nassert solution('abc', 'cbc') == '1'\nassert solution('abc', 'cdef') == '2'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('abcabc') == '1'\nassert solution('abcabcabc') == '2'\nassert solution('aab') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cabacc', 'abc') == '1'\nassert solution('abccd', 'acd') == '1'\nassert solution('cabacc', 'abcd') == '1'\nassert solution('abcc', 'acd') == '1'\nassert solution('ccc', 'cd') == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n\nfrom __future__ import annotations"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 6\") == \"2\"\nassert solution(\"1 10 1\") == \"1\"\nassert solution(\"2 3 7\") == \"3\"\nassert solution(\"3 4 5\") == \"1\"\nassert solution(\"5 3 9\") == \"2\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"8 8 2\") == \"8\"\nassert solution(\"8 9 2\") == \"8\"\nassert solution(\"8 17 2\") == \"8\"\nassert solution(\"8 27 2\") == \"8\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"5 7 3\") == \"3\"\nassert solution(\"10 4 6\") == \"3\"\nassert solution(\"100 200 1000\") == \"3\"\nassert solution(\"5 6 3\") == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1 4\") == \"2\"\nassert solution(\"2 4 6\") == \"4\"\nassert solution(\"3 4 5\") == \"3\"\nassert solution(\"2 4 6\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 12 2') == '2'\nassert solution('8 12 2') == '2'\nassert solution('8 12 2') == '2'\nassert solution('8 12 2') == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 12 2''') == \"2\"\n'''\n\nimport sys\nfrom math import gcd"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('1 1 2') == '1'\nassert solution('1 1 3') == '1'\nassert solution('1 2 1') == '2'\nassert solution('1 2 2') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 12 3') == '4'\nassert solution('8 12 2') == '2'\nassert solution('8 12 2') == '2'\nassert solution('8 12 2') == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"8 3 2\") == \"1\"\nassert solution(\"6 5 2\") == \"2\"\nassert solution(\"2 5 2\") == \"1\"\nassert solution(\"1 2 2\") == \"1\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1024') == '2020'\n'''\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"25\") == \"0\"\nassert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('1024') == '2020'\nprint('Testcases passed')\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1024''') == '2020'"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('10') == '10'\nassert solution('1') == '1'\nassert solution('10256') == '2020'\nassert solution('1000000') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1024') == '2020'\nassert solution('1000000000') == '83839'\nassert solution('0') == '0'\nassert solution('10000000') == '999999'"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1024') == '2020'\n\nassert solution('10') == '100'\n\nassert solution('1') == '1'\n\nassert solution('1000000') == '99999999'\n\"\"\""
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2020'"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0) == \"\"\nassert solution(1024) == \"2020\"\n\n'''"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n1 4''') == '5'\nassert solution('''3\n1 4 2\n''') == '6'\nassert solution('''3\n1 2 3\n''') == '4'\nassert solution('''6\n6 6 6 6 6 6\n''') == '6'\nassert solution('''6\n7 7 7 7 7 7\n''') == '12'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 4\") == \"5\"\nassert solution(\"1 4 2\") == \"7\"\nassert solution(\"2 1 4\") == \"7\"\nassert solution(\"1 1 3 1\") == \"10\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 5\n\"\"\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 4\") == \"5\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"2 4 5\") == \"1\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2\n1 4\n\"\"\"\n) == \"5\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"40\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\") == \"168\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\") == \"168\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('2\\n1 4\\n1 4\\n1 4') == '25'\nassert solution('2\\n1 4\\n1 4\\n1 4\\n1 4') == '25'\nassert solution('2\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4') == '25'\nassert solution('2\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4') == '25'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n3 4\") == \"5\"\nassert solution(\"1 2\\n2 1\") == \"1\"\nassert solution(\"2 4\\n2 4\") == \"8\"\nassert solution(\"2 4\\n1 1\") == \"0\"\nassert solution(\"2 4\\n3 3\") == \"3\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 10''') == '3'\nassert solution('''4 10''') == '3'\nassert solution('''7 100''') == '7'\nassert solution('''4 1''') == '1'\nassert solution('''7 21''') == '7'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4') == '3'\nassert solution('3 4') == '2'\nassert solution('10 9') == '3'\nassert solution('7 3') == '2'\nassert solution('10 5') == '4'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 10\") == 3\nassert solution(\"4 10\") == 3\nassert solution(\"1 10\") == 0\nassert solution(\"1 1\") == 1\nassert solution(\"2 10\") == 1\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 10\") == \"3\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10') == '3'\nassert solution('1 1') == '2'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('1 4') == '3'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 10') == '3'\nassert solution('5 5') == '1'\nassert solution('9 6') == '2'\nassert solution('17 3') == '4'\nassert solution('19 22') == '8'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"4 11\") == \"4\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 10\") == \"3\"\nassert solution(\"4 4\") == \"2\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"4 10\") == \"\"\nassert solution(\"6 5\") == \"\"\nassert solution(\"1 10\") == \"\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"CSS\") == '2'\nassert solution(\"CSS\") == '2'\nassert solution(\"CSR\") == '2'\nassert solution(\"CSR\") == '2'\nassert solution(\"CCS\") == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"CSR\") == \"2\"\nassert solution(\"CSS\") == \"2\"\nassert solution(\"S\") == \"0\"\nassert solution(\"CS\") == \"0\"\nassert solution(\"SS\") == \"0\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('CSS') == '1'\nassert solution('CSR') == '2'\n\"\"\"\n\n\"\"\"\nFollower-up: Intersecting rectangles\n\"\"\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('CS') == '1'\nassert solution('CSS') == '2'\nassert solution('CRS') == '0'\nassert solution('CRS') == '0'\nassert solution('CSR') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('CS', 'CS') == '1'\nassert solution('CSS', 'CSR') == '2'\nassert solution('CS', 'CSR') == '2'\nassert solution('CSS', 'CSS') == '0'\nassert solution('CSS', 'CSS') == '0'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('CSS') == \"0\"\nassert solution('CSR') == \"2\"\nassert solution('SSR') == \"3\"\nassert solution('CSC') == \"2\"\nassert solution('CSRS') == \"1\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nSOLUTION 1:\n\nNote:\n    S and T are strings of length 3 each.\n    S and T consist of S, C, and R.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\nT\n\n-----Output-----\nPrint the number of days for which the forecast was correct.\n\n-----Sample Input-----\nCSS\nCSR\n\n-----Sample Output-----\n2\n\n - For the first day, it was forecast to be cloudy, and it was indeed cloudy.\n - For the second day, it was forecast to be sunny, and it was indeed sunny.\n - For the third day, it was forecast to be sunny, but it was rainy.\nThus, the forecast was correct for two days in this case.\n\"\"\""
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[2]"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 2 3') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2 3\") == \"2\"\nassert solution(\"2\\n1 3\") == \"2\"\nassert solution(\"2\\n1 3 5\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\nassert solution('5\\n1 3 5 4 1\\n') == '4'\nassert solution('10\\n1 3 5 4 3 2 6 7 8 9 10\\n') == '10'\nassert solution('100\\n1 3 5 4 3 2 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n') == '100'\nassert solution('1000\\n1 3 5 4 3 2 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n') == '1000'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"5 1 3 4 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('2 4 3 1') == '2'\nassert solution('2 3 1 4') == '2'\nassert solution('3 1 2 4') == '2'\nassert solution('4 1 2 3') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 3 5 4 2''') == '2'\nassert solution('''10\n1 3 5 4 2 6 7 8 9 10''') == '3'\nassert solution('''15\n1 3 5 4 2 6 7 8 9 10 11 12 13 14 15''') == '6'\nassert solution('''20\n1 3 5 4 2 6 7 8 9 10 11 12 13 14 15 16 17 18 19''') == '10'\nassert solution('''30\n1 3 5 4 2 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30''') == '15'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"2 4 5 3 1\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 2 3 4') == '1'\nassert solution('1 3 2 4') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 3 5 4 2') == 2\nassert solution('3\\n1 2 3') == 2\nassert solution('3\\n2 3 1') == 2\nassert solution('3\\n2 1 3') == 2\nassert solution('3\\n3 1 2') == 2\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 5 4 2') == '2'\n\"\"\""
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\"\nassert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\n\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\n\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\n\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\n\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\nassert solution(\n\"\"\"5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\nassert solution(\n\"\"\"8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\nassert solution(\n\"\"\"5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\nassert solution(\n\"\"\"8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\nassert solution(\"\"\"\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\nassert solution(\"\"\"\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\nassert solution(\"\"\"\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\nassert solution(\"\"\"\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n') == '6.040'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n') == '6.040'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    r\"\"\"\n    8\n    -2.14 2.06\n    -1.14 2.04\n    -2.16 1.46\n    -2.14 0.70\n    -1.42 0.40\n    -0.94 -0.48\n    -1.42 -1.28\n    -2.16 -1.62\n    \"\"\") == \"5.410\"\n\nassert solution(\n    r\"\"\"\n    5\n    2.26 1.44\n    2.28 0.64\n    2.30 -0.30\n    1.58 0.66\n    3.24 0.66\n    \"\"\") == \"5.620\"\n\nassert solution(\n    r\"\"\"\n    8\n    6.98 2.06\n    6.40 1.12\n    5.98 0.24\n    5.54 -0.60\n    7.16 0.30\n    7.82 1.24\n    8.34 0.24\n    8.74 -0.76\n    \"\"\") == \"5.480\"\n\nassert solution(\n    r\"\"\"\n    5\n    10.44 2.06\n    10.90 0.80\n    11.48 -0.48\n    12.06 0.76\n    12.54 2.06\n    \"\"\") == \"6.040\"\n\nassert solution(\n    r\"\"\"\n    7\n    20.62 3.00\n    21.06 2.28\n    21.56 1.36\n    21.66 0.56\n    21.64 -0.52\n    22.14 2.32\n    22.62 3.04\n    \"\"\") == \"6.720\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"2 3 1 1 2\") == \"4\"\nassert solution(\"5 15\") == \"1\"\nassert solution(\"7 10\") == \"2\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n1 3 4 2 1 4 2') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n1 3 4 2 1 4 2') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('2\\n1\\n') == '-1'\nassert solution('1\\n1\\n') == '-1'\nassert solution('2\\n3\\n') == '2'\nassert solution('5\\n5\\n5') == '2'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 7\\n2 3 1 1 2') == '4'\nassert solution('5 10\\n5 5 5 5 5\\n') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n\n\n-----"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 8''') == '4'\nassert solution('''7 10''') == '2'\nassert solution('''5 16''') == '2'\nassert solution('''5 26''') == '-1'\nassert solution('''7 15''') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 10\\n1 3 4 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('7 26\\n5 5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 7\\n1 3 1 1 2') == '4'\nassert solution('7 10\\n5 5 5 5 5\\n') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('15 2\\n1 2 1 1 1 1 2 1 1 1 1 1\\n') == '1 1'\nassert solution('5 1\\n1 1 1 1 1 1\\n') == '1'\nassert solution('20 5\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n4 5 6') == '1 2 3'\nassert solution('2 3\\n4 5 6') == '1 2 3'\nassert solution('1 2 3\\n4 5 6') == '1 2 3'\nassert solution('1 2 3\\n4 5 6') == '1 2 3'\nassert solution('1 2 3\\n4 5 6') == '1 2 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn,k=map(int,input().split())\ns=list(map(int,input().split()))\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 \\n1 3 1\\n') == '1 3'\nassert solution('1 2 3 \\n1 3 1\\n') == '1 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 3 2') == '1 3 2'\nassert solution('1 1 1 1 1 1 1') == '1 1 1 1 1 1 1'\nassert solution('1 3 2 4 2 4 4 4 1') == '1 2 3'\nassert solution('1 1 1 1 1 1 1') == '1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3'\nassert solution('15 2\\n1 2 1 1 1 1 2 1 1 1 1 1\\n') == '1 1'\n\n\"\"\""
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2 3 2 4 3 1') == '1 2 3\\n'\nassert solution('7 3\\n1 2 3 2 4 3 1') == '1 2 3\\n'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3') == '7 3 1 3\\n'\nassert solution('15 2\\n1 3 1 3 1 1 1 2 1 1 1 1') == '1 1\\n'\nassert solution('10 6\\n1 1 1 1 1 1 1 1 1 1 1 1') == '1 1 1 1 1 1 1 1 1 1\\n'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1 2 3') == '1 2 3'\nassert solution('2 2\\n2 2') == '2'\nassert solution('2 1\\n2') == '2'\nassert solution('2 1\\n2 1') == '2'\nassert solution('2 2\\n2 1') == '2 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 3 2 4 3 1\\n') == '1 2 3\\n'\nassert solution('5 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3\\n'\nassert solution('15 2\\n1 2 1 1 1 1 2 1 1 1 1 1\\n') == '1 1\\n'\n\"\"\""
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"2 3 4\") == \"1 2\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3') == '0'\nassert solution('6 1\\n3') == '3'\n\n\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\n\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\n\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n\nassert solution('''3 1\n3\n3\n3\n3\n3\n3\n''') == '0'\n\nassert solution('''2 1\n3\n3\n3\n3\n3\n3\n3\n''') == '3'"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n6\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n11\\n12\\n12\\n12\\n13\\n13\\n13\\n14\\n14\\n14\\n15\\n15\\n15\\n16\\n16\\n16\\n17\\n17\\n17\\n18\\n18\\n18\\n19\\n19\\n19\\n20\\n20\\n20\\n21\\n21\\n21\\n22\\n22\\n22\\n23\\n23\\n23\\n24\\n24\\n24\\n25\\n25\\n25\\n26\\n26\\n26\\n27\\n27\\n27\\n28\\n28\\n28\\n29\\n29\\n29\\n30\\n30\\n30\\n31\\n31\\n31\\n32\\n32\\n32\\n33\\n33\\n33\\n34\\n34\\n34\\n35\\n35\\n35\\n36\\n36\\n36\\n37\\n37\\n37\\n38\\n38\\n38\\n39\\n39\\n39\\n40\\n40\\n40\\n41\\n41\\n41\\n42\\n42\\n42\\n43\\n43\\n43\\n44\\n44\\n44\\n45\\n45\\n45\\n46\\n46\\n46\\n47\\n47\\n47\\n48\\n48\\n48\\n49\\n49\\n49\\n50\\n50\\n50\\n51\\n51\\n51\\n52\\n52\\n52\\n53\\n53\\n53\\n54\\n54\\n54\\n55\\n55\\n55\\n56\\n56\\n56\\n57\\n57\\n57\\n58\\n58\\n58\\n59\\n59\\n59\\n60\\n60\\n60\\n61\\n61\\n61\\n62\\n62\\n62\\n63\\n63\\n63\\n64\\n64\\n64\\n65\\n65\\n65\\n66\\n66\\n66\\n67\\n67\\n67\\n68\\n68\\n68\\n69\\n69\\n69\\n70\\n70\\n70\\n71\\n71\\n71\\n72\\n72\\n72\\n73\\n73\\n73\\n74\\n74\\n74\\n75\\n75\\n75\\n76\\n76\\n76\\n77\\n77\\n77\\n78\\n78\\n78\\n79\\n79\\n79\\n80\\n80\\n80\\n81\\n81\\n81\\n82\\n82\\n82\\n83\\n83\\n83\\n84\\n84\\n84\\n85\\n85\\n85\\n86\\n86\\n86\\n87\\n87\\n87\\n88\\n88\\n88\\n89\\n89\\n89\\n90\\n90\\n90\\n91\\n91\\n91\\n92\\n92\\n92\\n93\\n93\\n93\\n94\\n94\\n94\\n95\\n95\\n95\\n96\\n96\\n96\\n97\\n97\\n97\\n98\\n98\\n98\\n99\\n99\\n99\\n100\\n100\\n100\\n101\\n101\\n101\\n102\\n102\\n102\\n103\\n103\\n103\\n104\\n104\\n104\\n105\\n105\\n105\\n106\\n106\\n106\\n107\\n107\\n107\\n108\\n108\\n108\\n109\\n109\\n109\\n110\\n110\\n110\\n111\\n111\\n111\\n112\\n112\\n112\\n113\\n113\\n113\\n114\\n114\\n114\\n115\\n115\\n115\\n116\\n116\\n116\\n117\\n117\\n117\\n118\\n118\\n118\\n119\\n119\\n119\\n120\\n120\\n120\\n121\\n121\\n121\\n122\\n122\\n122\\n123\\n123\\n123\\n124\\n124\\n124\\n125\\n125\\n125\\n126\\n126\\n126\\n127\\n127\\n127\\n128\\n128\\n128\\n129\\n129\\n129\\n130\\n130\\n130\\n131\\n131\\n131\\n132\\n132\\n132\\n133\\n133\\n133\\n134\\n134\\n134\\n135\\n135\\n135\\n136\\n136\\n136\\n137\\n137\\n137\\n138\\n138\\n138\\n139\\n139\\n139\\n140\\n140\\n140\\n141\\n141\\n141\\n142\\n142\\n142\\n143\\n143\\n143\\n144\\n144\\n144\\n145\\n145\\n145\\n146\\n146\\n146\\n147\\n147\\n147\\n148\\n148\\n148\\n149\\n149\\n149\\n150\\n150\\n150\\n151\\n151\\n151\\n152\\n152\\n152\\n153\\n153\\n153\\n154\\n154\\n154\\n155\\n155\\n155\\n156\\n156\\n156\\n157\\n157\\n157\\n158\\n158\\n158\\n159\\n159\\n159\\n160"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n\nprint('All set? Click \"Check\" to earn cool rewards!')\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 2\n9 9\n10 8\n5 3\n4 3\n\"\"\") == \"5\"\nassert solution(\"\"\"6 1\n3\n6\n2\n5\n1\n4\n\"\"\") == \"0\"\nassert solution(\"\"\"2 4\n1 2 3 4\n10 3 7 3\n\"\"\") == \"0\"\nassert solution(\"\"\"6 1\n3\n6\n2\n5\n1\n4\n\"\"\") == \"3\"\nassert solution(\"\"\"10 1\n9\n10\n8\n7\n6\n5\n4\n3\n2\n1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '3'\nassert solution('2 4') == '0'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'\nassert solution('6 2\\n5 1\\n4 2 3\\n3 4 5\\n6 5 4\\n') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 2 3 4\\n10 3 7 3') == '5'\nassert solution('3 1\\n1 2 3 4\\n10 3 7 3\\n5 6 7 8') == '0'\nassert solution('6 1\\n3') == '3'\nassert solution('7 1\\n3') == '3'\nassert solution('7 4\\n1 2 3 4\\n10 3 7 3\\n5 6 7 8') == '3'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"xxxiii\") == 1\nassert solution(\"xxoxx\") == 0\nassert solution(\"xxxxxxxxxx\") == 8\n\n\n\"\"\""
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('xxxxxx') == 0\nassert solution('xxoxx') == 1\nassert solution('xxxiii') == 1\nassert solution('xxxxiii') == 2\nassert solution('xxxxxii') == 2\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"xxxxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxxxxxxxxx\") == \"8\"\nassert solution(\"xxxii\") == \"1\"\nassert solution(\"xxoxxx\") == \"0\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"xxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxxxxxxxxx\") == \"8\"\nassert solution(\"xxxxxx\") == \"4\"\n\n\n\"\"\""
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3x') == 1\nassert solution('3xx') == 0\nassert solution('xxxx') == 0\nassert solution('xxxxx') == 1\nassert solution('xxxxxx') == 2\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('xxx') == 1\nassert solution('xxoxx') == 0\nassert solution('xxxxxx') == 4\nassert solution('xoxoxox') == 1\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3x') == '3'\nassert solution('10x') == '1'\nassert solution('10x') == '1'\nassert solution('exxxii') == '0'\nassert solution('xxoxx') == '8'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"exxxii\") == \"exxii\"\nassert solution(\"xxxxx\") == \"\"\nassert solution(\"xxxxxx\") == \"\"\nassert solution(\"xiii\") == \"xii\"\nassert solution(\"xii\") == \"\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('123') == None\nassert solution('55') == None\nassert solution('999999999') == None\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"12\"\nassert solution(\"5\") == \"20\"\nassert solution(\"6\") == \"24\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == 48\nassert solution('5') == 105\nassert solution('6') == 156\nassert solution('7') == 287\nassert solution('8') == 336\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '48'\nassert solution('10') == '4080'\nassert solution('100') == '12160'\n\nprint('All set!')\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '12'\nassert solution('3') == '10'\nassert solution('4') == '8'\nassert solution('5') == '12'\nassert solution('6') == '16'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4') == 48\nassert solution('8') == 64\nassert solution('10') == 100\nassert solution('40') == 256\nassert solution('100') == 1024\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(4) == 48\nassert solution(3) == 9\nassert solution(10) == 144\nassert solution(50) == 47984\nassert solution(70) == 598280\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '48'"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '48'"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '48'\nassert solution('1') == '1'\nassert solution('3') == '9'\nassert solution('10') == '36'\nassert solution('200') == '1048576'\n\n'''\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5''') == 'unsafe'\nassert solution('''1 2''') == 'unsafe'\nassert solution('''10 10''') == 'unsafe'\nassert solution('''100 100''') =='safe'\nassert solution('''1 4''') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 5\") == \"unsafe\"\nassert solution(\"10 10\") == \"unsafe\"\nassert solution(\"1 1\") == \"unsafe\"\nassert solution(\"3 4\") == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('2 1') =='safe'\nassert solution('1 0') == 'unsafe'\nassert solution('2 0') =='safe'\nassert solution('0 1') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5') == 'unsafe'\n\"\"\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'unsafe'\n\"\"\""
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"unsafe\"\nassert solution(\"2 5\") == \"safe\"\nassert solution(\"5 6\") == \"unsafe\"\nassert solution(\"6 6\") == \"unsafe\"\nassert solution(\"1 1\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"unsafe\"\nassert solution(\"5 4\") == \"unsafe\"\nassert solution(\"1 1\") == \"safe\"\nassert solution(\"7 7\") == \"unsafe\"\nassert solution(\"10 10\") == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"unsafe\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"safe\"\nassert solution(input()) == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('99 99') == 'unsafe'\nassert solution('99 0') == 'unsafe'\nassert solution('99 99 99') == 'unsafe'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('-3 4 5') == '6'\nassert solution('3 5 4') == '6'\nassert solution('1 -3 4 5') == '6'\nassert solution('-3 -4 -5') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == 6\nassert solution('0 1 1') == 0\nassert solution('100 0 0') == 0\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''3 4 5''') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''3 4 4''') == '0'\nassert solution('''3 4 3''') == '6'\nassert solution('''1 4 2''') == '6'\nassert solution('''9 4 4''') == '20'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"8 4 5\") == \"1\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"3 4 5\") == \"6\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 5\") == \"8\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''1 2 3''') == '6'\nassert solution('''5 9 9''') == '36'\nassert solution('''1 2 3 4''') == '6'\nassert solution('''2 3 4 5''') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"7 10 11\") == \"13\"\nassert solution(\"100 101 102\") == \"4903\"\nassert solution(\"14 24 26\") == \"4858\"\nassert solution(\"999 10998 10999\") == \"989025\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 1 1') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 1 1') == '2'\nassert solution('1 1 10') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 4 4') == '0'\nassert solution('1 9 8') == '1'\nassert solution('1 9 0') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('0 1 0') == '0'\nassert solution('1 1 0') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 11 1') == '8'\nassert solution('1 1 1') == '1'\nassert solution('3 3 1') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 1 10') == '0'\nassert solution('10 0 100') == '0'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 11 4') == '4'\n\"\"\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nimport sys"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 11 4') == '4'"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 11 4') == '4'\n\"\"\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 4\") == \"4\"\nassert solution(\"100 0 10\") == \"0\"\nassert solution(\"100 100 1\") == \"0\"\nassert solution(\"99 3 3\") == \"3\"\nassert solution(\"99 99 99\") == \"3\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5') == 10\nassert solution('3 4') == 12\nassert solution('100 100') == 10000\nassert solution('3 10') == 30\nassert solution('1 1') == 1\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"3 5\") == \"15\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 2\") == \"4\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5') == 10\nassert solution('10 15') == 150\nassert solution('10 30') == 300\nassert solution('100 2') == 0\nassert solution('100 2') == 0\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 5') == '10'\nassert solution('2 5') == '10'\nassert solution('2 5') == '10'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5') == 10\nassert solution('3 4') == 12\nassert solution('1 1') == 1\nassert solution('1 1') == 1\nassert solution('1 1') == 1\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1'\nassert solution('99 99') == '99'\nassert solution('1 2') == '1'\nassert solution('1 99') == '1'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == str(3)\nassert solution(input()) == str(1)\nassert solution(input()) == str(0)\nassert solution(input()) == str(4)\nassert solution(input()) == str(5)\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 100') == '0'\nassert solution('7 8') == '56'\nassert solution('0 0') == '0'\nassert solution('8 9') == '88'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 2 3') == '5'\nassert solution('1 2 2') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5 7''') == '10'\nassert solution('''1 2 3''') == '4'\nassert solution('''1 3 2''') == '5'\nassert solution('''3 1 2''') == '3'\nassert solution('''10 10 10''') == '15'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 7') == '10'\nassert solution('2 1 4') == '5'\nassert solution('3 2 6') == '10'\nassert solution('5 2 4') == '5'\nassert solution('3 2 7') == '10'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 7') == '10'\nassert solution('1 3 5') == '8'\nassert solution('1 100 10') == '100'\nassert solution('1 10 1') == '1'\nassert solution('1 10 100') == '100'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5 7''') == \"10\"\nassert solution('''2 5 7''') == \"10\"\nassert solution('''3 5 7''') == \"10\"\nassert solution('''1 1 1''') == \"5\"\nassert solution('''2 3 5''') == \"10\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 10 7\") == \"10\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5 6\") == \"0\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 7') == '10'\n\n\"\"\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 1 1') == '10'\nassert solution('1 10 1') == '10'\nassert solution('2 10 1') == '11'\nassert solution('2 2 2') == '4'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5 7''') == '10'\nassert solution('''5 2 9''') == '10'\nassert solution('''10 10 9''') == '1'\nassert solution('''5 1 9''') == '1'\nassert solution('''5 1 9''') == '1'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5 7') == '10'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == 'OK'\nassert solution('1 10') == 'OK'\nassert solution('7') == 'OK'\nassert solution('500 600') == 'OK'\nassert solution('12 16') == 'NG'\n\"\"\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"OK\"\nassert solution(stdin) == \"NG\"\n\"\"\""
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'OK'\n\"\"\"\n\n\"\"\"\nNote that, as the challenge goal is to achieve a carry distance that is a multiple of K, it is not enough to just check if A - B is multiple of K.\nIn order to achieve a carry distance that is a multiple of K, we have to ensure that the carry distance is not greater than K.\nIf A is greater than B, it is impossible to achieve a carry distance that is a multiple of K.\nIn other words, the carry distance cannot be larger than K, so we cannot get a carry distance that is a multiple of K, even if A - B is multiple of K.\n\nNote that, if A is equal to B, then the carry distance is 0, so we can only get a carry distance that is a multiple of K if A - B is less than K.\nIf A - B is less than K, then we can get a carry distance that is a multiple of K if A - B is divisible by K.\nIn other words, if A - B is divisible by K, then we can get a carry distance that is a multiple of K.\nIf A - B is greater than K, then we can not get a carry distance that is a multiple of K.\n\"\"\"\n\nT = int(input())\nfor i in range(T):\n    A,B = map(int, input().split())\n    print('OK' if A - B < B else 'NG')\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('500 600') == 'OK'\nassert solution('3 10') == 'NG'\nassert solution('9 12') == 'OK'\nassert solution('10 9') == 'OK'\nassert solution('10000 2 2') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"Takahashi the Jumbo will practice golf.\\nHis objective is to get a carry distance that is a multiple of K, while he can only make a carry distance of between A and B (inclusive).\\nIf he can achieve the objective, print OK; if he cannot, print NG.\") == \"OK\"\nassert solution(\"Takahashi the Jumbo will practice golf.\\nHis objective is to get a carry distance that is a multiple of K, while he can only make a carry distance of between A and B (inclusive).\\nIf he can achieve the objective, print OK; if he cannot, print NG.\") == \"OK\"\nassert solution(\"Takahashi the Jumbo will practice golf.\\nHis objective is to get a carry distance that is a multiple of K, while he can only make a carry distance of between A and B (inclusive).\\nIf he can achieve the objective, print OK; if he cannot, print NG.\") == \"OK\"\nassert solution(\"Takahashi the Jumbo will practice golf.\\nHis objective is to get a carry distance that is a multiple of K, while he can only make a carry distance of between A and B (inclusive).\\nIf he can achieve the objective, print OK; if he cannot, print NG.\") == \"OK\"\nassert solution(\"Takahashi the Jumbo will practice golf.\\nHis objective is to get a carry distance that is a multiple of K, while he can only make a carry distance of between A and B (inclusive).\\nIf he can achieve the objective, print OK; if he cannot, print NG.\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n500 600''') == 'OK'\nassert solution('''5\n9 8\n''') == 'OK'\nassert solution('''3\n6 8\n''') == 'OK'\nassert solution('''1\n1 1\n''') == 'OK'\nassert solution('''3\n2 3\n''') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Takahashi the Jumbo will practice golf. His objective is to get a carry distance that is a multiple of K, while he can only make a carry distance of between A and B (inclusive). If he can achieve the objective, print OK; if he cannot, print NG.\") == \"OK\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"OK\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"OK\"\nassert solution(\"5 9 6 8 7\") == \"OK\"\nassert solution(\"5 7 8 6 9\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10') == 'OK'\nassert solution('4 2') == 'OK'\nassert solution('1 1') == 'OK'\nassert solution('10 2') == 'NG'\nassert solution('1 10') == 'NG'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n400 400\") == \"OK\"\nassert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n500 500\") == \"OK\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3''') == '2.6666666667'\nassert solution('''2 3''') == '5.0000000000'\nassert solution('''5 3''') == '11.500000000'\nassert solution('''1000000 1''') == '1.0000000000'\nassert solution('''1000000 2''') == '1.500000000'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('8 5') == '5.3333333333'\nassert solution('9 2') == '4.8'\nassert solution('8 4') == '2.5'\nassert solution('8 5') == '5.3333333333'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == '2.6666666667'\nassert solution(\"-5 1\") == '-0.2'\nassert solution(\"2 10\") == '0.2'\nassert solution(\"20 3\") == '0.6'\nassert solution(\"-2 1\") == '-1'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3') == '2.66667'\n\nprint(solution('8 3'))\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3') == '2.6666666667'\n'''\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 3') == '2.6666666667'\n'''\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 3''') == '2.6666666667'\nassert solution('''8 5''') == '1.8000000000000001'\nassert solution('''5 10''') == '1.5'\nassert solution('''1 50''') == '1.0000000000000002'\nassert solution('''10 10''') == '2.5'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"1.000000\"\nassert solution(\"4 4\") == \"1.250000\"\nassert solution(\"3 4\") == \"0.500000\"\nassert solution(\"3 3\") == \"0.750000\"\nassert solution(\"2 2\") == \"1.000000\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"1 5 6\") == \"2\"\nassert solution(\"2 5 6\") == \"3\"\nassert solution(\"2 5 3\") == \"2\"\nassert solution(\"3 5 3\") == \"3\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"5 9 7\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\nassert solution(\"7 5 4\") == \"0\"\nassert solution(\"5 4 9\") == \"0\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[9:]\n\"\"\""
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('2 0 1') == '0'\nassert solution('8 4 2') == '0'\nassert solution('3 1 3') == '1'\nassert solution('10 5 5') == '3'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('7 4 3') == '2'\nassert solution('10 4 3') == '1'\nassert solution('7 3 1') == '2'\nassert solution('20 4 3') == '1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"20 6 13\") == \"14\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"1 4 5\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '1'\nassert solution('2 3 2') == '0'\nassert solution('1 2 2') == '1'\nassert solution('2 2 1') == '1'\nassert solution('4 3 2') == '1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('2 5 1') == '0'\nassert solution('10 5 10') == '5'\nassert solution('5 4 3') == '1'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"3\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"3 1 3\") == \"2\"\nassert solution(\"3 3 1\") == \"2\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 3 2\\n3 1 2\\n') == '3'\n\"\"\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''2\n1 3\n2 3''') == '0'\nassert solution('''7\n1 2 3 4 5 6 7\n7 1 2 3 4 5 6\n1 3 1 2 4 5 6\n1 3 2 1 4 5 6\n2 1 2 3 4 5 6\n2 1 3 1 4 5 6\n2 2 1 3 4 5 6\n2 2 3 1 4 5 6''') == '4'\n'''\n\n'''\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''10\n1 3 2 4 5 6 7 8 9 10\n1 3 2 4 5 6 7 8 9 10''') == '9'\nassert solution('''4\n1 3 2 4\n3 1 2 4\n2 1 3 4''') == '4'\nassert solution('''5\n1 3 2 4 5\n3 1 2 4 5\n2 1 3 4 5\n1 2 3 4 5\n2 3 1 4 5''') == '4'\n'''\n\n-----Note-----\n\nA more sophisticated way of writing the same problem is to consider a set of permutations, say A. The set A is a multiple of the set B, if it is a permutation of B.\n\nFor a set A and a set B of size N, we can encode A as a set of integers, say A' = (a1,a2,\u2026,an). A' is a multiple of B if and only if it is a permutation of B.\n\nFor example, {1,2,3} is a multiple of {3,1,2}.\n\nWe define |A'| = |B| and |A| = n!/(n-1)! if A' is a multiple of B, and |A| is the smallest multiple of B, if A is a multiple of B, and 0 otherwise.\n\nWe then use the maximum of |A'| and |A| to find the answer.\n'''\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('2 3 1') == '5'\nassert solution('1 1 2') == '2'\nassert solution('1 2 2') == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n\") == \"3\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 2''') == '3'\nassert solution('''3\n3 1 2''') == '3'\nassert solution('''2\n1 3''') == '0'\nassert solution('''2\n3 1''') == '1'\nassert solution('''3\n1 2 3''') == '1'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 2''') == '3'\nassert solution('''3\n1 3 2''') == '3'\nassert solution('''2\n2 1''') == '1'\nassert solution('''2\n1 2''') == '1'\nassert solution('''2\n3 1''') == '1'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 3 2''') == '3'\nassert solution('''2\n1 3''') == '1'\nassert solution('''4\n2 4 3 1''') == '4'\nassert solution('''5\n3 4 2 1''') == '2'\nassert solution('''6\n3 4 1 2 5''') == '4'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('GATATATGCATATACTT') == 'ATATAT'\nassert solution('GATATATTAT') == 'ATATAT'\nassert solution('ATATAT') == 'ATATAT'\nassert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('ATCODER') == 3\nassert solution('ATCODER') == 3\nassert solution('ATC') == 1\nassert solution('ATCODER') == 3\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 1\nassert solution('AT') == 2\nassert solution('ATT') == 2\nassert solution('ATCODER') == 3\nassert solution('AATCODER') == 3\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('GTACGT') == 'GTACGT'\nassert solution('ATCODER') == 'ATC'\nassert solution('GTCGT') == 'GT'\nassert solution('GTCGT') == 'GT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('AC') == 2\nassert solution('ACGT') == 3\nassert solution('ATCODER') == 3\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'TC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('ACGT') == 4\nassert solution('TCAACGT') == 4\nassert solution('TCAAGGA') == 6\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('TT') == ''\nassert solution('AAAAA') == 'A'\nassert solution('TTTT') == 'TT'\nassert solution('TTTTT') == 'TTTT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 3\nassert solution('GCATGCAT') == 3\nassert solution('GATATATGCAT') == 5\nassert solution('GATATATGCAT') == 5\nassert solution('ATGCTGATCGACGTGTGGAGAGATGGATATGCATGTATAGCATGGTGTATCATGTCAGG') == 13\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATCODER\"\nassert solution(\"ATCODER\") == \"ATCODER\"\nassert solution(\"ATCODER\") == \"ATCODER\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"4\\n\") == \"1\"\nassert solution(\"5\\n\") == \"0\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''101\n''') == \"9\"\nassert solution('''102\n''') == \"9\"\nassert solution('''103\n''') == \"2\"\nassert solution('''104\n''') == \"2\"\nassert solution('''105\n''') == \"2\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\nassert solution('1') == '1'\nassert solution('100') == '1'\nassert solution('999999999') == '10'\nassert solution('1000110100') == '4'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11') == '9'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9''') == '9'\nassert solution('''11''') == '9'\nassert solution('''101''') == '9'\nassert solution('''110''') == '9'\nassert solution('''1001''') == '9'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11') == '9'\nassert solution('12') == '10'\nassert solution('123') == '7'\nassert solution('1234') == '10'\nassert solution('12345') == '12'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11') == '9'\nassert solution('99') == '0'\nassert solution('1000') == '0'\nassert solution('10000') == '0'\nassert solution('1000000') == '0'\n\nprint(\"Testcases passed\")\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cufofcoffee') == 'cufofhottea'\nassert solution('coffeecup') == 'hotteecup'\nassert solution('cupofcoffee') == 'hotteecup'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n'''"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cupofcoffee') == 'cuphoftea'\nassert solution('cupofhottea') == 'cupoftea'\n\"\"\"\n\ns, t = input(), input()\nn = len(s)\nm = len(t)\n\ndp = [[0 for _ in range(m + 1)] for _ in range(n + 1)]\n\nfor i in range(n + 1):\n    for j in range(m + 1):\n        if i == 0 or j == 0:\n            dp[i][j] = i + j\n        elif s[i - 1] == t[j - 1]:\n            dp[i][j] = dp[i - 1][j - 1]\n        else:\n            dp[i][j] = 1 + min(dp[i - 1][j - 1], dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m])\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('hippopotamus') == 'hippotasticus'\nassert solution('tactical') == 'tactical'\nassert solution('tactical') == 'tactical'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('cufc') == 4\nassert solution('cuft') == 4\nassert solution('cuzc') == 4\nassert solution('cuqc') == 4\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"3 0\") == \"5\"\nassert solution(\"7 0\") == \"7\"\nassert solution(\"7 8\") == \"5 6 7 8 9\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 7\\n') == '5 6 7 8 9'\nassert solution('1 2\\n') == '1'\n'''\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n-----"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n\"\"\"\n\nk, x = map(int, stdin.split())\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('3 3') == '0 1 2'\nassert solution('7 8') == '0 1 2 3 4 5'\nassert solution('5 2') == '0 1'\nassert solution('5 2') == '0 1'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 7''') == '5 6 7 8 9'\nassert solution('''3 1''') == '5'\nassert solution('''9 9 9''') == ''\n'''\nimport sys\nfrom typing import Tuple"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '3 7'\n) == '5 6 7 8 9'\n\"\"\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 7''') == '5 6 7 8 9'\nassert solution('''1 0''') == '1'\nassert solution('''1 2''') == '1 2'\nassert solution('''1 0''') == '1'\nassert solution('''2 3''') == '1 2'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('25') == 'No'\nassert solution('60') == 'Yes'\nassert solution('-40') == 'No'\nassert solution('-100') == 'No'\nassert solution('-110') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('25') == 'No'\nassert solution('-40') == 'Yes'\nassert solution('25') == 'No'\nassert solution('30') == 'Yes'\nassert solution('-30') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"Test 1: pass\")\n\nassert solution(input()) == \"No\"\nprint(\"Test 2: pass\")\n\nassert solution(input()) == \"Yes\"\nprint(\"Test 3: pass\")\n\nassert solution(input()) == \"No\"\nprint(\"Test 4: pass\")\n\nassert solution(input()) == \"Yes\"\nprint(\"Test 5: pass\")\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == 'Yes'\nassert solution(2) == 'No'\nassert solution(3) == 'No'\nassert solution(4) == 'Yes'\nassert solution(5) == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == 'Yes'\nassert solution(input(\"1\")) == 'Yes'\nassert solution(input(\"0\")) == 'Yes'\nassert solution(input(\"-1\")) == 'No'\nassert solution(input(\"-2\")) == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\">30\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"<30\") == \"No\"\nassert solution(\"<=30\") == \"No\"\nassert solution(\"30<\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('25') == 'No'\nassert solution('40') == 'Yes'\nassert solution('25') == 'Yes'\nassert solution('30') == 'Yes'\nassert solution('50') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('25') == 'No'\nassert solution('30') == 'Yes'\nassert solution('-1') == 'No'\nassert solution('0') == 'No'\nassert solution('29.5') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"Yes\"\nassert solution(\"-30\") == \"No\"\nassert solution(\"25.5\") == \"Yes\"\nassert solution(\"-30.5\") == \"No\"\nassert solution(\"-40\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 5') == '0'\nassert solution('-2 8') == '1'\nassert solution('0 0') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 1') == '1'\nassert solution('1 2\\n3 4') == '0'\nassert solution('1 2\\n3 4\\n4 5') == '1'\nassert solution('2 3\\n1 2\\n2 3') == '0'\nassert solution('5 3\\n2 5\\n1 4\\n4 5') == '2'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 5') == '1'\nassert solution('-2 8') == '1'\nassert solution('3 2') == '1'\nassert solution('1 2 -2 1') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n5 5\\n-2 8\\n') == '1'\nassert solution('2 4\\n0 0\\n-1 -2\\n') == '1'\nassert solution('2 4\\n1 2\\n1 2\\n') == '0'\nassert solution('2 4\\n1 2\\n0 2\\n') == '0'\nassert solution('2 4\\n1 -2\\n0 2\\n') == '0'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"5 3\\n0 0\\n-5 -5\\n1 1\\n-1 -1\\n-5 5\\n2 2\\n-2 -2\\n5 5\") == \"3\"\nassert solution(\"5 5\\n0 0\\n5 5\\n0 0\\n-5 -5\\n1 1\\n-1 -1\\n-5 5\") == \"3\"\nassert solution(\"3 3\\n1 1\\n1 1\\n0 0\") == \"6\"\nassert solution(\"1 1\\n1 1\\n0 0\\n0 0\") == \"4\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"1 2\n5 5\n-2 8\n\"\"\") == \"1\\n\"\nassert solution(\n\"\"\"3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"1\\n\"\nassert solution(\n\"\"\"5 4\n1 2\n5 6\n-4 1\n-5 -4\n\"\"\") == \"2\\n\"\nassert solution(\n\"\"\"2 5\n1 2\n2 4\n2 4\n-5 -2\n\"\"\") == \"2\\n\"\nassert solution(\n\"\"\"1 3\n1 3\n2 3\n1 3\n-1 -3\n\"\"\") == \"3\\n\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''1 2\n5 5'''\n) == '1'\n\nassert solution(\n'''2 3\n1 1\n2 3'''\n) == '0'\n\nassert solution(\n'''4 3\n1 1\n1 2\n3 4\n1 2'''\n) == '2'\n\nassert solution(\n'''3 4\n1 1\n1 2\n1 3'''\n) == '0'\n\nassert solution(\n'''5 4\n1 1\n1 2\n1 3\n1 4\n2 3'''\n) == '2'"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3776') == 'Good'\nassert solution('2376') == 'Good'\nassert solution('3777') == 'Bad'\nassert solution('2376') == 'Bad'\nassert solution('3778') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"2197\") == \"Good\"\nassert solution(\"3373\") == \"Good\"\nassert solution(\"1944\") == \"Good\"\nassert solution(\"9587\") == \"Bad\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3776') == 'Good'\nassert solution('2856') == 'Good'\nassert solution('3739') == 'Bad'\nassert solution('2345') == 'Good'\nassert solution('3578') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2123') == 'Good'\nassert solution('2131') == 'Good'\nassert solution('2122') == 'Good'\nassert solution('2234') == 'Good'\nassert solution('2345') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3776') == 'Bad'\nassert solution('4776') == 'Good'\nassert solution('3777') == 'Bad'\nassert solution('3877') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3963') == 'Bad'\nassert solution('3778') == 'Good'\nassert solution('3838') == 'Good'\nassert solution('3803') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3776') == \"Good\"\nassert solution('1232') == \"Bad\"\nassert solution('1232') == \"Good\"\nassert solution('1233') == \"Good\"\nassert solution('1237') == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Good'\nassert solution('1234') == 'Bad'\nassert solution('1237') == 'Good'\nassert solution('2375') == 'Bad'\nassert solution('2378') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3124') == 'Good'\nassert solution('4111') == 'Bad'\nassert solution('8899') == 'Good'\nassert solution('8999') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"6265\") == \"Good\"\nassert solution(\"3333\") == \"Good\"\nassert solution(\"1111\") == \"Good\"\nassert solution(\"3623\") == \"Bad\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 4''') == '3.5'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\nassert solution('''100\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == '100'\nassert solution('''123456789\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '123456789'\n'''\n123456789\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3.5\"\nprint(solution(stdin))\nassert solution(stdin) == \"3.49999\"\nprint(solution(stdin))\nassert solution(stdin) == \"3.499999999999999\"\nprint(solution(stdin))\nassert solution(stdin) == \"3.499999999999999999\"\nprint(solution(stdin))\nassert solution(stdin) == \"3.4999999999999999990000\"\nprint(solution(stdin))"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3.5\"\n\"\"\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1.5'\nassert solution('2 1') == '1.5'\nassert solution('1 1') == '1'\nassert solution('2') == '1.5'\nassert solution('10') == '1.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('3\\n1 2 3') == '2.5'\nassert solution('2\\n2 2') == '2.0'\nassert solution('2\\n1 1') == '1.0'\nassert solution('2\\n0') == '0'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == 3.0\nassert solution('2 3') == 3.0\nassert solution('2 3') == 3.0\nassert solution('1 3 2 4') == 3.5\nassert solution('1 3 2') == 3.5\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 4\\n2 2 2 2\") == \"2.5\"\nassert solution(\"4\\n5 9 6 1\\n1\\n2\\n3\\n4\\n5\\n6\") == \"2.5\"\nassert solution(\"4\\n4 2 1 3\\n4\\n3 2 1\\n2\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\") == \"1.96566\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\") == \"2.5\"\nassert solution(\"4\\n5 3 3 2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\") == \"2.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4') == '3.5'\nassert solution('2 3 4') == '3.5'\nassert solution('10 5 2') == '8.5'\nassert solution('1 2 3') == '0.5'\nassert solution('4 5 6 7 8 9 10') == '8.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 2 3 4\n''') == '2'\nassert solution('''2\n2 2\n1 2\n3 4\n1 2 1 3 4\n''') == '3.5'\nassert solution('''2\n3 3\n1 2\n4 4\n1 2 1 3 4\n''') == '3.5'\nassert solution('''5\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9\n6 7 8 9 10\n7 8 9 10 11\n8 9 10 11 12\n9 10 11 12 13\n10 11 12 13 14\n''') == '13.5'\nassert solution('''7\n1 2 3 4 5 6 7\n2 3 4 5 6 7 8\n3 4 5 6 7 8 9\n4 5 6 7 8 9 10\n5 6 7 8 9 10 11\n6 7 8 9 10 11 12\n7 8 9 10 11 12 13\n8 9 10 11 12 13 14\n9 10 11 12 13 14 15\n10 11 12 13 14 15 16\n11 12 13 14 15 16 17\n12 13 14 15 16 17 18\n13 14 15 16 17 18 19\n14 15 16 17 18 19 20\n15 16 17 18 19 20 21\n16 17 18 19 20 21 22\n17 18 19 20 21 22 23\n18 19 20 21 22 23 24\n19 20 21 22 23 24 25\n''') == '14.5'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14'\n\nassert solution(\n'''\n5\n3 1 2\n2 5 4\n3 6\n''') == '34'\n\nassert solution(\n'''\n2\n2 1 1\n1 2 1\n1 1 1\n''') == '4'\n\nassert solution(\n'''\n4\n2 3 1 3\n2 5 4\n3 6\n''') == '10'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1') == '3'\nassert solution('2\\n1\\n1') == '4'\nassert solution('3\\n1\\n1') == '6'\nassert solution('1\\n2\\n1') == '4'\nassert solution('2\\n5\\n4') == '7'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n2 1 4\\n3 1 3\\n3 4 3\\n3 3') == '70'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n2 1 4\\n3 1 3\\n3 4 3\\n3 3\\n2 4\\n3 4') == '29'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n2 1 4\\n3 1 3\\n3 4 3\\n3 3\\n2 4\\n3 4') == '29'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n2 1 4\\n3 1 3\\n3 4 3\\n3 3\\n2 4\\n3 4\\n2 5\\n3 4\\n3 6') == '29'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n    3\n    3 1 2\n    2 5 4\n    3 6\n''') == '14'\n\nassert solution('''\n    1\n    0\n''') == '0'\n\nassert solution('''\n    3\n    1 2 3\n    4 5 6\n    7 8 9\n''') == '8'\n\nassert solution('''\n    2\n    2 1\n    1 2\n''') == '5'\n\nassert solution('''\n    2\n    2 1\n    3 2\n''') == '6'"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('2\\n2 5 4\\n2 8') == '0'\nassert solution('2\\n1 1\\n1 2') == '0'\nassert solution('5\\n2 3 5 6 1\\n5 4 2 8 3\\n2 2 3 2 4') == '25'\nassert solution('6\\n3 3 2 1 1 1 1\\n6 6 6 6 5 5 5\\n5 2 2 5 4 4 3') == '72'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 14\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n3 7\\n2 5 6') == '45'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''10\n3 1 2\n2 5 4\n3 6''') == '34'\nassert solution('''7\n2 1 1\n1 2 1\n1 3 1\n2 4 1\n1 4 1\n2 5 1\n2 6 1\n2 7 1\n2 8 1\n2 9 1\n2 10 1\n2 11 1''') == '243'\nassert solution('''14\n2 1 1\n1 2 1\n1 3 1\n2 4 1\n1 4 1\n2 5 1\n2 6 1\n2 7 1\n2 8 1\n2 9 1\n2 10 1\n2 11 1\n2 12 1\n2 13 1\n2 14 1''') == '306'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 3 4') == '1'\nassert solution('12 34 45 5 6') == '2'\nassert solution('12 34 45 6 7') == '1'\nassert solution('12 34 45 6 67') == '0'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ZABCDBABCQ') == \"2\"\nassert solution('AXYZ') == \"0\"\nassert solution('BABABAB') == \"4\"\nassert solution('AAAAAAAAAAA') == \"8\"\nassert solution('BBBBBB') == \"0\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\nHELO\nHELLO\nWELCOME\n''') == 'HELLO HELO'\nassert solution('''2\nWHATEVER\n''') == ''\nassert solution('''7\nWELCOME\nHELLO\nWELCOME\nHELLO\nWELCOME\nHELLO\n''') == 'HELLO HELLO HELLO HELLO HELLO'\nassert solution('''10\nSOLUTION\nWELCOME\nHELLO\nWELCOME\nHELLO\nWELCOME\nHELLO\nWELCOME\nHELLO\nWELCOME\n''') == 'HELLO HELO HELO HELO HELO'\nassert solution('''9\nHIHIHIHIHIHIHIHI\nHIHIHIHIHIHIHIHI\nHIHIHIHIHIHIHIHI\nHIHIHIHIHIHIHIHI\nHIHIHIHIHIHIHIHI\nHIHIHIHIHIHIHIHI\nHIHIHIHIHIHIHIHI\nHIHIHIHIHIHIHIHI\nHIHIHIHIHIHIHIHI\n''') == 'HELLO HELLO HELLO HELLO HELLO HELLO HELLO'\nprint(solution(input()))\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\nZABCDBABCQ\n''') == '2'\n\n'''\nWe have a string S of length N consisting of uppercase English letters.\nHow many times does ABC occur in S as contiguous subsequences (see Sample Inputs and Outputs)?\n\nWrite 5 lines of code to test the correctness of solution:\nWe have a string S of length N consisting of uppercase English letters.\nHow many times does ABC occur in S as contiguous subsequences (see Sample Inputs and Outputs)?\n\n-----Constraints-----\n - 3 \\leq N \\leq 50\n - S consists of uppercase English letters.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nS\n\n-----Output-----\nPrint number of occurrences of ABC in S as contiguous subsequences.\n\n-----Sample Input-----\n10\nZABCDBABCQ\n\n-----Sample Output-----\n2\n\nTwo contiguous subsequences of S are equal to ABC: the 2-nd through 4-th characters, and the 7-th through 9-th characters.\n'''\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('', 'AB', 1) == 'AB'\nassert solution('', 'AB', 2) == 'AB'\nassert solution('', 'AB', 3) == 'AB'\nassert solution('', 'AB', 4) == 'AB'\nassert solution('', 'AB', 5) == 'AB'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('zabcdbabcz') == '2'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '0'\nassert solution('Xyz') == '0'\nassert solution('abcdefghijklmnopqrstuvwxy') == '0'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('MZCZQBVZRJVXQXGQXRXYKQPYMXVVQXJXKQBQJTJXJX') == '1'\nassert solution('AACBBCDB') == '2'\nassert solution('MZCZQBVZRJVXQXGQXRXYKQPYMXVVQXJXKQBQJTJXJXZ') == '2'\nassert solution('AXYZLJKUHJDZTYQQQPXRKBZALKJKJHUQJXJQJXJQBJXJZHUJXJQJXJQ') == '0'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('ZABCDBABCQ') == '2'\nassert solution('ABC') == '0'\nassert solution('ABBA') == '2'\nassert solution('ABCD') == '0'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''30\nPQRSTUVWXYZYZ''') == '3'\nassert solution('''25\nAABCDEFGHIJKLMNOPQRSTUVWXYZ''') == '0'\nassert solution('''1\nAAAA''') == '0'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\nHOROKANAI') == '1'\n'''\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nOBIRA\\nRUMOI\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nOBIRA\\nRUMOI\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nOBIRA\\nHABORO\\nRUMOI\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nOBIRA\\nHABORO\\nRUMOI\\nHOROKANAI') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI''') == '2'\nassert solution('''5\nHABORO\nMASHIKE\nRUMOI\nOBIRA\nHOROKANAI''') == '2'\nassert solution('''5\nMASHIKE\nMASHIKE\nRUMOI\nOBIRA\nHABORO''') == '1'\nassert solution('''5\nHABORO\nHABORO\nMASHIKE\nRUMOI\nOBIRA''') == '1'\nassert solution('''5\nHABORO\nMASHIKE\nRUMOI\nOBIRA\nHABORO''') == '1'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"mashi\\nmori\\no\\brado\\nhaboro\\nhorokanai\") == \"2\"\nassert solution(\"mashi\\nmori\\no\\brado\\nhaboro\\nhorokanai\\nhaboro\\nhumor\") == \"3\"\nassert solution(\"mashi\\nmori\\no\\brado\\nhaboro\\nhorokanai\\nhaboro\\nhumor\\nkabanai\") == \"1\"\nassert solution(\"mashi\\nmori\\no\\brado\\nhaboro\\nhorokanai\\nhaboro\\nhumor\\nkabanai\\nkazu\\nhabor\") == \"2\"\nassert solution(\"mashi\\nmori\\no\\brado\\nhaboro\\nhorokanai\\nhaboro\\nhumor\\nkabanai\\nkazu\\nhabor\\nkabonai\") == \"3\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"MASHIKE\") == \"\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\nHABORO\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"8\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('5 6') == 'No'\nassert solution('3 6') == 'Yes'\nassert solution('7 8') == 'No'\nassert solution('8 8') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('3 2') == 'Yes'\nassert solution('4 1') == 'Yes'\nassert solution('1 1') == 'No'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"5 1\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"2 2\") == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('7 0') == 'No'\nassert solution('6 0') == 'No'\nassert solution('6 2') == 'Yes'\nassert solution('3 2') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"5 2\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 1') == 'Yes'\n\"\"\"\nimport sys"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('aabb') == 'No'\nassert solution('xabcdef') == 'Yes'\nassert solution('xabc') == 'Yes'\nassert solution('xxyxx') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'No'\nassert solution('sippuu') == 'Yes'\nassert solution('hejsan') == 'No'\nassert solution('hefjks') == 'No'\nassert solution('tihs') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('sippuauu') == 'Yes'\nassert solution('sippuauuauu') == 'No'\nassert solution('sssss') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippus') == 'No'\nassert solution('sippu') == 'No'\nassert solution('sipp') == 'No'\nassert solution('sipp') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('abaa') == 'No'\nassert solution('abcdd') == 'No'\nassert solution('abcdee') == 'Yes'\nassert solution('abcdef') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"poumq\") == \"No\"\nassert solution(\"teppi\") == \"No\"\nassert solution(\"mama\") == \"No\"\nassert solution(\"maam\") == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('suipxu') == 'No'\nassert solution('sippu') == 'Yes'\nassert solution('suip') == 'Yes'\nassert solution('sipp') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('bpaujw') == 'No'\nassert solution('aabcd') == 'No'\nassert solution('sippuu') == 'Yes'\nassert solution('aaabbb') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sam') == 'No'\nassert solution('sipp') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('sippu') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(solution.readstdin()) == 'Yes'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == '70'\nassert solution('1 80') == '80'\nassert solution('4 50') == '50'\nassert solution('3 70') == '4'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"7 60\") == \"TLE\"\nassert solution(\"1 80\") == \"4\"\nassert solution(\"4 50\") == \"TLE\"\nassert solution(\"3 70\") == \"4\"\n\n\"\"\"\n\nfrom heapq import heappop, heappush\nfrom collections import deque"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50''') == '4'\nassert solution('''3 70\n7 60\n1 80\n4 50''') == 'TLE'\nassert solution('''3 70\n7 60\n1 80\n4 50\n1 90\n4 90\n5 80\n6 70''') == '40'\nassert solution('''3 70\n7 60\n1 80\n4 50\n1 90\n4 90\n5 80\n6 70\n1 100\n4 100\n5 100\n6 100''') == 'TLE'\nassert solution('''3 70\n7 60\n1 80\n4 50\n1 90\n4 90\n5 80\n6 70\n1 100\n4 100\n5 100\n6 100\n1 110\n4 110\n5 110\n6 110''') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50''') == '4'\nassert solution('''3 70\n7 60\n1 80\n4 50''') == 'TLE'\nassert solution('''3 70\n7 60\n1 80\n4 50\n2 40\n3 30\n4 20\n5 10\n6 5\n7 4\n8 3\n9 2\n10 1\n11 0\n12 -1\n13 -2\n14 -3\n15 -4\n16 -5\n17 -6\n18 -7\n19 -8\n20 -9\n21 -10\n22 -11\n23 -12\n24 -13\n25 -14\n26 -15\n27 -16\n28 -17\n29 -18\n30 -19\n31 -20\n32 -21\n33 -22\n34 -23\n35 -24\n36 -25\n37 -26\n38 -27\n39 -28\n40 -29\n41 -30\n42 -31\n43 -32\n44 -33\n45 -34\n46 -35\n47 -36\n48 -37\n49 -38\n50 -39\n51 -40\n52 -41\n53 -42\n54 -43\n55 -44\n56 -45\n57 -46\n58 -47\n59 -48\n60 -49\n61 -50\n62 -51\n63 -52\n64 -53\n65 -54\n66 -55\n67 -56\n68 -57\n69 -58\n70 -59\n71 -60\n72 -61\n73 -62\n74 -63\n75 -64\n76 -65\n77 -66\n78 -67\n79 -68\n80 -69\n81 -70\n82 -71\n83 -72\n84 -73\n85 -74\n86 -75\n87 -76\n88 -77\n89 -78\n90 -79\n91 -80\n92 -81\n93 -82\n94 -83\n95 -84\n96 -85\n97 -86\n98 -87\n99 -88\n100 -89\n101 -90\n102 -91\n103 -92\n104 -93\n105 -94\n106 -95\n107 -96\n108 -97\n109 -98\n110 -99\n111 -100''') == '4'\nassert solution('''3 70\n7 60\n1 80\n4 50\n2 40\n3 30\n4 20\n5 10\n6 5\n7 4\n8 3\n9 2\n10 1\n11 0\n12 -1\n13 -2\n14 -3\n15 -4\n16 -5\n17 -6\n18 -7\n19 -8\n20 -9\n21 -10\n22 -11\n23 -12\n24 -13\n25 -14\n26 -15\n27 -16\n28 -17\n29 -18\n30 -19\n31 -20\n32 -21\n33 -22\n34 -23\n35 -24\n36 -25\n37 -26\n38 -27\n39 -28\n40 -29\n41 -30\n42 -31\n43 -32\n44 -33\n45 -34\n46 -35\n47 -36\n48 -37\n49 -38\n50 -39\n51 -40\n52 -41\n53 -42\n54 -43\n55 -44\n56 -45\n57 -46\n58 -47\n59 -48\n60 -49\n61 -50\n62 -51\n63 -52\n64 -53\n65 -54\n66 -55\n67 -56\n68 -57\n69 -58\n70 -59\n71 -60\n72 -61\n73 -62\n74 -63\n75 -64\n76 -65\n77 -66\n78 -67\n79 -68\n80 -69\n81 -70\n82 -71\n83 -72\n84 -73\n85 -74\n86 -75\n87 -76\n88 -77\n89 -78\n90 -79\n91 -80\n92 -81\n93 -82\n94 -83\n95 -84\n96 -85\n97 -86\n98 -87\n99 -88\n100 -89\n101 -90\n102 -91\n103 -92\n104 -93\n105 -94\n106 -95\n107 -96\n108 -97\n109 -98\n110 -99\n111 -100''') == 'TLE'\nassert solution('''6 9\n8 6\n6 6\n6 2\n5 8\n4 2\n4 2\n4 1\n5 8\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5 8\n4 1\n4 1\n4 1\n4 1\n5"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"1\\nTLE\"\nassert solution(\"2\\n1\") == \"TLE\\nTLE\"\nassert solution(\"3\\n1\") == \"1\\nTLE\"\nassert solution(\"4\\n1\") == \"1\\nTLE\"\nassert solution(\"5\\n1\") == \"1\\nTLE\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'TLE'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('5 2') == '2'\nassert solution('5 1') == '5'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'TLE'\nassert solution('1 1\\n1 1') == 'TLE'\nassert solution('1 1\\n1 1\\n1 1') == 'TLE'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '4'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '4'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"7 60\") == \"TLE\"\nassert solution(\"1 80\") == \"4\"\nassert solution(\"4 50\") == \"2\"\nassert solution(\"7 60 5 90\") == \"2\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == 1\nassert solution('3 4') == 1\nassert solution('2 10') == 2\nassert solution('10 1000') == 10\nassert solution('1 1000') == 1000\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"8\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('1 1 1') == '0'\nassert solution('10 10 10') == '90'\nassert solution('1000 1000 1000') == '90000'\nassert solution('4 2 9') == '8'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('2 2 2') == '4'\nassert solution('5 10 100') == '170'\nassert solution('100 1 0') == '100'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2 9''') == '8'\n'''\nprint(solution('''4 2 9'''))\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('4 1 1') == '0'\nassert solution('4 1 5') == '8'\nassert solution('8 3 5') == '12'\nassert solution('100 7 4') == '80'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 10 4\") == \"8\"\nassert solution(\"2 10 9\") == \"8\"\nassert solution(\"1 5 10\") == \"5\"\nassert solution(\"1 5 11\") == \"11\"\nassert solution(\"1 5 13\") == \"13\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2 9') == '8'\n\"\"\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"7 8 22 9\") == \"35\"\nassert solution(\"1 100 100\") == \"100\"\nassert solution(\"50 30 50\") == \"100\"\nassert solution(\"40 30 40\") == \"80\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('acornistnt') == '1'\nassert solution('peanutbomb') == '0'\nassert solution('constraint') == '1'\n\"\"\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('greenbin') == 'beginner'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('aaaaaaaaaaaa') == 'aaaaaaaaaaaa'\nassert solution('Hello, World!') == 'Hello, World!'\nassert solution('antioch') == 'tochi'\n\n\"\"\""
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"acornistnt\\n\"\n    \"peanutbomb\\n\"\n    \"constraint\") == \"1\"\nassert solution(\n    \"flipping lttcs\\n\"\n    \"smiibtnafci\\n\"\n    \"cribazjwbyc\\n\"\n    \"fjbsjkgq\\n\"\n    \"dfgjbgsf\\n\"\n    \"slggtqjg\\n\"\n    \"xnagbluqe\\n\"\n    \"kzjnaxzio\\n\"\n    \"kykloxuzl\\n\"\n    \"knxugjmzk\\n\"\n    \"ajxjqmszf\\n\"\n    \"rzqgjrjrs\\n\"\n    \"gvynkucdc\\n\"\n    \"zalzstuvj\\n\"\n    \"jxmplvmnr\\n\"\n    \"rjkxwqcrd\\n\"\n    \"kfccztbxk\\n\"\n    \"wzgrqmjvz\\n\"\n    \"uqiqjgxu\\n\"\n    \"uqiqjgxu\\n\"\n    \"zvwzjgxu\\n\"\n    \"jxwzgxuj\\n\"\n    \"fuxwgjxz\\n\"\n    \"xzfjgxuj\\n\"\n    \"fkxzfjgx\\n\"\n    \"zjxfjgxu\\n\"\n    \"xvjxzgxu\\n\"\n    \"zjxvjxgx\\n\"\n    \"jvjxzgxu\\n\"\n    \"kvjxvjxg\\n\"\n    \"fjvjxzgx\\n\"\n    \"jgvjxzgx\\n\"\n    \"njvjxzgx\\n\"\n    \"vjxgvjxz\\n\"\n    \"kzgvjxzg\\n\"\n    \"kgvjxzgx\\n\"\n    \"iipgvjxz\\n\"\n    \"fvjxzgxu\\n\"\n    \"xuikjxzg\\n\"\n    \"fvjxzgxu\\n\"\n    \"jxuikjxz\\n\"\n    \"xuikxzjg\\n\"\n    \"lzuvjxzg\\n\"\n    \"jxuikxzg\\n\"\n    \"jxuvjxzg\\n\"\n    \"gvjxzgxu\\n\"\n    \"kzjxvjxz\\n\"\n    \"xzvjxzgx\\n\"\n    \"fjzvjxzgx\\n\"\n    \"zvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"xvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"jvjxzgxu\\n\"\n    \"jvjxzgxu\\n\"\n    \"kvjxzgxu\\n\"\n    \"iipgvjxz\\n\"\n    \"njvjxzgxu\\n\"\n    \"njvjxzgxu\\n\"\n    \"vjxgvjxz\\n\"\n    \"gvjxzgxu\\n\"\n    \"kzgvjxzg\\n\"\n    \"kgvjxzgx\\n\"\n    \"iipgvjxz\\n\"\n    \"njvjxzgxu\\n\"\n    \"njvjxzgxu\\n\"\n    \"vjxgvjxz\\n\"\n    \"fvjxzgxu\\n\"\n    \"xzfjxzgx\\n\"\n    \"fjzvjxzgx\\n\"\n    \"zvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"xvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"jvjxzgxu\\n\"\n    \"kzjxvjxz\\n\"\n    \"xzvjxzgx\\n\"\n    \"fjzvjxzgx\\n\"\n    \"zvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"xvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"jvjxzgxu\\n\"\n    \"kzjxvjxz\\n\"\n    \"xzvjxzgx\\n\"\n    \"fjzvjxzgx\\n\"\n    \"zvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"xvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"jvjxzgxu\\n\"\n    \"kzjxvjxz\\n\"\n    \"xzvjxzgx\\n\"\n    \"fjzvjxzgx\\n\"\n    \"zvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"xvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"jvjxzgxu\\n\"\n    \"kzjxvjxz\\n\"\n    \"xzvjxzgx\\n\"\n    \"fjzvjxzgx\\n\"\n    \"zvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"jxvjxzgxu\\n\"\n    \"zvjxzgxu\\n\"\n    \"xvjxz"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('a\\nc\\nb\\n') == '0'\nassert solution('a\\n') == '0'\nassert solution('a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n\n''') == '1'\n\nassert solution('''\n10\nacornistnt\npeanutbomb\nconstraint\n\n''') == '0'\n\nassert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n\n''') == '1'\n\nassert solution('''\n7\nabcdefg\nabcdefg\n''') == '2'\n\nassert solution('''\n3\nabcdefg\nabcdefg\n''') == '1'"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\n'''\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\"\"\"\nIf the alphabet is small, we can use the permutations of the alphabet to create permutations of numbers,\nthen we can map each permutation to a number.\n\nIf the alphabet is large, we can create permutations of lowercase letters.\n\n\"\"\""
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\nacornistnt\npeanutbomb\nconstraint\n''') == '1\\n'\nassert solution('''9\nsarongarong\ncattytattt\npuppetkfvn\npeanutbomb\ncookingutbxv\noutmolqwrd\nconstraint\n''') == '3\\n'\nassert solution('''100\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly\ngrufflygruffly"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"112123123412345$\\dots$\") == \"0123456789\"\nassert solution(\"1$\\dots$\") == \"0123456789\"\nassert solution(\"2$\\dots$\") == \"012345678\"\nassert solution(\"3$\\dots$\") == \"01234567\"\nassert solution(\"4$\\dots$\") == \"012345\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n1\n3\n20\n38\n56\n\"\"\"\n) == \"\"\"\n1\n2\n5\n2\n0\n\"\"\"\n\nassert solution(\n\"\"\"\n4\n2132\n506\n999999999\n1000000000\n\"\"\"\n) == \"\"\"\n8\n2\n9\n8\n\"\"\"\n\nassert solution(\n\"\"\"\n6\n1\n1\n1\n1\n1\n1\n\"\"\"\n) == \"\"\"\n0\n0\n0\n0\n0\n0\n\"\"\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('112123123412345$\\dots$') == '5'\nassert solution('11212312341234512345612345671234567812345678912345678910') == '8'\nassert solution('112123123412345$\\dots$') == '2'\nassert solution('11212312341234512345612345671234567812345678912345678910') == '9'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56\n''') == '''1\n2\n5\n2\n0\n'''\n\nassert solution('''4\n2132\n506\n999999999\n1000000000\n''') == '''8\n2\n9\n8\n0\n'''\n\nassert solution('''2\n1\n2\n5\n8\n11\n''') == '''0\n1\n1\n1\n0\n'''\n\nassert solution('''8\n1\n2\n5\n8\n11\n14\n17\n20\n23\n''') == '''8\n2\n9\n8\n7\n6\n'''\n\nassert solution('''20\n8\n10\n13\n16\n19\n''') == '''5\n2\n3\n4\n3\n2\n'''"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '1\\n1 1 1 1 1 2'\nassert solution('2\\n2\\n1\\n3\\n4') == '2\\n1 1 2 1 2'\nassert solution('3\\n2\\n1\\n2\\n3') == '1\\n1 1 1 2 2'\nassert solution('4\\n2\\n1\\n1\\n2') == '1\\n1 1 1 1'\nassert solution('5\\n3\\n1\\n2\\n3') == '2\\n1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 3\") == \"1\\n1 1 1\\n\"\nassert solution(\"4 2\\n1 4\\n3 1\\n\") == \"3\\n1 1 2 1\\n\"\nassert solution(\"5 2\\n1 2\\n3 1\\n4 1\\n\") == \"2\\n2 1 2 1 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n4 1\\n5 2\\n6 3\\n7 5\\n7 8\\n8 9\\n\") == \"3\\n1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"2\\n1 1 1 1 1 1\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"1\\n1 1 1 1 1 1\"\nassert solution(\"6 3\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n2 1\") == \"2\\n1 2 1 2 1 1\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n\") == \"1\\n1 1 1 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 1 1 1'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('10 3') == '1 1 1 1 1 1 1 1 1 1 1'\nassert solution('10 5') == '1 1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '1'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '1'\nassert solution('''10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n4 5\n4 6\n4 7\n''') == '3'\nassert solution('''7 3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 4\n2 5\n2 6\n''') == '3'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2\\n1 2 1 1 2\\n'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1\\n1 1 1\\n'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3\\n1 1 2 3 2 3 1 3 1\\n'\nassert solution('''15 2\n15 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 11\n3 12\n3 13\n3 14\n3 15\n4 16\n4 17\n4 18\n4 19\n4 20\n5 21\n5 22\n5 23\n5 24\n5 25\n5 26\n5 27\n6 28\n6 29\n6 30\n6 31\n7 32\n7 33\n7 34\n7 35\n7 36\n7 37\n7 38\n7 39\n7 40\n7 41\n7 42\n7 43\n8 44\n8 45\n8 46\n8 47\n8 48\n8 49\n8 50\n9 51\n9 52\n9 53\n9 54\n9 55\n9 56\n9 57\n9 58\n9 59\n9 60\n9 61\n9 62\n10 63\n10 64\n10 65\n10 66\n10 67\n10 68\n10 69\n10 70\n10 71\n10 72\n10 73\n10 74\n10 75\n10 76\n10 77\n10 78\n10 79\n10 80\n10 81\n10 82\n10 83\n10 84\n10 85\n10 86\n10 87\n10 88\n10 89\n10 90\n10 91\n10 92\n10 93\n10 94\n10 95\n10 96\n10 97\n10 98\n10 99\n10 100\n11 101\n11 102\n11 103\n11 104\n11 105\n11 106\n11 107\n11 108\n11 109\n11 110\n11 111\n11 112\n11 113\n11 114\n11 115\n11 116\n11 117\n11 118\n11 119\n11 120\n11 121\n11 122\n11 123\n11 124\n11 125\n11 126\n11 127\n11 128\n11 129\n11 130\n11 131\n11 132\n11 133\n11 134\n11 135\n11 136\n11 137\n11 138\n11 139\n11 140\n11 141\n11 142\n11 143\n11 144\n11 145\n11 146\n11 147\n11 148\n11 149\n11 150\n11 151\n11 152\n11 153\n11 154\n11 155\n11 156\n11 157\n11 158\n11 159\n11 160\n11 161\n11 162\n11 163\n11 164\n11 165\n11 166\n11 167\n11 168\n11 169\n11 170\n11 171\n11 172\n11 173\n11 174\n11 175\n11 176\n11 177\n11 178\n11 179\n11 180\n11 181\n11 182\n11 183\n11 184\n11 185\n11 186\n11 187\n11 188\n11 189\n11 190\n11 191\n11 192\n11 193\n11 194\n11 195\n11 196\n11 197\n11 198\n11 199\n11 200\n11 201\n11 202\n11 203\n11 204\n11 205\n11 206\n11 207\n11 208\n11 209\n11 210\n11 211\n11 212\n11 213\n11 214\n11 215\n11 216\n11 217\n11 218\n11 219\n11 220\n11 221\n11 222\n11 223\n11 224\n11 225\n11 226\n11 227\n11 228\n11 229\n11 230\n11 231\n11 232\n11 233\n11 234\n11 235\n11 236\n11 237\n11 238\n11 239\n11 240\n11 241\n11 242\n11 243\n11 244\n11 245\n11 246\n11 247\n11 248\n11 249\n11 250\n11 251\n11 252\n11 253\n11 254\n11 255\n11 256\n11 257\n11 258\n11 259\n11 260\n11 261\n11 262\n11 263\n11 264\n11 265\n11 266\n11 267\n11 268\n11 269\n11 270\n11 271\n11 272\n11 273\n11 274\n11 275\n11 276\n11 277\n11 278\n11 279\n11 280\n11 281\n11 282\n11 283\n11 284\n11 285\n11 286\n11 287\n11 288\n11 289\n11 290\n11 291\n11 292\n11 293\n11 294\n11 295\n11 296\n11 297\n11 298\n11 299\n11 300\n11 301\n11 302\n11 303\n11 304\n11 305\n11 306\n11 307\n11 308\n11 309\n11 310\n11 311\n11 312\n11 313\n11 314\n11 315\n11 316\n11 317\n11 318\n11 319\n11 320\n11 321\n11 322\n11 323\n11 324\n11 325\n11 326\n11 327\n11 328\n11 329\n11 330\n11 331\n11 332\n11 333\n11 334\n11 335\n11 336\n11 337\n11 338\n11 339\n11 340\n11 341\n11 342\n11 343\n11 344\n11 345\n11 346\n11 347\n11 348\n11 349\n11 350\n11 351\n11 352\n11 353\n11 354\n11 355\n11 356\n11 357\n11 358\n11 359\n11 360\n11 361\n11 362\n11 363\n11 364\n11 365\n11 366\n11 367\n11 368\n11 369\n11 370\n11 371\n11 372\n11 373\n11 374\n11 375\n11 376\n11 377\n11 378\n11 379\n11 380\n11 381\n11 382\n11 383\n11 384\n11"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1 1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"10 2\") == \"1 1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"10 4\") == \"1 1 2 2 3 3 4 4 5 5 6 6\"\nassert solution(\"6 4\") == \"1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2') == '2\\n1 2 1 1 2'\nassert solution('4 2') == '1\\n1 1 1'\nassert solution('10 2') == '3\\n1 1 1 1 1 1 1 1 1'\nassert solution('10 3') == '2\\n1 1 1 1 1 1 1'\nassert solution('10 5') == '2\\n1 1 1 1 1 1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 2\") == \"1 1 1 2\"\nassert solution(\"10 2\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"100 2\") == \"2\"\nassert solution(\"10 2\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4\"\"\") == \"\"\"-1 -1\n1 -1\n1 -1\n1 -1\n1 -1\"\"\")\nassert solution(\"\"\"9\"\"\") == \"\"\"-1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\"\"\")\nassert solution(\"\"\"7\"\"\") == \"\"\"-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\"\"\")\nassert solution(\"\"\"4\n1 2 4 4\"\"\") == \"\"\"-1 -1\n1 -1\n1 -1\n1 -1\n1 -1\"\"\")\nassert solution(\"\"\"9\n1 1 8 8 8 4 4 4 4\"\"\") == \"\"\"-1 -1\n3 8\n1 -1\n3 8\n1 -1\n3 8\n1 -1\n3 8\n1 -1\n3 8\"\"\")\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\n\n\n\"\"\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n4') == '2 4'\nassert solution('2\\n1 2 4 4') == '2 4'\nassert solution('4\\n1 1 8 8 8 4 4 4 4') == '2 4'\nassert solution('10\\n
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2 4 4\n''') == '2 4'\nassert solution('''9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'\nassert solution('''7\n4 3 7 1 4 3 3\n''') == '3 6'\nassert solution('''6\n5 4 3 2 1 4 3\n''') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\nassert solution('8\\n6 1 6 6 5 5 5 5\\n') == '4 4'\nassert solution('7\\n4 6 2 4 6 2 4\\n') == '5 7'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('3\\n1 1 3') == '1 3'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '4\\n'\n    '1 2 4 4\\n') == '2 4\\n'\n\nassert solution(\n    '9\\n'\n    '1 1 8 8 8 4 4 4 4\\n') == '3 8\\n'\n\nassert solution(\n    '7\\n'\n    '4 3 7 1 4 3 3\\n') == '3 6\\n'\n\"\"\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('2') == None\nassert solution('3') == None\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n3 5\n1 4\n2 4\n1 5\n2 3\"\"\") == \"3 2 4 1 5\"\nassert solution(\"\"\"3\n2 3\n3 1\n1 2\n\"\"\") == \"3 1 2\"\nassert solution(\"\"\"10\n7 22\n1 8\n2 9\n3 10\n4 11\n5 12\n6 13\n7 14\n8 15\n9 16\n10 17\n11 18\n12 19\n13 20\n14 21\n15 22\n\"\"\") == \"7 11 14 19 22 25\"\nassert solution(\"\"\"10\n7 22\n1 8\n2 9\n3 10\n4 11\n5 12\n6 13\n7 14\n8 15\n9 16\n10 17\n11 18\n12 19\n13 20\n14 21\n15 22\n\"\"\") == \"7 11 14 19 22 25\"\nassert solution(\"\"\"10\n6 19\n3 18\n4 17\n5 16\n1 15\n2 14\n7 13\n8 12\n9 11\n10 10\n11 9\n12 8\n13 7\n14 6\n15 5\n16 4\n17 3\n18 2\n19 1\n\"\"\") == \"7 13 10 19 16 17 16 17 17 17 18 19 1\"\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n\"\"\") == \"3 2 4 1 5\"\nassert solution(\"\"\"5\n3 5\n1 4\n2 4\n1 5\n2 3\n\"\"\") == \"3 2 4 1 5\"\nassert solution(\"\"\"5\n3 5\n1 4\n2 4\n3 1\n1 2\n2 3\n1 4\n\"\"\") == \"3 1 2 4\"\nassert solution(\"\"\"5\n3 5\n1 4\n2 4\n3 1\n4 2\n1 5\n2 3\n\"\"\") == \"3 1 2 4\"\nassert solution(\"\"\"10\n40\n1 50\n2 45\n3 43\n4 41\n5 40\n6 39\n7 38\n8 37\n9 36\n10 35\n\"\"\") == \"1 2 3 4 5 6 7 8 9 10\"\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''10\n2 7\n3 6\n4 5\n5 4\n6 3\n7 2\n8 1\n9 0\n10 9\n''') == '3 1 4 2 5 6 7 8 9 10'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''6\n2 4\n5 1\n6 2\n7 3\n3 2\n4 1\n''') == '2 3 1 4 5 6 7'\nassert solution('''5\n5 3\n4 2\n2 3\n3 1\n1 2\n''') == '2 3 1 4 5'\nassert solution('''3\n3 1\n1 2\n2 3\n''') == '1 2 3'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '3 1 2 4 5'\nassert solution('6\\n1 3\\n2 2\\n4 5\\n5 4\\n6 6\\n7 7\\n8 8') == '1 2 3 4 5 7 8 6'\nassert solution('8\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7') == '1 2 3 4 5 6 7 7 8'\nassert solution('4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '3 1 2 4 5'\n\n\n\"\"\"\nfrom collections import defaultdict, Counter\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''4\n2 3\n1 4\n1 5\n2 3''') == '3 1 2 4 5'\nassert solution('''2\n3 1\n1 2\n2 4\n1 5\n2 3''') == '3 1 2 5 4'\nassert solution('''3\n2 3\n2 1\n1 2\n''') == '3 1 2'\nassert solution('''1\n1 2\n''') == '1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5\\n5\\n5\\n5') == '5\\n5\\n5\\n5\\n5'\nassert solution('3\\n5\\n3\\n3\\n3') == '3\\n3\\n3\\n3\\n3'\nassert solution('5\\n3\\n1\\n2\\n4') == '3\\n1\\n2\\n4\\n5'\nassert solution('10\\n3\\n5\\n6\\n9\\n2\\n1\\n4\\n7\\n8') == '3\\n5\\n6\\n7\\n8\\n9\\n2\\n1'\nassert solution('3\\n3\\n3\\n3\\n3') == '3\\n3\\n3\\n3\\n3'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5\\n3 4\\n1 4\\n2 4\\n1 5\\n2 3\\n') == '3 2 4 1 5'\nassert solution('2 3\\n3 1\\n1 2\\n') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''2\n1 1\n2 2\n''') == '1 1 2'\nassert solution('''3\n1 2\n1 2\n2 3\n3 3\n''') == '1 3 1 3 2'\nassert solution('''4\n1 4\n2 4\n3 4\n4 4\n''') == '1 4 2 3 4'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6''') == '3'\nassert solution('''1 1000 10000 10 100 1000000000''') == '1'\nassert solution('''6''') == '3'\nassert solution('''1337 1337 1337 1337 1337 1337 1337 1337 1337 1337''') == '10'\nassert solution('''1 10 17 12 15 2''') == '3'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\") == \"10\"\nassert solution(\"1 1000 10000 10 100 1000000000\") == \"1\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 1000 10000 10 100 1000000000''') == '3'\nassert solution('''10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337''') == '10'\nassert solution('''6\n1 1000 10000 10 100 1000000000''') == '1'\nassert solution('''10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337''') == '1'\nassert solution('''6\n1 1000 10000 10 100 1000000000''') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 1') == '1'\nassert solution('3\\n1 1 1') == '2'\nassert solution('4\\n1 1 1 1') == '3'\nassert solution('5\\n1 1 1 1 1') == '4'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('1\\n1000') == '1'\nassert solution('2\\n1 10') == '2'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('7\\n1064765446561454776576574654654654654565465465465465465465465465465465') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('4\\n1 1000 1000 1000 1000') == '0'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '1'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('7\\n
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\n\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('test') == '0'\nassert solution('4 3 5 2') == '4'\nassert solution('6 3 5 2') == '-1'\nassert solution('15 5 3 2') == '5'\nassert solution('20 5 7 3') == '0'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '4'\nassert solution('15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n20 5 7 3') == '0'\nassert solution('15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n20 5 7 3\\n20 5 7 3') == '1'\nassert solution('15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n20 5 7 3\\n20 5 7 3\\n20 5 7 3') == '2'\nassert solution('15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n20 5 7 3\\n20 5 7 3\\n20 5 7 3\\n20 5 7 3') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n15 5 3 2') == '4'\nassert solution('2\\n15 5 4 3') == '-1'\nassert solution('3\\n15 5 2 1') == '5'\nassert solution('4\\n15 5 5 1') == '0'\nassert solution('5\\n16 7 5 2') == '2'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('8') == '0'\nassert solution('11') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"ac?b?c\") == \"24\"\nassert solution(\"????????\") == \"2835\"\nassert solution(\"a??c\") == \"46\"\nassert solution(\"ac?c\") == \"12\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\nac?b?c''') == '24'\nassert solution('''7\n???????''') == '2835'\nassert solution('''9\ncccbbbaaa''') == '0'\nassert solution('''5\na???c''') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == \"6\"\nassert solution(\"ac?b?c\") == \"24\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"????????\") == \"2835\"\nassert solution(\"ac?b?c\") == \"24\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('?') == 0\nassert solution('ac?b?c') == 24\nassert solution('???????') == 2835\nassert solution('a???c') == 46\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '2'\nassert solution('''6''') == '0'\nassert solution('''7''') == '2835'\nassert solution('''9''') == '0'\nassert solution('''5''') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == 24\nassert solution(\"ac?b?c\") == 0\nassert solution(\"???b?c\") == 2835\nassert solution(\"a???c\") == 46"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"????????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46\nassert solution(\"cccbbbaa\") == 0\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ac?b?c') == 24\nassert solution('???????') == 2835\nassert solution('cccbbbaaa') == 0\nassert solution('a???c') == 46\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"???????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46\nassert solution(\"cccbbbaaa\") == 0\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\naabcc\n\"\"\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n2') == '4'\nassert solution('5\\n0') == '16'\n\n\n\"\"\""
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == solution(fileinput.input()[0])\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(stdin) == \"\"\n\n\n-----Testcases-----\n\n4 1\n1 3 3\n2 3 5\n2 1 1\n\n16\n\n3 2\n1 3 3\n2 3 5\n2 1 1\n\n5 1\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n\n18\n\n\n-----Solution-----\n\"\"\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == None\nassert solution(input(\"\")) == None\nassert solution(input(\"\")) == None\nassert solution(input(\"\")) == None\nassert solution(input(\"\")) == None\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\nassert solution('''4 0\n1 3 3 7\n''') == '16'\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15''') == '18'"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"5\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"2 3\") == \"14\"\nassert solution(\"4 1\") == \"16\"\nassert solution(\"4 0\") == \"16\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 3 3\n2 3 5\n2 1 1\n\n3 2\n1 3 3 7\n2 3 5\n2 1 1\n\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n\n\"\"\"\n    ) == '5'\n\n\nassert solution(\n\"\"\"\n6 4\n1 2 3 4 5 6\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n1 6 14\n\"\"\"\n    ) == '18'\n\n\nassert solution(\n\"\"\"\n6 4\n1 2 3 4 5 6\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n1 6 14\n1 7 9\n\"\"\"\n    ) == '14'\n\n\nassert solution(\n\"\"\"\n6 4\n1 2 3 4 5 6\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n1 6 14\n1 7 9\n\"\"\"\n    ) == '14'\n\n\nassert solution(\n\"\"\"\n6 4\n1 2 3 4 5 6\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n1 6 14\n1 7 9\n1 8 11\n\"\"\"\n    ) == '17'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 3 3\\n2 3 5\\n2 1 1\\n') == '5'\nassert solution('3 0\\n1 3 3\\n2 3 5\\n2 1 1\\n') == '16'\nassert solution('4 0\\n1 3 3 7\\n2 3 5\\n2 1 1\\n') == '18'\n\n\n-----\n\n## 2.4\n\nWrite 5 lines of code to test the correctness of your solution.\nYou are given an undirected graph consisting of $n$ vertices. A number is written on each vertex; the number on vertex $i$ is $a_i$. Initially there are no edges in the graph.\n\nYou may add some edges to this graph, but you have to pay for them. The cost of adding an edge between vertices $x$ and $y$ is $a_x + a_y$ coins. There are also $m$ special offers, each of them is denoted by three numbers $x$, $y$ and $w$, and means that you can add an edge connecting vertices $x$ and $y$ and pay $w$ coins for it. You don't have to use special offers: if there is a pair of vertices $x$ and $y$ that has a special offer associated with it, you still may connect these two vertices paying $a_x + a_y$ coins for it.\n\nWhat is the minimum number of coins you have to spend to make the graph connected? Recall that a graph is connected if it's possible to get from any vertex to any other vertex using only the edges belonging to this graph.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le m \\le 2 \\cdot 10^5$) \u2014 the number of vertices in the graph and the number of special offers, respectively.\n\nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^{12}$) \u2014 the numbers written on the vertices.\n\nThen $m$ lines follow, each containing three integers $x$, $y$ and $w$ ($1 \\le x, y \\le n$, $1 \\le w \\le 10^{12}$, $x \\ne y$) denoting a special offer: you may add an edge connecting vertex $x$ and vertex $y$, and this edge will cost $w$ coins.\n\n\n-----Output-----\n\nPrint one integer \u2014 the minimum number of coins you have to pay to make the graph connected.\n\n\n-----Examples-----\nInput\n3 2\n1 3 3\n2 3 5\n2 1 1\n\nOutput\n5\n\nInput\n4 0\n1 3 3 7\n\nOutput\n16\n\nInput\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n\nOutput\n18\n\n\n-----Note-----\n\nIn the first example it is possible to connect $1$ to $2$ using special offer $2$, and then $1$ to $3$ without using any offers.\n\nIn next two examples the optimal answer may be achieved without using special offers.\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 2 4') == '14'\nassert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('10 2 1') == '-1'\nassert solution('10 3 4') == '14'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 2 4\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"45\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 2 4') == '14'\nassert solution('10 2 4') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 1 1''') == '-1'\nassert solution('''10 2 4''') == '14'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 2 4\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"-1\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"14\"\n\"\"\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"45\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == '-1'\nassert solution('2 3 2') == '14'\nassert solution('1 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('10 2 1') == '14'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 7 5''') == 'Yes'\nassert solution('''4 5 6''') == 'No'\nassert solution('''4 5 7''') == 'No'\nassert solution('''6 9 2''') == 'Yes'\nassert solution('''1 1 1''') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"5 5 5\") == \"No\"\nassert solution(\"5 5 3\") == \"No\"\nassert solution(\"4 6 4\") == \"No\"\nassert solution(\"4 6 3\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2') == 'Yes'\nassert solution('2 2 1') == 'No'\nassert solution('1 1 1') == 'No'\nassert solution('2 2 3') == 'No'\nassert solution('2 2 1') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 2 1\") == \"No\"\nassert solution(\"5 6 5\") == \"Yes\"\nassert solution(\"5 5 5\") == \"No\"\nassert solution(\"5 5 5\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 2 1') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(5, 7, 5) == \"Yes\"\nassert solution(3, 3, 3) == \"No\"\nassert solution(3, 3, 5) == \"Yes\"\nassert solution(3, 3, 7) == \"No\"\nassert solution(3, 3, 8) == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"2 2 1\") == \"No\"\nassert solution(\"1 2 1\") == \"Yes\"\nassert solution(\"2 2 3\") == \"No\"\nassert solution(\"3 3 3\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('7 1 6') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('5 5 6') == 'No'\nassert solution('5 9 9') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 4 3') == 'No'\nassert solution('4 1 2') == 'No'\nassert solution('4 1 1') == 'Yes'\nassert solution('4 2 1') == 'Yes'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n12 5\n1000 2000\n''') == '1'\n\nassert solution('''2\n12 5\n1000 2000\n''') == '1'\n\nassert solution('''3\n50 5\n50 2000\n50 100\n''') == '2'\n\nassert solution('''3\n12 5\n10 2000\n10 100\n''') == '2'\n\nassert solution('''3\n12 5\n10 2000\n10 100\n''') == '1'"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\nmin_dist = 10 ** 8\nmin_idx = -1\n\nfor i in range(n):\n    dist = abs(t - h[i]) / 0.006\n    if dist < min_dist:\n        min_idx = i\n        min_dist = dist\n\nprint(min_idx)\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('2') == '1'\nassert solution('2 3') == '0'\nassert solution('2 3 4') == '1'\nassert solution('2 3 4 5') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n5 2\n1 2 2 2 1''') == '1'\nassert solution('''2\n5 2\n3 1 2 2 3''') == '0'\nassert solution('''2\n5 2\n2 1 2 2 3''') == '0'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(\"2 1\\n1000 2000\\n\") == \"1\"\nassert solution(\"2 1\\n1000 2000\\n\") == \"1\"\nassert solution(\"1 1\\n1000 2000\\n\") == \"0\"\nassert solution(\"2 3\\n1000000 2\\n1000000 2000\\n\") == \"1\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5\\n15\\n0\") == \"1\"\nassert solution(\"2\\n12 5\\n1000 2000\\n5000 10000\\n0\") == \"1\"\nassert solution(\"2\\n20 10\\n1500 1500 1500 1500 1500\\n5000 10000\\n0\") == \"0\"\nassert solution(\"2\\n20 10\\n1500 1500 1500 1500 1500\\n5000 10000\\n2000 2000 2000 2000 2000 2000\\n0\") == \"0\"\nassert solution(\"2\\n20 10\\n1500 1500 1500 1500 1500\\n5000 10000\\n0\") == \"0\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n12 5\\n1000 2000\\n') == '1'\nassert solution('2\\n12 5\\n1000 2000\\n') == '1'\nassert solution('2\\n5\\n1000 2000\\n') == '0'\nassert solution('2\\n5\\n1000 2000\\n') == '1'\nassert solution('2\\n5\\n1000 2000\\n') == '0'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12 5\\n1000 2000') == '1'\nassert solution('2\\n12 5\\n1000 2000') == '1'\nassert solution('3\\n10 3\\n12 1\\n3 8') == '0'\nassert solution('4\\n10 2\\n13 1\\n3 8') == '0'\nassert solution('5\\n1 0\\n10 3\\n12 1\\n3 8') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == \"1\"\nassert solution('''3\n9 4 10\n40 60 80''') == \"2\"\nassert solution('''2\n3 1\n1 2 3''') == \"0\"\nassert solution('''3\n1 1 1\n1 1 1''') == \"1\"\nassert solution('''3\n2 2 2\n1 1 1''') == \"1\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 2') == '3'\nassert solution('2 4') == '3'\nassert solution('2 5') == '6'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 3') == '2'\nassert solution('2 4') == '0'\nassert solution('3 2') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n----- Solution 1 - Brute Force -----\nfor i in range(n):\n    for j in range(i,n):\n        if (m+i+j)%2==0:\n            print(i,j)\n            return\n----- Solution 2 - If statements -----\ns = 0\nfor i in range(n):\n    for j in range(i,n):\n        if (m+i+j)%2==0:\n            s+=1\n    print(s)\nreturn\n----- Solution 3 - Dynamic Programming -----\ns = 0\ndp = [0]*(n+1)\ndp[n] = 1\nfor i in reversed(range(n-1)):\n    for j in range(i,n):\n        if (m+i+j)%2==0:\n            s+=dp[i]*dp[j]\n    print(s)\n    dp[i] = s\nreturn\n\n---------\n\n----- Test Case -----\n3 1\n3\n\n----- Expected Output -----\n1\n\n----- Solution Explanation -----\nCount = 1\nfor i in range(3):\n    for j in range(i,3):\n        if (m+i+j)%2==0:\n            print(i,j)\n            return\n    print(s)\nreturn\n\"\"\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 0') == '0'\nassert solution('2 2') == '2'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 1\n    \"\"\") == \"1\"\n\nassert solution(\n    \"\"\"\n    2 1\n    \"\"\") == \"1\"\n\nassert solution(\n    \"\"\"\n    4 10\n    \"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n    5 7\n    \"\"\") == \"8\"\n\nassert solution(\n    \"\"\"\n    9 10\n    \"\"\") == \"3\""
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('4 2') == '1'\nassert solution('5 2') == '2'\nassert solution('100 2') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"10 10\") == \"3\"\nassert solution(\"3 10\") == \"6\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '2'\nassert solution('5 10') == '4'\nassert solution('10 100') == '1'\nassert solution('10 1000') == '0'\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n'''\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTAC\") == \"0\"\nassert solution(\"ACACTACG\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACG\") == \"0\"\nassert solution(\"ACACTACG\") == \"3\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n\nassert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n\nassert solution('''ACACTACG\n3 7\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ACACTACG') == '2'\nassert solution('ACACTACG') == '0'\nassert solution('ACACTACG') == '3'\nassert solution('AAAA') == '2'\nassert solution('ACACTACGT') == '3'\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACGT\") == \"0\"\nassert solution(\"ACACTACG\") == \"3\"\nprint(solution(stdin.read().strip()))"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    'ACACTACG'\n    '3 7'\n    '2 3'\n    '1 8'\n) == '2'\nassert solution(\n    'ACACTACG'\n    '3 7'\n    '2 3'\n    '1 8'\n) == '0'\nassert solution(\n    'ACACTACG'\n    '1 3'\n    '2 3'\n    '1 8'\n) == '3'\n\n'''\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('ACACTACG') == '2'\nassert solution('ACACTACG') == '0'\nassert solution('ACACTACG') == '3'\nassert solution('ACACTACG') == '3'\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n\n'''"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == \"210\"\nassert solution('3 5') == '120'\nassert solution('10 6') == '108'\nassert solution('3 10') == '120'\nassert solution('20 10') == '180'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n50 100 80 120 80''') == '210'\nassert solution('''2 3\n100 100''') == '0'\nassert solution('''10 2\n5 2\n10 5\n15 3\n20 1\n25 2\n30 4''') == '60'\nassert solution('''3 1\n1 2 3''') == '3'\nassert solution('''10 2\n5 2\n10 5\n15 3\n20 1\n25 2\n30 4''') == '60'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'\n\"\"\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 5') == '100'\nassert solution('2 2') == '2'\nassert solution('6 5') == '102'\nassert solution('10 9') == '110'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nfrom sys import stdin\nstdin = stdin.read()\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"0\"\nassert solution(\"4 10\") == \"20\"\nassert solution(\"4 10\") == \"0\"\nassert solution(\"7 2\") == \"20\"\nassert solution(\"6 4\") == \"10\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('4 5 6') == '10'\nassert solution('3 3') == '6'\nassert solution('5 3') == '9'\nassert solution('6 5') == '12'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '6'\nassert solution('1 1 1') == '1'\nassert solution('2 2 2') == '4'\nassert solution('2 1 1') == '2'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '4'\nassert solution('1 3 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('1 1 2') == '2'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3 4''') == '4'\nassert solution('''1 3 4''') == '4'\nassert solution('''1 3 4''') == '4'\nassert solution('''1 3 4''') == '4'\nassert solution('''1 3 4''') == '4'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 4 3') == '5'\nassert solution('3 4 1') == '4'\nassert solution('3 1 4') == '4'\nassert solution('1 4 3') == '5'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 1 1') == '0'\nassert solution('1 1 2') == '2'\nassert solution('3 4 7') == '7'\nassert solution('3 7 2') == '7'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 4\\n') == '4'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1 3 4\n\"\"\") == '4'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('3 4 6') == '7'\nassert solution('1 1 1') == '3'\nassert solution('100 100 100') == '2'\nassert solution('2 1 1') == '3'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'\nassert solution('5 3') == '10'\n\n\"\"\""
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 3') == '0'\nassert solution('3 5') == '0'\nassert solution('5 4') == '10'\nassert solution('5 5') == '10'\nassert solution('5 3') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"0\"\nassert solution(\"1 1\") == \"10\"\nassert solution(\"0 5\") == \"0\"\nassert solution(\"0 5\") == \"0\"\nassert solution(\"0 5\") == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"9 3\") == \"0\"\nassert solution(\"9 3\") == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\n\n\"\"\"\nFunction Description:\nComplete the function solveme in the editor below.\n\nsolveme has the following parameters:\n- int X: the number to compare against A\n- int A: the number to compare against X\n\n- Returns:\n- int: if X is less than A, print 0; if X is not less than A, print 10.\n\n\"\"\""
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0 9\") == \"10\"\nassert solution(\"9 0\") == \"10\"\nassert solution(\"0 5\") == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"2 0\") == \"10\"\nassert solution(\"0 3\") == \"0\"\nassert solution(\"1 0\") == \"10\"\nassert solution(\"0 3\") == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(read_input('''3 5''')) == '0'\nassert solution(read_input('''0 0''')) == '10'\nassert solution(read_input('''3 5''')) == '0'\nassert solution(read_input('''8 0''')) == '10'\nassert solution(read_input('''2 7''')) == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3, 5) == '0'\nassert solution(3, 0) == '0'\nassert solution(5, 3) == '0'\nassert solution(10, 9) == '10'\nassert solution(3, -1) == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 15') == '10'\nassert solution('15 0') == '10'\nassert solution('-1 1') == '0'\nassert solution('-1 -1') == '0'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 4') == '1'\nassert solution('7 2') == '1'\nassert solution('7 2') == '1'\nassert solution('100000000 7 2') == '1'\nassert solution('7 2') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 4') == '1'\nassert solution('100 22') == '1'\nassert solution('1000 1000') == '0'\nassert solution('5 1') == '1'\nassert solution('7 1') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"1000000 1000000\") == \"1\"\nassert solution(\"314159265 358979323 842751\") == \"1\"\nassert solution(\"314159265 358979323 842751\") == \"1\"\nassert solution(\"9234587654321 45632212398\") == \"1\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[3:6]"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('2 7') == '1'\nassert solution('1 10') == '1'\nassert solution('100 10') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 4\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"100000001 3\") == \"0\"\nassert solution(\"6 2\") == \"4\"\nassert solution(\"7 4\") == \"1\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 4') == '1'\nassert solution('6 16') == '1'\nassert solution('8 24') == '2'\nassert solution('7 12') == '2'\nassert solution('20 16') == '4'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 4') == '1'\nassert solution('7 21') == '1'\nassert solution('20 20') == '1'\nassert solution('0 0') == '0'\nassert solution('0 1') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 4') == '1'\nassert solution('8 1') == '2'\nassert solution('2 17') == '1'\nassert solution('9 3') == '2'\nassert solution('6 4') == '2'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 4') == '1'\nassert solution('17 46') == '1'\nassert solution('1000 1') == '1000'\nassert solution('999 999') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('1 5 2') == 'bust'\nassert solution('100 2 5') == 'win'\nassert solution('6 3 3') == 'win'\nassert solution('6 3 6') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"win\"\nassert solution(\"5 7 9\") == \"bust\"\nassert solution(\"1 1 2\") == \"bust\"\nassert solution(\"3 4 6\") == \"bust\"\nassert solution(\"1 2 1\") == \"bust\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('1 2 3') == 'bust'\nassert solution('4 5 6') == 'bust'\nassert solution('13 15 19') == 'bust'\nassert solution('22 22 22') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(5,7,9) == \"win\"\nassert solution(5,7,9) == \"bust\"\nassert solution(5,7,11) == \"win\"\nassert solution(5,7,10) == \"bust\"\nassert solution(10,11,11) == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"9 7 5\") == \"bust\"\nassert solution(\"6 7 8\") == \"bust\"\nassert solution(\"6 7 9\") == \"win\"\nassert solution(\"5 7 9\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('7 3 1') == 'bust'\nassert solution('11 22 33') == 'win'\nassert solution('12 22 33') == 'bust'\nassert solution('99 10 3') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 3') == \"bust\"\nassert solution('1 1 1') == \"win\"\nassert solution('5 7 9') == \"win\"\nassert solution('13 7 8') == \"bust\"\nassert solution('13 2 19') == \"bust\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('1 2 3') == 'bust'\nassert solution('5 6 7') == 'win'\nassert solution('5 6 7') == 'win'\nassert solution('1 2 3') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 6 7\") == \"bust\"\nassert solution(\"1 2 3\") == \"win\"\nassert solution(\"1 2 1\") == \"bust\"\nassert solution(\"3 2 3\") == \"win\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '5'\nassert solution('6') == '10'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '2'\nassert solution('''3''') == '4'\nassert solution('''4''') == '4'\nassert solution('''8''') == '4'\nassert solution('''10''') == '4'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '6'\nassert solution('5') == '6'\nassert solution('6') == '6'\nassert solution('7') == '7'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('100') == '6'\nassert solution('1000') == '2'\nassert solution('1000') == '4'\nassert solution('10^1000000') == '1'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"15\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('3 2') == '6'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 2') == '4'\nassert solution('10 5') == '8'\nassert solution('8 4') == '6'\nassert solution('3 5') == '4'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2''') == '2'\nassert solution('''3 2''') == '1'\nassert solution('''9 2''') == '3'\nassert solution('''13 2''') == '6'\nassert solution('''17 2''') == '9'\n'''"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 2\") == 2\nassert solution(\"1 2\") == 1\nassert solution(\"4 3\") == 3\nassert solution(\"4 3\") == 3\nassert solution(\"20 4\") == 9\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '2'\nassert solution('2 1') == '1'\nassert solution('7 1') == '1'\nassert solution('4 1') == '2'\nassert solution('5 1') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(2)\n\"\"\"\n\n\"\"\"\n---AC---\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '2'\nassert solution('5 5') == '2'\nassert solution('8 6') == '3'\nassert solution('1 2') == '2'\nassert solution('5 10') == '1'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"10 2\") == \"3\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"15 7\") == \"4\"\nassert solution(\"20 5\") == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(16) == \"pon\"\nassert solution(3) == \"bon\"\nassert solution(123) == \"hon\"\nassert solution(9) == \"hkan\"\nassert solution(10) == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(16) == \"pon\"\nassert solution(3) == \"pon\"\nassert solution(5) == \"bon\"\nassert solution(7) == \"pon\"\nassert solution(9) == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('16') == 'pon'\nassert solution('21') == 'hon'\nassert solution('125') == 'bon'\nassert solution('10') == 'on'\nassert solution('99') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"20\") == \"bon\"\nassert solution(\"100\") == \"hon\"\nassert solution(\"103\") == \"kon\"\nassert solution(\"106\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"200\") == \"hon\"\nassert solution(\"2000\") == \"hon\"\nassert solution(\"100\") == \"bon\"\nassert solution(\"99\") == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"897\") == \"hon\"\nassert solution(\"99\") == \"pon\"\nassert solution(\"998\") == \"hon\"\nassert solution(\"101\") == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(16) == \"pon\"\nassert solution(42) == \"hon\"\nassert solution(65) == \"hon\"\nassert solution(11) == \"hon\"\nassert solution(111) == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"8\") == \"bon\"\nassert solution(\"112\") == \"bon\"\nassert solution(\"111\") == \"bon\"\nassert solution(\"126\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('16') == \"pon\"\nassert solution('49') == \"hon\"\nassert solution('99') == \"hon\"\nassert solution('999') == \"hon\"\nassert solution('99999') == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"1000\") == \"hon\"\nassert solution(\"1024\") == \"bon\"\nassert solution(\"1006\") == \"bon\"\nassert solution(\"909\") == \"hon\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 1 2\") == \"11\"\nassert solution(\"3 1 2 3\") == \"14\"\nassert solution(\"3 1 2 3 4\") == \"18\"\nassert solution(\"3 1 2 3 4 5\") == \"20\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()[0]\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('4\\n4 1 2 3') == '7'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1 1') == '1'\nassert solution('3\\n1 1 1') == '1'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3\n3 1 2'''\n) == '11'\n\nassert solution(\n'''3\n3 1 2'''\n) == '11'\n\nassert solution(\n'''4\n10 2 8 3'''\n) == '32'\n\nassert solution(\n'''5\n20 1 1 1 2'''\n) == '18'\n\nassert solution(\n'''10\n10 10 10 10 10 10 10 10'''\n) == '450'"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"11\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == \"11\"\nassert solution('3\\n1 2 3') == \"11\"\nassert solution('5\\n2 1 4 3 1') == \"22\"\nassert solution('5\\n4 2 1 3 1') == \"22\"\nassert solution('5\\n3 2 1 4 1') == \"22\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"11\"\n'''"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 1 2''') == '11'\n'''\n'''\n\nfrom math import factorial"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n4\n3''') == '4\\n3\\n4'\nassert solution('''2\n1\n2\n3''') == '4\\n3\\n4'\nassert solution('''1\n1\n2\n3''') == '4\\n3\\n4'\nassert solution('''1000\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n5\n3''') == '5\\n3\\n5'\nassert solution('''3\n1\n5\n4\n3''') == '5\\n4\\n5'\nassert solution('''3\n1\n4\n3\n2\n3\n4\n2\n2\n1\n1\n2\n1''') == '5\\n4\\n5\\n2\\n5\\n4\\n2\\n2\\n2\\n5\\n4'\nassert solution('''7\n1\n3\n3\n3\n5\n2\n2\n2\n2\n1\n1\n1\n1''') == '3\\n3\\n3\\n5\\n2\\n2\\n2\\n2\\n1\\n3'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '2'\nassert solution('2\\n1\\n3') == '3'\nassert solution('2\\n3\\n1') == '2'\nassert solution('2\\n3\\n4') == '3'\nassert solution('2\\n4\\n3') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"2\\n1\\n4\") == \"4\\n4\"\nassert solution(\"2\\n1\\n3\") == \"4\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''2\n1\n2\n3''') == '3\\n2'\nassert solution('''4\n1\n2\n3\n4''') == '4\\n4\\n4\\n4'\nassert solution('''5\n1\n2\n3\n4\n5''') == '4\\n3\\n4\\n4\\n5'\nassert solution('''6\n1\n2\n3\n4\n5\n6''') == '4\\n4\\n5\\n5\\n6'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\n\nassert solution('''3\n1\n4\n1''') == '4\\n1\\n1'\n\nassert solution('''9\n1\n2\n1\n2\n1\n2\n1\n1\n1''') == '4\\n4\\n1'\n\nassert solution('''9\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '1\\n1\\n1'\n\nassert solution('''9\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '1\\n1\\n1'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n4\n3''') == '4'\nassert solution('''3\n1\n4\n3''') == '3'\nassert solution('''3\n4\n1\n3''') == '4'\nassert solution('''3\n4\n1\n3''') == '4'\nassert solution('''3\n4\n4\n3''') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '1\\n'\nassert solution('2\\n1') == '2\\n'\nassert solution('2\\n2') == '2\\n'\nassert solution('3\\n1\\n4') == '4\\n'\nassert solution('3\\n2\\n4') == '4\\n'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"3\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '1'\nassert solution('''4''') == '3'\nassert solution('''3''') == '4'\nassert solution('''7''') == '6'\nassert solution('''9''') == '7'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A B') == '9'\nassert solution('2 3') == '9'\nassert solution('4 3') == '7'\nassert solution('5 3') == '9'\nassert solution('6 3') == '8'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 3') == '9'\nassert solution('10 15') == '16'\nassert solution('9 10') == '19'\nassert solution('5 10') == '16'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 3') == '9'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('10 50') == '85'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5') == '1'\nassert solution('5 3') == '3'\nassert solution('5 2') == '2'\nassert solution('5 5') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('5 3') == '9'\nassert solution('15 5') == '30'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '9'"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"A 3\") == \"9\"\nassert solution(\"B 2\") == \"5\"\nassert solution(\"B 2\") == \"5\"\nassert solution(\"A 2\") == \"4\"\nassert solution(\"A 2\") == \"4\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n''') == '9'\nassert solution('''2 4\n''') == '4'\nassert solution('''1 1\n''') == '1'\nassert solution('''1 3\n''') == '2'\nassert solution('''3 1\n''') == '1'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == '9'\nassert solution('10 30') == '15'\nassert solution('1 5') == '5'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 3\n-30 -10 10 20 50''') == '40'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3') == '40'\nassert solution('10 10') == '40'\nassert solution('1 1') == '0'\nassert solution('7 3') == '11'\nassert solution('1 100') == '0'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"40\"\n\n\"\"\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2\\n0 1') == '1'\nassert solution('2 1\\n0 1') == '2'\nassert solution('4 2\\n0 1 2 3') == '4'\nassert solution('5 2\\n0 1 2 3 4') == '5'\nassert solution('8 3\\n0 1 2 3 4 5 6 7 8') == '10'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '40'\n\"\"\""
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"40\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"9 1\") == \"18\"\nassert solution(\"4 3\") == \"20\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    input_str=\n    '''-30 -10 10 20 50'''\n) == '40'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\n\"\"\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'\nassert solution('5 3\\n-30 -10 10 20 50') == '40'\nprint(solution('5 3\\n-30 -10 10 20 50'))\n'''\n\n'''\n----SOLUTION----\n----SUBMISSION----\n'''\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1 2 2\") == \"5\"\nassert solution(\"10 10 10 10 10\") == \"10\"\nassert solution(\"10 10 10 10 10 10 10 10\") == \"120\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 13''') == '2'\nassert solution('''0 4''') == '0'\nassert solution('''0 1''') == '0'\nassert solution('''1 0''') == '0'\nassert solution('''0 0''') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1 2') == None\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1000 1000\") == \"0\"\nassert solution(\"1 4\") == \"3\"\nassert solution(\"1 4 4 1\") == \"3\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 13') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 11\n''') == '2'\nassert solution('''6 9\n''') == '3'\nassert solution('''7 5\n''') == '2'\nassert solution('''9 7\n''') == '3'\nassert solution('''8 9\n''') == '3'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\nassert solution('20 30') == '8'\nassert solution('10 30') == '5'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 13') == '2'"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5\n''') == '2'\nassert solution('''6 2\n''') == '2'\nassert solution('''4 4\n''') == '2'\nassert solution('''1 1\n''') == '1'\nassert solution('''10 20\n''') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 13') == '2'\nassert solution('-1 -1') == '-1'\nassert solution('-1 -1 -1') == '-1'\nassert solution('2 10') == '2'\nassert solution('2 1000') == '1000'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4') == '3'\nassert solution('10 4') == '3'\nassert solution('1000 1000000') == '1000'\nassert solution('1000 1000000') == '1000'\nassert solution('1000 1') == '1000'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 4') == '3'\nassert solution('5 4') == '1'\nassert solution('1000 1') == '999'\nassert solution('1000 100') == '0'\nassert solution('100 10') == '9'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 3') == '2'\nassert solution('10 3') == '1'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 3') == '2'\nassert solution('10 6') == '2'\nassert solution('10 9') == '3'\nassert solution('10 6') == '2'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"100 5\") == \"4\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 4') == '3'\nassert solution('100 3') == '1'\nassert solution('100 50') == '2'\nassert solution('50 10') == '2'\nassert solution('50 100') == '5'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4') == '3'\nassert solution('3 4') == '2'\nassert solution('10 4') == '3'\nassert solution('1000 4') == '5'\nassert solution('1000 4') == '5'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 5') == '4'\nassert solution('10 1') == '5'\nassert solution('10 5') == '5'\nassert solution('10 1') == '6'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '50'\n'''\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"4 5 6 7\") == \"6\"\nassert solution(\"5 3 2 2\") == \"2\"\nassert solution(\"5 3 2 2\") == \"2\"\nassert solution(\"2 2 2 2\") == \"2\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '50'\n\"\"\""
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'\nassert solution('0 25 25 100') == '25'\nassert solution('0 25 25 100') == '25'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 30 60 120') == '300'\nassert solution('100 100 100 100') == '0'\nassert solution('100 100 100 100') == '0'\nassert solution('0 30 60 120') == '300'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n\"\"\""
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 0 0 0') == '0'\nassert solution('0 0 0 0') == '0'\nassert solution('0 0 0 0') == '0'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"50\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105''') == '2'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''105''') == \"1\"\nassert solution('''4''') == \"0\"\nassert solution('''12345''') == \"8\"\nassert solution('''15''') == \"0\"\nassert solution('''200''') == \"1\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"16\") == \"\"\nassert solution(\"9\") == \"0\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n\"\"\") == \"\"\"\n1\n\"\"\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('105') == '1'\nassert solution('105\\n') == '1'\nassert solution('3\\n') == '0'\nassert solution('1\\n') == '0'\nassert solution('200\\n') == '3'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('10\\n') == '3'\nassert solution('200\\n') == '1'\nassert solution('1000\\n') == '7'\nprint(solution(input()))\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''105''') == '1'\nassert solution('''1''') == ''\nassert solution('''300''') == ''\nassert solution('''22''') == ''\nassert solution('''153''') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('10\\n') == '1'\nassert solution('100\\n') == '1'\nassert solution('101\\n') == '1'\nassert solution('1000\\n') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5\n'''\n    ) == '1'\n\nassert solution(\n'''\n1\n'''\n    ) == '0'\n\nassert solution(\n'''\n4\n'''\n    ) == '3'\n\nassert solution(\n'''\n2\n'''\n    ) == '0'\n\nassert solution(\n'''\n3\n'''\n    ) == '1'"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n''') == '1'\n\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n''') == '4'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1'\nassert solution('5 1') == '0'\nassert solution('7 3') == '1'\nassert solution('7 2') == '1'\nassert solution('10 8') == '2'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 4\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"15 17\") == \"2\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3') == '1'\nassert solution('5 7') == '2'\nassert solution('5 3') == '1'\nassert solution('8 7') == '1'\nassert solution('8 3') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 3') == '1'\nassert solution('5 4') == '0'\nassert solution('5 4') == '0'\nassert solution('5 4') == '0'\nassert solution('5 4') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3') == \"1\"\nassert solution('10 3') == \"3\"\nassert solution('10 100') == \"99\"\nassert solution('1 1') == \"0\"\nassert solution('7 3') == \"1\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1'\nassert solution('10 4') == '1'\nassert solution('20 15') == '10'\nassert solution('10 4') == '1'\nassert solution('100 25') == '25'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('111') == '111'\nassert solution('123') == '321'\nassert solution('3141') == '4321'\nassert solution('31415') == '45315'\nassert solution('314159') == '95979'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[4]\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5')) == '1'\nassert solution('11') == '111'\nassert solution('999') == '1111'\nassert solution('10000') == '10011'\nassert solution('1111') == '11111'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"99\") == \"99\"\nassert solution(\"999\") == \"999\"\nassert solution(\"9999\") == \"9999\"\nassert solution(\"999999\") == \"999999\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[:3]\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('111') == '111'\nassert solution('2345') == '345'\nassert solution('456') == '456'\nassert solution('5') == '5'\nassert solution('6') == '6'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n11\n111\n1''') == '1'\nassert solution('''101\n111\n101\n1''') == '1'\nassert solution('''1001\n1\n1\n1\n1\n1''') == '1'\nassert solution('''100\n111\n100\n1\n1\n1\n1\n1''') == '1'\nassert solution('''100\n111\n101\n1\n1\n1\n1\n1''') == '1'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('111') == '111'\nassert solution('100') == '100'\nassert solution('99') == '100'\nassert solution('999') == '999'\nassert solution('999') == '999'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('111') == '111'\nassert solution('11111') == '111'\nassert solution('22222222') == '222'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"-1 -2 -3\") == \"-5\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"-1 -2 -3\") == \"-4\"\nassert solution(\"10 -1 -10\") == \"0\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"3 2 3\") == \"1\"\nassert solution(\"4 2 4\") == \"1\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 6 3 2') == '6'\nassert solution('1 3 1 2') == '1'\nassert solution('10 9 8') == '9'\nassert solution('1 10 9 8') == '9'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 3') == '4'\nassert solution('2 5 3') == '5'\nassert solution('1 100 100') == '100'\nassert solution('1 100 200') == '101'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 10 3\") == \"8\"\nassert solution(\"1 10 2\") == \"3\"\nassert solution(\"1 100 2\") == \"100\"\nassert solution(\"1 100 3\") == \"101\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == 5\nassert solution(\"1 5 1\") == 3\nassert solution(\"1 5 9\") == 8\nassert solution(\"1 5 9 4\") == 9\nassert solution(\"1 5 9 4 0\") == 9\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 6 3''') == '5'\nassert solution('''1 2 4''') == '2'\nassert solution('''1 3 4''') == '1'\nassert solution('''1 4 3''') == '2'\nassert solution('''1 6 3''') == '5'\n'''"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 10 2\") == \"6\"\nassert solution(\"1 2 1\") == \"3\"\nassert solution(\"3 3 4\") == \"8\"\nassert solution(\"4 6 7\") == \"10\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == 5\nassert solution(\"1 2 3\") == 5\nassert solution(\"1 1 1\") == 0\nassert solution(\"1 1 2\") == 1\nassert solution(\"1 1 1 1\") == 0\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8''') == '5'\nassert solution('''4''') == '5'\nassert solution('''2''') == '5'\nassert solution('''1''') == '5'\nassert solution('''4''') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8\") == 5\nassert solution(\"4 4 4\") == 5\nassert solution(\"4 1 4 1\") == 5\nassert solution(\"8 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == 5\nassert solution(\"5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == 5\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"5\"\nassert solution(\"1000\") == \"5\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('12') == '4'\nassert solution('1234') == '6'\nassert solution('123456789') == '6'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('3') == '1'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('8\\n') == '5'\nassert solution('8\\n1\\n') == '5'\nassert solution('8\\n2\\n') == '6'\nassert solution('8\\n3\\n') == '7'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('123456789') == '1'\nassert solution('10000000') == '99999998'\nassert solution('123456789123456789') == '1'\nassert solution('1234567891234567890') == '2'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('8') == None\nassert solution('1 2 3 4 5 6 7 8') == None\nassert solution('1 2 3 4 5 6 7') == None\nassert solution('1 2 3 4 5 6') == None\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('2 4 6 8') == 'Yes'\nassert solution('1 5 3 4') == 'Yes'\nassert solution('1 100 100 100') == 'Yes'\nassert solution('3 4 5 6') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 9 9') == 'Yes'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('20 21 22 23') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[:-1]"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('20 25 25 25') == 'No'\nassert solution('10 10 10 10') == 'Yes'\nassert solution('10 10 10 9') == 'Yes'\nassert solution('10 10 10 9') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'Yes'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('4 5 6 7') == 'No'\nassert solution('3 3 3 3') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('9 9 9 9') == 'Yes'\nassert solution('10 9 10 10') == 'Yes'\nassert solution('9 9 9 9') == 'No'\nassert solution('10 9 10 10') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 6 8 10') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('-1 -2 -3 -4') == 'Yes'\nassert solution('10 9 10 10') == 'No'\nassert solution('1 2 3 4') == 'Yes'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"2\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"2\\n10 2 5\\n6 3 4\\n7 4\") == \"7\"\nassert solution(\"1\\n10 2 5\\n6 3 4\") == \"0\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\\\n3\n10 2 5\n6 3 4\n\"\"\") == '5'\nassert solution(\"\"\"\\\n2\n1 2\n3\n\"\"\") == '2'\nassert solution(\"\"\"\\\n1\n1\n\"\"\") == '0'\nassert solution(\"\"\"\\\n3\n1 3 2\n2\n1 2\n3\n\"\"\") == '2'\nassert solution(\"\"\"\\\n3\n10 2 5\n6 3 4\n\"\"\") == '5'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"4\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 2 5\\n6 3 4') == '5'\nassert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('10\\nn\n\n\n[5,10,7,2,8,6,7,8,7,3,4,1,3,4,5,4,6,2,3,3,3,2,4,1,2,4,3,5,6,3,4,5,5,4,1,1,1,5,6,3,4,3,2,1,1,2,1,2,1,1,1,3,4,3,3,2,4,2,1,5,3,3,1,2,5,3,2,3,1,3,3,2,2,3,3,3,1,3,3,3,1,2,3,5,3,2,4,4,1,4,2,4,2,3,4,5,4,4,5,5,5,5,6,6,5,5,5,5,6,5,6,5,6,5,4,5,5,5,5,5,5,6,4,4,5,5,6,4,5,6,5,5,5,5,5,5,6,5,5,5,6,5,5,5,6,5,6,5,5,5,5,5,5,5,5,5,6,5,5,6,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,6,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('3\\n10 2 5\\n6 3 4\\n8 10 15') == '15'\nassert solution('4\\n7 1 2 3 4\\n4 2 3 2\\n1 1 1 1') == '6'\nassert solution('4\\n7 1 2 3 4\\n4 2 3 2\\n1 1 1 1\\n5 5 5 5') == '10'\nassert solution('5\\n6 2 3 4 5\\n2 3 2 2\\n1 1 1 1 1\\n5 5 5 5 5\\n1 1 1 1 1') == '6'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\"\"\"\nYou can always choose the first gem.\nIf the cost of getting the first gem is higher than the cost of getting the second gem, then there will be no way to get both gems.\nOtherwise, we need to choose the second gem, and we can still get the first gem, so we need to find the minimum cost to get both gems.\nSo we can sort both gems by cost, and use two pointers to find the second gem,\nwhich is at least as cheap as the first gem.\n\n\"\"\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''9\n1 2 3\n2 1 4\n5 2 2\n7 2 1\n5 1 1\n6 4 1\n3 1 1\n9 1 1''') == '23'\nassert solution('''10\n1 2 3\n4 5 6\n1 1 1\n2 1 1\n3 1 1\n4 1 1\n5 1 1\n6 1 1\n7 1 1\n8 1 1''') == '24'\n'''\n'''\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('2\\n1\\n1') == '1'\nassert solution('5\\n1 1 1 1 1') == '5'\nassert solution('5\\n5 5 5 5 5') == '0'\nassert solution('1\\n3') == '0'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###'\n\nassert solution('''3 5\n###\n##.#\n.#.#\n####''') == '####'\n\nassert solution('''4 5\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n-----My Code-----\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(1000000)"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('\\n'.join(['4 4',\n    '##.#',\n    '....',\n    '##.#',\n    '.#.#',\n])) == '\\n'.join(['###',\n    '###',\n    '##.',\n])\n\"\"\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"H W\\n###\\n.##\\n...\\n..#\\n.##\\n.#.#\\n###.#\") == \"###.##.###.##\"\nassert solution(\"4 4\\n.##.#\\n....\\n##.#.\\n#.#.#\\n.##.#\\n....\\n###.#\\n#.##.#\\n.##.#\\n#.#.#\\n.##.#\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n1\") == \"\"\nassert solution(\"\\n\\n123\") == \"\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\n\nassert solution(\n'''2 1\n.#\n''') == ''\n\nassert solution(\n'''1 1\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###\\n###\\n.##\\n'\nassert solution('''8 8\n##....\n...##.\n..#...\n.#...#\n..#...\n.#...#\n...##.\n....##''') == '........\\n...#....\\n......#..\\n....##..\\n....##..\\n....##..\\n.##....\\n'\nassert solution('''16 16\n...###\n##.#.#\n##.#.#\n###.#.\n##.#.#\n##.#.#\n##.#.#\n####.#\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == OUTPUT\nprint(solution(open(\"data/06-grid-compression.txt\").read()))\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###'\nassert solution('''3 3\n..#\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\nassert solution(\n'''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\nassert solution(\n'''8 8\n#####\n.#....\n...#..\n..#.#.\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('0') == '0.0'\nassert solution('2') == '12.566370614359172'\nassert solution('3') == '19.77697752808988'\nassert solution('4') == '25.99279795855799'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3.0\") == \"9.27\"\nassert solution(\"10\") == \"26.7\"\nassert solution(\"5.0\") == \"25.0\"\nassert solution(\"9\") == \"36.0\"\nassert solution(\"24\") == \"54.3\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '6.28318530717958623200'"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.56637061435917224000'\nassert solution('3') == '19.076923076923077668000'\nassert solution('4') == '25.416494845360824758000'\nassert solution('5') == '28.274333882308138440000'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.5663706143591729518'\nassert solution('3') == '19.772453850905515975'\nassert solution('4') == '25.416493031582626246'\nassert solution('5') == '30.9813172546795722616'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == \"6.28318530717958623200\"\nassert solution(2) == \"6.28318530717958623200\"\nassert solution(3) == \"6.28318530717958623200\"\nassert solution(4) == \"6.28318530717958623200\"\nassert solution(5) == \"6.28318530717958623200\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == \"6.28318530717958623200\"\nassert solution(2) == \"10.155273426654264899\"\nassert solution(3) == \"12.589830367318762936\"\nassert solution(4) == \"14.14213562373094819\"\nassert solution(5) == \"14.14915250738439218\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('10') == '6.28318530717958623200'\nassert solution('100') == '6.28318530717958623200'\n\nassert solution('100000000') == '6.28318530717958623200'\nassert solution('10000000000') == '6.28318530717958623200'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '6.28318530717958623200'\nassert solution('2') == '11.19675485776773313965'\nassert solution('3') == '16.09497778979939463482'\nassert solution('4') == '22.5263919209326415223'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '9.424777960769379314'\nassert solution('3') == '12.5895750091907474'\nassert solution('4') == '17.74678638954988'\nassert solution('5') == '21.413857287579336'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ASAS') == 'Yes'\nassert solution('ASSs') == 'No'\nassert solution('ASSS') == 'Yes'\nassert solution('ASSSs') == 'No'\nassert solution('ASSSss') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ASSa\") == \"No\"\nassert solution(\"ASSS\") == \"No\"\nassert solution(\"ASSAAS\") == \"No\"\nassert solution(\"AASSAS\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"12\") == \"No\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"ABAA\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ASSA') == \"Yes\"\nassert solution('AASD') == \"No\"\nassert solution('AAAS') == \"No\"\nassert solution('ASAS') == \"Yes\"\nassert solution('ASDAS') == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ASSA') == \"Yes\"\nassert solution('ASS') == \"No\"\nassert solution('ASSS') == \"No\"\nassert solution('AAAA') == \"Yes\"\nassert solution('AAAAA') == \"No\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AAAA') == 'No'\nassert solution('aAAa') == 'No'\nassert solution('AAAS') == 'Yes'\nassert solution('AAASSSSS') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"aas\") == \"No\"\nassert solution(\"asss\") == \"Yes\"\nassert solution(\"AaSs\") == \"No\"\nassert solution(\"AaAsa\") == \"Yes\"\nassert solution(\"sssssssssss\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"Yes\"\nassert solution(\"AS\") == \"Yes\"\nassert solution(\"ASSA\") == \"No\"\nassert solution(\"AA\") == \"No\"\nassert solution(\"S\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AS') == 'Yes'\nassert solution('A') == 'No'\nassert solution('AAS') == 'Yes'\nassert solution('AA') == 'No'\nassert solution('AASSSAS') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''ASSA''') == \"Yes\"\nassert solution(\n'''HHHEE''') == \"No\"\nassert solution(\n'''HHEEA''') == \"Yes\"\nassert solution(\n'''SSSA''') == \"Yes\"\nassert solution(\n'''AAAAA''') == \"No\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"6 7\") == \"-13\"\nassert solution(\"-8 10\") == \"-14\"\nassert solution(\"9 4\") == \"5\"\nassert solution(\"8 2\") == \"10\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '-1'\nassert solution('-1 -2') == '-1'\nassert solution('1 -2') == '-1'\nassert solution('3 4') == '3'\nassert solution('-7 -3') == '-7'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n'''"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '-10'\n\"\"\"\n\n\"\"\"\nTestcases:\n\nA B\n3 2\n7 3\n15 5\n-2 -2\n0 0\n\"\"\""
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('5 3') == '7'\nassert solution('1 10') == '11'\nassert solution('23 50') == '42'\nassert solution('123 456') == '459'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('15 -5') == '-5'\nassert solution('5 3') == '5'\nassert solution('-13 -5') == '-1'\nassert solution('-13 -5') == '-1'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-13 3') == '-10'\nassert solution('-13 3') == '-10'\nassert solution('-13 3') == '-10'\nassert solution('-13 3') == '-10'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n6 5 6 8') == '3'\nassert solution('2\\n5 5\\n5 5') == '2'\nassert solution('1\\n5 5') == '0'\nassert solution('3\\n8 9 7 2\\n9 9 7 3\\n9 8 7 2\\n8 6 7 2') == '4'\nassert solution('1\\n4 2\\n2 3\\n3 1') == '1'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 5 6 8') == '3'"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 5 6 8') == '3'\nassert solution('6 5 6 8') == '3'\nassert solution('10 9 10 1') == '1'\nassert solution('4') == '0'\nassert solution('0 0 1 0') == '0'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n6 5 6 8\n''') == '3'\n'''\n\nfrom sys import stdin, stdout\n\nn = stdin.readline()\nhi = stdin.readline().strip().split()\nhi = map(int, hi)\n\na = b = c = 0\nfor i in range(len(hi)):\n    if i == 0:\n        b = hi[i]\n    else:\n        if hi[i] <= b:\n            a += 1\n        b = hi[i]\nstdout.write(str(a))"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 5 6 8\") == \"3\"\nassert solution(\"5\") == \"1\"\nassert solution(\"9 8 7 8 6 5 4 3 2 1\") == \"4\"\nassert solution(\"2 2 2 2 1\") == \"3\"\nassert solution(\"3 2 1\") == \"1\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"6 5 6 8\") == \"3\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 4 5\") == \"1\"\nassert solution(\"10 100 100 1000\") == \"1\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\nassert solution('''3\n8 6 4 5''') == '1'\nassert solution('''4\n1 2 3 4''') == '1'\nassert solution('''2\n5 2 3 4''') == '1'\nassert solution('''2\n6 2 3 4''') == '1'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\n'''\nimport sys"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''5\n1 2 1 2 1''') == '1'\nassert solution('''5\n1 2 1 2 1''') == '1'\nassert solution('''5\n1 2 1 2''') == '3'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 3 4 5\n''') == '1\\n5\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\nassert solution('''6\n1 1 1 1 1 1\n''') == '2\\n6\\n'"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '1\\n5\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '1\\n5\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 3 4 5\n''') == '1\\n5 \\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\nassert solution('''8\n1 2 1 2 1 2 1 2\n''') == '1\\n2 2 1 1 2 1 2 1 2\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('2\\n3') == '1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4''') == '2', \"7\"\nassert solution('''4\n1 1 1 1''') == '4', \"4\"\nassert solution('''5\n1 2 1 2 1''') == '1', \"5\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '''2\n3 4\n'''\n\nassert solution('''4\n1 1 1 1\n''') == '''4\n1 1 1 1\n'''\n\nassert solution('''5\n1 2 1 2 1\n''') == '''1\n5 \n'''"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1 1 1') == '3'\nassert solution('5\\n1 2 1 2 1') == '4'\nassert solution('7\\n1 2 3 1 2 3 4') == '2'\nassert solution('7\\n1 2 1 2 1') == '4'\nassert solution('2\\n2') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3''') == '1'\nassert solution(\n'''6''') == '2'\nassert solution(\n'''7''') == '1'\nassert solution(\n'''21''') == '7'\nassert solution(\n'''28''') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'\n'''\nThe number $n$ is $3 \\le n \\le 10^9$ and there is an integer $x$ that $x + 2x + 4x + \\dots + 2^{k-1} x = n$.\n\nIt is guaranteed that there is an integer $k>1$ that $x + 2x + 4x + \\dots + 2^{k-1} x = n$.\n\nFor example, if $n=28$ and $x=4$, it is possible that $1 \\cdot 4 + 2 \\cdot 4 + 4 \\cdot 4$ equals $28$.\n\nSo your task is to print $1$ in the first line and $4$ in the second line for each of the $t$ test cases.\n\n'''\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('test') == '1'\nassert solution('test') == '2'\nassert solution('test') == '7'\nassert solution('test') == '4'\nassert solution('test') == '28'"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984''') == '1'\n\nassert solution('''7\n6\n7\n21\n28\n999999999\n999999984\n999999994''') == '2'\n\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n999999994''') == '1'\n\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n999999994\n999999994''') == '7'\n\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n999999994\n999999994''') == '4'"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n'\n                '3') == '1'\nassert solution('2\\n'\n                '6') == '2'\nassert solution('3\\n'\n                '7') == '1'\nassert solution('4\\n'\n                '21') == '7'\nassert solution('99999\\n'\n                '99998') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n3') == '1'\nassert solution('2\\n3\\n4\\n5') == '1'\nassert solution('2\\n4\\n5\\n6') == '2'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2\\n4') == '2'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"10000000 9\") == \"10\"\nassert solution(\"3 10\") == \"4\"\nassert solution(\"5 0\") == \"5\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"112856 5\") == \"111155\"\nassert solution(\"123456789 10\") == \"2222222\"\nassert solution(\"1310888 6\") == \"222222\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n\n\"\"\"\nAccepted\n556 ms\n\"\"\"\n\n\"\"\"\nBetter\nAccepted\n556 ms\n\"\"\"\n\n\"\"\"\nTook me a while to figure out\n\"\"\"\n\n\"\"\"\nInput\n1000000007 4\n\nOutput\n300000008\n\nInput\n1000000009 3\n\nOutput\n1000000008\n\nInput\n10000000000 1000\n\nOutput\n0\n\"\"\"\n\nimport sys\nfrom datetime import datetime"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('3 1') == '2'\nassert solution('8 0') == '7'\nassert solution('8 4') == '6'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\n'''\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[0:1]\n\n\n\n-----"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nprint(solution(stdin))\n\n\n'''"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('123456789 9') == '12345678'\nassert solution('15371912 9') == '153719'\nassert solution('135625 9') == '13568'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1\n''') == '5'\n\nassert solution('''5\n3 7 5 1 5\n''') == '2'\n\nassert solution('''3\n5 1 4\n''') == '2'\n\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '7'\n\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '1 2 2 2 2 3 2'\n\nprint('Test done')\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '3\\n1 2 3'\nassert solution('3\\n5 1 4') == '2\\n5 5'\nassert solution('3\\n2 2 3') == '2\\n2 2'\nassert solution('2\\n2 2') == '1\\n2'\nassert solution('1\\n1') == '1\\n1'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('3\\n5 1 4') == '2\\n5 5'\nassert solution('7\\n2 2 3 2 1 2 2') == '7\\n1 2 2 2 2 3 2'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\\n\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\\n\") == \"2\\n5 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 3 4 1\n''') == '1'\n\nassert solution('''\n7\n3 7 5 1 2 2 1\n''') == '2'\n\nassert solution('''\n2\n3 7 5 1 5\n''') == '2'\n\nassert solution('''\n5\n2 2 3 2 1 2\n''') == '5'\n\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '2'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('7\\n2 2 3 2 1 2 2') == '7\\n1 2 2 2 2 3 2'\nassert solution('3\\n5 1 4') == '2\\n5 5'\nassert solution('7\\n2 2 3 2 1 2 2') == '7\\n1 2 2 2 2 3 2'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2 1\") == \"3\\n2 1 1\"\nassert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"\nassert solution(\"7\\n2 2 2 2 2 2\") == \"7\\n1 2 2 2 2 2\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"\nassert solution(\"6 10\\n5 4\\n1 1\\n6 2\\n1 1\") == \"2\"\nassert solution(\"6 10\\n5 4\\n1 1\\n6 2\\n1 1\") == \"2\"\nassert solution(\"10 100\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"-1\""
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\n\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4\n7 6\n3 7\n3 8\n3 9\n3 10\n1 3\n3 4\n4 3\n2 3\n2 4\n4 5\n3 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n1 4\n2 5\n3 6\n1 6\n2 7\n3 8\n4 9\n5 8\n6 7\n2 8\n3 9\n4 8\n1 9\n2 10\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n4 8\n5 8\n6 8\n2 9\n3 9\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\n\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n\nassert solution('''4 17\n10 8\n7 4\n3 1\n5 4''') == '-1'\n\nassert solution('''4 8\n10 8\n7 4\n3 1\n5 4\n\n2 1\n2 1\n2 1''') == '-1'\n\nassert solution('''5 19\n5 7\n3 4\n2 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1''') == '5'"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2\\n'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1\\n'\nassert solution('4 16\\n5 3\\n2 2\\n1 1\\n4 4\\n') == '3\\n'\nassert solution('4 16\\n5 3\\n2 2\\n1 1\\n4 4\\n') == '-1\\n'\nassert solution('4 16\\n5 3\\n2 2\\n1 1\\n4 4\\n') == '3\\n'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10\\n10 5') == '-1'\nassert solution('1 10\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5') == '2'\nassert solution('4 21\\n10 8\\n7 4\\n3 1') == '2'\nassert solution('1 10\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\nassert solution(\"1 4\") == \"-1\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"10 8\") == \"2\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\nassert solution('1 5\\n4 4\\n') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '0'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '0'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n1\\n2\\n3\\n2') == 'qwerty'\n\"\"\""
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == 'leelte'\nassert solution('2') == 'qwerty'\nassert solution('1') == 'vvvvvv'\nassert solution('5') == 'abcde'\nassert solution('7') == 'tleelte'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    '4',\n    '7 5 3',\n    '6 1 1',\n    '6 6 1',\n    '5 2 2'\n    ])) == '\\n'.join([\n    'tleelte',\n    'qwerty',\n    'vvvvvv',\n    'abcde'\n    ])\n\nassert solution('\\n'.join([\n    '5',\n    '6 1 1',\n    '6 6 1',\n    '5 2 2'\n    ])) == '\\n'.join([\n    'qwerty',\n    'vvvvvv',\n    'abcde'\n    ])\n\nassert solution('\\n'.join([\n    '1',\n    '2',\n    '3',\n    '4'\n    ])) == ''\n\n'''\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcde') == 'abcde'\nassert solution('abcde') == 'abcde'\nassert solution('abcde') == 'abcde'\nassert solution('abcde') == 'abcde'\nassert solution('abcde') == 'abcde'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 1 1\\n5 6 1\\n5 2 2\\n\") == \"abcde\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"qwerty\"\nassert solution(\"3\\n3 1 1\\n3 6 1\\n3 2 2\\n\") == \"vvvvvv\"\nassert solution(\"3\\n3 1 1\\n3 6 1\\n3 2 2\\n\") == \"abcd\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 5 3''') == 'tleelte'\nassert solution('''6 1 1''') == 'qwerty'\nassert solution('''5 2 2''') == 'vvvvvv'\nassert solution('''6 6 1''') == 'abcde'"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aaaa') == 'aaaa'\nassert solution('aaaaa') == 'aaaaa'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'tleelte'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'qwerty'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'vvvvvv'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2''') == 'abcde'\n'''\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 5 3''') == \"tleelte\"\nassert solution('''6 1 1''') == \"qwerty\"\nassert solution('''5 2 2''') == \"vvvvvv\"\nassert solution('''3 1 2''') == \"abcde\"\n'''\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 2\") == \"4\"\nassert solution(\"2 2 2\") == \"4\"\nassert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 10 10\") == \"16\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('10 3 6') == '12'\nassert solution('10 4 6') == '9'\nassert solution('1 1 1') == '1'\nassert solution('10 1 1') == '10'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 10 5\") == \"20\"\nassert solution(\"20 15 8\") == \"20\"\nassert solution(\"20 12 8\") == \"15\"\nassert solution(\"20 19 9\") == \"20\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20 12 6') == '12'\n\"\"\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"5 6 7\") == \"13\"\nassert solution(\"6 6 7\") == \"13\"\nassert solution(\"5 2 3\") == \"1\"\nassert solution(\"2 2 3\") == \"2\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 21 22') == '12'\nassert solution('20 11 22') == '5'\nassert solution('20 17 19') == '7'\nassert solution('20 17 22') == '6'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('1 1 1') == '1'\nassert solution('7 18 9') == '18'\nassert solution('4 16 6') == '7'\nassert solution('100 1 100') == '99'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20 12 6') == '12'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"1000\") == \"3\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"2\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"9\") == \"4\"\nassert solution(\"20\") == \"2\"\nassert solution(\"8\") == \"3\"\nassert solution(\"13\") == \"4\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9') == '3'\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('10') == '3'\nassert solution('16') == '5'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()[0]\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6') == '2'\nassert solution('5') == '2'\nassert solution('4') == '0'\nassert solution('3') == '1'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '2'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '2'\nassert solution('3') == '3'\nassert solution('12') == '3'\nassert solution('14') == '4'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"7\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1000\") == \"3\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 6') == '4'\nassert solution('0 10') == '0'\nassert solution('2 5') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()\n'''"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 3') == '3'\nassert solution('3 4') == '4'\nassert solution('3 4') == '4'\nassert solution('0 1') == '0'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 3\") == \"0\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"10 4\") == \"0\"\nassert solution(\"9 2\") == \"0\"\nassert solution(\"2 5\") == \"0\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'\nassert solution('0 0') == '0'\nassert solution('1 2') == '2'\nassert solution('2 1') == '1'\nassert solution('10 3') == '3'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 6\") == \"2\"\nassert solution(\"1 10\") == \"3\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"2 1\") == \"0\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 10\") == \"3\"\nassert solution(\"100 10\") == \"3\"\nassert solution(\"1 100\") == \"3\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"5 8\") == \"2\"\nassert solution(\"7 15\") == \"3\"\nassert solution(\"22 8\") == \"3\"\nassert solution(\"9 15\") == \"3\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 3\n\n\"\"\""
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 12') == '1'\nassert solution('4 12') == '16'\nassert solution('5 7') == '3'\nassert solution('4 12') == '16'\nassert solution('7 12') == '3'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 3') == '-1'\nassert solution('5 10') == '6'\nassert solution('10 15') == '5'\nassert solution('8 16') == '0'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 2') == '4'\nassert solution('2 8') == '6'\nassert solution('10 18') == '4'\nassert solution('10 19') == '11'\nassert solution('12 8') == '0'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"2 4\\n\") == \"1\\n\"\nassert solution(\"4 5\\n\") == \"3\\n\"\nassert solution(\"6 8\\n\") == \"3\\n\"\nassert solution(\"12 15\\n\") == \"9\\n\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 12') == '16'\nassert solution('3 2') == '-1'\nassert solution('2 1') == '-1'\nassert solution('1 1') == '0'\nassert solution('10 10') == '0'\n\n-----"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2 1'\nassert solution('1 3') == '2 2'\nassert solution('1 5') == '5 4'\nassert solution('3 8') == '5 2'\nassert solution('3 9') == '6 4'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[1:]\nprint(solution(stdin))\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2 - 1'\nassert solution('2 3') == '3 - 2'\nassert solution('3 4') == '-1'\nassert solution('4 5') == '-1'\nassert solution('5 6') == '1'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 12') == '16'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudaiz') == 'No'\nassert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudaiz') == 'No'\nassert solution('chokudai', 'chokudaiz') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('stefani') == 'No'\nassert solution('saruman') == 'No'\nassert solution('franklin') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\nS = input()\nT = input()\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcd', 'abcd') == 'Yes'\nassert solution('abc', 'abc') == 'Yes'\nassert solution('abc', 'abcd') == 'No'\nassert solution('abc', 'abcc') == 'No'\nassert solution('abc', 'abcc') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcd') == 'No'\nassert solution('chokudai') == 'Yes'\nassert solution('abcdz') == 'Yes'\nassert solution('abcdzc') == 'Yes'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nprint('Test cases passed')\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[:-1] + 'z'\nprint('Test 1 passed')\nassert solution('chokudai') == 'chokudaiz'\nprint('Test 2 passed')\nassert solution('chokudai') == 'chokudaiz'\nprint('Test 3 passed')\nassert solution('chokudai') == 'chokudaiz'\nprint('Test 4 passed')\nassert solution('chokudai') == 'chokudaiz'\nprint('Test 5 passed')\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[0] + 'z' + stdin[1:]\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudaiz') == 'No'\nprint('Test case passed')\n'''\nS = input()\nT = input()\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 9') == 'IMPOSSIBLE'\nassert solution('2 3') == 'IMPOSSIBLE'\nassert solution('4 3') == 'IMPOSSIBLE'\nassert solution('6 6') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 7') == 'IMPOSSIBLE'\nassert solution('0 1') == 'IMPOSSIBLE'\nassert solution('0 2') == 'IMPOSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2''') == '9'\nassert solution('''1000 20000''') == 'IMPOSSIBLE'\nassert solution('''22220 2222''') == '1'\nassert solution('''100 200''') == 'IMPOSSIBLE'\nassert solution('''2 15''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 0') == 'IMPOSSIBLE'\nassert solution('2 1') == 'IMPOSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\nassert solution('0 10') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 16') == '9'\n\nassert solution('16 17') == 'IMPOSSIBLE'\n\nassert solution('1 1') == 'IMPOSSIBLE'\n\nassert solution('0 0') == 'IMPOSSIBLE'\n\nassert solution('1 10') == '9'"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 14') == 'IMPOSSIBLE'\nassert solution('1 5') == 'IMPOSSIBLE'\nassert solution('1 3') == '2'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '9'\n\n\"\"\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 16''') == '9'\nassert solution('''1 10''') == 'IMPOSSIBLE'\nassert solution('''1000 1000''') == 'IMPOSSIBLE'\nassert solution('''1 2''') == 'IMPOSSIBLE'\nassert solution('''1000 2''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 16''') == '9'\nassert solution('''1 1''') == 'IMPOSSIBLE'\nassert solution('''1 2''') == '9'\nassert solution('''3 2''') == '1'\nassert solution('''7 10''') == '5'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 16\n''') == '9'\nassert solution('''2 4\n''') == 'IMPOSSIBLE'\nassert solution('''7 6\n''') == '5'\nassert solution('''8 5\n''') == '3'\nassert solution('''20 30\n''') == '1'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"567\") == \"No\"\nassert solution(\"1023\") == \"Yes\"\nassert solution(\"1032\") == \"No\"\nassert solution(\"101\") == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('117') == 'Yes'\nassert solution('947') == 'Yes'\nassert solution('119') == 'No'\nassert solution('527') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('7') == 'Yes'\nassert solution('77') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(117) == \"Yes\"\nassert solution(100) == \"No\"\nassert solution(5) == \"Yes\"\nassert solution(117) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == 'No'\nassert solution('7') == 'Yes'\nassert solution('734') == 'Yes'\nassert solution('734') == 'No'\nassert solution('734') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('711') == 'Yes'\nassert solution('111') == 'No'\nassert solution('18') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"897\") == \"No\"\nassert solution(\"717\") == \"Yes\"\nassert solution(\"967\") == \"No\"\nassert solution(\"876\") == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('117') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('1207') == 'No'\nassert solution('107') == 'Yes'\nassert solution('70') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == \"Yes\"\nassert solution('6') == \"No\"\nassert solution('12') == \"Yes\"\nassert solution('98') == \"No\"\nassert solution('1000') == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1') == 'No'\nassert solution('13') == 'Yes'\nassert solution('2') == 'No'\nassert solution('4') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"958\") == \"No\"\nassert solution(\"102\") == \"No\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"13\") == \"No\"\nassert solution(\"100\") == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\nassert solution('101') == 'No'\nassert solution('12') == 'Yes'\nassert solution('10') == 'Yes'\nassert solution('98') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yes'\nassert solution('10') == 'No'\nassert solution('100') == 'Yes'\nassert solution('1000') == 'Yes'\nassert solution('10000') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(13) == \"No\"\nassert solution(101) == \"Yes\"\nassert solution(102) == \"No\"\nassert solution(103) == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution(stdin) == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == 'No'\nassert solution('12') == 'Yes'\nassert solution('123') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1''') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"-1 1 -1 0\""
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('-1 1 -1 0') == '-1 1 -1 0'\nassert solution('-1 1 -1 0') == '-1 1 -1 0'\nassert solution('-1 1 -1 0') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 1 1') == '-1 -1 0 1'\nassert solution('0 1 0 1') == '-1 -1 1 0'\nassert solution('1 0 0 1') == '-1 -1 1 0'\nassert solution('1 1 0 1') == '-1 -1 1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\nassert solution(\"0 1 1 1\") == \"-1 1 1 1\"\n\"\"\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0,0,0,1) == '-1 1 -1 0'\nassert solution(0,0,0,0) == '-1 -1 -1 0'\nassert solution(0,0,1,0) == '-1 -1 -1 0'\nassert solution(0,0,1,1) == '-1 -1 -1 0'\nassert solution(0,0,0,0) == '-1 -1 -1 0'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 1'\nassert solution('blue') == '0 1'\nassert solution('yellow') == '0 1'\nassert solution('blue red') == '2 1'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 2'\nassert solution('blue') == '1 1'\nassert solution('blue blue') == '0 0'\nassert solution('blue blue blue blue') == '0 1'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"a b\") == \"1 1\"\nassert solution(\"\") == \"\"\nassert solution(\"a b\") == \"1 1\"\nassert solution(\"a b\\n\") == \"1 1\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red\") == \"2 4\"\nassert solution(\"blue\") == \"0 4\"\nassert solution(\"\") == \"\"\nassert solution(\"red blue\") == \"2 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red red red') == '1 3'\nassert solution('red blue blue') == '0 0'\nassert solution('red blue red') == '0 1'\nassert solution('red red blue blue') == '1 2 3'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n' + 'ab') == 'Yes'\nassert solution('2\\n' + 'ab') == 'No'\nassert solution('2\\n' + 'a') == 'Yes'\nassert solution('2\\n' + 'aab') == 'No'\nassert solution('1\\n' + 'a') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcef') == 'No'\nassert solution('abcabcabc') == 'No'\nassert solution('aaaaa') == 'No'\nassert solution('aabca') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abcabcabc') == 'Yes'\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcabc\") == \"Yes\"\nassert solution(\"abcabc\") == \"Yes\"\nassert solution(\"abcabcabc\") == \"No\"\nassert solution(\"abcaabc\") == \"No\"\nassert solution(\"abc\") == \"No\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('xyzxyz') == 'No'\nassert solution('xyzzx') == 'Yes'\nassert solution('x') == 'Yes'\nassert solution('abcabc') == 'Yes'\n\n-----Best Practice-----\nUse split() to split the string."
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabc') == 'Yes'\nassert solution('abca') == 'No'\nassert solution('ababc') == 'No'\nassert solution('abcabcabcabc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abcc\") == \"No\"\nassert solution(\"accc\") == \"Yes\"\nassert solution(\"abcabc\") == \"Yes\"\nassert solution(\"abccd\") == \"No\"\nassert solution(\"abccde\") == \"No\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 4 1\") == \"2.000000 0\"\nassert solution(\"2 3 2 1\") == \"1.000000 1\"\nassert solution(\"2 3 4 2\") == \"1.000000 0\"\nassert solution(\"2 3 4 3\") == \"0.500000 1\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"0 0 0 0\") == \"0.000000 1\"\nassert solution(\"10 0 0 0\") == \"10.000000 1\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('1 3 1 2') == '3.000000 0'\nassert solution('3 3 1 2') == '3.000000 0'\nassert solution('1 4 1 2') == '3.000000 0'\nassert solution('1 1 1 1') == '0.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('1 1 1 1') == 0\nassert solution('1 1 1 1') == 0\nassert solution('1 1 1 1') == 0\nassert solution('1 1 1 1') == 0\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n\nassert solution('2 3 1 2') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 2 3\") == \"7.000000 0\"\nassert solution(\"1 2 1 1\") == \"1.000000 0\"\nassert solution(\"1 2 3 3\") == \"4.000000 0\"\nassert solution(\"1 2 2 3\") == \"4.000000 0\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''4 2 1 2''') == '3.000000 0'\nassert solution('''2 3 1 3''') == '6.000000 1'\nassert solution('''2 3 1 2''') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''2 3 1 2''') == '3.000000 0'\n'''\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3.000000 0'\n'''\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"G W Y P Y W\") == \"Four\"\nassert solution(\"P P G G P\") == \"Three\"\nassert solution(\"P P G G Y\") == \"Four\"\nassert solution(\"W W P P G\") == \"Four\"\nassert solution(\"P W G G P\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n6\nG W Y P Y W\n'''\n) == 'Four'\nassert solution(\n'''\n1\nP\n'''\n) == 'Three'\nassert solution(\n'''\n6\nP P P G G P\n'''\n) == 'Three'\nassert solution(\n'''\n6\nP P P G G P\n'''\n) == 'Three'\nassert solution(\n'''\n6\nP P P G G P\n'''\n) == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P P G G P') == 'Three'\nassert solution('P P G G Y') == 'Three'\nassert solution('P P G G P') == 'Three'\nassert solution('P P G G P') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P W G P W P') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P P G G W W') == 'Three'\nassert solution('P P G G W W') == 'Three'\nassert solution('P W P G G W') == 'Three'\nassert solution('P P G G W W') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"G W Y P Y W\") == \"Four\"\nassert solution(\"P P P P\") == \"Three\"\nassert solution(\"P P P P\") == \"Three\"\nassert solution(\"P P P P\") == \"Three\"\nassert solution(\"P P P P\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\nG W Y P Y W''') == 'Four'\nassert solution('''3''') == 'Three'\nassert solution('''5\nP W G Y P''') == 'Three'\nassert solution('''2''') == 'Two'\nassert solution('''6\nP W G Y P P W''') == 'Two'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"G W Y P Y W\") == \"Four\"\nassert solution(\"G W Y P P W\") == \"Three\"\nassert solution(\"G W Y P P G\") == \"Three\"\nassert solution(\"G W P P G Y\") == \"Three\"\nassert solution(\"G W P G Y Y\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"P W G\") == \"Three\"\nassert solution(\"P G P G\") == \"Four\"\nassert solution(\"P W W Y P W G\") == \"Three\"\nassert solution(\"P G Y G P G\") == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\nG W Y P Y W''') == \"Four\"\nassert solution('''3\nP''') == \"Three\"\nassert solution('''1\nG''') == \"Three\"\nassert solution('''1\nW''') == \"Three\"\nassert solution('''1\nP''') == \"Three\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 2''') == '6'\nassert solution('''5 3 3''') == '2'\nassert solution('''5 5 6''') == '2'\nassert solution('''1 2 6 10 3''') == '2'\nassert solution('''1 2 3 5 4''') == '0'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 1 3 4 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('1 2 4 2 3') == '2'\nassert solution('1 2 1 1 2') == '5'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('1 2 6 10 3') == '2'\nassert solution('1 2 3 2 3') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 3 2''') == '6'\nassert solution('''5 3 3''') == '2'\nassert solution('''5 5 6''') == '2'\nassert solution('''1 2 6 10 3''') == '2'"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3 2''') == '6'\nassert solution('''5 3 3''') == '2'\nassert solution('''5 5 6''') == '2'\nassert solution('''1 2 6 10 3''') == '2'\nassert solution('''4 3 3''') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3 2\") == \"2\"\nassert solution(\"3 3 2\") == \"2\"\nassert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\"\nassert solution(\"1 2 6 10 3\") == \"2\"\n\n\n\"\"\"\n\n\"\"\"\n1) The most stupid way to solve this is to try all combinations of the doors.\n2) In order to solve this, we should choose 2 doors each and then find their maximum durability.\n3) Then try the doors that the maximum isnt equal to 0.\n\nAn interesting thing is, if we always choose 2 doors for each turn, then the winning strategy is the same.\n\nWhat we can do instead is:\n- We will choose one door each turn.\n- If the door is of any value x, then we can choose to break it or not break it.\n- We can choose to break or not break it, and then we know that for the next turn, if we choose to break it, the number of doors will decrease by x, if we choose not to break it, the number of doors will increase by x.\n- We can choose to break or not break it, and then we know that for the next turn, if we choose to break it, the number of doors will increase by y, if we choose not to break it, the number of doors will decrease by y.\n- We can repeat the process n - 1 times to get the desired result.\n\nAlgorithm\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\n\nassert solution('''10\n1 3 2 4 5 6 7 8 9 10\n1 3 2 4 5 6 7 8 9 10\n''') == '45'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0\\n1\\n2\\n3\\n4\") == \"0\"\nassert solution(\"1\\n1\\n2\\n3\\n4\") == \"0\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\") == \"0\"\nassert solution(\"2\\n1 3\\n2 4\") == \"0\"\nassert solution(\"2\\n2\\n1 1\") == \"1\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n\nassert solution('''\n6\n1 3 2 4 5 6\n2 1 2 3 2\n''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''4\n2 5 3 4\n2 5 3 4\n''') == '2'"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3 2 4\n1 3 2 4''') == '7'\nassert solution('''3\n3 2 3\n2 3 2\n1 2 1''') == '1'\nassert solution('''3\n2 3 2\n3 2 3\n2 3 2''') == '0'\nassert solution('''2\n1 1\n1 1\n''') == '0'\nassert solution('''2\n2 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5\n4 8 2 6 2\n4 5 4 1 3\n\"\"\") == \"7\"\nassert solution(\n\"\"\"4\n1 3 2 4\n1 3 2 4\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 5 10\\n') == '1 1 3 5 9\\n'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n'\nassert solution('1000\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '''1 1 3 5 9'''\nassert solution('''10''') == '''9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\nassert solution('''100''') == '''9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\nassert solution('''1000''') == '''9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\nassert solution('''10000''') == '''9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\n\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n\nassert solution('''\n''') == ''\n\nassert solution('''1\n1\n''') == '1'\n\nassert solution('''2\n1 1\n''') == '2'"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 4\\n\") == \"1 1 3 5 9\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"1 1 3 5 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input') == '1 1 3 5 9'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\nInput\n4\n1 2 3 4\n\nOutput\n1 2 4 4\n\"\"\"\nfrom sys import stdin\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"\n\n\n\"\"\"\n\nn = int(input())\na = list(map(int,input().split()))\nd = {}\nfor i in a:\n    d[i] = d.get(i,0)+1\nfor i in d:\n    d[i] -= 1\nfor i in range(1,10**9):\n    d[i] -= 1\n\nfor i in a:\n    print(i,end=\" \")\nprint()\nfor i in a:\n    print(d[i],end=\" \")\nprint()\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n4\\n5\\n10') == '1 1 3 5 9'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('100\\n1000000001 1000000000000000000 1000000000000000000000000000000 1000000000000000000000000000000000000000000000000 1000000000000000000000000000000000000000000000000 1000000000000000000000000000000000000000000000000 1000000000000000000000000000000000000000000000000 1000000000000000000000000000000000000000000000000') == '1 1 3 5 9'\nassert solution('1000\\
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4\\n5 4\\n3 5') == '1'\nassert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5') == '2'\nassert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5') == '2'\nassert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5') == '2'\nassert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import Set"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 4\n1 2\n3 4\n5 4\n3 5''') == '1'\n\nassert solution(\n'''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6''') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nassert solution('''5 4\n1 2\n2 3\n1 3\n4 2\n1 2\n''') == '1'\nassert solution('''11 8\n1 2\n1 4\n2 3\n3 4\n1 4\n1 2\n2 3\n2 4\n4 3\n3 4\n1 5\n2 5\n3 5\n4 5\n1 6\n1 7\n6 7\n2 7\n5 6\n5 7\n6 7\n3 7\n3 8\n2 8\n4 8\n1 8\n5 8\n5 9\n6 9\n7 9\n6 9\n8 9\n5 9\n1 10\n1 11\n10 11\n2 11\n10 11\n2 12\n5 12\n6 12\n4 12\n5 13\n5 14\n6 14\n6 15\n7 15\n5 15\n6 15\n7 15\n4 15\n6 16\n2 16\n6 16\n4 17\n6 17\n5 17\n6 17\n4 17\n6 18\n2 18\n7 18\n1 19\n1 20\n1 22\n1 21\n1 22\n1 21\n1 21\n1 22\n2 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n2 22\n2 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22\n1 22"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 2\\n3 4') == '1'\nassert solution('1 2\\n3 4') == '2'\nassert solution('5 10\\n1 2\\n3 4\\n4 5\\n4 5\\n5 4\\n4 5\\n4 5\\n3 5\\n3 5\\n2 3\\n4 3\\n4 3\\n4 3\\n5 3\\n5 3\\n5 3') == '1'\nassert solution('1 2\\n1 2') == '0'\nassert solution('1 2\\n1 2\\n3 4') == '0'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == result_for_sample_input_1\nassert solution(stdin) == result_for_sample_input_2\nassert solution(stdin) == result_for_sample_input_3\nassert solution(stdin) == result_for_sample_input_4\nassert solution(stdin) == result_for_sample_input_5\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n3 4\\n5 6\\n6 7\\n6 7\\n4 5\\n2 4\\n1 3\\n') == '1'\nassert solution('3 4\\n1 2\\n1 2\\n') == '0'\nassert solution('3 4\\n1 2\\n1 2\\n1 2\\n') == '0'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6''') == '2'\nassert solution('''10 10\n1 2\n2 3\n1 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '0'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '1'\nassert solution('''3 1\n1 2\n2 3''') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n2\\n3\\n3\\n2\\n2\\n2\\n1\\n1\\n2') == '0\\n'\nassert solution('1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n1\\n1') == '2\\n'\nassert solution('1\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n1\\n1') == '4\\n'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2') == '0\\n'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n3\n1 1 2\n2 3\n2 3\n''') == '0'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '1'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5') == '1'\nassert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5') == '4'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('10\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n5 7\\n5 8\\n5 9\\n6 8\\n7 9\\n8 9\\n9 10') == '4'\n\n\n\"\"\"\n\nfrom __future__ import annotations"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5''') == '4'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3\n1 1 2\n1 3\n2 3\n''') == '0'\nassert solution('''4\n1 1 2\n2 3\n1 3\n2 4\n2 5\n2 6\n1 7\n3 8\n2 7\n2 8\n2 9\n2 10\n2 11\n3 9\n4 8\n5 7\n6 6\n7 5\n7 8\n7 9\n8 6\n8 9\n8 10\n9 6\n9 10\n9 11\n10 5\n10 6\n10 7\n11 4\n11 5\n11 6\n11 7\n11 8\n11 9\n11 10\n11 11\n''') == '16'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''5\n2 0 0 1 2'''\n) == '1'\n\nassert solution(\n    '''5\n1 0 0 0 2'''\n) == '4'\n\nassert solution(\n    '''5\n1 1 2'''\n) == '0'\n\nassert solution(\n    '''3\n1 1 2'''\n) == '0'\n\nassert solution(\n    '''3\n1 1 2'''\n) == '0'"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('4\\n1 1 2\\n2 3\\n1 3\\n') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n5\\n1 1 2 1 2\\n2 3\\n1 3\\n') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '4'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2\\n3\\n3\\n4\\n4\\n5') == '0'\nassert solution('1\\n0\\n1\\n2\\n3\\n4\\n5\\n2\\n4\\n5') == '1'\nassert solution('1\\n2\\n3\\n3\\n2\\n4\\n4\\n5') == '0'\nassert solution('1\\n1\\n2\\n3\\n2\\n4\\n4\\n5') == '4'\nassert solution('1\\n2\\n3\\n2\\n4\\n4\\n5\\n1\\n5') == '4'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\n\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"bc\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('az', 'bf') == 'bc'\nassert solution('afogk', 'asdji') == 'alvuw'\nassert solution('nijfvj', 'tvqhwp') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"az\", \"bf\") == \"bc\"\nassert solution(\"afogk\", \"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\", \"tvqhwp\") == \"qoztvz\"\nassert solution(\"pvy\", \"cph\") == \"zm\"\nassert solution(\"ggg\", \"zzz\") == \"ggg\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n        '2',\n        'az',\n        'bf',\n    ])) == 'bc'\n\nassert solution('\\n'.join([\n        '5',\n        'afogk',\n        'asdji',\n    ])) == 'alvuw'\n\nassert solution('\\n'.join([\n        '6',\n        'nijfvj',\n        'tvqhwp',\n    ])) == 'qoztvz'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\naz\\nbf\\n') == 'bc'\nassert solution('5\\nafogk\\nasdji\\n') == 'alvuw'\nassert solution('6\\nnijfvj\\ntvqhwp\\n') == 'qoztvz'"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\naz\\nbf\\n\") == \"bc\"\nassert solution(\"5\\nafogk\\nasdji\\n\") == \"alvuw\"\nassert solution(\"6\\nnijfvj\\ntvqhwp\\n\") == \"qoztvz\""
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2\naz\nbf''') == 'bc'\nassert solution(\n'''5\nafogk\nasdji''') == 'alvuw'\nassert solution(\n'''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nprint(solution('''9\nmqppuqb\nfvxrkue\ndehfzjd\nnxytcft\nzfjlqsd\ntgqffjk\ngfkdafq\nqdgtgfl'''))\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nprint('Tests passed')\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n20 10 40 30\n''') == 'NO'\nassert solution('''\n5 4\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n3 2\n10 4 9\n''') == 'NO'\nassert solution('''\n3 4\n10 4 9 1\n''') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5 3\n15 13 15 15 12\n\"\"\") == \"YES\\n1 2 5\"\n\nassert solution(\n\"\"\"5 4\n15 13 15 15 12\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"4 4\n20 10 40 30\n\"\"\") == \"YES\\n1 2 3 4\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n15 13 15 15 12''') == 'YES\\n1 2 5'\nassert solution('''5 4\n15 13 15 15 12''') == 'NO'\nassert solution('''5 3\n20 10 40 30''') == 'YES\\n1 2 3 4'"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n15 13 15 15 12\n''') == 'NO'\nassert solution('''\n5 4\n20 10 40 30\n''') == 'YES'\nassert solution('''\n5 4\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n20 10 40 30\n''') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\n15 13 15 15 12\\n') == 'YES\\n1 2 3 4'\nassert solution('5 4\\n20 10 40 30\\n') == 'NO'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'YES\\n1 2 3 4'\nassert solution('5 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('5 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 3\n15 13 15 15 12''') == 'YES\\n1 2 5\\n'\n\nassert solution(\n'''5 4\n20 10 40 30''') == 'NO\\n'\n\nassert solution(\n'''5 4\n20 10 40 30\n
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == 'YES\\n1 2 5'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES\\n1 2 3 4'\nassert solution('2 4') == 'NO'\n\n\n\n'''\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"5 4\\n30 10 30 30 30 30\\n\") == \"NO\\n\"\nassert solution(\"5 4\\n30 10 30 30 30 30\\n\") == \"NO\\n\"\nassert solution(\"5 4\\n15 13 15 15 15 15\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\\n1 2 3 4\"\nassert solution(\"8 4\") == \"YES\\n1 2 3 4 5 6 7 8\"\nassert solution(\"8 4\") == \"YES\\n1 2 3 4 5 6 7 8\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5\\n'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO\\n'\nassert solution('5 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4\\n'\nassert solution('5 4\\n15 15 15 15 15 12\\n') == 'NO\\n'\nassert solution('5 4\\n20 10 40 30\\n') == 'NO\\n'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''5\n1 2 4 0 2\n''') == 'NO'\nassert solution('''1\n2\n''') == 'NO'\nassert solution('''1\n1\n''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5 3 6 2 1 0\") == \"NO\"\nassert solution(\"2\\n5 1 3 6 2 4\") == \"YES\"\nassert solution(\"7\\n3 1 2 3 4 5 6 7\") == \"NO\"\nassert solution(\"8\\n3 1 2 3 4 5 6 7 8\") == \"YES\"\nassert solution(\"10\\n3 1 2 3 4 5 6 7 8 9 10\") == \"YES\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''5\n1 2 4 0 2\n''') == 'NO'"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 1 3 6 8 2 9 0 10') == 'YES'\nassert solution('6\\n1 2 4 0 2 3 6') == 'NO'"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 4 0 2') == 'YES'\nassert solution('1 2 4 0 2') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''7\n1 2 4 0 2 3 5''') == 'NO'\nassert solution('''5\n1 2 4 0 2''') == 'YES'\nassert solution('''2\n0 1''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''\\\n5\n1 2 4 0 2\n''') == 'NO'\nassert solution('''\\\n9\n1 1 1 1 1 1 1 1 1 1\n''') == 'YES'\nassert solution('''\\\n2\n1 1\n''') == 'NO'\nassert solution('''\\\n9\n3 1 2 6 8 3 3 5 7 5 9\n''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n5 1 3 6 8 2 9''') == 'NO'\nassert solution('''9\n1 2 4 0 2''') == 'YES'\nassert solution('''9\n1 2 4 0 2''') == 'NO'\nassert solution('''9\n5 1 3 6 8 2 9''') == 'YES'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('input/1') == '0'\nassert solution('input/2') == '0'\nassert solution('input/3') == '1134'\nassert solution('input/4') == '0'\nassert solution('input/5') == '3'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('inputs/j10') == '3'\nassert solution('inputs/j11') == '0'\nassert solution('inputs/j12') == '1134'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''10\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''1234\n1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''1234\n1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''1234\n1 100 199\n1000000000 1 1 1000000000''') == '1134'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4\n10 2 3 7\"\"\") == '3'\nassert solution(\"\"\"100 51 51 51\"\"\") == '0'\nassert solution(\"\"\"1234 1 100 199\"\"\") == '1134'\nassert solution(\"\"\"1000000000 1 1 1000000000\"\"\") == '0'\n\"\"\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"100 2 3 7\") == \"0\"\nassert solution(\"100 51 51 51\") == \"1134\"\nassert solution(\"1234 1 100 199\") == \"0\"\nassert solution(\"1000000000 1 1 1000000000\") == \"1134\"\n\n\"\"\""
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == \"\"\"3\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '3'\nassert solution('5' * 1000) == '3'\nassert solution('10' * 1000) == '3'\nassert solution('10000') == '3'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\") == '3'\nassert solution(\"\"\"2\n1 3 3 1\n3 1 3 1\n\"\"\") == '2'\nassert solution(\"\"\"1\n2 1 1 2\n1 1 1 2\n\"\"\") == '0'\nassert solution(\"\"\"1\n1 1 1 2\n1 1 1 2\n\"\"\") == '1'\nassert solution(\"\"\"1\n1 1 1 2\n1 1 1 2\n\"\"\") == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3 7\\n10 1 10 10\\n1000000000 1 1 1000000000\\n') == '3'\nassert solution('2\\n4 3 2 2\\n2 4 3 2\\n1000000000 1 1 1000000000\\n2 1 100 1 1000000\\n2 1 1 100 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"4\") == 3\nassert solution(\"8\") == 1260\nassert solution(\"20\") == 12164510040883200\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nprint(solution(stdin))\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n\n\"\"\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nassert solution('2\\n4') == '1'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '1\\n'\nassert solution('8\\n') == '1260\\n'\nassert solution('20\\n') == '12164510040883200\\n'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('2') == '1'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n\n\"\"\"\n\nfrom math import factorial\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n\nprint(solution(input()))"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('3') == '1'\nassert solution('10') == '6'\nassert solution('25') == '8'\nassert solution('50') == '14'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == ''''''\nassert solution('''cccaabababaccbc''') == ''''\nassert solution('''cccaabababaccbc''') == ''''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('b') == ''\nassert solution('ccccccccccc') == ''\nassert solution('cccaabababaccbc') == 'cccbbabaccbc'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('uuuuuuuuuuuuuuuuuuu') == ''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('ab') == ''\nassert solution('abab') == 'a'\nassert solution('abc') == 'a'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('ab') == ''\nassert solution('abacb') == 'bacb'\nassert solution('abbbb') == 'bbb'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('u') == 'u'\nassert solution('fbfhkwbgf') == 'fbfhkwbghf'\nassert solution('fbfhkwbghf') == 'fbfhkwbghf'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"3 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\""
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\nassert solution(\"\"\"5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"20\"\nassert solution(\"\"\"8 10\n4 3\n3 5\n2 4\n2 3\n2 3\n3 4\n4 2\n2 4\n2 3\n2 3\n2 3\n2 3\n\"\"\") == \"25\"\nassert solution(\"\"\"10 10\n3 4\n4 3\n4 2\n4 1\n5 2\n5 4\n6 2\n6 4\n7 2\n8 1\n8 2\n8 4\n9 1\n9 2\n9 4\n\"\"\") == \"8\"\nassert solution(\"\"\"8 9\n4 4\n4 2\n4 1\n5 2\n5 4\n6 2\n6 4\n7 2\n8 1\n8 2\n8 4\n9 1\n9 2\n9 4\n\"\"\") == \"8\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''2 2\n2 1\n2 1\n1 1\n2 1\n1 2\n1 2\n2 1\n''') == '0'\nassert solution('''2 3\n4 2\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\nassert solution('''1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''2 1\n1 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''2 1\n1 2\n3 1\n''') == '4'\nassert solution('''2 3\n3 1\n1 2\n2 3\n''') == '5'\nassert solution('''10 1\n2 2 3 4 5 6 7 8 9 10\n''') == '3'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution(\n'''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"20\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"20\"\nassert solution(\"3 3\\n2 5\\n1 2\\n1 5\\n2 3\\n\") == \"20\"\nassert solution(\"3 3\\n1 5\\n1 2\\n2 5\\n2 3\\n\") == \"20\"\nassert solution(\"4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"45\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\nassert solution('''5 1\n5\n''') == '0'\n\nassert solution('''1 4\n1\n''') == '0'\n\nassert solution('''4 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '7'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expected_output"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n*\\n\") == \"2\"\nassert solution(\"2 2\\n*\\n*\\n\") == \"3\"\nassert solution(\"2 2\\n.\\n.\\n\") == \"3\"\nassert solution(\"2 2\\n.*\\n.*\\n\") == \"3\"\nassert solution(\"2 2\\n.\\n.\\n*\\n\") == \"3\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5') == '3'\nassert solution('3 3') == '-1'\nassert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '3'\n\nassert solution('''\n4 4\n*.*\n.*.\n.*.\n.*.\n''') == '-1'\n\nassert solution('''\n3 3\n.*.*\n.*.\n.*.\n''') == '-1'\n\nassert solution('''\n4 4\n*.*\n.*.\n.*.\n.*.\n''') == '3'\n\nassert solution('''\n3 3\n*.*\n.*.\n.*.\n''') == '3'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '-1'\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\nassert solution('''5 5\n*.*\n.*.\n*.*\n.*.\n.....\n''') == '-1'\nassert solution('''5 5\n*.*\n.*.\n*.*\n.*.\n.....\n''') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == -1\nassert solution('*') == 1\nassert solution('****') == 1\nassert solution('*.*') == 1\nassert solution('****') == 1\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 8''') == '3'\nassert solution('''6 8''') == '3'\nassert solution('''3 3''') == '3'\nassert solution('''5 5''') == '3'\nassert solution('''9 9''') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '-1'\nassert solution('5 5') == '-1'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(575) == 'Yes'\nassert solution(92876) == 'Yes'\nassert solution(12223) == 'No'\nassert solution(987043) == 'No'\nassert solution(12341) == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\nassert solution('275') == 'No'\nassert solution('101') == 'Yes'\nassert solution('10') == 'No'\nassert solution('105') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"9\") == \"No\"\nassert solution(\"127\") == \"Yes\"\nassert solution(\"1212\") == \"No\"\nassert solution(\"1111\") == \"Yes\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('567') == 'Yes'\nassert solution('575') == 'Yes'\nassert solution('98') == 'No'\nassert solution('99') == 'No'\nassert solution('100') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('575') == 'Yes'\nassert solution('643') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('6') == 'No'\nassert solution('0') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('575') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100') == 'Yes'\nassert solution('101') == 'No'\nassert solution('11') == 'Yes'\nassert solution('12') == 'No'\nassert solution('21') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == 'No'\nassert solution('0') == 'No'\nassert solution('1') == 'Yes'\nassert solution('11') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(int(stdin.strip())) == stdin.strip()\nassert solution(int(\"756\")) == \"Yes\"\nassert solution(int(\"3\")) == \"No\"\nassert solution(int(\"1233\")) == \"Yes\"\nassert solution(int(\"123311233\")) == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(575) == 'Yes'\nassert solution(676) == 'No'\nassert solution(891) == 'No'\nassert solution(567) == 'Yes'\nassert solution(889) == 'No'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 3') == 'Bob'\nassert solution('2 1') == 'Draw'\nassert solution('1 1') == 'Draw'\nassert solution('13 1') == 'Alice'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 6') == 'Bob'\nassert solution('1 2') == 'Draw'\nassert solution('2 1') == 'Alice'\nassert solution('1 1') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('9 7') == 'Bob'\nassert solution('9 8') == 'Draw'"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Alice\"\nassert solution(\"2 1\") == \"Bob\"\nassert solution(\"3 1\") == \"Draw\"\nassert solution(\"8 4\") == \"Alice\"\nassert solution(\"9 4\") == \"Bob\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 6') == 'Bob'\nassert solution('8 6') == 'Draw'\nassert solution('9 8') == 'Alice'\nassert solution('9 8') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('1 2') == 'Draw'\nassert solution('9 8') == 'Bob'\nassert solution('1 2') == 'Draw'\nassert solution('4 8') == 'Alice'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('2 1') == 'Bob'\nassert solution('2 1') == 'Draw'\n\"\"\""
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('10 7') == 'Bob'\nassert solution('9 5') == 'Draw'\nassert solution('4 8') == 'Alice'\nassert solution('7 1') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Alice\"\nassert solution(input()) == \"Bob\"\nassert solution(input()) == \"Draw\"\nassert solution(input()) == \"Alice\"\nassert solution(input()) == \"Bob\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"afds,fdsa,fdsa\") == \"afds fdsa fdsa\"\nassert solution(\"afds,fdsa,fdsa,\") == \"afds fdsa fdsa\"\nassert solution(\"afds,fdsa,fdsa,\") == \"afds fdsa fdsa\"\nassert solution(\"afds,fdsa,fdsa,\") == \"afds fdsa fdsa\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('h,y,y,e,p,p,a,r,n,d,y') == 'h y y e p p a r n d y'\nassert solution('m,a,r,k,e,s,o,u,r,c,e,n,d,o,w') =='m a r k e s o u r c e n d o w'\nassert solution('f,o,o,b,b,l,u,n,d,o,o,r,d,y') == 'f o o b b l u n d o o r d y'\nassert solution('a,l,l,a,l,l,l,l,o,n') == 'a l l a l l o n'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll,mm,nn,oo,pp,qq,rr,ss,tt,uu,vv,ww,xx,yy,zz') == 'aa bb cc dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz'\nassert solution('aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll,mm,nn,oo,pp,qq,rr,ss,tt,uu,vv,ww,xx,yy,zz') == 'aa bb cc dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz'\nassert solution('aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll,mm,nn,oo,pp,qq,rr,ss,tt,uu,vv,ww,xx,yy,zz') == 'aa bb cc dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('j,c,f,l,a,k,h,p,t,y,o,u,e,n,i,k,a,s,r,g,a,d,l,e,m,n,h,e,n,g,o,r,e,n,g,a,o,f,o,r,f,a,m,o,v,u,p,t,t,a,n,s,o,f,t,r,e,n,g,e,l,e,f,t,a,t,y,r,a,o,u,n,e,t,c,a,l,t,s,m,o,u,a,k,c,a,s,r,r,y,o,u,t,i,a,g,e,n,a,t,e,r,n,o,r,d,t,c,h,e,c,k,n,a,n,f,c,o,t,e,g,r,f,e,n,a,p,r,a,c,r,f,n,a,k,s,g,n,m,r,f,u,s,t,k,l,a,e,p,g,o,c,m,e,a,r,n,t,a,c,e,i,a,r,p,n,y,m,r,a,h,p,o,d,o,v,t,e,r,s,g,a,e,a,t,e,n,g,a,o,f,o,t,m,a,r,e,n,h,a,l,p,c,r,a,n,t,a,c,n,t,a,a,o,c,n,a,p,r,a,d,i,g,e,a,s,r,g,a,f,r,t,e,g,r,g,s,c,r,e,t,g,r,i,a,g,e,n,c,o,g,r,f,n,c,e,a,l,p,a,g,a,o,r,a,s,e,d,e,a,n,g,a,r,g,e,e,g,a,r,n,n,a,l,c,a,g,t,a,p,a,o,a,n,a,s,g,o,r,e,a,s,t,a,c,e,i,a,p,a,g,e,c,p,g,e,t,a,l,a,n,a,g,a,p,e,a,t,e,n,a,g,a,c,a,t,e,n,a,f,o,n,a,g,a,p,a,p,a,g,a,r,g,p,g,r,e,t,g,r,e,a,r,p,a,a,g,t,a,g,r,g,e,a,r,r,a,g,a,r,e,a,g,e,n,a,r,g,a,c,a,p,a,a,o,c,p,a,e,g,r,a,e,a,a,a,g,e,e,r,a,c,a,g,a,r,g,e,g,g,o,r,e,a,g,a,r,g,t,a,g,a,t,g,a,a,r,a,s,g,t,a,c,p,a,g,a,r,g,e,a,r,g,e,t,g,r,a,c,a,t,g,r,a,e,g,a,g,g,o,r,g,g,a,a,r,a,g,e,g,g,o,r,e,a,e,r,a,g,r,e,t,g,r,g,e,e,g,e,g,e,r,a,g,t,a,g,g,a,a,r,e,a,g,r,g,e,g,r,a,a,g,e,g,r,g,e,g,t,r,a,g,a,c,a,g,g,o,r,e,a,g,r,g,e,g,r,g,e,r,g,a,g,r,e,a,g,a,c,g,r,g,e,r,e,a,r,g,g,e,r,a,g,r,g,e,g,r,g,e,g,g,e,r,g,a,r,g,a,g,r,g,e,g,r,g,g,r,g,r,g,r,g,a,a,r,a,g,e,g,r,g,e,g,r,g,e,g,g,r,a,r,g,r,e,e,g,e,g,r,e,e,g,r,g,e,g,g,r,g,g,r,g,r,g,r,g,g,r,g,g,g,r,g,r,g,r,g,a,r,g,r,g,e,g,r,g,g,r,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g,r,g,r,g,g"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\",,\") == \", \"\nassert solution(\"a,b,c\") == \"a b c\"\nassert solution(\"1,2,3,4,5,6,7,8,9\") == \"1 2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"friday,monday,tuesday,wednesday,thursday,friday\") == \"friday monday tuesday thursday friday\"\nassert solution(\"friday,monday,tuesday,wednesday,thursday,saturday\") == \"friday monday tuesday thursday saturday\"\nassert solution(\"friday,monday,tuesday,wednesday,thursday,friday,saturday,sunday\") == \"friday monday tuesday thursday friday saturday sunday\"\nassert solution(\"friday,monday,tuesday,wednesday,thursday,friday,saturday,sunday,sunday\") == \"friday monday tuesday thursday friday saturday sunday sunday\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"h,y,e,n,e,e,n,d,o
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"love,i,am,a,boy\") == \"love i am boy\"\nassert solution(\"yes,i,am,a,boy\") == \"yes i am boy\"\nassert solution(\"yes,i,am,a,girl\") == \"yes i am girl\"\nassert solution(\"no,thanks\") == \"no thanks\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('hope,x,even') == 'hope x even'\nassert solution('sat,std,ate') =='sat std ate'\nassert solution('hope,x,even') == 'hope x even'\nassert solution('hope,x,even') == 'hope x even'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '''2\n1\n'''\n\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '''1\n1\n'''\n\nassert solution('''2 2\n2 1\n0 0\n1 0\n0 1''') == '''1\n2\n'''\n\nassert solution('''2 2\n2 0\n0 0\n-1 0\n0 0\n1 0\n0 1''') == '''2\n1\n'''\n\nassert solution('''3 2\n2 1\n0 0\n-1 0\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n3 1\n3 2\n3 3\n3 4\n3 5\n4 1\n4 2\n4 3\n4 4\n4 5\n5 1\n5 2\n5 3\n5 4\n5 5''') == '''2\n1\n2\n3\n4\n5\n1\n2\n3\n4\n5\n1\n2\n3\n4\n5\n1\n2\n3\n4\n5\n'''"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1\\n'\nassert solution('2 3\\n1 1\\n2 1\\n3 1\\n4 1\\n1 1\\n1 2\\n2 2\\n2 3') == '2\\n1\\n'\nassert solution('5 5\\n8 9 10 11 12 13\\n7 8 9 10 11\\n7 8 9 10 11\\n7 8 9 10 11\\n7 8 9 10 11') == '2\\n2\\n3\\n4\\n4\\n'\nassert solution('5 5\\n-8 -9 -10 -11 -12\\n-7 -8 -9 -10 -11\\n-7 -8 -9 -10 -11\\n-7 -8 -9 -10 -11\\n-7 -8 -9 -10 -11\\n') == '1\\n2\\n2\\n2\\n2\\n'\nprint('All tests passed successfully')\n\"\"\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '1\\n2'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n1\\n1') == '2\\n2'\nassert solution('2 1\\n2 0\\n0 0\\n-1 0\\n1 0\\n1\\n1\\n1') == '1\\n2'\nassert solution('1 1\\n1 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2'\nassert solution('''2 2\n2 0\n0 0\n0 0\n0 0\n-1 0\n1 0''') == '1'\nassert solution('''2 2\n2 0\n0 0\n0 0\n0 0\n-1 0\n1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0\n-1 0"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n-1 0\n1 0''') == '1\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1 0\n1 0\n-1"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"0 0\") == \"1\"\nassert solution(\"-1 0\") == \"1\"\nassert solution(\"1 0\") == \"1\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1\\n1'\n'''\n'''\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\\n1\"\nassert solution(\"2 1\") == \"1\\n1\"\nassert solution(\"2 1\\n1 0\") == \"1\\n1\"\nassert solution(\"2 1\\n1 0\\n0 0\") == \"1\\n1\"\nassert solution(\"2 1\\n0 0\\n0 0\") == \"1\\n1\"\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 14\nassert solution(3) == 26\nassert solution(4) == 58\nassert solution(5) == 85\nassert solution(6) == 106\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == 14\nassert solution(\"5\") == 145\nassert solution(\"7\") == 147\nassert solution(\"8\") == 148\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 3\nassert solution(2) == 7\nassert solution(3) == 11\nassert solution(4) == 19\nassert solution(5) == 37\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '3'\nassert solution('3') == '6'\nassert solution('6') == '10'\nassert solution('10') == '30'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(2) == 14\n\n'''"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == 3\nassert solution(2) == 6\nassert solution(3) == 9\nassert solution(4) == 12\nassert solution(5) == 15\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('2') == '14'\nassert solution('10') == '126'\nassert solution('1') == '3'\nassert solution('5') == '26'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('c') == 'c'\nassert solution('d') == 'd'\nassert solution('e') == 'e'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == int(input())\nassert solution(input()) == int(input())\nprint('Test successful!')\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 14\nassert solution('3') == 45\nassert solution('5') == 95\nassert solution('9') == 97\nassert solution('12') == 138\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n.#.#\n.#.\n.#.\n.#.\n.#.\n''') == 'Yes'\n\nassert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('#.#\\n.#.\\n.#.\\n#.#\\n#.\\n#.#') == \"Yes\"\nassert solution('#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#."
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n.#.#\n.#.#\n.#.#\n.#.#\n.#.\n.#.\n.#.\n.#''') == 'Yes'\nassert solution('''3 2\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('6 9 4') == '43'\nassert solution('8 5 9') == '60'\nassert solution('1 3 4') == '25'\nassert solution('8 4 2') == '38'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 5 9') == '106'\nassert solution('1 2 3') == '9'\nassert solution('1 2 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 3') == '6'\nassert solution('5 6 9') == '24'\nassert solution('3 2 3') == '5'\nassert solution('1 9 9') == '25'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 3 2') == '2'\nassert solution('1 2 2') == '0'\nassert solution('1 2 3') == '1'\nassert solution('9 9 9') == '1'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('5 1 2') == '53'\nassert solution('0 0 0') == '0'\nassert solution('0 0 1') == '0'\nassert solution('0 1 1') == '0'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('5 6 7') == '34'\nassert solution('8 9 10') == '297'\nassert solution('1 7 1') == '18'\nassert solution('3 2 7') == '29'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"5 4 2\") == \"25\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 8 9\") == \"45\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 3') == '1'\nassert solution('5 8 3') == '23'\nassert solution('7 7 7') == '7'\nassert solution('7 7 3') == '7'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 1') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 2') == '4'\nassert solution('1 1 1 2 3') == '10'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '53'\nassert solution('2 3 3') == '20'\nassert solution('1 2 3') == '53'\nassert solution('1 2 3') == '20'\nassert solution('1 1 1') == '3'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4980\n7980\n6980''') == '15950'\nassert solution('''9\n1405\n4725\n4800\n4070\n3480\n3445\n3909\n3945\n3982''') == '22520'\nassert solution('''8\n9796\n7999\n7280\n5040\n4760\n4480\n4282\n4094''') == '19604'\nassert solution('''4\n1000\n700\n500\n300''') == '0'\nassert solution('''7\n9599\n9299\n9099\n9199\n8999\n8000''') == '3125'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"15950\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n4980\n7980\n6980''') == '15950'\nassert solution('''2\n100\n99''') == '99'\nassert solution('''4\n1\n2\n3\n4''') == '10'\nassert solution('''4\n4\n1\n4\n1''') == '3'\nassert solution('''3\n5\n1\n1''') == '2'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n249\\n179\\n49\\n') == '2999'\n\"\"\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"15950\"\n\"\"\""
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"15950\"\n'''\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '3'\nassert solution('1\\n5') == '4'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3\n4980\n7980\n6980'''\n) == '15950'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''29\n20\n7\n35\n120'''\n) == '215'\n\nassert solution(\n'''29\n20\n7\n35\n120'''\n) == '215'\n\nassert solution(\n'''29\n20\n7\n35\n120'''\n) == '215'\n\nassert solution(\n'''29\n20\n7\n35\n120'''\n) == '215'\n\nassert solution(\n'''29\n20\n7\n35\n120'''\n) == '215'"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n\n\"\"\"\nsolution(stdin)"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\n    \"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\n    \"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\n    \"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\n    \"29\\n20\\n7\\n35\\n120\") == \"215\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC Don') == '215'\nassert solution('ARC Curry') == '50'\nassert solution('AGC Pasta') == '57'\nassert solution('APC Ramen') == '180'\nassert solution('ATC Hanbagu') == '215'\n\n'''\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('20\\n7\\n35\\n120\\n') == '215'\nassert solution('20\\n7\\n35\\n120\\n') == '215'\nassert solution('20\\n7\\n35\\n120\\n') == '215'\nassert solution('20\\n7\\n35\\n120\\n') == '215'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\") == \"12345\"\nassert solution(\"10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"12345\"\nassert solution(\"3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"12345\"\nassert solution(\"3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"12345\"\nassert solution(\"10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"12345\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('2\\n2\\n2\\n2\\n2\\n') == '3'\nassert solution('3\\n3\\n3\\n3\\n3\\n') == '6'\nassert solution('4\\n4\\n4\\n4\\n4\\n') == '10'\nassert solution('5\\n5\\n5\\n5\\n5\\n') == '15'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\""
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"29\\n20\\n7\\n35\\n120\"\n) == \"215\"\n\"\"\"\n\n\"\"\"\nWhat can I expect from the inputs?\n\nWhat can I expect from the outputs?\n\n- Can I expect that the first integer on every line is not 0?\n- Can I expect that the second integer on every line is not 0?\n- Can I expect that the third integer on every line is not 0?\n- Can I expect that the fourth integer on every line is not 0?\n- Can I expect that the fifth integer on every line is not 0?\n- Can I expect that the sixth integer on every line is not 0?\n- Can I expect that the seventh integer on every line is not 0?\n- Can I expect that the eighth integer on every line is not 0?\n- Can I expect that the ninth integer on every line is not 0?\n- Can I expect that the tenth integer on every line is not 0?\n- Can I expect that the eleventh integer on every line is not 0?\n- Can I expect that the twelfth integer on every line is not 0?\n\n\"\"\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('10 50') == '7.5'\nassert solution('10 100') == '7.5'\nassert solution('10 1000') == '7.5'\nassert solution
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 5 7\"\nassert solution(\"1 1 1\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 1 1 2 2 3 4 5 6 7 8 9 10 10\"\nassert solution(\"10 30\") == \"7.5\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7.5\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('10 10') == '0'\nassert solution('1 1') == '0'\nassert solution('10 10 1') == '5.0'\nassert solution('10 10 2') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 30\") == \"7.5\"\nassert solution(\"50 10\") == \"7.50001\"\nassert solution(\"80 17\") == \"0.8125\"\nassert solution(\"20 25\") == \"0.6666666666666666\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\n\"\"\"\n\n\"\"\"\n\"\"\"\n--- Part Two ---\nIn the \"science\" field of our galaxy, a mysterious being known only as Oberon sits in a quasar far far away, and we cannot seem to cross its spectral lines of sight.\n\nFortunately, we have a device that can measure the wavelengths of nearby stars in the sky, and we have some experience doing so as a galactic civil engineer.\n\nOberon's quasar is a red giant star with a spectral class of M dwarfs. Its star form a ring system, and the spectral class of each member is the orbital period of the star.\n\nWe have collected data on the wavelengths of some stars in our galaxy, and we suspect that the spectral class of each star is, in some sense, derived from its orbital period.\n\nIn particular, we suspect that the spectral class of each star is derived from the orbital period of the star, with spectral class G being a group of supergiants, and F being a group of giants.\n\nFor example, with the following table as an example:\n\nStar Period   Spectral Class\n1.000000E+00   G\n5.000000E+00   F\n1.0000000E+01   G\n1.000000E+02   F\n1.0000000E+03   F\n1.000000E+04   F\n1.0000000E+05   F\n1.000000E+06   F\n1.0000000E+07   F\n1.0000000E+08   F\n1.0000000E+09   F\n1.0000000E+10   F\n1.0000000E+11   F\n1.0000000E+12   F\n1.0000000E+13   F\n1.0000000E+14   F\n1.0000000E+15   F\n1.0000000E+16   F\n1.0000000E+17   F\n1.0000000E+18   F\n1.0000000E+19   F\n1.0000000E+20   F\n1.0000000E+21   F\n1.0000000E+22   F\n1.0000000E+23   F\n1.0000000E+24   F\n1.0000000E+25   F\n1.0000000E+26   F\n1.0000000E+27   F\n1.0000000E+28   F\n1.0000000E+29   F\n1.0000000E+30   F\n1.0000000E+31   F\n1.0000000E+32   F\n1.0000000E+33   F\n1.0000000E+34   F\n1.0000000E+35   F\n1.0000000E+36   F\n1.0000000E+37   F\n1.0000000E+38   F\n1.0000000E+39   F\n1.0000000E+40   F\n1.0000000E+41   F\n1.0000000E+42   F\n1.0000000E+43   F\n1.0000000E+44   F\n1.0000000E+45   F\n1.0000000E+46   F\n1.0000000E+47   F\n1.0000000E+48   F\n1.0000000E+49   F\n1.0000000E+50   F\n1.0000000E+51   F\n1.0000000E+52   F\n1.0000000E+53   F\n1.0000000E+54   F\n1.0000000E+55   F\n1.0000000E+56   F\n1.0000000E+57   F\n1.0000000E+58   F\n1.0000000E+59   F\n1.0000000E+60   F\n1.0000000E+61   F\n1.0000000E+62   F\n1.0000000E+63   F\n1.0000000E+64   F\n1.0000000E+65   F\n1.0000000E+66   F\n1.0000000E+67   F\n1.0000000E+68   F\n1.0000000E+69   F\n1.0000000E+70   F\n1.0000000E+71   F\n1.0000000E+72   F\n1.0000000E+73   F\n1.0000000E+74   F\n1.0000000E+75   F\n1.0000000E+76   F\n1.0000000E+77   F\n1.0000000E+78   F\n1.0000000E+79   F\n1.0000000E+80   F\n1.0000000E+81   F\n1.0000000E+82   F\n1.0000000E+83   F\n1.0000000E+84   F\n1.0000000E+85   F\n1.0000000E+86   F\n1.0000000E+87   F\n1.0000000E+88   F\n1.0000000E+89   F\n1.0000000E+90   F\n1.0000000E+91   F\n1.0000000E+92   F\n1.0000000E+93   F\n1.0000000E+94   F\n1.0000000E+95   F\n1.0000000E+96   F\n1.0000000E+97   F\n1.0000000E+98   F\n1.0000000E+99   F\n1.0000000E+100   F\n1.0000000E+101   F\n1.0000000E+102   F\n1.0000000E+103   F\n1.0000000E+104   F\n1.0000000E+105   F\n1.0000000E+106   F\n1.0000000E+107   F\n1.0000000E+108   F\n1.0000000E+109   F\n1.0000000E+110   F\n1.0000000E+111   F\n1.0000000E+112   F\n1.0000000E+113   F\n1.0000000E+114   F\n1.0000000E+115   F\n1.0000000E+116   F\n1.0000000E+117   F\n1.0000000E+118   F\n1.0000000E+119   F\n1.0000000E+120   F\n1.0000000E+121   F\n1.0000000E+122   F\n1.0000000E+123   F\n1.0000000E+124   F\n1.0000000E+125   F\n1.0000000E+126   F\n1.0000000E+127   F\n1.0000000E+128   F\n1.0000000E+129   F\n1.0000000E+130   F\n1.0000000E+131   F\n1.0000000E+132   F\n1.0000000E+133   F\n1.0000000E+134   F\n1.0000000E+135   F\n1.0000000E+136   F\n1.0000000E+137   F\n1.0000000E+138   F\n1.0000000E+139   F\n1.0000000E+140   F\n1.0000000E+141   F\n1.0000000E+142   F\n1.0000000E+143   F\n1.0000000E+144   F\n1.0000000E+145   F\n1.0000000E+146   F\n1.0000000E+147   F\n1.0000000E+148   F\n1.0000000E+149   F\n1.0000000E+150   F\n1.0000000E+151   F\n1.0000000E+152   F\n1.0000000E+153   F\n1.0000000E+154   F\n1.0000000E+155   F\n1.0000000E+156"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('40 50') == '4.4'\nassert solution('10 30') == '7.5'\nassert solution('25 50') == '5.25'\nassert solution('10 30') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''2\n10 30''') == '7.5'\nassert solution('''2\n10 30''') == '7.5'\nassert solution('''1\n1''') == '1'\nassert solution('''5\n1000 1000 1000 1000 1000''') == '1'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '7.5'\nassert solution(input()) == '7.49999'\nassert solution(input()) == '7.49999'\nassert solution(input()) == '7.49999'\nassert solution(input()) == '7.49999'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 30') == '7.5'\n'''\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '2'\nassert solution('10\\n15\\n11\\n14\\n12') == '2'\nassert solution('3 3') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('2\\n1') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('3 2\\n10\\n15\\n11\\n14') == '1'\nassert solution('1 2\\n10\\n15\\n11') == '0'\nassert solution('2 2\\n10\\n15\\n11\\n14') == '1'\nassert solution('4 5\\n10\\n15\\n11\\n14\\n12\\n13') == '1'\n\"\"\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10\") == \"0\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10 3\") == \"1\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, k = map(int, stdin.split())\n\nmin_height = -1\n\nfor i in range(k, n+1):\n    height = int(stdin.readline())\n    if height < min_height or min_height == -1:\n        min_height = height\n\nprint(min_height - min_height)\n\n\"\"\"\n\nBest solution\n\"\"\""
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'\nassert solution('10 15') == '2'\nassert solution('10 15 14 12') == '2'\nassert solution('10 15 14 12 12 12') == '0'\nassert solution('10 15 14 12 12 12 14 12 14 12 12') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '2'\nassert solution('10') == '0'\nassert solution('15') == '-1'\nassert solution('11') == '1'\nassert solution('14') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('B') == 'A'\nassert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('Bb') == 'a'\nassert solution('Aa') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\n\n'''"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('A') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('b') == 'a'\nprint('Test Success!')\n\n\"\"\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"A\"\nassert solution(input()) == \"a\"\nassert solution(input()) == \"a\"\nassert solution(input()) == \"a\"\nassert solution(input()) == \"a\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('bA') == 'aA'\nassert solution('a') == 'a'\nassert solution('A') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'a'\nassert solution('b') == 'a'\nassert solution('A') == 'A'\nassert solution('B') == 'a'\nassert solution('Ca') == 'A'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('C') == 'C'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('a') == 'a'\nassert solution('b') == 'a'\nassert solution('c') == 'c'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '0'\nassert solution('2 1') == '0'\nassert solution('2 2') == '6'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2') == '6'\nassert solution('3 4') == '0'\nassert solution('3 4') == '0'\nassert solution('0 5') == '6'\nassert solution('2 3') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2') == '6'\n\"\"\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 2') == '6'\nassert solution('1 1') == '3'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''1 1''') == '0'\nassert solution('''5 2''') == '3'\nassert solution('''0 0''') == '0'\nassert solution('''0 0''') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2') == '6'\nassert solution('0 0') == '3'\nassert solution('1 1') == '1'\nassert solution('1 0') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0519\") == \"MMYY\"\nassert solution(\"1905\") == \"YYMM\"\nassert solution(\"0519\") == \"MMYY\"\nassert solution(\"1234\") == \"NA\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('20181') == 'MMYY'\nassert solution('1905') == 'AMBIGUOUS'\nassert solution('20181') == 'AMBIGUOUS'\nassert solution('1905') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"05YY\") == \"MMYY\"\nassert solution(\"1905\") == \"AMBIGUOUS\"\nassert solution(\"5Y3M\") == \"YYMM\"\nassert solution(\"05Y3M\") == \"MMYY\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0112') == 'MMYY'\nassert solution('123') == 'NA'\nassert solution('100') == 'NA'\nassert solution('1905') == 'YYMM'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1905-05\") == \"YYMM\"\nassert solution(\"0905\") == \"YYMM\"\nassert solution(\"0905-05\") == \"YYMM\"\nassert solution(\"0519\") == \"YYMM\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''1905'''\n) == 'YYMM'\n\nassert solution(\n'''0519'''\n) == 'AMBIGUOUS'\n\nassert solution(\n'''1905'''\n) == 'NA'\n\nassert solution(\n'''1905'''\n) == 'NA'\n\nassert solution(\n'''0519'''\n) == 'AMBIGUOUS'"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YYMM'\nassert solution(input()) == 'MMYY'\nassert solution(input()) == 'AMBIGUOUS'\nassert solution(input()) == 'NA'\nassert solution(input()) == 'NA'"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('20160904') == 'MMYY'\nassert solution('1905AM') == 'NA'\nassert solution('130403') == 'AMBIGUOUS'\nassert solution('1111') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\nassert solution('X19') == 'NA'\nassert solution('1919') == 'NA'\nassert solution('1919X') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0519\") == \"MMYY\"\nassert solution(\"052019\") == \"AMBIGUOUS\"\nassert solution(\"201905\") == \"NA\"\nassert solution(\"19A5\") == \"NA\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('1') == '0'\nassert solution('0') == '1'\nassert solution('4') == '6'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '4'\nassert solution('15') == '5'\nassert solution('25') == '9'\nassert solution('50') == '19'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\nprint('Passed: This is a correct solution')\n\n'''"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == \"2\"\nassert solution('''1''') == \"1\"\nassert solution('''2''') == \"2\"\nassert solution('''3''') == \"4\"\nassert solution('''4''') == \"8\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"100\") == \"24\"\nprint(solution(\"K\"))\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == 2\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('4') == 2\nassert solution('5') == 0\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\"\n) == 2\nassert solution(\n    \"2\"\n) == 2\nassert solution(\n    \"3 4\"\n) == 0\nassert solution(\n    \"3 4 5\"\n) == 1\nassert solution(\n    \"2 3 4\"\n) == 1\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 12') == '21'"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 5\") == \"5\"\nassert solution(\"5 6\") == \"5\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"11 19\") == \"19\"\nassert solution(\"13 18\") == \"19\"\nassert solution(\"16 19\") == \"19\"\nassert solution(\"1 22\") == \"19\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\n\n'''"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'\n'''"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9 12''') == '21'\nassert solution('''2 19''') == '17'\nassert solution('''6 14''') == '18'\nassert solution('''8 18''') == '20'\nassert solution('''9 12''') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 12') == '21'\n'''\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 12') == '21'"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9 12''') == '21'\nassert solution('''9 3''') == '15'\nassert solution('''11 22''') == '33'\nassert solution('''22 10''') == '19'\nassert solution('''14 19''') == '07'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 4\") == \"-2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2919''') == '3719'\nassert solution('''1 7''') == '37'\nassert solution('''4 74''') == '-100'\nassert solution('''5 75''') == '-999'\nassert solution('''50 77''') == '-999'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\""
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2919''') == '3719'\nassert solution('''4 371''') == '3300'\nassert solution('''15 100''') == '30500'\nassert solution('''7 14''') == '20170'\nassert solution('''99 99''') == '99999'\n'''\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2919\n''') == '3719'\nassert solution('''2 2919\n''') == '3719'\nassert solution('''5 1234\n''') == '6999'\nassert solution('''5 1704\n''') == '1013'\nassert solution('''5 3456\n''') == '2191'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n\") == \"0\"\nassert solution(\"2 2919\\n\") == \"3719\"\nassert solution(\"2 3\\n\") == \"5\"\nassert solution(\"1 5\\n\") == \"50\"\nassert solution(\"1 1\\n\") == \"1\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('3 2') == '1'\nassert solution('1 3') == '2'\nassert solution('3 5') == '4'\nassert solution('4 15') == '44'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"2 3119\") == \"3700\"\nassert solution(\"2 4059\") == \"3498\"\nassert solution(\"2 1329\") == \"2731\"\nassert solution(\"2 0\") == \"0\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"2 2918\") == \"2898\"\nassert solution(\"2 2917\") == \"2976\"\nassert solution(\"2 2916\") == \"3168\"\nassert solution(\"2 2915\") == \"3678\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"11 7\") == \"5\"\nassert solution(\"100000 100000\") == \"26\"\nassert solution(\"13 7\") == \"2\"\nassert solution(\"27 13\") == \"2\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 2') == '4'\nassert solution('10 17') == '2'\nassert solution('11 3') == '3'\nassert solution('0 0') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(11,2) == 4\nassert solution(31,16) == 7\nassert solution(1116,16) == 7\nassert solution(89,8) == 2\nassert solution(1025,32) == 4\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1011') == '4'\nassert solution('111111111111111111111') == '32'\nassert solution('1010') == '2'\nassert solution('111111111') == '9'\nassert solution('111') == '1'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 4\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1') == '0'\nassert solution('11 10') == '4'\nassert solution('13 10') == '6'\nassert solution('15 10') == '5'\nassert solution('20 10') == '4'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11 2') == '4'\nassert solution('11 16') == '5'\nassert solution('100 10') == '5'\nassert solution('1 100') == '5'\nassert solution('0 16') == '1'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '4'\nassert solution('15') == '5'\nassert solution('20') == '6'\nassert solution('25') == '7'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"100\") == \"0\"\n\"\"\""
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '3'\nassert solution('''10''') == '4'\nassert solution('''25''') == '5'\nassert solution('''1''') == '1'\nassert solution('''34''') == '6'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('6') == '5'\nassert solution('7') == '7'\nassert solution('8') == '7'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"2\"\nassert solution(\"5\\n\") == \"3\"\nassert solution(\"100\\n\") == \"25\"\nprint(solution(\"1\"))\nprint(solution(\"5\"))\nprint(solution(\"100\"))\n\n\"\"\""
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('12') == '3'\nassert solution('20') == '4'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\nassert solution(\"15\") == \"6\"\nassert solution(\"20\") == \"7\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\nassert solution(\"1000\") == \"25\"\nassert solution(\"5000\") == \"125\"\nassert solution(\"10000\") == \"250\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"12\"\nassert solution(\"5\") == \"15\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Yay!'\nassert solution('1 1') == 'Yay!'\nassert solution('5 4') == 'Yay!'\nassert solution('1 1') == 'Yay!'\nassert solution('1 1') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''\n\nA, B = list(map(int, input().split()))\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4') == 'Yay!'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 4\"\n) == \"Yay!\"\n\nassert solution(\n    \"6 5\"\n) == \"Yay!\"\n\nassert solution(\n    \"4 3\"\n) == \"Yay!\"\n\nassert solution(\n    \"7 7\"\n) == \"Yay!\"\n\nassert solution(\n    \"8 8\"\n) == \"Yay!\""
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'Yay!'\n\nassert solution('5 1') == 'Yay!'\n\nassert solution('4 1') == 'Yay!'\n\nassert solution('7 5') == 'Yay!'\n\nassert solution('4 7') == 'Yay!'"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 10\") == \"Yay!\"\nassert solution(\"4 1\") == \"Yay!\"\nassert solution(\"5 11\") == \"Yay!\"\nassert solution(\"3 2\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Yay!'\n\n\"\"\"\n\na,b = map(int, input().split())"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"E869120's and square1001's 16-th birthday is coming soon.\\n\" +\n\"E869120's and square1001 were just about to eat A and B of those pieces, respectively,\\n\" +\n\"when they found a note attached to the cake saying that \\\"the same person should not take two adjacent pieces of cake\\\".\\n\" +\n\"Can both of them obey the instruction in the note and take desired numbers of pieces of cake?\\n\") == \"Yay!\"\nassert solution(\n\"E869120's and square1001's 16-th birthday is coming soon.\\n\" +\n\"E869120's and square1001 were just about to eat A and B of those pieces, respectively,\\n\" +\n\"when they found a note attached to the cake saying that \\\"the same person should not take two adjacent pieces of cake\\\".\\n\" +\n\"Can both of them obey the instruction in the note and take desired numbers of pieces of cake?\\n\" +\n\"Yay!\\n\") == \"Yay!\"\n\n\"\"\""
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5 4\n\"\"\") == \"Yay!\"\n\nassert solution(\n\"\"\"\n5 4\n\"\"\") == \"Yay!\"\n\nassert solution(\n\"\"\"\n5 5\n\"\"\") == \"Yay!\"\n\nassert solution(\n\"\"\"\n1 1\n\"\"\") == \"Yay!\"\n\nassert solution(\n\"\"\"\n10 11\n\"\"\") == \"Yay!\""
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'Yay!'\n\"\"\"\n\nA, B = [int(x) for x in input().split()]\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"123456789\") == \"34\"\nassert solution(\"1234567899\") == \"23\"\nassert solution(\"1234567899\") == \"23\"\nassert solution(\"123456789\") == \"23\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456789') == '34'\nassert solution('12345678910') == '34'\nassert solution('1234567891011') == '34'\nassert solution('1234567891010') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('12') == ''\nassert solution('1') == ''\nassert solution('123') == ''\nassert solution('12345') == ''\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('123456789') == '34'\nassert solution('987654321') == '0'\nassert solution('12345678') == '34'\nassert solution('912345678') == '45'\nassert solution('123456789') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1234567876\") == \"34\"\n\"\"\""
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456789') == '34'\nassert solution('1234567876') == '34'\nassert solution('123456789') == '34'\nassert solution('1234567876') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456789') == '34'\nassert solution('1234567890') == '34'\nassert solution('12345678901') == '34'\nassert solution('1234567890123') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1234567876) == '34'\nassert solution(1234567891) == '34'\nassert solution(1234567787) == '34'\nassert solution(12345677899) == '34'\nassert solution(1234567789) == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"36\"\nassert solution(\"5678901234567890123456789012345678901234567890\") == \"11\"\nassert solution(\"1234567890\") == \"0\"\nassert solution(\"1234567890\") == \"0\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"83776723\") == \"4\"\nassert solution(\"4 5 1 3 4\") == \"2\"\nassert solution(\"5 5 5 5\") == \"0\"\nassert solution(\"7 0 0 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '5 3'\nassert solution('''2''') == '1 7'\nassert solution('''7''') == '12 13'\nassert solution('''13 52 0 13 26 52''') == '12 13'\nassert solution('''6''') == '1 7'\n\n\n\n'''\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n') == '1 7'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '2 3'\nassert solution('7\\n2\\n9\\n4\\n6\\n4\\n2') == '2999999987 2'\nassert solution('7\\n2\\n1000000000 4 6 8 4 2\\n') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''11\n100000000 9 10009 10991 1 0 9 0 9 0 9 9 0 9 9 9 0''') == '100 100'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 12 6\n''') == '5 3'\nassert solution('''\n2\n2 9\n''') == '1 7'\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n''') == '12 13'\nassert solution('''\n6\n13 52 0 13 26 52\n''') == '12 13'\n\n\n\"\"\""
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '2999999987 2'\nassert solution('''8\n2 5 7 0 0 4 0 0''') == '0 0'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '3'\nassert solution('''3 12 6''') == '5 3'\nassert solution('''2''') == '1 7'\nassert solution('''2 9''') == '1 7'\nassert solution('''7''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''100000\n0 1000000000 4 6 8 4 2''') == '0 7'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n13 52 0 13 26 52') == '2999999987 2'\n\nassert solution('2\\n2 9') == '1 7'\n\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '12 13'\n\n\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 1 4 1''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''5\n1 1 1 2 2''') == '2'\nassert solution('''2\n1 1 1''') == '1'\nassert solution('''3\n1 1 1''') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1 4 1''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''3\n1 1 1 1''') == '1'\nassert solution('''3\n1 1 1 1 2 2''') == '3'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n2\\n2\\n\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"2\\n1\\n1\\n\") == \"2\"\nassert solution(\"1\\n2\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1\\n') == '1'\nassert solution('2 3\\n') == '1'\nassert solution('1 1 1\\n') == '3'\nassert solution('3 3\\n') == '2'\nassert solution('3 3\\n') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n2\\n2\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2') == '3'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '3'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n3 1 4 1''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''5\n1 1 1 2 2''') == '2'\nassert solution('''1\n1 1 1''') == '1'\nassert solution('''8\n1 1 1 2 2 3 3 3 1''') == '5'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3 1 4 1\\n') == 3\nassert solution('2\\n1 1 1\\n') == 1\nassert solution('5\\n1 1 1 2 2\\n') == 2\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''4 4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\nassert solution('''2 4\n1 2\n1 3\n2 3\n1 4\n2 5\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4 2\n1 2\n2 3\n'''\n    ) == '2'\n\nassert solution(\n'''\n2 0\n'''\n    ) == '1'\n\nassert solution(\n'''\n3 2\n1 3\n2 3\n'''\n    ) == '2'\n\nassert solution(\n'''\n4 1\n1 2\n2 3\n3 4\n4 5\n'''\n    ) == '1'\n\nassert solution(\n'''\n5 3\n1 2\n2 3\n3 4\n4 5\n5 4\n'''\n    ) == '3'"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''\n2 0\n''') == '1'\n\nassert solution('''\n3 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''\n10 3\n1 2\n3 4\n4 5\n7 8\n7 6\n9 10\n9 8\n1 9\n4 8\n9 10\n4 8\n1 9\n''') == '2'\n\nassert solution('''\n10 4\n1 2\n3 4\n4 5\n7 8\n7 6\n9 10\n9 8\n1 9\n4 8\n9 10\n4 8\n1 9\n''') == '4'"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 2\\n2 3') == '2'\nassert solution('2 0\\n1 3\\n2 3') == '1'\nassert solution('3 2\\n1 3\\n2 3') == '2'\nassert solution('3 2\\n1 3\\n2 3\\n4 3\\n5 3\\n6 3') == '1'\nassert solution('2 0\\n1 3\\n2 3') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('2 0\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\nassert solution('3 2\\n1 3\\n2 3\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 3') == '1'\nassert solution('0 0') == '1'\nassert solution('2 2') == '1'\nassert solution('1 2\\n2 3') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''2 0\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''2 3\n1 2\n2 3\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n''') == '1'"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 2\n1 2\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"2 0\n\"\"\") == \"1\"\nassert solution(\"\"\"3 2\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"2 4\n1 2\n2 3\n2 4\n1 3\n3 4\n\"\"\") == \"1\"\nassert solution(\"\"\"3 2\n1 3\n2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n') == '2'\nassert solution('3 2\\n1 3\\n2 3') == '2'\nassert solution('2 0\\n') == '1'\nassert solution('2 1\\n1 2\\n2 3\\n') == '3'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200') == '17'\nassert solution('2\\n1 1\\n2 1') == '1'\nassert solution('3\\n1 1 1\\n2 1 2\\n2 1 1') == '2'\nassert solution('4\\n1 2 1 2\\n2 1 3 1\\n3 1 2 1') == '2'\nassert solution('4\\n1 2 1 2\\n2 1 3 1\\n3 1 2 1\\n1 2 1 3') == '1'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 2') == 2\nassert solution('1 2\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n7 5') == 4\nassert solution('2 1\\n1 2') == 2\nassert solution('1 2\\n1 2\\n2 3\\n3 4\\n3 5\\n7 5') == 4\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4') == 4\n\n\n\"\"\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5'''\n) == '11'\n\nassert solution(\n'''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4'''\n) == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == '11'\n\nassert solution(\n'''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == '4'\n\nassert solution(\n'''5 4\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n1 4''') == '5'\n\nassert solution(\n'''5 4\n1 2 3 4 5\n1 2\n1 3\n2 3\n3 4\n3 5''') == '5'\n\nassert solution(\n'''5 4\n1 2 3 4 5\n1 2\n2 3\n3 4\n1 4''') == '5'"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '4'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"\nassert solution(\"3 4\\n2 1 2\\n1 2\\n2 3\\n1 4\\n2 4\\n1 3\\n1 4\") == \"3\"\nassert solution(\"2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n1 3\\n1 4\") == \"11\"\nassert solution(\"5 2\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\") == \"4\"\nassert solution(\"3 3\\n2 1 2\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 6\\n2 7\\n2 8\\n3 7\\n3 8\\n4 7\\n4 8\") == \"5\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == 11\nassert solution(\"4 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == 4\nassert solution(\"4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == 5\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == 5\nassert solution(\"7 5\\n7 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == 7\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5'\nassert solution('2 3 4 5 6 7 8 9') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13'\nassert solution('2 3 4 5 6 7 8 9') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13'\n\n\n\"\"\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n'''\nassert solution(\n'''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''\n\nimport sys\nassert sys.getsizeof(solution(sys.stdin.read())) < 1000000\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn, m = [int(x) for x in stdin.readline().split()]\ndormitories = [int(x) for x in stdin.readline().split()]\nrooms = [int(x) for x in stdin.readline().split()]\nfor i in range(m):\n    d, r = [int(x) for x in stdin.readline().split()]\n    f = i + 1\n    k = dormitories[i]\n    if r == 0:\n        print(f, k)\n    else:\n        r = r - 1\n        while r >= 0 and rooms[r] >= rooms[r + 1]:\n            r -= 1\n        print(f, r + 1)\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\n\nassert solution('''2 3\n5 10000000000\n5 6 9999999999''') == '''1 5\n2 1\n2 9999999994'''\n\nassert solution('''3 3\n5 100000000000\n5 6 99999999999\n5 100000000000''') == '''1 5\n2 1\n3 1\n2 9999999994'''\n'''\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n5 100000000000\\n5 6 9999999999') == '1 1\\n1 9\\n2 2'\n\"\"\""
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n4 5 6') == '1 5'\nassert solution('1 2 3\\n4 3 5 6') == '1 1'\nassert solution('1 2 3\\n1 1 4 5 6') == '1 2'\nassert solution('1 2 3\\n2 1 4 5 6') == '2 3'\nassert solution('1 2 3\\n2 2 4 5 6') == '2 1'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\nassert solution('1 3\\n1 3 2\\n2 1') == '1 3\\n1 1\\n2 2'\n\"\"\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"\"\"1 1\n1 9\n2 2\n2 13\n3 1\n3 12\"\"\"\n\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"\"\"1 5\n2 1\n2 9999999994\"\"\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n1\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\n1\\n2\\n1\\n3\\n2\\n4\\n5\\"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n5 10000000000\\n5 6 9999999999\\n') == '1 5\\n2 1\\n2 9999999994'\nassert solution('1 3\\n5 10000000000\\n5 6 9999999999\\n') == '1 5\\n2 1\\n2 9999999994'\nassert solution('2 2\\n5 100000000\\n5 4 2\\n') == '1 1\\n1 2\\n1 4\\n2 1\\n2 2\\n2 4'\nassert solution('1 1\\n5 100000000\\n5 4 2\\n') == '1 1\\n1 2\\n1 4\\n2 1\\n2 2\\n2 4'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999\\n') == '1 5\\n2 1\\n2 9999999994'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6 5 4''') == '''2 1 3'''\nassert solution('''40 40 40 60''') == '''20 20 20'''\nassert solution('''201 101 101 200''') == '''1 100 100'''\nassert solution('''201 101 101 200''') == '''1 100 100'''\nassert solution('''42 42 42 59''') == '''1 42 42'''\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nprint(solution(stdin))\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('100 101 101 200') == '1 100 100'\nassert solution('100 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('3 4 3 6') == '2 1 3'\nassert solution('4 4 4 4') == '2 1 3'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"3 6 5 4\"\"\"\n    ) == '2 1 3', '3 6 5 4'\nassert solution(\n\"\"\"40 40 40 60\"\"\"\n    ) == '20 20 20', '40 40 40 60'\nassert solution(\n\"\"\"201 101 101 200\"\"\"\n    ) == '1 100 100', '201 101 101 200'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n\n\n\"\"\"\n\nfrom collections import defaultdict\nfrom itertools import accumulate"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\nRBGRRBRGG''') == '2\\nRBGRGBRGR'\nassert solution('''8\nBBBGBRRR''') == '2\\nBRBGBRGR'\nassert solution('''13\nBBRRRRGGGGGRR''') == '6\\nBGRBRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9\\nRBGRRBRGG\\n') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR\\n') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR\\n') == '6\\nBGRBRBGBGBGRG'\nprint(solution(input()))\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\nRBGRRBRGG\n''') == '2'\nassert solution('''8\nBBBGBRRR\n''') == '2'\nassert solution('''13\nBBRRRRGGGGGRR\n''') == '6'\nassert solution('''14\nRBBBBRBBBBRRRRBGRGGRRBGRBBGRBBGBRGRRBGBRBGRBGBBGBRBGRRBBGRRRBGBGRBGBBGBGRBGBBBBGBGRBGBBBBBGBBGBBBGBBGBBBBBBBBGBBBBBBGBBBBBBGBBBBGBBGBBBBGBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBBGBBGBBBBGBBBBGBBBBBGBBBBGBBBBGBBBBBBGBBBBGBBBBGBBBBGBBBBBGBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBBGBBBB"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\nRBGRRBRGG''') == '''2\nRBGRGBRGR'''\n\nassert solution('''8\nBBBGBRRR''') == '''2\nBRBGBRGR'''\n\nassert solution('''13\nBBRRRRGGGGGRR''') == '''6\nBGRBRBGBGBGRG'''\n\nassert solution('''14\nBBRRRRGGGGGRRGGGGG''') == '''9\nBGBGRBGBGBGRGGRG'''\n\nassert solution('''13\nBBRRRRGGGGGRRGGGGG''') == '''9\nBGBGRBGBGBGRGGRG'''\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\nRBGRRBRGG''') == '''2\nRBGRGBRGR'''\nassert solution('''8\nBBBGBRRR''') == '''2\nBRBGBRGR'''\nassert solution('''13\nBBRRRRGGGGGRR''') == '''6\nBGRBRBGBGBGRG'''\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\".join(solution(line) for line in open(\"input.txt\"))) == \"\".join(open(\"expected.txt\").readlines())\n\n\n---\nn = int(input())\ns = input()\nr = 0\n\nfor i in range(n):\n    if s[i]!= s[i+1]:\n        r += 1\nprint(r)"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9\\nRBGRRBRGG\\n') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR\\n') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR\\n') == '6\\nBGRBRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\nRGRBGR\n''') == '2'\nassert solution('''1\nR\n''') == '1'\nassert solution('''3\nRBRRR\n''') == '3'\nassert solution('''3\nGGRBBR\n''') == '4'\nassert solution('''3\nBGRGRR\n''') == '3'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'\nassert solution('15\\nBBRRRRGGGGGRRRRRBBBBGBGBGBRRRR') == '6\\nBRRBRBGBGBGRGBGBBBBGBBGBBGBB'\nassert solution('31\\n
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7''') == '4'\nassert solution('''6''') == '1'\nassert solution('''4''') == '1'\nassert solution('''10''') == '1'\nassert solution('''9''') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n3 3 4 7 5 6 8\"\"\") == \"4\\n2 3 5 6\\n\"\nassert solution(\"\"\"7\n3 3 4 7 5 6 8\"\"\") == \"4\\n2 3 5 6\\n\"\nassert solution(\"\"\"4\n10 9 8 7\"\"\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"\"\"9\n6 7 8 3 4 5 9 10 11\"\"\") == \"6\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n\""
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n0') == '2\\n0'\nassert solution('1\\n3') == '1\\n2'\nassert solution('1\\n5') == '1\\n4'\nassert solution('1\\n2') == '2\\n1'\nassert solution('1\\n4') == '1\\n3'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n2') == '2'\nassert solution('4\\n3') == '2'\nassert solution('5\\n4') == '2'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"3 3 4 7 5 6 8\") == \"4\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10 9 8 7\") == \"1\"\nassert solution(\"9\") == \"1\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"input/tes4t1\") == \"4\\n1 2 3 5 6\"\nassert solution(\"input/test2\") == \"4\\n1 2 3 5 6\"\nassert solution(\"input/test3\") == \"4\\n1 2 3 5\"\nassert solution(\"input/test4\") == \"2\\n1 4\"\nassert solution(\"input/test5\") == \"1\\n1\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 3 4 7 5 6 8\\n') == '4\\n2 3 5 6'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'\nassert solution('4\\n10 9 8 7\\n') == '1\\n1'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'\n\n\n\"\"\""
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('3 3') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('3 5') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 3') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('3 2') == 'No'\nassert solution('2 2') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"3 1\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"2 4\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('2 2') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('3 3') == 'Yes'\nassert solution('3 1') == 'No'\n\"\"\"\nimport sys"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('3 1') == 'No'\nassert solution('4 1') == 'Yes'\nassert solution('5 1') == 'No'\nassert solution('6 1') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"5 7\") == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('3 3') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"3 4\") == \"Yes\"\n\nassert solution(\"5 2\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('81 58') == '110'\n\nprint(solution(stdin))\n\n## Solution\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5') == '12'\nassert solution('10 17') == '20'\nassert solution('1 1') == '1'\nassert solution('100 1') == '100'\nassert solution('1 100') == '100'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"41 50\") == \"110\"\nassert solution(\"40 22\") == \"89\"\nassert solution(\"42 30\") == \"113\"\nassert solution(\"43 19\") == \"107\"\nassert solution(\"41 22\") == \"109\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('81 58') == '110'\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('81 58') == '110'\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(1)"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('81 58') == '110'\n\"\"\""
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('81 58') == \"110\"\n\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('81 58') == '110'\nassert solution('18 99') == '1276'\nassert solution('100 100') == '2500'\nassert solution('37 100') == '625'\nassert solution('100 100') == '2500'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '110'\n'''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('10') == ''\nassert solution('11') == '111'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"8\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '8'\nassert solution('6') == '64'\nassert solution('9') == '296'\nassert solution('10') == '1110'\nassert solution('11') == '1100'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '27'\nassert solution('1') == '9'\nassert solution('5') == '54'\nassert solution('2') == '8'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('2') == '8'\nassert solution('3') == '60'\nassert solution('4') == '280'\nassert solution('5') == '560'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"54\"\nassert solution(\"4\") == \"336\"\nassert solution(\"5\") == \"1512\"\nassert solution(\"6\") == \"24630\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '8'"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '8'\n'''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('0 1') == '1'\nassert solution('0 11') == '11'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n') == 'YES'\nassert solution('5\\n') == 'NO'\nassert solution('4\\n') == 'YES'\nassert solution('4\\n') == 'NO'\nassert solution('5\\n') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == 'YES'\nassert solution(input(\"5\")) == 'YES'\nassert solution(input(\"1\")) == 'NO'\nassert solution(input(\"9\")) == 'YES'\nassert solution(input(\"3\")) == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '5'\n) == 'YES'\nassert solution(\n    '6'\n) == 'NO'\nassert solution(\n    '7'\n) == 'YES'\nassert solution(\n    '8'\n) == 'YES'\nassert solution(\n    '9'\n) == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"8\") == \"NO\"\nassert solution(\"9\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"8\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == \"YES\"\nassert solution('2') == \"NO\"\nassert solution('3') == \"YES\"\nassert solution('4') == \"YES\"\nassert solution('5') == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('5\\n') == 'YES'\nassert solution('5\\n5\\n5\\n5\\n5\\n') == 'NO'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n') == 'YES'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('999') == 'ABC'\nassert solution('123') == 'ABC'\nassert solution('13') == 'AB'\nassert solution('1234') == 'ABCD'\nassert solution('1234') == 'ABCD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"999\") == \"ABC999\"\nassert solution(\"999\") == \"ABC999\"\nassert solution(\"1000\") == \"ABD000\"\nassert solution(\"997\") == \"ABD998\"\nassert solution(\"998\") == \"ABD999\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('999') == 'ABC'\nassert solution('2001') == 'ABD'\nassert solution('1001') == 'ABD'\nassert solution('1101') == 'ABD'\nassert solution('1111') == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcdef\") == \"ABCD\"\nassert solution(\"abcdefgh\") == \"ABCDEF\"\nassert solution(\"abcdefghi\") == \"ABCDEFGH\"\nassert solution(\"abcdefghi j\") == \"ABCDEFGHIJ\"\nassert solution(\"abcdefghi j k\") == \"ABCDEFGHIJK\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"999\") == \"ABC\"\nassert solution(\"1998\") == \"ABD\"\nassert solution(\"1998\") == \"ABD\"\nassert solution(\"1\") == \"ABC\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'ab'\nassert solution('abcdef') == 'abc'\nassert solution('abcdefgh') == 'abc'\nassert solution('abcdefghijkl') == 'abc'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'ABC'\nassert solution('1') == 'ABD'\nassert solution('999') == 'ABC999'\nassert solution('8') == 'ABD'\nassert solution('9') == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"999\") == \"ABC999\"\nassert solution(\"1234\") == \"ABCD\"\nassert solution(\"2345\") == \"ABDE\"\nassert solution(\"3999\") == \"ABC999\"\nassert solution(\"1999\") == \"ABD999\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input()) == 'ABC'\nassert solution(input()) == 'ABC'\nassert solution(input()) == 'ABC'\nassert solution(input()) == 'ABD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1000') == 'ABD'\nassert solution('1001') == 'ABCD'\nassert solution('1998') == 'ABD'\n\nassert solution('1') == 'ABC'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n17\") == \"Nay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n23\") == \"Nay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n47\") == \"Nay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n50\") == \"Nay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n0\\n15\\n') == 'Nay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n5\\n15\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n10\\n15\\n') == 'Nay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n10\\n15\\n') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n13\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n11\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n11\\n13\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n11\\n13\\n15\\n') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n13') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n11') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n17') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n19') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Yay!', \"Example\"\nassert solution(stdin) == 'Yay!', \"Example 1\"\nassert solution(stdin) == 'Yay!', \"Example 2\"\nassert solution(stdin) == 'Yay!', \"Example 3\"\nassert solution(stdin) == 'Yay!', \"Example 4\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('3\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('3\\n4\\n8\\n9\\n16') == 'Yay!'\nassert solution('3\\n4\\n8\\n9\\n16') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''1\n2\n4\n8\n9\n15\n''') == 'Yay!'\n\nassert solution(\n'''1\n2\n4\n8\n9\n15\n''') == 'Yay!'\n\nassert solution(\n'''1\n2\n4\n8\n9\n15\n''') == 'Yay!'\n\nassert solution(\n'''1\n2\n4\n8\n9\n15\n''') == 'Yay!'\n\nassert solution(\n'''1\n2\n4\n8\n9\n15\n''') == 'Yay!'"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n19\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '1\\n2\\n4\\n8\\n9\\n15\\n'\n) == 'Yay!'\nassert solution(\n    '1\\n2\\n4\\n8\\n9\\n7\\n'\n) == 'Yay!'\n\n'''\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"pink\") == \"pink\"\nassert solution(\"p\") == \"red\"\nassert solution(\"12345\") == \"red\"\nassert solution(\"456\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\nred') =='red'\nassert solution('2\\nred') =='red'\nassert solution('3\\nred') =='red'\nassert solution('4\\nred') =='red'\nassert solution('5\\nred') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3200, \"pink\") == \"pink\"\nassert solution(3200, \"red\") == \"red\"\nassert solution(200, \"green\") == \"green\"\nassert solution(0, \"black\") == \"black\"\nassert solution(3001, \"red\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('asdf') == 'asdf'\nassert solution('1') =='red'\nassert solution('2') =='red'\nassert solution('3') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('1') == ''\nassert solution('abc') == ''\nassert solution('abcdef') == ''\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3200') == 'pink'\nassert solution('1020') =='red'\nassert solution('500') =='red'\nassert solution('100') =='red'\nassert solution('3200') == 'pink'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3200\npink''') == 'pink'\nassert solution('''10000\nred''') =='red'\nassert solution('''3200\npink''') == 'pink'\nassert solution('''5\na\nb\nc\nd\ne''') == 'a'\nassert solution('''5\npink''') == 'pink'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == ''\nassert solution('pink') == 'pink'\nassert solution('fjtjqjrtjft') =='red'\nassert solution('fjtjqjrtjftu') =='red'\nassert solution('a') == ''\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a\\ns') == 'pink'\nassert solution('1000\\nkorak') =='red'\nassert solution('1\\nred\\n1') =='red'\nassert solution('8\\nkorak') == 'korak'\nassert solution('8\\nkorak\\n8') == 'korak'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('1199') == 'ABC'\nassert solution('124') == 'AGC'\nassert solution('2108') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ARC\"\n\n\"\"\""
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"AGC\"\nassert solution(\"AGC\") == \"AGC\"\nassert solution(\"ABC\") == \"ARC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1299\") == \"ARC\"\nassert solution(\"1899\") == \"AGC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"2409\") == \"ARC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('12000') == 'ARC'\nassert solution('30000') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1199''') == 'ABC'\nassert solution('''1009''') == 'ARC'\nassert solution('''3299''') == 'AGC'\nassert solution('''2899''') == 'ARC'\nassert solution('''9999''') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('1199') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('1199') == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"ARC\"\n'''"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(119) == \"991\"\nassert solution(999) == \"999\"\nassert solution(1111) == \"1111\"\nassert solution(1234) == \"1234\"\nassert solution(999) == \"999\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('119') == '991'\nassert solution('1896') == '1125'\nassert solution('6309') == '6499'\nassert solution('9111') == '8899'\nassert solution('79') == '77'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(123456789) == \"9991\"\nassert solution(11112113) == \"1119\"\nassert solution(11100001) == \"111\"\nassert solution(119) == \"991\"\nassert solution(123) == \"999\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10101\") == \"11001\"\nassert solution(\"119\") == \"991\"\nassert solution(\"9000\") == \"991\"\nassert solution(\"9123\") == \"9123\"\nassert solution(\"1111\") == \"1111\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('119') == '991'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('119') == '991'\n\n\"\"\""
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(119) == \"991\"\nassert solution(111) == \"1\"\nassert solution(999) == \"9999\"\nassert solution(999) == \"9999\"\nassert solution(112) == \"11\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('111') == '999'\nassert solution('119') == '991'\nassert solution('12') == '12'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"119\"\n) == \"991\"\nassert solution(\n    \"1111\"\n) == \"1\"\nassert solution(\n    \"99\"\n) == \"999\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"111\") == \"9\"\nassert solution(\"111\") == \"9\"\nassert solution(\"111\") == \"9\"\nassert solution(\"111\") == \"9\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ac') == 'ac'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('aa') == 'aa'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ac\") == \"ac\"\nassert solution(\"abbaac\") == \"abac\"\nassert solution(\"bccddaaf\") == \"bcdaf\"\nassert solution(\"zzzzzzzzzz\") == \"zzzzzz\"\nassert solution(\"cc\") == \"cc\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bcdaf\"\nassert solution(\"zzzzzzzzzz\") == \"zzzzzzzzzz\"\nassert solution(\"zzzzzzzzzzz\") == \"zzzzzzzzzzz\"\n\"\"\""
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"bccddaaf\"\n'''\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abbccc\") == \"abbccc\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''abbaac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\nassert solution('''abac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\nassert solution('''abbaac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\nassert solution('''abbaac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\nassert solution('''abbaac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == answer\n\n\"\"\""
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"abac\"\n\n\"\"\"\n\n\"\"\"\nNote:\n\nIn Python 2, we use a range() function to produce an iterator from 0 to n-1.\nIn Python 3, we use a list() function to produce a list from 0 to n-1.\n\"\"\""
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['4',\n    'abbaac',\n    'ac',\n    'bccddaaf',\n    'zzzzzzzzzz',])) == ['abac',\n    'ac',\n    'bcdaf',\n    'zzzzzz']\n'''\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a\\n10\\n4\\n13\\n9\\n100\\n13\\n123\\n456\\n92\\n46') == '2\\n5\\n4\\n333\\n0'\nassert solution('a\\n100\\n4\\n13\\n9\\n100\\n13\\n123\\n456\\n92\\n46') == '2\\n5\\n4\\n333\\n0'\nassert solution('a\\n100\\n4\\n13\\n9\\n100\\n13\\n123\\n456\\n92\\n46') == '2\\n5\\n4\\n333\\n0'\nassert solution('a\\n1000\\n4\\n13\\n9\\n100\\n13\\n123\\n456\\n92\\n46') == '5\\n4\\n333\\n0'\nassert solution('a\\n1000\\n4\\n13\\n9\\n100\\n13\\n123\\n456\\n92\\n46') == '5\\n4\\n333\\n0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 3') == '1'\nassert solution('2 3') == '3'\nassert solution('4 7') == '4'\nassert solution('100 46') == '4'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '0\\n'\nassert solution('1\\n2\\n') == '2\\n'\nassert solution('1\\n2\\n') == '2\\n'\nassert solution('1\\n2\\n') == '2\\n'\nassert solution('1\\n2\\n') == '2\\n'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('10\\n1') == '1'\nassert solution('100\\n1') == '10'\nassert solution('123\\n456') == '333'\nassert solution('123\\n46') == '0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n3') == '1'\nassert solution('2\\n5') == '1'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '2\\n5\\n4\\n333\\n0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5') == '2\\n0\\n4\\n333\\n'\nassert solution('2\\n10') == '0\\n1\\n5\\n10\\n'\nassert solution('10\\n10') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n15') == '4\\n6\\n0\\n10\\n0\\n'\nassert solution('1\\n4') == '0\\n1\\n0\\n'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '5'\nassert solution('2\\n3\\n') == '3'\nassert solution('2\\n4\\n') == '0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\"\"\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 3\n3 4 1 2\n\"\"\") == \"2.666666666666667\"\nassert solution(\n\"\"\"\n3 2\n2 2 1\n\"\"\") == \"1.0\"\nassert solution(\n\"\"\"\n2 2\n1 1\n\"\"\") == \"1.0\"\nassert solution(\n\"\"\"\n3 3\n5 3 3\n\"\"\") == \"1.0\"\nassert solution(\n\"\"\"\n1 1\n1 1\n\"\"\") == \"0.0\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\"\"\""
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\n'''\n\n'''\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n3 4 1 2\\n') == '2.666666666666667'\n\n'''\n\nn, k = map(int, stdin.split())\na = list(map(int, stdin.split()))\nres = 0\nfor i in range(n):\n    s = 0\n    for j in range(i, n):\n        s += a[j]\n    s /= (n - i)\n    if s > res:\n        res = s\nprint('{:.6f}'.format(res))\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2.666666666666667'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2.666666666666667'\n'''\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\n'''\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 3\n3 4 1 2''') == \"2.666666666666667\"\nassert solution(\n'''4 3\n-3 -4 -1 -2''') == \"0.0\"\nassert solution(\n'''4 4\n-1 -2 1 2''') == \"1.0\"\nassert solution(\n'''4 5\n-1 -2 1 2 3 4''') == \"1.5\"\nassert solution(\n'''4 6\n-1 -2 1 2 3 4 5 6''') == \"1.75\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5''') == 'YES'\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n3 2\n1 4\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n4 1\n1 2\n1 3\n1 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 1\n1 3\n1 4\n1 5\n1 2\n3 2\n3 4\n3 5\n3 1\n4 2\n4 3\n4 5\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\n'''"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2 1\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"\"\"\nYES\nNO\nYES\nYES\nNO\nYES\nNO\n\"\"\"\nassert solution(\"\"\"\n4 2\n1 2\n1 3\n1 4\n2 1\n2 3\n2 4\n3 1\n3 2\n3 4\n4 1\n4 2\n\"\"\") == \"\"\"\nYES\n\"\"\""
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('test') == 'YES'\nassert solution('test') == 'NO'\nprint(solution(''))\nprint(solution(''))\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n2\\n') == 'NO'\nassert solution('1\\n1\\n1\\n') == 'NO'\nassert solution('4\\n4\\n') == 'NO'\nassert solution('2\\n3\\n') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 2\n2 1 2\n1 3\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3''') == \"YES\"\nassert solution('''5 2\n1 2\n1 4\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3''') == \"YES\"\nassert solution('''2 1\n4 2\n1 2''') == \"NO\"\nassert solution('''5 2\n5 3\n4 2\n2 1 2 3 4 5\n2\n4 2\n2 1 4 3\n1 3''') == \"NO\"\nassert solution('''4 2\n4 3\n1 2\n1 3\n4 2\n4 1 2 3\n3 2\n4 2\n3 2 1\n1 3\n4 2\n4 3 2 1\n1 3''') == \"YES\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\nGOAL                                   : [1, 2, 3, 4, 5]\nINPUT                                     : \nOUTPUT                                      : \n\nassert solution(stdin) == stdout\n\nTEST                                        :\n\nInput                                          :\n6                                             :\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\nOutput                                          :\nYES\nNO\nYES\nYES\nNO\nYES\nYES\n\"\"\"\n\n\"\"\"\nCODE                                           :"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nassert solution('0') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"1234567890\") == \"1234567890\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0\n''') == ''\nassert solution('''1\na\n''') == 'a'\nassert solution('''2\naa\n''') == 'aa'\nassert solution('''3\naaa\n''') == 'aaa'\nassert solution('''4\naaaa\n''') == 'aaaa'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"\n\nassert solution(stdin)\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('bab') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('baabbb') == 'bab'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('o') == 'o'\nassert solution('ab') == 'ba'\nassert solution('baa') == 'baabbb'\nassert solution('baaaab') == 'baababa'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[1]\nprint(solution(stdin))\nassert solution(stdin) == stdin[1]\nprint(solution(stdin))\nassert solution(stdin) == stdin[1]\nprint(solution(stdin))\nassert solution(stdin) == stdin[1]\nprint(solution(stdin))\nassert solution(stdin) == stdin[1]\nprint(solution(stdin))\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\nbaabbb''') == 'bab'\nassert solution('''10\nooopppssss''') == 'oops'\nassert solution('''1\nz''') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bab') == 'bab'\nassert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nassert solution('ooopppssss') == 'oops'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '1'\nassert solution('2 3 2') == '1'\nassert solution('2 4 5') == '1'\nassert solution('1 4 2') == '0'\nassert solution('6 3 3') == '0'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"\"\n'''\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"0\"\nassert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '0'\nassert solution('5 3\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '1'\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '2'\n\n'''\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n1 4 2\\n1 5 3\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '1'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n1 2 1') == '2'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer_one\n\n'''"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n'''\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nfrom heapq import heappop, heappush\nfrom copy import deepcopy"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0\\n') == '0'\nassert solution('2 1\\n') == '1'\nassert solution('3 4\\n') == '1'\nassert solution('4 3\\n') == '0'\nassert solution('5 6\\n') == '2'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0'\n\n\n\n>>> import os\n>>> import time\n>>> from functools import partial\n>>> from io import StringIO\n>>> import unittest"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BRB') == '1'\nassert solution('RGBGRBB') == '3'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"GB\") == \"GB\"\nassert solution(\"GBGRB\") == \"GRB\"\nassert solution(\"BRBB\") == \"BRB\"\nassert solution(\"RRRGR\") == \"GR\"\nassert solution(\"RGBGB\") == \"GR\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\nBRB''') == '1'\nassert solution('''7\nRGBGRBB''') == '3'\nassert solution('''2\nR\nG''') == '1'\nassert solution('''4\nRRRRGG\nBB''') == '2'\nassert solution('''7\nRGRRBGB\nRRBBGGG''') == '3'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"RGB\") == \"RGB\"\nassert solution(\"R\") == \"R\"\nassert solution(\"RBRRB\") == \"RB\"\nassert solution(\"RGBRGB\") == \"RGB\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('BRB') == 1\nassert solution('RGBGRBB') == 3\nassert solution('RBGBRB') == 1\nassert solution('BGBGRBG') == 2\nassert solution('BGGRGB') == 1\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == None\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3\nRGBRGBRG\n\"\"\") == \"\"\"1\nGRB\"\"\"\n\nassert solution(\n\"\"\"7\nRGGBRBGB\n\"\"\") == \"\"\"3\nRGBRGBR\"\"\"\n\nassert solution(\n\"\"\"1\nR\n\"\"\") == \"\"\"1\nR\"\"\"\n\nassert solution(\n\"\"\"8\nBRBGGRGBRBGRGBRB\n\"\"\") == \"\"\"3\nBGBGRB\"\"\"\n\nassert solution(\n\"\"\"9\nGBBGBBGGBBGBBGGBBGBBGB\n\"\"\") == \"\"\"6\nBGBGBBG\"\"\""
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"GBRB\") == stdin\nassert solution(\"BRBG\") == stdin\nassert solution(\"GBRBGRBR\") == stdin\nassert solution(\"RRBB\") == stdin\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"input/solution.txt\", \"r\").read()) == open(\"output/solution.txt\", \"r\").read()\n\"\"\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n2.6369750 BTC\\n1.9967723 JPY') == '1409952.0'\n\"\"\""
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''2\n10000 JPY\n0.10000000 BTC\n'''\n) == '48000.0'\n\nassert solution(\n    '''2\n-10000 JPY\n10000 BTC\n'''\n) == '-48000.0'\n\nassert solution(\n    '''3\n100000000 JPY\n999.9999999 BTC\n0.0010000000 BTC\n'''\n) == '100000000.0'\n\nassert solution(\n    '''3\n100000000 JPY\n999.9999999 BTC\n0.0010000000 BTC\n-100000000 BTC\n'''\n) == '100000000.0'\n\nassert solution(\n    '''4\n1000000000 JPY\n999.99999999 BTC\n0.0000001 BTC\n-1000000000 BTC\n'''\n) == '100000000.0'"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('1000 JPY\\n0.10000000 BTC') == '49000.0'\nassert solution('100000000 JPY\\n0.10000000 BTC') == '499999.999999999'\nassert solution('1000000 JPY\\n0.10000000 BTC') == '490000.0'\nassert solution('1000000 JPY\\n0.1000000 BTC') == '490000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n2\n10000 JPY\n0.10000000 BTC\n\n'''\n    ) == '48000.0'\nassert solution(\n'''\n2\n10000 JPY\n0.10000000 BTC\n\n'''\n    ) == '48000.0'\n\nassert solution(\n'''\n2\n0.10000000 BTC\n10000 JPY\n\n'''\n    ) == '48000.0'\nassert solution(\n'''\n2\n10000 JPY\n0.00000001 BTC\n\n'''\n    ) == '48000.0'\n\nassert solution(\n'''\n2\n30000000 JPY\n0.80000000 BTC\n\n'''\n    ) == '484350.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''3\n1.5 BTC\n2.0 BTC\n4.5 BTC''') == '67000.0'\nassert solution('''2\n4.5 BTC\n1.0 BTC\n3.5 BTC''') == '21600.0'\nassert solution('''2\n3.0 BTC\n2.0 BTC\n4.0 BTC''') == '18000.0'\nassert solution('''2\n3.0 BTC\n3.0 BTC\n1.0 BTC''') == '0.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2\n10000 JPY\n0.10000000 BTC\n\"\"\"\n) == '48000.0'\n\nassert solution(\n\"\"\"\n5\n1000000 JPY\n0.000001 BTC\n4000000 JPY\n0.40000000 BTC\n10000000 JPY\n\"\"\"\n) == '14987566.15'\n\nassert solution(\n\"\"\"\n10\n0.01100000 BTC\n1000000 JPY\n10000000 BTC\n100000000 JPY\n99999999 JPY\n10000001 BTC\n1000004 JPY\n1000010 BTC\n1000012 JPY\n1000016 JPY\n1000020 BTC\n\"\"\"\n) == '12235400.717'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''5\n8000000000 JPY\n1.0 BTC\n90000000.1 BTC\n10000 JPY\n0.10000000 BTC''') == '9600000.0'\nassert solution('''5\n8000000000 JPY\n1.0 BTC\n90000000.1 BTC\n10000 JPY\n0.10000000 BTC''') == '9600000.0'\nassert solution('''5\n8000000000 JPY\n1.0 BTC\n90000000.1 BTC\n10000 JPY\n0.10000000 BTC''') == '9600000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n1.00000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n1.00000000 BTC\\n10.00000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n1.00000000 BTC\\n10.00000000 BTC\\n20.00000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n1.00000000 BTC\\n10.00000000 BTC\\n20.00000000 BTC\\n30.00000000 BTC') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n2\\n0.0000001\\n1\\n1.00000000001\\n0.1\\n1\\n1.1\\n1.0\\n1.0\\n0.0\\n1\\n0.5') == '48000.0'\n\"\"\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('1000000 JPY\\n0.10000000 BTC') == '480000.0'\nassert solution('1000000 JPY\\n0.1000000 BTC') == '480000.0'\nassert solution('0.10000000 BTC\\n0.10000000 BTC') == '9.999999999E-5'\nassert solution('0.10000000 BTC\\n0.10000000 JPY') == '0.0000000001'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2''') == '3'\nassert solution('''4 1''') == '4'\nassert solution('''1 2''') == '1'\nassert solution('''4 5''') == '4'\nassert solution('''99 1''') == '99'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n') == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"6 3\") == \"5\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"5\"\nassert solution(\"5 6\") == \"4\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == 3\nassert solution('3 1') == 2\nassert solution('5 1') == 0\nassert solution('1 1') == 0\nassert solution('2 1') == 1\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[2]\nprint(solution(stdin))\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == \"3\"\nassert solution('2 3') == \"1\"\nassert solution('1 2') == \"3\"\nassert solution('4 3') == \"2\"\nassert solution('3 2') == \"1\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == 3\nassert solution(\"2 4\") == 1\nassert solution(\"2 3\") == 1\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2''') == '3'\nassert solution('''5 5''') == '2'\nassert solution('''3 6''') == '4'\nassert solution('''1 100''') == '99'\nassert solution('''1 1''') == '0'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2') == '3'\nassert solution('10 4') == '9'\nassert solution('10 10') == '10'\nassert solution('10 50') == '49'\nassert solution('100 5') == '99'\n\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ip cc') == 'icpc'\nassert solution('ipcc') == 'ipcc'\nassert solution('ipcc') == 'ipcc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ip1 cc') == 'ic1p'\nassert solution('ip1') == 'ip1'\nassert solution('123') == '123'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ip cc') == 'icpc'\n\n\"\"\""
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"ip c c\") == \"icpc\"\nassert solution(\"ip cc\") == \"icpc\""
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ip cc') == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[2] + stdin[3]\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"cicd\") == \"cccd\"\nassert solution(\"cd\") == \"cd\"\nassert solution(\"c\") == \"c\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ipcc') == 'icpc'\nassert solution('ipccc') == 'icpc'\nassert solution('ipccc') == 'icpc'\nassert solution('ccipccc') == 'icpc'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABABABA') == 'Yes'\nassert solution('ABBA') == 'Yes'\nassert solution('ABC') == 'No'\nassert solution('ABCBA') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(ABA) == \"Yes\"\nassert solution(AAB) == \"No\"\nassert solution(ABB) == \"No\"\nassert solution(ABB) == \"No\"\nassert solution(ABB) == \"No\"\n\"\"\""
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('BABA') == 'No'\nassert solution('ABB') == 'Yes'\nassert solution('BAA') == 'No'\nassert solution('AB') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('ABABA') == 'Yes'\nassert solution('BABA') == 'Yes'\nassert solution('BA') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABAB\") == \"Yes\"\nassert solution(\"AAAB\") == \"No\"\nassert solution(\"ABBA\") == \"Yes\"\nassert solution(\"BABA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"AB\") == \"Yes\"\nassert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\n\"\"\"\n\nfrom typing import Dict"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABABABA\") == \"Yes\"\nassert solution(\"AAAB\") == \"No\"\nassert solution(\"ABB\") == \"Yes\"\nassert solution(\"A\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('ABC') == 'No'\nassert solution('ABAB') == 'Yes'\nassert solution('BABA') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABC\") == \"No\"\nassert solution(\"ABC\") == \"Yes\"\nassert solution(\"BAA\") == \"No\"\nassert solution(\"BAA\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\n'''\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RRS') == 2\nassert solution('RRR') == 1\nassert solution('RRSR') == 2\nassert solution('RSRSR') == 2\nassert solution('RRRSR') == 3\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RRR') == 2\nassert solution('RRRSS') == 2\nassert solution('RRRSRS') == 4\nassert solution('RRSRSRSRRSRSRSRRSRSRSRSRS') == 4\nassert solution('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR') == 2\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\nassert solution(\"R\") == 0\nassert solution(\"S\") == 0\nassert solution(\"RS\") == 0\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('RRR') == '0'\nassert solution('RRS') == '1'\nassert solution('RSS') == '1'\nassert solution('RRSR') == '2'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\nassert solution('RRRR') == '0'\nassert solution('RRRRS') == '3'\nassert solution('RSRRS') == '2'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('RRS') == 2\nassert solution('RSRRSRSRSRSRSRSRSRSRSRSRSRS') == 11\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    'R') == 0\nassert solution(\n    'RRR') == 1\nassert solution(\n    'RRR') == 1\nassert solution(\n    'RRS') == 2\nassert solution(\n    'RRRS') == 3\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('R') == 2\nassert solution('RRS') == 2\nassert solution('RRSRS') == 2\nassert solution('RRRRS') == 3\nassert solution('RRRRRRSR') == 4\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('RRS') == '2'\nassert solution('RRR') == '3'\nassert solution('RRSRR') == '4'\nassert solution('RRRSRRS') == '3'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\nassert solution(\"RRRRS\") == 4\nassert solution(\"RRSRS\") == 3\nassert solution(\"RRSRSRS\") == 4\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 1 3\") == \"2 1 3\"\nassert solution(\"2 1 3\") == \"2 1 3\"\nassert solution(\"3 1 2\") == \"2 1 3\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 2 2\") == \"2 1 1\"\nassert solution(\"1 1 1\") == \"1 1 1\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('2 2 3') == '3 2 1'\nassert solution('1 3 3') == '3 1 2'\nassert solution('3 3 1') == '3 2 1'\nassert solution('3 2 1') == '1 3 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 4\") == \"2 1 4\"\nassert solution(\"1 2 3 4\") == \"4 1 3 2\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3 4') == '2 1 3 4'\nassert solution('1 2 3 4 5') == '2 3 1 4 5'\nassert solution('1 2 3 4 5 6') == '2 3 4 1 5 6'\nassert solution('1 2 3 4 5 6 7') == '2 3 4 5 1 6 7'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('2 1 3') == '3 1 2'\nassert solution('2 3 1') == '3 1 2'\nassert solution('3 1 2') == '3 1 2'\nassert solution('3 2 1') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 1 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"0 1 3\") == \"3 1 2\"\nassert solution(\"5 4 1\") == \"1 5 4\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"0 1 3\") == \"3 1 2\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 1 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"3 4 1 2\"\nassert solution(\"1 2 3 4 5\") == \"3 4 1 2 5\"\nassert solution(\"2 1 3 4 5\") == \"3 4 1 5 2\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('30 100') == '100'\nassert solution('60 130') == '170'\nassert solution('50 50') == '50'\nassert solution('50 30') == '50'\n\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '100'\n'''"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('30 100') == '100'\nassert solution('70 40') == '40'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('30 100') == '100'\n\"\"\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('30 100') == '100'\nassert solution('28 30') == '30'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('30 100') == '100'\nassert solution('0 100') == '100'\nassert solution('99 0') == '100'\nassert solution('99 100') == '100'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"100\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"-+++\") == \"0\"\nassert solution(\"++++\") == \"3\"\nassert solution(\"+---\") == \"1\"\nassert solution(\"-++-\") == \"1\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('+-++') == '2'\n\"\"\""
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('-') == -1\nassert solution('++') == 1\nassert solution('+++') == 3\nassert solution('-++-') == -3\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"-+++\") == \"-1\"\nassert solution(\"++-\") == \"1\"\nassert solution(\"-++-\") == \"-2\"\nassert solution(\"++++\") == \"3\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('++') == 1\nassert solution('+-++') == 2\nassert solution('+') == 1\nassert solution('++-') == 0\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"-++\") == \"0\"\nassert solution(\"+-++\") == \"2\"\nassert solution(\"++-\") == \"0\"\nassert solution(\"+-++-++-\") == \"2\"\nassert solution(\"++-++-++\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"++++\") == \"2\"\nassert solution(\"+\") == \"1\"\nassert solution(\"-++\") == \"0\"\nassert solution(\"++-\") == \"0\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('+-++') == '2'\nassert solution('+---+-++-++-++-++-++') == '7'\nassert solution('+-++-++-++-++-++-++-++-++-++-++-++-++') == '-1'\nassert solution
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('+-++') == '2'\nassert solution('+++-') == '3'\nassert solution('++++') == '4'\nassert solution('----') == '-1'\nassert solution('--++') == '-2'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/02/10') == 'Heisei'\nassert solution('2019/03/30') == 'Heisei'\nassert solution('2019/09/30') == 'Heisei'\nassert solution('2019/06/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Heisei\"\nassert solution(input()) == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2020/04/30') == 'TBD'\nassert solution('2019/05/30') == 'Heisei'\nassert solution('2019/06/30') == 'TBD'\nassert solution('2019/07/30') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'Heisei'\nassert solution('2019/04/31') == 'Heisei'\nassert solution('2019/05/29') == 'TBD'\nassert solution('2019/05/30') == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/05/30\") == \"TBD\"\nassert solution(\"2019/06/30\") == \"TBD\"\nassert solution(\"2019/07/30\") == \"TBD\"\nassert solution(\"2019/08/30\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Heisei\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Heisei'\nassert solution(input()) == 'TBD'"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\n\n'''"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Heisei'"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/31') == 'TBD'\nassert solution('2019/05/30') == 'Heisei'\nassert solution('2019/05/31') == 'TBD'\nassert solution('2019/06/30') == 'TBD'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10 1000000000 3 3 6 6\\n') == '9'\nassert solution('10 10 1\\n') == '1'\nassert solution('1337 1337 1337\\n') == '3'\nassert solution('1337 1337 1337\\n') == '3'\nassert solution('1 10 1000000000 3 3 6 6\\n') == '9'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''18''') == '14'\nassert solution('''2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10''') == '9'\nassert solution('''3\n1337 1337 1337''') == '3'\nassert solution('''6 6 6 3 6 1000000000 3 3 6 6''') == '9'\nassert solution('''10''') == '10'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''3\n1337 1337 1337\n''') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"9\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n\"\"\") == \"14\"\nassert solution(\"\"\"10\n6 6 6 3 6 1000000000 3 3 6 6\n\"\"\") == \"9\"\nassert solution(\"\"\"3\n1337 1337 1337\n\"\"\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n2\\n') == '3'\nassert solution('2\\n2\\n1\\n2\\n') == '2'\nassert solution('3\\n6\\n3\\n6\\n') == '2'\nassert solution('3\\n6\\n3\\n6\\n1\\n6\\n') == '2'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\n'''\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3\\n3\\n') == '3'\nassert solution('3\\n3\\n3\\n3\\n') == '3'\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\nassert solution('7 3') == '1'\nassert solution('10 6') == '2'\nassert solution('7 7') == '0'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\nassert solution('1 2 3 2 1 3 2') == '2'\nassert solution('2 3 3 1 1 2 1 2 3 3') == '2'"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2\"\nassert solution(\"6 3\\n2 3 4 2 3 1 3\") == \"2\\n2 3 1\"\nassert solution(\"10 3\\n2 3 4 2 3 1 3 2 3 3\") == \"3\\n1 3 2\"\nassert solution(\"10 9\\n2 3 4 2 3 1 3 2 3 3 4 3 5 3\") == \"3\\n1 3 2\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"2 3 4 5 1\") == \"-1\"\nassert solution(\"2 3 4 5 1\") == \"-1\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''\n\nimport sys"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n1') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '1\\n-1\\n3\\n2\\n'\n'''\n\n'''"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"1\\n-1\\n3\\n2\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\")\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"1\\n-1\\n3\\n2\\n\"\nassert solution(\"5 6\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"1\\n-1\\n3\\n2\\n\"\nassert solution(\"3 3\\n1 1\\n2 2\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"\"\"1\n-1\n3\n2\n2\n\"\"\"\n\nassert solution(\n\"\"\"6 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"\"\"1\n2\n-1\n3\n2\n2\n\"\"\"\n\nassert solution(\n\"\"\"7 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"\"\"1\n2\n2\n2\n2\n2\n2\n\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n'''\n\n'''\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 3\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"4 3\\n1 2 3\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\") == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''4 4\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('5 5\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\"\"\") == \"2+6+6+7=21\"\n\nassert solution(\n\"\"\"3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''8\n1 1 1 1 1 1 1 1\n''') == '2'\nassert solution('''9\n1 1 1 1 1 1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1 1') == None\nassert solution('1 1 1') == None\nassert solution('2 4 6 6 6') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\n\nassert solution('''3\n2 8 10\n''') == '2'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nassert solution('''4\n2 3 2 2\n''') == '2'\n\nassert solution('''4\n1 1 1 1\n''') == '0'"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n''') == '0'\nassert solution('''8\n1 1 1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 0\nassert solution('5') == 2\nassert solution('2 4 6 6 6') == 2\nassert solution('2 8 10') == 2\nassert solution('1 1 1 1') == 0\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 1 2\") == \"1 1 2\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2 8 10\\n') == '2\\n2 2 1\\n2 3 2\\n'\nassert solution('4\\n1 1 1 1\\n') == '0\\n2 3 2\\n2 2 1\\n'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''8\n1 1 1 1 1 1 1 1''') == '2'\nassert solution('''10\n9 2 8 9 8 6 7 8 8 9 9''') == '5'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('5\\n2 4 6 6 6') == '2'\nassert solution('3\\n2 8 10') == '2'\nassert solution('4\\n1 1 1 1') == '2'\nassert solution('7\\n1 1 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 2 3') == ''\nassert solution('1 2 3 4') == ''\nassert solution('1 2 3 4 5') == ''\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0'\nassert solution('10000001 1000000000') == '0'\nassert solution('1111111 1111111') == '0'\nassert solution('0000001 0001001') == '0'\nassert solution('010001') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1,2,3') == '1'\nassert solution('1,0,1,1,0') == '1'\nassert solution('1,0,0,1,0') == '0'\nassert solution('1,0,1,1,0') == '0'\nassert solution('1,0,1,1,0') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input('')) == output('')\n\n'''\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100010') == '1'\nassert solution('00') == '0'\nassert solution('10101') == '2'\nassert solution('001') == '0'\nassert solution('0000') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\n\nassert solution('''6 1\n6 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\n\nassert solution('''6 1\n6 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1\n''') == '1'\n\nassert solution('''6 1\n6 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n\nassert solution('''6 1\n6 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1\n''') == '0'"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"100010\") == \"1\"\nassert solution(\"10010001\") == \"0\"\nassert solution(\"10000010\") == \"0\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\nSince the problem is relatively simple, the easiest way to solve it is to utilize a bitwise approach. \nHere we use XOR to check if two cells are occupied. If the difference of two cells is equal or greater than k, then it is a violation. \nWe also use a lookup table to store the state of each table so we don't have to calculate it every time we want to check the violation.\n\"\"\""
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 1') == '1'\nassert solution('6 2') == '2'\nassert solution('5 1') == '0'\nassert solution('10101') == '1'\nassert solution('000000') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n4 6 7'\n\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 4 5'\n\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\n\nassert solution('''7 1\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n4 6 7'"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n2\") == \"0\"\nassert solution(\"2\\n2\\n2\\n2\") == \"2\"\nassert solution(\"1\\n2\\n2\\n2\") == \"1\"\nassert solution(\"3\\n3\\n3\\n3\\n3\\n3\") == \"0\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3 4\"\nassert solution(\"10 9\") == \"10 9\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"1 3 5 6\"\nassert solution(\"3 1\") == \"1 2\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '1 3 5 6'\nassert solution('''7 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n2 3\n''') == '4 6 7'\nassert solution('''9 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n2 3\n2 3\n2 3\n''') == '8 9'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1\\n1 2\\n1 2\\n2 2') == '1'\nassert solution('1 1\\n1 2\\n1 2\\n2 2') == '1 2'\nassert solution('1 1\\n1 2\\n2 2') == '1 2'\nassert solution('2 2\\n2 3\\n3 3') == '1'\nassert solution('3 2\\n3 2\\n2 3\\n1 3') == '1'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"2 1\\n1 1\") == \"0\"\nassert solution(\"2 2\\n1 1\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"2 2\\n1 1\\n1 1\") == \"0\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution(\n'''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution(\n'''\n7 3\n1 2\n1 1\n1 3\n1 2\n1 3\n1 2\n2 2\n1 3\n2 2\n''') == '2'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n1\n1\n2\n1\n1''') == '5'\n\nassert solution('''1\n2\n1\n2\n1\n1\n1''') == '5'\n\nassert solution('''1\n2\n1\n2\n1\n2\n1''') == '5'\n\nassert solution('''1\n2\n2\n1\n1\n2\n1\n2\n1''') == '5'\n\nassert solution('''1\n2\n2\n1\n1\n1\n1\n1''') == '5'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3 4''') == '1'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3 4''') == '10'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3 4\n1''') == '4'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n10'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\n\nassert solution('''3\n5\n1 2 3 4 5\n3\n1 2 3''') == '8'\n\nassert solution('''3\n5\n1 2 3 4 5\n4\n1 2 3''') == '8'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\n\nassert solution('''5\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\n\nassert solution('''2\n2\n1 2 3 4\n1\n3 4 5 6''') == '7'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\\n') == '30\\n31\\n10\\n'\nassert solution('3\\n5\\n10\\n15\\n20\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n') == '30\\n31\\n10\\n'\nassert solution('4\\n5\\n10\\n15\\n20\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\n\nassert solution('''3\n3\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10\\n'\n\nassert solution('''3\n3\n5 6 15 30\n4\n5 6 15 30\n3\n3 4 6''') == '30\\n31\\n15\\n'\n\nassert solution('''3\n3\n5 6 15 30\n4\n5 6 15 30\n3\n3 4 6''') == '30\\n31\\n15\\n'\n\nassert solution('''3\n3\n5 6 15 30\n4\n5 6 15 30\n3\n3 4 6''') == '30\\n31\\n15\\n'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30 31 10'\nassert solution('''3\n2\n3\n10\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n5 3 1''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n5 3 1''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n5 3 1''') == '31'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 9''') == '31'\nassert solution('''3\n3\n5 6 15 30\n3\n3 4 9''') == '30'\nassert solution('''3\n2\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 9''') == '31'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2'\nassert solution('''2\n5\n1 3 2 4 5\n2\n5 7 3\n1\n42''') == '1'\nassert solution('''6\n4\n4 4 4 4 4 4\n3\n3 1 3 3 3 3\n4\n4 4 4 4 4 4\n1\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n1\n1 1 1 1 1 1''') == '2'\nassert solution('''6\n2\n4 1 2 3 4 5\n1\n1 1 1 1 1 1\n1\n1 1 1 1 1 1\n1\n1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2') == '2\\n1\\n2\\n1'\nassert solution('3\\n6\\n5\\n2 3 4 99 100\\n1') == '2\\n1\\n1'\nassert solution('5\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1') == '1\\n2\\n2\\n1'\nassert solution('4\\n4\\n2 10 1 20\\n2') == '2\\n1\\n2\\n1'\nassert solution('2\\n1\\n2\\n3') == '3'\n\n'''\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\n\nassert solution('''2\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '1'\n\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\n'''\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2\\n1\\n2\\n1'\nassert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '1\\n1\\n2\\n1'\n'''\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '1\\n1\\n1\\n1'\n'''\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '1\\n1\\n2\\n1'\n'''\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2\\n1\\n1\\n1'\n'''\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n3\\n1') == '2'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6') == '2'\nassert solution('3\\n2\\n1') == '2'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2\\n1\\n2\\n1'\n'''\nIn the first query of the example, there are $n=4$ students with the skills $a=[2, 10, 1, 20]$. There is only one restriction here: the $1$-st and the $3$-th students can't be in the same team (because of $|a_1 - a_3|=|2-1|=1$). It is possible to divide them into $2$ teams: for example, students $1$, $2$ and $4$ are in the first team and the student $3$ in the second team.\n\nIn the second query of the example, there are $n=2$ students with the skills $a=[3, 6]$. It is possible to compose just a single team containing both students.\n'''\nassert solution('''1\n1\n42\n''') == '0'\n'''\nIn the first query of the example, there are $n=4$ students with the skills $a=[2, 10, 1, 20]$. There is only one restriction here: the $1$-st and the $3$-th students can't be in the same team (because of $|a_1 - a_3|=|2-1|=1$). It is possible to divide them into $2$ teams: for example, students $1$, $2$ and $4$ are in the first team and the student $3$ in the second team.\n\nIn the second query of the example, there are $n=2$ students with the skills $a=[3, 6]$. It is possible to compose just a single team containing both students.\n'''\nassert solution('''1\n1\n42\n''') == '0'\n'''\nIn the first query of the example, there are $n=4$ students with the skills $a=[2, 10, 1, 20]$. There is only one restriction here: the $1$-st and the $3$-th students can't be in the same team (because of $|a_1 - a_3|=|2-1|=1$). It is possible to divide them into $2$ teams: for example, students $1$, $2$ and $4$ are in the first team and the student $3$ in the second team.\n\nIn the second query of the example, there are $n=2$ students with the skills $a=[3, 6]$. It is possible to compose just a single team containing both students.\n'''\nassert solution('''1\n1\n42\n''') == '0'\nassert solution('''1\n1\n42\n''') == '0'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\n1\\n3\\n6\") == \"2\"\nassert solution(\"3\\n2\\n1\") == \"2\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'NO'\nassert solution('3 3 5 18') == 'YES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n1 2 3\\n4 5 6\") == \"NO\"\nassert solution(\"1\\n1 2 3\\n4 5 6\") == \"NO\"\nassert solution(\"1\\n1 2 3\\n1 1 1\\n2 2 2\\n1 3 3\\n2 4 4\\n1 5 5\\n1 1 1\") == \"YES\"\nassert solution(\"2\\n1 2 3\\n4 5 6\") == \"NO\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\nYES\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES\\nNO\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\nYES\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES\\nNO\\nNO\\nYES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO\\nNO\\nYES\\nYES'\nassert solution('''1\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO\\nNO\\nYES\\nYES'\nassert solution('''1\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''1\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO\\nNO\\nYES\\nYES'\nassert solution('''1\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO\\nNO\\nYES\\nYES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 3 6') == 'NO'\nassert solution('1 2 3 6') == 'YES'\nassert solution('5 2 6 27') == 'NO'\nassert solution('3 3 5 18') == 'YES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('3\\n3\\n3\\n3') == 'NO'\nassert solution('2\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'NO\\nYES\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n4 4 5 6 7') == 'NO\\nNO\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nNO\\nNO\\nYES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'NO\\nYES\\nNO\\nNO'\n\"\"\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6''') == \"YES\"\nassert solution('''1 2 3 4\n1 2 3 6''') == \"NO\"\nassert solution('''5 2 6 27\n3 3 5 18''') == \"NO\"\nassert solution('''3 3 5 18\n1 2 3 4''') == \"NO\"\nassert solution('''5 2 6 4\n1 2 3 5''') == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 3 1 5 3\n''') == \"YES\"\n\nassert solution('''7\n7 2 7 3 3 1 4\n''') == \"NO\"\n\nassert solution('''5\n4 3 1 5 3\n''') == \"YES\"\n\nassert solution('''5\n1 1 2 1 2\n''') == \"NO\"\n\nassert solution('''7\n0 1 2 3 4 5 6\n''') == \"YES\""
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"YES\\n0\\n1\\n0\"\nassert solution(\"1\\n1\\n0\") == \"NO\"\nassert solution(\"1\\n1\\n1\") == \"NO\"\nassert solution(\"3\\n2\\n2\\n2\") == \"YES\\n2\\n2\\n2\\n1\"\nassert solution(\"3\\n2\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n4\\n2\\n2\\n2') == 'NO'\nassert solution('3\\n2\\n2\\n2\\n1\\n2') == 'NO'\nassert solution('3\\n1\\n2\\n2\\n1') == 'YES'\nassert solution('3\\n2\\n2\\n2\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"YES\\n3\\n4 3 2 1\\n\"\nassert solution(\"5\\n4 3 1 5 3\\n\") == \"YES\\n1\\n3 7\\n5\\n7 4 3 2 1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"NO\"\nassert solution(\"6\\n6 5 4 3 2 1\\n\") == \"NO\"\nassert solution(\"4\\n0 1 2 3 4\\n\") == \"YES\\n0\\n1\\n4 3 2 1\\n\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n0 1 2 1 2\n''') == 'NO'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n4\\n4\\n4\\n') == 'YES'\nassert solution('2\\n2\\n2\\n2\\n2\\n') == 'NO'\nassert solution('5\\n5\\n5\\n5\\n5\\n') == 'YES'\nassert solution('5\\n5\\n5\\n5\\n5\\n') == 'NO'\nassert solution('7\\n7\\n7\\n7\\n7\\n') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n0 0 1 2 3 4\n''') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n''') == \"NO\"\nassert solution('''\n7\n7 2 7 3 3 1 4\n''') == \"YES\"\nassert solution('''\n5\n4 3 1 5 3\n''') == \"YES\"\nassert solution('''\n5\n1 1 2 1 2\n''') == \"NO\"\nassert solution('''\n5\n0 1 2 3 4\n''') == \"NO\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n5\\n0\\n2\\n1\\n3') == 'NO'\nassert solution('7\\n7 2 7 3 3 1 4') == 'YES'\nassert solution('5\\n4 3 1 5 3') == 'YES'\nassert solution('5\\n1 1 2 1 2') == 'NO'\nassert solution('5\\n0 1 2 1 2') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0\\n4\\n0\\n0\\n4\\n1\\n4\\n1\") == \"NO\\n\"\nassert solution(\"1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\") == \"YES\\n2\\n0\\n1\\n0\\n1\"\nassert solution(\"5\\n4 3 2 1 0\\n0\\n4\\n1\\n4\\n1\") == \"NO\\n\"\nassert solution(\"5\\n4 3 2 1 0\\n0\\n4\\n1\\n4\\n1\") == \"YES\\n2\\n3 7\\n1\\n4 3 2 1 0\\n0\\n4\\n1\\n4\\n1\"\nassert solution(\"5\\n4 3 2 1 0\\n0\\n4\\n1\\n4\\n1\") == \"NO\\n\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4') == '18'\nassert solution('5 2') == '8'\nassert solution('6 0 0') == '-1'\nassert solution('5 3') == '8'\nassert solution('5 3') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 1 1') == '18'\nassert solution('8 4') == '18'\nassert solution('3 0 0') == '-1'\nassert solution('5 2') == '8'\nassert solution('5 3') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 3 2 2') == '2'\nassert solution('1 2 2 2') == '2'\nassert solution('3 4 4') == '3'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 4') == '18'\nassert solution('5 2') == '8'\nassert solution('3 2') == '-1'\n\n\n\n\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\nbooks = []\nfor i in range(n):\n    t, a, b = map(int, stdin.readline().split())\n    books.append((t, a, b))\n\nbooks.sort()\n\ntime = 0\nfor i in range(n):\n    if i > 0 and books[i][0] == books[i-1][0]:\n        continue\n    if i >= k:\n        break\n    time += books[i][0] * books[i][1]"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\n\n\n\n## My Solution"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\nassert solution('''2 4\n9 9 9\n2 0 1\n4 9 9\n8 0 1\n5 0 1\n6 0 1\n8 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n1 0 1\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == '8'\nassert solution('2 3 4 5 6 7 8 9') == '-1'\nassert solution('1 2 3 4 5 6 7 8 9') == '16'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n2\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n-1'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n7'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n-1'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2\\n6\\n7'\nassert solution('''10\n100 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n2 2\n1 6\n3 5\n5 2 5\n2 2\n1 6\n3 5\n5 2 5\n2 2\n1 6\n3 5\n5 2 5''') == '6\\n7\\n7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '2\\n6\\n-1'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '6\\n-1'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '6\\n-1'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '6\\n-1'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '6\\n-1'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '9\\n15\\n18\\n21\\n24\\n27\\n30\\n33\\n36\\n39\\n42\\n45\\n48\\n51\\n54\\n57\\n60'\n\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1 1\") == \"0\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1 1\") == \"2\"\nassert solution(\"4\\n1 1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer_stdin\nprint('ok')\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8 15 16 23\\n') == '5'\nassert solution('12\\n4 8 4 15 16 8 22 16 23 22 16 22\\n') == '0'\nassert solution('15\\n
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 8 15 16 23\\n\") == \"5\"\nassert solution(\"12\\n\") == \"0\"\nassert solution(\"15\\n\") == \"3\"\nassert solution(\"15 16\\n\") == \"0\"\nassert solution(\"15 16 4 8 15 16 8 16 23 15 16 4 42 23 42\\n\") == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\nassert solution('''18\n4 8 4 4 4 8 4 8 4 15 16 8 16 4 22 23 42 42 42 42 43 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n''') == '0'\nassert solution('''30\n
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(''.join(map(str, range(1, 6)))) == ''.join(map(str, range(1, 6)))\nassert solution(''.join(map(str, range(1, 11)))) == ''.join(map(str, range(1, 11)))\nassert solution(''.join(map(str, range(1, 12)))) == ''.join(map(str, range(1, 12)))\nassert solution(''.join(map(str, range(1, 16)))) == ''.join(map(str, range(1, 16)))\nassert solution(''.join(map(str, range(1, 19)))) == ''.join(map(str, range(1, 19)))\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12') == '0'\nassert solution('5') == '5'\nassert solution('12') == '0'\nassert solution('15') == '3'\nassert solution('12') == '0'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hello,world') == 'helloworld'\nassert solution('l') == 'l'\nassert solution('1,1') == '1'\nassert solution('1,2') == '1'\nassert solution('1,3') == '2'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('', stdin='''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\nassert solution('', stdin='''6\n2 2\n100 12\n8 0\n1 0\n2 0\n0 0\n1 0\n1 0\n2 0\n0 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2 0\n1 0\n1 0\n1 0\n2"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0\\n3\\n2\\n92\\n87654322\\n9150'\nassert solution('''7 4\n1 1\n1 10\n9 100\n10 1000\n100 10000\n1000000 10000000\n10000000 100000000\n100000000 100000000000''') == '1\\n1\\n0\\n906\\n9900990\\n9980198019000'\nassert solution('''9 9\n9 9\n1 1\n1 10\n9 100\n10 1000\n100 10000\n1000000 10000000\n10000000 100000000000\n100000000 100000000''') == '0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''1 1\n1 1\n1 10\n9 100\n10 1000\n100 10000\n1000000 10000000\n10000000 100000000000\n100000000 100000000''') == '0\\n0\\n0\\n0\\n0\\n0\\n0'\n\n\n-----Alternate solutions-----\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '0'\nassert solution('10 1') == '1'\nassert solution('123 456') == '3'\nassert solution('1234 321') == '3'\nassert solution('1234 123456789') == '1'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5 5''') == '0'\nassert solution('''13 42\n18 4''') == '3'\nassert solution('''1337 420\n123456789 1000000000\n100500 9000''') == '2'"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0\\n3\\n2\\n92\\n87654322\\n9150'\n\nassert solution('''\\\n1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('', stdin='''\n    3\n    5 5\n    13 42\n    18 4\n    1337 420\n    123456789 1000000000\n    100500 9000\n''') == '0\\n3\\n2\\n92\\n87654322\\n9150'\n'''\n    return '\\n'.join(str(solution(stdin.split('\\n')[i + 1])) for i in range(int(stdin.split('\\n')[0])))\n\nassert solution('', stdin='''\n    3\n    5 5\n    13 42\n    18 4\n    1337 420\n    123456789 1000000000\n    100500 9000\n''') == '0\\n3\\n2\\n92\\n87654322\\n9150'\n\nassert solution('', stdin='''\n    3\n    5 5\n    18 42\n    1337 420\n    123456789 1000000000\n    100500 9000\n''') == '0\\n3\\n2\\n92\\n87654322\\n9150'\n\nassert solution('', stdin='''\n    3\n    5 5\n    4 4\n    3 3\n    2 2\n    1 1\n    3 3\n    5 5\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '3'\nassert solution('''6\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('3\\n2') == '1'\nassert solution('1\\n1') == '0'\nassert solution('10\\n2') == '3'\nassert solution('1\\n3') == '1'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n') == '0'\nassert solution('2\\n2\\n2\\n') == '0'\nassert solution('10\\n2\\n5\\n') == '2'\nassert solution('10\\n5\\n2\\n') == '0'\nassert solution('10\\n5\\n6\\n') == '6'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    x, y, n = map(int, stdin.readline().strip().split(' '))\n    if y % x == 0:\n        print(n - 1)\n    else:\n        print(n - y % x)\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12') == '0'\nassert solution('1122') == '3'\nassert solution('123456789') == '123456789'\nassert solution('1234567890') == '1234567890'\nassert solution('1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890') == '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'\n\n>>> a = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\n\nassert solution('''8\n8 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n\nassert solution('''9\n9 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '15'\n\nassert solution('''10\n10 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '54306'\n\nassert solution('''11\n11 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '999999995'"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\n\nassert solution('''5\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n\nassert solution('''3\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '15'\n\nassert solution('''4\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '54306'\n\nassert solution('''4\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '999999995'"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339'\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '0'\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '15'\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '54306'\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '999999995'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12339\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"54306\"\nassert solution(input()) == \"999999995\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\n\n\n\"\"\""
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\nassert solution('1 2 2 3 2 4 10') == '6'\nassert solution('1 2 2 3 2 4 6 10') == '8'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport sys\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n7 2\n1 2 2 3 2 4 10\n\"\"\"\n    ) == \"6\"\n\nassert solution(\n\"\"\"\n8 2\n1 2 2 3 2 4 6 10\n\"\"\"\n    ) == \"8\"\n\nassert solution(\n\"\"\"\n7 3\n1 2 2 3 2 4 5\n\"\"\"\n    ) == \"4\"\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc', 1) == 'aBC'\nassert solution('aBC', 1) == 'abc'\nassert solution('abc', 3) == 'aBc'\nassert solution('aBc', 3) == 'abc'\nassert solution('abc', 0) == 'abc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abc\", \"1\", \"2\") == \"aBC\"\nassert solution(\"ABC\", \"1\", \"2\") == \"aBC\"\nassert solution(\"abc\", \"2\", \"1\") == \"aBC\"\nassert solution(\"ABC\", \"2\", \"1\") == \"aBC\"\nassert solution(\"abc\", \"3\", \"1\") == \"aBC\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == 'aBC'\nassert solution('3 2') == 'aC'\nassert solution('4 1') == 'ABc'\nassert solution('4 2') == 'AbC'\nassert solution('5 4') == 'ABcd'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == stdout.rstrip()"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 1\nABC''') == 'aBC'\nassert solution('''3 2\nABc''') == 'aBC'\nassert solution('''1 2\nabc''') == 'aBC'\nassert solution('''3 3\nabc''') == 'abc'\nassert solution('''3 4\nabc''') == 'abc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'aBC'\nassert solution('3 1') == 'abc'\nassert solution('3 5') == 'abc'\nassert solution('3 2') == 'ab'\nassert solution('3 3') == 'aB'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 1\"\"\") == \"\"\"aBC\"\"\"\nassert solution(\"\"\"Aaaaabbccc\"\"\") == \"\"\"aaaaaabbccc\"\"\"\nassert solution(\"\"\"1 2 3 4 5\"\"\") == \"\"\"aAaBbCc\"\"\"\nassert solution(\"\"\"aBb\"\"\") == \"\"\"aBb\"\"\"\nassert solution(\"\"\"\"\"\") == \"\"\"\"\"\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1''') == 'aBC'\nassert solution('''3 2''') == 'aC'\nassert solution('''2 2''') == 'AB'\nassert solution('''3 3''') == 'abc'\nassert solution('''2 2''') == 'AB'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'aBC'\n\n\"\"\""
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 10\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 10\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 10\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3 4 6 1 5 2'\nassert solution('''8\nmoscow 10\nkhabarovsk 30\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nmoscow 30\nkhabarovsk 30''') == '3 4 6 1 5 2 7 8'\nassert solution('''8\nkabarovsk 50\nmoscow 10\nkhabarovsk 30\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nmoscow 30\nkhabarovsk 30''') == '3 4 6 1 5 2 7 8'\nassert solution('''8\nmoscow 10\nkhabarovsk 30\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nmoscow 30\nkhabarovsk 30''') == '3 4 6 1 5 2 7 8'\nassert solution('''8\nkabarovsk 50\nmoscow 10\nkhabarovsk 30\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nmoscow 30\nkhabarovsk 30''') == '3 4 6 1 5 2 7 8'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3,4,6,1,5,2'\nassert solution(\n'''\n2\na b\na b\n''') == '1,2'\nassert solution(\n'''\n4\na b\nb b\na b\nb b\n''') == '1,2,3,4'\nassert solution(\n'''\n3\na b\nb b\na b\n''') == '1,2,3'\nassert solution(\n'''\n1\na\n''') == '1'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkafjord 30\\nmoscow 30') == '3 4 6 1 5 2'\nassert solution('khabarovsk 50\\nmoscow 10\\nkazan 20\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkafjord 30\\nmoscow 30') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkafjord 30\\nmoscow 30') == '3 4 6 1 5 2'\nassert solution('khabarovsk 30\\nmoscow 10\\nkazan 20\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkafjord 30\\nmoscow 30') == '3 4 6 1 5 2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3 4 6 1 5 2'\nassert solution('''\\\n3\nwxyz 1\nmzxz 2\ngqdz 3\n''') == 'wxyz 1'\nassert solution('''\\\n4\nbvhjdfkjn 3\nhwejdgkfn 5\ndgjkgfkhn 5\n''') == 'bvhjdfkjn 5'\nassert solution('''\\\n3\nbbb 3\nbbb 2\nbbb 1\n''') == 'bbb 1'\nassert solution('''\\\n6\na b c d e f\na b c d e f\n''') == 'a b c d e f'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 30\\nmoscow 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '-1'\nassert solution('khabarovsk 30\\nmoscow 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nmoscow 30\\nkhabarovsk 10') == '-1\\n-1\\n-1\\n-1\\n-1\\n-1'\n\"\"\""
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40'''\n) == '3,4,6,1,5,2'\n\nprint(solution('''6\nmoscow 10\nkhabarovsk 20\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40'''))\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('''1\nmoscow 50''') == '1'\nassert solution('''2\nmoscow 60\nkhabarovsk 40''') == '1\\n2'\nassert solution('''4\nmoscow 60\nkhabarovsk 40\nkazan 35\nmoscow 10''') == '1\\n2\\n3\\n4'\nassert solution('''6\nmoscow 10\nkazan 50\nmoscow 60\nkhabarovsk 40\nkazan 35\nmoscow 60''') == '3\\n4\\n6\\n1\\n5\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0') == 'Yes'\nassert solution('2 0') == 'Yes'\nassert solution('1 100') == 'Yes'\nassert solution('2 100') == 'No'\nassert solution('2 0') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"2 901\") == \"No\"\nassert solution(\"3 901\") == \"No\"\nassert solution(\"5 901\") == \"No\"\nassert solution(\"6 901\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 100') == 'No'\nassert solution('1 100') == 'Yes'\nassert solution('2 100') == 'Yes'\nassert solution('3 100') == 'No'\nassert solution('4 100') == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1000') == \"No\"\nassert solution('5 4') == \"Yes\"\nassert solution('5 100') == \"No\"\nassert solution('2 4') == \"Yes\"\nassert solution('2 200') == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 900') == 'Yes'\nassert solution('2 1') == 'Yes'\nassert solution('2 10000') == 'No'\nassert solution('1 2') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 1000') == 'No'\nassert solution('5 0') == 'No'\nassert solution('2 0') == 'No'\nassert solution('1 0') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('2 1') == 'No'\nassert solution('2 1') == 'No'\nassert solution('99999') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"2 901\") == \"No\"\nassert solution(\"2 902\") == \"No\"\nassert solution(\"2 903\") == \"Yes\"\nassert solution(\"2 904\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 900') == 'No'\nassert solution('4 900') == 'Yes'\nassert solution('8 900') == 'No'\nassert solution('0 0') == 'Yes'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"5 100\") == \"0.145833333333\"\nassert solution(\"2 2\") == \"0.10663890409\"\nassert solution(\"5 100\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n1\n\"\"\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('2 1') == '0.5'\nassert solution('1 2') == '0.333333333333'\nassert solution('10 2') == '0.166666666667'\nassert solution('20 3') == '0.125'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '7/48'\n\"\"\"\n\"\"\"\n- Snuke has a fair N-sided die that shows the integers from 1 to N with equal probability and a fair coin. He will play the following game with them:\n - Throw the die. The current score is the result of the die.\n - As long as the score is between 1 and K-1 (inclusive), keep flipping the coin. The score is doubled each time the coin lands heads up, and the score becomes 0 if the coin lands tails up.\n - The game ends when the score becomes 0 or becomes K or above. Snuke wins if the score is K or above, and loses if the score is 0.\nYou are given N and K. Find the probability that Snuke wins the game.\n\nInput:\n3 10\n\nOutput:\n0.145833333333\n\"\"\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('10 10') == '0.145833333333'\nassert solution('10 100') == '0.145833333333'\nassert solution('5 10') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"1 10\") == \"0.0\"\nassert solution(\"2 10\") == \"0.666666666667\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"10 10\") == \"0.0\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == '0.145833333333'\nassert solution(\"2 10\") == '0.145833333333'\nassert solution(\"3 10\") == '0.145833333333'\nassert solution(\"4 10\") == '0.145833333333'\nassert solution(\"5 10\") == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('10 10') == '0.145833333333'\nassert solution('2 10') == '0.145833333333'\nassert solution('4 10') == '0.145833333333'\nassert solution('8 10') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('5 10') == '0.145833333333'\nassert solution('5 100') == '0.0'\nassert solution('1 1') == '0.5'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10') == '0.145833333333'\nassert solution('2 10') == '0.125'\nassert solution('3 10') == '0.0625'\nassert solution('5 100') == '1.0'\nassert solution('5 100000') == '0.145833333333'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '0'\nassert solution('FRI') == '4'\nassert solution('SUN') == '0'\nassert solution('MON') == '1'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '7'\nassert solution('SUN') == '0'\nassert solution('MON') == '31'\nassert solution('TUE') == '31'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '1'\nassert solution('TUE') == '1'\nassert solution('WED') == '1'\nassert solution('THU') == '1'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '2'\nassert solution('THU') == '3'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"SAT\") == \"6\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"SUN\") == \"0\"\nassert solution(\"SAT\") == \"1\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '7'\nassert solution('MON') == '32'\nassert solution('WED') == '5'\nassert solution('THU') == '3'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"SUN\") == \"SAT\"\nassert solution(\"MON\") == \"SUN\"\nassert solution(\"TUE\") == \"SUN\"\nassert solution(\"WED\") == \"SUN\"\nassert solution(\"THU\") == \"SUN\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(solution(\"SAT\")) == \"1\"\nassert solution(solution(\"SUN\")) == \"2\"\nassert solution(solution(\"MON\")) == \"1\"\nassert solution(solution(\"WED\")) == \"2\"\nassert solution(solution(\"TUE\")) == \"0\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 10 20''') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('''1 100 2''') == '2\\n102\\n202\\n302\\n402\\n502\\n702\\n802\\n902'\n'''\n-----\nFor test purposes:\n\nI first read the input:\nr D x_{2000}\n\nThen, I split it:\nr D x_{2000}\n\nI cast it to integers,\nr D x_{2000}\n\nI convert the list into a tuple,\nr D x_{2000}\n\nFinally, I print all values in the list\nr D x_{2000}\n\nI also cast the list into a string to print it.\n\n-----\n'''\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('1 1 2 3') == '2 4 6'\nassert solution('1 1 1 1 1 1') == '0'\nassert solution('2 2 4') == '6'\nassert solution('4 4 4 4') == '10'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n'''\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n'''\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n\nassert solution('2 3 100') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\nassert solution(\"2 10 30\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\nassert solution(\"2 1 2\") == \"2 1 2\"\nassert solution(\"2 0 2\") == \"2 0 2\"\nassert solution(\"2 2 2\") == \"2 2 2\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(''.join(stdin.splitlines())) == '4'\n\nassert solution('1 3 1 1 4'.split()) == '5'\n\nassert solution('1 3 2 1 4'.split()) == '4'\n\nassert solution('4 1 2'.split()) == '0'\n\nassert solution('4 1 2'.split()) == '0'"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '0\\n'\nassert solution('2\\n1\\n1\\n2\\n3') == '2\\n'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '5\\n'\nassert solution('1\\n1\\n1\\n2\\n3\\n4\\n5\\n6') == '0\\n'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '8\\n'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '5'\nassert solution('''1 3 1 1 4''') == '5'\nassert solution('''5''') == '0'\nassert solution('''1 3 2 1 4''') == '4'\nassert solution('''3''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '''5'''\nassert solution('''5''') == '''5'''\nassert solution('''5''') == '''5'''\nassert solution('''3''') == '''0'''\nassert solution('''4''') == '''4'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO'\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3 2 3') == 'YES\\n3 2 1\\n'\nassert solution('1\\n3 2 3\\n100 100 100') == 'NO\\n'\nassert solution('1\\n3 2 3\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'NO\\n1 1 1000000000\\n'\nassert solution('1\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'NO\\n1 1 1000000000\\n'\nassert solution('1\\n3 2 3\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'NO\\n1 1 1000000000\\n'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(''.join(solution.__code__.co_consts[0])) == 'NO\\n'\nassert solution(''.join(solution.__code__.co_consts[1])) == 'YES\\n'\nassert solution(''.join(solution.__code__.co_consts[2])) == 'YES\\n'\nassert solution(''.join(solution.__code__.co_consts[3])) == 'NO\\n'\nassert solution(''.join(solution.__code__.co_consts[4])) == 'YES\\n'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"\"\"YES\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000\n\"\"\"\n\nassert solution('''3\n100 200 300\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"\"\"NO\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000\n\"\"\"\n'''\n\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n'''\n3\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\n3 2 1\\nNO\\n100 100 100\\nNO\\nNO\\nNO\\n1 1 1000000000\\n'\n'''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n3\n1 1 1000000000\n''') == 'YES\\n1 1 1000000000\\n1 1 1000000000\\n3\\nNO\\nNO\\nYES\\n3 2 1\\n'\n'''\n3\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n3\n1 1 1000000000\n'''\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n3\n1 1 1000000000\n''') == 'YES\\n1 1 1000000000\\n1 1 1000000000\\n3\\nNO\\nNO\\nYES\\n3 2 1\\n'\n'''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n3\n1 1 1000000000\n'''\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n3\n1 1 1000000000\n''') == 'YES\\n1 1 1000000000\\n1 1 1000000000\\n3\\nNO\\nNO\\nYES\\n3 2 1\\n'\n'''\n3\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n3\n1 1 1000000000\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'YES\\n1 1 1'\nassert solution('2\\n1\\n1\\n1\\n1') == 'YES\\n1 1 1'\nassert solution('2\\n2\\n1\\n1\\n1') == 'YES\\n2 1 1'\nassert solution('2\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == \\\n'''YES\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000'''\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\n\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"1\"\n\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"5\"\n\nassert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\n\"\"\""
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 1') == '1'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 2 1 4 2') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\nassert solution('5 4 3') == '4'\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 6') == '4'\nassert solution('2 1 4 2') == '1'\nassert solution('5 1 4') == '5'\nassert solution('5 2 3 4 1') == '5'\nassert solution('5 3 3') == '5'\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n4 5 6') == '4'\nassert solution('1 2 3\\n4 5 6\\n1 2 3 1 1') == '1'\nassert solution('1 1 2\\n2 2 2\\n1 1 2 1 1') == '2'\nassert solution('5 3 3\\n1 2 3 1 1\\n2 2 3 2 1\\n1 1 3 1\\n3 3 1\\n1 1 2\\n3 3 2\\n2 2 3\\n1 2 2\\n2 3 1\\n1 1 3\\n1 2 1\\n2 3 2\\n1 1 2\\n2 2 1\\n3 2 2') == '5'\nassert solution('5 1 4\\n4 2 3 4 1\\n1 2 3 1 1') == '4'\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"5 1 4\") == \"4\"\nassert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 2 3\") == \"4\"\nassert solution(\"5 2 1\") == \"4\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5 2 6\n5 2 1 4 2\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"5 1 4\n4 2 3 4 1\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"5 3 3\n1 2 3 1 1\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"6 3 3\n1 2 3 1 1 2\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"6 4 4\n1 2 3 4 5 6 1\n\"\"\") == \"5\""
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2') == '4'\nassert solution('5 1 4\\n4 2 3 4 1') == '1'\nassert solution('5 3 3\\n1 2 3 1 1') == '5'\nassert solution('10 5 4\\n1 2 3 4 5 6 7 8 9 10') == '5'\nassert solution('5 3 3\\n1 2 3 1 1') == '5'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\nabacaba\na b''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\nassert solution('''7 1\naaaaaaa\nb''') == '0'\n\n'''\n    s = stdin.splitlines()[1]\n    k = int(stdin.splitlines()[2].split()[1])\n    c = [x for x in stdin.splitlines()[3].split()]\n    r = 0\n    for i in range(0, len(s)):\n        if s[i] not in c:\n            r += i + 1\n    return str(r)\n\nassert solution('''7 2\nabacaba\na b''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2\\nabacaba\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d\\n') == '21'\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'\nprint(solution('7 1\\naaaaaaa\\nb\\n'))\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 1\\naaaaaaa\\nb') == '0'\nassert solution('3 2\\nabc\\nabc') == '6'\nassert solution('3 1\\naa\\nab') == '5'"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 2\\na b') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d') == '21'\nassert solution('7 1\\naaaaaaa\\nb') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 2\\na b\\na b\\n') == '12'\nassert solution('10 3\\fsdfsdfs\\na b\\n') == '21'\nassert solution('7 1\\naaaaaa\\nb\\n') == '0'\nassert solution('7 1\\naaaaaa\\nb\\na b\\n') == '0'\nassert solution('7 1\\naaaaaa\\nb\\na b\\n') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\nadfafasdfasdf\\na\\nb\") == \"12\"\nassert solution(\"7 3\\na a\\nb b\\nc\") == \"21\"\nassert solution(\"1\\naaaaaa\\naaaaaa\\naaaaaa\\naaaaaa\\naaaaaa\\naaaaaa\\naaaaaa\\naaaaaa\\naaaaaa\") == \"0\"\nassert solution(\"2\\na abacaba\\na b\\nb\") == \"12\"\nassert solution(\"2\\na abacaba\\na b\\nb\") == \"12\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"7 2\nabacaba\na b\"\"\") == \"12\"\nassert solution(\"\"\"10 3\nsadfaasdda\nf a d\"\"\") == \"21\"\nassert solution(\"\"\"7 1\naaaaaaa\nb\"\"\") == \"0\"\nassert solution(\"\"\"4 6\naaaaaaa\nf a d\"\"\") == \"12\"\nassert solution(\"\"\"7 6\naaaaaaa\nf a d\"\"\") == \"0\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 1\\n1 2 3 4 5 6\\n4 1') == '12'\nassert solution('7 1\\n2 2 3 4 5 6\\n4 1') == '12'\nassert solution('7 2\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba\\na b\\nabacaba"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 4') == '12'\nassert solution('7 1') == '0'\nassert solution('10 3') == '21'\nassert solution('7 10') == '40'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 2\\na b\\nabacaba\\na b') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d') == '21'\nassert solution('7 1\\naaaaaaa\\nb') == '0'\nassert solution('7 1\\na b\\nabacaba\\na b') == '0'\nassert solution('7 1\\na b\\nabacaba\\na b') == '0'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n-1\\n6'\n'''\n\n'''\nIt is very simple. A greedy algorithm will help us find the maximum possible alternating subsequence,\nso that the sum of the elements of the result will be as large as possible.\n\nThis approach will give us a result that will fit the condition of the maximum size alternating subsequence.\n\n'''\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\na = [int(x) for x in sys.stdin.readline().strip().split()]\n\ncurrent_best_sum = -float('inf')\ncurrent_best_result = []\nfor i in range(1, n + 1):\n    if a[i - 1] >= 0:\n        current_best_sum = max(current_best_sum, current_best_sum + a[i - 1])\n        current_best_result.append(a[i - 1])\n    else:\n        current_best_sum = max(current_best_sum, current_best_sum - a[i - 1])\n        current_best_result.append(-a[i - 1])\n\nprint(current_best_sum)\nprint(' '.join(str(x) for x in current_best_result))\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abacb\") == \"bac\"\nassert solution(\"abac\") == \"bac\"\nassert solution(\"abacba\") == \"bac\"\nassert solution(\"abacbaaba\") == \"bac\"\nassert solution(\"abc\") == \"c\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '1\\n-1000000000'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 -1 -2') == '2'\nassert solution('4') == '-1'\nassert solution('-1 -2 -1 -3') == '6'\nassert solution('10') == '-2999999997'\nassert solution('-2 8 3 8 -4 -15 5 -2 -3 1') == '6'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('4\\n-1\\n-2\\n-1\\n-3') == '-1'\nassert solution('10\\n-2\\n8\\n3\\n8\\n-4\\n-15\\n5\\n-2\\n-3\\n1') == '6'\nassert solution('6\\n1\\n-1000000000\\n1\\n-1000000000\\n1\\n-1000000000') == '-2999999997'\n\nimport sys\nsys.stdin = open('input.txt', 'r')\nsys.stdout = open('output.txt', 'w')\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(n):\n        ans = max(ans, max(a[i:i+2][::-1]))\n    print(ans)\n\n\"\"\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"\"\"\n3\n8\n1 2 3\n1 2\n2 2\n\"\"\") == \"1\\n1\\n2\"\nassert solution(\"\"\"\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"\"\"\n2\n10\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"\"\"\n2\n10\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\\n-1\\n6\\n-2999999997\"\n\n-----\n\nApproach\n\nTo solve this problem, we are going to use the same algorithm as described in the lectures. We will use prefix sums of the sequence to get a better idea of the global best so far.\n\nLet's introduce a new symbol, $\\langle$ for the prefix sum and another symbol, $\\rangle$ for the suffix sum. We will use the sequence of the form $a_1, a_2, \\dots, a_n$. We also need the global best so far, $g$, and the suffix sum so far, $s$. In the prefix sum array, we also store the sign of the elements of the sequence ($a_i$), i.e., if the element $a_i$ is positive then the sign is $\\texttt{POSITIVE}$, if the element is negative then the sign is $\\texttt{NEGATIVE}$.\n\nThen we write:\n\n$s = \\sum_{i=0}^{n-1} \\langle a_i, a_{i+1} \\rangle$\n\nwhich represents the sum of the prefix and suffix sums.\n\nWe also write:\n\n$g = \\max_{j=0}^{n-1} \\langle s, a_j \\rangle$\n\nwhich represents the maximum of the prefix and suffix sums.\n\nNow, we write:\n\n$\\langle a_i, a_{i+1} \\rangle = \\texttt{POSITIVE} if \\langle a_i, a_{i+1} \\rangle > \\langle s, a_j \\rangle$\n\nand\n\n$\\langle a_i, a_{i+1} \\rangle = \\texttt{NEGATIVE} if \\langle a_i, a_{i+1} \\rangle < \\langle s, a_j \\rangle$\n\nand\n\n$\\langle s, a_j \\rangle = \\texttt{POSITIVE} if \\langle s, a_j \\rangle > \\langle g, a_j \\rangle$\n\nand\n\n$\\langle s, a_j \\rangle = \\texttt{NEGATIVE} if \\langle s, a_j \\rangle < \\langle g, a_j \\rangle$\n\nThen we have:\n\n$s \\texttt{>} g$\n\nand\n\n$s \\texttt{<} g$\n\nWe denote the prefix sum of $a_i$ as $\\langle a_i, a_{i+1} \\rangle$.\n\nThe suffix sum is the same.\n\nFinally, we write $g \\texttt{>} s$\n\nWe also need to find the maximum of the prefix and suffix sums, i.e., the maximum of the suffix sum, $s$, and the prefix sum, $g$.\n\nIf the suffix sum is greater than the prefix sum, then we get the maximum by the suffix sum; otherwise, we get the maximum by the prefix sum.\n\nSo, we write:\n\n$g \\texttt{>} s$\n\nand\n\n$s \\texttt{<} g$\n\nWe have the answer.\n\nThis is a simple problem. We need to implement the solution.\n\nWe can write the solution in O(n) time by using a dictionary to store the suffix and prefix sums of the sequence, and then we will store the max prefix and suffix sums so far.\n\nThen, for each prefix sum, we will store the max prefix and suffix sums so far.\n\nFor the suffix sum, we want to look at each prefix sum, and if it is greater than the prefix sum, we will keep that, otherwise"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '-1'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2999999997'\n\n\n\nIn []:"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 3\") == \"2 1\"\nassert solution(\"3 5\") == \"3 2\"\nassert solution(\"4 3\") == \"4 1\"\nassert solution(\"1 5\") == \"1 2\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\n\n-----\n\nTo pass the hidden test I had to run the following in the command line:\npython3 -m pytest -v --tb=native --pdb tests/pytest_examples/test_011_spanning_tree.py\n\npydevd 2.3.1 (Rev 293693, 2014-09-21 10:18:47.776)\nPython 3.4.3 (v3.4.3:9b73f1c3e601, Feb 24 2015, 16:44:43) \n[GCC 4.2.1 (SUSE Linux)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pytest\n>>> pytest.main(['-v', '--tb=native', '--pdb', 'tests/pytest_examples/test_011_spanning_tree.py'])\n\nTraceback (most recent call last):\n  File \"tests/pytest_examples/test_011_spanning_tree.py\", line 30, in <module>\n    assert solution('3 5\\n2 1\\n3 2\\n3 4\\n') == '3 2\\n2 1\\n3 4\\n'\n  File \"C:\\Users\\Agor\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\pytest\\__init__.py\", line 3159, in wrapper\n    return pyfunc(*args)\n  File \"C:\\Users\\Agor\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\pytest\\core.py\", line 1003, in wrapper\n    return pyfunc(*args)\n  File \"C:\\Users\\Agor\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\pytest\\core.py\", line 2445, in call\n    raise ValueError(msg)\nValueError: number of edges must be odd and bigger than 0: 3\n\n-----\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n5\\n4\\n6\\n8\\n7\\n9\\n10\\n11\\n') == '4 1\\n2 5\\n1 2\\n3 4\\n8 5\\n3 1\\n6 2\\n7 3\\n9 4'\nassert solution('3\\n3\\n1\\n2\\n4\\n4\\n5\\n6\\n7\\n8\\n9\\n9\\n') == '1 2\\n1 3\\n2 3\\n2 4\\n4 1\\n3 5\\n5 6\\n8 7\\n6 1\\n9 2\\n7 3'\nassert solution('6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n') == '6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6'\nassert solution('6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n') == '6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n') == '5 1\\n5 2\\n5 3\\n5 4\\n5 5'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\nassert solution(\"8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\""
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\n\n-----\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution(\n'''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution(\n'''\n8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 6\") == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution(\"5 6\") == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution(\"5 6\") == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution(\"5 6\") == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution(\"5 6\") == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"9\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1''') == ''\nassert solution('''5''') == ''\nassert solution('''499993''') == ''\nassert solution(''''') == ''\nassert solution('''8''') == ''\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n-----\n\nimport sys"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1''') == '0'\nassert solution('''2\n2''') == '1'\nassert solution('''3\n3''') == '2'\nassert solution('''4\n4''') == '3'\nassert solution('''5\n5''') == '4'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n3\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '2'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n1\n5\n499993\n''') == '0'\n\nassert solution(\n'''\n3\n1\n5\n6\n''') == '40'\n\nassert solution(\n'''\n3\n2\n5\n6\n7\n''') == '41664916690999888'\n\nassert solution(\n'''\n3\n1\n4\n6\n7\n''') == '0'\n\nassert solution(\n'''\n5\n1\n5\n6\n7\n8\n9\n10\n''') == '40'"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n5\n499993''') == '0'\nassert solution('''3\n1\n5\n499993''') == '40'\nassert solution('''3\n2\n5\n499993''') == '41664916690999888'\n\n\n\n\n-----"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n1\n5\n499993\"\"\") == '0'\nassert solution(\"\"\"3\n1\n5\n50000000\"\"\") == '40'\nassert solution(\"\"\"3\n1\n5\n500000001\"\"\") == '41664916690999888'\nassert solution(\"\"\"3\n1\n5\n15000000000\"\"\") == '6839844831'\nassert solution(\"\"\"3\n1\n5\n10000000\"\"\") == '149950761'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1''') == '0'\nassert solution('''5''') == '40'\nassert solution('''499993''') == '41664916690999888'\n'''"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n') == '0'\nassert solution('2\\n1\\n1\\n') == '40'\nassert solution('3\\n1\\n1\\n') == '8'\nassert solution('4\\n1\\n1\\n') == '12'\nassert solution('5\\n1\\n1\\n') == '18'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"5 6 6 5 6 6 5 6 6\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"1 1 1 2 -1 1 1 3 1 1\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"1 1 1 2 -1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('1 1') == '2'\nassert solution('2') == '-1'\nassert solution('2 3') == '2 -1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('2 2 4 4') == '2 2 -1 1'\nassert solution('2 2 4 4') == '2 2 -1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''4\n4 5 7 6 7 5 4 4 6 4'''\n    ) == '1 1 1 2 -1 1 1 3 1 1'\n'''assert solution(\n'''10\n1 1 2 3 4 5 6 7 8 9 10'''\n    ) == '1 1 1 1 1 1 1 1 1 1'\n'''assert solution(\n'''8\n1 1 1 1 1 1 1 1 1 1'''\n    ) == '1 1 1 1 1 1 1 1 1'\n'''assert solution(\n'''4\n1 1 1 1'''\n    ) == '1 1 1 1'\n'''assert solution(\n'''2\n1 1'''\n    ) == '-1'\n'''"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\n\n\n-----\n\n## Solution\n\n- `Two Sum`\n\n- Use `2sum` function\n- Move one by one to find the smallest position such that `a[i]` is the same as `a[i - 1]`\n- If such a position is found, return `i - position`\n- Otherwise, return -1\n\n\n## Hint\n\nUse `2sum` function\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == input\n\n\"\"\"\n\n\"\"\"\n\n## Solution 1\n\n\"\"\""
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == \"\"\"NO\nNO\nNO\nYES\nNO\n\"\"\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"test\") == \"NO\"\nassert solution(\"64\") == \"NO\"\nassert solution(\"12345\") == \"NO\"\nassert solution(\"1234567\") == \"NO\"\nassert solution(\"12345678\") == \"NO\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == 'YES'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'NO'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'NO'\nassert solution('''2\n99\n98\n97\n96\n95\n94\n93\n92\n91\n90\n89\n88\n87\n86\n85\n84\n83\n82\n81\n80\n79\n78\n77\n76\n75\n74\n73\n72\n71\n70\n69\n68\n67\n66\n65\n64\n63\n62\n61\n60\n59\n58\n57\n56\n55\n54\n53\n52\n51\n50\n49\n48\n47\n46\n45\n44\n43\n42\n41\n40\n39\n38\n37\n36\n35\n34\n33\n32\n31\n30\n29\n28\n27\n26\n25\n24\n23\n22\n21\n20\n19\n18\n17\n16\n15\n14\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n''') == 'NO'\nassert solution('''2\n1\n''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4\\n8\\n16\\n32\") == \"2 4 8\"\nassert solution(\"2\\n4\\n8\\n16\\n32\\n64\") == \"NO\"\nassert solution(\"2\\n4\\n8\\n16\\n32\\n64\\n128\") == \"2 4 8\"\nassert solution(\"2\\n4\\n8\\n16\\n32\\n64\\n128\\n256\") == \"YES\"\nassert solution(\"2\\n4\\n8\\n16\\n32\\n64\\n128\\n256\\n512\") == \"YES\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('inputs/test_2.txt') == 'NO\\nNO'\nassert solution('inputs/test_3.txt') == 'NO\\nNO'\nassert solution('inputs/test_4.txt') == 'NO\\nNO'\nassert solution('inputs/test_5.txt') == 'NO\\nNO'\nassert solution('inputs/test_6.txt') == 'NO\\nNO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n2') == 'YES\\n2 4 8'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n5') == 'YES\\n5 1'\nassert solution('5\\n5') == 'YES\\n5 5'\nassert solution('10\\n10') == 'YES\\n10 10'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''64\n32\n97\n2\n12345\n''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345\n''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nNO\\n3 5 823'\nassert solution('''3\n9\n4\n7\n2\n1\n''') == 'NO\\nNO\\nYES'\nassert solution('''2\n1\n''') == 'NO\\nNO'\nassert solution('''10\n19\n18\n17\n16\n15\n14\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('bba') == 'abba'\nassert solution('ababab') == ''\nassert solution('aa') == 'ba'\nassert solution('ab') == 'ba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ababab') == 'ababab'\nassert solution('bbbb') == 'abba'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"baaaab\") == \"baaab\"\nassert solution(\"aaaa\") == \"\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"bbaab\") == \"bbaab\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ab') == 'ba'\nassert solution('aba') == 'ba'\nassert solution('abba') == 'ba'\nassert solution('abb') == 'ba'\nassert solution('abc') == 'cba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bbbb') == 2\nassert solution('ababab') == 0\nassert solution('aa') == 1\nassert solution('ba') == 1\nassert solution('aaaa') == 0\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\nimport sys\nfrom math import ceil"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ababab\") == \"abba\"\nassert solution(\"bbbb\") == \"\"\nassert solution(\"ab\") == \"ba\"\nassert solution(\"b\") == \"\"\nassert solution(\"a\") == \"\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '15'\n\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''9\n1 1\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0'\nassert solution('''7\n1 1\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '9'\nassert solution('''15\n1 1\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''4\n1 1\n2 2\n3 3\n4 4\n''') == '0'\nassert solution('''7\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''5\n1 2\n1 1\n1 1\n1 1\n''') == '2'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''5\n1 0\n0 0\n1 0\n0 1\n1 1\n''') == '2'\n'''\n\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n\n\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n'''\n\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n'''\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"3\\n2\") == \"1\"\nassert solution(\"3\\n3\") == \"3\"\nassert solution(\"3\\n4\") == \"2\"\nassert solution(\"3\\n5\") == \"1\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '2'\nassert solution('2\\n3') == '2'\nassert solution('2\\n1') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n'''\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A\\nB\") == \"2\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"3\\n1\") == \"2\"\nassert solution(\"3\\n2\") == \"1\"\nassert solution(\"3\\n3\") == \"3\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"2\"\n\"\"\""
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '3'\nassert solution('3\\n4') == '1'\nassert solution('3\\n5') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('2\\n3') == '2'\nassert solution('2\\n2') == '1'\nassert solution('2\\n1') == '2'\nassert solution('1\\n2') == '1'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Takahashi is solving quizzes. He has easily solved all but the last one. The last quiz has three choices: 1, 2, and 3. With his supernatural power, Takahashi has found out that the choices A and B are both wrong. Print the correct choice for this problem.') == '2'\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('3') == None\nassert solution('1 1') == None\nassert solution('2') == None\nassert solution('3 1') == None\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('2') == '2'\nassert solution('100000') == '100000000'\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10000)\nfrom collections import deque"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('0') == '1.000000000000'\nassert solution('2') == '0.5000000000'\nassert solution('8') == '7.0000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1.5') == '0.7071067811865'\nassert solution('2') == '1.00000000000000'\nassert solution('10') == '5.5'\n\"\"\""
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('0') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('10') == '1.000000000000'\nassert solution('100') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"8\") == \"2.000000000000\"\nassert solution(\"9\") == \"3.000000000000\"\nassert solution(\"7\") == \"2.000000000000\"\nassert solution(\"0\") == \"0.000000000000\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '1.000000000000'\nassert solution('''4''') == '0.5000000000000'\nassert solution('''6''') == '0.433333333333'\nassert solution('''7''') == '0.4375'\nassert solution('''10''') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('11') == '1'\nassert solution('12345') == '12'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"1.000000000000\"\nassert solution(\"2\") == \"1.000000000000\"\nassert solution(\"1\") == \"1.000000000000\"\nassert solution(\"1.5\") == \"0.785398163397\"\nassert solution(\"0.7\") == \"0.785398163397\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('2.5') == '0.673913043478'\nassert solution('1.5') == '0.5'\nassert solution('0.3') == '0'\nassert solution('-2.1') == '-0.9'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('0') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('1.3') == '0.600000000000'\nassert solution('1.8') == '0.600000000000'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"4\"\nassert solution(\"A\") == \"Hello World\"\nassert solution(\"B\") == \"4\"\nassert solution(\"1\\n\") == \"Hello World\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == \"Hello World\"\nassert solution('2') == \"2+1=3\"\nassert solution('2') == \"2+1=3\"\nassert solution('3') == \"3+3=6\"\nassert solution('1') == \"Hello World\""
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1''') == 'Hello World'\nassert solution('''2\n1\n2''') == '3'\nassert solution('''1\n2\n3\n4\n5\n6''') == '21'\nassert solution('''2\n2\n3\n4\n5\n6''') == '31'\nassert solution('''2\n3\n3\n3\n3\n3\n3''') == '54'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '3'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1''') == 'Hello World'\nassert solution('''2''') == '2'\nassert solution('''1\n2\n3\n4''') == '5'\nassert solution('''1\n2\n1\n2''') == 'Hello World'\n'''\n    You can test your code on the following websites:\n    1. http://www.codeeval.com/open_challenges/64/\n    2. http://www.codeeval.com/open_challenges/64/\n    3. http://www.codeeval.com/open_challenges/64/\n'''\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'A+B'\nassert solution('1') == 'Hello World'\nassert solution('2') == 'A+B'\nassert solution('1') == 'Hello World'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Hello World\") == \"Hello World\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"Hello World\"\nassert solution(\"3\") == \"Hello World\"\nassert solution(\"4\") == \"Hello World\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == 'Hello World'\nassert solution('2\\n1\\n2\\n') == '3'\nassert solution('1\\n1\\n1\\n') == '4'\nassert solution('2\\n3\\n4\\n') == '7'\nassert solution('2\\n1\\n3\\n') == '4'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '8'\nassert solution('1\\n2') == 'Hello World'\nassert solution('2\\n1') == '8'\nassert solution('3\\n2\\n1') == '6'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3333\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '313'\nassert solution('5 6') == '56'\nassert solution('1 9') == '99'\nassert solution('2 2') == '222'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"333\"\nassert solution(\"1 4\") == \"4444\"\nassert solution(\"3 4\") == \"3333\"\nassert solution(\"9 0\") == \"9999\"\nassert solution(\"1 1\") == \"11\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == '3333'\nassert solution('3 4') == '4444'\nassert solution('9 9') == '9999'\nassert solution('99 1') == '991'\nassert solution('9 7') == '7777'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3333'\nassert solution('1 1') == '11'\nassert solution('1 10') == '1010'\nassert solution('10 1') == '1010'\nassert solution('1 11') == '1110'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3') == '3333'\nassert solution('5 4') == '4444'\nassert solution('5 2') == '22'\nassert solution('5 2') == '22'\nassert solution('1 2') == '12'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3333\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3333\"\n\"\"\""
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3333'\nassert solution('4 4') == '3333'\nassert solution('4 4') == '3333'\nassert solution('4 4') == '3333'\nassert solution('4 4') == '3333'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'b'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('x') == 'y'\nassert solution('xz') == 'ab'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'b'\nassert solution('c') == 'd'\nassert solution('z') == None\nassert solution('x') == None\nassert solution('v') == None\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"b\""
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\nassert solution('f') == 'g'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'b'\nassert solution('C') == 'a'\nassert solution('D') == 'A'\nassert solution('E') == 'B'\nassert solution('F') == 'C'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'b'\nassert solution('c') == 'd'\nassert solution('b') == 'c'\nassert solution('g') == 'h'\nassert solution('h') == 'i'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'b'\nassert solution('c') == 'd'\nassert solution('z') == 'a'\nassert solution('c2') == 'd1'\nassert solution('aa') == 'b'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"z\") == None\nassert solution(\"o\") == \"p\"\nassert solution(\"i\") == \"j\"\nassert solution(\"u\") == \"v\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''oder atc''') == 'atcoder'\nassert solution('''woa a tp''') == 'atcoder'\nassert solution('''woa a tp''') == 'atcoder'\nassert solution('''woa a tp''') == 'atcoder'\nassert solution('''woa a tp''') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('csat') == 'csat'\nassert solution('csat csag') == 'csat csag'\nassert solution('csat csag cs') == 'csat csag cs'\nassert solution('csat csag cs csa') == 'csat csag cs csa'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('oder', 'atc') == 'atcoder'\nassert solution('eceba', 'eceba') == 'ecee'\nassert solution('abcd', 'efgh') == 'efghabcd'\nassert solution('aaaa', 'bbbb') == 'abababab'\nassert solution('aaaa', 'bbb') == 'aaabbbaa'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('oder atc', 'atcoder') == 'atcoder'\n\nprint(\"Correct!\")"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('oder atc', 'atcoder') == 'atcoder'\nassert solution('abc', 'def') == 'abcdef'\nassert solution('pqr', 'xyz') == 'pqrxyz'\nprint('Testcases passed')\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('atcoder') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('oder', 'atc') == 'atcoder'\nassert solution('o','a') == 'oa'\nassert solution('f','r') == 'fr'\nassert solution('a','b') == 'ba'\nassert solution('o','a') == 'oa'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '0'\nassert solution('''2\n1000000 1000000''') == '1000000'\nprint(solution('''8\n100000000 9 9090909092 90909090909 90909090909 90909090909 90909090909'''))\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '1000000'\nassert solution('2\\n1000000 1000000') == '1000000'\nassert solution('2\\n1000000 1000000000') == '1000000'\nassert solution('5\\n1 5 7 8 2') == '0'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 5 7 8') == '0'\nassert solution('4\\n5 1 2 4') == '0'\nassert solution('6\\n1 2 3 4 5 6') == '1000000'\nassert solution('3\\n7 4 3') == '0'\nassert solution('2\\n1 1000000') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '0'\nassert solution('''2\n1000000 1000000''') == '1000000'\nprint(solution('''6\n5 1 2 4 6 3'''))\n\nassert solution('''3\n1 1 2\n''') == '3'\nassert solution('''1\n2\n''') == '2'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('3\\n1') == '0'\nassert solution('4\\n1') == '0'\nassert solution('5\\n1') == '0'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '0'\nassert solution('5 5 5') == '5'\nassert solution('6') == '0'\nassert solution('100') == '99999'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == ''\nassert solution('''5''') == ''\nassert solution('''1 2 3 4 5 6''') == '6'\nassert solution('''1000000 1000000''') == '1000000'\nassert solution('''1000000 1000000''') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\\n\"\nassert solution(\"1\\n5\\n\") == \"0\\n\"\nassert solution(\"1\\n2\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n\") == \"0\\n\"\nassert solution(\"1\\n2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2 3 3\\n7 10 50 12 1 8') == '5'\nassert solution('1 1 100 99\\n100') == '1'\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6') == '6'\nassert solution('1 1\\n1') == '1'\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2 3 3\n7 10 50 12 1 8''') == '5'\nassert solution('''1 1 100 99\n100''') == '1'\nassert solution('''7 4 2 1\n1 3 5 4 2 7 6''') == '6'\nassert solution('''7 4 2 1\n1 3 5 4 2 7 6''') == '6'\nassert solution('''7 4 2 1\n1 3 5 4 2 7 6''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"6 2 3 3\n7 10 50 12 1 8\"\"\") == \"5\"\nassert solution(\n\"\"\"1 1 100 99\n100\"\"\") == \"1\"\nassert solution(\n\"\"\"7 4 2 1\n1 3 5 4 2 7 6\"\"\") == \"6\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 100 99') == '5'\nassert solution('7 4 2 1') == '6'\nassert solution('6 2 3 3') == '5'\nassert solution('7 10 50 12 1 8') == '5'\nassert solution('1 1 100 99') == '5'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 100 99') == '5'\nassert solution('7 4 2 1') == '6'\nassert solution('3 7 3') == '4'\nassert solution('3 7 3') == '4'\nassert solution('1 1 100 99') == '5'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3''') == '''3'''\nassert solution('''6 2''') == '''0'''\nassert solution('''4 2''') == '''0 1 2 3'''\nassert solution('''1000000 1000000''') == '''1'''\nassert solution('''4 2''') == '''0 1 2 3'''\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n'''\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == answer()\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2 0 6 10 12\") == \"3\"\nassert solution(\"4 2\") == \"0 1 2 3\"\nassert solution(\"0 1 2 3\") == \"0 1 2 3\"\nassert solution(\"1 2 3 4 5\") == \"0 1 2 3\"\nassert solution(\"1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"7 4\") == \"3 1 0 7 6\"\nassert solution(\"9 7\") == \"3 1 0 7 6\"\nassert solution(\"10 5\") == \"3 1 0 7 6\"\nassert solution(\"3 3\") == \"3 1 0 7 6\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 0 1 1\") == \"0 3 1 2 1 1\"\nassert solution(\"1 1 1 1 1 1 1\") == \"0 0 0 0 0 0\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n2\\n3\\n1') == '1'\nassert solution('1\\n3\\n2\\n3\\n2') == '8'\nassert solution('1\\n3\\n2\\n3\\n1') == '20'\nassert solution('1\\n3\\n2\\n3\\n1') == '20'\nassert solution('2\\n3\\n1\\n2\\n3') == '2'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''3 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\nprint(solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''')) == '64'\nassert solution('''5 7\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n1 4\n''') == '60'\nassert solution('''2 1\n2 3\n''') == '3'\nassert solution('''2 2\n1 2\n''') == '1'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''2 5\n1 2\n1 5\n2 3\n1 4\n''') == '4'\nassert solution('''1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '1'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"2\\n3\") == \"2\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"4\\n2\\n5\") == \"4\"\nassert solution(\"3\\n2\\n3\") == \"1\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n\nassert solution('''6 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n3 4\n''') == '10'\n'''\n    4 5\n    6 3\n    3 3\n    2 3\n    1 2\n    3 1\n'''\nassert solution('''4 3\n1 2\n2 3\n3 4\n3 2\n1 2\n''') == '10'\n\nassert solution('''7 7\n1 2\n1 2\n1 1\n1 2\n2 2\n2 2\n2 3\n2 1\n''') == '4'"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3\\n3 4\\n1 2\\n1 3\\n2 5\\n2 3"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 6\n2 3 1 2 1\n2 3\n4 3\n1 4\n1 2\n1 5\n2 3\n''') == '20'\nassert solution('''5 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n6 4\n6 5\n6 3\n''') == '20'\nassert solution('''5 6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n6 4\n6 5\n6 3\n''') == '20'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n'''"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\"\"\") == \"NO\"\n\nassert solution(\"\"\"1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\"\"\") == \"YES\"\n\nassert solution(\"\"\"1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100000 100000 100000 100000\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1000 1000 1000 1000 1000\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"NO\""
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"\"\"\nYES\nYES\nNO\nYES\nYES\n\"\"\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"NO\"\nassert solution(\"2\\n2\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n2\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n1\\n1\\n1\") == \"YES\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''2\n1\n
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1''') == 'NO'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1''') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''1\n1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''1\n1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''1\n1\n1 1 1 1 1 1 1 1\n1\n100 100 100 100 100 100\n''') == 'NO'\nassert solution('''1\n1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100000 100000 100000 100000\n''') == 'NO'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000000 10000000 10000000 10000000\n''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100000000 100000000 100000000 100000000\n''') == 'NO'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100000 100000 100000 100000 100000\n''') == 'NO'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n7 15 18') == '9'\nassert solution('1\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'\n\nprint('test ok')"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == '3'\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == '9'\n\n\n\"\"\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == \"3\"\nassert solution(\n'''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == \"9\""
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nprint('ok')\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 15 18\") == \"3\"\nassert solution(\"6 10 5\") == \"3\"\nassert solution(\"2 10 2\") == \"3\"\nassert solution(\"6 12 8\") == \"4\"\nassert solution(\"1 2 2\") == \"3\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\"\n\n\"\"\"\nYou are given an integer $n$, the number of vertices in the graph.\n\nYou are given an undirected weighted graph, in which each edge is represented by a pair of integers, $a$ and $b$, denoting an undirected edge between vertices $a$ and $b$ of weight $w$, where $1 \\le a, b \\le n$.\n\nYou are also given an integer $k$ and $k \\le n$. You need to print the $k$-th smallest shortest path in this graph (paths from the vertex to itself are not counted, paths from $i$ to $j$ and from $j$ to $i$ are counted as one).\n\nMore formally, if $d$ is the matrix of shortest paths, where $d_{i, j}$ is the length of the shortest path between vertices $i$ and $j$ ($1 \\le i < j \\le n$), then you need to print the $k$-th element in the sorted array consisting of all $d_{i, j}$, where $1 \\le i < j \\le n$.\n\nYou are also given an array $s$ of size $n$, where $s[i]$ denotes the shortest path length between vertices $i$ and $i + 1$.\n\nYou may assume that $s[n] = -1$, and all vertices will have a shortest path of length $-1$.\n\nIf the graph is not connected, print the $k$-th smallest vertex with the smallest path length.\n\nIf there are multiple vertices with the same path length, print the smallest lexicographically smallest one.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n, m$ \u2014 the number of vertices in the graph and the number of edges.\n\nNext, $m$ lines follow, each representing an edge between two distinct vertices of the graph.\n\nThe next line contains two integers $k$ and $s$ \u2014 the number of vertices in the graph and the array of shortest paths, respectively.\n\n\n-----Output-----\n\nPrint the $k$-th smallest vertex with the smallest path length. If there are multiple vertices with the same path length, print the lexicographically smallest one.\n\nIf there are no vertices with the same path length, print -1.\n\nIf the graph is not connected, print the $k$-th smallest vertex with the smallest path length.\n\nIf there are multiple vertices with the same path length, print the smallest lexicographically smallest one.\n\n\n-----Examples-----\nInput\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n\nOutput\n5\n\nInput\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n\nOutput\n3\n\nInput\n3 4 0\n2 2 -1\n3 2 1\n1 1 1\n\nOutput\n3\n\"\"\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\n\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 10 5''') == '3'\nassert solution('''7 15 18''') == '9'\nassert solution('''2 6 3''') == '3'\nassert solution('''5 7 4''') == '6'\nassert solution('''6 5 4''') == '5'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '3\\n1\\n'\nassert solution('3\\n1\\n2\\n1\\n1') == '4\\n1\\n1\\n1\\n1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n1 1 3 4 2\\n\"\n) == \"3 1\\n1 1 1 1 1\\n\"\n\nassert solution(\n    \"6\\n1 5 12 13 2 15\\n\"\n) == \"7 2\\n2 2 1 1 2 1\\n\"\n\nassert solution(\n    \"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\"\n) == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\\n\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''1 1 3 4 2''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''1 5 12 13 2 15''') == '7 6'\nassert solution('''10''') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''1 1 3 4 2''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''1 5 12 13 2 15''') == '7486 3'\nassert solution('''10''') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 3 4 2') == '3 1'\nassert solution('6\\n1 5 12 13 2 15') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3'\nassert solution('2\\n1 2\\n1') == '2 1'\nassert solution('2\\n1\\n1') == '2 1'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5'''\n) == '3 1'\n\nassert solution(\n'''6'''\n) == '7 2'\n\nassert solution(\n'''10'''\n) == '7486 3'\n\nassert solution(\n'''1 5 12 13 2 15'''\n) == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n5\n1 1 3 4 2\n''') == '3 1'\n\nassert solution(\n    '''\n6\n1 5 12 13 2 15\n''') == '7 2'\n\nassert solution(\n    '''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n\nassert solution(\n    '''\n1\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n\nassert solution(\n    '''\n2\n1 2\n1 2\n''') == '2 2'"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '3 1\\n1 1 1 1 1\\n'\nassert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'\n\n\n-----\n\nTesting:\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n' + '5009\\n' + '7\\n' + '9876\\n' + '10000\\n' + '10\\n') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nassert solution('1\\n') == '1'\nassert solution('5\\n' + '111\\n' + '222\\n' + '333\\n' + '444\\n' + '555\\n') == '5\\n111\\n222\\n333\\n444\\n555'\nassert solution('1\\n') == '1'\nassert solution('5\\n' + '111\\n' + '222\\n' + '333\\n' + '444\\n' + '555\\n') == '5\\n111\\n222\\n333\\n444\\n555'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5009\n7\n9876\n10000\n10\n''') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n'\nassert solution('''9\n2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"5009\\n\") == \"2\"\nassert solution(\"7009\\n\") == \"2\"\nassert solution(\"9876\\n\") == \"2\"\nassert solution(\"10000\\n\") == \"2\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('ab') == None\nassert solution('abc') == None\nassert solution('abcd') == None\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n5\n5009\n7\n9876\n10000\n10\n''') == '2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\n'''\n\n\nassert solution('''\\\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99'\n\n\nassert solution('''\\\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99'\nassert solution('''\\\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99'\nassert solution('''\\\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n1\n1\n1''') == '5'\nassert solution('''1\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n2\n3\n4\n5\n6\n7\n8\n9\n99\n999\n9999\n99999\n99999\n999999\n99999999\n9999999999''') == '8'\nassert solution('''1\n10\n100\n1000\n10000\n100000\n1000000\n10000000\n100000000\n1000000000\n10000000000''') == '7'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '6'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '5'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n4') == '1 1\\n2 1\\n3 2\\n'\nassert solution('2\\n3') == '1 1\\n2 1\\n'\nassert solution('1\\n2') == '1 1\\n2 1\\n'\nassert solution('1\\n1') == '1 1\\n1 1\\n'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5\n5009\n7\n9876\n10000\n10\n'''\n) == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\n\nassert solution(\n'''\n5\n50009\n7\n9876\n10000\n10\n'''\n) == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\n\nassert solution(\n'''\n1\n1\n1\n1\n1\n'''\n) == '1\\n1\\n1\\n1\\n1'\n\nassert solution(\n'''\n2\n1\n1\n2\n2\n'''\n) == '2\\n1\\n2\\n2'\n\nassert solution(\n'''\n2\n2\n2\n2\n2\n'''\n) == '2\\n2\\n2\\n2'"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n5009\\n7\\n9876\\n10000\\n10') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nassert solution('2\\n1\\n') == '1\\n1'\nassert solution('4\\n11\\n22\\n33\\n44') == '3\\n11 22 33 44'\nassert solution('10\\n') == ''\nassert solution('4\\n10\\n22\\n99') == ''\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('5') == '5000 9'\nassert solution('5') == '1'\nassert solution('5') == '7'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n6\\n5\\n3\\n4\\n2') == '1 1 1 1 1'\nassert solution('1\\n6\\n3\\n4\\n5\\n2') == '3 3 3'\nassert solution('1\\n3\\n2\\n4\\n5\\n1') == '1 1 1 1 1'\nassert solution('1\\n3\\n2\\n4\\n5\\n3') == '3 3 3'\nassert solution('1\\n3\\n2\\n4\\n5\\n5') == '2 2 2 2'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\nassert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\nassert solution('''\n2\n5\n1 2 3 4 5\n3\n2 3 1\n5\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nassert solution('''\n7\n5\n1 2 3 4 5 6 7\n3\n2 3 1\n7\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''\n7\n4\n1 2 3 4 5 6 7\n2\n2 3 1\n7\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n5\") == \"1 1 1 1 1\"\nassert solution(\"3\\n3\\n5\\n5\\n5\") == \"3 3 3\"\nassert solution(\"4\\n4\\n5\\n5\\n5\") == \"2 2 2 2 2\"\nassert solution(\"3\\n3\\n1\") == \"1 1 1 1\"\nassert solution(\"4\\n4\\n1\\n1\") == \"4 4 4 1 4\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n4') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\nassert solution('3\\n4') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\nassert solution('2\\n4') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\nassert solution('3\\n4') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\nassert solution('1\\n4') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\"\n\nprint(solution(open(\"input/G3.txt\").read()))\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1'\nassert solution('1\\n2\\n1\\n2\\n1') == '2\\n1\\n2\\n1'\nassert solution('1\\n3\\n1\\n3\\n1') == '1\\n1\\n1\\n1'\nassert solution('1\\n4\\n1\\n4\\n1') == '1\\n1\\n1\\n1'\nassert solution('2\\n3\\n2\\n3\\n2') == '2\\n1\\n2\\n1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\n) == '''1 1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1\n2 2 2 2\n4 4 4 1 4\n'''\n\nassert solution(\n'''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\n) == '''1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1\n2 2 2 2\n4 4 4 1 4\n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n5\\n1 2 3 4 5\\n1\\n1\\n1\\n3\\n4 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4'\nassert solution('1\\n2\\n5\\n1 2 3 4 5\\n1\\n1\\n1\\n3\\n4 4 1 2\\n5\\n5 1 2 4 3\\n1\\n1') == '1 1 1 1 \\n 3 3 3 \\n 2 3 3 2 1 3 \\n 1 \\n 2 2 2 2 \\n 4 4 4 1 4'\n\n\n-------"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1\\n'\n'''\n\n'''"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1 2 2') == '2'\nassert solution('3\\n1 2 2') == '2'\nassert solution('2\\n1 1 1 1') == '1'\nassert solution('2\\n1 1 2') == '2'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n') == '1\\n2\\n3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '5\\n4\\n3\\n2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '1\\n2\\n3'\nassert solution('2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n2') == '2'\nassert solution('1\\n2\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1'\nassert solution('''3\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''4\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '1'\nassert solution('''5\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n3\n1 2 2\n4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1\\n'\nassert solution('''5\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1\\n'\nassert solution('''5\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1\\n'\nassert solution('''1\n1\n1\n''') == '1\\n'\nassert solution('''1\n2\n1\n''') == '2\\n'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25') == '1 2 0 2 1 4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25'\nassert solution('4\\n1 2\\n4 3\\n4 4\\n2 3\\n3 4') == '0 0 1 2'\nassert solution('7\\n5 4 3\\n4 3 1\\n1 2\\n3 4\\n1 2\\n5 4\\n5 2\\n2 3\\n1 4\\n2 1\\n3 4') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('2\\n1 2\\n2 3') == '1 2 0'\nassert solution('3\\n2 1\\n1 2') == '0 1 2'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''\n''') == ''\n'''\n\n'''"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 4\n5 4 1 5 4 3 7 1 2 5''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n10 4 10 15\n1 2\n4 3\n2 1\n10 8\n3 5''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''4 2\n10 4 10 15\n1 2''') == '0 0 1 2'\nassert solution('''4 2\n10 4 10 15\n10 4 10 15\n1 2''') == '1 0 0 1'\nassert solution('''4 2\n10 4 10 15\n1 2\n2 1\n4 3''') == '1 0 0 1'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\n\n\"\"\""
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('3\\n1') == '2'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('3 1\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('2 3\\n1 2\\n4 3\\n') == '2 1'\nassert solution('3 4\\n1 2\\n3 4\\n') == '2 1'\nassert solution('3 5\\n1 2\\n3 4\\n') == '2 1'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4 10 15') == '0 0 1 2'\nassert solution('1 2') == '0'\nassert solution('4 6') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('2 1') == '5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"5 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"5 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"5 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2\\n1 2\") == \"\"\nassert solution(\"2 2\\n1 2\\n1 2\") == \"\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'NO'\n\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 2\n1 2 3\n1 3 2\n\"\"\") == 'YES', \"First Example\"\nassert solution(\"\"\"3 3\n1 2 3\n1 3 2\n\"\"\") == 'NO', \"Second Example\"\nassert solution(\"\"\"3 4\n1 4 3 2\n1 2 3\n\"\"\") == 'NO', \"Third Example\"\nassert solution(\"\"\"3 3\n1 2 3\n2 1 3\n\"\"\") == 'NO', \"Fourth Example\"\nassert solution(\"\"\"3 5\n1 5 4 3 2\n1 2 3\n\"\"\") == 'YES', \"Fifth Example\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\nprint(solution(stdin))\n\nassert solution(stdin) == \"NO\"\nprint(solution(stdin))\n\nassert solution(stdin) == \"NO\"\nprint(solution(stdin))\n\nassert solution(stdin) == \"NO\"\nprint(solution(stdin))\n\nassert solution(stdin) == \"NO\"\nprint(solution(stdin))"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\", \"Should be YES\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\", \"Hello World\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"NO\"\nassert solution(\"3 2\\n1 3 2\\n1 2 3\") == \"YES\"\nassert solution(\"3 2\\n1 3 2\\n1 2 3\") == \"YES\"\n\nassert solution(\"3 2\\n2 1 3\\n1 3 2\") == \"NO\"\nassert solution(\"3 2\\n2 3 1\\n1 3 2\") == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2''') == 'YES\\nabb'\n'''\n\n'''\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"abb\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'def'\n\n'''\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'NO'\n\nInput\n3 3\n1 2 3\n1 3 2\n\nOutput\nYES\nabcdef\nbfgjkl\n\nInput\n4 1\n1 2 3 4\n1 3 2 4\n\nOutput\nNO\n\nassert solution(stdin) == 'NO'\n\nInput\n10 5\n5 1 1 1 2 2 3 3 4 4\n5 3 3 4 2 1 1 3 1\n\nOutput\nYES\nabcdfe\nbfgjkl\n\nassert solution(stdin) == 'NO'\n\nInput\n3 4\n4 1 2 3\n1 2 3 4\n\nOutput\nYES\nabb\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '''43'''\nassert solution('''4''') == '''64'''\nassert solution('''6''') == '''69'''\nassert solution('''2''') == '''3'''\nassert solution('''1 4''') == '''2 1 4 3'''\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n20 10 20''') == '43'\nassert solution('''4\n10 10 10 10''') == '64'\nassert solution('''6\n5 4 5 4 4 5''') == '69'\nassert solution('''2\n1 4''') == '3'\nassert solution('''3\n1 4\n1 4\n1 4''') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'\n'''\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n20 10 20\n''') == '43'\nassert solution('''\n4\n10 10 10 10\n''') == '64'\nassert solution('''\n6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''\n2\n1 4\n''') == '3'\n\n-----"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n20 10 20\\n') == '43'\nassert solution('4\\n10 10 10 10\\n') == '64'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69'\nassert solution('2\\n1 4\\n') == '3'\n\n\n\"\"\"\n\nfrom collections import Counter\n\nn = int(input())\n\narr = [int(x) for x in input().split()]\n\nprint(min(sum(arr[0:i] * (1 + i) for i in range(n)) for i, e in enumerate(arr)))\nprint(*[i+1 for i in range(n) if arr[i] == max(arr)])\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\\n\") == \"3\\n2 1\"\nassert solution(\"2\\n1 1\\n\") == \"1\\n1\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('10\\n9 2 4 1 3 8 6 5') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n4 2 5 1 3''') == '3'\nassert solution('''5\n3 2 4 1 5''') == '3'\nassert solution('''5\n4 3 1 2 5''') == '3'\nassert solution('''5\n3 1 4 2 5''') == '3'\nassert solution('''5\n1 3 2 4 5''') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4 2 5 1 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"1\\n4\") == \"1\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"10, 8, 7\") == \"4\"\nassert solution(\"5, 4, 3, 2, 1\") == \"3\"\nassert solution(\"5, 4, 3, 2, 1, 2\") == \"1\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 4 2 5\") == \"3\"\nassert solution(\"5 4 3 2 1\") == \"3\"\nassert solution(\"3 4 2 5 1\") == \"2\"\nassert solution(\"5 4 3 2\") == \"2\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4') == '3'\nassert solution('2\\n1 2') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('5\\n4 2 5 1 3') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"4 2 5 1 3\") == \"\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '4'\nassert solution('7\\n7 2 3 4 5 6 7') == '1'\nassert solution('8\\n8 2 3 4 5 6 7 8') == '2'\nassert solution('10\\n10 2 3 4 5 6 7 8 9 10') == '6'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\n552\\n553\\n554\\n555\\n556\\n557\\n558\\n559\\n560\\n561\\n562\\n563\\n564\\n565\\n566\\n567\\n568\\n569\\n570\\n571\\n572\\n573\\n574\\n575"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1\\n2\\n3\\n4\\n5') == ''\nassert solution('5\\n5\\n5\\n5\\n5') == '3'\nassert solution('5\\n5\\n1\\n5\\n5') == '2'\nassert solution('2\\n2\\n2\\n2\\n2') == '6'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('1') == ''\nassert solution('1 2') == ''\nassert solution('1 2 3') == ''\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1 1') == '2'\nassert solution('2\\n1 1 1') == '0'\nassert solution('10\\n
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3') == '2'\nassert solution('4\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3') == '2'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 1\nassert solution('3\\n3\\n3\\n3') == 1\nassert solution('3\\n3\\n3\\n3\\n3') == 2\nassert solution('1\\n1\\n1\\n1\\n1') == 1\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 2\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3') == '0'\nassert solution('4\\n3 3 3 3') == '0'\nassert solution('3\\n3 3 3 3') == '0'\nassert solution('4\\n4 2 4 1 4 2 4') == '0'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 1\nassert solution('5') == 1\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 3 3 3') == '1'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1 1') == '0'\nassert solution('5\\n1 2 3 4 5') == '4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == '0'\nassert solution('1\\n1\\n') == '2'\nassert solution('1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 3 3') == 1\nassert solution('3 3 3 3') == 0\nassert solution('3 3 3 3') == 0\nassert solution('3 3 3 3 3 3 3 3 3 3 3') == 1\nassert solution
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 1 1 1\") == \"5\"\nassert solution(\"1 1 1 1 1\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"5\"\nassert solution(\"1 1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 3 4 5 2') == '2'\nassert solution('0 3 4 5 1') == '4'\nassert solution('0 3 4 5 0') == '3'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"3 4 2 1 0\") == \"2\"\nassert solution(\"4 1 0 3 2\") == \"3\"\nassert solution(\"3 5 2 4 1\") == \"4\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n0 2 3 4 5\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n2 0 0 0 0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n1 2 2 0 0\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n0 1 0 0 0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n0 0 1 0 0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('2 3 4 5 1') == '3'\nassert solution('2 3 4 5 2') == '4'\nassert solution('2 3 4 5 3') == '5'\n\"\"\""
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(0,2,3,4,5) == 1\nassert solution(0,2,3,4,5) == 1\nassert solution(0,2,3,4,5) == 1\nassert solution(0,2,3,4,5) == 1\nassert solution(0,2,3,4,5) == 1\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 0') == '3'\nassert solution('1 2 0 3 4 5') == '1'\nassert solution('1 2 3 4 5 0') == '3'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 0') == '4'\nassert solution('0 2 3 4 1') == '0'\nassert solution('0 2 3 4 2') == '1'\nassert solution('0 2 3 4 3') == '2'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 3 4 0\") == \"3\"\nassert solution(\"0 2 3 4 1\") == \"4\"\nassert solution(\"0 2 3 4 2\") == \"5\"\nassert solution(\"0 2 3 4 3\") == \"0\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 0 0 0 0') == '0'\nassert solution('2 0 0 0 0') == '2'\nassert solution('3 4 0 0 0') == '3'\nassert solution('4 5 0 0 0') == '4'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 1') == '0'\nassert solution('3 2') == '1'\nassert solution('2 3') == '-1'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '0'\nassert solution('3 5') == '0'\nassert solution('3 1') == '0'\nassert solution('4 3') == '0'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('3 5') == '0'\nassert solution('3 4') == '1'\nassert solution('2 2') == '0'\nassert solution('3 10') == '9'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '0'\nassert solution('3 4') == '1'\nassert solution('3 4') == '1'\nassert solution('3 3') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\nassert solution('5 10') == '0'\nassert solution('15 10') == '5'\nassert solution('7 15') == '-1'\nassert solution('1000 1000') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 0"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"10 5\") == \"0\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"10 8\") == \"5\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5\\n'\n    '3 5"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('2 3 4') == 'Yes'\nassert solution('1 10 100') == 'No'\nassert solution('2 2 2') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.replace('\\n', '')\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10 100') == \"Yes\"\nassert solution('1 100 10') == \"No\"\nassert solution('2 2 2') == \"No\"\nassert solution('1 100 2') == \"No\"\nassert solution('2 2 2') == \"No\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Yes'\n\n\"\"\"\n\nfrom functools import reduce\nfrom operator import mul\nfrom math import gcd"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('1 1 100') == 'Yes'\nassert solution('1 10 100') == 'No'\nassert solution('1 1 100') == 'No'\nassert solution('1 10 100 1') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('2 10 100') == 'No'\nassert solution('1 10 100') == 'Yes'\nassert solution('1 10 100') == 'Yes'\nassert solution('1 10 100') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 10 100') == 'Yes'\nassert solution('3\\n1 10 100') == 'No'\nassert solution('3\\n3 6 4\\n1 10 100') == 'Yes'\nassert solution('3\\n3 6 4\\n1 10 100') == 'No'\nassert solution('3\\n3 6 4\\n4 6 10\\n1 10 100') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 10 100''') == 'Yes'\nassert solution('''3\n1 10 100''') == 'Yes'\nassert solution('''10\n1 10 100''') == 'Yes'\nassert solution('''10\n1 10 100''') == 'Yes'\nassert solution('''10\n1 10 100''') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('yx', 'axy') == 'Yes'\nassert solution('xy', 'axy') == 'No'\nassert solution('xy', 'yz') == 'No'\nassert solution('xz', 'za') == 'Yes'\nassert solution('xz', 'zxy') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abc', 'cba') == 'Yes'\nassert solution('abc', 'cbd') == 'No'\nassert solution('yx', 'axy') == 'Yes'\nassert solution('yx', 'xay') == 'Yes'\nassert solution('abc', 'cba') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atcoder') == 'No'\nassert solution('atcoder') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('xyz') == 'Yes'\nassert solution('bza') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('xyz') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('yx') == \"Yes\"\nassert solution('axy') == \"Yes\"\nassert solution('atcoder') == \"No\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abc', 'abc') == 'Yes'\nassert solution('abc', 'cba') == 'Yes'\nassert solution('abc', 'def') == 'No'\nassert solution('xyz', 'xyz') == 'Yes'\nassert solution('xyz', 'yzx') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abx') == 'No'\nassert solution('xba') == 'Yes'\nassert solution('xab') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('atcoder') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atcoder') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atcoder') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('xy', 'axy') == 'Yes'\nassert solution('cba', 'cab') == 'No'\nassert solution('x', 'a') == 'Yes'\nassert solution('abc', 'ab') == 'Yes'\nassert solution('xy', 'ax') == 'No'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 14 1\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 5 1\\n') == 'YES'\nassert solution('7 6 3\\n') == 'NO'\nassert solution('7 4 7\\n') == 'NO'\nassert solution('7 6 7\\n') == 'YES'\nassert solution('7 6 5\\n') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"NO\"\nassert solution(\"7 2 1\") == \"YES\"\nassert solution(\"4 6 3\") == \"NO\"\nassert solution(\"6 2 1\") == \"YES\"\nassert solution(\"7 2 1\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 3') == 'NO'\nassert solution('14 7 1') == 'YES'\nassert solution('14 7 3') == 'NO'\nassert solution('14 9 3') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1 2') == 'NO'\nassert solution('8 6 3') == 'YES'\nassert solution('5 5 2') == 'YES'\nassert solution('7 6 2') == 'NO'\nassert solution('2 5 4') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('2 7 4') == 'YES'\nassert solution('1 1 1') == 'NO'\nassert solution('1 1 2') == 'NO'\nassert solution('1 1 6') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 5 1\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('5 5 1') == 'YES'\nassert solution('7 5 1') == 'YES'\nassert solution('0 5 0') == 'NO'\nassert solution('7 5 1') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 5 1') == 'YES'\n\n'''\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('5 10') == '12'\nassert solution('10 10') == '45'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 4') == '8'\nassert solution('2 4') == '3'\nassert solution('100 99') == '9997'\n\nprint(\"Testcase 1: Pass\")\nprint(\"Testcase 2: Pass\")\nprint(\"Testcase 3: Pass\")\nprint(\"Testcase 4: Pass\")\nprint(\"Testcase 5: Pass\")\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('100 100') == '5000'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''10 10''') == '10'\nassert solution('''5 4''') == '9'\nassert solution('''5 4''') == '9'\nassert solution('''3 3''') == '2'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 5') == '6'\nassert solution('1 2') == '1'\nassert solution('6 8') == '15'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''3 3''') == '2'\nassert solution('''3 4''') == '1'\nassert solution('''4 3''') == '2'\nassert solution('''7 8''') == '28'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"100 100\") == \"10000\"\nassert solution(\"4 5\") == \"50\"\nassert solution(\"5 4\") == \"50\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\nfrom typing import List"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"23 10 1\") == \"4\"\nassert solution(\"23 1 1\") == \"1\"\nassert solution(\"23 2 1\") == \"2\"\nassert solution(\"23 3 1\") == \"2\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n\nassert solution(\"30 8 1\") == \"7\"\nassert solution(\"30 10 1\") == \"9\"\nassert solution(\"30 11 1\") == \"10\"\nassert solution(\"30 12 1\") == \"11\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n\"\"\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"13 3 4\") == \"1\"\nassert solution(\"13 3 5\") == \"2\"\nassert solution(\"13 3 6\") == \"3\"\nassert solution(\"13 3 7\") == \"3\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"4 4 4\") == \"1\"\nassert solution(\"13 3 1\") == \"3\"\nassert solution(\"4 4 4\") == \"1\"\nassert solution(\"23 2 1\") == \"2\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('7 3 2') == '2'\nassert solution('14 3 2') == '3'\nassert solution('15 3 2') == '2'\nassert solution('16 3 2') == '3'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8 4 1\") == \"3\"\nassert solution(\"8 5 1\") == \"3\"\nassert solution(\"8 6 1\") == \"4\"\nassert solution(\"8 7 1\") == \"4\"\nassert solution(\"8 8 1\") == \"4\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('2\\n0\\n2\\n') == '0'\nassert solution('5\\n2 0\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('4\\n2 0\\n1 3\\n0 4\\n5 5\\n') == '1'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '0'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == 2\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 6') == 0\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 6\\n5 1') == 3\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == 2\nassert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n6 7\\n5 1') == 4\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n2 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '2'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n2 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '2'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n2 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '2'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n2 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 4\") == \"2\"\nassert solution(\"2 3\\n1 2\\n3 4\") == \"2\"\nassert solution(\"1 2\\n3 4\\n5 5\") == \"4\"\nassert solution(\"1 2\\n3 4\\n5 5\\n6 7\") == \"4\"\nassert solution(\"1 2\\n3 4\\n5 5\\n6 7\\n8 9\") == \"4\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == \"2\"\nassert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == \"0\"\nassert solution('''5\n3 0\n0 2\n5 4\n2 3\n0 4\n5 6\n''') == \"3\"\nassert solution('''10\n0 2\n3 4\n4 5\n5 6\n7 8\n8 9\n9 10\n1 2\n3 4\n5 6\n7 8\n''') == \"10\"\nassert solution('''10\n0 2\n3 4\n4 5\n5 6\n7 8\n8 9\n9 10\n10 11\n1 2\n3 4\n5 6\n7 8\n''') == \"7\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '9'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '9'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\n\"\"\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5''') == '2'\nassert solution('''5\n0 0\n3 1\n4 0\n3 4\n5 0\n''') == '3'\nassert solution('''5\n1 1\n1 2\n1 3\n1 4\n1 5\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n4 4\n4 5\n5 5\n''') == '6'\nassert solution('''4\n0 1\n0 2\n0 3\n0 4\n0 5\n1 1\n1 2\n1 3\n1 4\n1 5\n2 1\n2 2\n2 3\n2 4\n2 5\n3 1\n3 2\n3 3\n3 4\n3 5\n4 1\n4 2\n4 3\n4 4\n4 5\n5 1\n5 2\n5 3\n5 4\n5 5\n''') == '9'\nassert solution('''6\n2 0\n2 3\n3 1\n4 0\n4 4\n5 1\n5 5\n1 2\n2 4\n1 3\n2 5\n2 4\n3 4\n3 5\n4 4\n5 5\n''') == '10'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 3') == '7'\nassert solution('1 2') == '3'\nassert solution('1 1') == '2'\nassert solution('2 5') == '7'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2 4\n0 3\n''') == '7'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4\\n0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n') == '7'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '7'\n'''\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 4\n0 3''') == '4'\nassert solution('''2 4\n0 3''') == '7'\nassert solution('''2 4\n0 1''') == '4'\nassert solution('''3 4\n0 1 3''') == '8'\nassert solution('''4 4\n0 1 3 4''') == '16'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 4\n0 3\n''') == '7'\nassert solution('''2 4\n0 3\n1 2\n''') == '7'\nassert solution('''3 4\n0 1 1\n1 2 2\n2 1 1\n''') == '6'\nassert solution('''5 2\n0 1 2 3 4\n0 0\n''') == '8'\n'''\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4\\n0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n1 3\\n') == '7'\nassert solution('2 4\\n0 3\\n1 3\\n0 3\\n') == '7'\nassert solution('2 4\\n0 3\\n1 3\\n0 3\\n0 3\\n') == '7'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2\\n0 3') == '7'\nassert solution('1 10\\n0 1') == '10'\nassert solution('1 10\\n0 2') == '7'\nassert solution('1 10\\n1 2') == '10'\nassert solution('1 10\\n0 2\\n0 3') == '10'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4\\n0 3') == '7'\nassert solution('2 4\\n0 3\\n0 3') == '7'\nassert solution('2 4\\n0 3\\n0 3\\n0 3') == '7'\nassert solution('2 4\\n0 3\\n0 3\\n0 3\\n0 3') == '7'\nassert solution('2 4\\n0 3\\n0 3\\n0 3\\n0 3\\n0 3') == '7'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 3 4') == '1'\nassert solution('5') == '2'\nassert solution('100') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '2'\nassert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 4\n? 4\nL 3\n? 3\nL 2\n? 2\nL 1\n? 1\n''') == '2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1\\n1\\n2\\n'\n\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '0\\n2\\n1\\n'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"15\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"0\\n1\\n2\\n\"\nassert solution(\"3\\nL 1\\nR 2\\n? 1\\nL 3\\n? 2\\n\") == \"0\\n1\\n2\\n\"\nassert solution(\"1\\nL 1\\nR 2\\n? 1\\nL 3\\n? 2\\n\") == \"0\\n1\\n2\\n\"\n\n\n\n-----\n\npython3 -m doctest -v pr_9_1.py\n\npython3 pr_9_1.py < pr_9_1_input.txt\n\n-----"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\n\n\n\n-----Answer-----"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\\n1\\n2\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"0\\n2\\n1\"\n\n\n-----\n\nFor the test cases we are going to generate a random string of numbers and\ncharacters.\n\nThe random string will have the following properties:\n- The numbers and characters will be in the range 0-9 and A-Z\n- The string will be random, so that it does not contain all the same characters\n- The string will be random, so that the first and last character is never the same\n- The string will be random, so that the first and last three characters are never the same\n\n------\n\n[time limit] 4 seconds (py3)\n\n[input] integer n\n\nA positive integer, the size of the array/string.\n\n\n[output] string\n\n\n\"\"\"\n\n\"\"\"\npseudo-code:\n\n1. get all possible permutations of n characters\n2. sort them in ascending order\n3. lookup the number in sorted list\n\"\"\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1\\n1\\n2\\n'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1\\n'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1\\n1\\n2'\nassert solution('8\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115') == '0\\n2\\n1'\n\n\n-----\n\nMore examples:\n\n3\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n0\n1\n1\n\n3\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n0\n2\n1\n\n3\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n0\n2\n1\n\n3\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n0\n2\n1\n\n5\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n0\n1\n1\n\n3\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n0\n2\n1\n\n3\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n0\n2\n1\n\n3\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n0\n2\n1\n\n\n-----\n\nTesting:\n\npython3 solution.py <(cat input.txt)\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n10\n10\n1\n''') == '0'\n\nassert solution('''30\n15\n30\n30\n30\n10\n1000000000000000000\n''') == '6'\n\nassert solution('''25\n25\n25\n25\n25\n25\n25\n25\n25\n25\n25\n''') == '12'\n\nassert solution('''27\n27\n27\n27\n27\n27\n27\n27\n27\n27\n27\n27\n''') == '3'\n\nassert solution('''14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == -1\nassert solution('10') == 2\nassert solution('25') == 3\nassert solution('30') == 4\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == -1\nassert solution(\"10000000000\") == 0\nassert solution(\"1000000000000000000\") == 6\nassert solution(\"7\") == -1\nassert solution(\"70000000000\") == 6\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000000000000000000') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n2\\n1\") == \"0\\n1\\n2\\n3\"\nassert solution(\"10\\n4\\n2\\n1\") == \"3\"\nassert solution(\"12\\n4\\n2\\n1\") == \"2\"\nassert solution(\"7\\n4\\n2\\n1\") == \"3\"\nassert solution(\"15\\n4\\n2\\n1\") == \"1\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == 'YES'\nassert solution('2\\n2\\n2\\n2') == 'YES'\nassert solution('2\\n1\\n1') == 'NO'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"triangle.txt\").read()) == \"NO\"\nassert solution(open(\"triangle2.txt\").read()) == \"YES\"\nassert solution(open(\"triangle3.txt\").read()) == \"NO\"\nassert solution(open(\"triangle4.txt\").read()) == \"YES\"\nassert solution(open(\"triangle5.txt\").read()) == \"YES\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n2\\n1') == 'YES'\nassert solution('2\\n1\\n1\\n1') == 'NO'\nassert solution('3\\n1\\n3\\n1') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n1 2 3\n3\n10 9 8 7\n2\n''') == 'NO'\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n1 2 3\n3\n10 9 8 7\n2\n''') == 'YES'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n1 2 3\n3\n10 9 8 7\n2\n''') == 'NO'\nassert solution('''4\n4\n1 1 2 1\n2\n1 2 3\n3\n10 9 8 7\n2\n''') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4\n    3\n    1 1 3\n    4\n    1 1 2 1\n    2\n    11 11\n    1\n    100\n    \"\"\"\n    ) == \"YES\"\n\nassert solution(\n    \"\"\"\n    4\n    2\n    1 1 1 1\n    2\n    1 1 2 1\n    2\n    11 11\n    1\n    100\n    \"\"\"\n    ) == \"NO\"\n\nassert solution(\n    \"\"\"\n    2\n    1\n    1\n    1\n    \"\"\"\n    ) == \"YES\"\n\nassert solution(\n    \"\"\"\n    2\n    2\n    1 1 1 1\n    2\n    1 1 2 1\n    2\n    11 11\n    1\n    100\n    \"\"\"\n    ) == \"NO\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n'''"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 1 2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n2\\n1') == 'YES'\nassert solution('1\\n2\\n2\\n2') == 'NO'\nassert solution('1\\n2\\n2\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n''') == 'NO'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n''') == 'NO'\nassert solution('''2\n2\n1 1\n2\n1\n''') == 'YES'\nassert solution('''2\n2\n1\n2\n1\n''') == 'NO'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacaba') == '4'\nassert solution('zcabd') == '0'"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"aabab\", \"babaab\") == 0\nassert solution(\"abab\", \"bbaab\") == 1\nassert solution(\"abab\", \"aabab\") == 2\nassert solution(\"abacaba\", \"bacabaa\") == 4\n\n\n\n\"\"\"\n\nn = int(input())\na = input()\nb = input()\n\na = list(a)\nb = list(b)\n\na_len = len(a)\nb_len = len(b)\n\nmoves = 0\n\nwhile a!= b:\n    for i in range(b_len):\n        if b[i]!= a[a_len - i - 1]:\n            moves += 1\n            break\n        else:\n            a_len -= 1\n    for i in range(b_len):\n        if b[b_len - i - 1]!= a[i]:\n            moves += 1\n            break\n        else:\n            b_len -= 1\n\nprint(moves)\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == 4\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == 0\n\n\n-----\n\nThis problem follows the LISTS series and is quite similar to <https://projecteuler.net/problem=17>.\n\"\"\"\n\nfrom math import ceil\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\ndbacz') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == ''\n\"\"\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\nbaczd\") == \"0\"\nassert solution(\"3\\nxaxb\\nbxab\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacaba\\nbacabaa') == '0'\nassert solution('zcabd\\dbacz') == '4'\n\n-----"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacaba') == '4'\nassert solution('bacabaa') == '0'\nassert solution('zcabd') == '0'\nassert solution('dbacz') == '0'\nassert solution('bbbbb') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\nabacaba\nbacabaa\n''') == '4'\n\nassert solution('''5\nzcabd\ndbacz\n''') == '0'"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\nbacz') == '0'\n\n\n\n'''\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == '8\\n-17\\n2999999997\\n0\\n1'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n-17\\n2999999997\\n0\\n1'\nassert solution('2 3 4\\n5 6 7\\n8 9 10\\n20 40 50\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '12\\n0\\n-1'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n1 1 999999999\\n1 1 999999999') == '12\\n0\\n-1'\nassert solution('1 1 2\\n3 2 4\\n5 2 2\\n7 2 2\\n9 2 2\\n11 2 2\\n13 2 2\\n15 2 2\\n17 2 2') == '17\\n-17\\n15'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '-1'\nassert solution('1 10 5') == '2'\nassert solution('1000000000 1 6') == '8'\nassert solution('1 1 1000000000') == '0'\nassert solution('1 1 999999999') == '1'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45\\n46 47 48\\n49 50 51\\n52 53 54\\n55 56 57\\n58 59 60\\n61 62 63\\n64 65 66\\n67 68 69\\n70 71 72\\n73 74 75\\n76 77 78\\n79 80 81\\n82 83 84\\n85 86 87\\n88 89 90\\n91 92 93\\n94 95 96\\n97 98 99\\n99 100') == '0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n\"\"\""
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n'''assert solution('''5\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n'''assert solution('''1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1\n1 1 1\n''') == '1'\nassert solution(\n'''10\n10 10 10\n''') == '0'\nassert solution(\n'''5\n1 1 4\n''') == '8'\nassert solution(\n'''1000000000\n1 1 999999999\n''') == '0'\nassert solution(\n'''1\n10 1 5\n''') == '198'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution(\"\"\"3\n5 5 2\n1000000000 1000000000 1\n1 1 100000000\n1 1 9999999999\n\"\"\") == '0\\n1\\n-1'\nassert solution(\"\"\"1\n1000000000 1000000000 1\n1 1 1000000000\n1 1 9999999999\n\"\"\") == '0'\nassert solution(\"\"\"7\n5 2 3\n100 1 4\n1 10 5\n1 1000000000 1\n1 1 1000000000\n1 1 999999999\n1 1 999999999\n\"\"\") == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n-1'\nassert solution(\"\"\"15\n5 2 3\n100 1 4\n1 10 5\n1 1000000000 1\n1 1 100000000\n1 1 9999999999\n1 1 9999999999\n1 1 9999999999\n1 1 9999999999\n1 1 9999999999\n1 1 9999999999\n1 1 9999999999\n1 1 9999999999\n\"\"\") == '0\\n1\\n-1\\n2\\n-1\\n1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '8'\nassert solution('1 2 3 4 5') == '2'\nassert solution('100 1 4') == '198'\nassert solution('1 1000000000 1 6') == '2999999997'\nassert solution('1 1 999999999') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 10 5') == '-17'\nassert solution('1000000000 1 6') == '2999999997'\nassert solution('1 1 1000000000') == '0'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '1 3 5 7 11 13'\nassert solution('1\\n3\\n5\\n7\\n9\\n10\\n12\\n14') == '1 3 5 7 11 13'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n0') == '0'\nassert solution('1\\n0') == '0'\nassert solution('4\\n3') == '4'\nassert solution('100\\n0') == '0'\nassert solution('1000000\\n0') == '0'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('1') == '1\\n3\\n9'\nassert solution('2') == '1\\n3'\nassert solution('6') == '1\\n3\\n9'\nassert solution('13') == '1\\n3\\n9'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '3'\nassert solution('1\\n6') == '9'\nassert solution('1\\n13') == '13'\nassert solution('1\\n14') == '14'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '''1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089'''\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''6\n1\n2\n3\n4\n5\n6''') == '1\\n3\\n4\\n5\\n6'\n\nassert solution('''1\n1\n2\n3\n4\n5\n6''') == '1\\n3\\n4\\n5\\n6'\n\nassert solution('''5\n1\n2\n3\n4\n5\n6''') == '1\\n3\\n4\\n5\\n6'\n\nassert solution('''2\n1\n2\n3\n4\n5\n6''') == '1\\n3\\n4\\n5\\n6'"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''5\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000''') == '77\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''5\n10 11 2 1 5\n10 11 9 1 10\n''') == '77\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''5\n10 11 2 1 5\n10 11 9 1 10\n''') == '77\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''5\n10 11 2 1 5\n10 11 9 1 10\n''') == '77\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''10 11 2 1 5\n10 11 9 1 10\n''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''2\n1 2 2 2 2\n1 2 2 2 2\n''') == '1\\n1\\n1'\nassert solution('''3\n1 1 1 1\n2 2 2 2\n3 3 3 3\n''') == '1\\n1\\n1'\nassert solution('''100\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n''') == '1\\n1\\n1'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '70'\nassert solution('''10\n10 8 8 7 2\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '77'\nassert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '70'\nassert solution('''9\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '77'\nassert solution('''9\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '70'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == '70'\nassert solution('10 10 8 5 3') == '77'\nassert solution('12 8 8 7 2') == '177177'\nassert solution('1000000000 1000000000 1 1 1') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1000000000') == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 10 8 5 3') == '70'\nassert solution('12 8 8 7 2') == '77'\nassert solution('12343 43 4543 39 123212') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1') == '999999999'\nassert solution('1000000000 1000000000 1 1 1000000000') == '55'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'\nassert solution('''1 1 1 1\n2 2 2 2\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000''') == '1\\n1\\n1\\n1'\nassert solution('''1 1 1 1\n1 1 1 1\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000''') == '1\\n1\\n1\\n1'\nassert solution('''1 1 1 1\n2 2 2 2\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000''') == '1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4\\n') == '1\\n1\\n1\\n1\\n'\nassert solution('10\\n10\\n10\\n10\\n10\\n') == '1\\n1\\n1\\n1\\n1\\n'\nassert solution('2\\n5\\n3\\n2\\n1\\n') == '5\\n5\\n5\\n5\\n5\\n'\nassert solution('5\\n5\\n5\\n5\\n5\\n') == '5\\n5\\n5\\n5\\n5\\n'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '1'\nassert solution('2 2 2\\n2 2 2\\n2 2 2\\n2 2 2') == '2'\nassert solution('1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000') == '999999999'\nassert solution('1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1') == '999999999000000000'\nassert solution('10 11 2 1 5\\n10 11 9 1 10\\n10 11 9 1 10\\n10 11 9 1 10') == '55'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"7\\n1\\n1\\n1\\n1\"\nassert solution(\"2\\n1 1 1\\n2 1 1\") == \"10\\n1\\n1\\n1\"\nassert solution(\"2\\n2 1 1\\n1 1 1\") == \"77\\n1\\n1\"\nassert solution(\"2\\n2 1 1\\n1 1 1\") == \"55\\n1\\n1\"\nassert solution(\"1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\") == \"999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('1\\n3\\n') == '2'\nassert solution('1\\n2\\n') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\") == \"\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n10\\n1\\n1\\n1\\n1') == 1\nassert solution('2\\n3\\n1\\n4\\n2') == 2\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10') == 0\nassert solution('2\\n10\\n2\\n1\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n5\\n5') == 1\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3''') == '1'\nassert solution('''10 10''') == '0'\nassert solution('''2 4''') == '2'\nassert solution('''7 4''') == '1'\nassert solution('''9 3''') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n5 3\\n2 1\") == \"2\"\nassert solution(\"4 10\\n2 4\\n7 4\\n9 3\\n\") == \"0\"\nassert solution(\"7 5\\n5 3\\n2 1\\n4 2\\n7 4\\n9 3\\n\") == \"2\"\nassert solution(\"10 10\\n2 4\\n7 4\\n9 3\\n\") == \"0\"\nassert solution(\"10 5\\n2 4\\n7 4\\n9 3\\n\") == \"2\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '0'\nassert solution('2\\n3') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '0'\nassert solution('2\\n3') == '0'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '1'\nassert solution('''3\n1 2\n2 2\n4 1\n''') == '2'\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '0'\nassert solution('''3\n1 2\n2 2\n4 1\n''') == '1'\nassert solution('''4\n2 3\n10 10\n2 4\n7 4\n9 3''') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n2') == '0'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n4\n9999\n1\n777\n''') == '13'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n22\\n9999\\n1\\n777') == '13'\nassert solution('2\\n22\\n9999\\n1\\n777') == '90'\nassert solution('3\\n22\\n9999\\n1\\n777') == '1'\nassert solution('4\\n22\\n9999\\n1\\n777') == '66'\nassert solution('5\\n22\\n9999\\n1\\n777') == '1'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n4\n22\n9999\n1\n777\n''') == '13\\n90\\n1\\n66'\n\nassert solution('''\\\n3\n22\n9999\n22\n999\n''') == '13\\n90\\n1'\n\nassert solution('''\\\n10\n22\n9999\n22\n999\n''') == '13\\n90\\n1'\n\nassert solution('''\\\n10\n1\n22\n999\n''') == '13\\n90\\n1'\n\nassert solution('''\\\n9\n22\n9999\n22\n999\n''') == '13\\n90\\n1'"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13\\n90\\n1\\n66'\n'''\n1\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n100\n1000\n10000\n100000\n1000000\n'''"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''2\n1\n9\n''') == '90'\nassert solution('''1\n9\n''') == '1'\nassert solution('''5\n111\n13\n11\n13\n''') == '144'\nassert solution('''7\n11\n1\n111\n111\n1\n13\n13\n''') == '245'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n22\\n9999\\n1\\n777') == '13'\n\n'''\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\\\n2\n22\n9999\n1\n777\n\"\"\") == \"\"\"\\\n13\n90\n1\n66\n\"\"\"\n\nassert solution(\"\"\"\\\n5\n22\n9999\n1\n777\n\"\"\") == \"\"\"\\\n13\n90\n1\n66\n\"\"\"\n\nassert solution(\"\"\"\\\n7\n22\n9999\n1\n777\n\"\"\") == \"\"\"\\\n13\n90\n1\n66\n\"\"\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '5'\nassert solution('2\\n9') == '3'\nassert solution('2\\n0') == '0'\nassert solution('9\\n5') == '9'\nassert solution('2\\n2') == '2'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''4\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2\n5\n2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"1\\n2\") == \"NO\"\nassert solution(\"1\\n2\\n3\") == \"NO\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2\\n'\nassert solution('''2\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'NO\\n'\nassert solution('''5\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2\\n'\nassert solution('''6\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'NO\\n'\nassert solution('''3\n1\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'NO\\n'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n5\\n2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('1\\n5\\n2\\n2\\n2\\n2\\n2') == 'NO'\nassert solution('1\\n2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('1\\n2\\n2\\n2\\n2\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n') == 'YES\\n2 6\\n1 2\\n'\nassert solution('2\\n6\\n2 2 2 2 2\\n2\\n2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n') == 'YES\\n2 6\\n1 2\\n'\nassert solution('3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n') == 'NO\\n'\nassert solution('4\\n6\\n2 2 2 2 2 2\\n2\\n2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n') == 'YES\\n2 2\\n4 1\\n'\nassert solution('5\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2'\nassert solution('''2\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'\nassert solution('''4\n6\n2 2 2 2 2\n5\n2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n2 3 1 3 2''') == 'YES'\nassert solution('''6\n1 1 2 2 2 1''') == 'NO'\nassert solution('''2\n2 2 2 2 2 2''') == 'YES'\nassert solution('''2\n5\n5\n1 1 1 1 1''') == 'NO'\nassert solution('''1\n5\n5\n1 1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n2') == 'YES'\nassert solution('2\\n3\\n2') == 'NO'\nassert solution('1\\n1\\n2') == 'YES'\nassert solution('3\\n3\\n3') == 'NO'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4,2,3''') == '5'\nassert solution('''3,-1,0,2''') == '6'\nassert solution('''2,-3,-1,5,-4''') == '13'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\nassert solution([-2,-1,-3,4,-1,-2,-3,-4,-5,-4,-3,-1,-4,-2], 4) == 44\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5 -1 -2 3 4\"\nassert solution(\"5 6 7 -8\") == \"-8 -7 6 5\"\nassert solution(\"2 3 -1\") == \"-3 -1 2\"\nassert solution(\"1 2 -3 -4\") == \"2 -4 -3 1\"\nassert solution(\"3 1 2 -4\") == \"1 -1 -1 -4\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"4,2,3\"\n) == \"5\"\n\nassert solution(\n\"3,-1,0,2\"\n) == \"6\"\n\nassert solution(\n\"2,-3,-1,5,-4\"\n) == \"13\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4,2,3''') == 5\nassert solution('''3,-1,0,2''') == 6\nassert solution('''2,-3,-1,5,-4''') == 13'''\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2\n3\n''') == '5'\nassert solution('''3\n-1\n0\n2\n''') == '6'\nassert solution('''2\n-3\n-1\n5\n-4\n''') == '13'\nassert solution('''2\n-1\n3\n-2\n3\n1\n-2\n2\n-2\n2\n''') == '6'"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4,2,3\") == \"5\"\nassert solution(\"3,-1,0,2\") == \"6\"\nassert solution(\"2,-3,-1,5,-4\") == \"13\"\nassert solution(\"1,2,3,4,5,6\") == \"24\"\nassert solution(\"7,-1,2,3,4,-5,-2\") == \"28\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4,2,3\\n1,2,3\\n\") == \"5\\n\"\nassert solution(\"3,-1,0,2\\n\") == \"6\\n\"\nassert solution(\"2,-3,-1,5,-4\\n\") == \"13\\n\""
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"A = [4,2,3]\nK = 1\n\"\"\") == \"5\"\n\nassert solution(\n    \"\"\"A = [3,-1,0,2]\nK = 3\n\"\"\") == \"6\"\n\nassert solution(\n    \"\"\"A = [2,-3,-1,5,-4]\nK = 2\n\"\"\") == \"13\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == False\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n'''"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4,0]) == \"false\"\nassert solution([-2,1]) == \"false\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([1,2,3,4,5,6,7,8,9]) == False\nassert solution([1,2,3,4,5]) == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 2 1 -6 6 -7 9 1 2 0 1''') == True\nassert solution('''0 2 1 -6 6 -7 9 -1 2 0 1''') == False\nassert solution('''3 3 6 5 -2 2 5 1 -9 4''') == True\nassert solution('''3 3 6 5 -2 2 5 1 -9 4''') == False\nassert solution('''3 3 6 5 -2 2 5 1 -9 4''') == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == True\nassert solution(\"0 2 1 -6 6 -7 9 -1 2 0 1\") == False\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == True\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == False\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''0 2 1 -6 6 -7 9 1 2 0 1'''\n) == \"true\"\n\nassert solution(\n    '''0 2 1 -6 6 -7 9 1 2 0 1'''\n) == \"false\"\n\nassert solution(\n    '''3 3 6 5 -2 2 5 1 -9 4'''\n) == \"true\"\n'''\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,4,4]) == False\nassert solution
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample) == \"beet and vet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet\\nvet'\nassert solution('\\n') == ''\nassert solution('\\n\\n') == ''\nassert solution('\\n\\n\\n\\n\\n\\n\\n\\n') == ''"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') =='vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') =='vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'beet'\nassert solution('bed') == 'bet'\nassert solution('vet') =='vet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'beet'\nassert solution('bed') == 'bed'\nassert solution('vet') =='vet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet\\nvet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet\\nvet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet\\nvet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet\\nvet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet\\nvet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet'\nassert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'bet'\n\"\"\""
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'bet'\nassert solution('bed') == 'bet'\nassert solution('vet') =='vet'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 3') == '0'\nassert solution('3\\n1 2 1') == '2'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"\nassert solution(\"3\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n4 8') == '8'\nassert solution('3\\n3 3') == '6'\nassert solution('4\\n4 4') == '0'\nassert solution('5\\n2 2') == '1'\nassert solution('10\\n2 2 2 2 2 2 2 2 2') == '0'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n4 8') == '8'\nassert solution('1\\n-1') == '0'\nassert solution('5\\n-1 0 0 -1') == '0'\nassert solution('5\\n-1 0 0 -1 0') == '1'\nassert solution('5\\n-1 0 0 -1 0 1') == '1'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 6\") == \"8\"\nassert solution(\"1 2 3 4 5 6 7\") == \"12\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"2\"\nassert solution(\"2\\n1\\n1\") == \"4\"\nassert solution(\"3\\n1\\n2\\n2\") == \"3\"\nassert solution(\"4\\n1\\n2\\n2\\n2\") == \"3\"\nassert solution(\"5\\n1\\n2\\n2\\n2\\n2\") == \"4\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('4\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 4 1\") == \"1\"\nassert solution(\"2 8 3\") == \"2\"\nassert solution(\"4 8 1\") == \"2\"\nassert solution(\"6 1 4\") == \"1\"\nassert solution(\"3 4 9\") == \"1\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n4 8''') == '8'\nassert solution('''2\n-4 -8''') == '-8'\nassert solution('''2\n1 2''') == '1'\nassert solution('''3\n3 3 -2''') == '-1'\nassert solution('''1\n1''') == '0'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1234\\n150\\n100\\n\") == \"84\""
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1234 150 100') == '84'\n\"\"\"\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"X\\nA\\nB\") == \"84\""
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nprint(solution(\"1234\\n150\\n100\"))\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1234 150 100\") == \"84\"\nassert solution(\"1234 150 0\") == \"0\"\nassert solution(\"91239 1 0\") == \"0\"\nassert solution(\"0 1 1\") == \"0\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1234 150 100') == '84'\nassert solution
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '84'\n\n'''\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('10\\n10\\n10') == '0'\nassert solution('15\\n20\\n5') == '35'\nassert solution('10\\n10\\n5') == '0'\nassert solution('15\\n1\\n5') == '6'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('X\\n1234\\n150\\n100') == '84'"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"\n\"\"\""
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"6 6\") == \"1\"\nassert solution(\"10000000 10000000\") == \"0\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '8'\nassert solution('''3 4''') == '8'\nassert solution('''8 8''') == '256'\nassert solution('''10 2''') == '256'\nassert solution('''5 3''') == '384'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '40'\nassert solution('1 4') == '0'\nassert solution('6 5') == '3630'\n\nprint(solution('10 9'))\n\"\"\"\n\"\"\""
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 3') == '1'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"8\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"8\"\nassert solution(\"5 3\") == \"10\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 8\nassert solution(\"1 1\") == 1\nassert solution(\"2 1\") == 0\nassert solution(\"1 2\") == 0\nassert solution(\"3 4\") == 0\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''1 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 2\n1 2\n1 2''') == 'POSSIBLE'\nassert solution('''1 2\n2 3''') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 2') == 'POSSIBLE'\nassert solution('4 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 2\") == \"POSSIBLE\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\") == \"POSSIBLE\"\nassert solution(\"3 4\\n1 2\\n3 4\\n2 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"1 1\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"2 3\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n') == 'POSSIBLE'\nassert solution('3 2\\n1 2\\n2 3\\n') == 'POSSIBLE'\nassert solution('3 2\\n1 3\\n2 3\\n') == 'IMPOSSIBLE'\nassert solution('3 3\\n1 3\\n2 2\\n2 3\\n') == 'IMPOSSIBLE'\nassert solution('1 10\\n1 9\\n2 8\\n3 7\\n4 6\\n5 5\\n6 4\\n7 3\\n8 2\\n9 1\\n') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n2 3') == 'POSSIBLE'\nassert solution('2 2\\n1 3') == 'POSSIBLE'\nassert solution('2 3\\n1 3') == 'IMPOSSIBLE'\nassert solution('3 4\\n1 3\\n2 4\\n3 4') == 'POSSIBLE'\nassert solution('3 2\\n2 1\\n2 1') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"2 2\\n1 2\") == \"POSSIBLE\"\nassert solution(\"2 3\\n1 2\") == \"POSSIBLE\"\nassert solution(\"2 3\\n2 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"POSSIBLE\""
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'aefghiklmnopqrstuvwxyz'\nassert solution('0123456789') == '0123456789'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('coder') == 'coder'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'acdr'"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoder') == 'acdr'"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcdefgh') == 'acdefgh'\nassert solution('abcdefgh') == 'acdefgh'\nassert solution('abcdefgh') == 'acdefgh'\nassert solution('abcdefgh') == 'acdefgh'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoder') == 'acdr'\n\"\"\""
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr'\n\"\"\""
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcde') == 'acde'\nassert solution('cde') == ''\nassert solution('pqrst') == 'rst'\nassert solution('abcdef') == 'abcd'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('a') == 'a'\nassert solution('atc') == 'atc'\nassert solution('tct') == 'tct'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('a') == ''\nassert solution('abcdefg') == 'afg'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[1:len(stdin):2]\nprint(solution(stdin))"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng goruparle') == 'NO'\nassert solution('rng goruparleapple') == 'YES'\nassert solution('rng goruparleapplepear') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng dog cat\") == \"NO\"\nassert solution(\"abcdefghi\") == \"NO\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng elephant apple') == 'NO'\nassert solution('rng rabbit apple') == 'NO'\nassert solution('rng rat elephant') == 'NO'\nassert solution('rng rat apple') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng togorilla apple') == 'NO'\nassert solution('rng togorilla aplle') == 'NO'\nassert solution('rng togorilla apple') == 'NO'\nassert solution('rng togorilla apple') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:-2]\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'NO'\n\n'''\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''rng gorilla apple''') == \"YES\"\nassert solution('rng gorilla') == \"NO\"\nassert solution('rng') == \"NO\"\nassert solution('rng') == \"NO\"\nassert solution('rng') == \"NO\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == \"LESS\"\nassert solution('1') == \"LESS\"\nassert solution('0') == \"LESS\"\nassert solution('-1') == \"GREATER\"\nassert solution('-1') == \"LESS\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter your input: \")) == output\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'LESS'\nassert solution(input()) == 'EQUAL'\nassert solution(input()) == 'GREATER'\n\n\n\"\"\"\nA,B = map(int,stdin.split())\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"LESS\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('A') == 'LESS'\nassert solution('B') == 'LESS'\nassert solution('0') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'LESS'\nassert solution('5 3') == 'GREATER'\nassert solution('7 5') == 'EQUAL'\nassert solution('4 5') == 'LESS'\nassert solution('3 3') == 'EQUAL'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'GREATER'\nassert solution(input()) == 'LESS'\nassert solution(input()) == 'EQUAL'\n\"\"\""
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('36\\n24') == 'GREATER'"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('24') == 'LESS'\nassert solution('36') == 'GREATER'\nassert solution('18') == 'EQUAL'\nassert solution('1010') == 'LESS'\n\"\"\"\n\"\"\""
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('apple\\norange\\napple\\n1\\ngrape') == 2\nassert solution('apple\\norange\\napple\\n1\\ngrape') == 2\nassert solution('apple\\norange\\napple\\n1\\ngrape') == 2\nassert solution('apple\\norange\\napple\\n1\\ngrape') == 2\nassert solution('apple\\norange\\napple\\n1\\ngrape') == 2\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\na\nb\na\n2\nc\nd\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n4\na\nb\na\n1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n7\na\na\nb\na\nb\nb\nb\nb\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n3\na\na\nb\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n1\na\na\n\"\"\") == \"0\""
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('apple\\noange\\napple') == 2\nassert solution('a:b\\nc:d\\ne:f') == 0\nassert solution('a:b\\nc:d\\ne:f\\na:g\\nc:h\\ne:i\\na:j\\nc:k\\ne:l\\na:m\\nc:n\\ne:o\\na:p\\nc:q\\ne:r\\na:s\\nc:t\\ne:u\\na:v\\nc:w\\ne:x\\na:y\\nc:z\\ne:a\\na:b\\nc:d\\ne:f') == 0\nassert solution('a:b\\nc:d\\ne:f\\na:g\\nc:h\\ne:i\\na:j\\nc:k\\ne:l\\na:m\\nc:n\\ne:o\\na:p\\nc:q\\ne:r\\na:s\\nc:t\\ne:u\\na:v\\nc:w\\ne:x\\na:y\\nc:z\\ne:a\\na:b\\nc:d\\ne:f') == 0\nassert solution('a:b\\nc:d\\ne:f\\na:g\\nc:h\\ne:i\\na:j\\nc:k\\ne:l\\na:m\\nc:n\\ne:o\\na:p\\nc:q\\ne:r\\na:s\\nc:t\\ne:u\\na:v\\nc:w\\ne:x\\na:y\\nc:z\\ne:a\\na:b\\nc:d\\ne:f') == 0\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('apple\\norange\\napple\\n1\\ngrape') == 2\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('apple\\norange\\napple\\n1') == 2\nassert solution('grape\\n') == 0\nassert solution('banana\\n') == 0\nassert solution('banana\\nbanana\\n') == 2\nassert solution('banana\\n') == 2\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''4\na\nb\nc\nd\n1\n2\n3\n4\n5''') == '6'\nassert solution('''5\na\nb\nc\nd\ne\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('2\\napple\\norange\\napple\\n1\\ngrape\\n') == '1'\nassert solution('2\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '0'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''5\nabacab\nababab\nabacab\nabacab\nabacab''') == '16'\nassert solution('''5\naaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaa''') == '0'\nassert solution('''4\nmttt\nmttt\nmttt\nmttt''') == '0'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'T'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 'T'\nassert solution('T') == 'A'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"T\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\nassert solution('AACG') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"T\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nassert solution(\"U\") == \"U\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '14'\nassert solution('3 2 2 4 1') == '14'\nassert solution('1 2 2 2 1') == '14'\nassert solution('3 2 2 4 1') == '14'\nassert solution('1 2 2 2 1') == '14'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14'\n'''\n\nfrom collections import deque"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\nassert solution('''2\n3 2 2 4 1\n1 2 2 2 1\n''') == '11'\n'''"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 3\") == \"2\"\nassert solution(\"6\\n1 2 2 1 2 2\") == \"8\"\n\n\"\"\""
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '4'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '8'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n3 2 2 4 1') == '14'\nassert solution('1\\n1') == '1'\nassert solution('5\\n3 2 2 4 1') == '14'\nassert solution('1\\n1') == '1'\nassert solution('5\\n3 2 2 4 1') == '14'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '5\\n3 2 2 4 1\\n1 2 2 2 1'\n) == '14'\n\"\"\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"5\\n3 2 2 4 1\\n1 2 2 2 1\"\n) == \"14\"\n\"\"\"\n\nN = int(input())\n\nL = [int(x) for x in input().split()]\n\nl, r, d = 0, 0, 0\n\nfor i in range(N):\n    for j in range(N):\n        if i == 0 and j == 0:\n            continue\n        if i == 0:\n            l += L[j - 1]\n        if j == 0:\n            r += L[i - 1]\n        if i == 0 and j == N - 1:\n            d += L[j]\n        if j == N - 1:\n            l += L[j]\n        if i == N - 1:\n            r += L[i]\n        if i == N - 1 and j == N - 1:\n            d += L[j]\n\nprint(max(l, r, d))\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n0\") == \"1\"\nassert solution(\"1\\n1\") == \"2\"\nassert solution(\"1\\n2\") == \"3\"\nassert solution(\"2\\n1\") == \"3\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\") == \"1\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"3 3 3\") == \"2\"\nassert solution(\"3 3 2\") == \"1\"\nassert solution(\"3 2 3\") == \"2\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == 1\nassert solution('3 3 3') == 0\nassert solution('2 3 1') == 2\nassert solution('3 2 2') == 1\nassert solution('2 3 3') == 2\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n2 2 2') == '1'\nassert solution('10 7\\n2 5 7 2 4 5') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nfrom math import ceil\nfrom sys import stdin\nfrom typing import List\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3 3\n2 2 2\n''') == '1'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n2 2 2') == 1\nassert solution('3 3\\n2 2 2') == 2\nassert solution('3 3\\n2 2 1') == 2\nassert solution('3 3\\n2 2 1') == 3\nassert solution('3 3\\n2 2 2') == 4\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2 2 2\n''') == '1'\nassert solution('''10\n100 100 100 100 100 100 100 100 100 100 100 100\n''') == '7'\nassert solution('''5\n1 1 1 1 1\n''') == '0'\nassert solution('''0\n0 0 0 0 0\n''') == '0'\nassert solution('''1000\n100 1000 1000 100 1000 1000 1000 100 1000 1000 100 100 100 100 100 100 100 100 100 100 100 100 100 1000\n''') == '103'\n'''"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\nassert solution('1 0 1\\n1 0 1\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n1 0 1\\n1 0 1') == 'No'\nassert solution('1 0 1\\n1 0 1\\n1 0 1') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n\n'''\nsolution:\nuse recursion to implement the brute force. use a_1,a_2,a_3,b_1,b_2,b_3 as global variable to store the state of each index.\n'''\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('2 0 2\\n2 0 2\\n1 0 1') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n2 1 2') == 'No'\nassert solution('1 0 1\\n2 1 2\\n2 1 2') == 'No'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"2 1 2\") == \"No\"\nassert solution(\"1 0 1\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"2 2 2\") == \"No\"\nassert solution(\"1 0 1\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"2 1 2\") == \"No\"\nassert solution(\"1 0 1\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"1 0 0\") == \"No\"\nassert solution(\"0 0 0\") == \"Yes\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\"\"\"\n\nimport sys\n\nS = sys.stdin.readline().strip()"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ARC\") == \"ARC\"\nassert solution(\"ABC\") == \"ABC\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[::-1]\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ARC\") == \"ARC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABC\") == \"ABC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\nassert solution('ARC') == 'ARC'\nassert solution('ABC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"ARC\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\"\"\"\n\n\"\"\"\nABC \nARC\n\"\"\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABCabc') == 'ARC'\nassert solution('ARCabc') == 'ABC'\nassert solution('ABCabcabc') == 'ARC'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"4 10 2\") == \"3\"\nassert solution(\"4 9 2\") == \"0\"\nassert solution(\"5 4 2\") == \"3\"\nassert solution(\"5 10 2\") == \"3\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 4') == '0'\nassert solution('7 3 5') == '2'\nassert solution('100 200 1') == '4'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"2 2 1\") == \"0\"\nassert solution(\"3 6 6\") == \"3\""
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 8 2''') == '3'\nassert solution('''0 1 2''') == '0'\nassert solution('''0 0 1''') == '0'\nassert solution('''1 0 1''') == '1'\nassert solution('''0 0 1''') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 2') == '3'\nassert solution('2 7 2') == '2'\nassert solution('3 6 2') == '2'\nassert solution('3 6 2') == '2'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"5 4 2\") == \"0\"\nassert solution(\"5 8 2\") == \"3\"\nassert solution(\"1 1 1\") == \"1000\"\nassert solution(\"1 2 1\") == \"0\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 8 2''') == '3'\nassert solution('''4 8 3''') == '0'\nassert solution('''4 8 4''') == '2'\nassert solution('''4 8 5''') == '1'\nassert solution('''4 8 6''') == '0'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve Eve'\nassert solution('23') == 'Christmas Eve Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Christmas'"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Christmas\"\n\n\"\"\""
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('25') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('25') == ''\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('24') == 'Christmas Eve'\nassert solution('25') == 'Christmas'\n\nprint(solution(input()))"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Christmas'\nassert solution(input()) == 'Christmas Eve'\nassert solution(input()) == 'Christmas Eve Eve'\nassert solution(input()) == 'Christmas Eve Eve Eve'\nassert solution(input()) == 'Christmas Eve'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('10') == '1'\nassert solution('8') == '4'\nassert solution('9') == '2'\nassert solution('10') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('8') == '4'\nassert solution('12') == '6'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"3\\n\") == \"2\"\nassert solution(\"4\\n\") == \"1\"\nassert solution(\"5\\n\") == \"3\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'a'\nassert solution('abc') == 'a'\nassert solution('abcde') == 'a'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7') == 4\nassert solution('1') == 1\nassert solution('0') == 0\nassert solution('100') == 1\nassert solution('8') == 4\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('0 0 1 2') == 'Yes'\nassert solution('0 0 1 1') == 'No'\nassert solution('5 3 7 6') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"1 2 1 3\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"1 1 1 3\") == \"No\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 7 9 3') == \"Yes\"\nassert solution('3 8 5 1') == \"No\"\nassert solution('2 1 5 2') == \"Yes\"\nassert solution('2 2 3 1') == \"No\"\nassert solution('2 1 1 1') == \"No\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 7 9 3') == \"Yes\"\nassert solution('2 1 1 3') == \"No\"\nassert solution('1 1 1 1') == \"Yes\"\nassert solution('1 1 1 2') == \"No\"\nassert solution('1 2 1 1') == \"No\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 10 3') == 'No'\nassert solution('10 2 3 4') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('10 6 9 1') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 3') == 'No'\nassert solution('4 7 9 3') == 'Yes'\nassert solution('1 0 0 1') == 'Yes'\nassert solution('1 0 0 1') == 'Yes'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n\"\"\"\n\ns1,s2,s3 = stdin.split()\n\nprint(s1[0].upper()+s2[0].upper()+s3[0].upper())\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n'''"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"ABC\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\""
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('python c sharp java') == 'CPJ'\nassert solution('A B C') == 'ABC'\nassert solution('qwerty') == 'QWER'\nassert solution('abcd') == 'ABCD'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('ab') == 'ab'\nassert solution('abc') == 'ABC'\nassert solution('a bc') == 'ABC'\nassert solution('a b c') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('abc abc abc') == 'ABC'\nassert solution('ab ab ab') == 'AB'\nassert solution('abc') == 'ABC'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 50 10') == 'No'\nassert solution('50 100 10') == 'Yes'\nassert solution('50 10 10') == 'Yes'\nassert solution('100 10 10') == 'No'\nassert solution('100 10 100') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('40 60 70') == 'No'\nassert solution('20 30 50') == 'No'\nassert solution('60 60 60') == 'No'\nassert solution('300 300 300') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('45 85 120') == 'No'\nassert solution('4 4 9') == 'Yes'\nassert solution('5 5 100') == 'No'\nassert solution('50 100 150') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '50 100 120\\n') == 'Yes'\nassert solution(\n    '50 50 50\\n') == 'No'\nassert solution(\n    '400 300 500\\n') == 'No'\nassert solution(\n    '80 90 10\\n') == 'Yes'\nassert solution(\n    '60 30 10\\n') == 'No'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split(\" \")[2]\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 130') == 'No'\n\"\"\""
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('50 100 120') == 'No'\nassert solution('50 100 100') == 'No'\nassert solution('100 10 100') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 120 120\") == \"Yes\"\nassert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"500 500 500\") == \"No\"\nassert solution(\"50 100 50\") == \"No\""
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('50 100 120') == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nassert solution('1 2 3 4') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n1\\n2') == '0'\nassert solution('3\\n1\\n2\\n3') == '0'\nassert solution('3\\n1\\n2\\n3\\n4') == '0'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 8') == '5'\nassert solution('7 8') == '5'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"7 9 8 9\") == \"5\"\nassert solution(\"7 9 8 9 7\") == \"5\"\nassert solution(\"7 9 8 9 7 7\") == \"5\"\nassert solution(\"7 9 8 9 7 7 7\") == \"5\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output_m\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 8\") == 5\nassert solution(\"4 10\") == 1\nassert solution(\"6 7 8 9 10 11 12\") == 4\nassert solution(\"7 9 8 9 10 11 12 13 14 15 16 17 18 19\") == 7\nassert solution(\"8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == 1\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 8''') == '5'\nassert solution('''7 9 8 9''') == '5'\nassert solution('''3 4''') == '2'\nassert solution('''4 4''') == '3'\nassert solution('''3 5''') == '0'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nprint(solution(stdin))\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4') == '4 2 1 3'\nassert solution('3 2 1 1') == '1 2 3'\nassert solution('1 2 2 1') == '1 2'\nassert solution('2 2 2 1') == '2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"2 3 1\") == \"2 1 3\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\nassert solution(\"1 1 2 3\") == \"3 2 1\"\nassert solution(\"1 1 2 3 4\") == \"4 2 1 3\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\nassert solution('5\\n1 2 3 4 5') == '5 4 3 2 1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10 11') == '11 10 9 8 7 6 5 4 3 2 1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1 2 3 4 5 6 7 8 9 10 11 12'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('1 2 3 4 4 5 6 7 8 9 10') == '10 9 8 7 6 5 4 3 2 1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13') == '13 11 12 10 9 8 7 6 5 4 3 2 1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50') == '37 31 30 28 25 22 21 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '64 63 62 61 58 56 54 53 42 40 38 37 31 30 29 28 25 22 21 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == '4 2 1 3'\n\nassert solution(\n\"\"\"\n3\n1 4 2\n\"\"\"\n) == '3 2 4 1'\n\nassert solution(\n\"\"\"\n2\n2\n3\n\"\"\"\n) == '2 2 3'\n\nassert solution(\n\"\"\"\n5\n5\n1\n2\n3\n4\n5\n\"\"\"\n) == '5 1 2 3 4'\n\nassert solution(\n\"\"\"\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n\"\"\"\n) == '2 2 2 2 2'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4 2 1 3'\nassert solution('2\\n1\\n3\\n4') == '4 2 1 3'\nassert solution('3\\n4\\n1\\n2') == '4 2 1 3'\nassert solution('4\\n3\\n2\\n1') == '4 3 2 1'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '5 4 3 2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\nassert solution('5\\n1 2 3 4 5') == '5 2 1 3 4'\nassert solution('6\\n1 2 3 4 5 6') == '6 2 1 3 4 5'\nassert solution('7\\n1 2 3 4 5 6 7') == '7 2 1 3 4 5 6'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '8 2 1 3 4 5 6 7'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4\\n') == '4 2 1 3'\nassert solution('4\\n1 2 3 4\\n') == '4 2 1 3'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('10 3\\n4 5 6\\n9 8 7') == 'No'\nassert solution('10 1\\n1') == 'Yes'\nassert solution('1 2\\n1') == 'No'\nassert solution('1 2\\n2') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 3\n4 5 6''') == 'No'\nassert solution('''10 100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30''') == 'Yes'\nassert solution('''10 100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30''') == 'No'\nassert solution('''10 30\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30''') == 'No'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 3\\n4 5 6') == \"Yes\"\nassert solution('10 3\\n4 5 6\\n4 6') == \"No\"\nassert solution('10 3\\n4 5 6\\n4 5') == \"No\"\n\n'''\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''10 3\n4 5 6'''\n) == 'Yes'\n\nassert solution(\n'''10 10\n1 1 1 1 1 1 1 1 1 1 1 1 1'''\n) == 'No'\n\nassert solution(\n'''10 3\n1 2 3'''\n) == 'Yes'\n\nassert solution(\n'''10 3\n1 2 3'''\n) == 'Yes'\n\nassert solution(\n'''10 10\n1 2 3 4 5 6 7 8 9 10'''\n) == 'No'"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''10 3\n4 5 6''') == \"Yes\"\nassert solution(\n    '''10 3\n4 5 6''') == \"No\"\nassert solution(\n    '''10 5\n1 2 3 4 5''') == \"Yes\"\nassert solution(\n    '''10 5\n1 2 3 4 5''') == \"No\"\nassert solution(\n    '''100 1\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1010 10 10\n\n    # 1346 17\n    # 5 2\n    # 1 3 1\n    # 5 2\n    # 1 3 1\n    # 4 1\n    # 3 3 1\n    # 4 1\n    # 2 3 1\n    # 3 3 1\n    # 2 3 1\n    # 2 3 1\n    # 4 1\n    # 3 3 1\n    # 4 1\n    # 3 3 1\n    # 4 1\n    # 3 3 1\n    # 3 3 1\n    # 2 3 1\n    # 2 3 1\n    # 3 3 1\n    # 3 3 1\n    # 2 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 4 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 2 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1\n    # 3 3 1"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 2\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"No\"\nassert solution(\"2 3\") == \"Yes\"\nassert solution(\"1 7\") == \"Yes\"\nassert solution(\"2 3\") == \"Yes\"\nassert solution(\"5 2\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 3\n4 5 6''') == 'No'\nassert solution('''5 3\n1 2 1\n1 3 1''') == 'No'\nassert solution('''5 3\n1 2 1\n1 3 1''') == 'Yes'\nassert solution('''10 3\n3 4 1\n2 2 1''') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n10 3\n4 5 6\n''') == 'Yes'\n\nassert solution(\n'''\n10 5\n4 5 6\n''') == 'No'\n\nassert solution(\n'''\n10 4\n4 5 6\n''') == 'No'\n\nassert solution(\n'''\n10 5\n5 1 3 2\n''') == 'Yes'\n\nassert solution(\n'''\n10 5\n5 1 3 2\n''') == 'Yes'"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"6\"\nassert solution(\"abaababa\") == \"6\"\nassert solution(\"abaabab\") == \"6\"\nassert solution(\"abaaba\") == \"6\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '2'\nassert solution('abaababa') == '2'\nassert solution('abaabab') == '2'\nassert solution('abaaba') == '2'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[::-1]\n\"\"\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ababaab') == '6'\nassert solution('abcabc') == '6'\nassert solution('abcabcabc') == '6'\nassert solution('abcabcabcabc') == '8'\nassert solution('abababab') == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '6'\nassert solution('abaababa') == '6'\nassert solution('abaabab') == '6'\nassert solution('abaaba') == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ababab') == '6'\nassert solution('ababab') == '7'\nassert solution('abaababaab') == '6'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '26'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '26'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '4'\nassert solution('abaababa') == '6'\nassert solution('abaabab') == '6'\nassert solution('abaaba') == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abc') == 'abc'\nassert solution('ab') == 'ab'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('xyzxyzxyzxyz') == 'xyzxyzxyzxyz'\nassert solution('abcdefg') == 'abcdefg'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '1'\nassert solution('abaabab') == '1'\nassert solution('abaabab') == '1'\nassert solution('aaa') == '1'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bca') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('aab') == 'Yes'\nassert solution('abb') == 'No'"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('bca') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"bca\") == \"No\"\nassert solution(\"cab\") == \"No\"\nassert solution(\"bac\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('cba') == 'No'\nassert solution('bac') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"bac\") == \"Yes\"\nassert solution(\"bac\") == \"Yes\"\nassert solution(\"bac\") == \"Yes\"\nassert solution(\"bac\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"baa\") == \"No\"\nassert solution(\"bac\") == \"Yes\"\nassert solution(\"acb\") == \"No\"\nassert solution(\"bac\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abac') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('cba') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abac') == 'Yes'\nassert solution('cab') == 'No'\nassert solution('bcab') == 'Yes'\nassert solution('bac') == 'No'\nassert solution('acb') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\nprint(\"tests passed\")\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1000000\\n1000000') == '757402647'\nassert solution('2\\n1 3\\n4 2\\n') == '20'\nprint(solution(''))\nprint(solution('1\\n1000000\\n1000000'))\nprint(solution('2\\n1 3\\n4 2\\n'))\n\n\n-----"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1000000\\n1000000') == '757402647'\nassert solution('2\\n1 3\\n4 2') == '20'\nassert solution('3\\n1 2\\n4 3') == '200'\nassert solution('4\\n1 2\\n3 4') == '10'\nassert solution('5\\n1 2 3 4 5') == '6'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '20'\nprint('solution: \"20\"')\nassert solution(stdin) == '646'\nprint('solution: \"646\"')\nassert solution(stdin) == '757402647'\nprint('solution: \"757402647\"')\nassert solution(stdin) == '20'\nprint('solution: \"20\"')\n\n-----------------------------------------------------------------------------------\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '4'\nassert solution('10\\n99999\\n1000000') == '1000000'"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3''') == '646'\nassert solution('''1\n1000000\n1000000''') == '757402647'\nassert solution('''2\n1 3\n4 2''') == '20'\nassert solution('''2\n1000000\n1000000''') == '757402647'"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\n\nprint('solution() passed')"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\nassert solution('''1\n1000000000\n1000000000\n''') == '757402647'\nassert solution('''4\n100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000''') == '757402647'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1000000\\n1000000\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\") == \"20\"\nassert solution(\"3\\n1 2 3\\n4 2 3\") == \"4\"\nassert solution(\"4\\n1 2 3 4\\n4 2 3 1\") == \"0\"\nassert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\") == \"646\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"7 4 5\"\"\") == \"7\"\nassert solution(\"\"\"9 4 8\"\"\") == \"17\"\nassert solution(\"\"\"5 1 4\"\"\") == \"17\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1'''\n) == '17'\nassert solution(\n'''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7'''\n) == '17'\nassert solution(\n'''5 1 4\n2 5 7 4 6\n5 4\n'''\n) == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '7'\n\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\n\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n\n\n\n\"\"\""
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1\\n1 2 1\\n4 2 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '17'\nassert solution('3 3 1\\n1 2 1\\n1 2 1\\n1 2 1\\n4 2 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '17'\nassert solution('3 3 1\\n1 2 1\\n1 2 1\\n1 2 1\\n4 2 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '17'\nassert solution('2 4 1\\n1 2 1\\n1 2 1\\n4 2 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '17'\nassert solution('3 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n1 2\\n4 2\\n4 2\\n3 2\") == \"17\"\nassert solution(\"3\\n1 2\\n1 2\\n4 2\\n4 2\\n4 2\") == \"17\"\nassert solution(\"9\\n6 8\\n5 3\\n9 7\\n1 2\\n1 2\\n1 2\\n1 2\") == \"17\"\nassert solution(\"7\\n6 8\\n5 3\\n9 7\\n1 2\\n1 2\\n1 2\\n1 2\") == \"17\"\nassert solution(\"1\\n2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\") == \"17\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 3 2\") == \"17\"\nassert solution(\"2 5 4 2 6 3 1\") == \"7\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"\nassert solution(\"3 3 2\") == \"7\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n\") == \"1\"\nassert solution(\"2\\n2\\n\") == \"1\"\nassert solution(\"3\\n3\\n\") == \"3\"\nassert solution(\"2\\n2\\n2\\n\") == \"3\"\nassert solution(\"3\\n3\\n3\\n\") == \"6\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\n\nassert solution(\n'''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\n\nassert solution(\n'''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == '1'\n\nassert solution(\n'''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == '1'\n\nassert solution(\n'''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n2 1\n1 3\n''') == '2'"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '0'\nassert solution('''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7''') == '1'\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '1'\nassert solution('''7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 8\n2 9\n3 10\n3 11\n4 12\n4 13\n4 14\n4 15\n5 16\n5 17\n6 18\n6 19\n6 20\n6 21\n7 22\n7 23\n7 24\n7 25\n8 26\n8 27\n9 28\n9 29\n9 30\n9 31\n10 32\n10 33\n10 34\n10 35\n11 36\n11 37\n11 38\n11 39\n11 40\n11 41\n12 42\n12 43\n12 44\n12 45\n12 46\n12 47\n13 48\n13 49\n13 50\n13 51\n14 52\n14 53\n14 54\n14 55\n15 56\n15 57\n15 58\n15 59\n15 60\n15 61\n16 62\n16 63\n16 64\n16 65\n17 66\n17 67\n17 68\n17 69\n17 70\n18 71\n18 72\n18 73\n18 74\n18 75\n19 76\n19 77\n19 78\n19 79\n19 80\n19 81\n20 82\n20 83\n20 84\n20 85\n20 86\n20 87\n20 88\n20 89\n20 90\n20 91\n20 92\n20 93\n20 94\n20 95\n20 96\n20 97\n20 98\n20 99\n20 100\n21 101\n21 102\n21 103\n21 104\n21 105\n21 106\n21 107\n21 108\n21 109\n21 110\n21 111\n21 112\n21 113\n21 114\n21 115\n21 116\n21 117\n21 118\n21 119\n21 120\n21 121\n21 122\n21 123\n21 124\n21 125\n21 126\n21 127\n21 128\n21 129\n21 130\n21 131\n21 132\n21 133\n21 134\n21 135\n21 136\n21 137\n21 138\n21 139\n21 140\n21 141\n21 142\n21 143\n21 144\n21 145\n21 146\n21 147\n21 148\n21 149\n21 150\n21 151\n21 152\n21 153\n21 154\n21 155\n21 156\n21 157\n21 158\n21 159\n21 160\n21 161\n21 162\n21 163\n21 164\n21 165\n21 166\n21 167\n21 168\n21 169\n21 170\n21 171\n21 172\n21 173\n21 174\n21 175\n21 176\n21 177\n21 178\n21 179\n21 180\n21 181\n21 182\n21 183\n21 184\n21 185\n21 186\n21 187\n21 188\n21 189\n21 190\n21 191\n21 192\n21 193\n21 194\n21 195\n21 196\n21 197\n21 198\n21 199\n21 200\n21 201\n21 202\n21 203\n21 204\n21 205\n21 206\n21 207\n21 208\n21 209\n21 210\n21 211\n21 212\n21 213\n21 214\n21 215\n21 216\n21 217\n21 218\n21 219\n21 220\n21 221\n21 222\n21 223\n21 224\n21 225\n21 226\n21 227\n21 228\n21 229\n21 230\n21 231\n21 232\n21 233\n21 234\n21 235\n21 236\n21 237\n21 238\n21 239\n21 240\n21 241\n21 242\n21 243\n21 244\n21 245\n21 246\n21 247\n21 248\n21 249\n21 250\n21 251\n21 252\n21 253\n21 254\n21 255\n21 256\n21 257\n21 258\n21 259\n21 260\n21 261\n21 262\n21 263\n21 264\n21 265\n21 266\n21 267\n21 268\n21 269\n21 270\n21 271\n21 272\n21 273\n21 274\n21 275\n21 276\n21 277\n21 278\n21 279\n21 280\n21 281\n21 282\n21 283\n21 284\n21 285\n21 286\n21 287\n21 288\n21 289\n21 290\n21 291\n21 292\n21 293\n21 294\n21 295\n21 296\n21 297\n21 298\n21 299\n21 300\n21 301\n21 302\n21 303\n21 304\n21 305\n21 306\n21 307\n21 308\n21 309\n21 310\n21 311\n21 312\n21 313\n21 314\n21 315\n21 316\n21 317\n21 318\n21 319\n21 320\n21 321\n21 322\n21 323\n21 324\n21 325\n21 326\n21 327\n21 328\n21 329\n21 330\n21 331\n21 332\n21 333\n21 334\n21 335\n21 336\n21 337\n21 338\n21 339\n21 340\n21 341\n21 342\n21 343\n21 344\n21 345\n21 346\n21 347\n21 348\n21 349\n21 350\n21 351\n21 352\n21 353\n21 354\n21 355\n21 356\n21 357\n21 358\n21 359\n21 360\n21 361\n21 362\n21 363\n21 364\n21 365\n21 366\n21 367\n21 368\n21 369\n21 370\n21 371\n21 372\n21 373\n21 374\n21 375\n21 376\n21 377\n21 378\n21 379\n21 380\n21 381\n21 382\n21 383\n21 384\n21 385\n21 386\n21 387\n21 388\n21 389\n21 390\n21 391\n21 392\n21 393\n21 394\n21 395\n21 396\n21 397\n21 398\n21 399\n21 400\n21 401\n21 402\n21 403\n21 404\n21 405\n21 406\n21 407\n21 408\n21 409\n21 410\n21 411\n21 412\n21 413\n21 414\n21 415\n21 416\n21 417\n21 418\n21 419\n21 420\n21 421\n21 422\n21 423\n21 424\n21 425\n21 426\n21 427\n21 428\n21 429\n21 430\n21 431\n21 432\n21 433\n21 434\n21 435\n21 436\n21 437\n21 438\n21 439\n21 440\n21 441\n21 442\n21 443\n21 444\n21 445\n21 446\n21 447\n21 448\n21 449\n21 450\n21 451\n21 452\n21 453\n21 454\n21 455\n21 456\n21 457\n21 458\n21 459\n21 460\n21 461\n21"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == answer\n\"\"\""
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n1 2\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\nassert solution(\"1\\n2\\n1 3\\n3 2\\n\") == \"1\"\nassert solution(\"3\\n2\\n2 1\\n1 3\\n3 2\\n\") == \"1\"\nassert solution(\"10\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n5 8\\n6 7\\n6 8\\n6 9\\n7 8\\n7 9\\n7 10\\n\") == \"2\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5\\n4 6\\n4 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n4 6\\n4 7') == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '2'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"1\"\n\n\"\"\"\n\n\"\"\"\n-----------------------------------------------------------------------\n\"\"\""
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n') == '1'\n\n\n\n\"\"\""
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n3') == '4'\nassert solution('3\\n5') == '6'\nassert solution('3\\n3') == '4'\nassert solution('5\\n3') == '6'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '15\\n1999999999\\n113\\n1000000001'\nassert solution(stdin) == '10\\n1000000000\\n1'\nassert solution(stdin) == '1999999999\\n113\\n1000000001'\nassert solution(stdin) == '15\\n1999999999\\n113\\n1000000001'\nassert solution(stdin) == '10\\n1000000000\\n1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2'\nassert solution('3 7') == '4'\nassert solution('4 12') == '5'\nassert solution('2 1000000000') == '3'\nassert solution('7 97') == '8'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '3'\nassert solution('1\\n1\\n') == '2'\nassert solution('1\\n2\\n3\\n') == '4'\nassert solution('1\\n2\\n3\\n4\\n') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '6'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '2'\nassert solution('1\\n2\\n') == '3'\nassert solution('1\\n2\\n3\\n') == '4'\nassert solution('1\\n2\\n3\\n4\\n') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '6'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n'\n'''\nThe first test case should be\n\n10\n15\n1999999999\n113\n1000000001\n1\n\nThe second test case should be\n\n3\n4\n2\n1000000000\n7\n1000000000\n2 1\n'''\nassert solution('''3\n3 3\n2 5\n1 1000000000\n1 1\n2 1\n''') == '4\\n5\\n7\\n1\\n2\\n'\n'''\nThe last test case should be\n\n3\n3\n2\n1\n1\n1\n'''\nassert solution('''3\n1 1\n2 1\n1 1\n2 1\n1 1\n''') == '1\\n1\\n2\\n'\n'''\nThe first test case should be\n\n3\n3\n2\n1\n1\n1\n'''\nassert solution('''1\n3 1\n2 1\n1 1\n2 1\n1 1\n''') == '2\\n'\n'''\nThe second test case should be\n\n3\n3\n2\n1\n1\n1\n'''\nassert solution('''1\n1 1\n2 1\n1 1\n2 1\n1 1\n''') == '2\\n'\n'''\nThe third test case should be\n\n2\n3\n2\n1\n1\n1\n'''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '4'\nassert solution('2 4') == '6'\nassert solution('1 1') == '3'\nassert solution('1 1') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n\nassert solution('''1\n2 3\n5 6\n7 8''') == '3'\n\nassert solution('''1\n2 3\n5 6\n7 8\n3 9\n5 10\n9 11\n7 12''') == '9'\n\nassert solution('''1\n2 3\n5 6\n7 8\n3 9\n5 10\n9 11\n7 12\n5 13\n9 14\n7 15\n5 16''') == '9'\n\nassert solution('''1\n2 3\n5 6\n7 8\n3 9\n5 10\n9 11\n7 12\n5 13\n9 14\n7 15\n5 16\n2 17\n5 18\n9 19\n7 20''') == '9'"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 1') == '2'\nassert solution('2 3') == '3'\nassert solution('2 3') == '4'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == 2\nassert solution('1 2 3') == 3\nassert solution('1 2 3 4 5 6') == 3\nassert solution('6 7') == 10\nassert solution('2 1000000000') == 100000000\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\nfrom itertools import count"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\nassert solution('4 1') == '1'\nassert solution('8 2') == '2'\nassert solution('4 1') == '1'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"2 3 3 1 1 2 1 2 3 3\") == \"2 1 3\"\n\n\n\n\"\"\"\n\nimport sys\n\ninput_data = sys.stdin.read()\nn, k = tuple(map(int, input_data.split()))\nids = tuple(map(int, input_data.split()))\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''1''') == '1'\nassert solution('''10 10\n2 3 3 1 1 2 1 2 3 3''') == '0'\nassert solution('''5 10\n4 5 6 4 1 2 3 4 5 6 7''') == '2'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\n\n\n\"\"\""
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"263\"\nassert solution(\"10\") == \"263\"\nassert solution(\"100\") == \"263\"\nassert solution(\"1000\") == \"263\"\nassert solution(\"10000\") == \"263\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == ''\nassert solution('''3''') == ''\nassert solution('''1 6''') == '1'\nassert solution('''1 7''') == '1'\nassert solution('''1 5''') == '1'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n'''\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3\\n1 2\\n1 4\\n2\\n1 1\\n1 2\\n1 3') == '100'\nassert solution('3\\n1 2\\n1 3\\n1 4\\n2\\n1 1\\n1 2\\n1 3\\n1 4') == '200'\nassert solution('3\\n1 1\\n1 1\\n1 1\\n2\\n1 3\\n1 4\\n1 5\\n1 5\\n1 3\\n1 4\\n1 2') == '190'\nassert solution('3\\n1 1\\n1 1\\n1 1\\n2\\n1 3\\n1 4\\n1 5\\n1 5\\n1 3\\n1 4\\n1 2\\n1 1') == '280'\n\n\n\n-----\n\n\n\"\"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100') == '263'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '263'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n'''\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\nassert solution('3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1') == '263'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n1\\n2\") == \"2\"\nassert solution(\"4\\n1\\n1\\n1\\n1\") == \"20\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"2\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''abacaba''') == '3'\nassert solution(\n'''dfcbbcfeeedbaea''') == '5'\nassert solution(\n'''abcdeeeabcdab''') == '1'\nassert solution(\n'''abcdefghij''') == '6'\nassert solution(\n'''abcdefghijklmnopqrstuvwxyz''') == '26'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\nassert solution('eabdcffg') == '3'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '26'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"bacaba\"\nassert solution(\"dfcbbcfeeedbaea\") == \"eebaeba\"\nassert solution(\"hijklmmn\") == \"lmno\"\nassert solution(\"pqrstuvwxyz\") == \"vwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abacaba''') == '''3'''\nassert solution('''dfcbbcfeeedbaea''') == '''5'''\nassert solution('''cba''') == '''2'''\nassert solution('''dcbbdcacdbd''') == '''7'''\nassert solution('''yzabzxcvzx''') == '''4'''\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abcabcd\") == \"a1b2c2d\"\nassert solution(\"abc\") == \"a1b2c3\"\nassert solution(\"abcdefgh\") == \"a1b2c3d4e5f6g\"\nassert solution(\"abcdefghijklmnop\") == \"a1b2c3d4e5f6g8\"\nassert solution(\"pqrstuvwxyz\") == \"p1q2r3t4u5v6w6x6y7u8v9\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcdef') == 'abcdef'\nassert solution('abacaba') == 'aabaac'\nassert solution('dfcbbcfeeedbaea') == 'eeaadb'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'aefghjklmnopqrstuvwxyz'\nassert solution('a a a a a a') == 'a a a a a a'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\nassert solution('dfcbbcfeeedbaea') == '5'\nassert solution('codeforces') == '4'\nassert solution('coder') == '0'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input\").read()) == open(\"test_output\").read()\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('a') == 'a'\nassert solution('abc') == 'c'\nassert solution('abcde') == 'e'\nassert solution('abcdef') == 'f'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''\n29145399\n45346570\n25752672\n730835203\n53945003\n47581606\n383840948\n858979251\n153326506\n''') == '291453598\\n45346570\\n25752672\\n73385203\\n53945049\\n47581606\\n383840948\\n858987562\\n153326531'\nassert solution('''\n513306831\n574612932\n849109627\n397420929\n737455863\n819248966\n384793315\n372922957\n239808064\n''') == '574612932\\n849109627\\n397420929\\n372922957\\n737455863\\n819248982\\n384793315\\n372922957\\n239808064'\nassert solution('''\n909338895\n562459754\n794417265\n893601299\n998329244\n194817750\n702068116\n912364099\n437309587\n''') == '909338895\\n562459754\\n794417265\\n893601299\\n998329244\\n194817750\\n702068116\\n912364099\\n437309587'\nassert solution('''\n575757395\n957619909\n946990425\n465596608\n131077608\n476266769\n560948808\n291859673\n632391653\n''') == '575757395\\n957619909\\n946990425\\n465596608\\n131077608\\n476266769\\n560948808\\n291859673\\n632391653'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nprint(solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\"))\n\n\n\n-----Best Speed-----\n\n---6.1%---\n\n-----Author---\n\n__[Rahul Bhattacharyya](rahulbhattacharyya47@gmail.com)__\n\n\"\"\"\n\n\"\"\"\n\nExplanation:\n\nFirst, we find the largest possible number of elements that can be replaced,\ngiven the constraints. We can replace elements by any number that is\nin range [1, 9]. Then, for each row, we find the largest possible number of\nelements that can be replaced. This is the same as finding the largest\npossible number of elements in any sub-grid, and then multiple this with the\nrow count.\n\nWe then find the largest possible number of elements that can be replaced\nin column. We repeat the above step for column.\n\nFinally, we calculate the largest possible number of elements that can be\nreplaced in block. We then multiply this by the block count.\n\nWe repeat this for all possible starting positions.\n\nFinally, we find the largest possible number of elements that can be replaced\nin the final field.\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n766657439''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n766657439'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n430910369''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n430910369'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n671038370''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n430910369'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n671038370\n120951872''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n430910369\\n120951872'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n1245319874\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n'''\n    ) == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\n\nassert solution(\n'''\n1\n1423880167\n4258689368\n5437856116\n7243869977\n9473618476\n2088922563\n4664652974\n4610963249\n0369242904\n'''\n    ) == '036924292\\n4664652974\\n4610963249\\n4610963249\\n4664652974\\n4664652974\\n4610963249\\n4610963249\\n4610963249\\n'\n\nassert solution(\n'''\n2\n1423880167\n4258689368\n5437856116\n7243869977\n9473618476\n2088922563\n4664652974\n4610963249\n0369242904\n'''\n    ) == '036924292\\n4610963249\\n4664652974\\n4664652974\\n4610963249\\n4610963249\\n4610963249\\n4610963249\\n'\n\nassert solution(\n'''\n5\n1423880167\n4258689368\n5437856116\n7243869977\n9473618476\n2088922563\n4664652974\n4610963249\n0369242904\n'''\n    ) == '036924292\\n4610963249\\n4664652974\\n4664652974\\n4610963249\\n4610963249\\n4610963249\\n4610963249\\n'\n\nassert solution(\n'''\n5\n0905705063\n0219181601\n0877696987\n0953771449\n0048707225\n5347879313\n0891658796\n1514180700\n0073032700\n'''\n    ) == '037931338\\n0953771449\\n0073032700\\n0073032700\\n0953771449\\n0073032700\\n0048707225\\n5347879313\\n0953771449\\n'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n793564564''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n8793564564''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n793564564\n298878248''') == '154873396'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n793564564\n298878248\n8793564564''') == '154873396'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3\\n6\\n8\\n-1\\n9\\n4'\n\n'''\n\n'''"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 3 5 3 5 7\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\"\nassert solution(\"2 2\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\nassert solution('''3 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 6') == '6'\nassert solution('3 6') == '3'\nassert solution('1 1 1 3 5 3 5 7') == '3'\nassert solution('1 1 1 3 5 3 5 7 8 9 10 11') == '3'\nassert solution('1 1 1 3 5 3 5 7 9 9 9 9 9 9') == '3'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"8\"\nassert solution(\"2 2 2 3 3 4 5 6 7 8 9 10\") == \"8\"\nassert solution(\"2 3 1 4 3 2 5 3 6 7 8 9 10\") == \"8\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n') == '3\\n6\\n8\\n-1\\n9\\n4'\n\n\"\"\"\n\nimport sys\nsys.path.insert(0, '..')\nfrom utilities import *"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == \"3\\n6\\n8\\n-1\\n9\\n4\"\nassert solution('''2 2\n1 2\n2 1\n2 1\n3 1\n2 1\n2 1\n2 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n3 1\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''3\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''6\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n4 2 1 1000000000\n10 19 15 14\n101 101 101 3''') == 'NO'\nassert solution('''9\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n4 2 1 1000000000\n10 19 15 14\n101 101 101 3\n7 2 1 1000000000\n10 19 15 14\n101 101 101 3''') == 'YES'\nassert solution('''7\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n4 2 1 1000000000\n10 19 15 14\n101 101 101 3\n5 2 1 1000000000\n10 19 15 14\n101 101 101 3''') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''3\n2 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == 'YES'\nassert solution('''10\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1\n9 2 1 1''') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == \"YES\"\n'''\n\n'''\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1234') == None\nassert solution('12345') == None\nassert solution('123456') == None\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('t=5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n1 2 4 3 4') == 'YES'\nassert solution('t=1\\n10 2 1 1000000000\\n10 2 1 1000000000\\n10 2 1 1000000000\\n10 2 1 1000000000\\n10 2 1 1000000000\\n10 2 1 1000000000\\n10 2 1 1000000000') == 'NO'\nassert solution('t=2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 'NO'\nassert solution('t=4\\n2 2 1 1 1\\n2 2 1 1 1\\n2 2 1 1 1\\n2 2 1 1 1') == 'YES'\nassert solution('t=7\\n2 2 1 1 1 1 1 1 1\\n2 2 1 1 1 1 1 1 1\\n2 2 1 1 1 1 1 1 1\\n2 2 1 1 1 1 1 1 1\\n2 2 1 1 1 1 1 1 1\\n2 2 1 1 1 1 1 1 1\\n2 2 1 1 1 1 1 1 1') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\n\nassert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n100 101 101 3''') == 'NO'\n\nassert solution(\n'''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == 'YES'\n\nassert solution(\n'''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == 'NO'\n\nassert solution(\n'''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == 'YES'"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5 1 1 1') == 'NO'\nassert solution('1\\n5 1 2 1') == 'YES'\nassert solution('1\\n1 1 1 1') == 'NO'\nassert solution('1\\n1 1 1 2') == 'YES'\nassert solution('1\\n1 2 2 1') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('inputs/sample0') == 'YES'\nassert solution('inputs/sample1') == 'YES'\nassert solution('inputs/sample2') == 'NO'\nassert solution('inputs/sample3') == 'NO'\nassert solution('inputs/sample4') == 'YES'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == ''\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 1 1 2 2 2 2 2 2\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2 2\\n') == '3 3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\nassert solution('4 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '9 8 12 6 8'\n\n\n\n\n\n'''\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\nassert solution(\"5 7\\n2 1 5 3 5 7 5 3 1\\n\") == \"10 9 19 19 19 19 19 19 19 19 19\""
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3 4 6 5\"\n\"\"\""
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"2 1 5 3 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\n\n\n\"\"\"\nfrom bisect import bisect_left\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1 1 2 2 2 2 2 2') == '3 3'\nassert solution('5 5') == '9 8 12 6 8'\nassert solution('2 10') == '3 3'\nassert solution('1 2 1 1 2 2 2 2 2 2') == '3 3'\nassert solution('5 5') == '9 8 12 6 8'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"2\\n5\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"9 8 12 6 8\"\nassert solution(\"3\\n5\\n1 2 1 1 2 2 2 2 2\\n\") == \"3 3\"\nassert solution(\"4\\n10\\n1 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n\") == \"9 8 12 6 8\""
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'\nassert solution('''10 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '5 5'\nassert solution('''10 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '9 8 12 6 8'"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\") == \"NO\\nNO\\nYES\\nNO\\nYES\"\nassert solution(\"5\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\") == \"NO\\nNO\\nNO\\nYES\\nNO\"\nassert solution(\"4\\n1 2\\n1 3\\n1 4\\n2 4\") == \"NO\\nNO\\nNO\\nNO\"\nassert solution(\"6\\n1 2\\n2 3\\n2 4\\n2 5\\n3 5\") == \"NO\\nNO\\nNO\\nNO\\nNO\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\") == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 3\n3 2\n3 4\n2 4''') == 'YES\\nYES\\nYES\\nYES'\n\nassert solution('''4 4\n1 2\n1 3\n1 4\n2 3\n3 2\n3 4\n2 4''') == 'YES\\nYES\\nYES\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n'''\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''10 10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\nassert solution(\n'''\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\nassert solution(\n'''\n3 2\n2 1\n1 2\n2 1\n''') == 'YES\\nYES\\nYES\\n'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2\\n1 2\") == \"NO\"\nassert solution(\"5 5\\n1 2\\n2 1\\n2 3\\n3 4\\n3 2\\n3 4\\n4 5\\n4 3\\n4 2\\n4 1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n1 1\") == \"YES\"\nassert solution(\"5 5\\n1 2\\n2 1\\n2 3\\n3 4\\n3 2\\n3 4\\n4 5\\n4 3\\n4 2\\n4 1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n1 1\") == \"NO\"\nassert solution(\"5 5\\n1 2\\n2 1\\n2 3\\n3 4\\n3 2\\n3 4\\n4 5\\n4 3\\n4 2\\n4 1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n1 1\") == \"YES\"\nassert solution(\"5 5\\n1 2\\n2 1\\n2 3\\n3 4\\n3 2\\n3 4\\n4 5\\n4 3\\n4 2\\n4 1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n1 1\") == \"NO\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2 1\\n1 2\\n2 3\") == \"NO\\nYES\"\nassert solution(\"3 4\\n2 1\\n1 2\\n2 3\") == \"NO\\nNO\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"YES\\nNO\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"NO\\nNO\"\nassert solution(\"3 3\\n2 1\\n1 2\\n2 3\\n3 1\") == \"NO\\nNO\\nYES\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nn, m = [int(x) for x in stdin.split(' ')]\nedges = []\nfor _ in range(n-1):\n    a, b = [int(x) for x in stdin.split(' ')]\n    edges.append([a, b])\n    edges.append([b, a])\n\nfor _ in range(m):\n    k = int(stdin.split(' ')[0])\n    vertices = [int(x) for x in stdin.split(' ')[1:]]\n    unique_vertices = set(vertices)\n\n    unique_vertices.remove(1)\n    unique_vertices.add(0)\n    vertices = list(unique_vertices)\n\n    if not len(vertices) == k:\n        print(\"NO\")\n        continue\n    if edges[0][0] == 1:\n        print(\"YES\")\n        continue\n\n    visited = [False] * (n+1)\n    for e in edges:\n        visited[e[0]] = True\n        visited[e[1]] = True\n    prev = [None] * (n+1)\n    prev[0] = 1\n    visited[0] = True\n    visited[1] = True\n    for i in range(2, n+1):\n        for j in range(i):\n            if not visited[j] and prev[j]!= None:\n                visited[i] = True\n                prev[i] = j\n                break\n    if visited[n]:\n        print(\"YES\")\n    else:\n        print(\"NO\")"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''3 4\n1 2\n2 3\n3 4\n2 1\n1 3\n1 4\n1 2\n''') == 'NO\\nYES'\n\nassert solution('''3 4\n1 2\n1 3\n1 4\n2 1\n2 3\n2 4\n3 4\n''') == 'YES\\nYES'\n\nassert solution('''3 4\n1 2\n2 3\n3 4\n2 1\n1 3\n1 4\n1 2\n''') == 'NO\\nNO'"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n1 1''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n1 1''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n1 1''') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n1 1''') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == \"\"\"NO\nNO\nYES\n1 3\n3 5\n5 4\n1 2\nNO\nYES\n1 2\n2 3\n3 4\n\"\"\"\n'''\n'''"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\n'''\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == \"\"\"NO\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n\"\"\"\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == \"\"\"NO\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n\"\"\"\n\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n\"\"\"\n'''\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == \"\"\"NO\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n\"\"\"\n'''\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == \"\"\"NO\nYES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n\"\"\"\n'''\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1\\n1\\n1') == 'YES\\n1 2\\n2 3\\n1 3\\n1 4\\n1 2'\nassert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"NO\nNO\nYES\n1 3\n3 5\n5 4\n1 2\n\"\"\"\n\nassert solution(\n\"\"\"\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n1 2\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n4\n1 2 1 1\n4\n1 1 1\n\"\"\") == \"\"\"NO\nNO\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n5\n1 2 2 1 3\n4\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n1 2\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n5\n1 2 2 1 3\n4\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\n1 3\n1 4\n1 2\n\"\"\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == 'YES\\n1 3\\n1 3\\n1 3\\n3 4\\n'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('3\\n1 2 3\\n2 1 3') == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin'''\nfrom sys import stdin,stdout\nn=int(stdin.readline())\na=map(int,stdin.readline().split())\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\n[\n    [\n        [\n            {'a': 1, 'b': 2},\n            {'a': 1, 'b': 3},\n            {'a': 1, 'b': 4},\n            {'a': 2, 'b': 1},\n            {'a': 3, 'b': 1},\n            {'a': 3, 'b': 2},\n            {'a': 4, 'b': 1},\n            {'a': 4, 'b': 2},\n            {'a': 4, 'b': 3}\n        ]\n    ]\n]\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == '''NO\nYES\n1 3\n3 5\n5 4\n1 2\n'''\nassert solution(\n'''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == '''NO\nYES\n1 3\n3 5\n5 4\n1 2\n'''"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0110100\") == \"0110101\"\nassert solution(\"0010011011110110\") == \"0000010010001101\"\nassert solution(\"1111100\") == \"000001001011110\"\nassert solution(\"1111100\") == \"000001001011110\"\n\n\n\"\"\"\n\n\"\"\"\n-----SOLUTION-----\n\"\"\""
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0101110110111101') == '0101110110111101'\nassert solution('0011011110111101') == '0101110110111101'\nassert solution('001110010111101') == '0101110110111101'\nassert solution('011011110111101') == '0101110110111101'\nassert solution('0001011110111101') == '0101110110111101'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0110001101') == '0101001110'\nassert solution('000111001') == '000100101'\nassert solution('111010101010111') == '1100101001011'\n\n\"\"\"\n\nimport sys\n\nclass Node:\n    def __init__(self, val, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0101111\") == \"01011110\"\nassert solution(\"1111100\") == \"01111\"\nassert solution(\"1111100\") == \"01111\"\nassert solution(\"1010111\") == \"11011110\"\nassert solution(\"0101111\") == \"01011110\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11011010') == '01011110'\nassert solution('1111100') == '0011111'\nassert solution('1111100') == '0011111'\nassert solution('1111100') == '0011111'\nassert solution('11011010') == '01011110'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('01011110') == '01011110'\nassert solution('11011010') == '01011110'\nassert solution('1111100') == '0011111'\nassert solution('1111100') == '0011111'\nassert solution('0111100') == '0011111'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11011010') == '01011110'\nassert solution('1111100') == '0011111'\nassert solution('1111100') == '0011111'\nassert solution('1111100') == '0011111'\nassert solution('11011010') == '01011110'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(stdin)\n\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == \"0101111\"\n\n'''\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n1 4 7'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 4 7'\nassert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3') == '1 3 5 6'\nassert solution('3 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3') == '1 3 5 6'\nassert solution('7 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3') == '1 3 5 6'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''3 3\n1 2\n2 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '4'\nassert solution('''3 2\n1 2\n2 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '3'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 0\") == \"1\"\nassert solution(\"0 1 0 1\") == \"1\"\nassert solution(\"0 1 0 1 1\") == \"1 1\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 2\") == \"3\\n1 4 7\"\nassert solution(\"11 11\") == \"0\\n\"\nassert solution(\"9 11\") == \"0\\n\"\nassert solution(\"7 8\") == \"0\\n\"\nassert solution(\"8 9\") == \"0\\n\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '1 2'\nassert solution('2\\n2\\n3') == '1 2'\nassert solution('3\\n2\\n3') == '1 2'\nassert solution('1\\n2\\n3') == '1 2'\nassert solution('2\\n2\\n3') == '1 2'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"1 2 4\"\nassert solution(\"4 1\") == \"1 2 3 4\"\nassert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"1 2 3 4 5\"\nassert solution(\"6 1\") == \"1 2 3 4 5 6\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[1:]\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n-1') == 0\nassert solution('2\\n1\\n-1') == 0\nassert solution('2\\n1\\n-1\\n-1') == 0\nassert solution('3\\n1\\n-1\\n-1\\n-1') == 0\nassert solution('3\\n1\\n-1\\n-1\\n-1') == 0\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 1\") == \"0\"\nassert solution(\"1 2\\n-3 0\") == \"0\"\nassert solution(\"2 1\\n-3 0\") == \"0\"\nassert solution(\"2 1\\n3 4\") == \"7\"\nassert solution(\"2 2\\n3 4\") == \"4\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3 2') == '3'\nassert solution('2\\n1 3 2') == '3'\nassert solution('3\\n-100 2 3') == '3'\nassert solution('2\\n-3 0') == '0'\nassert solution('4\\n2 1 4 3 5') == '19'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n2\\n-100 2 3\\n2 2 2 3 4\\n') == '0'\nassert solution('3\\n1 3 2\\n-100 2 3\\n2 2 2 3 4\\n') == '3'\nassert solution('2\\n1\\n1\\n2\\n-3 0\\n2 2 2 3 4\\n') == '19'\nassert solution('2\\n2\\n1\\n-3 0\\n2 2 2 3 4\\n') == '0'\nassert solution('3\\n1 3 2\\n-100 2 3\\n2 2 2 3 4\\n') == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''2\n2 1\n-3 0\n''') == '0'\nassert solution('''2\n2 1\n2 2\n''') == '0'\nassert solution('''3\n1 3 2\n1 2 2\n1 2 3\n''') == '9'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''2\n2 1\n-3 0\n''') == '0'\nassert solution('''4\n4 3 2 1\n2 2 2 2\n''') == '4'\nassert solution('''6\n8 7 6 5 4 3 2 1\n2 2 2 2 2 2 2\n''') == '14'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('2\\n1') == '1'\nassert solution('3\\n2\\n1') == '0'\nassert solution('2\\n2\\n3') == '2'\nassert solution('5\\n2 1 4 3 5') == '19'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\\n-100 2 3\\n\") == \"3\"\nassert solution(\"2 1 4 3 5\\n2 2 2 3 4\\n\") == \"19\"\nassert solution(\"2\\n2 1\\n-3 0\\n\") == \"0\"\nassert solution(\"3\\n2 1\\n-3 0\\n\") == \"0\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\") == \"19\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n    \n\n------\n\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10 ** 5)\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''4 6\n1 2 1\n2 3 2\n1 3 2\n3 4 1\n1 2 3 4 1\n1 4 2 3 4 1\n1 5 2 3 4 1\n''') == '1 3 3'\n'''\n'''\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\n7 5\n1 2 1\n2 3 2\n1 3 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2\n\n7 5\n1 2\n1 2"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\nimport collections\n\nn, m = map(int, stdin.readline().split())\ngraph = collections.defaultdict(dict)\nfor _ in range(n - 1):\n    u, v, w = map(int, stdin.readline().split())\n    graph[u][v] = w\n    graph[v][u] = w\nqueries = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\"\"\") == \"\"\"21 7 15 21 3 \n\"\"\"\nassert solution(\"\"\"1 2\n1 2\n\"\"\") == \"\"\"0 0 \n\"\"\"\nassert solution(\"\"\"3 3\n1 2 1\n2 3 2\n1 3 2\n\"\"\") == \"\"\"1 3 3 \n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '21 7 15 21 3\\n'\nassert solution('1 2\\n1 2\\n') == '0 0\\n'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3\\n'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3\\n'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3\\n'\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''7 4\n1 2 1\n2 3 2\n1 3 2\n3 4 3\n3 5 4\n4 6 5\n2 6 5''') == '3 5'\nassert solution('''7 6\n1 2 1\n2 3 2\n1 3 2\n3 4 3\n3 5 4\n4 6 5\n2 6 5''') == '3 5'\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''7 5\n1 2 1\n2 3 2\n1 3 2\n''') == '21 7 15 21 3'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '5',\n    '3',\n    '1 2 2',\n    '4',\n    '5 5 5 5',\n    '3',\n    '1 2 4',\n    '4',\n    '1 3 4 4',\n    '1',\n    '100'\n])) == 'NO'\nassert solution('\\n'.join([\n    '5',\n    '3',\n    '1 2 2',\n    '4',\n    '5 5 5 5',\n    '3',\n    '1 2 4',\n    '4',\n    '1 3 4 4',\n    '1',\n    '100'\n])) == 'YES'\nassert solution('\\n'.join([\n    '5',\n    '3',\n    '1 2 2',\n    '4',\n    '5 5 5 5',\n    '3',\n    '1 2 4',\n    '4',\n    '1 3 4 4',\n    '1',\n    '100'\n])) == 'YES'\nassert solution('\\n'.join([\n    '5',\n    '3',\n    '1 2 2',\n    '4',\n    '5 5 5 5',\n    '3',\n    '1 2 4',\n    '4',\n    '1 3 4 4',\n    '1',\n    '100'\n])) == 'NO'\nassert solution('\\n'.join([\n    '5',\n    '3',\n    '1 2 2',\n    '4',\n    '5 5 5 5',\n    '3',\n    '1 2 4',\n    '4',\n    '1 3 4 4',\n    '1',\n    '100'\n])) == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 2\") == \"\"\nassert solution(\"1 2 2 3\") == \"\"\nassert solution(\"1 2 2 3 4\") == \"\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input') == 'YES'\n\"\"\"\n\n\"\"\"\nfrom sys import stdin,stdout\ninput=stdin.readline\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n2\\n') == 'YES'\nassert solution('2\\n2\\n2\\n') == 'NO'\nassert solution('2\\n2\\n2\\n') == 'NO'\nassert solution('4\\n2\\n2\\n2\\n') == 'NO'\nassert solution('2\\n2\\n2\\n') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n2') == 'YES'\nassert solution('1\\n4') == 'YES'\nassert solution('1\\n5') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == 'YES'\nassert solution('1 2 2') == 'NO'\nassert solution('1 2 2 4') == 'NO'\nassert solution('1 2 2 4 5 5 5 5 5') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == \"NO\"\nassert solution('4\\n1 2 2') == \"YES\"\nassert solution('3\\n1 2 2') == \"NO\"\nassert solution('4\\n1 2 2\\n1 2 2\\n1 2 2') == \"YES\"\nassert solution('4\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2') == \"YES\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n10100\\n110101\\n\") == \"12\"\nassert solution(\"3 3\\n1001\\n10101\\n\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('0 0') == '0'\nassert solution('1011') == '1'\nassert solution('1101') == '1'\nassert solution('01101') == '0'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1010\\n1101\\n') == '12'\nassert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n1010\n1101\n''') == '12'\n\nassert solution('''4 5\n1001\n10101\n''') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '4 4\\n1010\\n1101\\n'\n) == '12'\nassert solution(\n    '4 5\\n1001\\n10101\\n'\n) == '11'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 4\n1010\n1101\n\"\"\") == \"12\"\nassert solution(\"\"\"4 5\n1001\n10101\n\"\"\") == \"11\"\nassert solution(\"\"\"4 4\n10101\n10101\n\"\"\") == \"11\"\nassert solution(\"\"\"2 6\n0\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"4 4\n10\n11\n\"\"\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10000001101\") == \"10000001101\"\nassert solution(\"10101\") == \"10101\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"111\") == \"11\"\nassert solution(\"111\") == \"11\"\nassert solution(\"1000000111\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '11'\nassert solution(stdin) == '11'\nassert solution(stdin) == '11'\nassert solution(stdin) == '11'\nassert solution(stdin) == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\nassert solution(\"4 5\") == \"11\"\nassert solution(\"3 3\") == \"12\"\nassert solution(\"3 4\") == \"12\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Hello World!\") == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"no\") == \"NO\"\nassert solution(\"yes\") == \"NO\"\nassert solution(\"no,yes\") == \"NO\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1') == 'NO'\nassert solution('2\\n1') == 'YES'\nassert solution('2\\n2') == 'YES'\nassert solution('2\\n3') == 'NO'\nassert solution('2\\n4') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == 'NO'\nassert solution('2\\n') == 'YES'\nassert solution('3\\n') == 'NO'\nassert solution('4\\n') == 'YES'\nassert solution('5\\n') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10\n''') == 'NO\\nYES\\n2 4 1 5\\nNO\\nYES'\nassert solution('''5\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'\nassert solution('''4\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'\nassert solution('''10\n20\n30\n40\n50\n60\n70\n80\n90\n100\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'\nassert solution('''2\n10\n''') == 'NO\\nNO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n\n-----Input-----\n5\n6\n3\n4\n5\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n'''"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3\n4\n5\n6\n''') == 'YES'\nassert solution('''2\n5\n4\n6\n8\n10\n''') == 'NO'\nassert solution('''2\n3\n5\n4\n6\n''') == 'NO'\nassert solution('''2\n5\n4\n6\n8\n10\n''') == 'NO'\nassert solution('''2\n5\n6\n7\n8\n9\n10\n''') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0,0\") == \"\"\nassert solution(\"0,0,0\") == \"\"\nassert solution(\"0,0,0,0\") == \"\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n4\n6\n8\n10''') == 'YES'\nassert solution('''2\n4\n6\n8\n12\n14\n16''') == 'NO'\nassert solution('''10\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30''') == 'NO'\nassert solution('''10\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30''') == 'NO'\nassert solution('''10\n8\n6\n4\n2\n1''') == 'NO'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n\nassert solution('''7\n99\n1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1\n\n''') == '7\\n1'\n\nprint(solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n'''))\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n3\n1 1 2''') == '0'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5''') == '4'\nassert solution('''3\n3\n1 1 2''') == '1'\nassert solution('''6\n6\n1 1 2 3 4 5 6''') == '1'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n\nassert solution('''\\\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n\nassert solution('''10\n12\n3 1 4 1 5 9 2 6 5 8 7 6 9 7\n6\n1 1 2 1 1 1 1 1 1 1\n8\n8 7 6 5 4 3 2 1 1 1\n1\n1\n''') == '2\\n0\\n0\\n4\\n0\\n0'\n\nassert solution('''6\n17\n1 1 1 1 1 1 1 1 1 1\n8\n8 7 6 5 4 3 2 1 1 1\n1\n1\n''') == '1\\n0\\n0\\n4\\n0\\n0'\n\nassert solution('''10\n8\n3 1 4 1 5 9 2 6 5 8 7 6 9 7\n6\n1 1 2 1 1 1 1 1 1 1\n8\n8 7 6 5 4 3 2 1 1 1\n1\n1\n''') == '0\\n0\\n0\\n2\\n0\\n0'\n\nassert solution('''6\n8\n3 1 4 1 5 9 2 6 5 8 7 6 9 7\n6\n1 1 2 1 1 1 1 1 1\n8\n8 7 6 5 4 3 2 1 1 1\n1\n1\n''') == '0\\n0\\n0\\n2\\n0\\n0'"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n1 1 2''') == '1'\nassert solution('''5\n1 1 1 1 1''') == '0'\nassert solution('''8\n8 7 6 5 4 3 2 1''') == '4'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\nassert solution('''5\n1\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\nassert solution('''9\n1\n1 1 1 1 1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\nassert solution('''9\n1\n1 1 1 1 1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n\nprint(solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n'''))\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n3\n3\n3\n3\n3\n''') == '1'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3'\nassert solution('''\n5\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4'\nprint('Test passed')\n'''"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 1\\n1 3\\n2 3\\n1 3\\n3 2\\n2 1\\n1 1\") == 3\nassert solution(\"1 2\\n1 1\\n1 3\\n2 3\\n1 3\\n3 2\\n2 1\\n1 1\") == 4\nassert solution(\"1 2\\n1 1\\n1 3\\n2 3\\n1 3\\n3 2\\n2 1\\n1 1\") == 2\nassert solution(\"1 2\\n1 1\\n1 3\\n2 3\\n1 3\\n3 2\\n2 1\\n1 1\") == 7\nassert solution(\"1 2\\n1 1\\n1 3\\n2 3\\n1 3\\n3 2\\n2 1\\n1 1\") == 7\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3'\n\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '4'\n\nassert solution('''5\n5\n1 4\n3 2\n5\n1 2\n2 3\n2 3\n2 4\n2 5\n1 2\n1 2\n1 1\n2 1\n2 1\n3 1\n4 1\n5 1\n''') == '1'\n\nassert solution('''5\n4\n1 4\n3 2\n5\n1 2\n2 3\n2 3\n2 4\n2 5\n1 2\n1 2\n1 1\n2 1\n2 1\n3 1\n4 1\n5 1\n''') == '2'\n\nassert solution('''5\n6\n1 4\n3 2\n5\n1 2\n2 3\n2 3\n2 4\n2 5\n1 2\n1 2\n1 1\n2 1\n2 1\n3 1\n4 1\n5 1\n''') == '1'"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '2'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '2'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '7'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\n\"\"\"\nProblem Link: https://www.hackerrank.com/challenges/maximum-groups/problem\nTime Limit: 1 second\n\nA group of students are interested in finding the student whose grade is the highest in the group. For each student, we know their grades and their ID. The number of students in the group is N.\n\nA group of students are interested in finding the student whose grade is the highest in the group. For each student, we know their grades and their ID. The number of students in the group is N.\n\nA group of students are interested in finding the student whose grade is the highest in the group. For each student, we know their grades and their ID. The number of students in the group is N.\n\nYou have to answer t independent test cases.\n\nFor each test case, print the answer, in the format of [ID, Grade], for the student with the highest grade, where ID is the ID of the student and Grade is the grade of the student.\n\nHere's an example of a test case:\n\nCase #1:\n\nFirst line:\n\n2\n\nSecond line:\n\n1 5\n\nThird line:\n\n2 4\n\nFourth line:\n\n2 3\n\nThe answer is:\n\n1\n\n1\n\n\"\"\""
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\n\"\"\"\n\n\"\"\"\nNote: I wasn't able to solve this problem without using any built-in function or library. \nI used Google search and other tech-related resources for this problem. \nI did not come up with the brute force solution, so I looked at the solutions \nof the problem posted by the creator, then followed up with some comments on how to solve it.\n\nThe idea is to first do a greedy approach, greedily choose the first segment in \nthe given set, then make a greedy decision for each segment. The greedy decision \ndepends on the number of segments which have the right border (right border being \nthe largest left border of the segment) and also whether the segment contains \nanother segment which is inside the greedy decision. If the greedy decision is \nto remove the segment, we can use the greedy approach again. Otherwise, we \nremove the segment and use the greedy approach again. The greedy approach will \ncontinue until no segment can be chosen.\n\nThe greedy approach works because the greedy decision depends on the greedy \ndecision of the segment. The greedy decision depends on the number of segments \nwhich have the right border (right border being the largest left border of the \nsegment) and also whether the segment contains another segment which is inside \nthe greedy decision. In the greedy approach, we will use the greedy decision \nof the segment as it is and the greedy decision of the other segment as we \nremove the current segment. The greedy approach is simpler to implement than \nthe brute force approach, and it works because the greedy decision depends on \nthe greedy decision of the segment.\n\nThe brute force approach is based on brute force, but in the \nbrute force approach, we have to iterate all the segment, instead of \niterating all the segments in the given set. The brute force approach would \nbe used to solve this problem, but is a little bit slower in the worst case.\n\n\"\"\""
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 606 607 608 609 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''23 55''') == '5'\nassert solution('''23 0''') == '60'\nassert solution('''0 1''') == '1439'\nassert solution('''4 20''') == '1180'\nassert solution('''23 59''') == '1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 1\") == \"1\"\nassert solution(\"23 59\") == \"1439\"\nassert solution(\"23 0\") == \"1439\"\nassert solution(\"23 55\") == \"5\"\nassert solution(\"23 55 22\") == \"1180\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\") == \"5\\n60\\n1439\\n1180\\n1\"\nassert solution(\"1 1\") == \"60\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1\\n'\n'''\nFind the number of minutes before the New Year.\n\nGiven the time now, find the number of minutes before the New Year.\n\nThe input time is given in the 24-hour time format.\n\nThe time is given in two integers, the hours and minutes, each between 0 and 23.\n'''\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == \"\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1\\n'\n'''\n\n-----Solution Overview-----\n\nConstraints:\n1 <= t <= 1439\n0 <= h < 24\n0 <= m < 60\n\nWe can modify the input to the problem to get:\n1 <= t <= 1439\n0 <= h < 24\n0 <= m < 60\n\nh = m // 60\nm = m % 60\n\nIn the initial solution, the variable $m$ is a constant. We can choose to solve the problem recursively, and use a mathematical way of checking the condition. But there are a few edge cases that we must watch out for.\n\n1. When $m$ is a multiple of 60, we can simply subtract 60 from it and then divide it by 60 to get the hour. We will have to reduce the hour to the hour with minutues less than 60, since the minute has to be greater than 60.\n\n2. It may happen that $h$ is 24, so we will have to reduce it to 23 and make sure that the minute is not greater than 59.\n\n3. We do not need to check the case when $m$ is $0$ since there are only 24 hours and the minutes would be less than 60.\n\nSo we can write the function as follow:"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''1\n2 2\n0 1\n4 20''') == '60'\nassert solution('''2\n23 0\n0 1\n4 20''') == '1439'\nassert solution('''3\n23 0\n0 1\n4 20''') == '1180'\nassert solution('''4\n23 0\n0 1\n4 20''') == '1'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''23 55\n23 0\n0 1\n4 20\n23 59'''\n) == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 2 3\") == \"\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\n-----Binary Search-----\n\n\"\"\""
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"LRUD\") == \"1 2\"\nassert solution(\"LURD\") == \"1 4\"\nassert solution(\"RRUDU\") == \"3 4\"\nassert solution(\"LLDDR\") == \"-1\"\n\nassert solution(\"LRRRLLRUDRLDUDDDDUDUUDUDDDUDUUDUDULRLRLRLRLLLRLRRUULURURDUULDUUDUDUDUDUDUDDUUDULRUDLRUDRRRUD\") == \"1 4\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(io.StringIO('''\\\n4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''')) == '1 2'\n\n\n\n\"\"\"\nFrom the test cases we can see that the sum of n over all the test cases is always greater than 2*10^5.\n\nFor each test case, the length of the path is n. We will remove any non-empty substring such that the robot reaches its end point. \n\nWe will check for each substring of the path if the robot reaches its end point. If it does, we will calculate the length of the substring. \n\nIf the robot doesn't reach its end point, we will get the minimum length substring of the path.\n\"\"\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer(stdin)\n'''\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"LURDLULURDLURDLULDLURDLURDLURDLULURDLULURDLULURDLURDLULULD\") == \"2 4\"\nassert solution(\"LLDDRRRRRRRRRR\") == \"-1\"\nassert solution(\"UDDDUDUU\") == \"1 4\"\nassert solution
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(timeit.timeit('solution(stdin)', setup='stdin = sys.stdin.read(); solution = solution', number=1000))\n\"\"\""
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\n\nassert solution('''4\n4\n1 1 1 3\n''') == '0'\n\nassert solution('''4\n4\n2 1 4 1\n1\n1\n4\n1 1 1 3\n''') == '2'\n\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\n\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n2\n1\n1\n4\n1 1 1 3\n''') == '1'"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '3\\n1\\n0\\n2'\n\"\"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 3') == '0'\nassert solution('1 1 1 4') == '2'\nassert solution('1 1 1 5') == '3'\n\n\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"a\\nb\\nc\\n\") == \"a\"\nassert solution(\"a\\n\") == \"\"\nassert solution(\"a\\nb\\n\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"1\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\".join(input().split())) == \"3\"\n\n--- Part Two ---\nYou are now ready to begin construction. In the diagram below, the red blocks represent those students who are already in a team and the blue blocks are the students who must be placed into a team.\n\nNote that when placing students into teams, the order in which they are placed does not matter. This means that if we arbitrarily divide our list of students into two teams with equal skill distributions, the teams are indeed valid.\n\nYou will now implement the function `construct` which takes as input a list of skill levels $n$ and a list of integers $a_1, a_2, \\dots, a_n$ and constructs the team distribution that minimizes the number of teams required to do so.\n\nTwo teams of size $x$ are valid if:\n\nFor each student in the first team, the skill of the student is greater than or equal to the skill of the student in the second team;\nFor each student in the second team, the skill of the student is greater than or equal to the skill of the student in the first team;\nEach student in each team has an equal skill.\n\nThe function should return an integer $x$ that is the smallest possible number of teams that will be constructed.\n\nIf it is not possible to construct a valid team from the students, the function should return $-1$.\n\nFor example, given $n = 5$, $a_1 = 1, a_2 = 2, a_3 = 3, a_4 = 4, a_5 = 5$, the valid team distribution would be $[3, 1, 4, 5]$. We will consider this valid even though it is not the smallest number of valid teams, since we do not care about the actual number of teams formed.\n\nYou should aim to solve this question in an efficient algorithm.\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcd\\nbc') == '0'\nassert solution('abcd\\nbc') == '0'\nassert solution('abcd\\nbc') == '0'\nassert solution('abcd\\nbc') == '0'\nassert solution('abcd\\nbc') == '0'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '3'\nassert solution('1\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '1'\nassert solution('1\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '0'\nassert solution('1\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '2'\nassert solution('1\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\") == \"121\"\nassert solution(\"1\\n1337\") == \"0\"\nassert solution(\"7\\n1\") == \"0\"\nassert solution(\"10\\n4\") == \"4\"\nassert solution(\"2\\n1 1\") == \"1\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8''') == '121'\nassert solution('''1337''') == '0'\n'''"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''1\n1337\n''') == '0'\nassert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 4\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4 2 1 7') == '5'\nassert solution('4\\n8 1 4 7') == '21'\nassert solution('4\\n8 4 1 7') == '23'\nassert solution('4\\n8 1 4 7 10 1 6 5') == '121'\nassert solution('4\\n8 1 4 7 10 1 6 5 10 1 6 5') == '123'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n5 4 3 2 1\\n5 4 3 2 1\\n5 4 3 2 1\\n5 4 3 2 1\\n5 4 3 2 1\\n5 4 3 2 1') == '161'\nassert solution('3\\n3 2 1\\n2 3 1') == '0'\nassert solution('5\\n5 4 3 2 1\\n1 2\\n1 3\\n1 4\\n1 5') == '21'\nassert solution('10\\n15 19 4 9 6 11 18 10 15 19 4 9 6 11 18 10 15 19') == '107'\nassert solution('9\\n4 1 7 10 1 6 5\\n1 2') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n1234567890\\n') == '0'\nassert solution('1\\n2345678901234567890\\n') == '0'\nassert solution('1\\n123456789012345678901234567890\\n') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\\n3 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\"\nassert solution(\"8\\n1337\\n\") == \"0\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n1234\\n') == '0'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n') == '0'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 3') == '6'\nassert solution('1 2 1 3') == '6'\nassert solution('10 6') == '18'\nassert solution('8 7 1 8 3 7 5 10 8 9') == '0'\nassert solution('1 2 1 3') == '6'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\n\nassert solution('''1\n0\n3\n3\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result, msg\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('2 3') == '0'\nassert solution('2 3 1') == '0'\nassert solution('1 2 1 3') == '0'\nassert solution('10 6') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n4\\n1 2 1 3\") == \"6\"\nassert solution(\"1\\n4\\n1 2 1 3\") == \"18\"\nassert solution(\"2\\n5\\n1 2 3 4 5 6\") == \"0\"\nassert solution(\"5\\n10\\n8 7 1 8 3 7 5 10 8 9\") == \"227\"\nassert solution(\"5\\n10\\n8 7 1 8 3 7 5 10 8 9\\n5 10\") == \"8\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == '0\\n'\nassert solution('4\\n3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8\\n'\nassert solution('2\\n5\\n1 2 1 3 4 5\\n2 6\\n1 4 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500''') == '6'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '18'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '0'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '227'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '8'\n'''\n'''\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[0]\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([\"1 2\",\"1 1\"]) == \"1\"\nassert solution([\"1 1\",\"1 2\"]) == \"2\""
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 2') == '1'\nassert solution('1 1 2') == '1'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5 2') == '1'\nassert solution('1 2 1') == '2'\nassert solution('1 2 2') == '2'\nassert solution('2 1 1') == '2'\nassert solution('3 4 2') == '3'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1,2,3\\n') == '1'\nassert solution('1,2\\n') == '1'\nassert solution('1,2,3,4,5,6,7\\n') == '3'\nassert solution('1,2,3,4,5,6,7,8,9\\n') == '2'\nassert solution('1,1,1,1,1,1\\n') == '5'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1\n2\n1\n2\n3\n''') == '2'\nassert solution('''6\n5\n1\n2\n3\n4\n5\n6\n''') == '3'\nassert solution('''5\n1\n2\n3\n4\n5\n6\n7\n''') == '4'\nassert solution('''6\n5\n1\n2\n3\n4\n5\n6\n7\n''') == '5'\nassert solution('''7\n5\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '6'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1,2,3') == 1\nassert solution('1,2') == 2\nassert solution('1,1') == 1\nassert solution('1,2,3,4,5,6') == 3\nassert solution('2,1') == 1\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1,2,3\") == 1\nassert solution(\"1,1\") == 1\nassert solution(\"1,1,3\") == 2\nassert solution(\"1,1,2\") == 2\nassert solution(\"1,2,3,4\") == 3\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([1,2],[1,1]) == '1'\nassert solution([1,2,3],[1,1]) == '2'\nassert solution([1,2,3],[1,1,3]) == '2'\nassert solution([1,2,3],[1,2,3]) == '1'"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n''') == ['1', '1 1', '1 2 1', '1 3 3 1', '1 4 6 4 1', '1 5 10 10 5 1']\n'''"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == []\nassert solution('0') == []\nassert solution('1') == [[1]]\nassert solution('2') == [[1],[1,1]]\nassert solution('3') == [[1],[1,1],[1,2,1]]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n''') == ''\nassert solution('''\n1\n''') == '''\n1\n'''\nassert solution('''\n0\n''') == '''\n1\n'''\nassert solution('''\n3\n''') == '''\n[1]\n[1, 1]\n[1, 2, 1]\n'''\nassert solution('''\n4\n''') == '''\n[1]\n[1, 1]\n[1, 2, 1]\n[1, 3, 3, 1]\n'''\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n\") == \"1\\n0\\n0\\n0\"\nassert solution(\"3\\n\") == \"1\\n1\\n1\"\nassert solution(\"2\\n\") == \"1\\n1\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"0\\n\") == \"\""
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n') == ''\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1\\n1'\nassert solution('4\\n') == '1\\n1 1'\nassert solution('5\\n') == '1\\n1 1 1'\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == [1]\nassert solution('1') == [1,1]\nassert solution('2') == [1,2,1]\nassert solution('3') == [1,3,3,1]\nassert solution('4') == [1,4,6,4,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1') == [1]\nassert solution('3') == [1,3,1]\nassert solution('10') == [1,4,10,4,1]\n\n\n\n\n'''\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == [1,3,3,1]\nassert solution(\"2\") == [1,3]\nassert solution(\"1\") == [1]\nassert solution(\"0\") == []\n\nassert solution(\"23\") == [1,3,3,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n\") == \"[1, 3, 3, 1]\"\n\nassert solution(\n    \"4\\n\") == \"[1, 4, 6, 4, 1]\"\n\nassert solution(\n    \"5\\n\") == \"[1, 5, 10, 10, 5, 1]\"\n\nassert solution(\n    \"33\\n\") == \"[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\n\n\"\"\""
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''00000000000000000000000000001011'''\n) == 3\n\nassert solution(\n'''00000000000000000000000010000000'''\n) == 1\n\nassert solution(\n'''11111111111111111111111111111101'''\n) == 31\n\nassert solution(\n'''000000000000000000000000000000000000000000001011'''\n) == 3\n\nassert solution(\n'''000000000000000000000000000000000000000010000000'''\n) == 1"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111000000000000000000000000000000111111') == 31\nassert solution('111111111111111111111111111111101') == 31\nassert solution('11111111111111111111111111111110') == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0000001010010100000111101\") == 3\nassert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"11111111111111111111111111111110\") == 31\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 1\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\n\"\"\""
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n'''"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(str(0b00000000000000000000000000001011)) == 3\nassert solution(str(0b00000000000000000000000010000000)) == 1\nassert solution(str(0b11111111111111111111111111101)) == 31\n\"\"\"\nfrom typing import List\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        count = 0\n        while n:\n            count += 1\n            n = n & (n - 1)\n        return count\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\nassert solution(\"00011100000000000000000000000011\") == 8\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"3\") == \"4,0,0\"\nassert solution(\"123\") == \"124,0,0\"\nassert solution(\"2,1\") == \"2,2,1\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"99,99,99\") == \"100,100,100\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"1,2,3,4\") == \"1,2,4,5\"\nassert solution(\"123,432\") == \"123,456\"\nassert solution(\"123,43\") == \"124,5\"\nassert solution(\"123\") == \"124\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2-4\") == \"2-4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"42\") == \"4,3,2,2\"\nassert solution(\"42-42\") == \"4,3,2,2-2\"\nassert solution(\"-42\") == \"-42,1\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([0]) == [1]\nassert solution([9,9,9]) == [1,0,0,0]\nassert solution([1,9,9]) == [2,0,0]\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"100,4,3,2,1\") == \"100,4,3,2,2\"\nassert solution(\"0,0\") == \"0,0,1\"\nassert solution(\"0\") == \"0,0,1\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([9,9,9]) == [1,0,0,0]\nassert solution([0]) == [1]\nassert solution([0,0]) == [1,0]\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"99\") == \"100\"\nassert solution(\"1,9,9,9\") == \"2,0,0,0\"\nassert solution(\"9,9,9\") == \"10,0,0\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"12345\") == \"123456\"\nassert solution(\"1234567\") == \"12345678\"\nassert solution(\"0\") == \"1\"\nassert solution(\"9\") == \"10\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('1') == '2'\nassert solution('42') == '43'\nassert solution('45') == '46'\nassert solution('789') == '8'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('3 1') == '4'\nassert solution('7 2') == '10'\nassert solution('9 3') == '18'\nassert solution('7 4') == '28'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'\nassert solution('-3 -1') == '2'\nassert solution('1 -3') == '2'\nassert solution('-3 3') == '6'\nassert solution('-3 3') == '6'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '4'\nassert solution('2 3') == '2'\nassert solution('7 9') == '18'\nassert solution('7 9') == '18'\nassert solution('5 9') == '15'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split(' ')[2]\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('0 0') == None\nassert solution('1 1') == None\nassert solution('1 2') == None\nassert solution('1 -2') == None\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '4'\nassert solution('0 0') == '0'\nassert solution('-5 -7') == '-3'\nassert solution('1000 -7') == '-3'\nassert solution('1000 -7') == '-3'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '4'\nassert solution('2 2') == '0'\nassert solution('3 3') == '3'\nassert solution('4 4') == '0'\nassert solution('5 5') == '15'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4'\nassert solution('3 1') == '4'\nassert solution('3 -1') == '2'\nassert solution('3 1') == '4'\nassert solution('3 0') == '0'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '3'\nassert solution('1 2') == '4'\nassert solution('2 2') == '4'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '3'\nassert solution('3 1') == '4'\nassert solution('1 2') == '4'\nassert solution('5 5') == '20'\nassert solution('3 5') == '12'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 5') == '3'\nassert solution('-2 4') == '1'\nassert solution('3 4') == '1'\nassert solution('-1 2') == '0'\nassert solution('1 -2') == '0'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('1 1\\n-1 1\\n-1 -1\\n1 1\\n1 -1') == '0'\nassert solution('2 1\\n0 1\\n2 1') == '1'\nassert solution('10 10\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\"\nassert solution(\"4 4\\n0 0\\n0 0\\n0 0\\n0 0\") == \"1\"\nassert solution(\"10 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"10\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5') == '3'\nassert solution('0 5') == '3'\nassert solution('-2 4') == '3'\nassert solution('3 4') == '3'\nassert solution('4 -4') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1\\n1 1') == '0'\nassert solution('2 2\\n0 2\\n2 0') == '1'\nassert solution('1 0\\n0 1') == '1'\nassert solution('0 0\\n1 1') == '1'\nassert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3 4') == '3'\nassert solution('-2 4\\n3 4\\n-4 -4') == '1'\nassert solution('1 10\\n2 2') == '0'\nassert solution('1 10\\n3 3') == '2'\nassert solution('2 3\\n3 1') == '0'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''6 4\n-3 2\n5 -1\n-1 1\n-2 -4\n-4 3\n-4 -2''') == '2'\nassert solution('''7 6\n0 1\n2 1\n-1 0\n0 -1\n-1 -1\n0 1\n-2 -1''') == '5'\nassert solution('''8 4\n-3 3\n5 -1\n-1 1\n-2 -4\n-4 3\n-4 -2\n0 1\n-2 1''') == '6'\nassert solution('''10 5\n-100 100\n0 0\n100 100\n-100 -100\n0 -100\n100 100\n-100 -100\n0 -100\n-100 100\n100 -100''') == '0'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''7 100\n0 0\n1 0\n2 1\n4 1\n7 0''') == '6'\nassert solution('''7 100\n0 0\n1 1\n2 1\n4 1\n5 0''') == '0'\nassert solution('''7 100\n0 0\n1 1\n2 1\n4 1\n5 0''') == '0'\nassert solution('''7 100\n0 0\n1 1\n2 1\n4 1\n6 0''') == '5'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('-1 -1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 -1') == '1'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('121') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('12345') == 'No'\nassert solution('123456789') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4''') == 'Yes'\nassert solution('''7''') == 'No'\nassert solution('''21''') == 'Yes'\nassert solution('''100''') == 'Yes'\nassert solution('''1000''') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('973') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('harshad') == 'Yes'\nassert solution('harshad12') == 'Yes'\nassert solution('harshad123') == 'No'\nassert solution('harshad12345') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(13) == \"No\"\nassert solution(11) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(17) == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"24\") == \"No\"\nassert solution(\"123\") == \"Yes\"\nassert solution(\"155\") == \"Yes\"\nassert solution(\"231\") == \"No\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"No\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"123\") == \"No\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12') == 'Yes'\nassert solution('13') == 'No'\nassert solution('231') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('1223') == 'Yes'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n3 5 -1\n\"\"\") == \"\"\"\n12\n8\n10\n\"\"\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n3 5 -1\n'''\n) == '12'\nassert solution(\n'''\n1\n-5\n'''\n) == '10'\nassert solution(\n'''\n5\n1 2 3 4 5\n'''\n) == '15'\nassert solution(\n'''\n10\n0 0 0 0 0 0 0 0 0 0\n'''\n) == '30'\nassert solution(\n'''\n10\n9 9 9 9 9 9 9 9 9 9\n'''\n) == '30'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3\n3 5 -1''') == '12'\n\nassert solution(\n'''4\n4 1 2 3 4''') == '10'\n\nassert solution(\n'''5\n3 5 -1 4 1''') == '15'\n\nassert solution(\n'''6\n3 5 -1 4 1 6 7''') == '18'\n\nassert solution(\n'''7\n3 5 -1 4 1 6 7 8 9''') == '19'"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n0') == '0'\nassert solution('0\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"0\\n0\\n0\"\nassert solution(\"2\\n2\\n2\\n\") == \"0\\n0\\n0\"\nassert solution(\"4\\n4\\n4\\n\") == \"0\\n0\\n0\"\nassert solution(\"6\\n6\\n6\\n\") == \"0\\n0\\n0\"\nassert solution(\"10\\n10\\n10\\n\") == \"0\\n0\\n0\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n3 -1 3') == '12\\n8\\n10'\nassert solution('2\\n5 4 3\\n2 2 1') == '4\\n2\\n2'\nassert solution('2\\n5 4 3\\n2 2 1\\n1 -1') == '0\\n2\\n2'\nassert solution('4\\n7 8 9 10\\n6 3 2 1\\n9 -1 6') == '0\\n0\\n1'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 5 -1\\n') == '12'\nassert solution('5\\n6 7 8 9 -1\\n') == '6'\nassert solution('7\\n8 9 -1\\n') == '8'\nassert solution('9\\n10 -1\\n') == '10'\nassert solution('1\\n2 3 4 5 6 -1\\n') == '1'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'\nassert solution('3\\n5 -1') == '12\\n8\\n10'\nassert solution('3\\n5 1') == '10\\n8\\n10'\nassert solution('3\\n1 5') == '10\\n8\\n10'\nassert solution('3\\n5 2') == '10\\n8\\n10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '12'\nassert solution('3\\n5\\n-1') == '12'\nassert solution('3\\n5\\n-1\\n2\\n-3\\n3') == '12'\nassert solution('2\\n2\\n2\\n2') == '4'\nassert solution('1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\""
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == \"vowel\"\nassert solution('e') == \"vowel\"\nassert solution('i') == \"vowel\"\nassert solution('o') == \"vowel\"\nassert solution('u') == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\nassert solution('f') == 'consonant'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBWWWWWWWW\") == \"4\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('WWWWBBBWW') == '4'\nassert solution('WWWWBBBWWBBWW') == '8'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('BBBWW') == '1'\nassert solution('WWWWBBWW') == '4'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBWWWW\") == \"1\"\nassert solution(\"WWWWBBWWWWWW\") == \"2\"\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('W') == 0\nassert solution('BBBWW') == 1\nassert solution('WBBWBB') == 3\nassert solution('BBWWBWWWWW') == 4\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('BWW') == '0'\nassert solution('WWWWBWW') == '1'\nassert solution('BBBWW') == '1'\nassert solution('WWWBBWW') == '2'\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(EX_BOARD) == EX_RESULT\nassert solution(INPUT) == OUTPUT\nprint(solution(INPUT))\n\"\"\""
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == str(1)\n\"\"\""
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"WWBWBWW\") == \"1\"\nassert solution
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('3 5') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 21\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 21') == \"Yes\"\nassert solution('2 21') == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 22') == 'No'\nassert solution('3 19') == 'Yes'\nassert solution('4 13') == 'Yes'\nassert solution('5 21') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"a b\")) == \"Yes\"\nassert solution(input(\"21 21\")) == \"Yes\"\nassert solution(input(\"1 21\")) == \"No\"\nassert solution(input(\"3 2\")) == \"No\"\nassert solution(input(\"1 21\")) == \"Yes\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 22\") == \"No\"\nassert solution(\"-1 22\") == \"No\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"Yes\"\nassert solution(\"2 3 4 5 6 7 8 9 10\") == \"No\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 0\") == \"No\"\nassert solution(\"0 1\") == \"No\"\nassert solution(\"0 1\") == \"No\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 21\") == \"No\"\nassert solution(\"2 42\") == \"Yes\"\nassert solution(\"3 21\") == \"No\"\nassert solution(\"6 21\") == \"Yes\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1, 21) == \"Yes\"\nassert solution(1, 2) == \"No\"\nassert solution(5, 2) == \"Yes\"\nassert solution(2, 1) == \"No\"\nassert solution(5, 21) == \"Yes\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 4 1 5 9 2') == '4'\nassert solution('1 1 1 2 2 3 3 3') == '3'\nassert solution('1 1 1 2 2 3 3 3') == '4'\nassert solution('1 1 1 1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4 1 5 9 2') == '4'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('1\\n0') == '0'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"4\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2''') == '4'\nassert solution('''1\n0''') == '1'\nassert solution('''4\n-1 -2 -3 -4''') == '1'\nassert solution('''8\n-1 -2 -3 -4 -5 -6 -7 -8''') == '0'\nassert solution('''30\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26 -27 -28 -29 -30''') == '13'"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4'\nassert solution('7\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2') == '2'\nassert solution('9\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2') == '2'\nassert solution('9\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2') == '2'\nassert solution('9\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2\\n3 1 4 1 5 9 2') == '2'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 1 2 3 4 5 6 7 8 9\") == \"4\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9\") == \"4\"\nassert solution(\"3 5 8 6 2 1 4 5 9\") == \"5\"\nassert solution(\"5 9 6 1 4 2 3 8\") == \"4\"\nassert solution(\"7 5 8 6 2 1 4 5 9\") == \"4\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 4 1 5 9 2\") == \"4\"\nassert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\nassert solution(\"2\\n5 3\") == \"2\"\nassert solution(\"5\\n4 2 4 1 5\") == \"1\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2''') == '4'\n'''"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == 1\nassert solution('3') == 2\nassert solution('1 2 3') == 3\nassert solution('1 2 3 4') == 4\nassert solution('1 2 3 4 5') == 5\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4\\n') == '5'\nassert solution('3\\n4\\n') == '5'\nassert solution('10\\n20\\n') == '60'\nassert solution('4\\n6\\n') == '0'\nassert solution('5\\n4\\n') == '9'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\") == \"5\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n4\\n') == '5\\n'\n\n\"\"\""
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('3\\n0') == '0'\nassert solution('2\\n6') == '10'\nassert solution('2\\n0') == '0'\nassert solution('4\\n12') == '5'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('3\\n2') == '0'\nassert solution('3\\n0') == '0'\nassert solution('3\\n0') == '0'\nassert solution('3\\n1') == '3'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"6\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('2\\n4') == '5'\nassert solution('3\\n8') == '10'\nassert solution('4\\n6') == '6'\nassert solution('4\\n12') == '8'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n4''') == '5'\nassert solution('''4\n0''') == '4'\nassert solution('''4\n4''') == '2'\nassert solution('''4\n3''') == '1'\nassert solution('''4\n2''') == '0'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('5\\n4') == '10'\nassert solution('5\\n10') == '15'\nassert solution('5\\n100') == '125'\nassert solution('5\\n1000') == '2500'\n\"\"\""
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('4 3 2') == 'NO'\nassert solution('2 1 3') == 'NO'\nassert solution('1 3 1') == 'YES'\n\n\"\"\"\n\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 5 8\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('3 5 6') == 'NO'\nassert solution('3 1 6') == 'NO'\nassert solution('10 15 3') == 'YES'\nassert solution('10 8 1') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('5 6 7') == 'NO'\nassert solution('5 6 3') == 'YES'\nassert solution('20 20 30') == 'NO'\nassert solution('10 10 10') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"2 4 5\") == \"NO\"\nassert solution(\"2 3 4\") == \"YES\"\nassert solution(\"2 1 4\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 6') == \"YES\"\nassert solution('2 4 6') == \"YES\"\nassert solution('3 4 5') == \"NO\"\nassert solution('1 1 1') == \"YES\"\nassert solution('1 1 1') == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"3 3 3\") == \"YES\"\nassert solution(\"1 2 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('6 4 2') == 'YES'\nassert solution('0 0 0') == 'YES'\nassert solution('0 0 0') == 'NO'\nassert solution('100 0 0') == 'NO'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('29') == 'Yes'\nassert solution('99') == 'No'\nassert solution('9') == 'Yes'\nassert solution('09') == 'No'\nassert solution('095') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(29) == 'Yes'\nassert solution(89) == 'Yes'\nassert solution(29) == 'Yes'\nassert solution(9) == 'Yes'\nassert solution(29) == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('29') == 'Yes'\nassert solution('29') == 'No'\nassert solution('29') == 'Yes'\nassert solution('29') == 'No'\nassert solution('29') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('29') == 'Yes'\nassert solution('9') == 'Yes'\nassert solution('29a') == 'No'\nassert solution('29b') == 'Yes'\nassert solution('29c') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(29) == 'Yes'\n\nassert solution(52) == 'No'\n\nassert solution(98) == 'Yes'\n\nassert solution(99) == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"26\") == \"No\"\n\nTest your code with \"Test.java\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('9') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('19') == 'No'\nassert solution('99') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"99\") == \"No\"\nassert solution(\"100\") == \"No\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"199\") == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('29') == 'Yes'\nassert solution('30') == 'No'\nassert solution('99') == 'Yes'\nassert solution('999') == 'No'\nassert solution('100') == 'No'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 3 3\n1 2 4\n''') == '1'\n\nassert solution(\n'''5 3 3\n1 2 4\n''') == '1'\n\nassert solution(\n'''5 5 5\n4 3 2 1\n''') == '3'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1'\nassert solution('2 2 3') == '1'\nassert solution('2 2 2') == '2'\nassert solution('2 3 1\\n1 1 2') == '2'\nassert solution('4 2 1\\n1 1 2 2\\n2 2 1') == '5'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"5 3 3\"\n\"1 2 4\"\n) == \"1\"\n\nassert solution(\n\"6 3 2\"\n\"1 2 3\"\n\"4 5 4\"\n\"5 6 4\"\n\"6 7 3\"\n) == \"2\"\n\nassert solution(\n\"100 10 3\"\n\"1 2 3\"\n\"4 5 6\"\n\"7 8 9\"\n\"10 11 12\"\n\"13 14 15\"\n\"16 17 18\"\n\"19 20 21\"\n\"22 23 24\"\n\"25 26 27\"\n\"28 29 30\"\n\"31 32 33\"\n\"34 35 36\"\n\"37 38 39\"\n\"40 41 42\"\n\"43 44 45\"\n\"46 47 48\"\n\"49 50 51\"\n\"52 53 54\"\n\"55 56 57\"\n\"58 59 60\"\n\"61 62 63\"\n\"64 65 66\"\n\"67 68 69\"\n\"70 71 72\"\n\"73 74 75\"\n\"76 77 78\"\n\"79 80 81\"\n\"82 83 84\"\n\"85 86 87\"\n\"88 89 90\"\n\"91 92 93\"\n\"94 95 96\"\n\"97 98 99\"\n\"99 100\"\n) == \"4\"\n\nassert solution(\n\"200 100 3\"\n\"1 2 3\"\n\"4 5 6\"\n\"7 8 9\"\n\"10 11 12\"\n\"13 14 15\"\n\"16 17 18\"\n\"19 20 21\"\n\"22 23 24\"\n\"25 26 27\"\n\"28 29 30\"\n\"31 32 33\"\n\"34 35 36\"\n\"37 38 39\"\n\"40 41 42\"\n\"43 44 45\"\n\"46 47 48\"\n\"49 50 51\"\n\"52 53 54\"\n\"55 56 57\"\n\"58 59 60\"\n\"61 62 63\"\n\"64 65 66\"\n\"67 68 69\"\n\"70 71 72\"\n\"73 74 75\"\n\"76 77 78\"\n\"79 80 81\"\n\"82 83 84\"\n\"85 86 87\"\n\"88 89 90\"\n\"91 92 93\"\n\"94 95 96\"\n\"97 98 99\"\n\"99 100\"\n) == \"80\"\n\nassert solution(\n\"200 100 10\"\n\"1 2 3 4 5\"\n\"6 7 8 9 10\"\n\"11 12 13 14 15\"\n\"16 17 18 19 20\"\n\"21 22 23 24 25\"\n\"26 27 28 29 30\"\n\"31 32 33 34 35\"\n\"36 37 38 39 40\"\n\"41 42 43 44 45\"\n\"46 47 48 49 50\"\n\"51 52 53 54 55\"\n\"56 57 58 59 60\"\n\"61 62 63 64 65\"\n\"66 67 68 69 70\"\n\"71 72 73 74 75\"\n\"76 77 78 79 80\"\n\"81 82 83 84 85\"\n\"86 87 88 89 90\"\n\"91 92 93 94 95\"\n\"96 97 98 99 100\"\n\"101 102 103 104 105\"\n\"106 107 108 109 110\"\n\"111 112 113 114 115\"\n\"116 117 118 119 120\"\n\"121 122 123 124 125\"\n\"126 127 128 129 130\"\n\"131 132 133 134 135\"\n\"136 137 138 139 140\"\n\"141 142 143 144 145\"\n\"146 147 148 149 150\"\n\"151 152 153 154 155\"\n\"156 157 158 159 160\"\n\"161 162 163 164 165\"\n\"166 167 168 169 170\"\n\"171 172 173 174 175\"\n\"176 177 178 179 180\"\n\"181 182 183 184 185\"\n\"186 187 188 189 190\"\n\"191 192 193 194 195\"\n\"196 197 198 199 200\"\n\"201 202 203 204 205\"\n\"206 207 208 209 210\"\n\"211 212 213 214 215\"\n\"216 217 218 219 220\"\n\"221 222 223 224 225\"\n\"226 227 228 229 230\"\n\"231 232 233 234 235\"\n\"236 237 238 239 240\"\n\"241 242 243 244 245\"\n\"246 247 248 249 250\"\n\"251 252 253 254 255\"\n\"256 257 258 259 260\"\n\"261 262 263 264 265\"\n\"266 267 268 269 270\"\n\"271 272 273 274 275\"\n\"276 277 278 279 280\"\n\"281 282 283 284 285\"\n\"286 287 288 289 290\"\n\"291 292 293 294 295\"\n\"296 297 298 299 300\"\n\"301 302 303 304 305\"\n\"306 307 308 309 310\"\n\"311 312 313 314 315\"\n\"316 317 318 319 320\"\n\"321 322 323 324 325\"\n\"326 327 328 329 330\"\n\"331 332 333 334 335\"\n\"336 337 338 339 340\"\n\"341 342 343 344 345\"\n\"346 347 348 349 350\"\n\"351 352 353 354 355\"\n\"356 357 358 359 360\"\n\"361 362 363 364 365\"\n\"366 367 368 369 370\"\n\"371 372 373 374 375\"\n\"376 377 378 379 380\"\n\"381 382 383 384 385\"\n\"386 387 388 389 390\"\n\"391 392 393 394 395\"\n\"396 397 398 399 400\"\n\"401 402 403 404 405\"\n\"406 407 408 409 410\"\n\"411 412 413 414 415\"\n\"416 417 418 419 420\"\n\"421 422 423 424 425\"\n\"426 427 428 429 430\"\n\"431 432 433 434 435\"\n\"436 437 438 439 440\"\n\"441 442 443 444 445\"\n\"446 447 448 449 450\"\n\"451 452 453 454 455\"\n\"456 457 458 459 460\"\n\"461 462 463 464 465\"\n\"466 467 468 469 470\"\n\"471 472 473 474 475\"\n\"476 477 478 479 480\"\n\"481 482 483 484 485\"\n\"486 487 488 489 490\"\n\"491 492 493 494 495\"\n\"496 497 498 499 500\"\n\"501 502 503 504 505\"\n\"506 507 508 509 510\"\n\"511 512 513 514 515\"\n\"516 517 518 519 520\"\n\"521 522 523 524 525\"\n\"526 527 528 529 530\"\n\"531 532 533 534 535\"\n\"536 537 538 539 540\"\n\"541 542 543 544 545\"\n\"546 547 548 549 550\"\n\"551 552 553 554 555\"\n\"556 557 558 559 560\"\n\"561 562 563 564 565\"\n\"566 567 568 569 570\"\n\"571 572 573 574 575\"\n\"576 577 578 579 580\"\n\"581 582 583 584 585\"\n\"586 587 588 589 590\"\n\"591 592 593 594 595\"\n\"596 597 598 599 600\"\n\"601 602 603 604 605\"\n\"606 607 608 609 610\"\n\"611 612 613 614 615\"\n\"616 617 618 619 620\"\n\"621 622 623 624 625\"\n\"626 627 628 629 630\"\n\"6"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n\n\"\"\"\n-----Thoughts----\n- We can find the min cost by starting at Square 0 and backtracking to find all the valid paths to the goal\n- We can do this with a recursive approach using a min queue\n- Each time we call the recursive function, we add the current cost to the queue\n- When we reach the goal, we return the current cost\n- We can store the current cost in the array to return at the end\n- If we can't reach the goal, we return -1 (invalid path)\n- Time - O(N^2)\n- Space - O(N)\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 3') == '1'\nassert solution('2 1 4') == '1'\nassert solution('2 2 2') == '0'\nassert solution('3 4 3') == '1'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"1 2 4\") == \"1\"\nassert solution(\"1 2 4\") == \"1\"\nassert solution(\"1 2 4\") == \"1\"\nassert solution(\"1 2 4\") == \"1\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2 4') == '1'\nassert solution('1 2 4 3') == '4'\nassert solution('1 2 4 5') == '3'\nassert solution('1 2 4 5 6 7 8 9 10') == '2'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 3 3\\n1 2 4') == 1\nassert solution('5 3 2\\n1 2 4') == 2\nassert solution('5 2 3\\n1 2 4') == 2\nassert solution('5 3 3\\n1 2 4') == 1\nassert solution('5 3 2\\n1 2 4') == 2\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3 4') == '1'\nassert solution('1 2 3') == '4'\nassert solution('2 3 4') == '5'\nassert solution('3 4 5') == '6'\nassert solution('4 3 4') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n-----My Code-----\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''1 1\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''\n3 2\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == \"Yes\"\nassert solution('''3 3\n..#\n###\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n.#.\") == \"Yes\"\nassert solution(\"3 3\\n#...\\n#.#.\\n#.##\\n#...\\n#.#.\\n###\\n.##\\n#.##\\n###\") == \"No\"\nassert solution(\"3 3\\n.#.#\\n#.#.\\n#.#.\\n#.#.\\n.#.#\\n#.###\\n#...#\\n#..#.\\n.#.#\") == \"No\"\nassert solution(\"3 3\\n.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n###\") == \"No\"\nassert solution(\"3 3\\n.#.\\n###\\n.#.\") == \"No\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n-----Binary search-----\n - H: 2 <= H <= 50,\n - W: 2 <= W <= 50,\n - s_{i, j} is # or.. for any (i, j) (1 <= i <= H, 1 <= j <= W)\n\nThe expected output is Yes or No.\n\n-----Answer-----\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n\n\"\"\"\n-----My Solution-----\n\n- I used DFS to get the result.\n- I tried a DP solution to store the current color of the grid.\n- I used a set to store the \"finded\" colors.\n- I used a flag to record whether the grid is painted.\n- To find a color that was not painted, I used a depth-first-search.\n\n\"\"\""
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 5\\n#.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\") == \"Yes\\n\"\nassert solution(\"3 3\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\") == \"No\\n\"\nassert solution(\"7 3\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\") == \"Yes\\n\"\nassert solution(\"7 3\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\\n.#.#.#.#.#.#.\") == \"Yes\\n\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('100 30 20') == 'No'\nassert solution('15 40 15') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('100 30 50') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 10 10') == 'No'\nassert solution('10 30 20') == 'Yes'\nassert solution('10 10 10') == 'No'\nassert solution('10 30 50') == 'No'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 30 20\") == \"Yes\"\nassert solution(\"10 30 50\") == \"No\"\n\n\"\"\"\n\na, b, c = map(int, input().split())"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 30 20''') == 'Yes'\nassert solution('''10 30 10''') == 'Yes'\nassert solution('''10 30 20''') == 'No'\nassert solution('''100 1000 100''') == 'No'\nassert solution('''10 100 50''') == 'No'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('20 30 10') == 'No'\nassert solution('10 30 20') == 'Yes'\nassert solution('20 30 10') == 'No'\n\"\"\""
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 30') == 'No'\nassert solution('10 30 30 30') == 'No'\nassert solution('10 30 30 30 30') == 'Yes'\nassert solution('10 30 30 30 30 30') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"100 50 10\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 4 1') == 'Left'\nassert solution('1 1 1 1') == 'Right'\nassert solution('1 2 1 2') == 'Balanced'\nassert solution('2 2 1 2') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == 'Left'\nassert solution('3 4 2 1') == 'Right'\nassert solution('3 4 3 1') == 'Left'\nassert solution('3 4 2 1') == 'Right'\nassert solution('3 4 3') == 'Balanced'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('5 5 5 5') == 'Balanced'\nassert solution('5 5 5 5') == 'Balanced'\n\n'''\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('5 6 7 9') == 'Balanced'\nassert solution('5 6 7 9') == 'Balanced'\nassert solution('1 1 1 1') == 'Right'\nassert solution('3 2 5 4') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == 'Left'\nassert solution('1 1 1 1') == 'Balanced'\nassert solution('2 1 3 4') == 'Right'\nassert solution('3 4 2 1') == 'Left'\nassert solution('3 1 2 4') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 8 7 1') == 'Left'\n\nassert solution('3 1 7 1') == 'Balanced'\n\nassert solution('1 1 1 1') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Left\"\nassert solution(\"2 4 4 3\") == \"Left\"\nassert solution(\"3 4 4 4\") == \"Right\"\nassert solution(\"5 6 7 8\") == \"Right\"\nassert solution(\"1 2 3 4\") == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Right'\nprint('Test 1 passed')\n\nprint(solution(stdin))\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 3 3 3\") == \"Left\"\nassert solution(\"8 4 5 6\") == \"Left\"\nassert solution(\"8 4 3 6\") == \"Balanced\"\nassert solution(\"6 5 4 3\") == \"Right\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == '8'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\nassert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\nassert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\nassert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\nassert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == '8'\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == '8'\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 -5 -1 -2 -1 -4 -1 -3 -2 -3 -4 -1\") == '20'\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 -5 -1 -2 -1 -4 -1 -3 -2 -3 -4 -1\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\") == '20'\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 -5 -1 -2 -1 -4 -1 -3 -2 -3 -4 -1\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\") == '20'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution(\n'''1\n1 1 1 1 1 1 1 1 1 1\n3 4 4 4 4 4 4 4 4 4\n''') == '8'\n\nassert solution(\n'''1\n1 1 1 1 1 1 1 1 1 1\n3 4 4 4 4 4 4 4 4 4\n''') == '8'\n\nassert solution(\n'''1\n1 1 1 1 1 1 1 1 1 1\n3 4 4 4 4 4 4 4 4 4\n''') == '8'"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\"\"\") == 8\nassert solution(\"\"\"1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == 8\nassert solution(\"\"\"1\n1 1 0 1 0 0 0 1 0 1\n0 0 0 0 0 0 0 0 0 0\n\"\"\") == 0\nassert solution(\"\"\"1\n1 1 0 1 0 0 0 1 0 1\n0 0 0 0 0 0 0 0 0 0\n\"\"\") == 0\nassert solution(\"\"\"1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == 8\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '6'\nassert solution('3\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0 1 1 1 1 0 0 0 1 0 1\\n1 1 1 1 1 1 1 1 1 1 1') == '12'\nassert solution('4\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0 1 1 1 1 0 0 0 1 0 1\\n1 1 1 1 1 1 1 1 1 1 1\\n0 1 1 1 1 1 1 1 1 1 1') == '10'\nassert solution('5\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0 1 1 1 1 0 0 0 1 0 1\\n1 1 1 1 1 1 1 1 1 1 1\\n0 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1') == '6'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution('''\n2\n0 0 1 0 0 0 0 1 0 1\n0 0 1 0 0 0 0 1 0 1\n''') == '8'\n\nassert solution('''\n3\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n''') == '9'\n\nassert solution('''\n4\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n''') == '8'\n\nassert solution('''\n5\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n''') == '10'"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n4 4 4 4 4 4 4 4 4 4 4\\n-2 -3 4 -2\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5\\n\") == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1''') == '8'\nassert solution('''3\n1 1 0 1 0 0 0 1 0 1''') == '8'\nassert solution('''3\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2''') == '16'\nassert solution('''1\n1 1 0 1 0 0 0 1 0 1''') == '8'\nassert solution('''2\n1 1 0 1 0 0 0 1 0 1\n1 1 0 1 0 0 0 1 0 1\n''') == '6'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4') == \"Yes\"\nassert solution('4 3') == \"No\"\nassert solution('0 0') == \"Yes\"\nassert solution('0 2') == \"No\"\nassert solution('9 9') == \"Yes\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n\n'''\n\nA, B = map(int, stdin.split(' '))\nS = stdin.strip()"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4''') == 'Yes'\nassert solution('''269-6650''') == 'Yes'\nassert solution(''''269-6650''') == 'No'\nassert solution('''5 4''') == 'No'\nassert solution('''2 1''') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'No'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('1 2 -') == 'No'\nassert solution('1 2 -3') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(r'3 4\\n269-6650') == 'Yes'\nassert solution(r'4 2\\n12345') == 'No'\nassert solution(r'4 2\\n123456789') == 'Yes'\nassert solution(r'4 3\\n11123') == 'Yes'\nassert solution(r'4 3\\n11223') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()[1]\n\"\"\""
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('269-6650') == 'Yes'\nassert solution('306-8217') == 'Yes'\nassert solution('269-6650') == 'No'\nassert solution('266-6650') == 'No'\nassert solution('333-6650') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"No\"\nassert solution(\"-1 2\") == \"Yes\"\nassert solution(\"2-1\") == \"Yes\"\nassert solution(\"2-1\") == \"Yes\"\nassert solution(\"1-2-3\") == \"No\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('-6.6') == 'Yes'\nassert solution('-2') == 'No'\nassert solution('-0.5') == 'No'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 4 6') == '3'\nassert solution('3 6 4') == '3'\nassert solution('3 6 6') == '3'\nassert solution('4 3 5') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('1 1 1') == '0'\nassert solution('2 4 4') == '2'\nassert solution('3 4 5') == '1'\nassert solution('5 4 5') == '0'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 2 6') == '1'\nassert solution('3 2 6') == '1'\n\"\"\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"2 3 1\") == \"3\"\nassert solution(\"3 1 2\") == \"2\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"3 2 2\") == \"0\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"2 3 4\") == \"0\"\nassert solution(\"5 3 6\") == \"1\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\n\n\"\"\""
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 6') == 1\nassert solution('4 1 6') == 1\nassert solution('2 2 3') == 1\nassert solution('5 1 2') == 3\nassert solution('1 1 1') == 0\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"5 4 2\") == \"3\"\nassert solution(\"7 4 2\") == \"4\"\nassert solution(\"3 2 6\") == \"1\"\nassert solution(\"5 4 2\") == \"3\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n        \"3 8 2\"\n    ) == \"3\"\nassert solution(\n        \"5 1 7\"\n    ) == \"3\"\nassert solution(\n        \"4 1 4\"\n    ) == \"3\"\nassert solution(\n        \"3 1 4\"\n    ) == \"3\"\nassert solution(\n        \"3 2 4\"\n    ) == \"3\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8\\n'\nassert solution('3 9 2') == '3\\n4\\n7\\n9\\n'\nassert solution('3 2 8') == '3\\n4\\n5\\n7\\n8\\n'\nassert solution('3 9 6') == '3\\n4\\n5\\n7\\n9\\n'\nassert solution('3 5 2') == '3\\n4\\n5\\n7\\n'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 8 2''') == '3\\n4\\n7\\n8'\nassert solution('''-2 -2 2''') == '-2\\n2'\nassert solution('''10 10 2''') == '-1'\nassert solution('''2 -1 1''') == '2\\n1'\nassert solution('''-1 -1 1''') == ''\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 9 2') == \"3 4 7 8\"\nassert solution('1 10 2') == \"2\"\nassert solution('1 11 2') == \"2\"\nassert solution('1 10 3') == \"1\"\nassert solution('1 100 1') == \"1\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8\\n'\nassert solution('3 8 2') == '3\\n4\\n7\\n8\\n'\nassert solution('3 5 2') == '3\\n4\\n'\nassert solution('3 5 2') == '3\\n4\\n'\nassert solution('3 10 2') == '3\\n4\\n7\\n8\\n'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('10 10 10') == '2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('2 2 2') == '2\\n3\\n4\\n5\\n6\\n7\\n8\\n9'\nassert solution('2 2 10') == '2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('2 2 10') == '2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 8 2\") == \"\"\nassert solution(\"3 8 2\") == \"\"\nassert solution(\"3 8 2\") == \"\"\nassert solution(\"3 8 2\") == \"\"\nassert solution(\"3 8 2\") == \"\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('3 8 2') == '4'\nassert solution('3 8 2') == '7'\nassert solution('3 8 2') == '8'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('ABC') == 'ABC'\nassert solution('AB') == 'AB'\nassert solution('A') == 'A'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[0][0] + 'C'\nassert solution(stdin) == stdin.split()[1]\nassert solution(stdin) == stdin.split()[2][0] + 'C'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'abc'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('abcdefghi') == 'abcdefghi'\nassert solution('abcdefghijkl') == 'abcdefghijkl'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"HelloWorld\") == \"HelloWorld\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"ABC\"\n\n\"\"\"\n\"\"\"\nThe contest in which you are participating now.\n\"\"\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"ABc\") == \"Aa\"\nassert solution(\"abcd\") == \"Aa\"\nassert solution(\"ABC\") == \"Aa\"\nassert solution(\"ABCD\") == \"Aa\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 2 7') == 'NO'\nassert solution('1 1 2') == 'NO'\nassert solution('1 2 1') == 'YES'\nassert solution('3 4 3') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 4') == 'YES'\nassert solution('1 2 3') == 'YES'\nassert solution('1 1 1') == 'NO'\nassert solution('3 4 4') == 'YES'\nassert solution('1 1 2') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4 2') == 'YES'\nassert solution('3 2 3') == 'YES'\nassert solution('5 2 2') == 'YES'\nassert solution('3 3 2') == 'NO'\nassert solution('3 1 2') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"YES\"\nassert solution(\"3 4 4\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\n\"\"\"\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('1 1 2') == 'NO'\nassert solution('4 4 4') == 'YES'\nassert solution('7 7 7') == 'NO'\nassert solution('1 100 1') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100 17') == '83'\n\n\"\"\""
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(100, 17) == \"83\"\nassert solution(\"100 17\") == \"83\"\nassert solution(\"100 17\") == \"83\"\nassert solution(\"50 18\") == \"36\"\nassert solution(\"50 18\") == \"36\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"100 17\") == \"83\"\nassert solution(\"100 17\") == \"83\"\nassert solution(\"1000000 17\") == \"5000000\"\nassert solution(\"10 100\") == \"0\"\nassert solution(\"10 1000\") == \"10\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100 17\") == \"83\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100 17') == '83'\nassert solution('100 4') == '50'\nassert solution('10000 4') == '4999'\nassert solution('100 4') == '50'\nassert solution('1000 4') == '500'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 17') == '83'\n\"\"\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 17') == '83'\n\"\"\""
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '-1'\nassert solution('100000000 1000000000') == '10000000000000000000'\nassert solution('100000000 1000000000') == '-1'\nassert solution('100000000 1') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100000') == '1000000000000000000'\nassert solution('10000000') == '-1'\nassert solution('100000000') == '-1'\nassert solution('1000000000') == '1000000000000000000'\nassert solution('10000000000') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('2 2') == '4'\nassert solution('0 0') == '0'\nassert solution('10 10') == '100'\nassert solution('1000000000000 1000000000') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000000000 1000000000') == -1\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\n\nassert solution('''3\n1000000000 1000000000''') == '-1'\n\nassert solution('''4\n1000000000 1000000000''') == '-1'\n\nassert solution('''5\n1000000000 1000000000''') == '-1'\n\nassert solution('''6\n1000000000 1000000000''') == '-1'"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\"\"\"\nfrom sys import stdin\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"9 9\") == \"9999999999\"\nassert solution(\"1 1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"1 1000000000 1000000000\") == \"-1\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1000000000 1000000000') == '1000000000000000000'\n\"\"\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == -1\nassert solution('0 0') == 0\nassert solution('0 0 0') == 0\nassert solution('1 0') == -1\nassert solution('1000000000 1000000000') == -1\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2018\\n218') == 'Yes'\n\"\"\"\n\nn = int(input())\n\na = int(input())"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('18') == 'Yes'\nassert solution('10') == 'No'\nassert solution('1000') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('2018\\n4960') == 'No'\nassert solution('2018\\n618') == 'Yes'\nassert solution('2018\\n2184960') == 'Yes'\nassert solution('2018\\n21864960') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('10\\n1') == 'No'\nassert solution('10\\n100') == 'No'\nassert solution('8\\n100') == 'Yes'\nassert solution('8\\n200') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2018\n218''') == 'Yes'\nassert solution('''2\n1''') == 'No'\nassert solution('''17\n10''') == 'Yes'\nassert solution('''100\n200''') == 'No'\nassert solution('''4\n5''') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2018\n218''') == 'Yes'\nassert solution('''123\n182''') == 'No'\n'''\n\nimport sys\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('18') == 'No'\nassert solution('17') == 'No'\nassert solution('1000') == 'Yes'\nassert solution('1800') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"0\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nassert solution(\"10\\n10\") == \"No\""
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nassert solution(\"2018\\n222\") == \"No\"\nassert solution(\"2018\\n221\") == \"Yes\"\nassert solution(\"2018\\n1156\") == \"Yes\"\nassert solution(\"2018\\n943\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10 10') =='safe'\nassert solution('2 9 1') == 'dangerous'\nassert solution('6 10 7') == 'dangerous'\nassert solution('9 9 7') == 'dangerous'\nassert solution('6 9 8') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') =='safe'\nassert solution('1 1 2') == 'dangerous'\nassert solution('1 1 2') == 'dangerous'\nassert solution('1 1 2') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 6') =='safe'\nassert solution('5 4 6') == 'dangerous'\nassert solution('4 3 6') =='safe'\nassert solution('1 2 3') == 'dangerous'\nassert solution('1 1 1') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\") == \"safe\"\nassert solution(\"3 2 1\") == \"dangerous\"\nassert solution(\"1 1 2\") == \"dangerous\"\nassert solution(\"1 3 2\") == \"dangerous\"\nassert solution(\"1 3 5\") == \"dangerous\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '9'\nassert solution('0') == '0'\nassert solution('-2') == '-1'\nassert solution('9') == '9'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == '9'\nassert solution('9') == '9'\nassert solution('100') == '99'\nassert solution('3') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"4\"\nassert solution(\"10\\n\") == \"9\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'\nassert solution('10000') == '9999'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10''') == '9'\nassert solution('''1000''') == '9'\nassert solution('''10000000''') == '9'\nassert solution('''100000000000000000000''') == '9'\nassert solution('''100000000000000000001000''') == '9'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10''') == 9\nassert solution('''1''') == 1\nassert solution('''2''') == 4\nassert solution('''3''') == 9\nassert solution('''4''') == 16\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10''') == 9\nassert solution('''1''') == 1\nassert solution('''123''') == 9\nassert solution('''12345''') == 45\nassert solution('''9000''') == 0\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"6\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '9'\nassert solution('1') == '1'\nassert solution('100') == '99'\nassert solution('10000') == '9999'\nassert solution('1234567890') == '123456789'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '9'\nassert solution('2') == '1'\nassert solution('1000') == '999'\nassert solution('999999') == '999999'\nassert solution('90000') == '999999'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''2\n2 1\n3 2''') == '2'\nassert solution('''3\n1 1\n3 2\n1 1''') == '2'\nassert solution('''6\n2 1\n2 2\n1 1\n1 1\n1 1\n1 1''') == '2'\nassert solution('''3\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '2'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n3 2\") == '10'\nassert solution(\"2\\n2\\n\") == '2'\nassert solution(\"1 1\\n2 2\\n\") == '1'\nassert solution(\"1 2\\n2 1\\n\") == '0'\nassert solution(\"3 2\\n1 1\\n3 2\\n\") == '10'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"3 5\") == \"7\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 1\\n3 2') == '10'\nassert solution('1\\n1\\n1') == '1'\nassert solution('3\\n2 3\\n1 1\\n3 2') == '10'\nassert solution('2\\n3\\n1') == '6'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 3\n1 1\n3 2''') == '10'\n'''\nassert solution('''10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 1 3\") == \"3\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\n'''\n\nimport sys\nfrom math import gcd\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == \"10\"\nassert solution('''3\n2 3\n1 1\n3 2''') == \"10\"\nassert solution('''3\n2 3\n1 1\n3 2''') == \"10\"\nassert solution('''3\n2 3\n1 1\n3 2''') == \"10\"\nassert solution('''5\n2 3\n1 1\n3 2\n4 3\n5 4''') == \"30\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"copyrightable\") == \"no\"\n\n\"\"\""
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('abcd') == 'no'\nassert solution('asdfgh') == 'yes'\nassert solution('A') == 'no'\nassert solution('ABC') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == \"yes\"\nassert solution('a') == \"no\"\nassert solution('abcdefghijklmnopqrstuvwxyz') == \"yes\"\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == \"no\"\nassert solution('abcdefghijklmnopqrstuvwxyz0123456789') == \"no\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'yes'\nassert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightablebbc') == 'no'\nassert solution('uncopyrightable') == 'no'\nassert solution('uncopyrightableeeee') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'yes'\nassert solution('uncopyrightable') == 'yes'\nassert solution('a') == 'no'\nassert solution('abcde') == 'yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'no'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"yes\"\n\n\"\"\""
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'yes'\n'''"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'yes'\nassert solution('uncopyrightable') == 'yes'\nassert solution('abc') == 'no'\nassert solution('abcabc') == 'no'\nassert solution('abcabcabc') == 'yes'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('uncopyrightable') == \"yes\"\nassert solution('copyrightable') == \"no\"\nassert solution('a') == \"yes\"\nassert solution('abc') == \"no\"\nassert solution('aabbccddeeff') == \"no\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEEEEE') == '0'\nassert solution('WEEWWE') == '3'\nassert solution('EEWEWE') == '4'\nassert solution('EEEEEEWE') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('5\\nEEEEW') == '0'\nassert solution('5\\nEEEWE') == '1'\nassert solution('5\\nEEEEW') == '2'\nassert solution('5\\nWEEEEW') == '2'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('WEEWW') == 1\nassert solution('EEWW') == 0\nassert solution('EWWE') == 1\nassert solution('WEWE') == 0\nassert solution('WE') == 0\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"WEEWW\") == \"1\"\nassert solution(\"WEEWEEEWW\") == \"0\"\nassert solution(\"WEEWWEEWWE\") == \"3\"\nassert solution
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"WEEWW\") == \"1\"\nassert solution(\"EEWEEW\") == \"0\"\nassert solution(\"WWWE\") == \"1\"\nassert solution(\"EEWE\") == \"2\"\nassert solution(\"EEWW\") == \"3\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WE') == '1'\nassert solution('WW') == '0'\nassert solution('EE') == '2'\nassert solution('EW') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WEENEE') == '0'\nassert solution('WEENEEWE') == '1'\nassert solution('WEENEEEW') == '0'\nassert solution('WEENE') == '0'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('WWEEE') == '1'\nassert solution('WEEEEW') == '1'\nassert solution('EWWEEE') == '1'\nassert solution('WWWWWEE') == '2'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEWWE') == '1'\nassert solution('EEWEWE') == '1'\nassert solution('WEEEWW') == '1'\nassert solution('WEEWEW') == '2'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('WEEWW') == \"1\"\nassert solution('EWEWW') == \"0\"\nassert solution('EWEEWWE') == \"2\"\nassert solution('WWWE') == \"2\"\nassert solution('W') == \"1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('2 3\\n1 2\\n2 3\\n1 4\\n1 3') == '2\\n2\\n1\\n1'\nassert solution('4 3\\n1 2\\n2 3\\n1 4\\n1 3\\n2 3\\n1 3') == '2\\n2\\n1\\n1'\nassert solution('4 4\\n1 2\\n2 3\\n1 4\\n1 3\\n2 3\\n1 3') == '3\\n3\\n2\\n2'\nassert solution('8 4\\n1 2\\n2 3\\n1 4\\n1 3\\n2 3\\n1 3\\n1 4\\n1 5') == '3\\n3\\n2\\n2'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n2 3\n1 4\n\"\"\") == \"\"\"\n2\n2\n1\n1\n\"\"\"\n\nassert solution(\"\"\"\n5 4\n1 2\n2 3\n1 4\n3 4\n\"\"\") == \"\"\"\n2\n2\n1\n1\n1\n\"\"\"\n\nassert solution(\"\"\"\n5 4\n1 2\n2 3\n1 4\n3 4\n4 5\n\"\"\") == \"\"\"\n2\n2\n1\n1\n1\n\"\"\"\n\nassert solution(\"\"\"\n6 5\n1 2\n1 3\n1 4\n1 5\n2 4\n2 5\n\"\"\") == \"\"\"\n3\n3\n2\n2\n2\n\"\"\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1'\n'''\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u0447\u0435\u0442\u044b\u0440\u0435 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 M, N, a1, b1, \u0430 \u0437\u0430\u0442\u0435\u043c M \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 ai, bi,...,an.\n\u041a\u0430\u0436\u0434\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c.\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0447\u0438\u0441\u043b\u043e 1, \u0435\u0441\u043b\u0438 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0447\u0438\u0441\u043b\u0430, \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432 \u043e\u0431\u043e\u0438\u0445 \u0441\u0442\u0440\u043e\u043a\u0430\u0445.\n\u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u0438\u0445 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e, \u043e\u0442\u0432\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043b\u0438\u0448\u044c \u043e\u0434\u043d\u0438\u043c, \u043d\u0435 \u0441\u0447\u0438\u0442\u0430\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0442\u0440\u043e\u043a.\n\n\u041f\u0440\u0438\u043c\u0435\u0440\u044b\n\n\u0422\u0435\u0441\u0442 1\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n2 3\n1 2\n2 3\n1 4\n\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n2\n2\n1\n1\n\n\u0422\u0435\u0441\u0442 2\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n3 4\n2 3\n1 2\n1 4\n1 3\n\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n1\n1\n1\n1\n\n'''\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1'\n'''"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2\\n2 3\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"2 3\\n1 2\\n2 3\\n\") == \"2\\n2\\n1\\n1\""
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\n\"\"\""
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2\") == \"\"\nassert solution(\"2 3\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"3 4\") == \"\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1'\n'''\nAssume the given input is such that the number of cities is at most 50.\n1\u2264N\u226450\n1\u2264M\u226450\n1\u2264a_i,b_i\u2264N\na_i \u2260 b_i\na_i,b_i is a pair of integers that represent a connection between two cities.\n\n'''\nfrom itertools import permutations\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'\n\nassert solution('''6 5\n2 3\n1 4\n4 5\n3 5\n4 1\n5 4\n''') == '2\\n4\\n5\\n1'\n\nassert solution('''5 4\n1 2\n2 3\n3 4\n4 5\n1 5\n''') == '2\\n1'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n15\\n') == '25'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\") == \"25\"\nassert solution(\"10\\n15\\n15\") == \"25\"\nassert solution(\"7\\n10\\n7\") == \"7\"\nassert solution(\"7\\n7\\n7\") == \"7\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"5\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"11\") == \"10\"\nassert solution(\"111\") == \"110\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1\\n2') == '0'\nassert solution('3\\n5\\n10') == '25'\nassert solution('2\\n2\\n2') == '0'\nassert solution('3\\n5\\n15') == '25'\nassert solution('3\\n5\\n100') == '25'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '25'\n\n'''\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1\\n2\\n') == '3'\nassert solution('1\\n10\\n15\\n') == '30'\nassert solution('1\\n10\\n15\\n') == '30'\nassert solution('1\\n10\\n15\\n') == '30'\nassert solution('2\\n1\\n2\\n') == '3'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\naabbca') == '2'\nassert solution('5\\nabccd') == '2'\nassert solution('2\\naabbca') == '2'\nassert solution('5\\nabccd') == '2'\nassert solution('2\\naabbca') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabbca') == '2'\nassert solution('abcdefg') == '1'\nassert solution('abbbca') == '2'\nassert solution('abcdefgh') == '1'\nassert solution('abcdg') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ab') == '1'\nassert solution('aa') == '1'\nassert solution('aaab') == '2'\nassert solution('aabb') == '2'\nassert solution('aabbca') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabbca') == 2\nassert solution('a') == 1\nassert solution('aa') == 1\nassert solution('aaa') == 1\nassert solution('aaaa') == 1\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\naabbca''') == '2'\nassert solution('''2\naabbca''') == '1'\nassert solution('''11\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aabbca\") == \"2\"\nassert solution(\"aabccca\") == \"2\"\nassert solution(\"aaabbbccca\") == \"2\"\nassert solution(\"ababcdcd\") == \"1\"\nassert solution(\"ababcdcd\") == \"1\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n6\naabbca\n'''\n    ) == '2'\nassert solution(\n'''\n7\naabbbccddda\n'''\n    ) == '3'\nassert solution(\n'''\n10\naabccccdddda\n'''\n    ) == '3'\nassert solution(\n'''\n7\nccdddda\n'''\n    ) == '1'\nassert solution(\n'''\n10\nccddddddddd\n'''\n    ) == '1'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aabbca') == 2\nassert solution('a') == 1\nassert solution('b') == 1\nassert solution('aabbc') == 2\nassert solution('aabbcc') == 2\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6\naabbca\n''') == '2'\nassert solution('''\n4\nabcd\n''') == '1'\nassert solution('''\n2\naa\n''') == '0'\nassert solution('''\n100\naab\n''') == '0'\nassert solution('''\n6\naabbca\n''') == '2'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('SunnAy') == 'Rainy'\nassert solution('SunnAyCluoY') == 'Rainy'\nassert solution('SunnAyClOuY') == 'Cloudy'\nassert solution('SunnAyClUoY') == 'Rainy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Rainy'\nassert solution('Sunny') == 'Sunny'\nassert solution('Cloudy') == 'Cloudy'\nassert solution('Rainy') == 'Rainy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nprint(\"Test case 1 passed.\")\nprint()\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Cloudy') == 'Cloudy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''Sunny\n'''\n) == '''Cloudy\n'''\n\nassert solution(\n    '''Sunny\n'''\n) == '''Cloudy\n'''\n\nassert solution(\n    '''Rainy\n'''\n) == '''Sunny\n'''\n\nassert solution(\n    '''Sunny\n'''\n) == '''Sunny\n'''\n\nassert solution(\n    '''Sunny\n'''\n) == '''Sunny\n'''"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[::-1]\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Cloudy\"\n\n\"\"\""
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Rainy') == 'Rainy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Cloudy\""
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunshine') == 'Rainy'\nassert solution('Sunshine and Sunshine') == 'Sunshine'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"4 10 2\") == \"2\"\nassert solution(\"10 4 1000\") == \"9\"\nassert solution(\"3 0 3\") == \"1\"\nassert solution(\"10 2 3\") == \"4\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 17 120') == '119'\nassert solution('10 16 100') == '109'\nassert solution('10 22 100') == '121'\nassert solution('1 2 3') == '6'\nassert solution('10 100 2000') == '1'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 17 120\") == \"119\"\nassert solution(\"7 17 120\") == \"119\"\nassert solution(\"8 17 120\") == \"118\"\nassert solution(\"8 17 21 120\") == \"118\"\nassert solution(\"8 17 21 120\") == \"119\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('1 5 8') == '24'\nassert solution('7 1 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 1200') == '119'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"119\""
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 17 120') == '119'\n'''\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"7 17 120\"\n) == \"119\"\nassert solution(\n    \"6 21 13\"\n) == \"26\"\nassert solution(\n    \"1 10 3\"\n) == \"12\"\nassert solution(\n    \"5 17 2\"\n) == \"17\"\nassert solution(\n    \"4 17 2\"\n) == \"17\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '3800'\n\"\"\""
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '3800'\n\"\"\"\nimport sys\nimport time"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"2 2\") == \"4200\"\nassert solution(\"3 3\") == \"6000\"\nassert solution(\"4 4\") == \"8000\"\nassert solution(\"5 5\") == \"10000\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '3800'\nassert solution('3 3') == '3800'\nassert solution('4 4') == '3800'\nassert solution('5 5') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 2') == '5798'\nassert solution('1 3') == '8953'\nassert solution('1 4') == '11658'\nassert solution('1 5') == '13970'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '3800'\nassert solution('3 2') == '6800'\nassert solution('2 3') == '8200'\nassert solution('3 3') == '9700'\nassert solution('2 10') == '18000'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '5200'\nassert solution('3 3') == '9480'\nassert solution('4 4') == '13860'\nassert solution('5 5') == '16800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1 2\") == \"3800\"\nassert solution(\"1 3\") == \"29400\"\nassert solution(\"2 3\") == \"396800\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3800'\nassert solution('5 2') == '2600'\nassert solution('5 3') == '3200'\nassert solution('5 4') == '3400'\nassert solution('5 5') == '3400'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '3800'\n\"\"\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == None\nassert solution('atcoderregularcontest') == None\nassert solution('abcdefghijklmnopqrstuvwxyz') == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('abcd') == 'b'\nassert solution('abc') == 'b'\nassert solution('abcdef') == 'b'\nassert solution('abcdefg') == 'c'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('a') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('abcdefg') == 'h'\nassert solution('baz') == 'z'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'b'\n\"\"\""
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoderregularcontest') == 'b'"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\"\"\"\n\nfrom itertools import count\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('abc') == None\nassert solution('grievous') == 'a'\nassert solution('coderregularcontest') == 'a'\nassert solution('regularcontest') == 'a'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest2\") == None\n\nprint(\"Test1: \", solution(\"atcoderregularcontest\"))\nprint(\"Test2: \", solution(\"atcoderregularcontest2\"))\n\"\"\""
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('a') == 'b'\nassert solution('a') == 'b'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n2 4 4 3\\n') == '4\\n3\\n3\\n4'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\") == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50'"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('2\\n1\\n1') == '1'\nassert solution('2\\n1\\n2') == '2'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n2 4 4 3\\n') == '4\\n3\\n3\\n4'\nassert solution('4\\n1 2 3 4\\n') == '4\\n1\\n1\\n4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n10'\n'''\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"2 4 4 3\") == \"3\"\nassert solution(\"2 4 4\") == \"3\"\nassert solution(\"2 4 3\") == \"3\"\nassert solution(\"1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 3\") == \"4\\n3\\n3\\n4\"\n\"\"\""
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 4 4 3\\n') == '4\\n3\\n3\\n4'\nassert solution('1\\n2\\n2 2\\n2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\n2 4 4 3'''\n) == '4\\n3\\n3\\n4'\n\nassert solution(\n'''8\n0 2 3 4 5 6 7 8'''\n) == '0\\n2\\n3\\n4\\n6\\n7\\n8'\n\nassert solution(\n'''8\n4 1 2 4 3 4 2 1'''\n) == '4\\n4\\n2\\n4\\n2\\n4\\n1'\n\nassert solution(\n'''8\n4 4 2 3 4 3 2 2'''\n) == '4\\n2\\n3\\n4\\n4\\n3\\n2'\n\nassert solution(\n'''8\n3 3 2 2 2 1 1'''\n) == '3\\n3\\n3\\n3\\n2\\n2\\n2'"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n3 1 2 4 2 1\\n') == 2\nassert solution('10\\n10 2 10 4 10 6 2 10 8 10 10 10 10 2 10\\n') == 4"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n2\n3 1 2\n'''\n) == '2'\n\nassert solution(\n'''\n4\n1 3 2 2\n'''\n) == '0'\n\nassert solution(\n'''\n6\n3 1 2 4 2 1\n'''\n) == '2'\n\nassert solution(\n'''\n6\n1 1 1 1 1 1\n'''\n) == '0'\n\nassert solution(\n'''\n6\n1 2 1 1 1 1\n'''\n) == '1'"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"2\\n3\") == \"3\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"3\\n2\") == \"2\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('7\\n1 2 3 4 3 2 1') == '0'\nassert solution('8\\n1 2 3 4 2 1 3 2') == '2'\nassert solution('9\\n1 2 3 4 3 2 1 3 3 2') == '4'\nassert solution('10\\n1 2 3 4 3 2 1 3 3 3 2') == '0'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '2'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n3 1 2 4 2 1''') == '2'\nassert solution('''10\n10 9 8 7 6 5 4 3 2 1''') == '0'\nassert solution('''6\n1 2 2 4 2 1''') == '2'\nassert solution('''7\n1 2 2 4 2 1 3''') == '0'\nassert solution('''6\n4 4 4 4 4 4 4''') == '16'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2'\n\"\"\""
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2 4 2 1\") == 2\nassert solution(\"3 1 2 4 2 1\") == 2\nassert solution(\"4 1 2 4 2 1\") == 8\nassert solution(\"1 1\") == 1\nassert solution(\"2 2\") == 4\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == '8'\nassert solution('''1\n1\n''') == '0'\nassert solution('''2\n4\n1\n2\n3''') == '5'\nassert solution('''2\n7 4\n1\n2\n3''') == '10'\nassert solution('''2\n8 5\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '20'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('10\\n3\\n1') == '10'\nassert solution('2\\n7 1\\n2') == '3'\nassert solution('3\\n7 1\\n2\\n5') == '8'\n\"\"\"\nimport sys\nassert sys.argv[1] == '3'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n2') == '1'\nassert solution('1\\n1\\n1\\n2') == '2'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"10\\n3 1\") == \"8\"\nassert solution(\"10\\n3 4\\n2\") == \"9\"\nassert solution(\"10\\n4 1\\n2\") == \"10\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('2\\n4 3\\n1 2\\n3\\n2') == '0'\nassert solution('2\\n3 4\\n1 2\\n2 3\\n3 1') == '2'\nassert solution('2\\n4 3\\n1 2\\n2 3\\n3 4') == '2'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1\\n2') == '1'\nassert solution('2\\n2\\n2\\n2') == '2'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '2'\nassert solution('3\\n2\\n2\\n2\\n2\\n2') == '3'\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == '6'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '4'\nassert solution('4 4') == '6'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == \"8\"\nassert solution('''3\n7 4\n2\n5\n10\n3\n7\n1\n2''') == \"8\"\nassert solution('''3\n6 4\n2\n5\n10\n3\n7\n1\n2''') == \"8\"\nassert solution('''3\n10 4\n2\n5\n10\n3\n7\n1\n2''') == \"8\"\nassert solution('''3\n10 4\n2\n5\n10\n3\n7\n1\n2''') == \"8\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''2\n2\n2\n100\n'''\n) == '2'\n\nassert solution(\n    '''2\n2\n2\n10\n'''\n) == '0'\n\nassert solution(\n    '''2\n2\n2\n10\n100\n'''\n) == '2'\n\nassert solution(\n    '''2\n2\n2\n10\n10000000\n'''\n) == '0'\n\nassert solution(\n    '''2\n2\n2\n10\n10\n'''\n) == '1'"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == \"2\"\nassert solution('2\\n2') == \"2\"\nassert solution('2\\n2\\n2') == \"4\"\nassert solution('2\\n2\\n2\\n2') == \"6\"\nassert solution('2\\n2\\n2\\n2\\n2') == \"8\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\\n0\"\nassert solution(\"2\\n2\") == \"2\\n0\"\nassert solution(\"2\\n2\\n100\") == \"2\\n0\"\nassert solution(\"2\\n2\\n100\\n50\") == \"2\\n0\"\nassert solution(\"2\\n2\\n100\\n50\\n50\") == \"2\\n0\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"2\n2\n2\n100\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"2\n2\n2\n100\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"2\n2\n2\n100\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"2\n2\n2\n123\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"2\n2\n2\n999\n\"\"\"\n) == '0'"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == '1\\n'\nassert solution('11') == '0\\n'\nassert solution('12') == '0\\n'\nassert solution('13') == '0\\n'\nassert solution('14') == '0\\n'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n0\\n0') == '2'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '5'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"4\\n2\\n1\\n1\\n1\") == \"4\"\nassert solution(\"4\\n3\\n1\\n1\\n1\") == \"6\"\nassert solution(\"4\\n3\\n2\\n1\\n1\") == \"8\"\nassert solution(\"4\\n3\\n3\\n1\\n1\") == \"10\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n100') == '2\\n'\nassert solution('2\\n2\\n2\\n100') == '2\\n'\nassert solution('2\\n1\\n1\\n100') == '0\\n'\nassert solution('2\\n2\\n2\\n10000') == '1\\n'\nassert solution('2\\n2\\n2\\n5000') == '0\\n'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == 0\nassert solution('1') == 1\nassert solution('5') == 4\nassert solution('2') == 2\nassert solution('4') == 8\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 4 1') == 'No'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 10 1') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('3 4 5') == 'No'\nassert solution('5 8 10') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"3 1 2\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 10 1\") == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == 'Yes'\nassert solution(\"1 3 4\") == 'No'\nassert solution(\"1 2 3\") == 'Yes'\nassert solution(\"1 2 1\") == 'Yes'\nassert solution(\"-1 1 3\") == 'No'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 3 2\") == \"No\"\nassert solution(\"2 3 1\") == \"Yes\"\nassert solution(\"2 3 1\") == \"No\"\nassert solution(\"1 -3 2\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 4 2') == 'No'\nassert solution('-100 9 -3') == 'Yes'\nassert solution('99 100 10') == 'No'\nassert solution('9 -1 -2') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('-1 -3 2') == 'Yes'\nassert solution('-3 -1 2') == 'No'\nassert solution('-3 -1 2') == 'No'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('3 10\\n0\\n0\\n0') == '3'\nassert solution('2 1000\\n10\\n20') == '6'\nassert solution('2 1000\\n10\\n20\\n40') == '6'\nassert solution('2 1000\\n10\\n20\\n40\\n80') == '6'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\nassert solution('''10 200\n10 30\n100\n50\n50\n50\n50\n50\n50\n50\n50''') == '6'\nassert solution('''4 1000\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90\n90"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('1 1000\\n1234\\n1234\\n') == '0'\nassert solution('2 1000\\n1234\\n') == '1'\nassert solution('3 1000\\n10\\n100\\n120\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 1000\n120\n100\n140'''\n) == '9'\n\nassert solution(\n'''6 100\n500\n700\n600\n100\n800\n300'''\n) == '6'\n\nassert solution(\n'''6 1000\n500\n700\n600\n100\n800\n300'''\n) == '6'\n\nassert solution(\n'''6 1000\n100\n800\n300\n500\n700\n100'''\n) == '6'\n\nassert solution(\n'''8 10\n200\n800\n200\n700\n300\n300\n500'''\n) == '8'"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3 1000\n120\n100\n140\n'''\n) == '9'\n\nassert solution(\n'''\n4 1000\n10\n3\n8\n5\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('1 1000\\n120\\n100\\n140\\n') == '3'\nassert solution('5 100\\n20\\n10\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n110\\n120\\n130\\n140\\n150\\n160\\n170\\n180\\n190\\n200\\n210\\n220\\n230\\n240\\n250\\n260\\n270\\n280\\n290\\n300\\n310\\n320\\n330\\n340\\n350\\n360\\n370\\n380\\n390\\n400\\n410\\n420\\n430\\n440\\n450\\n460\\n470\\n480\\n490\\n500\\n510\\n520\\n530\\n540\\n550\\n560\\n570\\n580\\n590\\n600\\n610\\n620\\n630\\n640\\n650\\n660\\n670\\n680\\n690\\n700\\n710\\n720\\n730\\n740\\n750\\n760\\n770\\n780\\n790\\n800\\n810\\n820\\n830\\n840\\n850\\n860\\n870\\n880\\n890\\n900\\n910\\n920\\n930\\n940\\n950\\n960\\n970\\n980\\n990\\n1000') == '39'\nassert solution('2 1000\\n120\\n100\\n140\\n') == '0'\nassert solution('2 1000\\n150\\n150\\n') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\napple\\nbanana\") == \"2\"\nassert solution(\"3\\napple\\nbanana\\napple\") == \"2\"\nassert solution(\"2\\napple\\napple\") == \"1\"\nassert solution(\"2\\napple\\napple\") == \"1\"\nassert solution(\"1\\nbanana\") == \"0\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\napple') == '1'\nassert solution('3\\napple\\norange\\napple') == '2'\nassert solution('1\\napple\\norange\\napple') == '2'\nassert solution('2\\napple\\norange\\napple\\nbanana') == '3'\nassert solution('2\\napple\\norange\\napple\\nbanana\\nstrawberry') == '5'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\napple\") == \"2\"\nassert solution(\"2\\napple\\npear\") == \"3\"\nassert solution(\"3\\napple\\npear\\nbanana\") == \"2\"\nassert solution(\"3\\napple\\npear\\nbann\") == \"3\"\nassert solution(\"3\\napple\\nbann\\nbanana\") == \"2\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\nA\\n') == '1'\nassert solution('2\\nB\\nB\\n') == '1'\nassert solution('2\\nB\\nA\\n') == '2'\nassert solution('2\\nA\\nB\\n') == '2'\nassert solution('10\\nB\\nB\\nB\\nB\\nB\\nB\\nB\\nB\\n') == '1'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"2\\n1\") == \"2\\n\"\nassert solution(\"10\\n1\") == \"10\\n\"\nassert solution(\"10\\n1\\n1\") == \"2\\n\"\nassert solution(\"10\\n1\\n1\\n1\") == \"3\\n\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1000') == '1 1'\nassert solution('1000 5500') == '2 1'\nassert solution('10 100 500') == '3 0'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4\n2100 2500 2700 2700\"\"\") == \"2 2\"\n\"\"\""
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"2 1\"\nassert solution(\"2 2\") == \"1 1\"\nassert solution(\"1 3\") == \"3 1\"\nassert solution(\"1 2 3\") == \"3 1\"\nassert solution(\"1 3 4\") == \"2 2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700 21') == '2 2'\nassert solution('2100 2500 2700 2700 21') == '2 2'\nassert solution('2100 2500 2700 2700 21 21') == '2 2'\nassert solution('2100 2500 2700 2700 21 21 21') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n100\\n\") == \"1 1\"\nassert solution(\"2\\n200\\n\") == \"1 1\"\nassert solution(\"3\\n400\\n\") == \"2 2\"\nassert solution(\"4\\n800\\n\") == \"2 1\"\nassert solution(\"5\\n1200\\n\") == \"3 1\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''\n1\n1\n2\n2\n''') == '2 2'\nassert solution('''\n1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n51\n51\n52\n52\n53\n53\n54\n54\n55\n55\n56\n56\n57\n57\n58\n58\n59\n59\n60\n60\n61\n61\n62\n62\n63\n63\n64\n64\n65\n65\n66\n66\n67\n67\n68\n68\n69\n69\n70\n70\n71\n71\n72\n72\n73\n73\n74\n74\n75\n75\n76\n76\n77\n77\n78\n78\n79\n79\n80\n80\n81\n81\n82\n82\n83\n83\n84\n84\n85\n85\n86\n86\n87\n87\n88\n88\n89\n89\n90\n90\n91\n91\n92\n92\n93\n93\n94\n94\n95\n95\n96\n96\n97\n97\n98\n98\n99\n99\n100\n100\n101\n101\n102\n102\n103\n103\n104\n104\n105\n105\n106\n106\n107\n107\n108\n108\n109\n109\n110\n110\n111\n111\n112\n112\n113\n113\n114\n114\n115\n115\n116\n116\n117\n117\n118\n118\n119\n119\n120\n120\n121\n121\n122\n122\n123\n123\n124\n124\n125\n125\n126\n126\n127\n127\n128\n128\n129\n129\n130\n130\n131\n131\n132\n132\n133\n133\n134\n134\n135\n135\n136\n136\n137\n137\n138\n138\n139\n139\n140\n140\n141\n141\n142\n142\n143\n143\n144\n144\n145\n145\n146\n146\n147\n147\n148\n148\n149\n149\n150\n150\n151\n151\n152\n152\n153\n153\n154\n154\n155\n155\n156\n156\n157\n157\n158\n158\n159\n159\n160\n160\n161\n161\n162\n162\n163\n163\n164\n164\n165\n165\n166\n166\n167\n167\n168\n168\n169\n169\n170\n170\n171\n171\n172\n172\n173\n173\n174\n174\n175\n175\n176\n176\n177\n177\n178\n178\n179\n179\n180\n180\n181\n181\n182\n182\n183\n183\n184\n184\n185\n185\n186\n186\n187\n187\n188\n188\n189\n189\n190\n190\n191\n191\n192\n192\n193\n193\n194\n194\n195\n195\n196\n196\n197\n197\n198\n198\n199\n199\n200\n200\n201\n201\n202\n202\n203\n203\n204\n204\n205\n205\n206\n206\n207\n207\n208\n208\n209\n209\n210\n210\n211\n211\n212\n212\n213\n213\n214\n214\n215\n215\n216\n216\n217\n217\n218\n218\n219\n219\n220\n220\n221\n221\n222\n222\n223\n223\n224\n224\n225\n225\n226\n226\n227\n227\n228\n228\n229\n229\n230\n230\n231\n231\n232\n232\n233\n233\n234\n234\n235\n235\n236\n236\n237\n237\n238\n238\n239\n239\n240\n240\n241\n241\n242\n242\n243\n243\n244\n244\n245\n245\n246\n246\n247\n247\n248\n248\n249\n249\n250\n250\n251\n251\n252\n252\n253\n253\n254\n254\n255\n255\n256\n256\n257\n257\n258\n258\n259\n259\n260\n260\n261\n261\n262\n262\n263\n263\n264\n264\n265\n265\n266\n266\n267\n267\n268\n268\n269\n269\n270\n270\n271\n271\n272\n272\n273\n273\n274\n274\n275\n275\n276\n276\n277\n277\n278\n278\n279\n279\n280\n280\n281\n281\n282\n282\n283\n283\n284\n284\n285\n285\n286\n286\n287\n287\n288\n288\n289\n289\n290\n290\n291\n291\n292\n292\n293\n293\n294\n294\n295\n295\n296\n296\n297\n297\n298\n298\n299\n299\n300\n300\n301\n301\n302\n302\n303\n303\n304\n304\n305\n305\n306\n306\n307\n307\n308\n308\n309\n309\n310\n310\n311\n311\n312\n312\n313\n313\n314\n314\n315\n315\n316\n316\n317\n317\n318\n318\n319\n319\n320\n320\n321\n321\n322\n322\n323\n323\n324\n324\n325\n325\n326\n326\n327\n327\n328\n328\n329\n329\n330\n330\n331\n331\n332\n332\n333\n333\n334\n334\n335\n335\n336\n336\n337\n337\n338\n338\n339\n339\n340\n340\n341\n341\n342\n342\n343\n343\n344\n344\n345\n345\n346\n346\n347\n347\n348\n348\n349\n349\n350\n350\n351\n351\n352\n352\n353\n353\n354\n354\n355\n355\n356\n356\n357\n357\n358\n358\n359\n359\n360\n360\n361\n361\n362\n362\n363\n363\n364\n364\n365\n365\n366\n366\n367\n367\n368\n368\n369\n369\n370\n370\n371\n371\n372\n372\n373\n373\n374\n374\n375\n375\n376\n376\n377\n377\n378\n378\n379\n379\n380\n380\n381\n381\n382\n382\n383\n383\n384\n384\n385\n385\n386\n386\n387\n387\n388\n388\n389\n389\n390\n390\n391\n391\n392\n392\n393\n393\n394\n394\n395\n395\n396\n396\n397\n397\n398\n398\n399\n399\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\n'''"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 3 4') == '1 2'\nassert solution('1 3 1 2 4') == '2 2'\nassert solution('1 2 2 3 4') == '2 2'\nassert solution('1 2 3 4') == '3 2'\nassert solution('1 2 3 4 5') == '3 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700 2100 2500 2700 2700') == '2 2'\nassert solution('2100 2500 2700 2700 2600 2500 2600 2000 2000') == '2 2'\nassert solution('2100 2500 2700 2700 2000 2000') == '2 1'\nassert solution('2100 2500 2700 2700 2000 2000 2600 2500 2600 2000 2000') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 3 3 1 2 2\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 2700\\n3200 1600 2000 2000 2000\") == \"2 2\"\nassert solution(\"5\\n7 13 2 21 22 11\") == \"2 2\"\nassert solution(\"5\\n9 9 9 9 9 9\") == \"1 1\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xoo\") == \"900\"\nassert solution(\"xox\") == \"900\"\nassert solution(\"xxo\") == \"900\"\nassert solution(\"oxx\") == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('oxo') == '900'\nassert solution('xox') == '900'\nassert solution('xoxo') == '900'\nassert solution('xoxoo') == '900'\nassert solution('xoxx') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('oxo') == '900'\nassert solution('xox') == '800'\nassert solution('xoxo') == '800'\nassert solution('xoxooxo') == '800'\nassert solution('xoxooxooxo') == '800'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ooxx') == 905\nassert solution('xoxo') == 905\nassert solution('ooxo') == 905\nassert solution('xoxx') == 905\n\"\"\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '0'\nassert solution('xo') == '900'\nassert solution('xoo') == '900'\nassert solution('xox') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('xo') == '0'\nassert solution('xy') == '0'\nassert solution('oox') == '900'\nassert solution('xx') == '0'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('oxo') == \"900\"\nassert solution('xoo') == \"900\"\nassert solution('xo') == \"900\"\nassert solution('x') == \"900\"\nassert solution('o') == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('oxo') == '900'\nassert solution('xo') == '0'\nassert solution('oo') == '0'\nassert solution('ox') == '0'\nassert solution('xoox') == '0'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('oxo') == 900\nassert solution('xox') == 900\nassert solution('xoxo') == 900\nassert solution('ooxx') == 900\nassert solution('ooxxo') == 900\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D H') == 'H'\nprint('Testcases passed')\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"H H\") == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H'\nassert solution('D H') == 'D'\nassert solution('H D') == 'H'\nassert solution('D H') == 'D'\nassert solution('H D') == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"H H\") == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H'\nassert solution('D H') == 'D'\nassert solution('H D') == 'H'\nassert solution('H H') == 'H'\nassert solution('D H') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('H D') == 'H'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'\n\"\"\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'\nassert solution('D H') == 'H'\nassert solution('H D') == 'D'\n\"\"\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"D D\") == \"D\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'H'\nprint('Test1 passed')\n\nassert solution(stdin) == 'D'\nprint('Test2 passed')\n\n\"\"\""
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('5237') == '-5-1-4=2'\nassert solution('4323') == '3-3+2-3=1'\nassert solution('0') == '0=0'\nassert solution('4') == '4=4'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1+2+2+2=7\"\n\"\"\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1209\") == \"-1-9+9-9=0\"\nassert solution(\"1209\") == \"9+9-9=0\"\nassert solution(\"1209\") == \"9-9=0\"\nassert solution(\"1209\") == \"9=0\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1-2-2-2=7'\nassert solution('1222') == '1+2-2-2=7'\nassert solution('1222') == '1+2+2-2=7'\nassert solution('1222') == '1-2+2-2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1212\") == \"0+0+0+0=0\"\nassert solution(\"2222\") == \"1+0+0+1=1\"\nassert solution(\"2222\") == \"1+0+0+1=1\"\nassert solution(\"2222\") == \"1+0+0+1=1\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1212\") == \"-1-1=-2\"\nassert solution(\"1211\") == \"1+1-1=0\"\nassert solution(\"1111\") == \"-1-1-1=-3\"\nassert solution(\"12121212\") == \"1+2+2+2=7\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3 4') == '3\\n0\\n0\\n0'\nassert solution('5\\n1 2 3 4 5') == '2\\n2\\n0\\n0\\n0'\nassert solution('5\\n1 2 3 4 5\\n1 1 2 3 4') == '2\\n2\\n0\\n0\\n0'\nassert solution('5\\n1 2 3 4 5\\n1 1 2 3 4') == '2\\n2\\n0\\n0\\n0'\nassert solution('5\\n1 2 3 4 5\\n1 1 2 3 4') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"2\") == \"0\\n0\"\nassert solution(\"2 4 3 2 2 1\") == \"2\\n2\\n0\\n0\\n0\\n0\"\nassert solution(\"1 1 2 2\") == \"2\\n2\\n0\\n0\"\nassert solution(\"2 1 2 1\") == \"0\\n0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"3\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"4\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"6\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1 1') == '2'\nassert solution('1\\n2') == '0'\nassert solution('1\\n2 1') == '1'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 1 2 2''') == '2\\n2\\n0\\n0\\n0'\nassert solution('''10\n2 1 2 2 4 1 2 3 4 5 2''') == '3\\n2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''15\n1 1 2 2 4 1 2 3 4 5 2 6 2 7 2 8 2 9 2 10 2 11 3 1''') == '8\\n2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n'''\n'''"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 1 2 2''') == '2\\n2\\n0\\n0\\n0'\nassert solution('''6\n1 1 2 2 3 3''') == '2\\n2\\n0\\n0\\n0\\n0'\nassert solution('''10\n2 3 4 4 5 5 6 6 7 7 8 8 9 9''') == '3\\n3\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''10\n2 3 4 4 5 5 6 6 7 7 8 8 9 9''') == '3\\n3\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n'''\nassert solution('''20\n1 1 2 2 3 3 4 4 4 5 5 5 6 6 7 7 7 8 8 8 9 9 9 10 10 10 11 11 12 12 13 13 14 14 15 15 15 16 16 17 17 18 18 19 19''') == '7\\n7\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 2 3 3') == '2\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 3') == '2\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 2 3 3') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5\n1 1 2 2'''\n) == '2\\n2\\n0\\n0\\n0'\nassert solution(\n'''5\n1 1 2 2 3'''\n) == '2\\n2\\n0\\n0\\n0'\nassert solution(\n'''5\n1 1 2 2 5'''\n) == '2\\n2\\n0\\n0\\n0'\nassert solution(\n'''5\n1 1 2 2 6'''\n) == '2\\n2\\n0\\n0\\n0'\nassert solution(\n'''5\n1 1 2 2 8'''\n) == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '''2\n2\n0\n0\n0'''\n\nassert solution('''3''') == '''0\n0\n0\n0'''\n\nassert solution('''4''') == '''2\n0\n0\n0\n0'''\n\nassert solution('''6''') == '''3\n1\n1\n0\n0\n0\n0'''\n\nassert solution('''7''') == '''4\n2\n1\n1\n1\n0\n0\n0'''"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'None'\nassert solution('1') == 'None'\nassert solution('1 2') == 'None'\nassert solution('1 2 3') == 'None'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1') == 0\nassert solution('-2') == -1\nassert solution('-3') == -2\nassert solution('10') == 9\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6') == '3'\nassert solution('-6') == '2'\nassert solution('-10') == '-1'\nassert solution('-4') == '-2'\nassert solution('-10') == '-1'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[3]\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == 3\nassert solution('3') == 3\nassert solution('1') == 1\nassert solution('0') == 0\nassert solution('4') == 2\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '3'\nassert solution('3') == '3'\nassert solution('12') == '9'\nassert solution('18') == '15'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6') == '3'\nassert solution('100000000') == '9999999999'\nassert solution('799999999') == '9999999998'\nassert solution('800000000') == '9999999999'\nassert solution('900000000') == '99999999999'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('6') == '3'\nassert solution('1') == '0'\nassert solution('10') == '9'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '3'\nassert solution('7\\n') == '5'\nassert solution('2\\n') == '1'\nassert solution('5\\n') == '4'\nassert solution('8\\n') == '4'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n6\n'''\n) == '3'\nassert solution(\n'''\n4\n'''\n) == '3'\nassert solution(\n'''\n15\n'''\n) == '3'\nassert solution(\n'''\n1000000\n'''\n) == '3'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('100') == 'No'\nassert solution('101') == 'Yes'\nassert solution('111') == 'Yes'\nassert solution('112') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('111') == 'Yes'\nassert solution('110') == 'No'\nassert solution('1111') == 'No'\nassert solution('1110') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1118') == \"Yes\"\nassert solution('1101') == \"No\"\nassert solution('1313') == \"No\"\nassert solution('1413') == \"No\"\nassert solution('1118') == \"Yes\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1118) == 'Yes'\nassert solution(1111) == 'No'\nassert solution(1111) == 'No'\nassert solution(111) == 'Yes'\nassert solution(1111) == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1108\") == \"No\"\nassert solution(\"2211\") == \"Yes\"\nassert solution(\"1118\") == \"Yes\"\nassert solution(\"1011\") == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('8934') == 'Yes'\nassert solution('9999') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1117') == 'No'\nassert solution('111') == 'Yes'\nassert solution('1111') == 'No'\nassert solution('111111') == 'No'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('8987') == 'No'\nassert solution('1181') == 'No'\nassert solution('9000') == 'Yes'\nassert solution('24999') == 'No'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\nassert solution('''5\n1 5\n1 6\n1 5\n1 4\n1 3\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 5\\n2 4\\n3 6') == '3'\nassert solution('3\\n1 5\\n2 4\\n3 6') == '2'\nassert solution('5\\n1 5\\n2 4\\n3 6\\n4 5') == '4'\nassert solution('3\\n1 5\\n2 4\\n3 6\\n4 5') == '4'\nassert solution('3\\n1 5\\n2 4\\n3 6\\n4 5') == '4'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"3\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"3 6\") == \"3\""
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\nassert solution('''2\n1 1\n2 1\n3 1\n''') == '2'\nassert solution('''2\n1 1\n2 1\n3 1\n''') == '2'\nassert solution('''2\n1 5\n2 4\n3 6\n''') == '3'\nassert solution('''2\n1 1\n2 1\n3 1\n''') == '2'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 3\nassert solution(\"1 5\") == 3\nassert solution(\"2 4\") == 3\nassert solution(\"3 6\") == 3\nassert solution(\"4 8\") == 3\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('1\\n5\\n4\\n3\\n2') == '4'\nassert solution('1\\n5\\n4\\n3\\n2\\n6') == '3'\nassert solution('1\\n5\\n4\\n3\\n2\\n6\\n9') == '2'\nassert solution('1\\n5\\n4\\n3\\n2\\n6\\n9\\n10') == '1'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n2\n1 5\n2 4\n3 6\n\"\"\") == '3'\nassert solution(\"\"\"\\\n3\n1 3\n2 4\n3 5\n\"\"\") == '6'\nassert solution(\"\"\"\\\n3\n2 4\n1 3\n2 4\n\"\"\") == '5'\nassert solution(\"\"\"\\\n3\n1 3\n1 3\n1 3\n\"\"\") == '5'\nassert solution(\"\"\"\\\n3\n1 3\n1 3\n1 3\n\"\"\") == '5'\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"B A\") == \">\"\nassert solution(\"C D\") == \"=\"\nassert solution(\"D C\") == \"<\"\nassert solution(\"E F\") == \">\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A B') == '<'\nassert solution('A B') == '<'\nassert solution('A B') == '='\nassert solution('A B') == '='\nassert solution('A B') == '>'\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABC') == '<'\nassert solution('BD') == '>'\nassert solution('FE') == '='\nassert solution('AA') == '='\nassert solution('FF') == '<'\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A B\") == '<'\nassert solution(\"B A\") == '>'\nassert solution(\"B A\") == '=', solution(\"B A\")\nassert solution(\"A B\") == '=', solution(\"A B\")\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('A B') == '<'\nassert solution('A B') == '<'\nassert solution('A B') == '='\nassert solution('A B') == '='\nassert solution('A B') == '>'\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"C B\") == \">\"\nassert solution(\"D F\") == \"=\"\nassert solution(\"E F\") == \"=\"\nassert solution(\"A E\") == \">\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('A B') == '<'"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '>'\nassert solution('B A') == '='\nassert solution('A B') == '<'\nassert solution('A B') == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"E F\") == \">\"\nassert solution(\"A A\") == \"=\"\nassert solution(\"F F\") == \"=\"\nassert solution(\"F D\") == \"<\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '>'\nassert solution('C D') == '='\nassert solution('D C') == '<'\nassert solution('E F') == '='\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 6\n..#.#..\n.##..#.\n##..##.\n.#.#...\n\"\"\") == \"\"\"\n111211\n1112#11\n111211\n1112#11\n\"\"\"\n\nassert solution(\"\"\"\n3 3\n....\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n.....\n.....\n''') == '111222'\nassert solution('''\n3 3\n.#.#.\n.#.#.\n.#.#.\n''') == '111222'\nassert solution('''\n3 3\n.....\n.#.#.\n.###.\n''') == '111222'\nassert solution('''\n4 3\n.#.#.\n.#.#.\n.#.#.\n.#.#.\n''') == '112211'\nassert solution('''\n6 3\n....#.\n...#.#.\n.#...#.\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n    3 2\n    ..\n    .#\n    ''') == '''\n    ..\n    1#\n    11'''\nassert solution('''\n    5 2\n    ....\n    ....\n    ....\n    ....\n    ....\n    ''') == '''\n    ....\n    1#1\n    11#\n    111\n    11\n    1'''\nassert solution('''\n    7 3\n    .....\n    .#.#.\n    .....\n    .##..\n    .#...\n    .....\n    ''') == '''\n    ..#.#.\n    .##..#\n    .#..##\n    ##....\n    ...###\n    #####.\n    ##...#\n    ###....\n    ###'''\nassert solution('''\n    8 10\n    ......\n    ....#..\n    ....#..\n    ....#..\n    ....#..\n    ....#..\n    ....#..\n    ....#..\n    ......\n    ''') == '''\n    ......\n    ..#....\n    ....##.\n    ....##.\n    ....##.\n    ....##.\n    ....##.\n    ....##.\n    ....##.\n    ......\n    '''\nassert solution('''\n    7 4\n    ........\n    ........\n    ........\n    ........\n    ........\n    ........\n    ........\n    ........\n    ........\n    ''') == '''\n    ........\n    ...##..\n    ....##.\n    ...###.\n    ...###.\n    ...###.\n    ...###.\n    ...###.\n    ...###.\n    ...###.\n    '''\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n.....\n.#.#''') == '11211'\nassert solution('''1 3\n.#.\n.#.''') == '1#2#1'\nassert solution('''3 4\n.###\n.#...\n....#''') == '11211'\nassert solution('''10 10\n.#.#.\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5') == '11211'\nassert solution('3 2') == '1#2'\nassert solution('3 2') == '1#2'\nassert solution('2 1') == '#'\nassert solution('1 1') == '#'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5') == '11211'\nassert solution('3 4') == '1111'\nassert solution('1 1') == '1'\nassert solution('1 1 2') == '1 2'\nassert solution('1 2 2') == '1#2#1'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"3 4\\n..#..\\n....\\n..#..\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n.\\n.#\\n.\\n') == '11211'\nassert solution('2 3\\n..#\\n.#\\n\\n') == '1#2#1'\nassert solution('5 3\\n.....\\n.#.#\\n.....\\n') == '112113'\nassert solution('4 5\\n....\\n....\\n....\\n....\\n') == '1#2#1'\nassert solution('4 5\\n....\\n....\\n....\\n....\\n') == '112113'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 2') == '3'\nassert solution('60 90 120') == '3'\nassert solution('60 90 120') == '3'\nassert solution('60 90 120') == '3'\nassert solution('60 90 120') == '3'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split(' ')[0]\n'''\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('60 90 120') == '3'\nassert solution('80 150 80 150') == '3'\nassert solution('10 30 10 30') == '6'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution('3 4 80\\n60 90 120\\n80 150 80 150') == '5'\nassert solution('3 4 80\\n60 90 120\\n80 150 80 150\\n3 10 50') == '3'\nassert solution('3 4 100\\n60 90 120\\n80 150 80 150\\n3 10 50') == '5'\nassert solution('3 4 150\\n60 90 120\\n80 150 80 150\\n3 10 50') == '4'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[0]\n\"\"\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 240\\n60 90 120\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n20 10 20 10 10\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n20 10 20 10 10\\n40 10 40 10 10\") == \"4\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n20 10 20 10 10\\n40 10 40 10 10\\n80 10 80 10 10\") == \"5\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''1 2 1''') == '1'\nassert solution('''1 3 1''') == '2'\nassert solution('''1 3 2''') == '2'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('60 90 120') == '3'\nassert solution('80 150 80 150') == '3'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1000 1000 1000 1000') == '500'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n---Inputs---\nN M K\nA_1 A_2 \\ldots A_N\nB_1 B_2 \\ldots B_M\n\n---Output---\nAn integer representing the maximum number of books that can be read.\n\n---Sample Input---\n3 4 240\n60 90 120\n80 150 80 150\n\n---Sample Output---\n3\n\nIn this case, it takes us 60, 90, 120 minutes to read the 1-st, 2-nd, 3-rd books from the top on Desk A, and 80, 150, 80, 150 minutes to read the 1-st, 2-nd, 3-rd, 4-th books from the top on Desk B, respectively.\nWe can read three books in 230 minutes, as shown below, and this is the maximum number of books we can read within 240 minutes.\n - Read the topmost book on Desk A in 60 minutes, and remove that book from the desk.\n - Read the topmost book on Desk B in 80 minutes, and remove that book from the desk.\n - Read the topmost book on Desk A in 90 minutes, and remove that book from the desk.\n\"\"\""
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '3 4 240\\n60 90 120\\n80 150 80 150'\n) == '3'\nassert solution(\n    '3 4 240\\n60 90 120\\n80 150 80 150'\n) == '3'\nassert solution(\n    '3 4 240\\n60 90 120\\n80 150 80 150'\n) == '3'\nassert solution(\n    '3 4 240\\n60 90 120\\n80 150 80 150'\n) == '3'\nassert solution(\n    '3 4 240\\n60 90 120\\n80 150 80 150'\n) == '3'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1500 2000 1600 3 2'''\n) == '7900'\n'''\nA B C X Y\n'''\nassert solution(\n'''7000 4000 2000 4 3'''\n) == '2888'\nassert solution(\n'''10 500 400 300 2'''\n) == '962'\nassert solution(\n'''9000 4000 2000 4 3'''\n) == '4942'\nassert solution(\n'''10 500 400 300 2'''\n) == '962'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1314272559 1628775355 5414392456') == '272088'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1500 2000 1600 3 2') == '7900'\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1500 2000 1600 3 2''') == \"7900\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == 4\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '4'\nassert solution('''10''') == '1'\nassert solution('''15''') == '2'\nassert solution('''30''') == '4'\nassert solution('''45''') == '8'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '4'\nassert solution('6') == '6'\nassert solution('7') == '0'\nassert solution('8') == '6'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '1'\nassert solution('7') == '4'"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('5') == '5'\nassert solution('100') == '24'\nassert solution('1000') == '854'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\n\nfrom itertools import count"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('10') == '0'\nassert solution('100') == '4'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '4'\nassert solution('''999''') == '3'\nassert solution('''1000''') == '4'\nassert solution('''15''') == '4'\nassert solution('''99999''') == '6'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0\nassert solution(\"3\") == 4\nassert solution(\"10\") == 8\nassert solution(\"20\") == 16\nassert solution(\"30\") == 22\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '9'\nassert solution('1') == ''\nassert solution('9') == '9'\nassert solution('15') == '15'\nassert solution('17') == '17'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(10) == '9'\nassert solution(100) == '99'\nassert solution(1000) == '9999'\nassert solution(10000) == '99999'\nassert solution(50000) == '999999'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('1000') == '1'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"10\"\n) == \"9\"\n\"\"\"\n\n\"\"\"\nThis solution is my solution.\n\"\"\""
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('10') == None\nassert solution('16') == None\nassert solution('42') == None\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"99\"\nassert solution(\"1000\") == \"999\"\nassert solution(\"10000\") == \"9999\"\nassert solution(\"100000\") == \"99999\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '9'"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'\nassert solution('10') == '9'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '9'\nassert solution('10\\n') == '9'\nassert solution('10\\n') == '9'\nassert solution('10\\n') == '9'\nassert solution('10\\n') == '9'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('6\\n4\\n2\\n2\\n2') == '5'\nassert solution('10\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4') == '9'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n2\\n1\") == \"2\"\nassert solution(\"5\\n2\\n4\\n2\\n1\") == \"3\"\nassert solution(\"5\\n2\\n4\\n2\\n1\") == \"3\"\nassert solution(\"5\\n2\\n4\\n2\\n1\") == \"3\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4\n10\n8\n8\n6\n''') == '3'\nassert solution(\n'''\n3\n10\n8\n8\n6\n''') == '2'\nassert solution(\n'''\n1\n10\n8\n8\n6\n''') == '1'\nassert solution(\n'''\n2\n10\n8\n8\n6\n''') == '2'\nassert solution(\n'''\n4\n10\n8\n8\n6\n''') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n3\\n') == '0'\nassert solution('1\\n2\\n') == '0'\nassert solution('1\\n3\\n1\\n2\\n1\\n3\\n') == '2'\nassert solution('1\\n3\\n1\\n2\\n1\\n3\\n') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\n\n\"\"\"\n\nn = int(input())\ndiameters = [int(d) for d in input().split()]\n\ncount = 1\nfor i in range(n-1):\n    if diameters[i] > diameters[i+1]:\n        count += 1\nprint(count)\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == 3\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'asdfz'\nassert solution('qwerty') == 'qwerty'\nassert solution('asdf') == 'asdf'\nassert solution('asdfqwerty') == 'asdfqwerty'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('QWERTYASDFZXCV') == 'ASDFZ'\nassert solution('WWRQDZZOC') == 'QOC'\nassert solution('YVFZQJSAXW') == 'QVJ'\nassert solution('AZXXRZWBY') == 'XQZ'\nassert solution('AZXXRZWBY') == 'XQZ'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n\"\"\""
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[-3:] + stdin[:2]\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERT') == '5'\nassert solution('A') == '1'\nassert solution('Z') == '1'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '27'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    ''\n) == 0\nassert solution(\n    'I love you'\n) == 0\nassert solution(\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n) == 26\nassert solution(\n    'A'\n) == 1\nassert solution(\n    'AA'\n) == 2\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'a'\nassert solution('AB') == 'AB'\nassert solution('AABB') == 'AB'\nassert solution('ABBBCC') == 'ABBB'\nassert solution('ABBAAABBCCDD') == 'ABBAA'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEF'\nassert solution('QWERTYASDFZXCV') == 'QWERTY'\nassert solution('HELLO WORLD') == 'W'\nprint(solution('HELLO WORLD'))\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n8 12 40''') == '2'\nassert solution('''8\n8 12 40''') == '2'\nassert solution('''9\n1 2 3 4 5 6 7 8 9''') == '3'\nassert solution('''9\n1 2 3 4 5 6 7 8 9''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('2 3 5 7 9 10 12 14 16 17 19 20 22 24 26') == '2'\nassert solution('4 5 7 9 10 12 14 16 17 19 20 22 24 26') == '2'\nassert solution('10 15 19 20 22 24 26') == '2'\nassert solution('16 17 19 20 22 24 26') == '3'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 12 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\nassert solution('8 12 40\\n') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 12 40\") == \"2\"\nassert solution(\"2 3 5\") == \"1\"\nassert solution(\"3 4 6\") == \"0\"\nassert solution(\"10 11 9\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('2 3 4') == '1'\nassert solution('8 12 40') == '2'\nassert solution('2 3 4') == '1'\nassert solution('1 2 3 4') == '0'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 12 40\") == \"2\"\nassert solution(\"5 4 3 2 1\") == \"4\"\nassert solution(\"2 2 2 1 1 1 1\") == \"2\"\nassert solution(\"1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2') == '4'\nassert solution('3') == '8'\nassert solution('4') == '16'\nassert solution('5') == '32'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '6'\nassert solution('10') == '9'\nassert solution('20') == '12'\nassert solution('40') == '24'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '343'\nassert solution('123') == '18899'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"49\"\nassert solution(\"6\") == \"18\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 2\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == 6\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5\") == \"10\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '6'\nassert solution('''10''') == '64'\nassert solution('''100''') == '6464'\nassert solution
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"10\") == \"36\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"36\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('5') == '15'\nassert solution('99999') == '99999'\nassert solution('9999') == '9999'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '6'\nassert solution('''10''') == '52'\nassert solution('''100''') == '1024'\nassert solution('''1000''') == '1048576'\nassert solution('''10000''') == '1073741824'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('3') == '6'\nassert solution('10') == '120'\nassert solution('100') == '500'\nassert solution('1000') == '10000'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '12'\nassert solution('10\\n') == '12'\nassert solution('1\\n') == '2'\nassert solution('2\\n') == '4'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == 6\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('10') == 22\nassert solution('99') == 7961\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('1234567890') == 45\nassert solution('1234567890123456789') == 123456789012345678\n\nprint(solution(input()))\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '6'\nassert solution('''10''') == '45'\nassert solution('''100''') == '18555'\nassert solution('''1000''') == '3051625'\n'''\nfrom itertools import accumulate, count, islice"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('2\\n1') == '-1'\nassert solution('5\\n5') == '0'\nassert solution('3\\n4') == '1'\nassert solution('3\\n3') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3 1\\n') == '2'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n') == '1'\nassert solution('3\\n1 2\\n') == '0'\nassert solution('4\\n1 2 3 4\\n') == '1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == 2\nassert solution('1 3') == -2\nassert solution('3 3') == 0\nassert solution('5 7') == 1\nassert solution('7 5') == -1\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 2 1') == '0'\nassert solution('3 3 3') == '0'\nassert solution('1 1 1 1') == '-1'\nassert solution('3 3 2') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"3\\n1 1\") == \"2\"\nassert solution(\"2\\n1 1\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\") == \"9\"\nassert solution(\"5\\n5 5 5 5 5\") == \"0\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('3 4') == '-1'\nassert solution('3 5') == '-2'\n\n\"\"\""
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"9\"\nassert solution(\"1 2 3 4 5 6 7 8 9 11\") == \"-9\"\nassert solution(\"2 1\") == \"0\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\"\nassert solution(\"3\\n3 1\\n\") == \"1\"\nassert solution(\"4\\n3 1\\n\") == \"1\"\nassert solution(\"5\\n3 1\\n\") == \"0\"\nassert solution(\"5\\n3 2\\n\") == \"0\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3 1\n''') == '2'\nassert solution('''\n2\n1 1\n''') == '2'\nassert solution('''\n1\n1\n''') == '0'\nassert solution('''\n3\n1 3 5\n''') == '6'\nassert solution('''\n3\n1 1 1\n''') == '-1'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\n\"\"\""
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 4\n1 WA\n1 AC\n1 WA\n2 AC\n2 AC''') == '2 3'\nassert solution('''2 3\n2 AC\n1 AC\n2 WA\n1 AC\n2 AC''') == '1 3'\nassert solution('''1 1\n1 AC''') == '1 0'\nassert solution('''1 1\n1 WA''') == '0 1'\n'''\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2\\n'\nassert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2\\n'\nassert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2\\n'\nassert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2\\n'\nassert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2\\n'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\n\nassert solution(\n'''2 3\n1 AC\n1 WA\n1 WA\n2 AC\n2 WA''') == '3 2'\n\nassert solution(\n'''3 4\n1 AC\n2 AC\n1 AC\n2 WA\n1 AC\n2 AC''') == '0 4'\n\nassert solution(\n'''3 4\n1 AC\n2 AC\n1 AC\n2 WA\n2 WA\n1 AC\n2 WA''') == '3 3'\n\nassert solution(\n'''3 3\n1 AC\n2 AC\n2 AC\n2 WA\n2 AC\n2 WA''') == '1 2'"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\n\nassert solution('''2 3\n1 AC\n1 WA\n2 WA\n2 AC''') == '2 1'\n\nassert solution('''2 3\n1 AC\n1 WA\n2 WA\n2 AC''') == '0 0'\n'''\n\n'''\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 5\\n2 AC\\n2 WA') == '2 0'\nassert solution('1 10\\n1 AC\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 2\\n2 AC\\n2 WA') == '0 0'\nassert solution('1 10\\n1 AC\\n2 AC\\n2 WA') == '0 0'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 3\n1 AC\n1 AC\n1 AC\n2 AC\n2 AC''') == '2 1'\nassert solution('''3 4\n1 WA\n1 AC\n1 AC\n2 AC\n2 AC''') == '0 0'\nassert solution('''4 3\n1 WA\n1 AC\n1 AC\n2 AC\n2 AC''') == '1 1'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 4\\n1 AC\\n1 WA\\n2 AC\\n2 WA') == '0 0'\nassert solution('2 4\\n1 AC\\n1 WA\\n2 AC\\n2 WA\\n1 AC\\n1 WA') == '2 2'\nassert solution('2 4\\n1 AC\\n1 WA\\n2 AC\\n2 WA\\n1 AC\\n1 WA\\n1 AC\\n1 WA') == '2 2'\nassert solution('2 4\\n1 AC\\n1 WA\\n2 AC\\n2 WA\\n1 AC\\n1 WA\\n1 AC\\n1 WA\\n1 AC\\n1 WA') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''3 4\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''5 4\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '3 3'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\n\"\"\""
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '5'\nassert solution('5 1') == '10'\nassert solution('1 1') == '1'\nassert solution('10 1') == '10'\nassert solution('10 1 9') == '6'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '3 1'\n) == '5'\n\"\"\"\n\nfrom collections import deque\nfrom typing import List"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 1') == '5'\nassert solution('3 1') == '5'\nassert solution('3 2') == '5'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n2') == 4\nassert solution('1\\n10\\n2\\n5\\n3') == 16\nassert solution('2\\n10\\n2\\n2\\n4\\n2') == 12\n\"\"\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n10\\n2') == '4'\nassert solution('1\\n10\\n3') == '8'\nassert solution('1\\n10\\n2\\n0\\n1') == '4'\nassert solution('1\\n10\\n2\\n2\\n1') == '8'\nassert solution('1\\n10\\n2\\n2\\n0') == '8'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4\\n1 2 3\\n2 3 4\") == \"5\"\nassert solution(\"1\\n4\\n1 2 3\\n2 3 4\") == \"4\"\nassert solution(\"2\\n3\\n1 2 3\\n2 3 4\") == \"7\"\nassert solution(\"2\\n4\\n1 2 3\\n2 3 4\") == \"5\"\nassert solution(\"2\\n4\\n1 2 3\\n2 3 4\") == \"5\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n2') == '0'\nassert solution('3\\n3') == '2'\nassert solution('4\\n4') == '0'\nassert solution('5\\n5') == '2'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n10\n2\n''') == '4'\nassert solution('''2\n3\n1 2\n2 3\n''') == '5'\nassert solution('''3\n5\n3 4\n1 2\n2 3\n4 5\n''') == '7'\n'''\nHow many balls are there?\n'''\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n10\n2\n''') == '4'\nassert solution('''1\n100\n10000\n''') == '99999'\n'''\n\nIn the first line, N is the number of balls.\nNext, N space separated integers are given as the coordinates of the balls.\nThe balls are positioned on the y-axis from 1 to N, with y = 0 being the top of the y-axis.\nThe second line contains two space separated integers, K and the maximum distance of robots.\nOutput the minimum possible total distance covered by robots.\n'''\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n2\") == \"\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"50\\n50\\n50\\n50\") == \"450\"\nassert solution(\"1\\n2\\n3\\n4\") == \"10\"\nassert solution(\"1000\\n1000\\n1000\\n1000\") == \"10000\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"400\") == \"200\"\nassert solution(\"100\") == \"100\"\nassert solution(\"200\") == \"100\"\nassert solution(\"400\") == \"100\"\nassert solution(\"1000\") == \"100\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '520'\n\n\"\"\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n4\\n4\") == \"104\"\nassert solution(\"1\\n1\\n1\\n1\") == \"101\"\nassert solution(\"3\\n3\\n3\\n3\") == \"113\"\nassert solution(\"2\\n2\\n2\\n2\") == \"222\"\nassert solution(\"1\\n1\\n1\\n1\") == \"101\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"10\"\nassert solution(\"50\") == \"5\"\nassert solution(\"20\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"600\\n300\\n220\\n420\") == \"520\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\""
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n2 4 4 0 2\n\"\"\"\n) == '4'\n\nassert solution(\n\"\"\"\n1\n1\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n1\n2\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n2\n1 1\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n2\n1 2\n\"\"\"\n) == '0'"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('3 4 4 1 2') == '0'\nassert solution('3 4 4 1 2 3') == '0'\nassert solution('2 4 4 0 2 3') == '0'\nassert solution('2 4 4 0 2 3 4') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2 4 4 0 2''') == '4'\nassert solution('''5\n2 4 4 0 2''') == '4'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '0'\nassert solution('''15\n2 4 4 0 2 1 3 3 1 1''') == '6'\nassert solution('''10\n5 6 4 3 2 1 4 5 0''') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"1 2 1 0 2\") == \"0\"\nassert solution(\"3 2 3 2 3\") == \"4\"\nassert solution(\"3 3 3 3 3\") == \"8\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 4 4 0 2''') == '4'\nassert solution('''3\n2 4 4 0 2''') == '0'\nassert solution('''8\n2 4 4 0 2''') == '0'\nassert solution('''6\n3 4 4 0 2''') == '0'\nassert solution('''7\n2 4 4 0 2''') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    input=\"\"\"5\n2 4 4 0 2\n\"\"\") == \"\"\"\n4\n\"\"\"\n\nassert solution(\n    input=\"\"\"2\n1 1\n\"\"\") == \"\"\"\n0\n\"\"\"\n\nassert solution(\n    input=\"\"\"4\n1 2 1 0\n\"\"\") == \"\"\"\n0\n\"\"\"\n\nassert solution(\n    input=\"\"\"6\n2 3 4 2 1 4\n\"\"\") == \"\"\"\n4\n\"\"\"\n\nassert solution(\n    input=\"\"\"1\n1\n\"\"\") == \"\"\"\n0\n\"\"\""
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('3 1 4 0 1') == '0'\nassert solution('1 1 1 1 1') == '1'\nassert solution('4 4 4 4 4') == '5'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"20 2 5\") == \"84\"\nassert solution(\"10 4 1\") == \"4\"\nassert solution(\"30 3 9\") == \"41\"\nassert solution(\"11 1 7\") == \"8\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 2 5') == '84'\n'''"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20 2 5') == '84'\n\nassert solution('2 2 2') == '0'\n\nassert solution('20 0 2') == '0'\n\nassert solution('0 0 0') == '0'\n\nassert solution('0 0 9') == '0'"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5') == '84'\nassert solution('10 8 2') == '48'\nassert solution('100 3 3') == '273'\nassert solution('100 3 5') == '69'\nassert solution('4 4 4') == '0'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"1 10 1\") == \"1\"\nassert solution(\"100 35 7\") == \"171\"\nassert solution(\"1000 5 9\") == \"171\"\nassert solution(\"100 4 9\") == \"172\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"20 2 5\n\"\"\"\n) == \"84\"\n\nassert solution(\n\"\"\"20 2 5\n\"\"\"\n) == \"84\"\n\nassert solution(\n\"\"\"20 1 1\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"20 35 36\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"20 0 35\n\"\"\"\n) == \"0\""
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 2 5') == '84'"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''20 2 5''') == '84'\nassert solution('''20 5 10''') == '48'\nassert solution('''20 5 10''') == '48'\nassert solution('''1 1 1''') == '0'\nassert solution
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0] + stdin[1] + stdin[2] + stdin[3]"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABC680\") == \"ABC100\"\n\"\"\""
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABC680') == 'ABC100'\nassert solution('ABC0') == 'ABC000'\nassert solution('ABC099') == 'ABC099'\nassert solution('ABC098') == 'ABC099'\nassert solution('ABC069') == 'ABC098'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AB01\\n') == 'AB01'\nassert solution('AB02\\n') == 'AB02'\nassert solution('AB03\\n') == 'AB03'\nassert solution('AB04\\n') == 'AB04'\nassert solution('AB05\\n') == 'AB05'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABC680\") == \"ABC100\"\nassert solution(\"ABC100\") == \"ABC100\"\nassert solution(\"ABC999\") == \"ABC999\"\nassert solution(\"ABC999\") == \"ABC999\"\nassert solution(\"ABC999\") == \"ABC999\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABC1359') == 'ABC135'\nassert solution('ABC680') == 'ABC684'\nassert solution('ABC999') == 'ABC999'\nassert solution('ABC1000') == 'ABC1000'\nassert solution('ABC1') == 'ABC10'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('200') == 'ABC200'\nassert solution('300') == 'ABC300'\nassert solution('400') == 'ABC400'\nassert solution('500') == 'ABC500'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100') == 'ABC100'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"ABC1\"\nassert solution(\"2\") == \"ABC2\"\nassert solution(\"3\") == \"ABC3\"\nassert solution(\"10\") == \"ABC10\"\nassert solution(\"20\") == \"ABC20\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('98') == 'ABC98'\nassert solution('31') == 'ABC31'\nassert solution('0') == 'ABC0'\nassert solution('1000') == 'ABC1000'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5''') == '5'\nassert solution('''1 1''') == '0'\nassert solution('''2 5''') == '5'\nassert solution('''3 1''') == '1'\nassert solution('''4 5''') == '5'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"10 1\") == \"0\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 1') == ''\nassert solution('2 3') == ''\nassert solution('1 1') == '1'\nassert solution('5 1') == '0'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 1') == '4'\nassert solution('1 2') == '0'\nassert solution('1 1') == '1'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 5''') == '5'\nassert solution('''3 4''') == '4'\nassert solution('''1 2''') == '4'\nassert solution('''11 3''') == '3'\nassert solution('''7 9''') == '5'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5''') == '5'\nassert solution('''1 5''') == '5'\nassert solution('''5 4''') == '4'\nassert solution('''5 5''') == '5'\nassert solution('''4 5''') == '4'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '5'\nassert solution('2 2') == '0'\nassert solution('4 5') == '5'\nassert solution('6 6') == '0'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''6 4\n''') == '5'\nassert solution('''7 2\n''') == '0'\nassert solution('''3 1\n''') == '5'\nassert solution('''6 7\n''') == '4'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 5') == '5'\n\n-----Best Practice-----\ntest = int(input())\nfor _ in range(test):\n    a, b = map(int, input().split())\n    print(sum(1 for _ in range(a, b+1) if _%2==0))\n\n--------"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('3\\n3\\n2\\n1\\n') == '-1'\nassert solution('5\\n2\\n1\\n3\\n4\\n5\\n') == '3'\nassert solution('5\\n3\\n1\\n2\\n4\\n5\\n') == '-1'\nassert solution('5\\n3\\n1\\n2\\n4\\n5\\n') == '1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n') == '-1'\nassert solution('1\\n2\\n') == '-1'\nassert solution('2\\n1\\n') == '-1'\nassert solution('2\\n2\\n') == '-1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n2\\n2\\n2\\n') == '-1'\nassert solution('2\\n2\\n2\\n2\\n') == '-1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1\") == 1\nassert solution(\"3\") == 2\nassert solution(\"1\\n1\") == -1\nassert solution(\"3\\n1\") == 2\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3 1\") == \"-1\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"2\\n1\\n1\\n2\\n\") == \"-1\"\nassert solution(\"3\\n1\\n1\\n2\\n\") == \"3\"\nassert solution(\"2\\n1\\n1\\n2\\n\") == \"-1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"-1\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == -1\nassert solution('1\\n1\\n1\\n1\\n') == 0\nassert solution('2\\n2\\n1\\n1\\n') == 2\nassert solution('2\\n3\\n3\\n2\\n') == 1\nassert solution('1\\n2\\n3\\n4\\n') == -1\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3\n1\n2\n''') == 2\nassert solution('''1\n1\n''') == -1\nassert solution('''10\n8\n9\n7\n6\n5\n4\n3\n2\n1\n''') == 9\nassert solution('''2\n2\n''') == -1\nassert solution('''6\n6\n6\n6\n6\n6\n6\n''') == -1\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n') == '2'\nassert solution('1\\n2\\n') == '-1'\nassert solution('2\\n1\\n') == '-1'\nassert solution('2\\n3\\n') == '2'\nassert solution('2\\n2\\n') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6\\n2\") == \"1\"\nassert solution(\"3\\n6\\n2\\n6\\n2\\n6\") == \"1\"\nassert solution(\"3\\n6\\n6\\n2\\n6\\n2\\n6\") == \"2\"\nassert solution(\"3\\n6\\n6\\n2\\n6\\n2\\n6\\n2\") == \"2\"\nassert solution(\"3\\n6\\n6\\n2\\n6\\n2\\n6\\n2\\n6\") == \"3\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('2\\n2\\n2') == '3'\nassert solution('2\\n3') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"\") == \"1\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '1'\nassert solution('6') == '2'\nassert solution('6') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '1'\nassert solution('1\\n4') == '1'\nassert solution('1\\n5') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n6\n2\n6''') == '1'\nassert solution('''3\n6\n2\n5''') == '0'\nassert solution('''3\n7\n3\n6''') == '1'\nassert solution('''3\n5\n2\n6''') == '0'\nassert solution('''10\n44\n22\n22\n14\n14\n10\n10\n10\n10\n10\n10\n10''') == '6'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n6\n2\n6\n''') == '1'\nassert solution('''\n3\n8\n1\n1\n''') == '2'\nassert solution('''\n3\n10\n11\n1\n''') == '3'\nassert solution('''\n10\n11\n12\n1\n''') == '3'\nassert solution('''\n10\n12\n1\n''') == '4'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 1 2 2 5') == '1'\nassert solution('2 1\\n1 1 2 2 5') == '2'\nassert solution('3 1\\n1 1 2 2 5') == '1'\nassert solution('4 2\\n1 1 2 2 5') == '2'\nassert solution('5 2\\n1 1 2 2 5') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 1 2 2') == '1'\nassert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('3 4\\n2 2 2 1') == '2'\nassert solution('2 2\\n2 2') == '1'\nassert solution('5 1\\n1 1') == '0'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == '1'\nassert solution('10 4') == '2'\nassert solution('10 5') == '2'\nassert solution('10 10') == '1'\nassert solution('10 100') == '2'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 2\\n1 1 2 2 5\\n4') == '2'\nassert solution('5 2\\n1 1 2 2 5\\n4\\n2') == '3'\nassert solution('5 2\\n1 1 2 2 5\\n4\\n2\\n2') == '3'\nassert solution('5 2\\n1 1 2 2 5\\n4\\n2\\n5') == '3'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 2 5\") == \"1\"\nassert solution(\"1 1 2 2 5\") == \"1\"\nassert solution(\"1 1 2 2 5\") == \"1\"\nassert solution(\"1 1 2 2 5\") == \"1\"\nassert solution(\"1 1 2 2 5\") == \"1\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2''') == '1'\nassert solution('''5 2''') == '1'\nassert solution('''10 3''') == '2'\nassert solution('''1 10''') == '0'\nassert solution('''10 4''') == '2'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1'\n\n------\n5 3\n1 2 1 2 1\n\n------\n1\n\"\"\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 1 2 2 5') == '1'\nassert solution('1 1\\n1') == '0'\nassert solution('2 2\\n1 1 2 2 5') == '1'\nassert solution('2 1\\n1') == '0'\nassert solution('2 3\\n1 1 2 2 5') == '0'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == 'Yes'\nassert solution('6\\n1 1 1') == 'Yes'\nassert solution('4\\n0 0 0\\n4 4 4 4') == 'No'\nassert solution('4\\n2 1 2\\n4 4 4 4') == 'No'\nassert solution('2\\n1 1 1') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\") == \"Yes\"\nassert solution(\"2 2 1\") == \"Yes\"\nassert solution(\"1 1 0\") == \"No\"\nassert solution(\"2 3 2\") == \"Yes\"\nassert solution(\"2 1 1\") == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 2') == 'Yes'\nassert solution('6 1 1') == 'Yes'\nassert solution('2 3 2') == 'Yes'\nassert solution('6 3 4') == 'Yes'\nassert solution('1 1 1') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n3 1 2\n6 1 1\n''') == 'Yes'\nassert solution('''1\n1 1 1\n1 1 1\n''') == 'No'\nassert solution('''3\n2 1 2\n3 1 1\n2 1 2\n''') == 'No'\nassert solution('''2\n2 1 1\n1 1 1\n1 1 1\n''') == 'Yes'\nassert solution('''1\n1 1 1\n1 1 1\n''') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n3 1 2\n6 1 1''') == 'Yes'\nassert solution('''2\n3 1 2\n6 1 3''') == 'No'\nassert solution('''2\n3 1 2\n6 1 3''') == 'No'\nassert solution('''2\n3 1 2\n6 1 3''') == 'No'\nassert solution('''2\n2 2 1\n3 1 1''') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == 'Yes'\nassert solution('1 1 2') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 1 2') == 'No'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('4\\n5 3 1 2\\n6 1 1\\n7 1 1\\n8 1 3') == 'No'\nassert solution('2\\n1 2\\n1 1') == 'Yes'\nassert solution('2\\n1 1\\n1 2') == 'No'\nassert solution('1\\n1\\n1\\n1') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3 1 2\n6 1 1''') == 'Yes'\nassert solution('''2\n3 1 2\n6 1 1''') == 'Yes'\nassert solution('''2\n3 1 2\n6 1 1''') == 'Yes'\nassert solution('''2\n3 1 2\n6 1 1''') == 'Yes'\nassert solution('''2\n3 1 2\n6 1 1''') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6') == \"No\"\nassert solution('1 0 0 1 0 0') == \"No\"\nassert solution('1 0 0 0 1 0') == \"Yes\"\nassert solution('1 2 3 4 5 6') == \"No\"\nassert solution('1 2 3 4 5 6') == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 1') == 'No'\nassert solution('2\\n3 1 2\\n6 1 1\\n8 3 4') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 1\\n8 3 4') == 'No'\nassert solution('4\\n10 9 0 1\\n1 1 1 1 1 1') == 'Yes'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1, 3) == \"2\"\nassert solution(2, 3) == \"3\"\nassert solution(1, 5) == \"2\"\nassert solution(8, 5) == \"10\"\nassert solution(8, 8) == \"8\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '2'\nassert solution('10 10') == '10'\nassert solution('1 100') == '2'\nassert solution('10 100') == '10'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == \"2\"\nassert solution('1 3') == \"2\"\nassert solution('1 100') == \"100\"\nassert solution('99 99') == \"100\"\nassert solution('99 98') == \"99\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 9') == '2'\nassert solution('2 1') == '2'\nassert solution('1 4') == '2'\nassert solution('1 6') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 3''') == '2'\nassert solution('''3 2''') == '2'\nassert solution('''3 3''') == '4'\nassert solution('''10 30''') == '40'\nassert solution('''2 1''') == '3'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 10') == '2'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '2'\nassert solution('1 3 4') == '4'\nassert solution('2 3') == '4'\nassert solution('1 3 4 5') == '5'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('1 3') == '2'\nassert solution('1 1') == '2'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == '2'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample1) == \"4\"\nassert solution(sample2) == \"8\"\nassert solution(sample3) == \"5\"\nassert solution(sample4) == \"7\"\nassert solution(sample5) == \"4\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4'\n\"\"\"\n\n\"\"\"\n--- 464. Find the closest Prime Fraction\nhttps://leetcode.com/problems/find-the-closest-prime-fraction/description/\n\nGiven a real number x, find the closest integer y such that x = y * (2 ^ p) for some \npositive integer p. If x is not an integer, then return floor(x).\n\nExample 1:\nInput: x = 0.7\nOutput: 7\nExplanation: 7 * 2^0 = 7.\n\nExample 2:\nInput: x = 0.8\nOutput: 8\nExplanation: 8 * 2^1 = 8.\n\nExample 3:\nInput: x = 0.9\nOutput: 9\nExplanation: 9 * 2^2 = 9.\n\nExample 4:\nInput: x = 1.1\nOutput: 1\nExplanation: 1.1 * 2^3 = 1.1.\n\nExample 5:\nInput: x = 1.2\nOutput: 1\nExplanation: 1.2 * 2^2 = 1.2.\n\nNote:\n- 1.1 is the closest number for x = 1.1 * 2^2.\n- 1.2 is the closest number for x = 1.2 * 2^3.\n- 1.2 is also the closest number for x = 1.1 * 2^3 = 1.1 * 2^2 = 1.2 * 2^2 = 1.2 * 2^3.\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''1 1\n1 2''') == '0'\nassert solution('''1 1\n1 1''') == '0'\nassert solution('''3 2\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '4'\nassert solution('''3 2\n1 2\n2 3\n1 2''') == '0'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 7\") == \"4\"\nassert solution(\"1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 9\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n6 8\\n7 8\") == \"4\"\nassert solution(\"7 10\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n6 8\\n7 8\\n7 9\") == \"4\"\nassert solution(\"7 10\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n6 8\\n7 8\\n7 9\\n7 10\") == \"4\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"1\"\nassert solution(\"7 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"1\"\nassert solution(\"7 8\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"1\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 1') == '0'\nassert solution('6 6\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n6 5') == '1'\nassert solution('6 6\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n6 7\\n7 4') == '2'\nassert solution('6 6\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n6 7\\n7 8') == '3'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 8\\n1 2\\n2 5\\n3 4\\n4 6\\n5 7\\n6 7\") == \"4\"\nassert solution(\"7 9\\n1 2\\n2 5\\n3 4\\n4 6\\n5 7\\n6 8\\n7 9\") == \"5\"\nassert solution(\"7 10\\n1 2\\n2 5\\n3 4\\n4 6\\n5 7\\n6 8\\n7 9\\n8 9\") == \"5\"\nassert solution(\"8 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"6\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"6 10\") == \"6\"\nassert solution(\"2 50\") == \"26\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n\n\"\"\"\n\n\"\"\"\n\n-100 -100 -100\n-100 -100 100\n-100 -100 -100\n\n\"\"\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == 7\n\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\") == \"2\"\nassert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"-100 1000 -100\") == \"1000\"\nassert solution(\"-1000 -100 -100\") == \"1000\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"4 3 4\") == \"1\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 2\") == \"3\"\nassert solution(\"5 7 5\") == \"7\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 3 4\") == \"2\"\nassert solution(\"8 4 6\") == \"5\"\nassert solution(\"-1 -1 -1\") == \"-1\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('5 6 3') == '6'\nassert solution('5 6 4') == '6'\nassert solution('5 6 4') == '6'\nassert solution('5 6 5') == '5'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 2\nassert solution('5 7 5') == 7\nassert solution('5 7 7') == 5\nassert solution('3 4 6') == 4\nassert solution('7 4 3') == 4\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '110 100'\nprint('Testcases passed')"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '0 0'"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('2 2 20 10 5 200') == '110 10'\nassert solution('2 3 10 15 50 100') == '0 0'\nassert solution('1 1 2 10 20 15 200') == '110 10'\nassert solution('1 1 1 1 1 100 100') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 1 3 4 5 6 7 8 9') == '110 10'\nassert solution('1 2 1 3 2 4 5 6 7 8 9') == '110 10'\nassert solution('1 2 1 3 4 5 6 7 8 9 10') == '110 10'\nassert solution('1 2 1 3 4 5 6 7 8 9 10 11') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 200 30 30 100 100') == '110 10'\nassert solution
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n\"\"\"\nfrom collections import deque\nfrom math import floor\n\nA, B, C, D, E, F = map(int, stdin.split(\" \"))\n\ndq = deque()\ndq.append(A * B / (A + B))\ndq.append(C * D / (C + D))\ndq.append(E * F / (E + F))\n\nfor _ in range(3):\n    dq.append(C * D / (C + D))\n\nprint(floor(max(dq)))\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('Hello World') == 'HW'\nassert solution('Hello World This Is Fun') == 'HW3'\nassert solution('apple') == 'a'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello world') == 'hlwl'\nassert solution('internationalization') == 'i18n'\nassert solution('hello world') == 'hlwl'\nassert solution('Hi there!') == 'Ht'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"internationalization\") == \"i18n\"\nassert solution(\"decap\") == \"dec\"\nassert solution(\"123\") == \"123\"\nassert solution(\"123456789\") == \"123456789\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('abc') == 'abc'\nassert solution('ab') == 'ab'\nassert solution('abcd') == 'abcd'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello') == 'hl'\nassert solution('a') == 'a'\nassert solution('z') == 'z'\nassert solution('f') == 'f'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'i18n'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello world') == 'hlw'\nassert solution('The quick brown fox jumps over the lazy dog') == 'The6 qbrw3 yf1m jmpo2 ve0 lzcy'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('internationalization') == 'i18n'"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 'i18n'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"a\") == \"a\"\nassert solution(\"hello world\") == \"helloworld\"\nassert solution(\"\") == \"\"\nassert solution(\"ab\") == \"a\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pot\" * 2) == \"YES\"\nassert solution(\"top\" * 2) == \"NO\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('top') == 'YES'\nassert solution('pot') == 'NO'\nassert solution('top') == 'YES'\nassert solution('pot') == 'NO'\nassert solution('pot') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pottop\") == \"YES\"\nassert solution(\"potpot\") == \"NO\"\nassert solution(\"toptop\") == \"NO\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nprint('Test cases passed!')\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n'''"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"pot\") == \"NO\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pot\") == \"YES\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdefgh', 10) == 'ab'\nassert solution('abcdefgh', 1) == 'abcdefgh'\nassert solution('abcdefgh', 2) == 'defgh'\nassert solution('abcdefgh', 3) == 'abc'\nassert solution('abcdefgh', 4) == 'def'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abc', 1) == 'a'\nassert solution('ababc', 3) == 'b'\nassert solution('ababc', 4) == 'bab'\nassert solution('ababc', 5) == 'ababc'\nassert solution('a', 1) == 'a'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"aba\", 4) == \"b\"\nassert solution(\"abaa\", 4) == \"b\"\nassert solution(\"abab\", 4) == \"b\"\nassert solution(\"abcba\", 4) == \"b\"\nassert solution(\"abcbba\", 4) == \"b\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[3]\n\n\"\"\"\n\nfrom functools import reduce\n\n\"\"\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('abcba', 3) == 'b'\nassert solution('z', 1) == 'z'\nassert solution('ab', 4) == 'ab'\nassert solution('abc', 3) == 'abc'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aba', 2) == 'b'\nassert solution('abab', 3) == 'ab'\nassert solution('abac', 1) == 'a'\nassert solution('aabc', 3) == 'abc'\nassert solution('aabcba', 3) == 'abc'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ababc', 4) == 'b'\nassert solution('ac', 1) == 'a'\nassert solution('ac', 2) == 'c'\nassert solution('ac', 3) == 'c'\nassert solution('abab', 3) == 'ab'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc', 1) == 'a'\nassert solution('abc', 2) == 'b'\nassert solution('abc', 3) == 'c'\nassert solution('abc', 4) == 'ab'\nassert solution('abc', 5) == 'abc'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"b\"\n\"\"\"\nfrom collections import defaultdict\nimport bisect"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ababc') == 'b'\nassert solution('ac') == 'ac'\nassert solution('a') == 'a'\nassert solution('abc') == 'abc'\nassert solution('ababc') == 'b'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 4 2\n2 1 1\n3 3 4''') == '9'\n\nassert solution(\n'''3 4 2\n1 1 1\n2 1 2\n3 1 3''') == '9'\n\nassert solution(\n'''5 10 7\n1 2 1\n2 3 2\n3 4 3\n4 5 4\n5 6 5\n6 7 6\n7 8 7\n8 9 8''') == '20'\n\nassert solution(\n'''8 9 7\n1 2 1\n2 3 2\n3 4 3\n4 5 4\n5 6 5\n6 7 6\n7 8 7\n8 9 8''') == '20'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(9)\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\n'''\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\nassert solution('1 10 1\\n2 10 2\\n3 10 3\\n4 10 4\\n5 10 5\\n6 10 6\\n7 10 7\\n8 10 8\\n9 10 9') == '1010'\nassert solution('7 8 5\\n1 7 2\\n2 7 3\\n3 7 4\\n4 7 5\\n5 7 6\\n6 7 7\\n7 7 8') == '0'\nassert solution('5 10 11\\n1 7 2\\n2 7 3\\n3 7 4\\n4 7 5\\n5 7 6\\n6 7 7\\n7 7 8\\n8 7 9\\n9 7 10\\n10 7 11') == '0'\nassert solution('4 4 6\\n1 1 1\\n2 1 2\\n3 1 3\\n4 1 4\\n5 1 5') == '0'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''5 3 1\n1 1 1\n1 1 3\n1 1 5\n1 1 7\n1 1 9\n3 3 4''') == '25'\nassert solution('''2 3 1\n1 1 1\n2 2 2\n3 3 3''') == '10'\n'''\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1') == '9'\nassert solution('5\\n4\\n2') == '9'\n'''\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution(\n'''10 10 1\n1 1 1\n2 2 1\n2 2 1\n2 2 1\n3 3 2\n3 3 2\n4 4 3\n5 5 4\n5 5 4\n5 5 4\n''') == '384'\nassert solution(\n'''10 10 4\n2 1 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n''') == '220'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5 4 2\n2 1 1\n3 3 4\n'''\n    ) == \"9\"\n\nassert solution(\n'''\n5 5 3\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n'''\n    ) == \"29\"\n\nassert solution(\n'''\n5 5 4\n3 2 2\n3 3 4\n4 4 4\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n'''\n    ) == \"29\"\n\nassert solution(\n'''\n5 5 4\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n'''\n    ) == \"29\"\n\nassert solution(\n'''\n5 5 4\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n2 2 1\n'''\n    ) == \"29\""
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6 5 1\") == \"12\\n11\\n0\"\nassert solution(\"3\\n6 5 1\") == \"12\\n11\\n0\"\nassert solution(\"3\\n10 1 1\") == \"12\\n11\\n0\"\nassert solution(\"3\\n1 1 1\") == \"12\\n11\\n0\"\nassert solution(\"5\\n1 10 1\") == \"12\\n11\\n0\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n6 5 1\n1 10 1''') == '12\\n11\\n0'\n\nassert solution('''3\n6 5 1\n1 10 1\n3 2 4\n2 1 1''') == '12\\n11\\n0'\n\nassert solution('''1\n1 1 1\n1 1 1\n1 1 1''') == '1'\n'''\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6 5 1\") == \"12\\n11\\n0\"\nassert solution(\"5\\n1 10 1\") == \"12\\n11\\n0\"\n\"\"\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n6 5 1\n1 10 1\n''') == '12\\n11\\n0'\nassert solution('''3\n6 5 1\n1 10 1\n3 6 1\n''') == '12\\n11\\n0'\nassert solution('''3\n6 5 1\n1 10 1\n4 6 1\n''') == '12\\n11\\n0'\nassert solution('''3\n6 5 1\n1 10 1\n1 6 1\n''') == '11\\n0\\n0'\nassert solution('''3\n6 5 1\n1 10 1\n2 6 1\n''') == '12\\n11\\n0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output\n\"\"\"\n\nN = int(input())\nC_1, S_1, F_1 = map(int, input().split())\nC_N_1 = int(input())\nS_N_1 = int(input())\nF_N_1 = int(input())\n\nseconds = 0\n\nwhile True:\n    if (seconds + C_1) % F_1 == 0 and (seconds + C_1 + S_1) % F_1 == 0:\n        break\n\n    seconds += 1\n\nprint(seconds + C_N_1 * S_N_1 + F_N_1 * (seconds + C_N_1))\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n6 5 1''') == '12\\n11\\n0'\nassert solution('''3\n3 3 1''') == '12\\n0\\n0'\nassert solution('''3\n3 3 1''') == '12\\n0\\n0'\nassert solution('''3\n1 1 1''') == '12\\n0\\n0'\nassert solution('''3\n2 2 1''') == '12\\n1\\n0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n6 5 1\n1 10 1\n''') == '12'\nassert solution('''\n3\n10 2 1\n2 7 1\n''') == '11'\nassert solution('''\n3\n3 1 2\n1 3 2\n2 1 2\n''') == '0'\nassert solution('''\n3\n7 2 1\n1 2 3\n2 1 2\n''') == '0'\nassert solution('''\n3\n100 5 1\n1 100 1\n''') == '0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n6 5 1''') == '12\\n11\\n0\\n'\n'''\n1\n5 3 4\n'''\nassert solution('''3\n6 5 1''') == '12\\n11\\n0\\n'\n\nassert solution('''4\n6 7 2\n1 10 1\n1 4 1\n1 5 1\n1 6 1''') == '8\\n7\\n0\\n'\n\nassert solution('''5\n6 7 2\n1 10 1\n1 4 1\n1 5 1\n1 6 1''') == '16\\n15\\n0\\n'\n\nassert solution('''6\n6 7 2\n1 10 1\n1 4 1\n1 5 1\n1 6 1\n1 9 1''') == '32\\n31\\n0\\n'"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2 2') == '0\\n0\\n0\\n0'\nassert solution('1 2 2') == '4\\n1\\n0\\n0'\nassert solution('1 1 1') == '4\\n1\\n1\\n1'\nassert solution('1 1 1\\n1 1 1') == '4\\n1\\n1\\n1'\nassert solution('1 2 3') == '4\\n2\\n1\\n2'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == input(\"\")\n'''"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n.*\n.*''') == '''.\n.*\n.*'''\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\".*\") == \".**\"\nassert solution(\".*.\") == \"**.\"\nassert solution(\"..\") == \".*\"\nassert solution(\"...**\") == \".*.*.\"\nassert solution(\"*.*.\") == \"**.*.\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n.\\n.*') == '.*\\n.*'\nassert solution('2 2\\n.*\\n.*') == '.*\\n.*'\nassert solution('3 3\\n.**\\n.*.*\\n.*.*') == '.*.*\\n.*.*\\n.*.*'\nassert solution('3 3\\n*.*.*\\n.*.*.*\\n.*.*.*') == '*.*.*\\n*.*.*\\n*.*.*\\n*.*.*\\n*.*.*'\nassert solution('5 5\\n*.**\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*') == '*.*.*\\n*.*.*\\n.*.*.*\\n*.*.*\\n.*.*.*'\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2\\n\" +\n    \".\\n\" * 5\nn"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 2\n.\n.'''\n) == '''*.\n.*'''\n\nassert solution(\n'''3 2\n..\n.*\n.*\n'''\n) == '''..\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\".*\") == \".**.\"\nassert solution(\"..*\") == \"..*.\"\nassert solution(\"*.*\") == \".*.*.\"\nassert solution(\"*.*.**\") == \"***.*.\"\nassert solution(\"*.*.**\") == \"***.*.\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n.\n.*''') == '''*\n.*'''\n\nassert solution('''3 4\n**\n*.*\n**''') == '''**\n**\n*.*\n**'''\n\nassert solution('''6 3\n**\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n''') == '''**\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n*.\\n*.') == '*.\\n.*\\n.*'\nassert solution('3 4\\n*****\\n**.*\\n**.*\\n*.*\\n.*.*') == '*****\\n**.*\\n**.*\\n*.*\\n.*.*\\n*****'\nassert solution('4 4\\n*.*.*.*\\n**.*.*\\n*.*.*.*\\n*.*.*.*\\n*.*.*.*') == '*.*.*.*\\n**.*.*.*\\n*.*.*.*\\n*.*.*.*\\n*.*.*.*'\nassert solution('4 4\\n*.*.*.*\\n**.*.*\\n*.*.*.*\\n*.*.*.*\\n*.*.*.*') == '*.*.*.*\\n**.*.*.*\\n*.*.*.*\\n*.*.*.*\\n*.*.*.*'\nassert solution('5 5\\n*.*.*.*.*.*\\n*.*.*.*.*.*\\n*.*.*.*.*.*\\n*.*.*.*.*.*\\n**.*.*.*.*.*') == '*.*.*.*.*.*\\n*.*.*.*.*.*.*\\n**.*.*.*.*.*.*\\n**.*.*.*.*.*.*'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 6 1 4 5''') == 'YES'\nassert solution('''7\n1 2 3 4 5 6 7''') == 'YES'\nassert solution('''11\n
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == \"NO\"\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == \"NO\"\nassert solution('2\\n1') == \"YES\"\nassert solution('1\\n2') == \"NO\"\nassert solution('2\\n2') == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"NO\""
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'YES'\nassert solution('1') == 'NO'\nassert solution('2 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 2 1') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 6 1 4 5\") == \"YES\"\nassert solution(\"2 3 5 7 9 1\") == \"NO\"\nassert solution(\"1 2 2 3 4 4 5\") == \"NO\"\nassert solution(\"1 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 1 1\") == \"YES\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 'NO'\nassert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 1 1') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 6 1 4 5') == 'YES'\nassert solution('2 6 1 4 4') == 'NO'\nassert solution('1 1') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('1 1 1') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 2\\n2 1\\n2 5') == 'NO'\nassert solution('2\\n2 2\\n2 3\\n2 4\\n2 5') == 'NO'\nassert solution('5\\n2 4 3 1 5') == 'YES'\nassert solution('4\\n2 4 3 1\\n2 4 3 1\\n2 4 3 1\\n2 4 3 1') == 'NO'\nassert solution('2\\n1 1\\n1 1\\n1 1\\n1 1') == 'NO'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '5'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 1 1 1 1 1 1\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '6'"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n2\\n3\\n4') == '4'\nassert solution('3\\n1\\n2\\n3\\n4\\n1\\n2\\n3') == '2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\") == \"2\"\nassert solution(\"3\\n1\\n2\\n1\\n2\") == \"3\"\nassert solution(\"3\\n1\\n2\\n2\\n1\") == \"3\"\nassert solution(\"3\\n1\\n2\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '2'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n2\\n') == '2'\nassert solution('2\\n2\\n2\\n') == '2'\nassert solution('3\\n1\\n3\\n') == '3'\nassert solution('3\\n3\\n3\\n') == '3'\nassert solution('4\\n1\\n2\\n3\\n4\\n4\\n') == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5') == '2'\nassert solution('5\\n5') == '3'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n5\\n1 2 3 4 5\\n8\\"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List\n\nMAX = 50"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '2'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '3'\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '4'\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '2'\nassert solution('''5\n5\n1 2 3 4 5\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3''') == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9\\n' + '8 5\\n' + '2 6\\n' + '5 3\\n' + '6 4\\n' + '5 7\\n' + '4 3\\n' + '1 2\\n' + '2 1\\n' + '3 1\\n' + '2 1\\n' + '3\\n' + '7 13\\n' + '2 3\\n' + '2 2\\n' + '2 1\\n' + '2 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '2 2\\n' + '2 2\\n' + '2 1\\n' + '2 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\n' + '1 1\\"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 3''') == '3'\nassert solution('''1 5''') == '1'\nassert solution('''22 5''') == '5'\nassert solution('''987 13''') == '77'\nassert solution('''974 131''') == '777'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '2\\n1\\n3\\n5\\n6\\n8'\nassert solution('2\\n1\\n2\\n2') == '1\\n3\\n4'\nassert solution('2\\n1\\n1\\n2') == '3'\nassert solution('2\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1') == '3'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('1\\n10\\n1\\n1') == '2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"\nassert solution(\"4\\n1 2\\n2 4\\n2 6\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"\nassert solution(\"4\\n1 2\\n2 4\\n2 6\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"\nassert solution(\"4\\n1 2\\n2 4\\n2 6\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"\nassert solution(\"4\\n1 2\\n2 4\\n2 6\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == 3\nassert solution('1 2 3 4 5 6 7 8') == 1\nassert solution('7 3') == 3\nassert solution('8 2') == 1\nassert solution('7 5') == 77\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7') == '1'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7') == '1'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7') == '1'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7') == '1'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('2\\n2\\n') == '2'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''\n1\n3\n1 3\n''') == '1'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n''') == '15'\nassert solution('''\n5\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '12'\nassert solution('''\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '8'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"codeforces\") == '9 4 7 2 1 2 5 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution(\"codeforces\") == '9 4 7 2 1 2 5 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution(\"codeforces\") == '9 4 7 2 1 2 5 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution(\"codeforces\") == '9 4 7 2 1 2 5 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution(\"codeforces\") == '9 4 7 2 1 2 5 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == \"a,b,c\"\nassert solution(\"abca\") == \"a,b,c,a\"\nassert solution(\"codeforces\") == \"c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c,d,e,f,o,r,s,a,c"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n\n\n\nassert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n\n\nassert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n\n\nassert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n\n\nassert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"qwertyuiop\") == \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"vfdfqwir\") == \"9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"cdfqwir\") == \"3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('qwertyuiop') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('asdfghjkl') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('zxcvbnm') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('aBcDa') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('aCbD') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\nassert solution('''3\n4 2\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\nassert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\nassert solution('''3\n4 2\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\nassert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == '0'\nassert solution('aa') == '0'\nassert solution('ab') == '1'\nassert solution('abc') == '2'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abc') == 'a b c'\nassert solution('codeforces') == 'c d e f o r s'\nassert solution('codeforces') == 'c d e f o r s'\nassert solution('codeforces') == 'c d e f o r s'\nassert solution('codeforces') == 'c d e f o r s'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n\nassert solution('''\n1\n5 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\n\nassert solution('''\n1\n5 2\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1 1 1\\n2 1 2') == '2'\nassert solution('2\\n1 1 1\\n2 1 2\\n2 1 2') == '2'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3, 2, 1') == '0'\nassert solution('3, 2, 1\\n3, 2, 1\\n3, 2, 1') == '0'\nassert solution('3, 3, 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n') == '0'\n\n\n-----Note-----\n\nThis is a follow up to the \"Maximum Candies\" problem.\n\nThis problem is quite similar to \"Bricks\". See also: https://www.codewars.com/kata/max-bricks\n\nYou are given an $n$ x $n$ grid with each cell having a power of 1 or 0 (i.e. a cell containing a cherry or empty). Your task is to determine which cell of the grid is a cherry.\n\nWrite a function that returns the coordinates of a cherry in the grid, or false if there is no such cell. The grid is indexed with the first row at the top and the first column at the left.\n\nFor example, the grid is:\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == 0\nassert solution('1 1 1') == 0\nassert solution('1 1 1') == 0\nassert solution('1 1 1') == 0\nassert solution('1 1 1') == 0\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\\n1\") == \"2\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"10\\n2\\n3\") == \"3\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n'''\n'''\nfrom itertools import combinations, product\nfrom collections import defaultdict"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\"\"\") == \"\"\"0\n36\n0\n0\n1999999994\n1999999994\n2\n4\"\"\"\nassert solution(\"\"\"3\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\"\"\") == \"\"\"0\n36\n0\n0\"\"\"\nassert solution(\"\"\"3\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\"\"\") == \"\"\"0\n36\n0\n0\"\"\"\nassert solution(\"\"\"3\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\"\"\") == \"\"\"0\n36\n0\n0\"\"\"\nassert solution(\"\"\"3\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\"\"\") == \"\"\"0\n36\n0\n0\"\"\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1\\n') == 'YES'\nassert solution('2\\n1\\n1\\n') == 'NO'\nassert solution('2\\n1\\n1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n') == 'NO'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '7',\n    '4',\n    '11 14 16 12',\n    '2',\n    '1 8',\n    '4',\n    '1 1 1 1',\n    '4',\n    '1 2 5 6',\n    '2',\n    '12 13',\n    '6',\n    '1 6 3 10 5 8',\n    '6',\n    '1 12 3 10 5 8',\n    ])) == 'YES'\nassert solution('\\n'.join([\n    '6',\n    '1 12 3 10 5 8',\n    '2',\n    '12 13',\n    '6',\n    '1 6 3 10 5 8',\n    '6',\n    '1 12 3 10 5 8',\n    ])) == 'NO'\nassert solution('\\n'.join([\n    '7',\n    '4',\n    '11 14 16 12',\n    '2',\n    '1 8',\n    '4',\n    '1 1 1 1',\n    '4',\n    '1 2 5 6',\n    '2',\n    '12 13',\n    '6',\n    '1 6 3 10 5 8',\n    '6',\n    '1 12 3 10 5 8',\n    ])) == 'YES'\nassert solution('\\n'.join([\n    '7',\n    '4',\n    '11 14 16 12',\n    '2',\n    '1 8',\n    '4',\n    '1 1 1 1',\n    '4',\n    '1 2 5 6',\n    '2',\n    '12 13',\n    '6',\n    '1 6 3 10 5 8',\n    '6',\n    '1 12 3 10 5 8',\n    ])) == 'NO'\nassert solution('\\n'.join([\n    '7',\n    '4',\n    '11 14 16 12',\n    '2',\n    '1 8',\n    '4',\n    '1 1 1 1',\n    '4',\n    '1 2 5 6',\n    '2',\n    '12 13',\n    '6',\n    '1 6 3 10 5 8',\n    '6',\n    '1 12 3 10 5 8',\n    ])) == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('1\\n1\\n1') == 'YES'\nassert solution('2\\n1\\n1') == 'YES'\nassert solution('3\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\"\"\") == \"\"\"YES\nNO\nYES\nYES\nYES\nYES\nNO\n\"\"\"\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hi') == 'NO'\nassert solution('a') == 'YES'\nassert solution('a b c d e f') == 'NO'\nassert solution('1 1 1 1') == 'YES'\nassert solution('1 2 1') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('2\\n1') == 'YES'\nassert solution('1\\n4') == 'YES'\nassert solution('1\\n8') == 'NO'\nassert solution('1\\n10') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asdasd') == 'YES'\nassert solution('a') == 'NO'\nassert solution('a a') == 'NO'\nassert solution('a a a') == 'NO'\nassert solution('a a a a') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\nassert solution('1') == 'NO'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('2 2 1') == '3'\nassert solution('5 6 9 2') == '10'\nassert solution('6 5 9 2') == '11'\nassert solution('5 5 6 3') == '11'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5 2''') == '22'\nassert solution('''5 5 4''') == '13'\nassert solution('''5 5 4''') == '13'\nassert solution('''6 5 4''') == '13'\nassert solution('''6 5 4''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 3') == '3'\nassert solution('2 2 2') == '0'\nassert solution('1 1 1') == '1'\nassert solution('2 1 2') == '0'\nassert solution('2 2 1') == '1'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 5 2''') == '22'\nassert solution('''5 5 4''') == '13'\nassert solution('''1 2 5''') == '22'\nassert solution('''2 3 7''') == '13'\nassert solution('''2 4 4''') == '22'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\n\nassert solution(\n'''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n\nassert solution(\n'''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n\nassert solution(\n'''\n2 2 4\n1 2 3\n1 4 3\n1 3 4\n1 3 2\n2 3\n2 4\n1 2\n''') == '13'\n\nassert solution(\n'''\n4 3 4\n1 2 3\n1 3 4\n1 4 3\n1 3 2\n2 3\n2 4\n1 2\n''') == '9'"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4 0') == '3'\nassert solution('1 1 1') == '3'\nassert solution('2 1 1') == '4'\nassert solution('2 2 1') == '4'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3''') == '22'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3') == '22'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\n\n\"\"\"\n\nn, m, k = map(int, stdin.readline().split())\nroads = [tuple(map(int, stdin.readline().split())) for _ in range(m)]\ncouriers = [tuple(map(int, stdin.readline().split())) for _ in range(k)]\nroads = sorted(roads, key=lambda r: r[2])\ncouriers = sorted(couriers, key=lambda c: c[1])\n\np = set()\ndp = {(0, 0): 0}\n\nfor i, route in enumerate(couriers):\n    min_cost = float('inf')\n    for j in range(i, len(couriers)):\n        x, y = route\n        if (x, y) not in p:\n            cost = dp.get((x, y), float('inf'))\n            if cost!= float('inf'):\n                min_cost = min(min_cost, cost + roads[j][2])\n    dp[(route[1], route[0])] = min_cost\n    p.add((route[0], route[1]))\n    p.add((route[1], route[0]))\n\nreturn sum(dp.values())\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n1 2\n3\n1 4\n1 2\n3\n1 2\n2 3\n1 4\n''') == '22'\nassert solution('''2 2 1\n1 2 2\n1 2 3\n2 3 2\n1 3 2\n2 2 1\n''') == '2'\nassert solution('''3 3 2\n1 2 2\n2 3 3\n1 3 2\n2 1 2\n''') == '2'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"3\"\nassert solution(\"2\\n2\") == \"3\"\nassert solution(\"2\\n3\") == \"3\"\nassert solution(\"2\\n4\") == \"5\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n1') == '1'\nassert solution('7\\n2') == '3'\nassert solution('7\\n6') == '1'\nassert solution('7\\n13') == '9'\nassert solution('7\\n14') == '13'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''2\n1\n''') == '2'\nassert solution('''6\n2\n2\n1\n1\n1\n1\n''') == '6'\nassert solution('''13\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '13'\nassert solution('''14\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '14'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n1\n2\n6\n13\n14\n3620\n10000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n\nassert solution('''6\n1\n2\n6\n13\n14\n3620\n10000\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n51\n51\n52\n52\n53\n53\n54\n54\n55\n55\n56\n56\n57\n57\n58\n58\n59\n59\n60\n60\n61\n61\n62\n62\n63\n63\n64\n64\n65\n65\n66\n66\n67\n67\n68\n68\n69\n69\n70\n70\n71\n71\n72\n72\n73\n73\n74\n74\n75\n75\n76\n76\n77\n77\n78\n78\n79\n79\n80\n80\n81\n81\n82\n82\n83\n83\n84\n84\n85\n85\n86\n86\n87\n87\n88\n88\n89\n89\n90\n90\n91\n91\n92\n92\n93\n93\n94\n94\n95\n95\n96\n96\n97\n97\n98\n98\n99\n99\n100\n100\n101\n101\n102\n102\n103\n103\n104\n104\n105\n105\n106\n106\n107\n107\n108\n108\n109\n109\n110\n110\n111\n111\n112\n112\n113\n113\n114\n114\n115\n115\n116\n116\n117\n117\n118\n118\n119\n119\n120\n120\n121\n121\n122\n122\n123\n123\n124\n124\n125\n125\n126\n126\n127\n127\n128\n128\n129\n129\n130\n130\n131\n131\n132\n132\n133\n133\n134\n134\n135\n135\n136\n136\n137\n137\n138\n138\n139\n139\n140\n140\n141\n141\n142\n142\n143\n143\n144\n144\n145\n145\n146\n146\n147\n147\n148\n148\n149\n149\n150\n150\n151\n151\n152\n152\n153\n153\n154\n154\n155\n155\n156\n156\n157\n157\n158\n158\n159\n159\n160\n160\n161\n161\n162\n162\n163\n163\n164\n164\n165\n165\n166\n166\n167\n167\n168\n168\n169\n169\n170\n170\n171\n171\n172\n172\n173\n173\n174\n174\n175\n175\n176\n176\n177\n177\n178\n178\n179\n179\n180\n180\n181\n181\n182\n182\n183\n183\n184\n184\n185\n185\n186\n186\n187\n187\n188\n188\n189\n189\n190\n190\n191\n191\n192\n192\n193\n193\n194\n194\n195\n195\n196\n196\n197\n197\n198\n198\n199\n199\n200\n200\n201\n201\n202\n202\n203\n203\n204\n204\n205\n205\n206\n206\n207\n207\n208\n208\n209\n209\n210\n210\n211\n211\n212\n212\n213\n213\n214\n214\n215\n215\n216\n216\n217\n217\n218\n218\n219\n219\n220\n220\n221\n221\n222\n222\n223\n223\n224\n224\n225\n225\n226\n226\n227\n227\n228\n228\n229\n229\n230\n230\n231\n231\n232\n232\n233\n233\n234\n234\n235\n235\n236\n236\n237\n237\n238\n238\n239\n239\n240\n240\n241\n241\n242\n242\n243\n243\n244\n244\n245\n245\n246\n246\n247\n247\n248\n248\n249\n249\n250\n250\n251\n251\n252\n252\n253\n253\n254\n254\n255\n255\n256\n256\n257\n257\n258\n258\n259\n259\n260\n260\n261\n261\n262\n262\n263\n263\n264\n264\n265\n265\n266\n266\n267\n267\n268\n268\n269\n269\n270\n270\n271\n271\n272\n272\n273\n273\n274\n274\n275\n275\n276\n276\n277\n277\n278\n278\n279\n279\n280\n280\n281\n281\n282\n282\n283\n283\n284\n284\n285\n285\n286\n286\n287\n287\n288\n288\n289\n289\n290\n290\n291\n291\n292\n292\n293\n293\n294\n294\n295\n295\n296\n296\n297\n297\n298\n298\n299\n299\n300\n300\n301\n301\n302\n302\n303\n303\n304\n304\n305\n305\n306\n306\n307\n307\n308\n308\n309\n309\n310\n310\n311\n311\n312\n312\n313\n313\n314\n314\n315\n315\n316\n316\n317\n317\n318\n318\n319\n319\n320\n320\n321\n321\n322\n322\n323\n323\n324\n324\n325\n325\n326\n326\n327\n327\n328\n328\n329\n329\n330\n330\n331\n331\n332\n332\n333\n333\n334\n334\n335\n335\n336\n336\n337\n337\n338\n338\n339\n339\n340\n340\n341\n341\n342\n342\n343\n343\n344\n344\n345\n345\n346\n346\n347\n347\n348\n348\n349\n349\n350\n350\n351\n351\n352\n352\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''\n6\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''\n9\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''5\n5\n2 4 1 3 5\n3\n2 3 1\n5\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''3\n2\n1 3\n5\n2 4 1 3 5\n3\n2 3 1\n5\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''6\n3\n1 2 2\n5\n2 4 1 3 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\n    ) == '1 1 1 1 1'\n\nassert solution(\n'''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''\n    ) == '3 3 3'\n\nassert solution(\n'''10\n10\n7 9 8 6 5 4 3 2 1\n8\n5 6 1 4 2 7 3 8 9\n4\n7 4 1 2 5 3 6 8 9\n3\n2 1 7 4 5 6 8 9 10\n6\n7 8 2 9 10 3 4 5 6\n8\n6 8 3 9 10 4 7 5 6\n9\n8 6 4 7 5 3 6 8 9 10\n'''\n    ) == '3 3 3 3 3 3 3'\n\nassert solution(\n'''100\n100\n23 17 29 9 22 5 31 26 27 17 22 22 13 19 19 17 22 22 26 17 22 29 29 22 22 22 22 23 31 31 19 22 19 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\nassert solution('''8\n2\n1 1\n2 1\n3 2\n3 3\n3 1\n3 1\n2 1\n2 1\n1 1\n1 1\n''') == '''1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n'''\nassert solution('''8\n3\n1 1\n2 1\n3 2\n3 3\n3 1\n3 1\n2 1\n2 1\n1 1\n1 1\n''') == '''1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n'''\nassert solution('''8\n6\n1 1\n2 1\n3 2\n3 3\n3 1\n3 1\n2 1\n2 1\n1 1\n1 1\n''') == '''1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n2 2 2 2 \n3 3 3 3 \n1 1 1 1 1 \n'''\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution(\n'''9\n5\n5 3 4 1 1 4 2 1\n5\n1 4 3 2 1 1 4\n1\n2 4 2 1 4 3\n2\n2 3 2 1 3 2\n2\n4 1 2 1 4 3\n3\n4 2 1 2 4 1\n2\n3 4 2 1 1 3\n3\n1 2 1 3 4 2\n1\n2 4 2 1 3 2 1\n1\n2 1 2 3 4 2 1\n2\n2 1 3 4 2 1 2\n''') == '''3 4 4 4 4 4 4 4 4 \n9 9 9 9 9 9 9 9 \n9 9 9 9 9 9 9 9 9 9 \n1 \n2 2 2 2 2 \n3 3 3 3 \n2 2 2 2 2 \n2 3 2 2 1 3 \n2 1 2 2 1 2 \n2 3 2 2 1 3 2 \n2 1 2 2 1 2 2 \n2 1 3 2 1 3 2 1 \n2 1 2 2 1 2 2 1 \n1 \n2 1 2 2 1 1 2 \n2 1 2 2 1 2 1 2 \n1 \n2 1 1 1 1 \n2 1 1 1 1 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1 \n2 \n1 \n2 1 1 1 1 \n1 \n1"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '1 1 1 1 1'\nassert solution('2\\n1\\n1\\n2\\n1\\n1') == '1 1 1 1 1'\nassert solution('2\\n2\\n1\\n2\\n1\\n1') == '3 3 3'\nassert solution('2\\n2\\n1\\n2\\n1\\n1') == '3 3 3'\nassert solution('3\\n1\\n1\\n2\\n1\\n1') == '1 1 1 1 1'\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n2\\n5\\n4\\n6') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2 2\\n4 4 4 1 4'\n\"\"\"\nSolution 1:\nSince we can only have $2 \\cdot 10^5$ possible books, we can simply choose the books according to their\nposition in the permutation. In other words, choosing the $p_i$-th book is equivalent to choosing the\n$i$-th position in the permutation. If $p_i$ is the first position of a book, then the books of the\n$i$-th position are 1, 2, 3,..., n. If $p_i$ is the last position of a book, then the books of the\n$i$-th position are n - 1, n - 2, n - 3,..., 1.\n\nThe second solution is as follows:\nSince we can only have $2 \\cdot 10^5$ possible books, we can simply choose the books according to their\nposition in the permutation. In other words, choosing the $p_i$-th book is equivalent to choosing the\n$i$-th position in the permutation. If $p_i$ is the first position of a book, then the books of the\n$i$-th position are 1, 2, 3,..., n. If $p_i$ is the last position of a book, then the books of the\n$i$-th position are n - 1, n - 2, n - 3,..., 1.\n\nIn the second solution, we need to make sure we only choose books which are included in the query.\nIn other words, we only want to pick books of the position which is included in the query.\n\nFor each query, we need to find out the set of the books. For each query, we need to find out the position\nof each book. The position is the index of the book in the permutation. We can get the set of the books\nfrom the position of the books. If the book is included in the query, then we only need to add 1 to the\ncorresponding position in the set. If the book is excluded from the query, then we can just remove 1 from\nthe corresponding position in the set.\n\n\"\"\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\n\n'''\n'''\n\n'''"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''5\n4\n5 1 2 3 4\n4\n4 3 1 2\n3\n4 2 1 5 3\n2\n4 1 2 4 5\n3\n1 4 2 3 4\n''') == '''2 1 1 1 1 \n4 4 4 1 4\n3 3 3 3\n2 2 2 2 \n1 1 1 1 \n'''\n\nassert solution('''5\n6\n5 1 2 3 4 5\n5\n4 3 1 2\n6\n5 4 3 2 1 6\n4\n5 4 3 2 1 6\n5\n5 4 3 2 1 6\n5\n4 3 1 2\n''') == '''3 2 3 3 2 1 3 \n5 5 5 4 4 4 4 \n4 4 4 4 4 4 \n3 3 3 3 3 \n2 2 2 2 \n1 1 1 1 \n'''\n\nassert solution('''5\n4\n5 1 2 3 4\n4\n4 3 1 2\n3\n4 2 1 5 3\n2\n4 1 2 4 5\n3\n1 4 2 3 4\n''') == '''2 3 3 3 2 1 3 \n5 5 5 4 4 4 4 \n4 4 4 4 4 4 \n3 3 3 3 3 \n2 2 2 2 \n1 1 1 1 \n'''\n\nassert solution('''2\n5\n2 3 1 2 4 5\n3\n1 2 3 4 5 2\n4\n1 2 3 4 5 2\n2\n1 2 3 4 5 2\n''') == '''3 3 3 3 3\n3 3 3 3\n2 2 2 2\n1 1 1 1\n'''"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6') == '8'\nassert solution('2 6') == '8'\nassert solution('5 5') == '1 2 3 4 5'\nassert solution('3 5') == '7'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7'\nassert solution('''6 1\n0 1 2 3 4 5\n''') == '9'\nassert solution('''3 4\n1 1 1 1 1 1\n''') == '4'\nassert solution('''2 0\n0\n''') == '0'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\n\nassert solution('''3 5\n0 3 1\n''') == '7'\n\nassert solution('''2 2\n1 5\n''') == '6'\n\nassert solution('''2 1\n-10 2\n''') == '3'\n\nassert solution('''2 2\n1 2\n1 2\n''') == '0'"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\"\nassert solution(\"2 1\\n1 2\\n\") == \"2\"\nassert solution(\"3 3\\n0 1 1\\n3 2 3\\n\") == \"6\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 6\\n1 5') == '8\\n-1 2 6 4 0 3'\nassert solution('2 4\\n0 3 1') == '7\\n5 -2 4 -1 2'\nassert solution('1 4\\n2 3 4') == '0\\n-1 -2 -3 -4'\nassert solution('1 4\\n2 3 4\\n3 4') == '0\\n-1 -2 -3 -4'\nassert solution('4 5\\n0 3 1\\n1 3 2\\n2 4 4') == '7\\n5 -2 4 -1 2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '8'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n3\\n2\\n4\\n3\\n2') == '7'\nassert solution('2\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '9'\nassert solution('3\\n1\\n3\\n1\\n3\\n1\\n3') == '4'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == expected\n\"\"\"\n\n\"\"\"\n    From the second test case in the example, the optimal path RRRUUU is shown below:\n    [Image]\n    RRRRUUU\n    \n    We can see that the optimal path is RRRUUU.\n\"\"\"\n\n\n\n\"\"\"\n    Solution\n\"\"\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\\n1 2\\n1 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n1 3\\n1 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n1 3\\n1 3\\n1 3\\n\") == \"YES\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n\nFor the second test case in the example the optimal path RRRUUU is shown below:  [Image]\n\nIn the third test case in the example, it is impossible to collect all the packages.\n\nFor the fourth test case in the example, the optimal path RRRRRRRRUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU is shown below: [Image]\n\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\nYou can assume that for all test cases the package can always be placed in a grid and there is always a path between two grid points.\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    input_string) == solution(\n    \"\"\"\n    3\n    5\n    1 3\n    1 2\n    3 3\n    5 5\n    4 3\n    2\n    1 0\n    0 1\n    1\n    4 3\n    \"\"\"\n    )\n\n\n------"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\nfor t in range(int(stdin.readline().strip())):\n    n = int(stdin.readline().strip())\n    packages = [tuple(int(x) for x in stdin.readline().strip().split()) for _ in range(n)]\n    packages.sort()\n    last_x = last_y = 0\n    res = []\n    for x, y in packages:\n        if x == last_x:\n            if y < last_y:\n                res.append('U')\n            else:\n                res.append('R')\n        elif x < last_x:\n            res.append('U' * (x - last_x))\n        else:\n            res.append('R' * (y - last_y))\n        last_x = x\n        last_y = y\n    print('YES' if not res else ''.join(res) + ''.join(reversed(res)))\n\"\"\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\n\n'''\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"RUUURRRRUU\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"RRRRUUU\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 2') == 'R'\nassert solution('1 1') == 'U'\nassert solution('1 2') == 'R'\nassert solution('1 1') == 'U'\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"R\"\nassert solution(\"1\") == \"R\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == 1\nassert solution('2\\n2\\n2') == 0\nassert solution('2\\n3\\n2') == 1\nassert solution('2\\n3\\n3') == 2\nassert solution('2\\n1\\n1') == 1\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1''') == '8'\nassert solution('''1 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '0'\nassert solution('''10\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1''') == '10'\nassert solution('''14\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1''') == '10'\nassert solution('''10\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1''') == '8'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1''') == '0'\nassert solution('''1 1''') == '1'\nassert solution('''500 4''') == '2'\nassert solution('''217871987498122 10''') == '899999999999999999'\nassert solution('''100000000000000001 1''') == '899999999999999999'\n'''\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 3 2\") == \"3\"\nassert solution(\"1000000000 1000000000\") == \"2\"\nassert solution(\"100000000000000 1000000000\") == \"3\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\n\nassert solution('''1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '0'\n\nassert solution('''1000\n936001\n100000000000000001 1\n''') == '10001'\n\nassert solution('''1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '0'\n\nassert solution('''1000\n1\n1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '0'"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(''.join(example.split())) == '8'\nassert solution(''.join(example2.split())) == '0'\nassert solution(''.join(example3.split())) == '500'\nassert solution(''.join(example4.split())) == '2128012501878'\nassert solution(''.join(example5.split())) == '899999999999999999'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('input.txt') == '8\\n0\\n500\\n2128012501878\\n899999999999999999'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n100') == '101'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1 1''') == '0'\nassert solution('''5\n2 1''') == '8'\nassert solution('''500 4''') == '500'\nassert solution('''217871987498122 10''') == '2128012501878'\nassert solution('''100000000000000001 1''') == '899999999999999999'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('\\n'.join([\n    '1',\n    '1',\n    '0',\n    '1',\n    '1',\n    '1',\n    '1',\n    '0',\n    '1',\n    '0',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n0') == '1'\nassert solution('2\\n2\\n0\\n1') == '0'\nassert solution('2\\n2\\n0\\n1\\n0') == '1'\nassert solution('2\\n2\\n0\\n1\\n0\\n0') == '1'\nassert solution('2\\n2\\n0\\n1\\n0\\n0\\n0') == '1'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '1\\n0\\n2\\n4'\nassert solution('1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '0'\nassert solution('1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '2'\nassert solution('1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '4'\nassert solution('1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a\\n3\\na_1\\na_2\\na_3\\na_4\\na_5\\na_6\\na_7\\na_8\\na_9\\na_10\\na_11\\na_12\\na_13\\na_14\\na_15\\na_16\\na_17\\na_18\\na_19\\na_20') == '3'\nassert solution('a\\n1\\na_1\\na_2\\na_3\\na_4\\na_5\\na_6\\na_7\\na_8\\na_9\\na_10\\na_11\\na_12\\na_13\\na_14\\na_15\\na_16\\na_17\\na_18\\na_19\\na_20') == '0'\nassert solution('a\\n2\\na_1\\na_2\\na_3\\na_4\\na_5\\na_6\\na_7\\na_8\\na_9\\na_10\\na_11\\na_12\\na_13\\na_14\\na_15\\na_16\\na_17\\na_18\\na_19\\na_20') == '2'\nassert solution('a\\n7\\na_1\\na_2\\na_3\\na_4\\na_5\\na_6\\na_7\\na_8\\na_9\\na_10\\na_11\\na_12\\na_13\\na_14\\na_15\\na_16\\na_17\\na_18\\na_19\\na_20') == '7'\nassert solution('a\\n2\\na_1\\na_2\\na_3\\na_4\\na_5\\na_6\\na_7\\na_8\\na_9\\na_10\\na_11\\na_12\\na_13\\na_14\\na_15\\na_16\\na_17\\na_18\\na_19\\na_20') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"2\\n0\\n2\\n4\\n1\"\n\nassert solution(\n\"\"\"3\n1 0 0\n3\n1 1 0 0 1\n6\n1 0 0 0 0 1\n\"\"\") == \"2\\n0\\n2\"\n\nassert solution(\n\"\"\"7\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"2\\n0\\n2\\n4\"\n\nassert solution(\n\"\"\"4\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n\"\"\") == \"2\\n0\\n2\\n4\"\n\nassert solution(\n\"\"\"10\n10\n0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\n\"\"\"\n\ninput\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\noutput\n2\n0\n2\n4\n1\n\n\"\"\"\n\n\"\"\"\n\nThe input is well formatted, but we must analyze the elements\n\nIn the first test case of the example, you can shift the segment $[3; 3]$ to the right and the segment $[4; 5]$ to the right. After all moves, the books form the contiguous segment $[5; 7]$. So the answer is $2$.\n\nIn the second test case of the example, you have nothing to do, all the books on the bookshelf form the contiguous segment already.\n\nIn the third test case of the example, you can shift the segment $[5; 5]$ to the left and then the segment $[4; 4]$ to the left again. After all moves, the books form the contiguous segment $[1; 3]$. So the answer is $2$.\n\nIn the fourth test case of the example, you can shift the segment $[1; 1]$ to the right, the segment $[2; 2]$ to the right, the segment $[6; 6]$ to the left and then the segment $[5; 5]$ to the left. After all moves, the books form the contiguous segment $[3; 4]$. So the answer is $4$.\n\nIn the fifth test case of the example, you can shift the segment $[1; 2]$ to the right. After all moves, the books form the contiguous segment $[2; 5]$. So the answer is $1$.\n\n\"\"\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''5\n7\n0 0 1 0 1 0 1\n4\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''5\n7\n0 0 1 0 1 0 1\n4\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\n\nassert solution('''5\n7\n0 0 1 0 1 0 1\n4\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 0 0 1 0 1\\n5\\n1 1 0 0 1 1\\n3\\n1 0 0 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1 1\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '2\\n0\\n2\\n4\\n1'\nassert solution('7\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1 1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '0\\n2\\n4\\n1\\n2'\nassert solution('6\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1 1\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == '2\\n0\\n2\\n4\\n1'\nassert solution('3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0 0 1\\n3\\n1 0 0\\n2\\n1 1 0"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '5'\nassert solution('1 2 3 4 5 6 7 8') == '0'\nassert solution('1 2 3 4 5 6 7') == '5'\nassert solution('1 2 3 4 5 6') == '0'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '0'\nassert solution('0 0 1 0 1 0 1') == '2'\nassert solution('3') == '0'\nassert solution('1 0 0') == '2'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaabbbcccddd') == 'aaabbbcccddd'\nassert solution('aaabbbcccddd') == 'aaabbbcccddd'\nassert solution('aaaaaaaaaa') == 'aaaaaaaaaa'\nassert solution('aaabbbcccddd') == 'aaabbbcccddd'\nassert solution('aaab') == 'ab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcaababcaabca') == 'caabca'\nassert solution('baabca') == 'abca'\nassert solution('baaba') == 'ba'\nassert solution('baabaab') == 'ba'\nassert solution('baa') == 'a'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7 3\n4 4\n6 2\n6 3''') == 'ccbbaaa'\nassert solution('''7 3\n4 4\n6 2\n7 4''') == 'baabab'\nassert solution('''7 3\n4 4\n6 2\n7 4\n2 3\n7 3''') == 'bcbaab'\nassert solution('''7 3\n4 4\n6 2\n7 4\n2 3\n5 5\n6 5\n7 3''') == 'babbcab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''6\n5 2\n3 3\n1 1\n2 2\n1 1\n2 2\n1 1\n2 2''') == 'cbcacab'\nassert solution('''3\n4 6\n1 2\n5 1\n1 2''') == 'cbcacab'\nassert solution('''3\n4 6\n1 2\n5 1\n1 2''') == 'cbcacab'\nassert solution('''3\n5 2\n1 2\n2 1\n1 1\n2 2''') == 'cbcacab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a ab abc abcd') == \"abcd\"\nassert solution('a ab abc abcd') == \"abcd\"\nassert solution('a bc abc abcd') == \"abcd\"\nassert solution('a bc abcd') == \"abcd\"\nassert solution('a bc abcd') == \"abcd\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n7 3\\n4 4\\n6 2\\n') == 'cbcacab\\naabab\\nbbaab'\nassert solution('4\\n5 4\\n6 2\\n') == 'aababab\\nbbbbbb\\naaaaa\\naaaaaa'\nassert solution('2\\n8 1\\n10 4\\n') == 'aaaaa\\nbbbbb'\n\n\n-----\n\nThis problem was inspired by this article about permutation: https://www.hackerrank.com/challenges/permutation-equation\n\n'''\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"cbcacab\"\nassert solution(\"3\\n4 4\\n6 2\\n\") == \"abcd\"\nassert solution(\"3\\n4 4\\n6 2\\n\") == \"baabab\""
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n7 3\\n4 4\\n6 2\\n') == 'cbcacab\\nabcd\\nbaabab'\nassert solution('3\\n4 4\\n6 2\\n') == 'cbcacaab\\nabcd\\nbbaabab'\nassert solution('3\\n4 4\\n2 1\\n') == 'abcda\\nbaabaa\\nabcdab'\n\nprint('solution:', solution('3\\n7 3\\n4 4\\n6 2\\n'))\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc\\nabc\\nabc') == 'abcabcabc'\nassert solution('ab\\nab\\nab') == 'abababab'\nassert solution('a\\na\\naa\\nab\\nab\\naa\\naa') == 'aabaaabaa'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n100\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 21\\n1 100 0\\n2 1 2\\n6 46 47\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 46 47\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n10\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n10\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21'\n\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 45 46'\n\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '3 4 2'\n\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '1 1000 0'\n\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '1 1000 0'"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n\"\"\") == \"\"\"\n6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n\"\"\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n1 1 1 1 1 1 1\n1\n1000\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n'''[1:-1]) == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution(\n'''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n'''[1:-1]) == '6 22 21'\n\nassert solution(\n'''\n10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == \"\"\"\"\""
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nprint(solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n'''))\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('''3\n8\n2 1 2 1 2 1 2 1 2 1\n1\n100\n2\n1 2 3 4 5 6 7 8 9 10 11 12 13\n1\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n1 1 1\n7\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '2 3 2\\n1 100 0\\n2 1 2\\n6 42 43\\n1 3 1\\n3 4 3\\n3 4 2\\n'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11\n3 1 4 1 5 9 2 6 5 3 5''') == '6 23 21'\nassert solution('''1\n1000\n3\n1 1 1''') == '1 1000 0'\nassert solution('''2\n2 1\n6''') == '2 1 2'\nassert solution('''6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1''') == '4 4 3'\n\n'''\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n1\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\n\nassert solution(\n'''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n\nassert solution(\n'''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\n\nassert solution(\n'''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\n\nassert solution(\n'''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '6\\n27\\n39\\n11\\n17'\n\n\n\n\n\"\"\""
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\\n3\") == \"2\"\n\nassert solution(\"1 2\\n3 4\") == \"2\"\nassert solution(\"1 2\\n3 4\\n5 6\\n5 5 6 6 5\") == \"6\""
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == '1'\nassert solution('3 1') == '1'\nassert solution('1 2') == '3'\nassert solution('1 2') == '3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3 4') == '6'\nassert solution('2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '6'\nassert solution('2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '6'\nassert solution('2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '6'\nassert solution('2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '6'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n\nimport sys\n\n__author__ = 'jslvtr'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n1 2 3\\n5 3\\n1 2 3\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3') == '6\\n27\\n39\\n11\\n17'"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\n'''\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n\"\"\") == \"0 7 13 18 24 35 36 37 40 45\\n0 2 4 7 8 11 13 14 16 17\"\n\nassert solution(\n\"\"\"10 2\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n\"\"\") == \"0 2 4 7 8 11 13 14 16 17\\n0 2 4 7 8 11 13 14 16 17\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == \"0 2 4 7 8 11 13 14 16 17\""
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('5 1\\n1 2 3 4 5 1 2 1') == '0 2 3 4 5'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\\n2 3 4 1 2\\n\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"3 2 3 1 3 3 1 4 1\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"2 3 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"10 1\\n3 2 3 3 1 4 1\\n2 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''2 3\n2 2\n1 1\n''') == '0 0'\nassert solution('''8 2\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '0 0'\nassert solution('''1 1\n1 1\n''') == '0 0'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1\\n1 2 3 4 4 1 2 1 3\\n1 2 3 4 4 1 2 1 3\\n') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('1 1\\n1 2 2\\n') == '0 2'\n\n\n\"\"\"\n\nn, m = map(int, stdin.split())\na = list(map(int, stdin.split()))\nb = list(map(int, stdin.split()))\n\ntime = 0\n\nfor i in range(n):\n    time += max(a[i], b[i])\n\nprint(time)\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45 \"\nassert solution(\"5 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17 \""
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('foo\\nbar\\nbaz\\nqux\\n') == 'qux'\nassert solution('a b c\\na\\nb\\nc\\n') == 'c'\nassert solution('a b c\\na\\nb\\nc\\n') == 'b'\nassert solution('a b c\\na\\nb\\nc\\n') == 'b'\nassert solution('a b c\\na\\nb\\nc\\n') == 'b'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb\\naabab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa'\n'''assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb\\naabab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa'\n'''assert solution('''3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n'''assert solution('''2 2\n5 2\n3 1\n3 2\n20 100\n''') == 'aab'\n'''assert solution('''2 2\n5 2\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n''') == 'ab'\n'''"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a' * 100 + 'b' * 100) == 'ab' * 100"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"abcdefg\") == \"\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\n'''\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == '''\\\naaabb\naabab\nbaaba\nbbaaa\nabb\nbab\naaaaabaaaaabaaaaaaaa\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a \") == \"a\"\nassert solution(\"a a\") == \"a a\"\nassert solution(\"a a \") == \"a a\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaabb', 'aabab'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n4 13\n4 14\n4 15\n4 16\n4 17\n4 18\n4 19\n4 20\n4 21\n4 22\n4 23\n4 24\n4 25\n4 26\n4 27\n4 28\n4 29\n4 30\n4 31\n4 32\n4 33\n4 34\n4 35\n4 36\n4 37\n4 38\n4 39\n4 40\n4 41\n4 42\n4 43\n4 44\n4 45\n4 46\n4 47\n4 48\n4 49\n4 50\n4 51\n4 52\n4 53\n4 54\n4 55\n4 56\n4 57\n4 58\n4 59\n4 60\n4 61\n4 62\n4 63\n4 64\n4 65\n4 66\n4 67\n4 68\n4 69\n4 70\n4 71\n4 72\n4 73\n4 74\n4 75\n4 76\n4 77\n4 78\n4 79\n4 80\n4 81\n4 82\n4 83\n4 84\n4 85\n4 86\n4 87\n4 88\n4 89\n4 90\n4 91\n4 92\n4 93\n4 94\n4 95\n4 96\n4 97\n4 98\n4 99\n4 100\n4 101\n4 102\n4 103\n4 104\n4 105\n4 106\n4 107\n4 108\n4 109\n4 110\n4 111\n4 112\n4 113\n4 114\n4 115\n4 116\n4 117\n4 118\n4 119\n4 120\n4 121\n4 122\n4 123\n4 124\n4 125\n4 126\n4 127\n4 128\n4 129\n4 130\n4 131\n4 132\n4 133\n4 134\n4 135\n4 136\n4 137\n4 138\n4 139\n4 140\n4 141\n4 142\n4 143\n4 144\n4 145\n4 146\n4 147\n4 148\n4 149\n4 150\n4 151\n4 152\n4 153\n4 154\n4 155\n4 156\n4 157\n4 158\n4 159\n4 160\n4 161\n4 162\n4 163\n4 164\n4 165\n4 166\n4 167\n4 168\n4 169\n4 170\n4 171\n4 172\n4 173\n4 174\n4 175\n4 176\n4 177\n4 178\n4 179\n4 180\n4 181\n4 182\n4 183\n4 184\n4 185\n4 186\n4 187\n4 188\n4 189\n4 190\n4 191\n4 192\n4 193\n4 194\n4 195\n4 196\n4 197\n4 198\n4 199\n4 200\n4 201\n4 202\n4 203\n4 204\n4 205\n4 206\n4 207\n4 208\n4 209\n4 210\n4 211\n4 212\n4 213\n4 214\n4 215\n4 216\n4 217\n4 218\n4 219\n4 220\n4 221\n4 222\n4 223\n4 224\n4 225\n4 226\n4 227\n4 228\n4 229\n4 230\n4 231\n4 232\n4 233\n4 234\n4 235\n4 236\n4 237\n4 238\n4 239\n4 240\n4 241\n4 242\n4 243\n4 244\n4 245\n4 246\n4 247\n4 248\n4 249\n4 250\n4 251\n4 252\n4 253\n4 254\n4 255\n4 256\n4 257\n4 258\n4 259\n4 260\n4 261\n4 262\n4 263\n4 264\n4 265\n4 266\n4 267\n4 268\n4 269\n4 270\n4 271\n4 272\n4 273\n4 274\n4 275\n4 276\n4 277\n4 278\n4 279\n4 280\n4 281\n4 282\n4 283\n4 284\n4 285\n4 286\n4 287\n4 288\n4 289\n4 290\n4 291\n4 292\n4 293\n4 294\n4 295\n4 296\n4 297\n4 298\n4 299\n4 300\n4 301\n4 302\n4 303\n4 304\n4 305\n4 306\n4 307\n4 308\n4 309\n4 310\n4 311\n4 312\n4 313\n4 314\n4 315\n4 316\n4 317\n4 318\n4 319\n4 320\n4 321\n4 322\n4 323\n4 324\n4 325\n4 326\n4 327\n4 328\n4 329\n4 330\n4 331\n4 332\n4 333\n4 334\n4 335\n4 336\n4 337\n4 338\n4 339\n4 340\n4 341\n4 342\n4 343\n4 344\n4 345\n4 346\n4 347\n4 348\n4 349\n4 350\n4 351\n4 352\n4 353\n4 354\n4 355\n4 356\n4 357\n4 358\n4 359\n4 360\n4 361\n4 362\n4 363\n4 364\n4 365\n4 366\n4 367\n4 368\n4 369\n4 370\n4 371\n4 372\n4 373\n4 374\n4 375\n4 376\n4 377\n4 378\n4 379\n4 380\n4 381\n4 382\n4 383\n4 384\n4 385\n4 386\n4 387\n4 388\n4 389\n4 390\n4 391\n4 392\n4 393\n4 394\n4 395\n4 396\n4 397\n4 398\n4 399\n4 400\n4 401\n4 402\n4 403\n4 404\n4 405\n4 406\n4 407\n4 408\n4 409\n4 410\n4 411\n4 412\n4 413\n4 414\n4 415\n4 416\n4 417\n4 418\n4 419\n4 420\n4 421\n4 422\n4 423\n4 424\n4 425\n4 426\n4 427\n4 428\n4 429\n4 430\n4 431\n4 432\n4 433\n4 434\n4 435\n4 436\n4 437\n4 438\n4 439\n4 440\n4 441\n4 442\n4 443\n4 444\n4 445\n4 446\n4 447\n4 448\n4 449\n4 450\n4 451\n4 452\n4 453\n4 454\n4 455\n4 456\n4 457\n4 458\n4 459\n4 460\n4 461\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaabb\\naabab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa'\nassert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n1 10''') == 'aaaaabaaaaabaaaaaaaa'\n'''\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'baaba'\nassert solution('''\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bbaaa'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'abb'\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\nassert solution('''1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '5'\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '5'\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n\nassert solution('''\n3\n3 2\n1 2 1\n2 1 2\n1 1 1\n\n3 3\n1 1 1\n2 1 2\n1 1 1\n\n3 3\n1 1 1\n2 1 2\n1 1 1\n''') == '0'"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\n\nassert solution('''1\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '1'\n\nassert solution('''1\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n13 14 6 17 1 14 7 9 19 3\n15 16 6 17 1 14 7 9 19 3''') == '5'\n\nassert solution('''1\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n15 16 6 17 1 14 7 9 19 3\n17 18 6 17 1 14 7 9 19 3\n19 20 6 17 1 14 7 9 19 3\n22 23 6 17 1 14 7 9 19 3''') == '10'\n\nassert solution('''1\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n15 16 6 17 1 14 7 9 19 3\n17 18 6 17 1 14 7 9 19 3\n19 20 6 17 1 14 7 9 19 3\n22 23 6 17 1 14 7 9 19 3\n23 24 6 17 1 14 7 9 19 3\n24 25 6 17 1 14 7 9 19 3\n25 26 6 17 1 14 7 9 19 3\n26 27 6 17 1 14 7 9 19 3\n27 28 6 17 1 14 7 9 19 3\n28 29 6 17 1 14 7 9 19 3\n29 30 6 17 1 14 7 9 19 3\n30 31 6 17 1 14 7 9 19 3\n31 32 6 17 1 14 7 9 19 3\n32 33 6 17 1 14 7 9 19 3\n33 34 6 17 1 14 7 9 19 3\n34 35 6 17 1 14 7 9 19 3\n35 36 6 17 1 14 7 9 19 3\n35 37 6 17 1 14 7 9 19 3\n35 38 6 17 1 14 7 9 19 3\n35 39 6 17 1 14 7 9 19 3\n35 40 6 17 1 14 7 9 19 3\n35 41 6 17 1 14 7 9 19 3\n35 42 6 17 1 14 7 9 19 3\n35 43 6 17 1 14 7 9 19 3\n35 44 6 17 1 14 7 9 19 3\n35 45 6 17 1 14 7 9 19 3\n35 46 6 17 1 14 7 9 19 3\n35 47 6 17 1 14 7 9 19 3\n35 48 6 17 1 14 7 9 19 3\n35 49 6 17 1 14 7 9 19 3\n35 50 6 17 1 14 7 9 19 3\n35 51 6 17 1 14 7 9 19 3\n35 52 6 17 1 14 7 9 19 3\n35 53 6 17 1 14 7 9 19 3\n35 54 6 17 1 14 7 9 19 3\n35 55 6 17 1 14 7 9 19 3\n35 56 6 17 1 14 7 9 19 3\n35 57 6 17 1 14 7 9 19 3\n35 58 6 17 1 14 7 9 19 3\n35 59 6 17 1 14 7 9 19 3\n35 60 6 17 1 14 7 9 19 3\n35 61 6 17 1 14 7 9 19 3\n35 62 6 17 1 14 7 9 19 3\n35 63 6 17 1 14 7 9 19 3\n35 64 6 17 1 14 7 9 19 3\n35 65 6 17 1 14 7 9 19 3\n35 66 6 17 1 14 7 9 19 3\n35 67 6 17 1 14 7 9 19 3\n35 68 6 17 1 14 7 9 19 3\n35 69 6 17 1 14 7 9 19 3\n35 70 6 17 1 14 7 9 19 3\n35 71 6 17 1 14 7 9 19 3\n35 72 6 17 1 14 7 9 19 3\n35 73 6 17 1 14 7 9 19 3\n35 74 6 17 1 14 7 9 19 3\n35 75 6 17 1 14 7 9 19 3\n35 76 6 17 1 14 7 9 19 3\n35 77 6 17 1 14 7 9 19 3\n35 78 6 17 1 14 7 9 19 3\n35 79 6 17 1 14 7 9 19 3\n35 80 6 17 1 14 7 9 19 3\n35 81 6"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('stdin') == '6'\nassert solution('stdin') == '1'\nassert solution('stdin') == '5'\nassert solution('stdin') == '10'\n\n\"\"\""
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n') == '6\\n1\\n5'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3\n2\n1 2\n2\n0\n0\n10''') == '3'\nassert solution('''1 3\n2\n1 2\n2\n0\n0\n10\n0\n1''') == '4'\nassert solution('''1 3\n2\n1 2\n2\n0\n0\n10\n0\n1''') == '7'\nassert solution('''7 3\n1\n2\n1\n2\n0\n0\n10\n0\n1''') == '0'\nassert solution('''7 3\n1\n2\n1\n2\n0\n0\n10\n0\n1''') == '0'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1 2 3 4') == '0\\n1\\n2\\n3\\n4'\nassert solution('1 2 3 4') == '1\\n2\\n3\\n4'\nassert solution('3 3') == '0\\n0'\nassert solution('2 3 2') == '2\\n2'\nassert solution('1 2 3 4') == '1\\n2\\n3\\n4'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '7'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"4\"\nassert solution(\"7 3\") == \"4\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"7 3\") == \"4\"\nassert solution(\"7 3\") == \"4\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n1\\n2\\n2\\n0\\n0\\n10\\n') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('4\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'\nassert solution('7\\n3\\n') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('4\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'\n\n\n\n-----\n\n## Submissions\n\n\"\"\""
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('''4 3''') == '0\\n0\\n0\\n0'\nassert solution('''5 3''') == '2\\n2\\n3\\n3\\n4'\nassert solution('''2 3''') == '0\\n0'\nassert solution('''3 3''') == '1\\n1\\n2'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n') == '7\\n3\\n3\\n3\\n4\\n4\\n7'\nassert solution('2 10\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n') == '0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('2 10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '0'\nassert solution('4\\n') == '0'\nassert solution('5\\n') == '1'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == '0'\nassert solution('0 1') == '1'\nassert solution('1 2') == '0'\nassert solution('2 1') == '0'\nassert solution('0 1 2') == '1'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6\") == \"\"\nassert solution(\"1 2 3 4 5 6 7\") == \"\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '''1 49 \n20 40 30 50 10\n26 32 20 38 44 50 \n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7'''\n\nassert solution('''1\n1 2\n''') == '''1 2'''\n\nassert solution('''3\n2 1\n1 1\n1 1\n''') == '''2 1'''\n\nassert solution('''9\n2 1\n2 2\n3 2\n4 2\n5 2\n6 2\n7 2\n8 2\n9 2\n''') == '''8 2\n3 2\n1 1\n2 1\n1 1'''\n\nassert solution('''5\n2 1\n2 2\n3 2\n4 2\n5 2\n''') == '''1 2\n1 2\n2 1\n2 1\n2 1'''"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3 4\\n5 6 7\\n8 9 10\\n11 12 13') == '8 9 10 11 12 13'\nassert solution('2\\n1 3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '1 3 4 2 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100'\nassert solution('3\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1 2\\n2 3\\n1"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49 \\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''3 1 19\n2 2 19\n1 1 19\n
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test_data.txt\").read()) == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\nassert solution(open(\"test_data2.txt\").read()) == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\nassert solution(open(\"test_data3.txt\").read()) == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\nassert solution(open(\"test_data4.txt\").read()) == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\nassert solution(open(\"test_data5.txt\").read()) == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\n\n\n-----You are given an array of $n$ positive integers (i.e. $1 \\le n \\le 10^5$). The array contains two elements, $x$ and $y$, that are known for you, but you need to determine the maximum element of the array in O(n) time.\n\nIf we sort the array in increasing order, then the maximum element of the array is either the element $x$ or the element $y$ whichever is larger. For example, consider the array $A = [1, 2, 3, 4, 5]$:\n\n1) $A = [1, 2, 3, 4, 5]$, then the maximum element of $A$ is $5$\n2) $A = [1, 2, 3, 4, 3]$, then the maximum element of $A$ is $3$\n\nYour task is to print the maximum element of the array in O(n) time.\n\nWrite an efficient algorithm for the following assumptions:\n\n\n$n$ is an integer within the range [1..50,000]\n$x$ and $y$ are integers within the range [1..1,000,000,000]\n'''\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''\n'''\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('2\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('3\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('4\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n5 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('2\\n5 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\\n3 1 4 5\\n6 2 3 4 5') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n3 1 4 5\\n6 2 3 4 5'\nassert solution('3\\n2 3 6\\n9 4 3 2\\n3 2 5 7') == '3 6\\n9 4 3 2\\n3 2 5 7'\nassert solution('2\\n2 2\\n1 1') == '1\\n1'\nassert solution('1\\n1') == '1'\n\n\n\n\n-------"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '1 1'\nassert solution('1 1 1') == '1 1'\nassert solution('2 1 49') == '1 49'\nassert solution('5 20 50') == '20 40 30 50 10'\nassert solution('6 20 50') == '20 40 30 50 10'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 1 2''') == '1 2 3'\n'''\nWrite 5 lines of code to test the correctness of solution:\nYou are developing a new feature for the website which sells airline tickets: being able to sort tickets by price! You have already extracted the tickets' prices, so there's just the last step to be done...\n\nYou are given an array of integers. Sort it in non-descending order.\n'''\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 1 1 1') == '1 1 1 1'\nassert solution('100 1000 1001 1000') == '1000 1000 1001 1000'\nassert solution('1 1 1 1 1 1') == '1 1 1 1 1 1'\nassert solution('100 1000 1001 1000') == '1000 1001 1000 1001 1000'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\nprint('solution:', solution('3 3 1 2'))\n\n\"\"\"\n\n\"\"\"\n\nThere is no input validation in this problem.\n\nThe algorithm is quite simple: we write n elements to a list and sort them, then we write them in the output.\n\n\"\"\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\n-----Solutions Overview-----\n\n1. Easy\n\n2. Hard\n\n3. Hard\n\n4. Hard\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('3 3 1 2') == '1 2 3'\nassert solution('1 2 3') == '1 2 3'\nassert solution('1 2 2') == '1 2 2'\nassert solution('1 1 1 1') == '1 1 1 1'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 1 1 1') == '1 1 1'\nassert solution('1 1 1') == '1'\nassert solution('10 5 2 4') == '2 4 5 10'\nassert solution('10 3 9 4 6') == '9 4 3 6 10'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 1 2 3 4') == '1 4 2 3'\nassert solution('1 1 3 1 2 3 3') == '1 3 2 3 1'\nassert solution('1 1 1 2 1 3 3 3') == '1 1 1 2 1 3 3'\nassert solution('1 3 2 3 4 5') == '1 3 2 4 5'\n\n\n\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('3 1 2') == '1 2 3'\nassert solution('1 3 2') == '1 2 3'\nassert solution('1 3 2 1') == '1 2 1 3'\nassert solution('2 2 2') == '2 2 2'\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 2') == '1 2 3'\nassert solution('1 2 3') == '1 2 3'\nassert solution('5 3 1 2 4') == '1 2 3 4 5'\nassert solution('1 2 3 4 5 6') == '1 2 3 4 5 6'\n\n\n-----\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n1') == 'NO'\nassert solution('2\\n2\\n2') == 'YES'\nassert solution('3\\n3\\n3') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n2') == 'YES'\nassert solution('3\\n3') == 'YES'\nassert solution('4\\n4') == 'YES'\nassert solution('5\\n5') == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('input/e5.txt') == 'NO'\nassert solution('input/e6.txt') == 'YES'\nassert solution('input/e7.txt') == 'YES'\nassert solution('input/e8.txt') == 'YES'\nassert solution('input/e9.txt') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n4\n1 2 3 4\n4\n1 2 3 4''') == 'NO'\nassert solution('''2\n4\n1 2 3 4\n4\n2 2 2 2''') == 'YES'\nassert solution('''2\n4\n1 2 3 4\n4\n1 2 3 4''') == 'YES'\nassert solution('''2\n4\n1 2 3 4\n4\n1 1 1 1''') == 'NO'\nassert solution('''2\n4\n1 2 3 4\n4\n2 2 2 2''') == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''3\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''2\n1\n1\n''') == 'NO'\nassert solution('''2\n1\n2\n''') == 'NO'\nassert solution('''2\n1\n2\n''') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3') == 'YES'\nassert solution('2\\n3') == 'NO'\nassert solution('3\\n3') == 'NO'\nassert solution('3\\n3\\n3') == 'NO'\nassert solution('3\\n3\\n3\\n3') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''3\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''6\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''6\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''6\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n4''') == 'NO'\nassert solution('''2\n2\n3''') == 'YES'\nassert solution('''2\n2\n3''') == 'NO'\nassert solution('''2\n2\n2\n3\n3\n3\n3\n4\n4''') == 'YES'\nassert solution('''2\n2\n2\n3\n3\n3\n3\n4\n4''') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n5\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''3\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''2\n2\n1 2\n''') == 'YES'\n\nassert solution('''5\n3\n2 3 4 5 6\n1\n2 1\n''') == 'NO'\n\nassert solution('''4\n4\n2 3 4 5 6\n1\n2 1\n1 2\n1 2\n''') == 'YES'"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n1') == '-1'\nassert solution('2\\n2\\n4') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('2\\n2\\n2') == '-1'\nassert solution('3\\n6\\n2') == '1 4 2 5 3 6'\nassert solution('4\\n7\\n2') == '1 4 2 5 3 6 7 8'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '-1'\nassert solution('10') == '5 1 3 6 2 4 7'\nassert solution('11') == '-1'\nassert solution('12') == '13 9 7 11 8 4 1 3 5 2 6 10 12'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n30\\n30\\n31\\n31\\n32\\n32\\n33\\n33\\n34\\n34\\n35\\n35\\n36\\n36\\n37\\n37\\n38\\n38\\n39\\n39\\n40\\n40\\n41\\n41\\n42\\n42\\n43\\n43\\n44\\n44\\n45\\n45\\n46\\n46\\n47\\n47\\n48\\n48\\n49\\n49\\n50\\n50\\n51\\n51\\n52\\n52\\n53\\n53\\n54\\n54\\n55\\n55\\n56\\n56\\n57\\n57\\n58\\n58\\n59\\n59\\n60\\n60\\n61\\n61\\n62\\n62\\n63\\n63\\n64\\n64\\n65\\n65\\n66\\n66\\n67\\n67\\n68\\n68\\n69\\n69\\n70\\n70\\n71\\n71\\n72\\n72\\n73\\n73\\n74\\n74\\n75\\n75\\n76\\n76\\n77\\n77\\n78\\n78\\n79\\n79\\n80\\n80\\n81\\n81\\n82\\n82\\n83\\n83\\n84\\n84\\n85\\n85\\n86\\n86\\n87\\n87\\n88\\n88\\n89\\n89\\n90\\n90\\n91\\n91\\n92\\n92\\n93\\n93\\n94\\n94\\n95\\n95\\n96\\n96\\n97\\n97\\n98\\n98\\n99\\n99\\n100\\n100\\n') == '9 6 10 8 4 7 3 1 5 2 '\nassert solution('2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n30\\n30\\n31\\n31\\n32\\n32\\n33\\n33\\n34\\n34\\n35\\n35\\n36\\n36\\n37\\n37\\n38\\n38\\n39\\n39\\n40\\n40\\n41\\n41\\n42\\n42\\n43\\n43\\n44\\n44\\n45\\n45\\n46\\n46\\n47\\n47\\n48\\n48\\n49\\n49\\n50\\n50\\n51\\n51\\n52\\n52\\n53\\n53\\n54\\n54\\n55\\n55\\n56\\n56\\n57\\n57\\n58\\n58\\n59\\n59\\n60\\n60\\n61\\n61\\n62\\n62\\n63\\n63\\n64\\n64\\n65\\n65\\n66\\n66\\n67\\n67\\n68\\n68\\n69\\n69\\n70\\n70\\n71\\n71\\n72\\n72\\n73\\n73\\n74\\n74\\n75\\n75\\n76\\n76\\n77\\n77\\n78\\n78\\n79\\n79\\n80\\n80\\n81\\n81\\n82\\n82\\n83\\n83\\n84\\n84\\n85\\n85\\n86\\n86\\n87\\n87\\n88\\n88\\n89\\n89\\n90\\n90\\n91\\n91\\n92\\n92\\n93\\n93\\n94\\n94\\n95\\n95\\n96\\n96\\n97\\n97\\n98\\n98\\n99\\n99\\n100\\n100\\n') == '-1 '\nassert solution('3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n30\\n30\\n31\\n31\\n32\\n32\\n33\\n33\\n34\\n34\\n35\\n35\\n36\\n36\\n37\\n37\\n38\\n38\\n39\\n39\\n40\\n40\\n41\\n41\\n42\\n42\\n43\\n43\\n44\\n44\\n45\\n45\\n46\\n46\\n47\\n47\\n48\\n48\\n49\\n49\\n50\\n50\\n51\\n51\\n52\\n52\\n53\\n53\\n54\\n54\\n55\\n55\\n56\\n56\\n57\\n57\\n58\\n58\\n59\\n59\\n60\\n60\\n61\\n61\\n62\\n62\\n63\\n63\\n64\\n64\\n65\\n65"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '1 2'\nassert solution('10\\n10\\n') == '-1'\nassert solution('2\\n2\\n') == '1 2'\nassert solution('2\\n4\\n') == '3 1 4 2'\nassert solution('4\\n6\\n') == '3 1 4 2'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n10\n3\n\"\"\") == \"\"\"\n9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n\"\"\"\n\nassert solution(\"\"\"\n6\n3\n\"\"\") == \"\"\"\n9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n\"\"\"\n\nassert solution(\"\"\"\n9\n3\n\"\"\") == \"\"\"\n9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n\"\"\"\n\nassert solution(\"\"\"\n9\n7\n\"\"\") == \"\"\"\n9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n\"\"\"\n\nassert solution(\"\"\"\n7\n7\n\"\"\") == \"\"\"\n9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n\"\"\""
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '-1'\nassert solution('4\\n2') == '-1'\nassert solution('3\\n2') == '-1'\nassert solution('5\\n2') == '-1'\nassert solution('6\\n2') == '-1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2'\nassert solution(\n'''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '1'\nassert solution(\n'''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '-1'\nassert solution(\n'''1\n1\n1\n1''') == '0'\nassert solution(\n'''1\n1\n1\n1''') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n') == '0'\nassert solution('2\\n1\\n1\\n') == '2'\nassert solution('3\\n1\\n1\\n') == '-1'\nassert solution('4\\n1\\n1\\n') == '2'\nassert solution('4\\n2\\n1\\n') == '1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n0\\n1\\n2\\n0\\n1\\n0\\n2\\n2\\n2') == '2'\nassert solution('1\\n0\\n1\\n2\\n0\\n1\\n0\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '2'\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4') == '-1'\nassert solution('1\\n0\\n1\\n2\\n0\\n1\\n0\\n2\\n2\\n2\\n2') == '0'\nassert solution('1\\n0\\n1\\n2\\n0\\n1\\n0\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('1') == 1\nassert solution('2') == -1\nassert solution('3') == 0\nassert solution('4') == 1\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('2 3 4 5') == '-1'\nassert solution('1 2 3 4') == '0'\nassert solution('2 3 4 5') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\nSample input\n\n5\n5\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n\nSample output\n\n2\n1\n-1\n0\n0\n0\n\"\"\"\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for j in range(n):\n        b[j] = a[j] % 2\n        if j > 0 and b[j]!= b[j - 1]:\n            m = min(j, n - j - 1)\n            for k in range(m):\n                a[j - k], a[j - k + 1] = a[j - k + 1], a[j - k]\n            break\n    if all(a[j] % 2 == b[j] for j in range(n)):\n        print(0)\n    else:\n        print(1 + sum(j - k for k in range(1, n) if a[j] % 2!= b[j]))\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6') == '2\\n1\\n-1'\nassert solution('7\\n7\\n7\\n7') == '0'\nassert solution('8\\n8\\n8\\n8') == '-1'\n\n\n-----Best Speed-----\n45.4\n-----Best Memory-----\n52.5\n\n\"\"\""
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == -1\nassert solution('2\\n1') == 1\nassert solution('2\\n1\\n1') == -1\nassert solution('7\\n7\\n7\\n7') == 0\nassert solution('7\\n7\\n7\\n7\\n7') == 0\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2\\n1\\n-1\\n0'\nassert solution('''3\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1\\n0\\n-1'\nassert solution('''1\n1\n1\n2\n''') == '-1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0'\nassert solution('''5\n5\n3 2 6 9 0\n3\n3 2 6 9 0\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '3'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == \"2 2 2 2 2 1 1 0 2\"\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == \"0 -1 1 -1\"\nassert solution('''3\n0 0 1 0\n1 2\n1 3\n1 4\n''') == \"0 -1 1 -1\"\nassert solution('''1\n0 0 1 0\n1 2\n1 3\n1 4\n''') == \"0 -1 1 -1\"\nassert solution('''2\n0 0 1 0\n1 2\n1 3\n1 4\n''') == \"0 -1 1 -1\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_) == output\n\n\"\"\"\n\nfrom typing import List\n\nclass Node:\n    def __init__(self, left: 'Node'=None, right: 'Node'=None, parent: 'Node'=None, color: int=0) -> None:\n        self.left = left\n        self.right = right\n        self.parent = parent\n        self.color = color\n        self.key = 0\n        self.size = 1"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 -1 1 -1'\nassert solution('''7\n0 0 1 0 1 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '0 -1 1 -1'\nassert solution('''7\n0 0 1 0 1 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\") == \"0 -1 1 -1\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\") == \"0 -1 1 -1\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\") == \"0 -1 1 -1\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\") == \"0 -1 1 -1\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom collections import Counter\nfrom typing import Tuple\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\nassert solution('0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'\nassert solution('2\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'\nassert solution('2\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n2 5\\n4 6\\n6 7\\n7 8\\n8 9\\n') == '2 2 2 2 2 1 1 0 2'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n0 1 1 1\n1 2\n1 3\n1 4\n'''\n) == '2 2 2 2 2 1 1 0 2'\n\nassert solution(\n'''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n'''\n) == '0 -1 1 -1'\n\nassert solution(\n'''\n8\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n1 4\n3 5\n3 6\n4 7\n5 8\n6 7\n7 8\n'''\n) == '2 2 2 2 2 1 1 0 2'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n0\\n1\\n0\\n1') == '0 -1 1 -1'\nassert solution('2\\n0 1\\n1 2\\n0 1\\n1 2\\n1 2') == '0 -1 1 -1'\nassert solution('3\\n0 1 1 0\\n1 2\\n1 3\\n2 3\\n2 3') == '0 -1 1 -1'\nassert solution('3\\n0 1 1 0\\n1 2\\n0 1\\n1 2\\n1 2') == '0 -1 1 -1'\nassert solution('3\\n0 1 1 0\\n1 2\\n0 1\\n1 2\\n1 2') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'\nassert solution('9\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n3 5\\n4 6\\n6 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\nassert solution('3\\n0 0 1 0\\n1 2\\n1 3\\n') == '0 -1 1 -1'\nassert solution('3\\n0 0 1 0\\n1 2\\n1 3\\n') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '-1'\nassert solution('3\\n') == '1'\nassert solution('12\\n') == '2'\nassert solution('12345\\n') == '12'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36'\nassert solution(\n'''2\n1\n2''') == '-1\\n-1'\nassert solution(\n'''7\n9\n9\n9\n9\n9\n9\n9''') == '-1\\n-1\\n-1\\n-1\\n-1\\n-1'\nassert solution(\n'''2\n4\n9\n16\n25\n36''') == '0\\n0\\n2\\n2\\n2'\n\n\n\"\"\"\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '-1'\nassert solution('1\\n2\\n3\\n5\\n7\\n13') == '1'\nassert solution('1\\n2\\n3\\n5\\n7\\n13\\n17\\n19') == '2'\nassert solution('1\\n2\\n3\\n5\\n7\\n13\\n17\\n19\\n23') == '1'\nassert solution('1\\n2\\n3\\n5\\n7\\n13\\n17\\n19\\n23\\n29') == '2'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''0\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    '''\n    ) == '0'\n\n\nassert solution(\n    '''1\n    0\n    0\n    0\n    0\n    0\n    0\n    0\n    0\n    0\n    0\n    '''\n    ) == '0'\n\n\nassert solution(\n    '''2\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    '''\n    ) == '-1'\n\n\nassert solution(\n    '''10\n    6\n    6\n    6\n    6\n    6\n    6\n    6\n    6\n    6\n    6\n    6\n    '''\n    ) == '-1'\n\n\nassert solution(\n    '''12\n    12\n    12\n    12\n    12\n    12\n    12\n    12\n    12\n    12\n    12\n    12\n    '''\n    ) == '12'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('BGGGG') == 'BGGGG'\nassert solution('BBBBBBBB') == 'BBBBBBBB'\nassert solution('BBBBBBBB') == 'BBBBBBBB'\nassert solution
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"B\") == \"\"\nassert solution(\"BR\") == \"\"\nassert solution(\"GB\") == \"GB\"\nassert solution(\"GR\") == \"GR\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BGGGG') == '1'\nassert solution('BGBB') == '2'\nassert solution('RBRGB') == '1'\nassert solution('RRRR') == '0'\nassert solution('RBGG') == '3'\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('BGGRBGRB') == 'BBGR'\nassert solution('RBRGR') == 'RR'\nassert solution('BBBRR') == 'BB'\n\n\n\n-----Answer-----"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('ABC') == ''\nassert solution('BBB') == ''\nassert solution('B') == ''\nassert solution
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\"\"\""
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3\\n3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n5\\n1 1 1 1 1 1 1 1 1\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '3\\n3\\n3\\n3'\nassert solution('3\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n5\\n1 1 1 1 1 1 1 1 1\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '3\\n3\\n3\\n3'\nassert solution('5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n5\\n1 1 1 1 1 1 1 1 1\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '3\\n3\\n3\\n3'\nassert solution('5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n5\\n1 1 1 1 1 1 1 1 1\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '3\\n3\\n3\\n3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\n\nassert solution('''2\n5\n3 1 2 3 1\n7\n1 2 3 4 1''') == '5'\n\nassert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 1 1''') == '3'\n\nassert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 1 1''') == '3'\n\nassert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 1 1''') == '3'"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('2\\n2') == '2'\nassert solution('2\\n1') == '2'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\n\nassert solution('''2\n3\n1 1 1\n1 1 1\n2\n2 1 1''') == '3'\n\nassert solution('''2\n6\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '3'\n\nassert solution('''2\n6\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '3'\n\nassert solution('''2\n6\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '3'"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\nassert solution('''5\n4\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''4\n1 2 3 4\n''') == '1 2 3 4'\nassert solution('''6\n2\n1 2 3 4 5 6\n''') == '1 2 3 4 5 6'\nassert solution('''7\n7\n1 2 3 4 5 6 7\n''') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n2') == '2\\n2\\n2'\n\n'''\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''6\n6\n6 5 4 3 2 1\n6\n6 5 4 3 2\n6\n6 5 4 3\n6\n6 5 4\n6\n6 5\n''') == '1 5 2 4 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1''') == '1 5 2 4 3'\nassert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n2\n1 2 4 3''') == '1 2 3 4 5'\nassert solution('''5\n5 4 1 3 2\n4\n1 2 3 4\n2\n1 2 4 3''') == '1 2 3 4 5'\nassert solution('''5\n5 4 1 3 2\n4\n1 2 3 4\n1\n1''') == '1 5 2 4 3'\nassert solution('''5\n5 4 1 3 2\n4\n1 2 3 4\n1\n1''') == '1 5 2 4 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nassert solution('''4\n4 3 2 1\n4\n1 2 4 3\n4\n1 2 4 3\n''') == '1 2 3 4'\nassert solution('''4\n4 3 2 1\n4\n1 2 4 3\n1\n1\n4\n1 2 4 3\n''') == '1 2 3 4'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '1 1 1 1 1'\nassert solution('''2\n2\n1 1\n1\n1\n1\n''') == '1 1 1 1'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1''') == '1 5 2 4 3'\nassert solution('''4\n4\n1 2 4 3\n''') == '1 2 3 4'\nassert solution('''4\n4\n1 2 4 3\n''') == '1 2 3 4'\nassert solution('''4\n4\n1 2 4 3\n''') == '1 2 3 4'\nassert solution('''4\n4\n1 2 3 4\n''') == '1 2 3 4'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n\"\"\".strip()) == \"\"\"\n1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n\"\"\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '1 2 3 4'\nassert solution('1 3 5 4') == '1 3 5 4'\nassert solution('1 3 5 4') == '1 3 5 4'\nassert solution('1 3 5 4') == '1 3 5 4'\nassert solution('1 3 5 4') == '1 3 5 4'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1') == '1 5 2 4 3'\nassert solution('4\\n4 3 2 1\\n4\\n1 2 4 3') == '1 2 3 4'\nassert solution('4\\n4 3 2 1\\n4\\n4 3 2 1') == '1 2 3 4'\nassert solution('4\\n1 2 4 3\\n1\\n1') == '1 2 3 4'\nassert solution('4\\n1 2 4 3\\n1\\n1') == '1 2 3 4'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\nassert solution('''3\n1\n1\n1\n2\n3\n2\n2\n''') == 'NO'\nassert solution('''3\n1\n3\n1\n2\n3\n2\n2\n''') == 'YES'\nassert solution('''3\n1\n1\n1\n2\n2\n2\n''') == 'YES'\nassert solution('''3\n1\n1\n2\n2\n2\n2\n''') == 'NO'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == ''\n\n\n\"\"\""
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/q9_example_input.txt') == 'YES'\nassert solution('inputs/q9_test_input.txt') == 'NO'\nassert solution('inputs/q9_example_input_2.txt') == 'YES'\nassert solution('inputs/q9_test_input_2.txt') == 'YES'\nassert solution('inputs/q9_example_input_3.txt') == 'NO'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data\n\"\"\"\n\nfrom sys import stdin, stdout\n\ninput_data = list(map(int, stdin.read().strip().split()))\nnum_queries = input_data[0]\nnum_students = input_data[1]\nstudent_permutation = input_data[2: 2 + num_students]\n\nfor _ in range(num_queries):\n    current_student = student_permutation.index(max(student_permutation)) + 1\n\n    if current_student > num_students:\n        stdout.write(\"NO\\n\")\n        continue\n\n    if student_permutation[-current_student:] + student_permutation[: -current_student] == student_permutation:\n        stdout.write(\"YES\\n\")\n    else:\n        stdout.write(\"NO\\n\")\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"b\") == \"NO\"\nassert solution(\"c\") == \"NO\"\nassert solution(\"d\") == \"NO\"\nassert solution(\"e\") == \"NO\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'YES'\nassert solution('2\\n3\\n1\\n2\\n3\\n2\\n1\\n2\\n3\\n2\\n3\\n2\\n1') == 'NO'\nassert solution('2\\n3\\n1\\n2\\n3\\n2\\n1') == 'YES'\nassert solution('2\\n3\\n1\\n2\\n3\\n2\\n1') == 'YES'\nassert solution('2\\n3\\n1\\n2\\n3\\n2\\n1') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 4 3\") == \"NO\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4\\n1 2 3 4\") == \"YES\"\nassert solution(\"2\\n4\\n1 2 3 4\") == \"NO\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"2\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\") == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3\\n1 2 3\\n1 3 2\") == \"YES\"\nassert solution(\"4\\n3\\n1 2 3\\n1 3 2\\n5\\n1 2 3 5 4\") == \"YES\"\nassert solution(\"4\\n3\\n1 2 3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"4\\n3\\n1 2 3\\n1 3 2\\n5\\n1 2 3 5 4\\n4\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"4\\n3\\n1 2 3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4 5\") == \"NO\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2 2\\n') == '5'\nassert solution('3\\n5 2\\n') == '18'\nassert solution('2\\n9 1\\n') == '10'\nassert solution('2\\n4 1\\n') == '6'\nassert solution('2\\n4 5\\n') == '75015'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010''') == '5\\n18\\n10\\n6\\n75015'\nassert solution('''5\n5 2\n18 2\n20 1\n19 3\n8 10\n7 8\n6 7\n6 7\n5 8\n5 5\n5 7\n5 8\n5 9\n5 7\n5 4\n5 1\n5 5\n5 8\n5 9\n5 6\n5 5\n5 5\n5 4\n5 4\n5 3\n5 2\n5 1\n5 5\n5 5\n5 3\n5 2\n5 1\n5 0\n5 5\n5 5\n5 4\n5 4\n5 3\n5 2\n5 1\n5 0\n5 1\n4 5\n4 4\n4 3\n4 2\n4 1\n4 0\n3 4\n3 3\n3 2\n3 1\n3 0\n2 3\n2 2\n2 1\n2 0\n1 3\n1 2\n1 1\n1 0\n0 3\n0 2\n0 1\n0 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n2 2\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n2 0\n2 1\n2 0\n1 2\n1 1\n1 0\n0 2\n0 1\n0 0\n1 1\n1 0\n0 1\n0 0\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 1\nassert solution('2\\n') == 2\nassert solution('2\\n2\\n') == 2\nassert solution('2\\n2\\n3\\n') == 4\nassert solution('2\\n1\\n3\\n') == 1\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n100000 1') == '1'\nassert solution('1\\n100000 100') == '1'\nassert solution('1\\n100000 101') == '1'\nassert solution('1\\n100000 1000') == '1'\nassert solution('1\\n100000 10001') == '1'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a b\\n1 2\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52') == '1\\n3\\n7\\n15\\n31\\n47'\nassert solution('a b\\n1 2\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52') == '1\\n3\\n7\\n15\\n31\\n47'\nassert solution('a b\\n1 2\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52') == '1\\n3\\n7\\n15\\n31\\n47'\nassert solution('a b\\n1 2\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52') == '1\\n3\\n7\\n15\\n31\\n47'\nassert solution('a b\\n1 2\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52') == '1\\n3\\n7\\n15\\n31\\n47'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"2\\n15 6\") == \"4\\n4\"\nassert solution(\"1\\n1 1\") == \"1\\n1\"\nassert solution(\"1\\n1 1\\n2\\n4\") == \"4\\n4\"\nassert solution(\"5\\n5 5\") == \"5\\n5\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution(\n'''5\n5 2\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n\n{n + m - 1} // k\n\n{k - m} // 2\n\n(n - m) // 2\n\nn - m\n\n\"\"\""
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\") == \"YES\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a\\n\") == \"\"\nassert solution(\"a\\na\") == \"\"\nassert solution(\"\\na\") == \"\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('''6 6\n5 5\n5 4\n1 2\n5 4\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n1 1 1\\nYES\\n
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1000') == ''\nassert solution('1000 1') == ''\nassert solution('1\\n2') == 'YES\\n1\\n1'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == '''\\\nYES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\n'''\n\nassert solution('''\\\n8\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == '''\\\nNO\nYES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\n'''\n\nassert solution('''\\\n9\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9 3\n2 1\n10 1\n9 2\n9 2\n2 1\n10 1\n9 7\n9"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 3''') == 'YES 4 2 4'\nassert solution('''100 4''') == 'YES 55 5 5 35'\nassert solution('''8 7''') == 'YES'\nassert solution('''97 2''') == 'YES'\nassert solution('''8 8''') == 'YES'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n') == '4\\n55\\n15000000000000000\\n51'\n\nassert solution('2\\n100 100 100\\n100 100 100\\n100 100 100\\n') == '2\\n100'\n\nassert solution('2\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n') == '2\\n100'\n\"\"\"\nfrom math import sqrt\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\nassert solution('''2 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '2\\n55\\n15000000000000000\\n51'\nassert solution('''2 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n2 2 1''') == '2\\n55\\n15000000000000000\\n51'\nassert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n2 2 1''') == '1\\n55\\n15000000000000000\\n51'\nassert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n3 2 1''') == '1\\n55\\n15000000000000000\\n51'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 3 4''') == '4'\nassert solution('''1 10 100''') == '55'\nassert solution('''10000000000000000 10000000000000000 10000000000000000''') == '15000000000000000'\nassert solution('''23 34 45''') == '51'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n') == '4'\nassert solution('2\\n1\\n1\\n') == '1'\nassert solution('10\\n1\\n1\\n') == '10'\nassert solution('100\\n1\\n1\\n') == '100'\nassert solution('1000\\n1\\n1\\n') == '1000'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n') == '4\\n55\\n15000000000000000\\n51\\n'"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\nprint(solution('''4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nassert solution('''4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nassert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nassert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nassert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '4\\n55\\n15000000000000000\\n51'\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\nprint(solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45'''))\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"4\\n55\\n15000000000000000\\n51\"\n\n\n\n-----"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n\") == \"4\\n55\\n15000000000000000\\n51\"\nassert solution(\"5\\n3 3 4\\n1 3 5\\n1 7 10\\n9 9 9\\n\") == \"11\\n9\\n9\\n9\"\nassert solution(\"6\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n\") == \"6\\n12\\n6\\n12\\n6\"\nassert solution(\"9\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"6\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"6\\n12\\n6\\n12\\n6\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n\"\"\") == '6'\n\nassert solution(\"\"\"6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n\"\"\") == '3'\n\nassert solution(\"\"\"6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n\"\"\") == '5'\n\nassert solution(\"\"\"6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n\"\"\") == '4'\n\nassert solution(\"\"\"6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n\"\"\") == '15'"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\n\nassert solution('''\\\n1\n1 2\nabcd\n''') == '4'\n\nassert solution('''\\\n3\n6 2\nae\n''') == '5'\n\nassert solution('''\\\n2\n5 2\nabcd\n''') == '4'\n\nassert solution('''\\\n4\n4 4\naabcd\n''') == '6'"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(''.join(solution(line) for line in open('test_input_4.txt'))) == '3'\nassert solution(''.join(solution(line) for line in open('test_input_5.txt'))) == '4'\nassert solution(''.join(solution(line) for line in open('test_input_6.txt'))) == '5'\nassert solution(''.join(solution(line) for line in open('test_input_7.txt'))) == '10'\nassert solution(''.join(solution(line) for line in open('test_input_8.txt'))) == '15'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcbac') == 'abcbac'\nassert solution('abcabc') == 'abcabc'\nassert solution('abcabc') == 'abcabc'\nassert solution('abczgyo') == 'abczgyo'\nassert solution('aaebdbabdbbddaadaadc') == 'aaebdbabdbbddaadaadc'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nfrom typing import Any, Dict, List, Union\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcbac') == '6'\nassert solution('aaa') == '3'\nassert solution('abczgyo') == '5'\nassert solution('ecbedececacbcbccbdec') == '10'\nassert solution('aabdba') == '2'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n6 3\\nabcbac\\n3 6\\naaebdbabdbbddaadaadc\\n20 10\\necbedececacbcbccbdec') == '6\\n3\\n5'\nassert solution('3\\n6\\naaebdbabdbbddaadaadc\\n20 10\\necbedececacbcbccbdec') == '3\\n5'\nassert solution('7\\n1000\\naaebdbabdbbddaadaadc\\n20 10\\necbedececacbcbccbdec') == '15\\n10'\nassert solution('3\\n5\\naaebdbabdbbddaadaadc\\n20 10\\necbedececacbcbccbdec') == '4'\nassert solution('2\\n3\\necebeecabdbbddaadaadc\\n20 10\\necbedececacbcbccbdec') == '5'\n\n\n\"\"\"\n\nfrom collections import Counter\nimport bisect"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 3 5\\nNO\\nNO'\nassert solution('''3 2\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 3 5\\nNO\\nNO'\nassert solution('''3 2\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'NO'\nassert solution('''3 2\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 1 2 3 4 5 6''') == 'NO'\nassert solution('''2 1\n1\n5 5''') == 'YES\\n5'\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == '''YES\n1 3 5\nNO\nNO\n'''\n\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == '''NO\n'''\n\nassert solution('''3\n1 1\n1\n1''') == '''NO\n'''\n\nassert solution('''3\n1 1\n1\n1''') == '''YES\n1\n'''\n\nassert solution('''3\n1 1\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO'\nassert solution('''3\n1 1\n1 1\n1 1\n''') == 'NO'\n'''\n##Test\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO'\n\n'''\n\n'''\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == '''YES\n1 3 5\nNO\nNO\n'''\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"3 3\") == \"YES\\n1 2 3\\nNO\\nNO\"\nassert solution(\"6 2\") == \"YES\\n1 2 5\\nNO\\nNO\"\nassert solution(\"1 1\") == \"NO\\nNO\"\nassert solution(\"1 2\") == \"NO\\nNO\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO'\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'NO\\nNO'\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n1\n2 3 4 5\n''') == 'YES\\n1 3 5\\n1 3 5'\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 3 5\\nNO'\nassert solution('''3\n4 2\n5 3 6 4\n2 1 3 4\n5 2\n3 4 5 6 7''') == 'YES\\n1 2 3 4\\n5 6 7'\nassert solution('''4\n5 4\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 2 3 4 5\\nNO'\nassert solution('''5\n7 19\n3 2 5 8 11 3 8\n4 3 8 7 4 6 5\n5 4\n3 2 8 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 2 3 4 5 6'\nassert solution('''5\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 2 3 4 5'\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0000000000000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\n'''"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"00000010100101000001111010011100\") == 964176192\nassert solution(\"111111111111111111111111111111101\") == 3221225471\nassert solution(\"00000000000000000000000000000000\") == 0\nassert solution(\"11111111111111111111111111111110\") == 4294967293\nassert solution(\"11111111111111111111111111111111\") == 3221225472\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"00000010100101000001111010011100\") == 964176192\nassert solution(\"111111111111111111111111111111101\") == 3221225471\nassert solution(\"000000000000000000000000000000000000\") == 0\nassert solution(\"111111111111111111111111111111011\") == 4294967295\nassert solution(\"10111111111111111111111111111111\") == 4294967293\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"00000010100101000001111010011100\") == 964176192\nassert solution(\"11111111111111111111111111111101\") == 3221225471\nassert solution(\"11111111111111111111111111111110\") == -1\nassert solution(\"0110101010010100000001111010011100\") == 0\nassert solution(\"11111111111111111111111111111101\") == -1\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('00000010100101000001111010011100') == 964176192\nassert solution('111111111111111111111111111111101') == 3221225471\nassert solution
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\nassert solution(\"000100110101101100011000110110001001\") == \"4026183954081\"\nassert solution(\"1110011111111111111111111111111011\") == \"41322953219\"\n\n\"\"\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('00000000000000000000000000001011') == \"964176192\"\nassert solution('11111111111111111111111111111101') == \"3221225471\"\nassert solution('000000000000000000000000000000011001') == \"0\"\nassert solution('111111111111111111111111111111011') == \"2147483647\"\nassert solution('000000000000000000000000000000010000001011110100001110001111110001001') == \"4294967295\"\n\"\"\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(0b11111111111111111111111111111101) == 0b10111111111111111111111111111111\nassert solution(0b0000000000000010100101000001111010011100) == 0b964176192\nassert solution(0b11111111111111111111111111111101) == 0b3221225471\nassert solution(0b0000000000000000000000000000000000001011) == 0b1011111111111111111111111111111\nassert solution(0b00000000000000000000000000000000001001) == 0b100100000000000001000000100001\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(00000010100101000001111010011100) == 964176192\nassert solution(111111111111111111111111111111101) == 3221225471\n'''"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('00000010100101000001111010011100') == '964176192'\nassert solution('111111111111111111111111111111101') == '3221225471'\nassert solution('000001') == '1'\nassert solution('01101') == '5'\nassert solution('00111110110001010001001111110101110000') == '3221225471'\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == [[1],[1,1]]\nassert solution(3) == [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\nassert solution(4) == [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1],[1,5,10,10,5,1]]\nassert solution(5) == [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1],[1,5,10,10,5,1],[1,6,15,20,15,6,1]]"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('\\n') == []\nassert solution('1') == [[1]]\nassert solution('5') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution('1\\n5') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '1\\n1'\nassert solution('3') == '1\\n1\\n1\\n2'\nassert solution('4') == '1\\n1\\n1\\n2\\n1'\nassert solution('5') == '1\\n1\\n1\\n2\\n1\\n1\\n3'\nassert solution('6') == '1\\n1\\n1\\n2\\n1\\n1\\n3\\n1'\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\") == [[1]]\nassert solution(\"1\\n1\") == [[1], [1, 1]]\nassert solution(\"1\\n1\\n1\") == [[1], [1, 1], [1, 2, 1]]\nassert solution(\"1\\n1\\n1\\n1\") == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == [[1]]\nassert solution(\"2\") == [[1], [1,1]]\nassert solution(\"3\") == [[1], [1,1], [1,2,1]]\nassert solution(\"4\") == [[1], [1,1], [1,2,1], [1,3,3,1]]\nassert solution(\"5\") == [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == [[1], [1, 1]]\nassert solution('3') == [[1], [1, 1], [1, 2, 1]]\nassert solution('4') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\nassert solution('5') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution('10') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1], [1, 6, 15, 20, 15, 6, 1], [1, 7, 21, 35, 35, 21, 7, 1], [1, 8, 28, 56, 70, 56, 28, 8, 1], [1, 9, 36, 84, 126, 126, 84, 36, 9, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == [[1], [1,1], [1,2,1], [1,3,3,1]]\nassert solution(\"5\") == [\n    [1],\n    [1,1],\n    [1,2,1],\n    [1,3,3,1],\n    [1,4,6,4,1]\n]\nassert solution(\"8\") == [\n    [1],\n    [1,1],\n    [1,2,1],\n    [1,3,3,1],\n    [1,4,6,4,1],\n    [1,5,10,10,5,1],\n    [1,6,15,20,15,6,1],\n    [1,7,21,35,35,21,7,1],\n]\nassert solution(\"10\") == [\n    [1],\n    [1,1],\n    [1,2,1],\n    [1,3,3,1],\n    [1,4,6,4,1],\n    [1,5,10,10,5,1],\n    [1,6,15,20,15,6,1],\n    [1,7,21,35,35,21,7,1],\n    [1,8,28,56,70,56,28,8,1],\n    [1,9,36,84,126,126,84,36,9,1],\n]\nassert solution(\"11\") == [\n    [1],\n    [1,1],\n    [1,2,1],\n    [1,3,3,1],\n    [1,4,6,4,1],\n    [1,5,10,10,5,1],\n    [1,6,15,20,15,6,1],\n    [1,7,21,35,35,21,7,1],\n    [1,8,28,56,70,56,28,8,1],\n    [1,9,36,84,126,126,84,36,9,1],\n    [1,10,45,120,210,210,120,45,10,1],\n    [1,11,55,220,310,310,220,55,11,1],\n]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n\"\"\""
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == []\nassert solution('1') == [[1]]\nassert solution('2') == [[1], [1,1]]\nassert solution('3') == [[1], [1,1], [1,2,1]]\nassert solution('4') == [[1], [1,1], [1,2,1], [1,3,3,1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == [[1]]\nassert solution('5') == [\n    [1],\n    [1, 1],\n   [1, 2, 1],\n  [1, 3, 3, 1],\n [1, 4, 6, 4, 1]\n]\nassert solution('3') == [\n    [1],\n    [1, 1],\n   [1, 2, 1],\n  [1, 3, 3, 1],\n [1, 4, 6, 4, 1]\n]\nassert solution('5') == [\n    [1],\n    [1, 1],\n   [1, 2, 1],\n  [1, 3, 3, 1],\n [1, 4, 6, 4, 1]\n]\nassert solution('0') == []\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\naditya@gfg.com\\ncsev@gfg.com\\nkushal@gfg.com\\naditya@gfg.com') == ['aditya@gfg.com', 'kushal@gfg.com', 'csev@gfg.com']\nassert solution('3\\naditya@gfg.com\\ncsev@gfg.com\\nkushal@gfg.com') == ['aditya@gfg.com', 'kushal@gfg.com', 'csev@gfg.com']\nassert solution('2\\naditya@gfg.com\\ncsev@gfg.com') == ['aditya@gfg.com', 'csev@gfg.com']\nassert solution('1\\naditya@gfg.com') == ['aditya@gfg.com']\nassert solution('0\\naditya@gfg.com') == []\n'''\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\nexamples@gmail.com\nvalid@example.com\ninvalid@example.com\ncorrect_email@example.com\nexample@examp.l''') == ['invalid@example.com', 'correct_email@example.com', 'examples@gmail.com']\nassert solution('''10\n@gmail.com\n@yahoo.com\n@outlook.com\npeterpan@icloud.com\nbobpan.net\nslashdot.org\ngmail.com\ngooglemail.com\nhotmail.com\natt.net''') == ['gmail.com', 'googlemail.com', 'hotmail.com', 'att.net','slashdot.org', 'peterpan@icloud.com', 'bobpan.net']\nassert solution('''13\na@gmail.com\nb-example.com\nB@b-example.com\na-b@gmail.com\nexample@gmail.com\nexample.net@gmail.com\na@b-gmail.com\nexample@gmail.com\nexamples@gmail.com\na@b.com\na@b.co.uk''') == ['a@gmail.com', 'a@b.co.uk', 'a@b-gmail.com', 'a-b@gmail.com', 'example@gmail.com', 'example.net@gmail.com']\n\n'''"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\nfred@gmail.com\\nbarney@gmail.com\\nfoo@barney.com\\nbaz@gmail.com\\n') == ['barney@gmail.com', 'baz@gmail.com', 'fred@gmail.com']\nassert solution('1\\n') == []\nassert solution('2\\nfoo@barney.com\\nbarney@gmail.com\\n') == ['barney@gmail.com', 'foo@barney.com']\nassert solution('4\\nbarney@gmail.com\\nbaz@gmail.com\\nfoo@barney.com\\nfred@gmail.com\\n') == ['barney@gmail.com', 'fred@gmail.com', 'foo@barney.com', 'baz@gmail.com']\nassert solution('3\\nbarney@gmail.com\\nbaz@gmail.com\\nfoo@barney.com\\n') == ['barney@gmail.com', 'baz@gmail.com', 'foo@barney.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    joe@hack.com\n    billy@hack.com\n    bill.b.b@hack.com\n    w.z@hack.com\n    w-x@hack.com\n    wx.a@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n\"\"\") == [\n    'billy@hack.com',\n    'bill.b.b@hack.com',\n    'joe@hack.com',\n    'w.z@hack.com',\n    'wx.a@hack.com',\n]\nassert solution(\"\"\"\n    joe@hack.com\n    billy@hack.com\n    bill.b.b@hack.com\n    w.z@hack.com\n    wx.a@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n\"\"\") == [\n    'billy@hack.com',\n    'bill.b.b@hack.com',\n    'joe@hack.com',\n    'w-x@hack.com',\n    'wx.a@hack.com',\n]\nassert solution(\"\"\"\n    joe@hack.com\n    bill.b.b@hack.com\n    w.z@hack.com\n    wx.a@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n\"\"\") == [\n    'w-x@hack.com',\n    'wx.a@hack.com',\n]\nassert solution(\"\"\"\n    joe@hack.com\n    bill.b.b@hack.com\n    w.z@hack.com\n    wx.a@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n\"\"\") == [\n    'bill.b.b@hack.com',\n    'w.z@hack.com',\n    'joe@hack.com',\n    'wx.a@hack.com',\n    'w-x@hack.com',\n]\nassert solution(\"\"\"\n    joe@hack.com\n    bill.b.b@hack.com\n    bill.b.b@hack.com\n    w.z@hack.com\n    wx.a@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n    w-x@hack.com\n\"\"\") == [\n    'bill.b.b@hack.com',\n    'w.z@hack.com',\n    'joe@hack.com',\n    'wx.a@hack.com',\n    'w-x@hack.com',\n]\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a@a.com') == ['a@a.com']\nassert solution('a@a-com') == ['a@a-com']\nassert solution('a@a_com') == ['a@a_com']\nassert solution('a@a-c.om') == ['a@a-c.om']\nassert solution('a@a_com.com') == ['a@a_com.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    foo@bar.com\n    baz@foo.com\n    zoo@bar.com\n\"\"\") == [\"baz@foo.com\", \"zoo@bar.com\"]\n\nassert solution(\"\"\"\n    gmail\n    hotmail\n    yahoo\n\"\"\") == []\n\nassert solution(\"\"\"\n    abc.test@gmail.com\n    test.gmail@hotmail.com\n    @gmail.com\n    hotmail\n    hotmail\n    hotma\n\"\"\") == [\"gmail.com\", \"hotma.com\", \"hotmail.com\"]\n\nassert solution(\"\"\"\n    a@gmail.com\n    b-c@hotmail.com\n    z*b.com\n\"\"\") == [\"gmail.com\", \"b-c@hotmail.com\", \"z-b.com\"]\n\n\n\"\"\"\n\nSample Test Case 1\n\n2\ngmail\nhotmail\nyahoo\n\nSample Output 1\n\n['gmail.com', 'hotmail.com', 'yahoo.com']\n\nSample Test Case 2\n\n2\na@gmail.com\nb-c@hotmail.com\nz*b.com\n\nSample Output 2\n\n[]\n\nSample Test Case 3\n\n3\nabc.test@gmail.com\ntest.gmail@hotmail.com\n@gmail.com\nhotmail\nhotmail\nhotma\n\nSample Output 3\n\n['gmail.com', 'hotmail.com', 'gmail.com']\n\"\"\""
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == [\"a@example.com\", \"b-example.com\", \"c_example.com\"]"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\nadam@amazon.com\\ngraham@gmail.com\\ncarlos@hotmail.com\\nadam@yahoo.com\\n') == ['adam@yahoo.com', 'adam@gmail.com', 'adam@hotmail.com']\nassert solution('7\\nadam.com\\ngraham@gmail.com\\ncarlos@hotmail.com\\nadam@yahoo.com\\nkim@gmail.com\\ngraham@gmail.com') == ['kim@gmail.com', 'adam@gmail.com', 'adam@yahoo.com', 'adam.com', 'kim@gmail.com', 'adam@hotmail.com']\nassert solution('4\\nadam.com\\ngraham@gmail.com\\ncarlos@hotmail.com\\nadam@yahoo.com\\n') == ['adam@yahoo.com', 'adam@gmail.com', 'adam.com', 'carlos@hotmail.com', 'kim@gmail.com']\nassert solution('7\\nadam.com\\ngraham@gmail.com\\ncarlos@hotmail.com\\nadam@yahoo.com\\nkim@gmail.com\\ngraham@gmail.com') == ['kim@gmail.com', 'adam@gmail.com', 'adam@yahoo.com', 'carlos@hotmail.com', 'adam.com', 'kim@gmail.com', 'adam@yahoo.com']\nassert solution('6\\nadam@gmail.com\\ngraham@gmail.com\\ncarlos@hotmail.com\\nadam@yahoo.com\\nkim@gmail.com\\ngraham@gmail.com') == ['kim@gmail.com', 'adam@gmail.com', 'adam@yahoo.com', 'adam.com', 'kim@gmail.com', 'adam@yahoo.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a@a.com') == ['a@a.com']\nassert solution('b@a') == ['b@a']\nassert solution('b@a.com') == ['b@a.com']\nassert solution('b@b') == ['b@b']\nassert solution('b@b.com') == ['b@b.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\\\n5\nmavis@hackerrank.com\najayprakash@gmail.com\npratyush@gmail.com\naakash@gmail.com\nvijay@hackerrank.com\n''') == ['pratyush@gmail.com', 'aakash@gmail.com', 'vijay@hackerrank.com', 'aakash@gmail.com','mavis@hackerrank.com']\nassert solution('''\\\n1\nmavis@hackerrank.com\n''') == ['mavis@hackerrank.com']\nassert solution('''\\\n3\nmavis@hackerrank.com\najayprakash@gmail.com\npratyush@gmail.com\naakash@gmail.com\nvijay@hackerrank.com\n''') == ['mavis@hackerrank.com', 'pratyush@gmail.com', 'aakash@gmail.com']\nassert solution('''\\\n10\nmavis@hackerrank.com\najayprakash@gmail.com\npratyush@gmail.com\naakash@gmail.com\nvijay@hackerrank.com\n''') == ['aakash@gmail.com','mavis@hackerrank.com', 'pratyush@gmail.com', 'vijay@hackerrank.com', 'aakash@gmail.com']\n\nassert solution('''\\\n6\najayprakash@gmail.com\npratyush@gmail.com\naakash@gmail.com\nvijay@hackerrank.com\nmavis@hackerrank.com\n''') == ['mavis@hackerrank.com', 'pratyush@gmail.com', 'aakash@gmail.com', 'vijay@hackerrank.com', 'aakash@gmail.com']\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6') == [0, 1, 1, 8, 27, 109]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(3) == [1, 1, 2, 9, 27, 81]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(3) == [0, 1, 1, 8]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\") == [0, 1, 1, 8]\nassert solution(\"5\") == [0, 1, 1, 8, 27]\nassert solution(\"6\") == [0, 1, 1, 8, 27, 125]\nassert solution(\"7\") == [0, 1, 1, 8, 27, 125, 333]\nassert solution(\"8\") == [0, 1, 1, 8, 27, 125, 333, 1000]\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6504035389499, 12141598795969, 243290200817664, 5109094217170944, 7581122825474408, 1364983201913874]\n\n=====Sample Input=====\n6\n\n=====Sample Output=====\n[0, 1, 1, 8, 27, 64]\n\n\"\"\""
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(10) == [0, 1, 1, 8, 27, 109, 214, 377, 945, 1455]\n\nassert solution(5) == [0, 1, 1, 8, 27]\n\nassert solution(0) == []\n\nassert solution(1) == [0]\n\nassert solution(2) == [0, 1]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(0) == []\nassert solution(1) == [0]\nassert solution(2) == [0, 1]\nassert solution(3) == [0, 1, 1]\nassert solution(4) == [0, 1, 1, 2]\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\") == [0, 1, 1, 8, 27]\nassert solution(\"15\") == [0, 1, 1, 8, 27, 128, 274, 463, 715, 927, 1458, 1764, 2187, 2701, 3267, 4053, 4993, 4717, 5304]\n\n\"\"\""
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == [0, 1, 1, 8, 27, 64]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '[0, 1, 1, 8, 27, 109, 235, 377, 610, 987, 1597, 2584, 4181]'\n\nExplanation\n\nWe can see that the given function has a single expression. Let's make sure you know about lambda expressions before continuing.\n\nsolution\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('<a>  <b>   <c/> </b>  </a>') == 3\nassert solution('<a><b>   <c>  </c> </b> </a>') == 2\nassert solution('<a><b>   <c> </c> </b> </a>') == 1\nassert solution('<a>  <b>   </b>   <c> </c>  </a>') == 0\n\nimport sys\nimport xml.etree.ElementTree as ET"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>kshitij</name>\\n<email>kshij@hackerrank.com</email>\\n</author>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<id>unique_id</id>\\n<title>Master</title>\\n<summary>Programming challenges</summary>\\n</entry>\\n</feed>') == 2\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>kshitij</name>\\n<email>kshij@hackerrank.com</email>\\n</author>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<id>unique_id</id>\\n<title>Master</title>\\n<summary>Programming challenges</summary>\\n</entry>\\n</feed>') == 2\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == 0\n\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == 0\n\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n  <entry>\n    <id>12345</id>\n    <title lang='en'>Title 1</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>23456</id>\n    <title lang='en'>Title 2</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n</feed>''') == 2\n\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n  <entry>\n    <id>12345</id>\n    <title lang='en'>Title 1</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>23456</id>\n    <title lang='en'>Title 2</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>34567</id>\n    <title lang='en'>Title 3</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>45678</id>\n    <title lang='en'>Title 4</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>56789</id>\n    <title lang='en'>Title 5</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>67891</id>\n    <title lang='en'>Title 6</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n</feed>''') == 5\n\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n  <entry>\n    <id>12345</id>\n    <title lang='en'>Title 1</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>23456</id>\n    <title lang='en'>Title 2</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>34567</id>\n    <title lang='en'>Title 3</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>45678</id>\n    <title lang='en'>Title 4</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>56789</id>\n    <title lang='en'>Title 5</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>67891</id>\n    <title lang='en'>Title 6</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>90876</id>\n    <title lang='en'>Title 7</title>\n    <content type='html'>&lt;img src='<a href='https://www.hackerrank.com/images/navicon-new.png'&gt;&lt;/a&gt;&lt;br /&gt;</a></content>\n  </entry>\n  <entry>\n    <id>90877</id>\n    <title lang='en'>Title 8</title>\n    <content"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n  <title>HackerRank</title>\\n  <subtitle lang=\"en\">Programming challenges</subtitle>\\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\n\nassert solution('<feed xml:lang=\"en\">\\n  <title>HackerRank</title>\\n  <subtitle lang=\"en\">Programming challenges</subtitle>\\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 1\n\nassert solution('<feed xml:lang=\"en\">\\n  <title>HackerRank</title>\\n  <subtitle lang=\"en\">Programming challenges</subtitle>\\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 2\n\nassert solution('<feed xml:lang=\"en\">\\n  <title>HackerRank</title>\\n  <subtitle lang=\"en\">Programming challenges</subtitle>\\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\n\nassert solution('<feed xml:lang=\"en\">\\n  <title>HackerRank</title>\\n  <subtitle lang=\"en\">Programming challenges</subtitle>\\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 1"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 1\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<entry>\n<author>\n<name>Harsh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n</feed>\"\"\") == 2\n\n=====Sample Input=====\n8\n<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\n<entry>\n<author>\n<name>Harsh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ritesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Gaurav</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Hitesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ajay</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ritesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ritesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ritesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ritesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ritesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ritesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n<entry>\n<author>\n<name>Ritesh</name>\n</author>\n<content type='text'>\n<!-- Optional. -->\n<!-- You have to fill up the <code>content</code> field. -->\n</content>\n</entry>\n</feed>\"\"\") == 3\n\n>>>>>>> 1019c1cd9a1955b7918d9526fcbec2bdc9039439\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 1\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n        <title>This is a test</title>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <content type='html'>\n            <!--<![CDATA[<p>This is a test.</p> -->]]>-->\n        </content>\n    </entry>\n</feed>\"\"\") == 2\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 1\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"<root><node/><node>blah blah blah <lol>foo <foo>bar blah</foo></lol><bar><foo>baz blah</foo></bar></root>\") == 4\nassert solution(\"<root><node><node>blah blah blah <lol><foo>bar blah</foo></lol><bar><foo>baz blah</foo></bar></node></node></root>\") == 4\nassert solution(\"<root><node><node>blah blah blah <lol><foo>bar blah</foo></lol><bar><foo>baz blah</foo></bar></node></node></root>\") == 4\nassert solution(\"<root><node><node>blah blah blah <lol><foo>bar blah</foo></lol><bar><foo>baz blah</foo></bar></node><node><node><node><node>boo</node></node></node></node></node></root>\") == 4\nassert solution(\"<root><node><node>blah blah blah <lol><foo>bar blah</foo></lol><bar><foo>baz blah</foo></bar></node></node></node></root>\") == 4\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == 0\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == 1\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n  <entry>\n    <title>Tags and Attributes</title>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <link type='text/html' href='http://www.hackerrank.com/'/>\n    <id>7</id>\n    <updated>2013-12-25T12:00:00</updated>\n    <author>\n      <name>Srini Shetty</name>\n      <email>shetty@gmail.com</email>\n      <uri>http://www.google.com</uri>\n    </author>\n    <content type=\"text/html\">\n      <div>\n        <span class=\"greyText\">Some grey text.</span>\n      </div>\n    </content>\n  </entry>\n</feed>''') == 2\n\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == 0\nassert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n  <entry>\n    <title>Tags and Attributes</title>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <link type='text/html' href='http://www.hackerrank.com/'/>\n    <id>7</id>\n    <updated>2013-12-25T12:00:00</updated>\n    <author>\n      <name>Srini Shetty</name>\n      <email>shetty@gmail.com</email>\n      <uri>http://www.google.com</uri>\n    </author>\n    <content type=\"text/html\">\n      <div>\n        <span class=\"greyText\">Some grey text.</span>\n      </div>\n    </content>\n  </entry>\n</feed>''') == 2"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 1\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n<guid>http://www.hackerrank.com/</guid>\n<author>\n    <name>Harsh</name>\n</author>\n<author>\n    <name>Shakir</name>\n</author>\n<title>Are Hackers Cool?</title>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<generator uri='http://www.hackerrank.com/feed/' version='0.9'>\n    <author>HackerRank</author>\n</generator>\n</guid>\n<image>\n    <url>http://static.hackerrank.com/images/themes/theme.gif</url>\n</image>\n<icon>\n    <url>http://static.hackerrank.com/images/icon.png</url>\n</icon>\n<logo>\n    <url>http://www.hackerrank.com/about/</url>\n</logo>\n<rights>\n    <rights>HackerRank cannot be changed, by any user, without your consent.</rights>\n</rights>\n<subtitle>\n    <name>Are Hackers Cool?</name>\n    <value>Yes</value>\n</subtitle>\n</feed>\"\"\") == 0\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n<guid>http://www.hackerrank.com/</guid>\n<author>\n    <name>Harsh</name>\n</author>\n<author>\n    <name>Shakir</name>\n</author>\n<title>Are Hackers Cool?</title>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<generator uri='http://www.hackerrank.com/feed/' version='0.9'>\n    <author>HackerRank</author>\n</generator>\n</guid>\n<image>\n    <url>http://static.hackerrank.com/images/themes/theme.gif</url>\n</image>\n<icon>\n    <url>http://static.hackerrank.com/images/icon.png</url>\n</icon>\n<logo>\n    <url>http://www.hackerrank.com/about/</url>\n</logo>\n<rights>\n    <rights>HackerRank cannot be changed, by any user, without your consent.</rights>\n</rights>\n<subtitle>\n    <name>Are Hackers Cool?</name>\n    <value>Yes</value>\n</subtitle>\n</feed>\"\"\") == 1\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n<guid>http://www.hackerrank.com/</guid>\n<author>\n    <name>Harsh</name>\n</author>\n<author>\n    <name>Shakir</name>\n</author>\n<title>Are Hackers Cool?</title>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<generator uri='http://www.hackerrank.com/feed/' version='0.9'>\n    <author>HackerRank</author>\n</generator>\n</guid>\n<image>\n    <url>http://static.hackerrank.com/images/themes/theme.gif</url>\n</image>\n<icon>\n    <url>http://static.hackerrank.com/images/icon.png</url>\n</icon>\n<logo>\n    <url>http://www.hackerrank.com/about/</url>\n</logo>\n<rights>\n    <rights>HackerRank cannot be changed, by any user, without your consent.</rights>\n</rights>\n<subtitle>\n    <name>Are Hackers Cool?</name>\n    <value>Yes</value>\n</subtitle>\n</feed>\"\"\") == 1"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == 0\n\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 1\n\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == 1\n'''\n\nimport xml.etree.ElementTree as ET\nimport sys"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('71234567') == 'YES'\nassert solution('8121234567') == 'NO'\nassert solution('9091234567') == 'YES'\nassert solution('1234567') == 'NO'\nassert solution('12345678') == 'YES'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n\n'''"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('79999999999') == 'NO'\nassert solution('91919191919') == 'NO'\nassert solution('79927646464') == 'YES'\nassert solution('91927646464') == 'YES'\nassert solution('91927646564') == 'NO'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''754-555-1212\n858-555-1212\n863-555-1212\n855-555-1212''') == 'NO\\nNO\\nNO\\nYES'\nassert solution('''\n+1 800 552 064\n007 3333 0057\n+1 800 552 064\n007 3333 0057\n''') == 'NO\\nNO\\nNO\\nNO'\n'''\n\nimport sys\nimport re\n\nT = int(input())\nfor _ in range(T):\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        s = sys.stdin.readline().rstrip('\\n')\n        if re.fullmatch('\\+1?(\\d{3})?(\\d{3})?(\\d{4})', s) and len(s) == 10:\n            print('YES')\n        else:\n            print('NO')\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n''') == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\"\n'''\nassert solution('''\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n''') == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\"\n'''\nassert solution('''\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n0712345678\n''') == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\"\n'''\nassert solution('''\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n''') == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\"\n'''\nassert solution('''\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n08012345678\n''') == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\""
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1234567890\n12345678901234567890\n''') == 'NO\\nYES\\nYES'\nassert solution('''\n2\n71234567890\n71234567890\n''') == 'NO\\nYES'\nassert solution('''\n2\n761234567890\n761234567890\n''') == 'NO\\nNO'\nassert solution('''\n3\n71234567890\n761234567890\n1234567890\n''') == 'NO\\nNO\\nYES'\n'''\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''77009900\n77114060\n77885560\n77009900\n77510200\n77771234\n77410000\n77009900''') == 'YES\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\n'\n\nassert solution('''07009900\n07114060\n07885560\n07009900\n77510200\n77771234\n77410000\n77009900''') == 'NO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\n'\n\nassert solution('''07009900\n07114060\n07885560\n07009900\n77510200\n77771234\n77410000\n77009900''') == 'NO\\nNO\\nNO\\nYES\\nNO\\nNO\\nNO\\n'\n\nassert solution('''07009900\n07114060\n07885560\n07009900\n77510200\n77771234\n77410000\n77009900''') == 'YES\\nNO\\nNO\\nYES\\nNO\\nNO\\nNO\\n'\n\n'''\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"111234567890\") == \"YES\"\nassert solution(\"111\") == \"NO\"\nassert solution(\"555555\") == \"YES\"\nassert solution(\"12345678901234567890\") == \"NO\"\nassert solution(\"12345678901234567890\") == \"NO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1234567890\n1234567890\n1234567890''') == 'NO\\nNO\\nNO'\nassert solution('''1234567890\n1234567890\n1234567890''') == 'YES\\nYES\\nYES'\nassert solution('''12345678901234567890\n12345678901234567890\n12345678901234567890''') == 'NO\\nNO\\nYES'\nassert solution('''12345678901234567890\n12345678901234567890\n12345678901234567890''') == 'YES\\nYES\\nYES'\nassert solution('''71234567890\n71234567890\n71234567890''') == 'NO\\nNO\\nNO'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5555555555\") == \"NO\"\nassert solution(\"1234567890\") == \"NO\"\nassert solution(\"1234567890\") == \"NO\"\nassert solution(\"91234567890\") == \"YES\"\nassert solution(\"91234 5678 90\") == \"YES\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4''') == '5\\n6\\n7\\n8\\n9\\n10\\n11\\n12'\n\nassert solution('''5\n1 2 3 4 5\n1 2 3 4 5''') == '2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12'\n\nassert solution('''5\n1 2 3 4 5\n1 2 3 4 5''') == '2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n10 9 8 7 6 5 4 3 2 1''') == '2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\n\n\n'''\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n7\n2 4 5 9 12 13\n9\n5 10 15 17 19\n\"\"\") == \"2\\n12\\n15\\n19\"\n\nassert solution(\"\"\"\n5\n2 4 5 9 12\n9\n5 10 15 17 19\n\"\"\") == \"2\\n12\\n15\\n19\\n\"\n\nassert solution(\"\"\"\n5\n2 4 5 9 12\n9\n5 10 15 17 19\n\"\"\") == \"2\\n12\\n15\\n19\\n\"\n\nassert solution(\"\"\"\n7\n2 4 5 9 12 13\n9\n5 10 15 17 19\n\"\"\") == \"2\\n12\\n15\\n19\"\n\nassert solution(\"\"\"\n5\n2 4 5 9 12\n9\n5 10 15 17 19\n\"\"\") == \"2\\n12\\n15\\n19\""
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(''.join(['5 4 3 2\\n', '5 4 3 2\\n', '1 2 3 4'])) == '1\\n2\\n3\\n4\\n'\nassert solution(''.join(['1\\n', '2\\n', '3\\n', '4\\n', '5\\n'])) == '1\\n2\\n3\\n4\\n5\\n'\nassert solution(''.join(['1\\n', '2\\n', '3\\n', '4\\n', '5\\n', '6\\n'])) == '1\\n2\\n3\\n4\\n5\\n6\\n'\nassert solution(''.join(['1\\n', '2\\n', '3\\n', '4\\n', '5\\n'])) == '1\\n2\\n3\\n4\\n5\\n'\nassert solution(''.join(['1\\n', '2\\n', '3\\n', '4\\n', '5\\n'])) == '1\\n2\\n3\\n4\\n5\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n2\n2\n2\"\"\") == \"\"\"1\n4\n3\n5\n6\"\"\", \"\"\"\n    assert solution(\"\"\"3\n4\n4\n4\"\"\") == \"\"\"1\n3\n5\n6\"\"\", \"\"\"\n    assert solution(\"\"\"1\n1\n1\n1\"\"\") == \"\"\"\"\"\"\n\nassert solution(\"\"\"1\n2\n2\n3\"\"\") == \"\"\"3\n4\n5\n6\"\"\", \"\"\"\n    assert solution(\"\"\"3\n3\n3\n3\"\"\") == \"\"\"\"\"\""
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 3 1\n2 4 3 1\n''') == '2\\n4\\n3\\n1\\n'\nassert solution('''2\n2\n2\n2\n2\n''') == ''\nassert solution('''2\n1\n2\n2\n2\n2\n''') == '2\\n2\\n2\\n'\nassert solution('''2\n1\n2\n2\n2\n2\n''') == '2\\n'\nassert solution('''4\n2 4 3 1\n1\n2 4 3 1\n2\n4\n''') == '2\\n4\\n3\\n1\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 4 3 1\n2\n4 3 1''') == '2\\n3\\n1\\n'\nassert solution('''5\n2 4 3 1\n5\n2 4 3 1''') == '2\\n3\\n1\\n'\nassert solution('''5\n2 4 3 1\n5\n2\n4 3 1''') == '2\\n3\\n1\\n'\nassert solution('''3\n2\n2\n2\n2''') == '2\\n'\nassert solution('''3\n2\n2\n2\n2\n2''') == '2\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2 3\n4 5''') == '5\\n4\\n3\\n2\\n1\\n'\nassert solution('''1\n2\n3\n4\n5''') == '5\\n4\\n3\\n2\\n1\\n'\nassert solution('''99\n99\n99\n99\n99''') == '99\\n'\nassert solution('''99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99''') == '99\\n'\nassert solution('''0\n0\n0\n0\n0''') == '0\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2\\n2 1') == '2\\n1'\nassert solution('3\\n2 3\\n3 2') == '2\\n1'\nassert solution('1\\n2\\n3') == '2\\n1'\nassert solution('2\\n2\\n2') == '2'\nassert solution('2\\n2\\n2\\n2') == '2'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\n2 4 3 1\n2 4 11 8\"\"\") == \"\"\"5\n1\n3\n7\n9\"\"\".strip()\n\nassert solution(\"\"\"3\n1 2\n3 4\n5 6\"\"\") == \"\"\"1\n3\n5\n7\n9\"\"\".strip()\n\nassert solution(\"\"\"2\n1 2\n2 1\"\"\") == \"\"\"1\n3\n4\"\"\".strip()\n\nassert solution(\"\"\"1\n2\"\"\") == \"\"\"3\n4\"\"\".strip()\n\nassert solution(\"\"\"1\n2\n3\"\"\") == \"\"\"4\n5\n6\"\"\".strip()"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 2 3 4 5\\n2 4 6 8 10\\n3\\n5 7 9 11 12\") == \"2\\n4\\n6\\n8\\n10\\n12\\n15\\n17\\n19\\n20\\n\"\nassert solution(\"1\\n1 2 3 4 5\\n2 4 6 8 10\\n3\\n5 7 9 11 12\\n4\\n8 9 10 11 12\") == \"2\\n4\\n6\\n8\\n10\\n12\\n15\\n17\\n19\\n20\\n\"\nassert solution(\"1\\n1 2 3 4 5\\n2 4 6 8 10\\n3\\n5 7 9 11 12\\n4\\n8 9 10 11 12\") == \"2\\n4\\n6\\n8\\n10\\n12\\n15\\n17\\n19\\n20\\n\"\nassert solution(\"1\\n1 2 3 4 5\\n2 4 6 8 10\\n3\\n5 7 9 11 12\\n4\\n8 9 10 11 12\") == \"2\\n4\\n6\\n8\\n10\\n12\\n15\\n17\\n19\\n20\\n\"\nassert solution(\"1\\n1 2 3 4 5\\n2 4 6 8 10\\n3\\n5 7 9 11 12\\n4\\n8 9 10 11 12\") == \"2\\n4\\n6\\n8\\n10\\n12\\n15\\n17\\n19\\n20\\n\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('\\n'.join(['',\n'3',\n'ID         MARKS      NAME       CLASS     ',\n'1          97         Raymond    7         ',\n'2          50         Steven     4         ',\n'3          91         Adrian     9         ',\n'4          72         Stewart    5         ',\n'5          80         Peter      6   '])) == '80.00'\nassert solution('\\n'.join(['',\n'5',\n'MARKS      CLASS      NAME       ID        ',\n'92         2      CS          1        ',\n'28         5      Physics      2        ',\n'94         2      CS          3        ',\n'24         5      Physics      4        ',\n'29         2      IT          1        ',\n'50         5      Physics      5        ',\n'94         4      IT          3        ',\n'17         2      IT          2        ',\n'49         5      IT          4        ',\n'100        2      CS          1        '])) == '93.33'\nassert solution('\\n'.join(['',\n'4',\n'MARKS      CLASS      NAME       ID        ',\n'50         2      CS          1        ',\n'60         5      Physics      2        ',\n'60         5      Chemistry    3        ',\n'66         2      IT          1        ',\n'80         5      Physics      5        ',\n'94         2      CS          3        ',\n'90         5      IT          4        ',\n'55         1      IT          2        ',\n'76         5      Physics      4        ',\n'90         5      Chemistry    1        ',\n'65         2      CS          2        ',\n'80         2      IT          3        ',\n'94         4      CS          1        '])) == '81.50'\nassert solution('\\n'.join(['',\n'5',\n'MARKS      CLASS      NAME       ID        ',\n'2',\n'93',\n'28',\n'29',\n'50',\n'2',\n'20',\n'5',\n'50',\n'5',\n'2',\n'20',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n'50',\n'2',\n'20',\n'2',\n'50',\n'5',\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == 'Average = 0.00'\nassert solution('2\\nID         MARKS      NAME       CLASS\\n101         97      Raymond    7\\n201         50        Peter     8\\n') == 'Average = 79.33'\nassert solution('3\\nID         MARKS      NAME       CLASS\\n101         97      Raymond    7\\n201         50        Peter     8\\n301         80        Angela    9') == 'Average = 79.33'\nassert solution('4\\nID         MARKS      NAME       CLASS\\n101         97      Raymond    7\\n201         50        Peter     8\\n301         80        Angela    9\\n402         75        John      10\\n501         67        <unknown> 11\\n') == 'Average = 79.33'\nassert solution('7\\nID         MARKS      NAME       CLASS\\n101         97      Raymond    7\\n201         50        Peter     8\\n301         80        Angela    9\\n402         75        John      10\\n501         67        <unknown> 11\\n701         89        <unknown> 12\\n') == 'Average = 79.33'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\nID         MARKS      NAME       CLASS     \n1          97         Raymond    7         \n2          50         Steven     4         \n3          91         Adrian     9         \n4          72         Stewart    5         \n5          80         Peter      6   \n\"\"\") == \"X\"\n\nassert solution(\"\"\"\n5\nMARKS      CLASS      NAME       ID        \n92         2          Calum      1         \n82         5          Scott      2         \n94         2          Jason      3         \n55         8          Glenn      4         \n82         2          Fergus     5\n\"\"\") == \"X\"\n\nassert solution(\"\"\"\n5\nMARKS      CLASS      NAME       ID        \n92         2          Calum      1         \n82         5          Scott      2         \n94         2          Jason      3         \n55         8          Glenn      4         \n82         2          Fergus     5\n\"\"\") == \"92.33\"\n\nassert solution(\"\"\"\n5\nMARKS      CLASS      NAME       ID        \n92         2          Calum      1         \n82         5          Scott      2         \n94         2          Jason      3         \n55         8          Glenn      4         \n2          34         Peter      5         \n\"\"\") == \"92.50\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\nName,MARKS,Class\\nRows,100,A\\nDay,90,B\\nMonth,95,A\\nYear,75,A\") == \"92.75\"\n\n\"\"\"\n\nfrom collections import namedtuple"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abc') == 0.00\nassert solution('ab\\nc') == 0.67\nassert solution('a\\nbc') == 0.67\nassert solution('abc\\n123') == 123\nassert solution('a\\nbc\\n345') == 123.5\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n\"\"\") == \"85.0\"\nassert solution(\"\"\"\n5\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n\"\"\") == \"74.50\"\nassert solution(\"\"\"\n5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n\"\"\") == \"62.33\"\n\"\"\"\n\"\"\"\n\n\"\"\"\n\n\"\"\"\nTesting\n\n\"\"\""
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('collections.namedtuple()') == '0.33'\nassert solution('collections.namedtuple()') == '0.33'\nassert solution('collections.namedtuple()') == '0.33'\nassert solution('collections.namedtuple()') == '0.33'\nassert solution('collections.namedtuple()') == '0.33'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\nID         MARKS      NAME       CLASS\\n1          97         Raymond    7\\n2         50         Steven     4\\n3          91         Adrian     9\\n4          72         Stewart    5\\n5          80         Peter      6\\n') == '97.50'\n\nprint('Successfully tested!')\n\n\"\"\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == \"1.50\"\nassert solution(\"a,b,c\") == \"1.00\"\nassert solution(\"a,b,c,d\") == \"2.33\"\nassert solution(\"a,b,c,d,e\") == \"3.66\"\nassert solution(\"a,b,c,d,e,f\") == \"4.99\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == 'Average = 70.00'\nassert solution('10\\nID         MARKS      NAME       CLASS\\n1001      97         Raymond    7\\n1002      50         Steven     4\\n1003      91         Adrian     8\\n1004      72         Stewart    5\\n1005      80         Peter      6\\n1006      75         Randy      7\\n1007      83         Andre      6\\n\\n') == 'Average = 79.33'\nassert solution('10\\nMARKS      CLASS      NAME       ID\\n92         2         Raymond    1001\\n93         2         Steven     1002\\n94         2         Adrian     1003\\n95         2         Stewart    1004\\n96         2         Peter      1005\\n97         2         Randy      1006\\n98         2         Andre      1007\\n99         2         \\n\\n') == 'Average = 79.33'\nassert solution('10\\nID         MARKS      NAME       CLASS\\n10001     50         Raymond    2\\n10002     50         Steven     4\\n10003     50         Adrian     8\\n10004     50         Stewart    5\\n10005     50         Peter      6\\n10006     50         Randy      7\\n10007     50         Andre      6\\n\\n') == 'Average = 45.00'\nassert solution('10\\nMARKS      CLASS      NAME       ID\\n1          97         Raymond    2\\n1          50         Steven     4\\n1          91         Adrian     8\\n1          72         Stewart    5\\n1          80         Peter      6\\n1          75         Randy      7\\n1          83         Andre      6\\n\\n') == 'Average = 54.33'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(17) == \"Weird\"\nassert solution(3) == \"Not Weird\"\nassert solution(20) == \"Weird\"\nassert solution(25) == \"Weird\"\nassert solution(30) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == \"Weird\"\nassert solution(2) == \"Not Weird\"\nassert solution(3) == \"Weird\"\nassert solution(4) == \"Not Weird\"\nassert solution(5) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 'Weird'\nassert solution(2) == 'Not Weird'\nassert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(5) == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == \"Weird\"\nassert solution(2) == \"Not Weird\"\nassert solution(3) == \"Weird\"\nassert solution(4) == \"Not Weird\"\nassert solution(5) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 'Weird'\nassert solution('3') == 'Not Weird'\nassert solution('24') == 'Not Weird'\nassert solution('52') == 'Weird'\nassert solution('100') == 'Not Weird'\n\nprint('All tests passed!')\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(6) == 'Weird'\nassert solution(24) == 'Not Weird'\nassert solution(20) == 'Weird'\nassert solution(2) == 'Weird'\nassert solution(23) == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(23) == 'Not Weird'\nassert solution(24) == 'Not Weird'\nassert solution(25) == 'Not Weird'\nassert solution(26) == 'Not Weird'\nassert solution(28) == 'Not Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(23) == \"Weird\"\nassert solution(24) == \"Not Weird\"\nassert solution(25) == \"Weird\"\nassert solution(0) == \"Not Weird\"\nassert solution(20) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == \"Weird\"\nassert solution(2) == \"Not Weird\"\nassert solution(3) == \"Weird\"\nassert solution(4) == \"Not Weird\"\nassert solution(5) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(7) == 'Weird'\nassert solution(2) == 'Not Weird'\nassert solution(20) == 'Weird'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<title>Tags</title>\\n<link rel=\"self\" type=\"application/atom+xml\" href=\"http://codeeval.com/open/attachment/8/67690/1/45844\"/>\\n<content type=\"html\">\\n<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n<p>This is a very important p tag</p>\\n</div>\\n</div>\\n</content>\\n</entry>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<title>Tags</title>\\n<link rel=\"self\" type=\"application/atom+xml\" href=\"http://codeeval.com/open/attachment/8/67690/1/45844\"/>\\n<content type=\"html\">\\n<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n<p>This is a very important p tag</p>\\n</div>\\n</div>\\n</content>\\n</entry>\\n</feed>') == '6'\n'''\n'''"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('<feed xml:lang='en'>\\n <title>HackerRank</title> <subtitle lang='en'>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6', 'Example Test'\nassert solution('<feed xml:lang='en'>\\n <title>HackerRank</title> <subtitle lang='en'>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6', 'Example Test'\nassert solution('<feed xml:lang='en'>\\n <title>HackerRank</title> <subtitle lang='en'>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6', 'Example Test'\nassert solution('<feed xml:lang='en'>\\n <title>HackerRank</title> <subtitle lang='en'>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6', 'Example Test'\nassert solution('<feed xml:lang='en'>\\n <title>HackerRank</title> <subtitle lang='en'>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == '6', 'Example Test'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n  <title>HackerRank</title>\\n  <subtitle lang=\"en\">Programming challenges</subtitle>\\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '25'\nassert solution('<feed xml:lang=\"en-gb\">\\n  <title type=\"text\">HackerRank</title>\\n  <subtitle lang=\"en\">Programming challenges</subtitle>\\n  <link type=\"text\" rel=\"alternate\" href=\"http://hackerrank.com/\"/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '7'\nassert solution('<feed xml:lang=\"en-gb\">\\n  <title>HackerRank</title>\\n  <subtitle lang=\"en\">Programming challenges</subtitle>\\n  <link type=\"text\" rel=\"alternate\" href=\"http://hackerrank.com/\"/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>') == '7'\n'''"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang='en'>Programming challenges</subtitle>\\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == \"7\"\n\n=====Sample Input=====\n7\n<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link type='text/html' rel='alternate' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\n\n=====Sample Output=====\n5\n\n=====Explanation=====\nThe feed tag has five attributes, lang, title, subtitle, link, and updated. lang, title, subtitle, and updated all have 5 characters in common.\n\n\"\"\"\n\nimport sys\nimport xml.etree.ElementTree as ET\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>') == '6', 'First Test'\n\nassert solution('<feed xml:lang=\"en-gb\">\n    <title type=\"text\">HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>') == '6', 'Second Test'\n\nassert solution('<feed xml:lang=\"en-us\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>') == '6', 'Third Test'\n\nassert solution('<feed xml:lang=\"en-ca\">\n    <title type=\"text\">HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>') == '6', 'Fourth Test'\n\nassert solution('<feed xml:lang=\"en\">\n    <title type=\"text\">HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>') == '6', 'Fifth Test'"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6', 'First Test'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<content type=\"text/xml\">\\n<![CDATA[<div>\\nHello\\n</div>\\n]]>\\n</content>\\n</entry>\\n</feed>') == '5', 'Second Test'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<content type=\"text/xml\">\\n<![CDATA[<div>\\nHello\\n</div>\\n]]>\\n</content>\\n</entry>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<content type=\"text/xml\">\\n<![CDATA[<div>\\nHello\\n</div>\\n]]>\\n</content>\\n</entry>\\n</feed>') == '6', 'Third Test'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<content type=\"text/xml\">\\n<![CDATA[<div>\\nHello\\n</div>\\n]]>\\n</content>\\n</entry>\\n</feed>') == '5', 'Fourth Test'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>k</name>\\n</author>\\n<content type=\"text/xml\">\\n<![CDATA[<div>\\nHello\\n</div>\\n]]>\\n</content>\\n</entry>\\n</feed>') == '5', 'Fifth Test'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n        <author>\n            <name>Ivan</name>\n            <email>someemail@hackerrank.com</email>\n        </author>\n        <link>https://www.hackerrank.com/</link>\n        <title>Interview Preparation</title>\n        <comments>Please read the comments carefully and try to solve the task</comments>\n        <content type=\"text/xml\">\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n        </content>\n    </entry>\n</feed>') == '7'\nassert solution('<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n        <author>\n            <name>Ivan</name>\n            <email>someemail@hackerrank.com</email>\n        </author>\n        <link>https://www.hackerrank.com/</link>\n        <title>Interview Preparation</title>\n        <comments>Please read the comments carefully and try to solve the task</comments>\n        <content type=\"text/xml\">\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n        </content>\n    </entry>\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n        <author>\n            <name>Ivan</name>\n            <email>someemail@hackerrank.com</email>\n        </author>\n        <link>https://www.hackerrank.com/</link>\n        <title>Interview Preparation</title>\n        <comments>Please read the comments carefully and try to solve the task</comments>\n        <content type=\"text/xml\">\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n        </content>\n    </entry>\n</feed>') == '5'\nassert solution('<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n        <author>\n            <name>Ivan</name>\n            <email>someemail@hackerrank.com</email>\n        </author>\n        <link>https://www.hackerrank.com/</link>\n        <title>Interview Preparation</title>\n        <comments>Please read the comments carefully and try to solve the task</comments>\n        <content type=\"text/xml\">\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n        </content>\n    </entry>\n</feed>') == '4'\nassert solution('<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n        <author>\n            <name>Ivan</name>\n            <email>someemail@hackerrank.com</email>\n        </author>\n        <link>https://www.hackerrank.com/</link>\n        <title>Interview Preparation</title>\n        <comments>Please read the comments carefully and try to solve the task</comments>\n        <content type=\"text/xml\">\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n            <!--\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            <question type=\"boolean\">True or False</question>\n            -->\n        </content>\n    </entry>\n</feed>') == '3'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '''7\n'''\n\nassert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '''7\n'''\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == \"6\"\n=====Sample Input=====\n10\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\n=====Explanation=====\nThe input is:\n\n10\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\nThe output is:\n\n6\n\n\"\"\""
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"<a><b id='foo'>bar</b></a>\") == \"3\"\nassert solution(\"<a><b id='foo'><c>bar</c></b></a>\") == \"3\"\nassert solution(\"<a><b id='foo'><c>bar</c>bar</b></a>\") == \"4\"\nassert solution(\"<a><b id='foo'>bar</b>bar</a>\") == \"4\"\nassert solution(\"<a><b id='foo'><c id='bar'>bar</c></b></a>\") == \"5\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0.0 0.0 1.0 1.0\") == 45.0\nassert solution(\"0.0 1.0 1.0 0.0\") == 60.0\nassert solution(\"1.0 0.0 1.0 1.0\") == 60.0\nassert solution(\"0.0 0.0 -1.0 1.0\") == 90.0\nassert solution(\"1.0 0.0 -1.0 1.0\") == 90.0\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 0\") == \"0.0\"\nassert solution(\"1 1 1 1\") == \"90.0\"\nassert solution(\"-2.5 0 1 2.5\") == \"135.0\"\nassert solution(\"-1.0 -1.0 1.0 1.0\") == \"90.0\"\nassert solution(\"1 0 0 0\") == \"0.0\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3\n3 4 5\n''') == '90'\nassert solution('''-1 2 3\n3 4 5\n''') == '-90'\nassert solution('''1 2 3\n-1 2 3\n''') == '0'\nassert solution('''1 1 1\n1 1 1\n1 1 1\n''') == '45'\nassert solution('''1 2 3\n3 4 5\n''') == '60'\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"89.60\"\nassert solution(input()) == \"89.59\"\nassert solution(input()) == \"89.58\"\nassert solution(input()) == \"89.57\"\nassert solution(input()) == \"89.56\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0.000000 4.000000 1.000000\") == \"90.000000\"\nassert solution(\"1.000000 2.000000 3.000000\") == \"0.9552981\"\nassert solution(\"3.000000 2.000000 1.000000\") == \"90.000000\"\nassert solution(\"1.000000 4.000000 -1.000000\") == \"180.000000\"\nassert solution(\"-2.000000 -4.000000 2.000000\") == \"45.000000\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1\") == \"90\"\nassert solution(\"0 1 0\") == \"45\"\nassert solution(\"0 -1 0\") == \"-45\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 -1\") == \"-60\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('-6.5 4 4 -3.2 4 2 6.2') == '-34.99'\nassert solution('-3.8 -5 6 4') == '-90.0'\nassert solution('-3.8 -5 6 4 3.8 -5 6 4 3.8 -5 6 4') == '-45.60'\nassert solution('-3.8 -5 6 4 3.8 -5 6 4 3.8 -5 6 4 3.8 -5 6 4') == '-45.60'\nassert solution('1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1.2 1."
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2.0 3.0 4.0\n0.0 0.0 0.0''') == 90.0\nassert solution('''3.0 3.0 2.0\n0.0 0.0 1.0''') == 54.5\nassert solution('''0.0 0.0 0.0\n0.0 0.0 0.0''') == 0.0\nassert solution('''1.0 1.0 1.0\n1.0 1.0 0.0''') == 0.0\nassert solution('''0.0 2.0 3.0\n3.0 2.0 3.0''') == 79.0\n'''"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"0 0 1 1\"\n) == \"90.0\"\nassert solution(\n    \"0 0 1 1\"\n) == \"45.0\"\nassert solution(\n    \"1 1 1 1\"\n) == \"0.0\"\nassert solution(\n    \"1 1 1 1\"\n) == \"90.0\"\nassert solution(\n    \"0 0 1 1\"\n) == \"45.0\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0') == '0.0'\nassert solution('0 0 1') == '90.0'\nassert solution('1 0 0') == '0.0'\nassert solution('0 1 0') == '45.0'\nassert solution('0 1 1') == '90.0'\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('a') == 0\nassert solution('b') == 1\nassert solution('c') == 1\nassert solution('abcd') == 3\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abcdef\") == 0\nassert solution(\"abc\") == 1\nassert solution(\"abcefgh\") == 2\nassert solution(\"a\") == 1\nassert solution(\"\") == 0\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('hello') == 1\nassert solution('hElLo') == 1\nassert solution('How are you?') == 2\nassert solution('HELLO') == 1\nassert solution('well hi Adam') == 3\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"e\") == 1\nassert solution(\"i\") == 1\nassert solution(\"o\") == 1\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aa aa aa bb cc dd dd ee') == 8\nassert solution('bbb ccdddddbb') == 10\nassert solution('abccbbbbbcdbb') == 17\nassert solution('bbbbbbbbbbbbbbbbbbbbbbbbbbb') == 50\nassert solution('bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb') == 200\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == None\n\n=====Sample Input=====\n3\nballoon\ncartoon\nleetcode\n\n=====Sample Output=====\n4\n2\n1\n\n\"\"\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('abc') == '2'\nassert solution('abcdefg') == '2'\nassert solution('abcd') == '1'\nassert solution('pqr') == '2'\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(['hello', 'world']) == 2\nassert solution(['abc', 'def', 'ghi']) == 1\nassert solution(['a', 'b', 'c']) == 1\nassert solution(['code', 'edoc', 'da']) == 2\nassert solution(['world', 'hello', 'eye']) == 2\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\\n\".join([\n    \"3\",\n    \"saddest\",\n    \"bead\",\n    \"agartha\",\n    \"sparket\",\n    \"mumble\",\n    \"micro\",\n    \"super\",\n    \"tournament\",\n    \"five\",\n    \"rat\",\n    \"toy\",\n    \"play\",\n    \"wasteful\",\n    \"are\",\n    \"golf\",\n    \"disappointing\",\n    \"bears\",\n    \"candy\",\n    \"man\",\n    \"macintosh\",\n    \"mac\",\n    \"laptop\",\n    \"london\",\n    \"maggie\",\n    \"fantasy\",\n    \"game\",\n    \"story\",\n    \"laura\",\n    \"lol\",\n    \"edward\",\n    \"boy\",\n    \"edmund\",\n    \"camaro\",\n    \"hollywood\",\n    \"gotham\",\n    \"mrs\",\n    \"crispy\",\n    \"alex\",\n    \"car\",\n    \"mario\",\n    \"taco\",\n    \"kim\",\n    \"lola\",\n    \"stella\",\n    \"coding\",\n    \"jerry\",\n    \"hulu\",\n    \"hundred\",\n    \"sunday\",\n    \"target\",\n    \"hammer\",\n    \"reboot\",\n    \"qwerty\",\n    \"zxcvbn\",\n    \"brandon\",\n    \"the\",\n    \"victor\",\n    \"tigers\",\n    \"like\",\n    \"mike\",\n    \"lovelove\",\n    \"gandalf\",\n    \"miller\",\n    \"gavin\",\n    \"jaguar\",\n    \"mazda\",\n    \"kane\",\n    \"jackson\",\n    \"sue\",\n    \"fate\",\n    \"ajit\",\n    \"shirley\",\n    \"paris\",\n    \"penelope\",\n    \"jennifer\",\n    \"louise\",\n    \"romance\",\n    \"dare\",\n    \"elizabeth\",\n    \"zxcvbn\",\n    \"break\",\n    \"samantha\",\n    \"pussy\",\n    \"code\",\n    \"brandy\",\n    \"bill\",\n    \"crystal\",\n    \"sparky\",\n    \"lucky\",\n    \"matt\",\n    \"david\",\n    \"colton\",\n    \"chandler\",\n    \"typhoon\",\n    \"pookie\",\n    \"ajax\",\n    \"hacker\",\n    \"dwight\",\n    \"red\",\n    \"patty\",\n    \"carl\",\n    \"xavier\",\n    \"adidas\",\n    \"louis\",\n    \"jason\",\n    \"timothy\",\n    \"morgan\",\n    \"zachary\",\n    \"jonathan\",\n    \"leslie\",\n    \"jerry\",\n    \"paul\",\n    \"sandra\",\n    \"gabriel\",\n    \"frank\",\n    \"carlos\",\n    \"julius\",\n    \"joey\",\n    \"trent\",\n    \"joe\",\n    \"thomas\",\n    \"louie\",\n    \"sam\",\n    \"carlo\",\n    \"jesus\",\n    \"dennis\",\n    \"david\",\n    \"matrix\",\n    \"catherine\",\n    \"jim\",\n    \"chester\",\n    \"louisiana\",\n    \"tiffany\",\n    \"garfield\",\n    \"wesley\",\n    \"peter\",\n    \"george\",\n    \"donna\",\n    \"catherine\",\n    \"mickey\",\n    \"josh\",\n    \"michael\",\n    \"honey\",\n    \"larry\",\n    \"kristen\",\n    \"jamie\",\n    \"dakota\",\n    \"michelle\",\n    \"alice\",\n    \"nathan\",\n    \"michele\",\n    \"david\",\n    \"christian\",\n    \"diana\",\n    \"laura\",\n    \"kimberly\",\n    \"stanley\",\n    \"linda\",\n    \"rose\",\n    \"vicky\",\n    \"robert\",\n    \"ashley\",\n    \"nicholas\",\n    \"linda\",\n    \"jean\",\n    \"sandra\",\n    \"sydney\",\n    \"cathy\",\n    \"joan\",\n    \"peggy\",\n    \"david\",\n    \"sally\",\n    \"joe\",\n    \"louisa\",\n    \"alicia\",\n    \"fannie\",\n    \"sophia\",\n    \"walter\",\n    \"liliana\",\n    \"sam\",\n    \"wilma\",\n    \"dante\",\n    \"stella\",\n    \"ryan\",\n    \"lou\",\n    \"gabriela\",\n    \"dolly\",\n    \"jill\",\n    \"david\",\n    \"dora\",\n    \"annie\",\n    \"michelle\",\n    \"daniella\",\n    \"hannah\",\n    \"dianne\",\n    \"lily\",\n    \"alison\",\n    \"freddie\",\n    \"jay\",\n    \"marilyn\",\n    \"sally\",\n    \"bob\",\n    \"dylan\",\n    \"liz\",\n    \"roger\",\n    \"lucinda\",\n    \"jeanne\",\n    \"christina\",\n    \"veronica\",\n    \"phoebe\",\n    \"benita\",\n    \"fay\",\n    \"katy\",\n    \"jacqueline\",\n    \"kristin\",\n    \"kathleen\",\n    \"craig\",\n    \"charlene\",\n    \"isaac\",\n    \"sandra\",\n    \"christen\",\n    \"hannah\",\n    \"tyson\",\n    \"jessica\",\n    \"brad\",\n    \"florence\",\n    \"tobias\",\n    \"willie\",\n    \"julianne\",\n    \"iliana\",\n    \"doreen\",\n    \"jena\",\n    \"sandra\",\n    \"joshua\",\n    \"maggie\",\n    \"dan\",\n    \"frankie\",\n    \"sue\",\n    \"peter\",\n    \"matthew\",\n    \"dona\",\n    \"ashley\",\n    \"sue\",\n    \"john\",\n    \"diana\",\n    \"julia\",\n    \"ruby\",\n    \"alison\",\n    \"laura\",\n    \"gabriella\",\n    \"jean\",\n    \"kathleen\",\n    \"louise\",\n    \"fannie\",\n    \"nichole\",\n    \"willow\",\n    \"judy\",\n    \"gertrude\",\n    \"lillian\",\n    \"kathryn\",\n    \"fabian\",\n    \"tina\",\n    \"frances\",\n    \"jeanne\",\n    \"christin\",\n    \"julie\",\n    \"teresa\",\n    \"dylan\",\n    \"lina\",\n    \"felicia\",\n    \"jessica\",\n    \"carmen\",\n    \"fiona\",\n    \"marianne\",\n    \"carlene\",\n    \"josiah\",\n    \"tiffany"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hello') == 0\nassert solution('hEllO') == 1\nassert solution('HELLO') == 1\nassert solution('ello') == 2\nassert solution('Ello') == 2\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('VII') == True\nassert solution('MCMXCVI') == True\nassert solution('MCMXCIX') == False\nassert solution('MMXX') == False\nassert solution('MMD') == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('XVII') == True\nassert solution('MCM') == False\nassert solution('DCD') == False\nassert solution('MMDCCCLXXXIV') == True\nassert solution('MMDCCCLXXXV') == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"XVI\") == True\nassert solution(\"XXI\") == False\nassert solution(\"I\") == True\nassert solution(\"I.\") == False\nassert solution(\"IV\") == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('MMMCMXCIX') == True\nassert solution('MMMM') == False\nassert solution('VII') == True\nassert solution('XII') == True\nassert solution('MMMCCXXXIII') == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('MCMLXXIV') == True\nassert solution('MMXXIV') == False\nassert solution('CXLVII') == True\nassert solution('IC') == False\nassert solution('MMCCLXXXVIII') == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('X'): True\nassert solution('MMMCMXCIX'): False\nassert solution('C'): True\nassert solution('CD'): True\nassert solution('D'): False\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"X\"\nassert solution(\"MMMCDXCIX\"\nassert solution(\"MMMMDCCXX\"\nassert solution(\"CCCLXXXVIII\"\nassert solution(\"XVII\"\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"MDCCCXCIV\") == \"MDCCCXCIV\"\nassert solution(\"MMMMCDXCIV\") == \"MMMMCDXCIV\"\nassert solution(\"MDCXXII\") == False\nassert solution(\"MCMLXXIV\") == \"MCMLXXIV\"\nassert solution(\"MMDCCCLXXXVIII\") == \"MMDCCCLXXXVIII\"\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"XXI\") == True\nassert solution(\"IV\") == True\nassert solution(\"DCCCC\") == False\nassert solution(\"VII\") == True\nassert solution(\"LXII\") == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"III\") == True\nassert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"LVIII\") == False\nassert solution(\"MCMXCIV\") == False\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('999999999999999999999999999999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999999999999999999999999999999999999\\n9\\n9999999999999999999999999999999999999999999999999999999999999999999999999') == '+91 99999999999999999999999999999999999999999999999999999999999999999999999'\n'''"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '\\n'.join(\n        (\n            '090 123 45 67',\n            '+91 12345 67',\n            '+91 0951234567',\n            '095 123 45 67',\n            '095 12345 67',\n            '+91 9081234567',\n            '+91 1234567890',\n            '+91 123456789',\n            '+91 1234567891',\n            '+91 12345678901',\n            '+91 1234567890111',\n            '+91 12345678901111',\n            '+91 123456789011111',\n            '+91 12345678901111111',\n        )\n    )\n) == '\\n'.join(\n    ('+91 12345 67', '+91 1234567', '+91 123456789', '+91 1234567891', '+91 12345678901', '+91 1234567890', '+91 1234567890', '+91 12345678901', '+91 12345678901', '+91 1234567890111', '+91 12345678901111', '+91 123456789011111', '+91 12345678901111111')\n)\n\nassert solution(\n    '\\n'.join(\n        (\n            '090 123 45 67',\n            '+91 12345 67',\n            '+91 0951234567',\n            '095 123 45 67',\n            '095 12345 67',\n            '+91 9081234567',\n            '+91 1234567890',\n            '+91 123456789',\n            '+91 1234567891',\n            '+91 12345678901',\n            '+91 1234567890111',\n            '+91 12345678901111',\n            '+91 123456789011111',\n            '+91 12345678901111111',\n        )\n    )\n) == '\\n'.join(\n    ('+91 12345 67', '+91 1234567', '+91 123456789', '+91 1234567891', '+91 12345678901', '+91 1234567890', '+91 1234567890', '+91 12345678901', '+91 12345678901', '+91 1234567890111', '+91 12345678901111', '+91 123456789011111', '+91 12345678901111111')\n)\n\nassert solution(\n    '\\n'.join(\n        (\n            '090 123 45 67',\n            '+91 12345 67',\n            '+91 0951234567',\n            '095 123 45 67',\n            '095 12345 67',\n            '+91 9081234567',\n            '+91 1234567890',\n            '+91 123456789',\n            '+91 1234567891',\n            '+91 12345678901',\n            '+91 1234567890111',\n            '+91 12345678901111',\n            '+91 123456789011111',\n            '+91 12345678901111111',\n        )\n    )\n) == '\\n'.join(\n    ('+91 12345 67', '+91 1234567', '+91 123456789', '+91 1234567891', '+91 12345678901', '+91 1234567890', '+91 1234567890', '+91 12345678901', '+91 12345678901', '+91 1234567890111', '+91 12345678901111', '+91 123456789011111', '+91 12345678901111111')\n)\n\nassert solution(\n    '\\n'.join(\n        (\n            '090 123 45 67',\n            '+91 12345 67',\n            '+91 0951234567',\n            '095 123 45 67',\n            '095 12345 67',\n            '+91 9081234567',\n            '+91 1234567890',\n            '+91 123456789',\n            '+91 1234567891',\n            '+91 12345678901',\n            '+91 1234567890111',\n            '+91 12345678901111',\n            '+91 123456789011111',\n            '+91 12345678901111111',\n        )\n    )\n) == '\\n'.join(\n    ('+91 12345 67', '+91 1234567', '+91 123456789', '+91 1234567891', '+91 12345678901', '+91 1234567890', '+91 1234567890', '+91 12345678901', '+91 12345678901', '+91 1234567890111', '+91 12345678901111', '+91 123456789011111', '+91 12345678901111111')\n)\n\nassert solution(\n    '\\n'.join(\n        (\n            '090 123 45 67',\n            '+91 12345 67',\n            '+91 0951234567',\n            '095 123 45 67',\n            '095 12345 67',\n            '+91 9081234567',\n            '+91 1234567890',\n            '+91 123456789',\n            '+91 1234567891',\n            '+91 12345678901',\n            '+91 1234567890111',\n            '+91 12345678901111',\n            '+91 123456789011111',\n            '+91 12345678901111111',\n        )\n    )\n) == '\\n'.join(\n    ('+91 12345 67', '+91 1234567', '+91 123456789', '+91 1234567891', '+91 12345678901', '+91 1234567890', '+91 1234567890', '+91 12345678901', '+91 12345678901', '+91 1234567890111', '+91 12345678901111', '+91 123456789011111', '+91 12345678901111111')\n)"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\\n\".join([\"9191234567\", \"9191234568\", \"9191234569\"])) == \"919 12345 67\\n919 12345 68\\n919 12345 69\""
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"+91 987654321\") == \"+91 987654321\"\nassert solution(\"+91(987)6543210\") == \"+91 9876543210\"\nassert solution(\"+91 9876543210\") == \"+91 9876543210\"\nassert solution(\"+91 9876543210\") == \"+91 9876543210\"\nassert solution(\"+91 (987)6543210\") == \"+91 9876543210\"\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('09025425678') == '+91 9025425678', 'Wrong answer'\nassert solution('90225425678') == '+91 9025425678', 'Wrong answer'\nassert solution('91012345678') == '+91 91012345678', 'Wrong answer'\nassert solution('99012345678') == '+91 99012345678', 'Wrong answer'\nassert solution('999012345678') == '+91 999012345678', 'Wrong answer'\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"+91 023 456 789\") == \"+919234567890\"\nassert solution(\"+91 910 123 4567\") == \"+919101234567\"\nassert solution(\"+91 910 123 45 67\") == \"+919101234567\"\nassert solution(\"+91 910 123 45 6\") == \"+91910123456\"\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('+91 99999999\\n') == \"+91 99999999\\n\"\n\n\"\"\""
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('91 095 098 97') == '+91 952 954 996 97'\nassert solution('91-099-959-999') == '+91 952 954 996 999'\nassert solution('087 9428 911') == '+91 876289428 911'\nassert solution('095 917 919 987') == '+91 952 917 919 987'\nassert solution('999 954 918 488') == '+91 999 954 918 488'\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n+91 9876543210\n+91 98765432111\n+91 9876543212\n''') == '+91 9876543210\\n+91 98765432111\\n+91 9876543212'\n\nassert solution('''\n+91 9876543210\n+91 98765432111\n+91 9876543212\n''') == '+91 9876543210\\n+91 9876543211\\n+91 9876543212'\n\nassert solution('''\n+91 9876543210\n+91 98765432111\n+91 9876543212\n''') == '+91 9876543210\\n+91 9876543211\\n+91 9876543212'\n\nassert solution('''\n+91 9876543210\n+91 98765432111\n+91 9876543212\n''') == '+91 9876543210\\n+91 9876543211\\n+91 9876543212'\n\nassert solution('''\n+91 9876543210\n+91 98765432111\n+91 9876543212\n''') == '+91 9876543210\\n+91 9876543211\\n+91 9876543212'"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0999909999999') == '+91 0 9999 0 9999'\nassert solution('+91 999999999999') == '+91 99999 99999'\nassert solution('00999999999') == '+91 09999 09999'\nassert solution('99999999999') == '+91 99999 99999'\nassert solution('9999999999') == '+91 999999999'\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('alpha    10\\nbeta    5\\nalpha    7') == 10\n=====Sample Input=====\n\n2\nalpha    10\nbeta    5\nalpha    7\n\n2\nalpha    50\nbeta    50\nalpha    70\n\n2\nalpha    30\nbeta    50\ngamma    70\n\nSample Output\n\n50.0\n'''\n\nimport os"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"1a\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"input_marks.txt\") == str(50.00)\n=====Sample Input=====\n4\nKrishna 67 68 69\nArjun 70 98 63\nMalika 52 56 60\nMalika\n\n=====Sample Output=====\n56.00\n\n\"\"\"\n\n\"\"\"\nComplete the function given in the editor\n\"\"\"\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50\\n'\n'gamma,70\\n'\n'alpha,20\\n'\n'beta,30\\n'\n'gamma,40\\n'\n'beta,40\\n'\n'alpha,30\\n'\n'beta,50"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('stdin') == '50.00'\nprint(solution('stdin'))\n>>>>>>> f2098a61a8b3e51a75cfa9e8aa265853c48bc8b9\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\nalpha 20 30 40\\nbeta 30 50 70\\nkaran 10 30 50\\ngreen 10 20 30\\nharpreet 17 14 19\\n\") == '50.00'\nassert solution(\"5\\nalpha 30 40\\nbeta 50 60 70\\nkaran 10 30 50\\ngreen 10 20 30\\nharpreet 17 14 19\\n\") == '46.50'\nassert solution(\"6\\nalpha 30 40 40 50\\nbeta 50 60 70 80\\nkaran 10 30 50 60\\ngreen 10 20 30 50\\nharpreet 17 14 19 19\\n\") == '50.00'\nassert solution(\"6\\nalpha 10 10 10 10\\nbeta 50 60 70 80\\nkaran 10 30 50 60\\ngreen 10 20 30 50\\nharpreet 17 14 19 19\\n\") == '45.00'\nassert solution(\"6\\nalpha 30 40 40 50\\nbeta 50 60 70 80\\nkaran 10 30 50 60\\ngreen 10 20 30 50\\nharpreet 17 14 19 19\\n\") == '46.50'\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('stdin') == '50.00'\n\n=====Sample Input=====\n\n5\nHarry\n37.21\nBerry\n37.21\nTina\n37.2\nAkriti\n41\nHarsh\n39\n\n3\nGaurav\n99\nSam\n\n2\nHarsh\n99\n\nEnter your code here. Read input from STDIN. Print output to STDOUT\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('hello world') == 'hello world'\nassert solution('alpha beta gamma') == '50'\nassert solution('alpha') == '50'\nassert solution('beta') == '50'\nassert solution('gamma') == '50'\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('alpha\\nbeta\\ngamma\\nalpha') == '50.00'\nassert solution('alpha\\nalpha\\nalpha\\nalpha\\nalpha') == '50.00'\nassert solution('alpha\\nbeta\\ngamma') == '50.00'\nassert solution('alpha\\ngamma') == '50.00'\nassert solution('alpha\\ngamma\\nalpha') == '50.00'\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('test') == 'Mr. Henry Davids\\nMs. Mary George\\n'\nassert solution('test2') == 'Ms. Mary George\\nMr. Henry Davids\\n'\nassert solution('test3') == 'Ms. Mary George\\nMr. Henry Davids\\n'\nassert solution('test4') == 'Ms. Mary George\\nMr. Henry Davids\\n'\nassert solution('test5') == 'Ms. Mary George\\nMr. Henry Davids\\n'\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\nHeraldo\nLopes\n29\n''') == '''Mr. Heraldo\nMs. Lopes\n'''\n\nassert solution('''\n2\nRafael\nGon\u00e7alo\n''') == '''Ms. Rafael\nMr. Gon\u00e7alo\n'''\n\nassert solution('''\n5\nMaria\nJo\u00e3o\nJos\u00e9\nAna\nMaria\n''') == '''Ms. Maria\nMs. Jo\u00e3o\nMs. Jos\u00e9\nMs. Ana\nMr. Ana\n'''\n\nassert solution('''\n2\nSara\nMaria\n''') == '''Ms. Sara\nMs. Maria\n'''\n\nassert solution('''\n3\nPedro\nMaria\nJo\u00e3o\n''') == '''Mr. Pedro\nMs. Jo\u00e3o\nMs. Maria\n'''"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\nGeorge\\nM\\n2') == 'Mr. George'\nassert solution('1\\nDavids\\nF\\n2') == 'Ms. Davids'\nassert solution('1\\nFred\\nF\\n2') == 'Ms. Fred'\nassert solution('1\\nClint\\nM\\n1') == 'Mr. Clint'\nassert solution('1\\nDylan\\nM\\n2') == 'Ms. Dylan'\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4\nDarren Huron\nJohn Travolta\nChris Price\nAlex Swift\"\"\") == \"\"\"Ms. Darren Huron\nMs. John Travolta\nMr. Chris Price\nMr. Alex Swift\"\"\"\n\nassert solution(\"\"\"2\nMichael Jordan\nPaul Pierce\"\"\") == \"\"\"Ms. Michael Jordan\nMs. Paul Pierce\"\"\"\n\nassert solution(\"\"\"5\nHarrison Barnes\nMichael Jordan\nNicholas Wolf\nBlake Griffin\nScottie Black\"\"\") == \"\"\"Ms. Harrison Barnes\nMs. Michael Jordan\nMs. Nicholas Wolf\nMs. Blake Griffin\nMs. Scottie Black\"\"\"\n\nassert solution(\"\"\"2\nKi Sung\nHyeon Sang\n\"\"\") == \"\"\"Ms. Ki Sung\nMs. Hyeon Sang\"\"\"\n\nassert solution(\"\"\"1\nJohn Smith\n\"\"\") == \"\"\"Ms. John Smith\"\"\""
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n1\nHarald\nBrune\n30\nM\n''') == '''\nMr. Harald\nMs. Brune\n'''\n\nassert solution('''\n2\nHarald\nBrune\n30\nM\nRanjit\n58\nM\n''') == '''\nMs. Brune\nMr. Ranjit\n'''\n\nassert solution('''\n2\nSaswata\nKumar\n20\nM\nSam\n19\nF\n''') == '''\nMs. Kumar\nMr. Sam\n'''\n\nassert solution('''\n2\nSam\n19\nM\nRanjit\n58\nM\nSaswata\nKumar\n20\nF\n''') == '''\nMs. Kumar\nMr. Sam\n'''\n\nassert solution('''\n3\nArun\nSam\nKumar\n''') == '''\nMr. Arun\nMr. Sam\nMr. Kumar\n'''"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\nJohn Smith 17 M\nRobert Williams 17 M\n''') == '''Mr. John Smith\nMs. Robert Williams\n'''\nassert solution('''10\nZoey Smith 17 M\nMichael Joyce 18 F\nPolly Baskins 18 M\nLoretta Baskins 18 F\nGraham Baskins 18 M\nAngelina Jolie 18 F\nEmmeline Lilly 18 F\nEvelyn Wodehouse 18 M\nRuth Blevins 18 M\n''') == '''Ms. Evelyn Wodehouse\nMs. Graham Baskins\nMs. Angelina Jolie\nMs. Lillian Baskins\nMs. Melissa Baskins\nMs. Ruth Blevins\nMs. Zoey Smith\nMs. Emma Watson\nMs. Michael Joyce\nMs. Polly Baskins\n'''\nassert solution('''9\nLisa Crawford 19 M\nMichael Joyce 19 M\nStephania Goldenbrun 19 M\nWendy A. Williams 19 M\nAlexis McQueen 19 M\nZoey Smith 19 M\nShauna Black 19 M\nEvelyn Wodehouse 19 M\n''') == '''Ms. Shauna Black\nMs. Stephanie Goldenbrun\nMs. Lisa Crawford\nMs. Melissa Baskins\nMs. Michael Joyce\nMs. Paul Wodehouse\nMs. Zoey Smith\nMs. Wendy A. Williams\nMs. Alexis McQueen\nMs. Stephania Goldenbrun\n'''\nassert solution('''4\nEmily Baskins 19 F\nShauna Black 19 M\nEvelyn Wodehouse 19 M\nRuth Blevins 19 M\n''') == '''Ms. Ruth Blevins\nMs. Shauna Black\nMs. Erica Baskins\nMs. Stephanie Goldenbrun\nMs. Emma Watson\nMs. Melissa Baskins\nMs. Lillian Baskins\nMs. Elizabeth Wodehouse\n'''"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\nGosho Sake\nmatthew Sake\nGosho Sake\nmatthew Sake''') == '''Mr. Gosho Sake\nMs. matthew Sake\n'''\nassert solution('''5\nGosho Sake\nmatthew Sake\nGosho Sake\nmatthew Sake\nGosho Sake''') == '''Ms. matthew Sake\nMs. Gosho Sake\nMr. Gosho Sake\n'''\nassert solution('''10\nGosho Sake\nmatthew Sake\nGosho Sake\nmatthew Sake\nGosho Sake\nGosho Sake\nGosho Sake\nGosho Sake\nGosho Sake\nGosho Sake''') == '''Ms. matthew Sake\nMs. Gosho Sake\nMs. Gosho Sake\nMr. Gosho Sake\nMr. Gosho Sake\nMr. Gosho Sake\nMr. Gosho Sake\nMr. Gosho Sake\nMs. Gosho Sake\nMs. Gosho Sake'''\n\n\n\n'''\n\n\"Gosho Sake\"\n\"matthew Sake\"\n\"Gosho Sake\"\n\"matthew Sake\"\n\"Gosho Sake\"\n\"Gosho Sake\"\n\"Gosho Sake\"\n\"Gosho Sake\"\n\"Gosho Sake\"\n\"Gosho Sake\"\n'''"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''John James 5 M\nWilliam James 5 M\nJames Joyce 5 M\nMonica Joyce 5 F\nRichard Joyce 5 M\nJohn Dovahill 5 M\nWilliam Dovahill 5 M\nDianne Dovahill 5 F\nDomenic Dovahill 5 M\nJohn Irving 5 M\nJanice Irving 5 F\nMary Joyce 5 F\nMaria Teresa Aragon 5 F\nDaphne Dovahill 5 M\nJosephine Dovahill 5 F\nEdgar Isaac MacLeod 5 M\nEthel Isaac MacLeod 5 M\nSamuel Isaac McLeod 5 M\nAnne Isaac McLeod 5 F\nClaudia Isaac McLeod 5 F\nEdward Isaac McLeod 5 M\nRachel Isaac McLeod 5 F\nHannah Isaac McLeod 5 F\nAlexis Isaac McLeod 5 M\nSusan Isaac McLeod 5 M\nDennis Isaac McLeod 5 M\nTed Isaac McLeod 5 M\nKathy Isaac McLeod 5 M\nEli Marshall 5 M\nSarah Marshall 5 M\nLucy Marshall 5 M\nJanet Marshall 5 F\nAnnabell Marshall 5 M\nAmy Marshall 5 M\nKatherine Marshall 5 F\nEdward Marshall 5 M\nJulia Marshall 5 F\nStephanie Marshall 5 M\nTimothy Marshall 5 M\nMartha Marshall 5 F\nJosephine Marshall 5 F\nAsha Marshall 5 M\nAmya Marshall 5 F\nClara Marshall 5 F\nPhyliss Marshall 5 M\nNathan Marshall 5 M\nDiane Marshall 5 F\nAlexa Marshall 5 M\nAlyssa Marshall 5 F\nDiane Marshall 5 F\nKathleen Marshall 5 M\nTobias Marshall 5 M\nMarie Marshall 5 F\nLaurel Marshall 5 M\nRalph Marshall 5 M\nJanine Marshall 5 F\nTanya Marshall 5 F\nEdith Marshall 5 M\nClara Marshall 5 F\nSuzanne Marshall 5 M\nEdward Marshall 5 M\nDawn Marshall 5 F\nAnnie Marshall 5 M\nHannah Marshall 5 F\nSusan Marshall 5 M\nJane Marshall 5 F\nEdwin Marshall 5 M\nCaroline Marshall 5 M\nPatty Marshall 5 F\nBrianna Marshall 5 M\nRosemary Marshall 5 F\nAnne Marshall 5 M\nLinda Marshall 5 M\nKennedy Marshall 5 M\nIain Marshall 5 M\nLennard Marshall 5 M\nCameron Marshall 5 M\nAmya Marshall 5 F\nLucia Marshall 5 F\nAmber Marshall 5 F\nRoxanne Marshall 5 M\nRoseanne Marshall 5 F\nSophie Marshall 5 M\nOliver Marshall 5 M\nEli Marshall 5 M\nKathryn Marshall 5 M\nSamantha Marshall 5 F\nDorene Marshall 5 M\nLauren Marshall 5 M\nSandra Marshall 5 F\nRoxy Marshall 5 M\nLily Marshall 5 F\nKristen Marshall 5 M\nBarbara Marshall 5 F\nClaudia Marshall 5 F\nMargo Marshall 5 M\nHolly Marshall 5 F\nGloria Marshall 5 M\nAmber Marshall 5 F\nCheryl Marshall 5 M\nTracey Marshall 5 F\nDionne Marshall 5 M\nLacey Marshall 5 M\nRochelle Marshall 5 F\nAnne Marshall 5 M\nMaryann Marshall 5 F\nLily Marshall 5 F\nHannah Marshall 5 M\nRebecca Marshall 5 F\nOlivia Marshall 5 M\nIrina Marshall 5 F\nKatie Marshall 5 M\nRosemary Marshall 5 F\nAndrea Marshall 5 M\nAnnie Marshall 5 F\nSherry Marshall 5 M\nMyra Marshall 5 F\nGloria Marshall 5 M\nEdward Marshall 5 M\nClayton Marshall 5 M\nDorothy Marshall 5 M\nLillian Marshall 5 M\nMelanie Marshall 5 F\nAmy Marshall 5 M\nCarolyn Marshall 5 F\nEli Marshall 5 M\nKathryn Marshall 5 M\nTiffany Marshall 5 M\nAimee Marshall 5 M\nColleen Marshall 5 M\nJanet Marshall 5 F\nJames Marshall 5 M\nCatherine Marshall 5 F\nKathleen Marshall 5 M\nTanya Marshall 5 F\nKristin Marshall 5 M\nAnne Marshall 5 M\nJulia Marshall 5 F\nNina Marshall 5 M\nKathryn Marshall 5 M\nLily Marshall 5 F\nAnne Marshall 5 M\nLiam Marshall 5 M\nSamuel Marshall 5 M\nClaudia Marshall 5 F\nRoxanne Marshall 5 M\nAdrian Marshall 5 M\nBrianna Marshall 5 F\nRoxette Marshall 5 M\nJosiah Marshall 5 M\nKathleen Marshall 5 M\nClaudia Marshall 5 F\nJanet Marshall 5 M\nRebecca Marshall 5 F\nAnnette Marshall 5 M\nMelanie Marshall 5 F\nLaura Marshall 5 M\nTiffanie Marshall 5 M\nClaire Marshall 5 F\nLily Marie Marshall 5 M\nAmber Marshall 5 F\nSusan Marshall 5 M\nLouise Marshall 5 M\nElisa Marshall 5 M\nTanya Marshall 5 F\nAimee Marshall 5 M\nCheryl Marshall 5 M\nLilly Marshall 5 F\nEmma Marshall 5 M\nSophie Marshall 5 F\nKathryn Marshall 5 M\nKathy Marshall 5 M\nArya Marshall 5 F\nKathleen Marshall 5 M\nAnnie Marshall 5 F\nEli Marshall 5 M\nLaurel Marshall 5 M\nLacey Marshall 5 M\nCatherine Marshall 5 F\nDaryl Marshall 5 M\nAlyssa Marshall 5 F\nClara Marshall 5 F\nLenna Marshall 5 M\nLaurene Marshall 5 M\nCatheryn Marshall 5 F\nSamantha Marshall 5 M\nOlivia Marshall 5 M\nKathryn Marshall 5 M\nGloria Marshall 5 M\nClara Marshall 5 F\nGiorgio Marshall 5 M\nEli Marshall 5 M\nLilian Marshall 5 M\nRoxanne Marshall 5 M\nKathleen Marshall 5 M\nTiffany Marshall 5 M\nAdrienne Marshall 5 M\nLily Marie Marshall 5 M\nAnnette Marshall 5 M\nAurelia Marshall 5 F\nClare Marshall 5 M\nSueldo Marshall 5 M\nCarolyn Marshall 5 F\nCherie Marshall 5 M\nLilly Marshall 5 M\nKathleen Marshall 5 M\nAryan Marshall 5 M\nCherlyn Marshall 5 M\nLiam Marshall 5 M\nCatherine Marshall 5 F\nLily Marie Marshall 5 M\nMartha Marshall 5 F\nTanya Marshall 5 F\nYvonne Marshall 5 M\nEliabeth Marshall 5 M\nKathryn Marshall 5 M\nClaire Marshall 5 F\nAlicia Marshall 5 M\nRebecca Marshall 5 M\nAlyssa Marshall 5 F\nClaudia Marshall 5 F\nSophie Marshall 5 M\nAimee Marshall 5 M\nAdriana Marshall 5 F\nCathy Marshall 5 M\nLorraine Marshall 5 M\nDorothy Marshall 5 M\nLillian Marshall 5 M\nDorene Marshall 5 M\nJosephine Marshall 5 F\nLydia Marshall 5 M\nCarrie Marshall 5 M\nLily Marie Marshall 5 M\nTiffany Marshall 5 M\nTiffanie Marshall 5 M\nLouise Marshall 5 M\nClaire Marshall 5 F\nNatalie Marshall 5 M\nYvonne Marshall 5 M\nLivana Marshall 5 M\nLily Marie Marshall 5 M\nGloria Marshall 5 M\nDorothy Marshall 5 M\nArnaud Marshall 5 M\nClara Marshall 5 F\nAlicia Marshall 5 M\nCecilia Marshall 5 M\nSamantha Marshall 5 M\nHolly Marshall 5 F\nSophie Marshall 5 M\nArya Marshall 5 F\nRebecca Marshall 5 M\nAlessandra Marshall 5 M\nDixie Marshall 5 M\nMelanie Marshall 5 M\nKatherine Marshall 5 F\nSandra Marshall 5 M\nTiffany Marshall 5 M\nCherie Marshall 5 M\nRoxanne Marshall 5 M\nBarbara Marshall 5 M\nEmma Charlotte Marshall 5 M\nVickie Marshall 5 M\nTiffanie Marshall 5 M\nAnnie Marshall 5 F\nSandra Marshall 5 M\nOlivia Marshall 5 M\nShane Marshall 5 M\nLaurel Marshall 5 M\nGlenda Marshall 5 M\nKathleen Marshall 5 M\nLisa Marshall 5 M\nLouise Marshall 5 M\nLaurence Marshall 5 M\nKatheryn Marshall 5 M\nDorothy Marshall 5 M\nCaroline Marshall 5 M\nClaire Marshall 5 F\nKathryn Marshall 5 M\nL"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    'John G Doe 40 M',\n    'Lisa S Doe 30 F',\n    'Steve W Doe 30 M',\n    'Mark Z Doe 40 F',\n    'Lori A Doe 45 F'\n    ])) == '\\n'.join([\n    'Mr. John G Doe',\n    'Ms. Lisa S Doe',\n    'Ms. Sarah W Doe',\n    'Ms. Mark Z Doe',\n    'Ms. Lori A Doe'\n    ])\n\nassert solution('\\n'.join([\n    'Dwight D. Eisenhower 35 M',\n    'Barack Obama 35 M',\n    'John F. Kennedy 35 M',\n    'Benjamin Harrison 35 M',\n    'Truman Capote 35 M'\n    ])) == '\\n'.join([\n    'Ms. Dwight D. Eisenhower',\n    'Ms. Barack Obama',\n    'Ms. John F. Kennedy',\n    'Ms. Benjamin Harrison',\n    'Ms. Truman Capote'\n    ])\n\nassert solution('\\n'.join([\n    'Michael L. Johnson 28 M',\n    'David T. Padua 28 M',\n    'Richard D. Nixon 28 M',\n    'Theodore H. Ford 28 M',\n    'Carla G. Hoover 28 F'\n    ])) == '\\n'.join([\n    'Ms. Michael L. Johnson',\n    'Ms. David T. Padua',\n    'Ms. Richard D. Nixon',\n    'Ms. Theodore H. Ford',\n    'Ms. Carla G. Hoover'\n    ])\n\nassert solution('\\n'.join([\n    'Terry James Madison 30 M',\n    'Brad L. Gore 30 M',\n    'Donald John Trump 30 M',\n    'Donald John Trump 30 M',\n    'Terrence Howard Brown 30 M'\n    ])) == '\\n'.join([\n    'Ms. Terry James Madison',\n    'Ms. Brad L. Gore',\n    'Ms. Donald John Trump',\n    'Ms. Donald John Trump',\n    'Ms. Terrence Howard Brown'\n    ])\n\nassert solution('\\n'.join([\n    'Jerry Seinfeld 30 M',\n    'George Costanza 30 M',\n    'Elaine Benes 30 M',\n    'Jerry Seinfeld 30 M',\n    'Julia Louis-Dreyfus 30 M'\n    ])) == '\\n'.join([\n    'Ms. Jerry Seinfeld',\n    'Ms. George Costanza',\n    'Ms. Elaine Benes',\n    'Ms. Jerry Seinfeld',\n    'Ms. Julia Louis-Dreyfus'\n    ])"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\nJohn Doe 12 M\\nJane Doe 22 F\\nBob Smith 17 M\\n\") == \"Ms. Bob Smith\\nMs. Jane Doe\\nMr. John Doe\"\nassert solution(\"2\\nHannah 14 F\\nSarah 26 M\\n\") == \"Ms. Hannah\\nMs. Sarah\"\nassert solution(\"1\\nSusan 11 M\\n\") == \"Ms. Susan\"\n\"\"\""
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 2 3') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n'''\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 2 3''') == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 1, 0],\n    [0, 1, 1],\n    [1, 0, 0],\n    [1, 0, 1],\n    [1, 1, 0],\n    [1, 1, 1]]\n\nassert solution('''3 4 5 2''') == [\n    [0, 0, 0],\n    [0, 0, 1],\n    [0, 1, 0],\n    [0, 1, 2],\n    [0, 2, 1],\n    [0, 2, 2],\n    [1, 0, 0],\n    [1, 0, 2],\n    [1, 1, 1],\n    [1, 1, 2],\n    [1, 2, 0],\n    [1, 2, 2],\n    [2, 0, 1],\n    [2, 0, 2],\n    [2, 1, 0],\n    [2, 1, 2],\n    [2, 2, 1],\n    [2, 2, 2]]\n\nassert solution('''1 1 1 1''') == []\nassert solution('''2 1 1 1''') == []\nassert solution('''1 1 2 2''') == []\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n1\n3''') == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1]]\nassert solution('''2\n2\n2\n4''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\nassert solution('''3\n3\n3\n6''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3]]\nassert solution('''4\n4\n4\n8''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 0, 4], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 2, 4], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [0, 3, 4], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 0, 4], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 1, 4], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 2, 4], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [1, 3, 4], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 0, 4], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 1, 4], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 2, 4], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [2, 3, 4], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 0, 4], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 1, 4], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 2, 4], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3], [3, 3, 4], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 0, 3], [4, 0, 4], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 1, 3], [4, 1, 4], [4, 2, 0], [4, 2, 1], [4, 2, 2], [4, 2, 3], [4, 2, 4], [4, 3, 0], [4, 3, 1], [4, 3, 2], [4, 3, 3], [4, 3, 4]]\nassert solution('''5\n5\n5\n10''') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 0, 4], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 2, 4], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [0, 3, 4], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 0, 4], [1,"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n2') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\"\nassert solution('2\\n2\\n2\\n3') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 2], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 2], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('3\\n3\\n3\\n4') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3]]\"\nassert solution('4\\n4\\n4\\n5') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 0, 4], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 2, 3], [0, 2, 4], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 3, 3], [0, 3, 4], [0, 4, 0], [0, 4, 1], [0, 4, 2], [0, 4, 3], [0, 4, 4], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 0, 3], [1, 0, 4], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 1, 3], [1, 1, 4], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 2, 3], [1, 2, 4], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 3, 3], [1, 3, 4], [1, 4, 0], [1, 4, 1], [1, 4, 2], [1, 4, 3], [1, 4, 4], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 0, 3], [2, 0, 4], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 1, 3], [2, 1, 4], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 2, 3], [2, 2, 4], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 3, 3], [2, 3, 4], [2, 4, 0], [2, 4, 1], [2, 4, 2], [2, 4, 3], [2, 4, 4], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 0, 3], [3, 0, 4], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 1, 3], [3, 1, 4], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 2, 3], [3, 2, 4], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3], [3, 3, 4], [3, 4, 0], [3, 4, 1], [3, 4, 2], [3, 4, 3], [3, 4, 4], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 0, 3], [4, 0, 4], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 1, 3], [4, 1, 4], [4, 2, 0], [4, 2, 1], [4, 2, 2], [4, 2, 3], [4, 2, 4], [4, 3, 0], [4, 3, 1], [4, 3, 2], [4, 3, 3], [4, 3, 4], [4, 4, 0], [4, 4, 1], [4, 4, 2], [4, 4, 3], [4, 4, 4]]\"\nassert solution('5\\n5\\n5\\n6') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0, 0, 4], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 1, 3], [0, 1, 4], ["
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n2') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\n\nassert solution('2\\n2\\n2\\n1') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\n\nassert solution('3\\n3\\n3\\n3') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\n\nassert solution('1\\n1\\n1\\n2') == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 2 3') == ['0 0 0', '0 0 1', '0 0 2', '0 1 0', '0 1 1', '0 1 2', '0 2 0', '0 2 1', '0 2 2', '1 0 0', '1 0 1', '1 0 2', '1 1 0', '1 1 1', '1 1 2']"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1 2 3''') == ['0', '0', '0', '1', '1', '2', '2', '2', '2', '2', '2', '2']\nassert solution('''1 2 1 3''') == ['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']\nassert solution('''1 2 3 3''') == ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n3') == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1]]\n'''\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n2\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1]]\nassert solution(\"1\\n2\\n1\\n2\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 2], [0, 2, 1], [1, 0, 0], [1, 0, 2], [1, 1, 1], [1, 1, 2], [1, 2, 0]]\nassert solution(\"1\\n2\\n1\\n1\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 2], [1, 1, 0], [1, 1, 2], [1, 2, 0]]\nassert solution(\"1\\n1\\n1\\n2\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 2], [1, 1, 0], [1, 1, 2], [1, 2, 0]]\nassert solution(\"1\\n1\\n1\\n2\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [1, 0, 0], [1, 0, 2], [1, 1, 0], [1, 1, 2], [1, 2, 0]]\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n1\n2''') == \"[0, 0, 0]\"\nassert solution('''1\n2\n2\n2''') == \"[0, 1, 0]\"\nassert solution('''2\n2\n2\n2''') == \"[0, 0, 1]\"\nassert solution('''2\n3\n3\n3''') == \"[0, 1, 2]\"\nassert solution('''3\n3\n3\n3''') == \"[0, 1, 2]\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"1.1+1.1j\") == \"1.1+1.1j, 0.00+1.00i\"\nassert solution(\"1.1+1.1j\") == \"1.1+1.1j, 0.00+1.00i\"\nassert solution(\"1.1+2.1j\") == \"1.1+2.1j, 1.00+0.00i\"\nassert solution(\"1.1+2.1j\") == \"1.1+2.1j, 1.00+0.00i\"\nassert solution(\"2.1+1.1j\") == \"2.1+1.1j, 0.00+1.00i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2.25 + 22.1i\n''') == '1.53+1.02i'\nassert solution('''-2.25 + 22.1i\n''') == '-1.53+1.02i'\nassert solution('''1.00 + 2.00i\n''') == '0.50+0.50i'\nassert solution('''2.00 + -2.00i\n''') == '0.00+0.00i'\nassert solution('''2.00 + 0.00i\n''') == '2.00+0.00i'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '3 -4'\nassert solution('-6 3') == '3 -9'\nassert solution('1 1') == '0 +0i'\nassert solution('1 -2') == '-1 -2'\nassert solution('0 0') == '0 +0i'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1.1+2.2i\") == \"1.00+2.20i\"\nassert solution(\"1.1-2.2i\") == \"1.00-2.20i\"\nassert solution(\"1.1*2.2i\") == \"1.02+0.02i\"\nassert solution(\"1.1/2.2i\") == \"0.58+0.58i\"\nassert solution(\"1.1%2.2i\") == \"0.00+0.02i\""
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1+2j) == 3-1j\nassert solution(3+4j) == 3+4j\nassert solution(0+5j) == 5j\nassert solution(6-7j) == 6-7j\nassert solution(8.0) == 8.0\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2i') == '1.00+2.00i'\nassert solution('1 2i') == '1.00+2.00i'\nassert solution('2 1i') == '1.00+2.00i'\nassert solution('2 1i') == '1.00+2.00i'\nassert solution('3 4i') == '1.00+4.00i'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 2\n0 4\n''') == '0+2i 0-4i'\nassert solution('''1 1\n-1 1\n''') == '0.00+1.00i 0.00-1.00i'\nassert solution('''1.1 2.2\n1.2 2.1\n''') == '1.00+2.00i 1.00-2.00i'\nassert solution('''0.1 1.1\n0.1 -1.1\n''') == '0.00+1.00i 0.00-1.00i'\nassert solution('''1.9 2.8\n1.8 2.9\n''') == '1.00+2.00i 1.00-2.00i'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1.000000 -0.04313j') == '0.99639 -0.06412j'\nassert solution('1.000000 0.000000j') == '1.000000 0.000000j'\nassert solution('0.1000000 0.000000j') == '0.100049 0.000009j'\nassert solution('0.1000000 -0.000000j') == '0.100049 -0.000009j'\nassert solution('0.1000000 0.1000000j') == '1.000000 0.100049j'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1.1 2.2') == '3.3 -1.1'\nassert solution('1.11 2.22') == '3.33 -1.11'\nassert solution('0.1 0.1') == '0.2 -0.2'\nassert solution('0.0 0.0') == '0.00 0.00'\nassert solution('2.3 3.4') == '5.6 -2.3'\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('asdfgh') == 'qwertz'\nassert solution('asdfg') == 'asdfg'\nassert solution('asdfghjkl') == 'asdfghjkl'\nassert solution('asdfghjklz') == 'asdfghjkl'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"xyz\", \"abc\") == \"xaybzc\"\nassert solution(\"abc\", \"xyz\") == \"xaybzc\"\nassert solution(\"ab\", \"bc\") == \"bac\"\nassert solution(\"abc\", \"xyz\") == \"xaybzc\"\nassert solution(\"abc\", \"bcd\") == \"bac\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"abcyz\"\nassert solution(\"abcxyz\") == \"xyzabc\"\nassert solution(\"abcyz\") == \"xyzabc\"\n\nassert solution(\"xyz\") == \"xaybzc\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"xyz\", \"abc\") == \"xaybzc\"\nassert solution(\"xyz\", \"abc\") == \"xaybzc\"\nassert solution(\"xyz\", \"abc\") == \"xaybzc\"\nassert solution(\"abc\", \"xyz\") == \"xaybzc\"\nassert solution(\"abc\", \"xyz\") == \"xaybzc\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'abcd'\nassert solution('xyzabc') == 'xaybzc'\nassert solution('abcxyz') == 'abcd'\nassert solution('abcabc') == 'abcabc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\nxyz\nabc\n\"\"\") == \"xaybzc\"\n\nassert solution(\n\"\"\"\nabc\nxyz\n\"\"\") == \"xaybzc\"\n\nassert solution(\n\"\"\"\nabc\nxyz\n\"\"\") == \"xaybzc\"\n\nassert solution(\n\"\"\"\nyzab\nabc\n\"\"\") == \"xaybzc\"\n\nassert solution(\n\"\"\"\nxyz\nyzab\n\"\"\") == \"xaybzc\""
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''xyz\nabc''') == 'xaybzc'\nassert solution('''xyz\nabc''') == 'xaybzc'\nassert solution('''xyz\nabc''') == 'xaybzc'\nassert solution('''abc\nxyz''') == 'xaybzc'\nassert solution('''abc\nxyz''') == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xazbcc'\nassert solution('zxy') == 'xazbcc'\nassert solution('zyx') == 'xazbcc'\nassert solution('zxy') == 'xazbcc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('xyzabc') == 'xaybzc'\nassert solution('abcxyz') == 'xaybzc'\nassert solution('xaybzc') == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"xyz\", \"abc\") == \"xaybzc\"\nassert solution(\"xyz\", \"abc\") == \"xaybzc\"\nassert solution(\"abc\", \"xyz\") == \"xaybzc\"\nassert solution(\"abc\", \"xyz\") == \"xaybzc\"\nassert solution(\"yz\", \"abc\") == \"xaybzc\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('B0') == ''\nassert solution('01B0') == '00'\nassert solution
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('01B0') == '00'"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"00010\") == \"00\"\nassert solution(\"010101\") == \"010101\"\nassert solution(\"101101\") == \"010101\"\nassert solution(\"101\") == \"010101\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('01B0') == '00'\nassert solution('00110') == '010'\nassert solution('011101') == '01110'\nassert solution('0100111') == '01110'\nassert solution('011101110101') == '01110'\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[3:]\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"00\"\nassert solution(\"10\") == \"01\"\nassert solution(\"01B0\") == \"00\"\nassert solution(\"01B1\") == \"01\"\nassert solution(\"01B11\") == \"02\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"01B0\") == \"00\"\n\"\"\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('B0') == '00'\nassert solution('B0B0B0') == '000'\nassert solution('B0B0B0B0') == '000000'\nassert solution('B0B0B0B0B0') == '0000000'\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('01B0') == '00'\nassert solution('0B1B0') == '00'\nassert solution('B0B0B0') == '0'\nassert solution('0B0B0B0') == '0'\nassert solution('B') == 'B'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"2 1 5 4 3\") == \"\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 5 4 3') == '4'\nassert solution('2 1 5 4 3\\n2 1 5 4 3') == '4'\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '4'\nassert solution('3\\n3\\n3') == '3'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n''') == '6'\nassert solution('''\n5\n2 1 5 4 3\n''') == '6'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '6'\nassert solution('''\n5\n2 3 4 1 5\n''') == '10'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '6'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''1\n1''') == '1'\nassert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''5\n1 1 1 1 1''') == '3'\nassert solution('''5\n1 1 1 1 1''') == '3'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 5 4 3') == '4'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''3\n2 1 5''') == '0'\nassert solution('''7\n1 1 1 1 1 1 1''') == '0'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '6'\n'''\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''3\n5 4 6''') == '2'\nassert solution('''10\n2 3 4 5 6 7 8 9 10''') == '13'\nassert solution('''100\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '2147483647'\nassert solution('''2\n1''') == '0'\n"
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 5 4 3') == '4'\nassert solution('2 1 5 4 3') == '4'\nassert solution('1 1 1 1 1') == '10'\nassert solution('2 2 2 2 2') == '20'\nassert solution('1 1 1 1 1') == '10'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('accc') == 'B'\nassert solution('aca') == 'A'\nassert solution('acac') == 'A'\nassert solution('acca') == 'A'\nassert solution('aca') == 'A'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\nassert solution('aba') == 'A'\nassert solution('acba') == 'B'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ac') == 'A'\nassert solution('ca') == 'B'\nassert solution('ca') == 'B'\nassert solution('aca') == 'A'\nassert solution('aca') == 'A'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('accc') == 'B'\nassert solution('ca') == 'C'\nassert solution('aca') == 'A'\nassert solution('acaacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacac"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('accc') == 'B'\nassert solution('cacc') == 'B'\nassert solution('cca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ccca') == 'A'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''accc\naccc\nca''') == 'A'\nassert solution('''aca\naccc\nca''') == 'A'\nassert solution('''aca\naccc\nca''') == 'A'\nassert solution('''aca\naccc\nca''') == 'A'\nassert solution('''aca\naca\nca''') == 'A'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"accc\") == \"B\"\nassert solution(\"aca\") == \"A\"\nassert solution(\"ca\") == \"C\"\nassert solution(\"aca\") == \"A\"\nassert solution(\"aca\") == \"A\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"accc\") == \"A\"\nassert solution(\"aca\") == \"A\"\nassert solution(\"ca\") == \"C\"\nassert solution(\"aca\") == \"A\"\nassert solution(\"aca\") == \"A\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"A\"\nassert solution(\"ca\") == \"B\"\nassert solution(\"ac\") == \"B\"\nassert solution(\"c\") == \"C\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 7 5') == 'NO'\nassert solution('7 5 5') == 'NO'\nassert solution('7 5 7') == 'NO'\nassert solution('7 7 5') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('4 5 7') == 'NO'\nassert solution('4 1 3') == 'NO'\nassert solution('5 2 7') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('5 7 5') == 'YES'\nassert solution('5 5 7') == 'NO'\nassert solution('1 3 3') == 'YES'\n'''"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 5 6') == 'NO'\nassert solution('5 5 5') == 'YES'\nassert solution('5 5 7') == 'NO'\nassert solution('5 5 6') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 5 7') == 'YES'\n\nassert solution('5 4 2') == 'NO'\n\nassert solution('2 2 2') == 'NO'\n\nassert solution('1 1 1') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('')\nassert solution('1 2')\nassert solution('3 4')\nassert solution('5 6 7')\nassert solution('8 9')\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"5 5 6\") == \"NO\"\nassert solution(\"5 1 5\") == \"YES\"\nassert solution(\"10 1 5\") == \"NO\"\nassert solution(\"1 5 5\") == \"YES\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a b c') == 'NO'\nassert solution('5 5 7') == 'NO'\nassert solution('5 7 7') == 'YES'\nassert solution('5 5 5') == 'NO'\nassert solution('5 5 1') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"5 5 5\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '11'\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123') == '4'\nassert solution('14') == '13'\nassert solution('11') == '5'\nassert solution('99999') == '218969799'\nassert solution('1234') == '5'\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == 11\nprint(solution('5'))\nassert solution('11') == 18\nprint(solution('11'))\nassert solution('18') == 24\nprint(solution('18'))\n\nprint('tests passed')\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('a') is None\nassert solution('0') == 2\nassert solution('1') == 1\nassert solution('2') == 3\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '11'\nassert solution('''17''') == '1377'\nassert solution('''12345''') == '3333333'\nassert solution('''42''') == '672324229'\nassert solution('''4049''') == '8888888888'\n'''\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"2\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"3\"\nassert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"5\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '11'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('5') == '11'\nassert solution('1000') == '1111'\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '11'\n'''\nThere are three ways to test solutions:\n- unittest,\n- pytest (does not require numpy),\n- any other testing libraries (e.g. pytest-mock)"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '11'\n'''"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4\\n2') == '7'\nassert solution('2\\n3\\n3') == '3'\nassert solution('4\\n4\\n4') == '8'\nassert solution('1\\n2\\n3') == '1'\nassert solution('100\\n100\\n100') == '0'\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n4\\n2') == '7'\nassert solution('7\\n4\\n2') == '10'\nassert solution('10\\n4\\n2') == '14'\nassert solution('14\\n4\\n2') == '18'\nassert solution('18\\n4\\n2') == '22'\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n4\\n2') == '7'\nassert solution('2\\n4\\n2') == '0'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n100') == '1'\nassert solution('2\\n3\\n1') == '1'\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n4\\n2') == 7\nassert solution('2\\n2\\n2') == 0\nassert solution('2\\n2\\n2\\n2') == 0\nassert solution('1\\n2\\n2') == 0\nassert solution('1\\n1\\n1') == 0\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\") == \"7\"\nassert solution(\"3 4 2\") == \"7\"\nassert solution(\"3 4 3\") == \"10\"\nassert solution(\"3 4 3 3\") == \"23\"\nassert solution(\"1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\"\nassert solution(\"3\\n4\\n2\") == \"7\"\nassert solution(\"3\\n4\\n2\") == \"7\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('1 2 3 4') == '11'\nassert solution('1 2 3 4 5') == '11'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('1 2 3') == '11'\nassert solution('1 2 3') == '11'\nassert solution('1 2 3') == '11'\nassert solution('1 2 3') == '11'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3''') == '11'\nassert solution('''2\n2 3''') == '6'\nassert solution('''3\n2 3 4''') == '10'\nassert solution('''4\n2 3 4 5''') == '12'\nassert solution('''10\n4 2 8 5 6 1 5 3 4 7 9 1 2 2''') == '220'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"11\"\nassert solution(\"1 2 3 4 5\") == \"1 2 1 2 3 1 1 2 1 2 3 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('3 2 1') == '11'\nassert solution('1 2 2') == '1'\nassert solution('1 2 3 4') == '10'\n\n\"\"\""
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('1 2 3') == '11'\nassert solution('1 1') == '0'\nassert solution('1 2 3') == '11'\n\"\"\""
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 4 3\") == \"YES\"\nassert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 3 3\") == \"NO\"\nassert solution(\"8 7 4\") == \"YES\"\nassert solution(\"8 5 5\") == \"YES\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('4 2 3') == 'NO'\nassert solution('2 3 4') == 'NO'\nassert solution('2 4 3') == 'YES'\nassert solution('1 1 1') == 'YES'\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 4\") == \"YES\"\nassert solution(\"4 3 2\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 4\") == \"NO\"\nassert solution(\"2 3 3\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"NO\"\nassert solution(\"6 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"7 3 2\") == \"YES\"\nassert solution(\"7 2 3\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 'NO'\nassert solution('4 3 2') == 'YES'\nassert solution('5 5 5') == 'YES'\nassert solution('2 2 2') == 'NO'\nassert solution('3 4 3') == 'NO'\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(\"4 3 2\") == \"YES\"\nassert solution(\"2 3 4\") == \"YES\"\nassert solution(\"2 2 4\") == \"NO\"\nassert solution(\"5 4 4\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"9 9 9\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 4 3\") == \"YES\"\nassert solution(\"5 4 2\") == \"NO\"\nassert solution(\"5 4 3\") == \"YES\"\nassert solution(\"1 4 5\") == \"NO\"\nassert solution(\"3 4 2\") == \"YES\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"5 3 11\"\n\"1\"\n) == 30"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"10 10 10\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"1 10 100\") == \"30\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '30'"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1 2 3') == '6'\nassert solution('10 9 19') == '23'\n'''\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3 11''') == '30'\nassert solution('''5 3 11''') == '30'\n'''\n\n## Solutions\n\n* RULES:\n\n- The size of the answer will be between 0 and 50.\n- The answer will be a positive integer.\n- For the case where A, B and C are the same integer, the answer will be equal to 2 * A.\n\n* SOLUTION:"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3 11''') == '30'\nassert solution('''1''') == '1'\nassert solution('''5 11 11''') == '30'\nassert solution('''1''') == '1'\nassert solution('''2 3 4''') == '10'\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3 11''') == '30'\nassert solution('''5 3 11''') == '30'\nassert solution('''5 11 3''') == '30'\nassert solution('''4 1 7''') == '8'\nassert solution('''5 11 10''') == '18'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abacabafad') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abbbccc') == 'No'\nassert solution('abbbccccccbb') == 'No'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcba') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('abcabcabca') == 'No'\nassert solution('abcabcabcaaa') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"aabbccddeeffgghhhiijjkklmmnnoppqrrrstu\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"Yes\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"aaaaaaaa\") == \"Yes\"\nassert solution(\"abccbaa\") == \"Yes\"\nassert solution(\"abccbaab\") == \"No\"\nassert solution(\"abbbcccbba\") == \"Yes\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcbcba') == 'No'\nassert solution('bab') == 'Yes'\nassert solution('bba') == 'No'\nassert solution('a') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('bcdefg') == 'No'\nassert solution('abac') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('aaabbb') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abacaba') == 'No'\nassert solution('abaccabaab') == 'Yes'\nassert solution('abaccabaabab') == 'No'\nassert solution('aaaaa') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"a\") == \"No\"\nassert solution(\"abacbaeabacbab\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abcba\") == \"Yes\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('abaccaba') == 'Yes'\nassert solution('abbb') == 'No'\nassert solution('bbaaabaa') == 'Yes'\nassert solution('bbabbbbaa') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('abacaba') == 'No'\nassert solution('abab') == 'No'\nassert solution('ababab') == 'No'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 4\n1 1\n2 2\n3 3\n\"\"\".strip()) == \"3\"\n\nassert solution(\n\"\"\"\n10 4\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n\"\"\".strip()) == \"9\"\n\nassert solution(\n\"\"\"\n10 8\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n\"\"\".strip()) == \"6\"\n\nassert solution(\n\"\"\"\n10 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n\"\"\".strip()) == \"7\"\n\nassert solution(\n\"\"\"\n10 100\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n\"\"\".strip()) == \"7\""
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 1\\n2 2\\n3 3\\n3 3\\n3 3') == '3'\nassert solution('2 3\\n2 2\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3') == '3'\nassert solution('1 4\\n1 1\\n2 2\\n3 3\\n3 3\\n3 3\\n3 3') == '3'\nassert solution('4 4\\n1 1\\n2 2\\n3 3\\n3 3\\n3 3\\n3 3') == '3'\nassert solution('10 10\\n1 1\\n2 2\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3') == '3'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''5 2\n1 1\n1 2\n2 2\n3 3\n4 4''') == '2'\nassert solution('''2 2\n1 1\n2 2\n3 3\n4 4\n5 5''') == '2'\nassert solution('''10 2\n1 1\n1 2\n2 2\n3 3\n3 4\n4 4\n4 5\n5 5\n5 6\n6 7\n7 8''') == '5'\nassert solution('''10 2\n1 1\n1 2\n2 2\n3 3\n3 4\n4 4\n4 5\n5 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '5'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 3') == '3'\nassert solution('4\\n1 1\\n2 2\\n3 3\\n4 4') == '3'\nassert solution('4\\n2 3\\n3 4\\n4 5') == '3'\nassert solution('4\\n3 4\\n1 2\\n2 3') == '2'\nassert solution('4\\n3 4\\n1 2\\n2 3\\n3 4') == '2'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)  # assert tests that both return the same result\n\"\"\"\nimport sys\nfrom heapq import heappop, heappush\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3') == '3'\nassert solution('3 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9') == '8'\nassert solution('3 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '9'\nassert solution('3 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11') == '10'\nassert solution('3 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12') == '11'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 4\n2 4\n1 5\n3 7\n2 3''') == '2'\nassert solution('''5 2\n9 7\n3 2\n7 1\n2 1''') == '1'\nassert solution('''7 1\n9 7\n3 2\n7 1\n2 1''') == '7'\nassert solution('''7 1\n5 5\n3 2\n7 1\n2 1''') == '5'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\nassert solution('4 4') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\n'''\nassert solution('''10 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''10 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"5\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 3') == '5'\nassert solution('2 1') == '3'\nassert solution('1 2') == '0'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"10 5\") == \"9\"\nassert solution(\"20 6\") == \"40\"\nassert solution(\"40 10\") == \"47\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"3 4\") == \"10\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 2') == '2'\n\"\"\""
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"10\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"3 3\") == \"36\"\nassert solution(\"5 3\") == \"132\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 4') == '14'\nassert solution('10 5') == '52'\nassert solution('100 100') == '232'\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 1') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('10 4') == '4'\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 4') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"4 2 1 3 4\") == \"3\"\nassert solution(\"2 3 4 2\") == \"3\"\nassert solution(\"1 1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''20 3\n5 10 15\n''') == '10'\nassert solution('''20 3\n5 10 15\n''') == '10'\nassert solution('''20 3\n5 10 15\n''') == '10'\nassert solution('''20 3\n5 10 15\n''') == '10'\nassert solution('''20 3\n5 10 15\n''') == '10'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 3\n5 10 15''') == '10'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nassert solution('''15 11 3\n14 4 7''') == '9'\nassert solution('''20 3\n11 15 16 17''') == '12'\nassert solution('''15 11 3\n17 13 14''') == '7'\nassert solution('''15 11 3\n1 6 11 15''') == '14'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"7 1\") == \"\"\nassert solution(\"7 1\") == \"\"\nassert solution(\"7 1\") == \"\"\nassert solution(\"7 1\") == \"\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == 10\nassert solution(\"10 10\") == 0\nassert solution(\"100 10\") == 10\nassert solution(\"1000000 10\") == 9999999\nassert solution(\"1000000 11\") == 9999999\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 3\") == \"10\"\nassert solution(\"100 10\") == \"100\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"100 9\") == \"99\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"2 3\\n1 1\") == \"0\"\nassert solution(\"1000000000 2\") == \"999999999\"\nassert solution(\"1000000000 2\\n1000000000 1\") == \"9999999999\"\nassert solution(\"1000 4\\n1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5 2 7''') == '15'\nassert solution('''3 5 2 7''') == '15'\nassert solution('''3 1 4 2''') == '2'\nassert solution('''5 3 4 1''') == '2'\nassert solution('''3 1 4 2''') == '2'\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[10:]"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()[-1]\nassert solution(stdin) == stdin.split()[-1]\nassert solution(stdin) == stdin.split()[-1]\nassert solution(stdin) == stdin.split()[-1]\nassert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"3 5 7 2\") == \"15\"\nassert solution(\"3 5 7 2\") == \"15\"\nassert solution(\"3 6 5 7\") == \"15\"\nassert solution(\"1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 4 4 3') == '12'\nassert solution('4 4 5 5') == '10'\nassert solution('3 3 2 3') == '4'\nassert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"3 4 2 3\") == \"8\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"2 5 4 5\") == \"10\"\nassert solution(\"1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('2 3 4 5') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 2 3 4') == '4'\nassert solution('2 2 4 4') == '2'\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\n\"\"\""
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"15\"\nassert solution(stdin) == \"14\"\nassert solution(stdin) == \"13\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AC') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('WA') == 'AC x 0\\nWA x 1\\nTLE x 0\\nRE x 0'\nassert solution('AC\\nTLE') == 'AC x 1\\nWA x 0\\nTLE x 1\\nRE x 0'\nassert solution('AC\\nTLE\\nAC\\nAC') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('AC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\nAC\\"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\n'''\n\n'''\nAC x 3\nWA x 1\nTLE x 2\nRE x 0\n'''\n\n'''\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''AC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''AC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''AC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''AC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n'''"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AC') == 'AC x 3\\n'\nassert solution('TLE') == 'TLE x 1\\n'\nassert solution('RE') == 'RE x 0\\n'\nassert solution('WA') == 'WA x 1\\n'\n'''"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AC') == 'AC x 3'\nassert solution('TLE') == 'TLE x 2'\nassert solution('AC') == 'AC x 3'\nassert solution('WA') == 'WA x 1'\nassert solution('TLE') == 'TLE x 2'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('AC') == 'AC x 3'\nassert solution('WA') == 'WA x 1'\nassert solution('TLE') == 'TLE x 2'\nassert solution('RE') == 'RE x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''AC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('''AC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AC\\nAC\\nAC\\nAC\\nAC\\nAC') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AC') == 'AC x 3'\nassert solution('TLE') == 'TLE x 1'\nassert solution('AC') == 'AC x 1'\nassert solution('AC') == 'AC x 1'\nassert solution('WA') == 'WA x 0'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\">24\") == \"0\"\nassert solution(\"24\") == \"1\"\nassert solution(\"22\") == \"1\"\nassert solution(\"23\") == \"2\"\nassert solution(\"24\") == \"3\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == \"27\"\nassert solution('''10''') == \"18\"\nassert solution('''32''') == \"10\"\nassert solution('''42''') == \"13\"\nassert solution('''99''') == \"69\"\n\nprint(\"All test cases passed successfully!\")\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('21') == '27'\nassert solution('23') == '0'\nassert solution('24') == '1'\nassert solution('25') == '2'\nassert solution('26') == '3'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(0) == \"25\"\nassert solution(1) == \"31\"\nassert solution(2) == \"39\"\nassert solution(3) == \"46\"\nassert solution(4) == \"54\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('21') == '27'\n\nprint(solution(input()))\n\n'''"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0''') == 0\nassert solution('''12''') == 12\nassert solution('''24''') == 24\nassert solution('''36''') == 36\nassert solution('''40''') == 40\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('21') == '27'\nassert solution('5') == '6'\nassert solution('2') == '3'\nassert solution('2') == '3'\nassert solution('23') == '24'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('25') == None\nassert solution('21') == '27'\nassert solution('60') == '127'\nassert solution('84') == '185'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '1'\nassert solution(3) == '2'\nassert solution(4) == '3'\nassert solution(5) == '4'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '1'\nassert solution(3) == '2'\nassert solution(4) == '3'\nassert solution(5) == '4'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 5') == '9'\nassert solution('10 10') == 'error'\nassert solution('100 9') == 'error'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '9'\nassert solution(input()) == 'error'\nassert solution(input()) == '9'\nassert solution(input()) == 'error'\nassert solution(input()) == '9'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3') == '9'\nassert solution('7 2') == '10'\nassert solution('7 4') == '10'\nassert solution('10 22') == 'error'"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 1') == '3'\nassert solution('2 2') == '4'\nassert solution('2 3') == 'error'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 3') == '9'\nassert solution('-10 2') == 'error'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == '5'\nassert solution('9 3') == 'error'\nassert solution('3 3') == '6'\nassert solution('1 1') == '2'\nassert solution('0 1') == '1'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 2') == '3'\nassert solution('1 2') == '3'\nassert solution('1 2') == '3'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"2 3 7\") == \"7\"\nassert solution(\"2 3 7 9 9\") == \"2\"\nassert solution(\"2 3 7 9 9 9\") == \"2\"\nassert solution(\"2 3 7 9 9 9 9\") == \"0\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\"\nassert solution(\"3\\n2 1 1\") == \"1\"\nassert solution(\"2\\n1 1\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 7 9') == 7\nassert solution('1 2 3 4') == 4\nassert solution('9 9 9 9') == 0\nassert solution('1 2 3 4 5 6 7 8 9') == 7\nassert solution('1 2 3 4 5 6 7 8 9 10') == 8\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2 3 7 9\n''') == '7'\nassert solution('''9\n7 6 2 1 4 3 8 5 9\n''') == '9'\nassert solution('''4\n1 4 2 3\n''') == '0'\nassert solution('''8\n1 4 2 3 6 7 8 9 10 11\n''') == '4'\nassert solution('''10\n1 4 2 3 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32\n''') == '1'\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"2 3 7 9 10\") == \"11\"\nassert solution(\"2 3 7 9 10 11\") == \"12\"\nassert solution(\"2 3 7 9 10 11 12\") == \"13\"\nassert solution(\"2 3 7 9 10 11 12 13\") == \"14\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 3 7 9''') == \"7\"\nassert solution('''6\n4 10 20 30 40 50 60''') == \"5\"\nassert solution('''7\n1 2 3 4 5 6 7''') == \"0\"\nassert solution('''8\n3 3 3 3 3 3 3 3''') == \"3\"\nassert solution('''8\n1 1 1 1 1 1 1 1''') == \"0\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 7 9\\n') == '7'\nassert solution('5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n5 5 5 5 5\\n') == '0'\nassert solution('5\\n0 1 2 3 4\\n') == '-1'\nassert solution('5\\n0 0 1 2 3\\n') == '-1'\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"\"\""
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 7 9') == '7'\nassert solution('4\\n1 1 1 1') == '4'\nassert solution('4\\n2 1 1 1') == '3'\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10 10') == '0'\nassert solution('4\\n1 0 0 0') == '0'\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 7 9') == '7'\nassert solution('2 3 8 9') == '5'\nassert solution('2 3 9 8') == '7'\nassert solution('2 3 9') == '5'\nassert solution('2 3') == '0'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1, 3) == \"Yes\"\nassert solution(1, 4) == \"No\"\nassert solution(2, 2) == \"Yes\"\nassert solution(2, 3) == \"Yes\"\nassert solution(2, 4) == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 3 3\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 11\") == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 3''') == 'Yes'\nassert solution('''1 4''') == 'No'\nassert solution('''3 1''') == 'Yes'\nassert solution('''7 3''') == 'Yes'\nassert solution('''1 7''') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('4 5') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 4') == 'Yes'\nassert solution('2 5') == 'No'\nassert solution('3 4') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1, 3) == \"Yes\"\nassert solution(2, 2) == \"No\"\nassert solution(3, 3) == \"Yes\"\nassert solution(4, 4) == \"No\"\nassert solution(5, 5) == \"Yes\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1, 3) == \"Yes\"\nassert solution(1, 2) == \"No\"\nassert solution(11, 2) == \"No\"\nassert solution(2, 12) == \"Yes\"\nassert solution(2, 5) == \"Yes\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(solution('''1 3''')) == 'Yes'\nassert solution(solution('''2 5''')) == 'No'\nassert solution(solution('''1 11''')) == 'Yes'\nassert solution(solution('''2 13''')) == 'No'\nassert solution(solution('''3 7''')) == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('1 3') == 'Yes'\nassert solution('1 4') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('3 4') == 'No'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'Even'\nassert solution('1 3') == 'Even'\nassert solution('2 3') == 'Odd'\nassert solution('2 3') == 'Odd'\nassert solution('3 4') == 'Even'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output\n\n'''\n\n'''\n\nTest Case 1\n\nTest Case 2\n\nTest Case 3\n\nTest Case 4\n\nTest Case 5\n\nTest Case 6\n\nTest Case 7\n\nTest Case 8\n\nTest Case 9\n\nTest Case 10\n\nTest Case 11\n\nTest Case 12\n\nTest Case 13\n\nTest Case 14\n\nTest Case 15\n\nTest Case 16\n\nTest Case 17\n\nTest Case 18\n\nTest Case 19\n\nTest Case 20\n\nTest Case 21\n\nTest Case 22\n\nTest Case 23\n\nTest Case 24\n\nTest Case 25\n\nTest Case 26\n\nTest Case 27\n\nTest Case 28\n\nTest Case 29\n\nTest Case 30\n\nTest Case 31\n\nTest Case 32\n\nTest Case 33\n\nTest Case 34\n\nTest Case 35\n\nTest Case 36\n\nTest Case 37\n\nTest Case 38\n\nTest Case 39\n\nTest Case 40\n\nTest Case 41\n\nTest Case 42\n\nTest Case 43\n\nTest Case 44\n\nTest Case 45\n\nTest Case 46\n\nTest Case 47\n\nTest Case 48\n\nTest Case 49\n\nTest Case 50\n\nTest Case 51\n\nTest Case 52\n\nTest Case 53\n\nTest Case 54\n\nTest Case 55\n\nTest Case 56\n\nTest Case 57\n\nTest Case 58\n\nTest Case 59\n\nTest Case 60\n\nTest Case 61\n\nTest Case 62\n\nTest Case 63\n\nTest Case 64\n\nTest Case 65\n\nTest Case 66\n\nTest Case 67\n\nTest Case 68\n\nTest Case 69\n\nTest Case 70\n\nTest Case 71\n\nTest Case 72\n\nTest Case 73\n\nTest Case 74\n\nTest Case 75\n\nTest Case 76\n\nTest Case 77\n\nTest Case 78\n\nTest Case 79\n\nTest Case 80\n\nTest Case 81\n\nTest Case 82\n\nTest Case 83\n\nTest Case 84\n\nTest Case 85\n\nTest Case 86\n\nTest Case 87\n\nTest Case 88\n\nTest Case 89\n\nTest Case 90\n\nTest Case 91\n\nTest Case 92\n\nTest Case 93\n\nTest Case 94\n\nTest Case 95\n\nTest Case 96\n\nTest Case 97\n\nTest Case 98\n\nTest Case 99\n\nTest Case 100\n\nTest Case 101\n\nTest Case 102\n\nTest Case 103\n\nTest Case 104\n\nTest Case 105\n\nTest Case 106\n\nTest Case 107\n\nTest Case 108\n\nTest Case 109\n\nTest Case 110\n\nTest Case 111\n\nTest Case 112\n\nTest Case 113\n\nTest Case 114\n\nTest Case 115\n\nTest Case 116\n\nTest Case 117\n\nTest Case 118\n\nTest Case 119\n\nTest Case 120\n\nTest Case 121\n\nTest Case 122\n\nTest Case 123\n\nTest Case 124\n\nTest Case 125\n\nTest Case 126\n\nTest Case 127\n\nTest Case 128\n\nTest Case 129\n\nTest Case 130\n\nTest Case 131\n\nTest Case 132\n\nTest Case 133\n\nTest Case 134\n\nTest Case 135\n\nTest Case 136\n\nTest Case 137\n\nTest Case 138\n\nTest Case 139\n\nTest Case 140\n\nTest Case 141\n\nTest Case 142\n\nTest Case 143\n\nTest Case 144\n\nTest Case 145\n\nTest Case 146\n\nTest Case 147\n\nTest Case 148\n\nTest Case 149\n\nTest Case 150\n\nTest Case 151\n\nTest Case 152\n\nTest Case 153\n\nTest Case 154\n\nTest Case 155\n\nTest Case 156\n\nTest Case 157\n\nTest Case 158\n\nTest Case 159\n\nTest Case 160\n\nTest Case 161\n\nTest Case 162\n\nTest Case 163\n\nTest Case 164\n\nTest Case 165\n\nTest Case 166\n\nTest Case 167\n\nTest Case 168\n\nTest Case 169\n\nTest Case 170\n\nTest Case 171\n\nTest Case 172\n\nTest Case 173\n\nTest Case 174\n\nTest Case 175\n\nTest Case 176\n\nTest Case 177\n\nTest Case 178\n\nTest Case 179\n\nTest Case 180\n\nTest Case 181\n\nTest Case 182\n\nTest Case 183\n\nTest Case 184\n\nTest Case 185\n\nTest Case 186\n\nTest Case 187\n\nTest Case 188\n\nTest Case 189\n\nTest Case 190\n\nTest Case 191\n\nTest Case 192\n\nTest Case 193\n\nTest Case 194\n\nTest Case 195\n\nTest Case 196\n\nTest Case 197\n\nTest Case 198\n\nTest Case 199\n\nTest Case 200\n\nTest Case 201\n\nTest Case 202\n\nTest Case 203\n\nTest Case 204\n\nTest Case 205\n\nTest Case 206\n\nTest Case 207\n\nTest Case 208\n\nTest Case 209\n\nTest Case 210\n\nTest Case 211\n\nTest Case 212\n\nTest Case 213\n\nTest Case 214\n\nTest Case 215\n\nTest Case 216\n\nTest Case 217\n\nTest Case 218\n\nTest Case 219\n\nTest Case 220\n\nTest Case 221\n\nTest Case 222\n\nTest Case 223\n\nTest Case 224\n\nTest Case 225\n\nTest Case 226\n\nTest Case 227\n\nTest Case 228\n\nTest Case 229\n\nTest Case 230\n\nTest Case 231\n\nTest Case 232\n\nTest Case 233\n\nTest Case 234\n\nTest Case 235\n\nTest Case 236\n\nTest Case 237\n\nTest Case 238\n\nTest Case 239\n\nTest Case 240\n\nTest Case 241\n\nTest Case 242\n\nTest Case 243\n\nTest Case 244\n\nTest Case 245\n\nTest Case 246\n\nTest Case 247\n\nTest Case 248\n\nTest Case 249\n\nTest Case 250\n\nTest Case 251\n\nTest Case 252\n\nTest Case 253\n\nTest Case 254\n\nTest Case 255\n\nTest Case 256\n\nTest Case 257\n\nTest Case 258\n\nTest Case 259\n\nTest Case 260\n\nTest Case 261\n\nTest Case 262\n\nTest Case 263\n\nTest Case 264\n\nTest Case 265\n\nTest Case 266\n\nTest Case 267\n\nTest Case 268\n\nTest Case 269\n\nTest Case 270\n\nTest Case 271\n\nTest Case 272\n\nTest Case 273\n\nTest Case 274\n\nTest Case 275\n\nTest Case 276\n\nTest Case 277\n\nTest Case 278\n\nTest Case 279\n\nTest Case 280\n\nTest Case 281\n\nTest Case 282\n\nTest Case 283\n\nTest Case 284\n\nTest Case 285\n\nTest Case 286\n\nTest Case 287\n\nTest Case 288\n\nTest Case 289\n\nTest Case 290\n\nTest Case 291\n\nTest Case 292\n\nTest Case 293\n\nTest Case 294\n\nTest Case 295\n\nTest Case 296\n\nTest Case 297\n\nTest Case 298\n\nTest Case 299\n\nTest Case 300\n\nTest Case 301\n\nTest Case 302\n\nTest Case 303\n\nTest Case 304\n\nTest Case 305\n\nTest Case 306\n\nTest Case 307\n\nTest Case 308\n\nTest Case 309\n\nTest Case 310\n\nTest Case 311\n\nTest Case 312\n\nTest Case 313\n\nTest Case 314\n\nTest Case 315\n\nTest Case 316\n\nTest Case 317\n\nTest Case 318\n\nTest Case 319\n\nTest Case 320\n\nTest Case 321\n\nTest Case 322\n\nTest Case 323\n\nTest Case 324\n\nTest Case 325\n\nTest Case 326\n\nTest Case 327\n\nTest Case 328\n\nTest Case 329\n\nTest Case 330\n\nTest Case 331\n\nTest Case 332\n\nTest Case 333\n\nTest Case 334\n\nTest Case 335\n\nTest Case 336\n\nTest Case 337\n\nTest Case 338\n\nTest Case 339\n\nTest Case 340\n\nTest Case 341\n\nTest Case 342\n\nTest Case 343\n\nTest Case 344\n\nTest Case 345\n\nTest Case 346\n\nTest Case 347\n\nTest Case 348\n\nTest Case 349\n\nTest Case 350\n\nTest Case 351\n\nTest Case 352\n\nTest Case 353\n\nTest Case 354\n\nTest Case 355\n\nTest Case 356\n\nTest Case 357\n\nTest Case 358\n\nTest Case 359\n\nTest Case 360\n\nTest Case 361\n\nTest Case 362\n\nTest Case 363\n\nTest Case 364\n\nTest Case 365\n\nTest Case 366\n\nTest Case 367\n\nTest Case 368\n\nTest Case 369\n\nTest Case 370\n\nTest Case 371\n\nTest Case 372\n\nTest Case 373\n\nTest Case 374"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4\\n') == 'Even'\nassert solution('1 3\\n') == 'Odd'\nassert solution('1 1\\n') == 'Even'\nassert solution('3 4\\n') == 'Even'\nassert solution('1 3\\n') == 'Odd'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"2 4\") == \"Odd\"\nassert solution(\"3 4\") == \"Odd\"\nassert solution(\"4 7\") == \"Odd\"\nassert solution(\"4 5\") == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Even'\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"1 2\") == \"Even\"\nassert solution(\"3 4\") == \"Even\"\nassert solution(\"1 2\") == \"Even\"\nassert solution(\"1 2\") == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4') == 'Even'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == \"Even\"\nassert solution('3 4') == \"Odd\"\nassert solution('3 4') == \"Even\"\nassert solution('2 2') == \"Even\"\nassert solution('1 1') == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4') == 'Even'\nassert solution('3 4') == 'Odd'\nassert solution('3 2') == 'Even'\nassert solution('3 7') == 'Odd'\nassert solution('3 4') == 'Even'\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"1 6\") == \"2\"\nassert solution(\"2 5\") == \"1\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"1 100\") == \"2\"\nassert solution(\"1 1000\") == \"2\"\nassert solution(\"1 10000\") == \"2\""
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"1 6\"\n) == \"2\"\nassert solution(\n\"3 4\"\n) == \"1\"\nassert solution(\n\"7 10\"\n) == \"3\"\nassert solution(\n\"9 11\"\n) == \"1\"\nassert solution(\n\"12 13\"\n) == \"2\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 6') == '2'\nassert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('4 3') == '2'\nassert solution('9 7') == '3'\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 6') == '2'\nassert solution('2 5') == '4'\nassert solution('2 5') == '4'\nassert solution('2 6') == '2'\nassert solution('2 8') == '4'\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 6') == '2'\n\n\"\"\"\n\n\"\"\"\nScc groups are defined as connected components in a directed graph. \nThis problem is a variation of the problem Find Minimum Number of Vertices to Remove to Make Graph Connected\n\n\"\"\"\n\nimport sys\nfrom typing import List\n\nclass Solution:\n    def solve(self, stdin: List[str]) -> None:\n        \"\"\"\n        Args:\n            stdin: list[str]\n        \"\"\"\n        N, M = map(int, stdin.pop(0).split())\n        \n        for _ in range(M):\n            u, v = map(int, stdin.pop(0).split())\n\nassert Solution().solve(stdin = [\n    '1 6',\n    '1 2',\n    '1 3',\n    '1 4',\n    '1 5',\n    '2 5',\n    '3 4',\n    '4 5',\n    '5 6',\n    '5 7',\n    '5 8',\n    '5 9',\n    '6 7',\n    '6 8',\n    '7 8',\n    '8 9',\n    '9 10',\n    '9 11',\n    '11 12',\n    '12 13',\n    '12 14',\n    '12 15',\n    '13 15',\n    '15 16',\n    '15 17',\n    '15 18',\n    '15 19',\n    '15 20',\n    '15 21',\n    '15 22',\n    '15 23',\n    '15 24',\n    '15 25',\n    '15 26',\n    '15 27',\n    '15 28',\n    '15 29',\n    '15 30',\n    '15 31',\n    '15 32',\n    '15 33',\n    '15 34',\n    '15 35',\n    '15 36',\n    '15 37',\n    '15 38',\n    '15 39',\n    '15 40',\n    '15 41',\n    '15 42',\n    '15 43',\n    '15 44',\n    '15 45',\n    '15 46',\n    '15 47',\n    '15 48',\n    '15 49',\n    '15 50',\n    '15 51',\n    '15 52',\n    '15 53',\n    '15 54',\n    '15 55',\n    '15 56',\n    '15 57',\n    '15 58',\n    '15 59',\n    '15 60',\n    '15 61',\n    '15 62',\n    '15 63',\n    '15 64',\n    '15 65',\n    '15 66',\n    '15 67',\n    '15 68',\n    '15 69',\n    '15 70',\n    '15 71',\n    '15 72',\n    '15 73',\n    '15 74',\n    '15 75',\n    '15 76',\n    '15 77',\n    '15 78',\n    '15 79',\n    '15 80',\n    '15 81',\n    '15 82',\n    '15 83',\n    '15 84',\n    '15 85',\n    '15 86',\n    '15 87',\n    '15 88',\n    '15 89',\n    '15 90',\n    '15 91',\n    '15 92',\n    '15 93',\n    '15 94',\n    '15 95',\n    '15 96',\n    '15 97',\n    '15 98',\n    '15 99',\n    '15 100',\n    '15 101',\n    '15 102',\n    '15 103',\n    '15 104',\n    '15 105',\n    '15 106',\n    '15 107',\n    '15 108',\n    '15 109',\n    '15 110',\n    '15 111',\n    '15 112',\n    '15 113',\n    '15 114',\n    '15 115',\n    '15 116',\n    '15 117',\n    '15 118',\n    '15 119',\n    '15 120',\n    '15 121',\n    '15 122',\n    '15 123',\n    '15 124',\n    '15 125',\n    '15 126',\n    '15 127',\n    '15 128',\n    '15 129',\n    '15 130',\n    '15 131',\n    '15 132',\n    '15 133',\n    '15 134',\n    '15 135',\n    '15 136',\n    '15 137',\n    '15 138',\n    '15 139',\n    '15 140',\n    '15 141',\n    '15 142',\n    '15 143',\n    '15 144',\n    '15 145',\n    '15 146',\n    '15 147',\n    '15 148',\n    '15 149',\n    '15 150',\n    '15 151',\n    '15 152',\n    '15 153',\n    '15 154',\n    '15 155',\n    '15 156',\n    '15 157',\n    '15 158',\n    '15 159',\n    '15 160',\n    '15 161',\n    '15 162',\n    '15 163',\n    '15 164',\n    '15 165',\n    '15 166',\n    '15 167',\n    '15 168',\n    '15 169',\n    '15 170',\n    '15 171',\n    '15 172',\n    '15 173',\n    '15 174',\n    '15 175',\n    '15 176',\n    '15 177',\n    '15 178',\n    '15 179',\n    '15 180',\n    '15 181',\n    '15 182',\n    '15 183',\n    '15 184',\n    '15 185',\n    '15 186',\n    '15 187',\n    '15 188',\n    '15 189',\n    '15 190',\n    '15 191',\n    '15 192',\n    '15 193',\n    '15 194',\n    '15 195',\n    '15 196',\n    '15 197',\n    '15 198',\n    '15 199',\n    '15 200',\n    '15 201',\n    '15 202',\n    '15 203',\n    '15 204',\n    '15 205',\n    '15 206',\n    '15 207',\n    '15 208',\n    '15 209',\n    '15 210',\n    '15 211',\n    '15 212',\n    '15 213',\n    '15 214',\n    '15 215',\n    '15 216',\n    '15 217',\n    '15 218',\n    '15 219',\n    '15 220',\n    '15 221',\n    '15 222',\n    '15 223',\n    '15 224',\n    '15 225',\n    '15 226',\n    '15 227',\n    '15 228',\n    '15 229',\n    '15 230',\n    '15 231',\n    '15 232',\n    '15 233',\n    '15 234',\n    '15 235',\n    '15 236',\n    '15 237',\n    '15 238',\n    '15 239',\n    '15 240',\n    '15 241',\n    '15 242',\n    '15 243',\n    '15 244',\n    '15 245',\n    '15 246',\n    '15 247',\n    '15 248',\n    '15 249',\n    '15 250',\n    '15 251',\n    '15 252',\n    '15 253',\n    '15 254',\n    '15 255',\n    '15 256',\n    '15 257',\n    '15 258',\n    '15 259',\n    '15 260',\n    '15 261',\n    '15 262',\n    '15 263',\n    '15"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 6\") == \"2\"\nassert solution(\"1 6\") == \"2\"\nassert solution(\"2 6\") == \"2\"\nassert solution(\"1 10\") == \"3\"\nassert solution(\"3 10\") == \"3\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 6') == '2'\nassert solution('5 6') == '1'\nassert solution('8 2') == '0'\nassert solution('5 2') == '1'\nassert solution('8 2') == '1'\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 6') == '2'\nassert solution('2 6') == '2'\nassert solution('1 7') == '2'\nassert solution('1 8') == '2'\nassert solution('1 9') == '2'\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 6') == '2'\nassert solution('1 6') == '2'\nassert solution('2 5') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n1 1\n2 3\"\"\") == \"6\"\nassert solution(\"\"\"3\n2 1 4\n2\n1 1\n2 3\"\"\") == \"9\"\nassert solution(\"\"\"8\n4 1 1 3 2 1 1\n4\n2 1 1 1 1 1\"\"\") == \"8\"\n\"\"\"\nYou are the leader of a small village called \"Village 1\".\nThe village is in a state of constant ruin.\nThe leader wants to avoid the village, and he has decided that\nevery citizen in the village is considered to be a spoiled one, and\nhe will pay a penalty to them. The leader wants to know the time it\ntakes for a scholar to solve all the problems in the village.\n\nInput\n\nThe first line contains two integers N and M\n- the number of problems and the number of drinks offered\n- the number of problems and the number of times each drink is offered\n\nThe next M lines each contain two integers X and P\n- the number of seconds that the scholar takes to solve each problem\n- the time in seconds that the scholar takes to solve each problem\n\nOutput\n\nPrint the number of seconds it takes for a scholar to solve all the problems\n\nConstraints\n\nN\u2264100\nM\u2264100\n1\u2264P\u2264N\n1\u2264X\u226410^5\n\nIf the problem is unsolvable, print IMPOSSIBLE\n\nSample Input\n\n3 2\n1 1\n2 3\n2 1\n\nSample Output\n\n6\n\nIf the problem is unsolvable, print IMPOSSIBLE\n\"\"\"\n\n\"\"\"\nN=3\nM=2\nP1=1\nP2=3\nX1=1\nX2=1\n\nP2=1\nX2=3\n\nP1=2\nX1=1\n\nP1=2\nX1=1\n\nP1=1\nX1=1\n\nP2=3\nX2=3\n\nP1=2\nX1=1\n\nP1=1\nX1=1\n\nP2=1\nX2=1\n\nP1=3\nX1=3\n\nP2=1\nX2=1\n\nP1=2\nX1=1\n\nP1=1\nX1=1\n\nP2=3\nX2=3\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1\nX1=1\n\nP1=1"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9\\n9'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9\\n9\\n9'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1\\n2 3\\n2 1 4\\n2\\n1 1"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2 1 4\") == \"9\"\nassert solution(\"2\") == \"9\"\nassert solution(\"1 1\") == \"9\"\nassert solution(\"2 3\") == \"9\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n1 1\\n1 2\") == \"6\"\nassert solution(\"2\\n2\\n1 3\\n2 1\") == \"9\"\nassert solution(\"2\\n2\\n1 1\\n2 3\") == \"6\"\nassert solution(\"3\\n3\\n1 3\\n2 3\\n3 1\") == \"9\"\nassert solution(\"3\\n3\\n1 3\\n2 4\\n3 1\") == \"9\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\nassert solution('4\\n3 2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\n\"\"\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9'\nassert solution('''3\n2 2 5\n2\n1 2\n2 3''') == '6\\n9'\nassert solution('''3\n3 2 5\n3\n1 1 1\n2 3''') == '6\\n9'\nassert solution('''3\n5 2 5\n2\n1 2\n2 3''') == '6\\n9'\nassert solution('''3\n4 2 5\n2\n1 1 2\n2 3''') == '6\\n9'\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n1 1\n2 3''') == \"6\\n9\"\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == \"6\\n9\"\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == \"6\\n9\"\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == \"6\\n9\"\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == \"6\\n9\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2 1 4\") == \"9\"\nassert solution(\"2\") == \"9\"\nassert solution(\"1 1\") == \"9\"\nassert solution(\"2 3\") == \"9\"\n\n\"\"\""
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1') == '0'\nassert solution('123456789') == '0'\nassert solution('12') == '0'\nassert solution('123') == '100'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1 3 4 5 6 7 8\") == \"2000\"\nassert solution(\"1 3 4 5 6\") == \"2000\"\nassert solution(\"1 3 4 5\") == \"2000\"\nassert solution(\"1 3 4\") == \"2000\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000 8') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1000 8\n1 3 4 5 6 7 8 9''') == '2000'\n'''\nThe first line contains the number of test cases, T. T test cases follow. Each test case contains two lines of input. The first line contains two integers, N and K. The second line contains K digits that she dislikes, D_1, D_2, \u2026, D_K.\n\nFor each test case, find the minimum amount of money that Iroha will hand to the cashier.\n\n'''\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\n\"\"\""
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"4 1 3 5 7 9 2\") == \"4\"\nassert solution(\"6 8 9 10 11 12 13 14 15 16\") == \"0\"\nassert solution(\"5 1 3 4 7 9\") == \"10\"\nassert solution(\"12 10 11 13 14 15 16 17 18 19\") == \"0\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"1234 8\") == \"5000\"\nassert solution(\"1234 3\") == \"2000\"\nassert solution(\"1234 6\") == \"4000\"\nassert solution(\"1134 9\") == \"6000\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\nprint(solution(stdin))\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1000 8\n1 3 4 5 6 7 8 9''') == '2000'\nassert solution('''1000 6\n1 3 4 5 6 7 8 9''') == '2000'\nassert solution('''1000 5\n1 3 4 5 6 7 8 9''') == '2000'\nassert solution('''1000 5\n2 1 5 4 3 6 7 8 9''') == '2000'\nassert solution('''1000 5\n2 3 5 4 1 6 7 8 9''') == '2000'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('1 2 3 4\\n1 3\\n2 3\\n2 4\\n3 4') == '2'\nassert solution('1 2 3 4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '2'\nassert solution('1 2 3 4\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n3 4\\n3 5') == '1'\nassert solution('1 2 3 4\\n1 3\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '1'\nassert solution('1\\n2\\n2') == '0'\nassert solution('1\\n2\\n2\\n1') == '0'\nassert solution('1\\n2\\n2\\n2') == '0'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\nassert solution('1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('2 3\\n1 3\\n2 3\\n2 4\\n') == '2'\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom itertools import combinations"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n'''\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == \"2\"\nassert solution('3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == \"2\"\nassert solution('5 10\\n2 3 4 5 6 7 8 9 10\\n3 4\\n1 2\\n1 3\\n4 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n4 5') == \"9\"\nassert solution('5 10\\n2 3 4 5 6 7 8 9 10\\n3 4\\n1 2\\n1 3\\n4 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n4 5') == \"9\"\nassert solution('3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n1 3\\n2 3') == \"2\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('0 1') == 0\nassert solution('2 1') == 0\nassert solution('2 1 1') == 0\nassert solution('3 1') == 0\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '4 3\\n'\n    '1 2 3 4\\n'\n    '1 3\\n'\n    '2 3\\n'\n    '2 4\\n'\n) == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''4 4\n1 2 3 4\n1 3\n2 3\n2 4\n3 4\n''') == '4'\n'''\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().strip().split())\nheights = sorted(map(int, sys.stdin.readline().strip().split()))\n\ngoods = set()\nfor _ in range(M):\n    A, B = map(int, sys.stdin.readline().strip().split())\n    goods.add(A)\n    goods.add(B)\n\ncnt = 0\nfor h in heights:\n    if h in goods:\n        cnt += 1\nprint(cnt)\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\\n1 3\\n2 3\\n2 4\\n2 3\\n1 3\\n1 4\\n\") == \"2\"\nassert solution(\"1 2 3 4\\n1 3\\n2 3\\n2 4\\n2 3\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n1 3\\n1 4\\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('1 2\\n1 3\\n2 3\\n2 4\\n') == '2'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n\") == \"4\"\nassert solution(\"1\\n1\\n\") == \"2\"\nassert solution(\"2\\n3\\n\") == \"4\"\nassert solution(\"4\\n3\\n\") == \"8\"\nassert solution(\"10\\n5\\n\") == \"15\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3') == '10'\n\"\"\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '10'\nassert solution('3\\n2\\n') == '10'\nassert solution('10\\n2\\n') == '10'\nassert solution('10\\n3\\n') == '10'\nassert solution('10\\n3\\n') == '10'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n') == '10'\nassert solution('2\\n3\\n') == '10'\nassert solution('1\\n1\\n') == '5'\nassert solution('10\\n3\\n') == '55'\nassert solution('10\\n3\\n') == '55'\n\"\"\"\n\nN, K = list(map(int, stdin.split()))\nprint(N * (2 * K + 1))"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n3') == '10'\nassert solution('2\\n4') == '8'\nassert solution('2\\n6') == '12'\nassert solution('2\\n9') == '14'\nassert solution('2\\n8') == '16'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3') == '10'\nassert solution('2\\n3') == '10'\nassert solution('2\\n3\\n3') == '10'\nassert solution('1\\n3\\n3') == '10'\nassert solution('2\\n3\\n3\\n3') == '10'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3') == '10'\nassert solution('3\\n3') == '3'\nassert solution('6\\n2') == '12'\nassert solution('9\\n3') == '16'\nassert solution('1\\n4') == '2'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4\n3\n''') == '10'\n\nassert solution(\n'''\n3\n2\n''') == '6'\n\nassert solution(\n'''\n2\n2\n''') == '4'\n\nassert solution(\n'''\n1\n2\n''') == '3'\n\nassert solution(\n'''\n1\n1\n''') == '1'"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"2\"\nassert solution(\"1\\n3\\n\") == \"4\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"2\"\nassert solution(\"2\\n2\\n\") == \"1\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == '0'\nassert solution(0) == '1'\nassert solution(0.2) == '0'\nassert solution(0.3) == '1'\nassert solution(0.5) == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"0.1\") == \"1\"\nassert solution(\"0.2\") == \"0\"\nassert solution(\"0.01\") == \"0\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 0\nassert solution(\"0\") == 1\nassert solution(\"0.000000001\") == 0\nassert solution(\"0.1\") == 0\nassert solution(\"0.5\") == 1\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"0.5\") == 1\nassert solution(\"0.6\") == 0\nassert solution(\"0.999999\") == 0\nassert solution(\"1\") == 1\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('0.999') == '0'\nassert solution('0.999') == '0'\nassert solution('0') == '0'\nassert solution('0.99') == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\nassert solution('0.1') == '1'\nassert solution('0.0') == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(0) == 0\n\nassert solution('0') == 1\nassert solution('0.1') == 0\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"0.5\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('0.0000000001') == '0'\nassert solution('0.00000000010000') == '0'\nassert solution('0.00000000000000000000001') == '0'\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"176\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\nassert solution('9') == '0'\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('125') == '176'\nassert solution('125++5') == '176'\nassert solution('123+4-1+2') == '175'\nassert solution('12-3-2+1') == '16'\nassert solution('1+2+3') == '6'\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+2+5\") == \"8\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\nprint('Testcases passed')\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\nprint('Test case passed')\n\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('12') == 6\nassert solution('1234') == 12\nassert solution('123450') == 18\nassert solution('123450+') == 18\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('125') == '176'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\nassert solution('1+2+5+6+7+8') == '49'\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"1+2+5\") == \"8\"\nassert solution(\"12+1+5\") == \"17\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6 9\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7\") == \"0\"\nassert solution(\"2 2 2 2 2 2 2\") == \"0\"\nassert solution(\"2 2 2 2 2 2 3\") == \"3\"\n\"\"\""
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 2 3 4 5 6''') == 1\nassert solution('''6\n1 1 1 1 1 1''') == 0\nassert solution('''10\n2 2 2 2 2 2 2''') == 5\n''') == 2\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6') == '1'\nassert solution('1 2 3 4 5 6 7') == '1'\nassert solution('1 2 3 4 5 6 7 8') == '1'\nassert solution('1 2 3 4 5 6 7 8 9') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n1 2 3 4 5 6\n''') == '1'\nassert solution('''3\n3\n4\n2\n1\n5\n''') == '2'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution('''2\n2\n2\n1\n1\n2\n2\n2\n1\n1\n''') == '2'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == '5'\n'''\n'''\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '2'\nassert solution('5\\n1 2 3 4 5') == '1'\nassert solution('1\\n1') == '0'\nassert solution('7\\n5 1 3 4 5 6 7') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('2 1') == '0'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n1 2 3 4 5 6''') == '1'\nassert solution('''3\n1 2 3''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''3\n5 9 10 6''') == '2'\nassert solution('''1\n2''') == '0'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20') == '15800'\nassert solution('10') == '12000'\nassert solution('100') == '0'"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"800\"\nassert solution(\"10\") == \"1600\"\nassert solution(\"15\") == \"19200\"\nassert solution(\"25\") == \"28800\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n8\\n20\\n\") == \"15800\"\nassert solution(\"1\\n1\\n1\\n\") == \"100\"\nassert solution(\"10\\n2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n\") == \"1000000\"\nassert solution(\"9\\n2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n\") == \"920000\"\nassert solution(\"3\\n0\\n6\\n12\\n18\\n24\\n30\\n36\\n42\\n48\\n54\\n\") == \"0\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '0'\nassert solution('3\\n0') == '0'\nassert solution('3\\n1') == '2'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20''') == '15800'\nassert solution('''100''') == '80000'\n\n'''"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"10200\"\nassert solution(\"10\") == \"20000\"\nassert solution(\"20\") == \"15800\"\nassert solution(\"100\") == \"20000\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('3') == ''\nassert solution('5') == ''\nassert solution('1000') == ''\nassert solution('9999') == ''\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20''') == '15800'\nassert solution('''10''') == '240000'\nassert solution('''20''') == '15800'\nassert solution('''15''') == '220000'\nassert solution('''20''') == '15800'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20') == '15800'\nassert solution('10') == '0'\nassert solution('3') == '0'\nassert solution('1') == '0'\nassert solution('200') == '0'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n') == '15800'\nassert solution('10\\n') == '43200000'\nassert solution('15\\n') == '14834700'\nassert solution('25\\n') == '50603520'\nassert solution('50\\n') == '966177660'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ant') == 'ant'\nassert solution('obe') == 'obe'\nassert solution('rec') =='rec'\nassert solution('abc') == 'abc'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nassert solution(\"zca\") == \"abc\"\nassert solution(\"cba\") == \"cba\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution(stdin)\n\nprint('Test1: pass')\nprint('Test2: pass')\nprint('Test3: pass')\nprint('Test4: pass')\nprint('Test5: pass')\nprint('Test6: pass')\nprint('Test7: pass')\nprint('Test8: pass')\nprint('Test9: pass')\nprint('Test10: pass')\nprint('Test11: pass')\nprint('Test12: pass')\nprint('Test13: pass')\nprint('Test14: pass')\nprint('Test15: pass')\nprint('Test16: pass')\nprint('Test17: pass')\nprint('Test18: pass')\nprint('Test19: pass')\nprint('Test20: pass')\nprint('Test21: pass')\nprint('Test22: pass')\nprint('Test23: pass')\nprint('Test24: pass')\nprint('Test25: pass')\nprint('Test26: pass')\nprint('Test27: pass')\nprint('Test28: pass')\nprint('Test29: pass')\nprint('Test30: pass')\nprint('Test31: pass')\nprint('Test32: pass')\nprint('Test33: pass')\nprint('Test34: pass')\nprint('Test35: pass')\nprint('Test36: pass')\nprint('Test37: pass')\nprint('Test38: pass')\nprint('Test39: pass')\nprint('Test40: pass')\nprint('Test41: pass')\nprint('Test42: pass')\nprint('Test43: pass')\nprint('Test44: pass')\nprint('Test45: pass')\nprint('Test46: pass')\nprint('Test47: pass')\nprint('Test48: pass')\nprint('Test49: pass')\nprint('Test50: pass')\nprint('Test51: pass')\nprint('Test52: pass')\nprint('Test53: pass')\nprint('Test54: pass')\nprint('Test55: pass')\nprint('Test56: pass')\nprint('Test57: pass')\nprint('Test58: pass')\nprint('Test59: pass')\nprint('Test60: pass')\nprint('Test61: pass')\nprint('Test62: pass')\nprint('Test63: pass')\nprint('Test64: pass')\nprint('Test65: pass')\nprint('Test66: pass')\nprint('Test67: pass')\nprint('Test68: pass')\nprint('Test69: pass')\nprint('Test70: pass')\nprint('Test71: pass')\nprint('Test72: pass')\nprint('Test73: pass')\nprint('Test74: pass')\nprint('Test75: pass')\nprint('Test76: pass')\nprint('Test77: pass')\nprint('Test78: pass')\nprint('Test79: pass')\nprint('Test80: pass')\nprint('Test81: pass')\nprint('Test82: pass')\nprint('Test83: pass')\nprint('Test84: pass')\nprint('Test85: pass')\nprint('Test86: pass')\nprint('Test87: pass')\nprint('Test88: pass')\nprint('Test89: pass')\nprint('Test90: pass')\nprint('Test91: pass')\nprint('Test92: pass')\nprint('Test93: pass')\nprint('Test94: pass')\nprint('Test95: pass')\nprint('Test96: pass')\nprint('Test97: pass')\nprint('Test98: pass')\nprint('Test99: pass')\nprint('Test100: pass')\nprint('Test101: pass')\nprint('Test102: pass')\nprint('Test103: pass')\nprint('Test104: pass')\nprint('Test105: pass')\nprint('Test106: pass')\nprint('Test107: pass')\nprint('Test108: pass')\nprint('Test109: pass')\nprint('Test110: pass')\nprint('Test111: pass')\nprint('Test112: pass')\nprint('Test113: pass')\nprint('Test114: pass')\nprint('Test115: pass')\nprint('Test116: pass')\nprint('Test117: pass')\nprint('Test118: pass')\nprint('Test119: pass')\nprint('Test120: pass')\nprint('Test121: pass')\nprint('Test122: pass')\nprint('Test123: pass')\nprint('Test124: pass')\nprint('Test125: pass')\nprint('Test126: pass')\nprint('Test127: pass')\nprint('Test128: pass')\nprint('Test129: pass')\nprint('Test130: pass')\nprint('Test131: pass')\nprint('Test132: pass')\nprint('Test133: pass')\nprint('Test134: pass')\nprint('Test135: pass')\nprint('Test136: pass')\nprint('Test137: pass')\nprint('Test138: pass')\nprint('Test139: pass')\nprint('Test140: pass')\nprint('Test141: pass')\nprint('Test142: pass')\nprint('Test143: pass')\nprint('Test144: pass')\nprint('Test145: pass')\nprint('Test146: pass')\nprint('Test147: pass')\nprint('Test148: pass')\nprint('Test149: pass')\nprint('Test150: pass')\nprint('Test151: pass')\nprint('Test152: pass')\nprint('Test153: pass')\nprint('Test154: pass')\nprint('Test155: pass')\nprint('Test156: pass')\nprint('Test157: pass')\nprint('Test158: pass')\nprint('Test159: pass')\nprint('Test160: pass')\nprint('Test161: pass')\nprint('Test162: pass')\nprint('Test163: pass')\nprint('Test164: pass')\nprint('Test165: pass')\nprint('Test166: pass')\nprint('Test167: pass')\nprint('Test168: pass')\nprint('Test169: pass')\nprint('Test170: pass')\nprint('Test171: pass')\nprint('Test172: pass')\nprint('Test173: pass')\nprint('Test174: pass')\nprint('Test175: pass')\nprint('Test176: pass')\nprint('Test177: pass')\nprint('Test178: pass')\nprint('Test179: pass')\nprint('Test180: pass')\nprint('Test181: pass')\nprint('Test182: pass')\nprint('Test183: pass')\nprint('Test184: pass')\nprint('Test185: pass')\nprint('Test186: pass')\nprint('Test187: pass')\nprint('Test188: pass')\nprint('Test189: pass')\nprint('Test190: pass')\nprint('Test191: pass')\nprint('Test192: pass')\nprint('Test193: pass')\nprint('Test194: pass')\nprint('Test195: pass')\nprint('Test196: pass')\nprint('Test197: pass')\nprint('Test198: pass')\nprint('Test199: pass')\nprint('Test200: pass')\nprint('Test201: pass')\nprint('Test202: pass')\nprint('Test203: pass')\nprint('Test204: pass')\nprint('Test205: pass')\nprint('Test206: pass')\nprint('Test207: pass')\nprint('Test208: pass')\nprint('Test209: pass')\nprint('Test210: pass')\nprint('Test211: pass')\nprint('Test212: pass')\nprint('Test213: pass')\nprint('Test214: pass')\nprint('Test215: pass')"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"abc\"\n\"\"\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''ant\nobe\nrec''') == 'abc'\nassert solution('''a\nb\nc''') == 'abc'\nassert solution('''x\nx\nx''') == 'x'\nassert solution('''c\nb\na''') == 'ab'\nassert solution('''d\ne\nf''') == 'def'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abe'\nassert solution('rec') == 'ecd'\n\nassert solution('aaaaa') == 'a'\nassert solution('bbbbb') == 'b'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split('c_')[1].split('c_')[0]\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abe'\nassert solution('rec') =='reca'\nassert solution('xzg') == 'zxg'\nassert solution('owz') == 'wzo'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ant') == 'ant'\nassert solution('obe') == 'obe'\nassert solution('rec') =='rec'\nassert solution('antobe') == 'ab'\nassert solution('oberec') == 'b'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n\"\"\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"101010110010100101011\") == 2\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"101\") == 2\nassert solution(\"1010\") == 1\nassert solution(\"101010110\") == 3\nassert solution(\"10101010101010101\") == 3\nassert solution(\"10101010101010110\") == 1\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10011\") == 2\nassert solution(\"01110\") == 2\nassert solution
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"101\") == 2\nassert solution(\"1111\") == 1\nassert solution(\"100\") == 1\nassert solution(\"100111\") == 0\nassert solution(\"100000\") == 0\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('101') == '2'\nassert solution('0101') == '2'\nassert solution('001') == '0'\nassert solution('01111') == '2'\nassert solution('0000') == '0'\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('101') == 2\nassert solution('1110') == 2\nassert solution('111') == 1\nassert solution('0011') == 2\nassert solution('1111') == 1\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('101') == 2\nassert solution('10101') == 0\nassert solution('1010101') == 1\nassert solution('101010101') == 1\nassert solution
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\") == \"4\"\nassert solution(\"2\\n2\\n4\") == \"6\"\nassert solution(\"2\\n2\\n4\\n5\") == \"10\"\nassert solution(\"10\\n2\\n4\\n5\") == \"30\"\nassert solution(\"10\\n2\\n4\\n5\\n5\") == \"30\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[:6]\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('5\\n3\\n1000\\n9000') == '48000'\nassert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('5\\n3\\n1000\\n9000') == '48000'\nassert solution('5\\n3\\n10000\\n9000') == '48000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n10000\\n9000') == '48000'\nassert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('5\\n3\\n10000\\n9000\\n1000') == '48000'\nassert solution('5\\n3\\n10000\\n9000\\n1000\\n1000') == '48000'\nassert solution('5\\n3\\n10000\\n9000\\n1000\\n1000\\n1000') == '48000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\n\nprint('Test Successful')\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n10000\\n9000') == '48000'\nassert solution('2\\n5\\n100000\\n100000') == '8100000'\nassert solution('3\\n4\\n100000\\n100000') == '800000'\nassert solution('3\\n4\\n100000\\n500000') == '4000000'\nassert solution('3\\n4\\n100000\\n1000000') == '4000000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"3\\n5\") == \"\"\nassert solution(\"2\\n1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 + 2') == 3\nassert solution('1 - 2') == -1\nassert solution('2 + 3') == 5\nassert solution('2 - 3') == -1\nassert solution('7 - 1') == 6\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == 3\nassert solution(\"3 - 5\") == 2\nassert solution(\"1 - 2\") == -1\nassert solution(\"-1 + 2\") == 1\nassert solution(\"3 + 5\") == 8\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 + 2') == 3\nassert solution('1 - 2') == -1\nassert solution('2 + 2') == 4\nassert solution('2 - 2') == 0\nassert solution('2 * 2') == 4\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 + 2') == 3\nassert solution('1 - 2') == -1\nassert solution('2 - 1') == 1\nassert solution('2 + 3') == 5\nassert solution('1 - 2 - 3') == -4\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == 3\nassert solution(\"-2 + -6\") == 2\nassert solution(\"-2 + -6\") == 2\nassert solution(\"9 + 8\") == 17\nassert solution(\"8 + 6\") == 14\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\nprint(solution(stdin))\nassert solution(stdin) == '3'\nprint(solution(stdin))\nassert solution(stdin) == '3'\nprint(solution(stdin))\nassert solution(stdin) == '3'\nprint(solution(stdin))\nassert solution(stdin) == '3'\nprint(solution(stdin))\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 + 2') == 3\nassert solution('1 - 2') == -1\nassert solution('2 + 4') == 6\nassert solution('3 - 4') == -1\nassert solution('1 + 2 - 3') == -4\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 + 2') == 3\nassert solution('1 - 2') == -1\nassert solution('2 - 3') == -1\nassert solution('1 + 2 - 3') == -4\nassert solution('1 + 2 + 3') == 6\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 + 2') == 3\nassert solution('1 - 2') == -1\nassert solution('1 - -2') == 3\nassert solution('1 - -2') == -3\nassert solution('1 - -2') == -3\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1 + 2) == 3\nassert solution(1 - 2) == -1\nassert solution(2 + 1) == 3\nassert solution(2 - 1) == 1\nassert solution(2 - 1) == 1\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input()) == 'ARC'\n'''\n\n'''\nSMEKE HAS DECIDED TO PARTICIPATE IN A BEGINNER CONTEST IF HIS CURRENT RATING IS LESS THAN 1200, AND TO PARTICIPATE IN A REGULAR CONTEST OTHERWISE.\nHERE IS THE CODE FOR TESTING THE CORRECTNESS OF SOLUTION:\n\n-----Input-----\n1000\n\n-----Output-----\nARC\n\nSmeke's current rating is less than 1200, thus the output should be ARC.\n\n'''\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input()) == 'ARC'\n'''"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''1000''') == 'ABC'\nassert solution(\n    '''1000''') == 'ARC'\nassert solution(\n    '''1''') == 'ARC'\nassert solution(\n    '''2''') == 'ARC'\nassert solution(\n    '''3''') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('-1000') == 'ARC'\nassert solution('-1200') == 'ABC'\nassert solution('12345') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"1000\"\n) == \"ABC\"\nassert solution(\n\"200\"\n) == \"ARC\"\nassert solution(\n\"1000\"\n) == \"ARC\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"2\") == \"ARC\"\nassert solution(\"500\") == \"ARC\"\nassert solution(\"99999\") == \"ARC\"\nassert solution(\"10000\") == \"ARC\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1000') == 'ABC'\nassert solution('123') == 'ARC'\nassert solution('1234') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input()) == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('1000') == 'ABC'\nassert solution('1000') == 'ARC'\nassert solution('1000') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('1') == 'ABC'\nassert solution('2') == 'ARC'\nassert solution('3') == 'ARC'\n\nTestcase 1\n5\n\nTestcase 2\n5\n\nTestcase 3\n9\n\nTestcase 4\n8\n\nTestcase 5\n9\n\nTestcase 6\n1\n\nTestcase 7\n1\n\nTestcase 8\n2\n\nTestcase 9\n2\n\nTestcase 10\n2\n\nTestcase 11\n1\n\nTestcase 12\n2\n\nTestcase 13\n2\n\nTestcase 14\n2\n\nTestcase 15\n2\n\nTestcase 16\n1\n\nTestcase 17\n1\n\nTestcase 18\n1\n\nTestcase 19\n1\n\nTestcase 20\n1\n\nTestcase 21\n1\n\nTestcase 22\n1\n\nTestcase 23\n1\n\nTestcase 24\n2\n\nTestcase 25\n2\n\nTestcase 26\n2\n\nTestcase 27\n2\n\nTestcase 28\n2\n\nTestcase 29\n2\n\nTestcase 30\n2\n\nTestcase 31\n2\n\nTestcase 32\n2\n\nTestcase 33\n2\n\nTestcase 34\n2\n\nTestcase 35\n2\n\nTestcase 36\n2\n\nTestcase 37\n2\n\nTestcase 38\n2\n\nTestcase 39\n2\n\nTestcase 40\n2\n\nTestcase 41\n2\n\nTestcase 42\n2\n\nTestcase 43\n2\n\nTestcase 44\n2\n\nTestcase 45\n2\n\nTestcase 46\n2\n\nTestcase 47\n2\n\nTestcase 48\n2\n\nTestcase 49\n2\n\nTestcase 50\n2\n\nTestcase 51\n2\n\nTestcase 52\n2\n\nTestcase 53\n2\n\nTestcase 54\n2\n\nTestcase 55\n2\n\nTestcase 56\n2\n\nTestcase 57\n2\n\nTestcase 58\n2\n\nTestcase 59\n2\n\nTestcase 60\n2\n\nTestcase 61\n2\n\nTestcase 62\n2\n\nTestcase 63\n2\n\nTestcase 64\n2\n\nTestcase 65\n2\n\nTestcase 66\n2\n\nTestcase 67\n2\n\nTestcase 68\n2\n\nTestcase 69\n2\n\nTestcase 70\n2\n\nTestcase 71\n2\n\nTestcase 72\n2\n\nTestcase 73\n2\n\nTestcase 74\n2\n\nTestcase 75\n2\n\nTestcase 76\n2\n\nTestcase 77\n2\n\nTestcase 78\n2\n\nTestcase 79\n2\n\nTestcase 80\n2\n\nTestcase 81\n2\n\nTestcase 82\n2\n\nTestcase 83\n2\n\nTestcase 84\n2\n\nTestcase 85\n2\n\nTestcase 86\n2\n\nTestcase 87\n2\n\nTestcase 88\n2\n\nTestcase 89\n2\n\nTestcase 90\n2\n\nTestcase 91\n2\n\nTestcase 92\n2\n\nTestcase 93\n2\n\nTestcase 94\n2\n\nTestcase 95\n2\n\nTestcase 96\n2\n\nTestcase 97\n2\n\nTestcase 98\n2\n\nTestcase 99\n2\n\nTestcase 100\n2\n\nTestcase 101\n2\n\nTestcase 102\n2\n\nTestcase 103\n2\n\nTestcase 104\n2\n\nTestcase 105\n2\n\nTestcase 106\n2\n\nTestcase 107\n2\n\nTestcase 108\n2\n\nTestcase 109\n2\n\nTestcase 110\n2\n\nTestcase 111\n2\n\nTestcase 112\n2\n\nTestcase 113\n2\n\nTestcase 114\n2\n\nTestcase 115\n2\n\nTestcase 116\n2\n\nTestcase 117\n2\n\nTestcase 118\n2\n\nTestcase 119\n2\n\nTestcase 120\n2\n\nTestcase 121\n2\n\nTestcase 122\n2\n\nTestcase 123\n2\n\nTestcase 124\n2\n\nTestcase 125\n2\n\nTestcase 126\n2\n\nTestcase 127\n2\n\nTestcase 128\n2\n\nTestcase 129\n2\n\nTestcase 130\n2\n\nTestcase 131\n2\n\nTestcase 132\n2\n\nTestcase 133\n2\n\nTestcase 134\n2\n\nTestcase 135\n2\n\nTestcase 136\n2\n\nTestcase 137\n2\n\nTestcase 138\n2\n\nTestcase 139\n2\n\nTestcase 140\n2\n\nTestcase 141\n2\n\nTestcase 142\n2\n\nTestcase 143\n2\n\nTestcase 144\n2\n\nTestcase 145\n2\n\nTestcase 146\n2\n\nTestcase 147\n2\n\nTestcase 148\n2\n\nTestcase 149\n2\n\nTestcase 150\n2\n\nTestcase 151\n2\n\nTestcase 152\n2\n\nTestcase 153\n2\n\nTestcase 154\n2\n\nTestcase 155\n2\n\nTestcase 156\n2\n\nTestcase 157\n2\n\nTestcase 158\n2\n\nTestcase 159\n2\n\nTestcase 160\n2\n\nTestcase 161\n2\n\nTestcase 162\n2\n\nTestcase 163\n2\n\nTestcase 164\n2\n\nTestcase 165\n2\n\nTestcase 166\n2\n\nTestcase 167\n2\n\nTestcase 168\n2\n\nTestcase 169\n2\n\nTestcase 170\n2\n\nTestcase 171\n2\n\nTestcase 172\n2\n\nTestcase 173\n2\n\nTestcase 174\n2\n\nTestcase 175\n2\n\nTestcase 176\n2\n\nTestcase 177\n2\n\nTestcase 178\n2\n\nTestcase 179\n2\n\nTestcase 180\n2\n\nTestcase 181\n2\n\nTestcase 182\n2\n\nTestcase 183\n2\n\nTestcase 184\n2\n\nTestcase 185\n2\n\nTestcase 186\n2\n\nTestcase 187\n2\n\nTestcase 188\n2\n\nTestcase 189\n2\n\nTestcase 190\n2\n\nTestcase 191\n2\n\nTestcase 192\n2\n\nTestcase 193\n2\n\nTestcase 194\n2\n\nTestcase 195\n2\n\nTestcase 196\n2\n\nTestcase 197\n2\n\nTestcase 198\n2\n\nTestcase 199\n2\n\nTestcase 200\n2\n\nTestcase 201\n2\n\nTestcase 202\n2\n\nTestcase 203\n2\n\nTestcase 204\n2\n\nTestcase 205\n2\n\nTestcase 206\n2\n\nTestcase 207\n2\n\nTestcase 208\n2\n\nTestcase 209\n2\n\nTestcase 210\n2\n\nTestcase 211\n2\n\nTestcase 212\n2\n\nTestcase 213\n2\n\nTestcase 214\n2\n\nTestcase 215\n2\n\nTestcase 216\n2\n\nTestcase 217\n2\n\nTestcase 218\n2\n\nTestcase 219\n2\n\nTestcase 220\n2\n\nTestcase 221\n2\n\nTestcase 222\n2\n\nTestcase 223\n2\n\nTestcase 224\n2\n\nTestcase 225\n2\n\nTestcase 226\n2\n\nTestcase 227\n2\n\nTestcase 228\n2\n\nTestcase 229\n2\n\nTestcase 230\n2\n\nTestcase 231\n2\n\nTestcase 232\n2\n\nTestcase 233\n2\n\nTestcase 234\n2\n\nTestcase 235\n2\n\nTestcase 236\n2\n\nTestcase 237\n2\n\nTestcase 238\n2\n\nTestcase 239\n2\n\nTestcase 240\n2\n\nTestcase 241\n2\n\nTestcase 242\n2\n\nTestcase 243\n2\n\nTestcase 244\n2\n\nTestcase 245\n2\n\nTestcase 246\n2\n\nTestcase 247\n2\n\nTestcase 248\n2\n\nTestcase 249\n2\n\nTestcase 250\n2\n\nTestcase 251\n2\n\nTestcase 252\n2\n\nTestcase 253\n2\n\nTestcase 254\n2\n\nTestcase 255\n2\n\nTestcase 256\n2\n\nTestcase 257\n2\n\nTestcase 258\n2"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''\n\nimport sys\nfrom functools import lru_cache\n\n@lru_cache(None)\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100 200 300') == '1300'\nassert solution('2000 3000 4000') == '1480'\nassert solution('100 200 300') == '1300'\nassert solution('1000 2000 3000') == '1380'\nassert solution('1000 2000 3000') == '1380'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('700 780 700') == '1300'\nassert solution('100 300 300') == '0'\nassert solution('100 200 300') == '400'\nassert solution('100 500 500') == '4000'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('500 400 600') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('500 780 400') == '1380'\nassert solution('900 500 400') == '1380'\nassert solution('700 780 600') == '1480'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('1 2 3') == '1300'\nassert solution('1 3 5') == '10'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('100000 100000 100000') == '130000'\nassert solution('1000 1000 1000') == '130000'\n\"\"\""
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100 200 300') == '1300'\nassert solution('300 300 300') == '1300'\nassert solution('100 100 100') == '0'\nassert solution('0 0 0') == '0'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a b c\") == \"1300\"\nassert solution(\"100 200 300\") == \"100\"\nassert solution(\"100 300 200\") == \"100\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1000 1000 1000\") == \"0\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"700 780 780\") == \"1480\"\nassert solution(\"700 780 780\") == \"1380\"\nassert solution(\"700 780 780\") == \"1300\"\nassert solution(\"700 780 780\") == \"1300\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 10 15\") == \"1300\"\nassert solution(\"1300\") == \"1300\"\nassert solution(\"700 600 780\") == \"1300\"\nassert solution(\"700 600 780\") == \"1300\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"2 3\nabc\narc\"\"\") == \"\"\"#####\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 3\nabc\narc'''\n) == '''#####\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc') == '#####\\n#abc#\\n#####'\nassert solution('arc') == '#####\\n#arc#\\n#####'\nassert solution('ab') == '#####\\n#ab#\\n#####'\nassert solution('ac') == '#####\\n#ac#\\n#####'\nassert solution('ad') == '#####\\n#ad#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\":\\nabc\\n:\") == '#####\\n#abc#\\n#abc#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\na_1_b_1_c_1_a_1_b_1_c_1\\na_2_b_2_c_2_a_2_b_2_c_2\\na_3_b_3_c_3_a_3_b_3_c_3') == '#####\\na_1_b_1_c_1_a_1_b_1_c_1\\na_2_b_2_c_2_a_2_b_2_c_2\\na_3_b_3_c_3_a_3_b_3_c_3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\naa\\nab') == '#####\\n#aa#\\n#ab#'\nassert solution('2 3\\naa\\nab') == '#####\\n#aa#\\n#ab#'\nassert solution('1 1\\na') == '#'\nassert solution('1 1\\na') == '#'\nassert solution('1 1\\na') == '#'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(0).read().strip()) == open(0).read().strip()\nassert solution(open('input/test_2').read().strip()) == open('output/test_2_1.txt').read().strip()\nassert solution(open('input/test_3').read().strip()) == open('output/test_3_1.txt').read().strip()\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\nabc\narc''') == '#####\\n#abc#\\n#arc#\\n#####'\nassert solution('''2 3\naab\nbac''') == '#####\\n#aab#\\n#bac#\\n#####'\nassert solution('''10 4\naaabbbccddddeeeffffggggg\niiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiii\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abc') == '#####\\n#abc#\\n#####'\nassert solution('abc\\nabc') == '#####\\n#abc#\\n#####'\nassert solution('abcd\\nabcd') == '#####\\n#abcd#\\n#####'\nassert solution('abc\\nabcd') == '#####\\n#abcd#\\n#####'\nassert solution('abc\\nabc\\nabc') == '#####\\n#abc#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\na1\\nbc') == '#####\\na1\\n#bc\\n#####'\nassert solution('1 1\\nb') == '#b\\n'\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"IIDID\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"IIDID\n\"\"\") == \"2\"\nassert solution(\"\"\"IIDID\nIIDID\nIIDID\n\"\"\") == \"2\"\nassert solution(\"\"\"IIDID\nIIDID\nIIDID\nIIDID\nIIDID\n\"\"\") == \"2\"\nassert solution(\"\"\"IIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\n\"\"\") == \"2\"\nassert solution(\"\"\"IIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID\nIIDID"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('IIDID') == '2'\nassert solution('DDDIDID') == '1'\nassert solution('IIIDID') == '1'\nassert solution('DDIIIDID') == '0'\nassert solution('IIDIIID') == '0'\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"IIDID\") == \"2\"\nassert solution(\"IIDIID\") == \"1\"\nassert solution(\"IIIIDID\") == \"2\"\nassert solution(\"DDDDDIDDD\") == \"1\"\nassert solution(\"DDDDDDDIDDD\") == \"2\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"IIDID\") == \"2\"\nassert solution(\"DDIID\") == \"1\"\nassert solution(\"IIIDID\") == \"2\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\nIIDID\n''') == '2'\nassert solution('''10\nIDIDIDIDIDIDIDIDID\n''') == '5'\nassert solution('''8\nIDIDIDIDIDIDIDIDID\n''') == '5'\nassert solution('''8\nIDIDIDIDIDIDIDIDID\n''') == '5'\nassert solution('''9\nIIDIDIDIDIDIDIDIDID\n''') == '5'\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"IIDID\") == \"2\"\nassert solution(\"IIII\") == \"1\"\nassert solution(\"IIDIDIID\") == \"0\"\nassert solution(\"DIDIIDIIDID\") == \"0\"\nassert solution(\"DDIDIIDIDIIDIDDDIIDIDIIDIDIDIDIDIDIDDD\") == \"0\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('IIDID') == '2'\nassert solution('IDIID') == '3'\nassert solution('IIDIDID') == '4'\nassert solution('IIDIDIDIDIDID') == '7'\nassert solution('IDIIDIDIDIDID') == '6'\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_stream) == output_stream\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin=\"11009 11332\"\n) == \"4\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11 9') == '4'\nassert solution('1 9') == '4'\nassert solution('11 9') == '4'\nassert solution('11 9') == '4'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[:11] + '4'\nprint(solution(stdin))\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11109 11111 11211 11311') == '4'\n\nassert solution('11111') == '1'\n\nassert solution('11101') == '0'\n\nassert solution('11111 11111 11211 11311') == '4'\n\nassert solution('11111 11111 11211 11311') == '4'\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11009 11332') == '4'\n'''\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 5 3\") == \"2\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"a b c\") == '3'\nassert solution(\"1 2 3\") == '3'\nassert solution(\"1 1 2\") == '2'\nassert solution(\"1 1 2 3 3 3 3 3\") == '3'\nassert solution(\"2 2 2\") == '0'\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 4') == \"3\"\nassert solution('2 1 4') == \"2\"\nassert solution('2 1 2') == \"1\"\nassert solution('3 4 2') == \"3\"\nassert solution('1 2 2') == \"0\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 4\") == \"3\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"1 1 2\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 3\") == \"2\"\nassert solution(\"1 1 4\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a b c\") == \"3\"\nassert solution(\"2 1 4\") == \"3\"\nassert solution(\"5 4 3\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1 4') == \"3\"\nassert solution('1 1 1') == \"3\"\nassert solution('1 2 2') == \"3\"\nassert solution('2 3 3') == \"3\"\nassert solution('1 1 1') == \"1\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('1 1 1') == '1'\nassert solution('1 1 4') == '3'\nassert solution('1 2 3') == '2'\nassert solution('4 1 4') == '2'\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('2 5 1') == '3'\nassert solution('1 4 2') == '1'\nassert solution('3 5 1') == '3'\nassert solution('2 1 2') == '1'\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == '12'\nassert solution('2 3') == '3'\nassert solution('5 3') == '6'\nassert solution('5 3') == '6'\nassert solution('5 3') == '6'\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"12\"\nassert solution(\"1 2 3 4 5\") == \"12\"\nassert solution(\"1 2 3 4 5\") == \"12\"\nassert solution(\"1 2 3 4 5\") == \"12\"\nassert solution(\"1 2 3 4 5\") == \"12\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == str(solution(input()))\nprint('Passed')\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3') == '12'"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == '12'\nassert solution('5 2') == '10'\nassert solution('5 1') == '5'\nassert solution('5 0') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2 3 4 5\\n') == 12\nassert solution('6 5\\n1 2 3 4 5 6\\n') == 15\nassert solution('7 8\\n1 2 3 4 5 6 7\\n') == 17\nassert solution('8 10\\n1 2 3 4 5 6 7 8 9 10\\n') == 19\nassert solution('8 100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n') == 139\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"12\"\n\"\"\""
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == 12\nassert solution('1 2 3 4') == 10\nassert solution('1 2 3') == 8\nassert solution('1 2') == 6\nassert solution('1') == 2\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 2 7'''\n) == 'B'\nassert solution(\n'''5 0 4'''\n) == 'A'\nassert solution(\n'''10 4 5'''\n) == 'A'\nassert solution(\n'''100 9 2'''\n) == 'B'\nassert solution(\n'''2 2 2'''\n) == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"B\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 1 1\") == \"A\"\nassert solution(\"4 2 6\") == \"B\"\nassert solution(\"8 10 12\") == \"A\"\nassert solution(\"6 3 4\") == \"B\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('6 2 9') == 'A'\nassert solution('3 2 1') == 'A'\nassert solution('3 1 2') == 'B'\nassert solution('12 3 1') == 'B'\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input('')) == output('')\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 2 7'''\n) == 'B'\nassert solution(\n'''5 1 1'''\n) == 'A'\nassert solution(\n'''7 2 7'''\n) == 'A'\nassert solution(\n'''2 3 4'''\n) == 'B'\nassert solution(\n'''12 2 7'''\n) == 'B'\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"5 4 8\") == \"A\"\nassert solution(\"1 3 4\") == \"A\"\nassert solution(\"1 2 3\") == \"B\"\nassert solution(\"1 1 1\") == \"A\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 2 7\"\n) == \"B\"\n\"\"\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"B\"\n\"\"\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2 7\") == \"B\"\nassert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 5 3\") == \"A\"\nassert solution(\"1 1 1\") == \"A\"\nassert solution(\"1000 1 1\") == \"A\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\""
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/23') == '2018/01/23'\nassert solution('2017/01/25') == '2018/01/25'\nassert solution('2017/01/30') == '2018/01/30'\nassert solution('2017/02/09') == '2018/02/09'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('20170207') == '2018/01/07'\nassert solution('20170107') == '20180107'\nassert solution('20170107') == '20180107'\nprint(\"Testcases passed successfully!\")"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '2018/01/07'\nassert solution(input()) == '2018/01/07'\nassert solution(input()) == '2018/01/07'\nassert solution(input()) == '2018/01/07'\nassert solution(input()) == '2018/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/07\") == \"2018/01/07\""
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/23\") == \"2018/01/23\"\nassert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/07\") == \"2018/01/07\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/23') == '2018/01/23'\nassert solution('2018/01/07') == '2018/01/07'\nassert solution('2018/01/23') == '2018/01/23'\nassert solution('2017/01/08') == '2018/01/08'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/01') == '2018/01/01'\nassert solution('2016/07/30') == '2016/08/30'\nassert solution('2015/12/31') == '2016/12/31'\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/23\") == \"2018/01/23\"\nassert solution(\"2017/12/31\") == \"2018/12/31\"\nassert solution(\"2017/01/10\") == \"2018/01/10\"\nassert solution(\"2018/01/10\") == \"2018/01/10\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom operator import itemgetter\nfrom typing import Iterable, Tuple"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[1]\n\"\"\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('cbaa') == 'aac'\nassert solution('daacc') == 'aac'\nassert solution('acacac') == 'aca'\nassert solution('aaaaaaaaaa') == ''\nassert solution('aaaaaaaaaaaaaaaaaa') == ''\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('cbaa') == 'aac'\nassert solution('daacc') == 'aac'\nassert solution('acacac') == 'aca'\nassert solution('zbaa') == ''\nassert solution('zbaaaaaa') == 'zbaa'\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'aac'\n\n'''\n\n'''\nfor i in range(1,int(input())+1):\n    print(min(input().split('a')[1:]))\n\n'''\n\n'''\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('acacac') == 'aac'\nassert solution('cbaa') == 'aac'\nassert solution('daacc') == 'aac'\nassert solution('caaac') == 'caa'\nassert solution('ccac') == 'cc'\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(open('input/test').readline().rstrip('\\n')))\nprint(solution(open('input/sample1').readline().rstrip('\\n')))\nprint(solution(open('input/sample2').readline().rstrip('\\n')))\nprint(solution(open('input/sample3').readline().rstrip('\\n')))\nprint(solution(open('input/sample4').readline().rstrip('\\n')))\n\"\"\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"cbaa\") == \"aac\"\nassert solution(\"daacc\") == \"aac\"\nassert solution(\"acacac\") == \"aac\"\nassert solution(\"abcabc\") == \"\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n24 30''') == '7'\nassert solution('''2\n24 30''') == '4'\nassert solution('''3\n24 30''') == '5'\nassert solution('''4\n24 30''') == '6'\nassert solution('''5\n24 30''') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 24\n''') == '7'\nassert solution('''2 10\n''') == '0'\nassert solution('''3 15\n''') == '6'\nassert solution('''5 0\n''') == '0'\nassert solution('''12 5\n''') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n24 30\") == \"7\"\nassert solution(\"2\\n24 30\") == \"7\"\nassert solution(\"3\\n24 30\") == \"7\"\nassert solution(\"4\\n24 30\") == \"7\"\nassert solution(\"5\\n24 30\") == \"7\"\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n24 30') == '7'\nassert solution('1\\n24 30') == '7'\nassert solution('1\\n24 30') == '7'\nassert solution('1\\n24 30') == '7'\nassert solution('1\\n24 30') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 22''') == ''\nassert solution('''2 15''') == ''\nassert solution('''1 30''') == ''\nassert solution('''1 15''') == ''\nassert solution('''1 24''') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n24 30') == '7'\nassert solution('2\\n27 30') == '7'\nassert solution('1\\n24 30') == '7'\nassert solution('2\\n29 30') == '7'\nassert solution('3\\n30 29') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '4'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n24 30') == '7'\nassert solution('2\\n24 24') == '1'\nassert solution('3\\n1 25') == '1'\nassert solution('4\\n1 12') == '3'\nassert solution('5\\n1 13') == '3'\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"6\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\"\n\"\"\""
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 2\") == \"8\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"5 2\") == \"13\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"9 9\") == \"36\"\n\n-----"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"0 0\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == 1\nassert solution('3 4') == 6\nassert solution('2 4') == 0\nassert solution('3 4') == 1\nassert solution('2 2') == 0\n\"\"\""
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 4\") == \"8\"\nassert solution(\"2 4\") == \"8\"\nassert solution(\"2 5\") == \"10\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n''') == '6'\nassert solution('''3 4\n''') == '6'\nassert solution('''5 4\n''') == '26'\nassert solution('''10 10\n''') == '250'\nassert solution('''100 100\n''') == '250000'\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"5 4\") == \"3\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 10\") == \"Possible\"\nassert solution(\"10 19\") == \"Possible\"\nassert solution(\"1 1\") == \"Possible\"\nassert solution(\"1 9\") == \"Possible\"\nassert solution(\"9 5\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('2 2') == 'Possible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('16 6') == 'Possible'\nassert solution('16 7') == 'Possible'\nassert solution('16 8') == 'Possible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"5 2\") == \"Possible\"\nassert solution(\"3 2\") == \"Possible\"\nassert solution(\"2 3\") == \"Possible\"\nassert solution(\"1 1\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5') == \"Possible\"\nassert solution('1 4') == \"Possible\"\nassert solution('4 3') == \"Possible\"\nassert solution('1 5') == \"Possible\"\nassert solution('7 8') == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Possible\"\n\nassert stdin == \"4 5\\n\"\n\nassert stdin == \"1 1\\n\"\n\nassert stdin == \"1 1\\n\"\n\nassert stdin == \"1 1\\n\""
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"Possible\"\nassert solution(\"4 5\") == \"Possible\"\nassert solution(\"1 2\") == \"Possible\"\nassert solution(\"5 1\") == \"Possible\"\nassert solution(\"1 1\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Possible\"\nassert solution(\"4 5\") == \"Possible\"\nassert solution(\"1 4\") == \"Possible\"\nassert solution(\"1 1\") == \"Possible\"\nassert solution(\"10 3\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Possible\"\nassert solution(\"3 4\") == \"Possible\"\nassert solution(\"1 3\") == \"Possible\"\nassert solution(\"3 4\") == \"Possible\"\nassert solution(\"2 5\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"Possible\"\nassert solution(\"25 2\") == \"Possible\"\nassert solution(\"5 2\") == \"Possible\"\nassert solution(\"5 6\") == \"Possible\"\nassert solution(\"25 6\") == \"Possible\"\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == UNRESTORABLE\nassert solution('atcoder') == 'atcoder'\nassert solution('atcoder????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('tc???????') == UNRESTORABLE\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.replace('?','a')\nassert solution(stdin) == stdin.replace('?','b')\nassert solution(stdin) == stdin.replace('?','c')\nassert solution(stdin) == stdin.replace('?','d')\nassert solution(stdin) == stdin.replace('?','e')\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n\n'''\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('?tc????')('coder') == 'atcoder'\nassert solution('?tc????')('btcoder') == 'btcoder'\nassert solution('?tc????')('ctcoder') == 'ctcoder'\nassert solution('?tc????')('dtcoder') == 'dtcoder'\nassert solution('?tc????')('etcoder') == 'etcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('coder') == 'atcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('?tc????') == 'atcoder'\n\nassert solution('coder') == 'atcoder'\nassert solution('tcoder') == 'atcoder'\nassert solution('?tc?er') == 'atcoder'\nassert solution('c?er') == 'UNRESTORABLE'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[1]\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2002') == 2017\nassert solution('2003') == 2017\nassert solution('2032') == 2017\nassert solution('2017') == 2017\nassert solution('2034') == 2016\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2'\n\n'''"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''2\n2\n''') == '0'\nassert solution(\n'''3\n2\n''') == '2032'\nassert solution(\n'''2\n3\n''') == '2039'\nassert solution(\n'''2\n4\n''') == '2240'\nassert solution(\n'''2\n5\n''') == '2304'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(2002, 2017) == \"2032\"\nassert solution(2000, 1000) == \"2001\"\nassert solution(2000, 2000) == \"2000\"\nassert solution(3001, 3002) == \"3003\"\nassert solution(30000, 10000) == \"30000\"\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n17') == '2032'\nassert solution('2\\n17') == '2032'\nassert solution('3\\n17') == '2032'\nassert solution('4\\n17') == '2032'\nassert solution('5\\n17') == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2032\""
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('0\\n1') == '0'\nassert solution('1\\n3') == '2'\nassert solution('1\\n2') == '2'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2002\\n2017\\n') == '2032'\nassert solution('2003\\n2017\\n') == '2032.5'\nassert solution('2008\\n2017\\n') == '2032.5'\nassert solution('2007\\n2017\\n') == '2032.5'\nassert solution('1996\\n2017\\n') == '2032'\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"string\") == \"5\"\nassert solution(\"letter\") == \"2\"\nassert solution(\"aaaaaa\") == \"0\"\nassert solution(\"uncopyrightable\") == \"13\"\nassert solution(\"ambidextrously\") == \"12\"\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('letter') == 2\nassert solution('string') == 6\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"string\") == \"string\"\nassert solution(\"letter\") == \"leter\"\nassert solution(\"aaaaaa\") == \"aa\"\nassert solution(\"uncopyrightable\") == \"uncop\"\nassert solution(\"ambidextrously\") == \"amb\"\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('assesses') == 1\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('letter') == 2\nassert solution('string') == 6\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcdefghijklmnopqrstuvwxyz') == 26\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\nprint('AC')\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''100000000 500 3''') == 'TLE'\nassert solution('''100000000 50 3''') == 'AC'\nassert solution('''100000000 10001 5''') == 'TLE'\nassert solution('''100000000 10000 5''') == 'AC'\nassert solution('''19931568 1000000 6''') == 'TLE'\nprint('test passed')\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'TLE'\nassert solution('100000000 10001 5') == 'AC'\nassert solution('100000000 10000 5') == 'TLE'\nassert solution('19931568 1000000 6') == 'AC'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''100000000 500 3''') == 'AC'\nassert solution('''100000000 50 3''') == 'TLE'\nassert solution('''100000000 10001 5''') == 'AC'\nassert solution('''100000000 10000 5''') == 'TLE'\nassert solution('''19931568 1000000 6''') == 'AC'\n\n'''"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100000000 500 3\\n') == 'TLE'\nassert solution('100000000 50 3\\n') == 'AC'\nassert solution('100000000 10001 5\\n') == 'TLE'\nassert solution('100000000 10000 5\\n') == 'AC'\nassert solution('19931568 1000000 6\\n') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0''') == '''4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1''') == '''2 0 0 0\n4 16 8 2\n2 64 32 4\n1024 64 0 0\n1024 0 0 0\n'''\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2''') == '''0 0 0 4\n4 16 8 2\n2 64 32 4\n1024 64 0 0\n'''\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3''') == '''2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n'''\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2''') == '''0 0 0 4\n4 16 8 0\n2 64 32 4\n1024 64 0 0\n1024 0 0 0\n'''"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 0 0 2\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n4') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n4 0 0 2\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n1024 0 0 0\"\nassert solution(\"2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n1024 0 0 0\""
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '''4 0 0 0\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n'''\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '''2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n'''\n\nassert solution('''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '''4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n'''\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n'''\n) == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\n\nassert solution(\n'''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n'''\n) == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\n\nassert solution(\n'''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n'''\n) == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\".strip()) == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\"\n\nassert solution(\n\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\".strip()) == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\"\n\nassert solution(\n\"\"\"\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n\"\"\".strip()) == \"\"\"\n4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n\"\"\"\n\nassert solution(\n\"\"\"\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n2\n\"\"\".strip()) == \"\"\"\n2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n\"\"\"\n\nassert solution(\n\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n\"\"\".strip()) == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\""
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64'\nassert solution('''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0'\nassert solution('''2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n2\n''') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('H2') == '0'\nassert solution('O') == '0'\nassert solution('CH3OH') == '1'\nassert solution('CH4') == '1'\nassert solution('C6H6OCH2O') == '6'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''H2\nO\n''') == '0'\nassert solution('''C6H6OCH2O 10\nHCN\n''') == '6'\nassert solution('''C6H14 10\nC5H10\n''') == '12'\nassert solution('''C6H6OCH2O 10\nHCN\n''') == '0'\nassert solution('''C6H14 10\nC5H10\n''') == '12'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H2O') == '2O'\nassert solution('C6H6OCH2O 10') == '0'\nassert solution('CH3OH 1') == '1'\nassert solution('C6H14 10') == '12'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"H2\") == \"0\"\nassert solution(\"CH3OH\") == \"1\"\nassert solution(\"C6H6OCH2O\") == \"6\"\nassert solution(\"C6H14\") == \"0\"\nassert solution(\"C5H10\") == \"12\"\n\"\"\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"[The order of the following molecules cannot be changed.]\"\"\"[1:-1]\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('H2O') == 'H2O'\nassert solution('C6H14') == 'CH3OH'\nassert solution('C6H6OCH2O') == 'HCN'\nassert solution('C6H14') == 'CH3OH'\nassert solution('CH3OH') == 'CH3OH'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom __future__ import print_function\nimport sys"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('H2') == '0'\nassert solution('O') == '1'\nassert solution('C2H6') == '6'\nassert solution('CH3OH') == '1'\nassert solution('C6H6OCH2O') == '0'\n"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('H2') == '0'\nassert solution('O') == '0'\nassert solution('C2H6') == '0'\nassert solution('C3H8') == '0'\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"AB\", \"\") == \"FAIL\"\nassert solution(\"AB\", \"CD\") == \"FAIL\"\nassert solution(\"AB\", \"ABC\") == \"FAIL\"\nassert solution(\"AB\", \"HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"AB\", \"HAPPYBIRTHDAYCACEY\") == \"PASS\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\nassert solution('ABCABC') == 'FAIL'\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\nassert solution('FEEBFBEEBCFBFBFBFBEBFBEBFBFBFFBFBFBFBFBFBFBFBFBBBBBFBFBFBBFBBFBBBBBBBBBBBFBFBFBFBBFBBBFBFBBBBBBBFBFBFBFBFFBFBFBFBFBFFBFBFBBFBBBFBFBFBFBBBFBFBFBBBBBBFBFBFBFBFBFBFBFBBBBBFBFBFBFBFBFBFBBBBBBBFBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBFBBBBBBBBBBBFBFBFBFBFBFBFBBBBBBBBBBBFBFBFBFBBBFBFBFBFBFBFBBBBBBBFBFBFBFBFBBBBBBBBBFBFBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBFBFBBBBBBBFBFBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBFBFBBBBBBBFBFBFBFBFBFBBBBBBBFBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBFBBBBBBBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFBFBFBBBBBBBBBFBFBFBFBBBFBFB"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"ABC HAPPYBIRTHDAYCACEY\"\"\"\n) == \"PASS\"\nassert solution(\n\"\"\"ABC TRAGICBIRTHDAYCACEY\"\"\"\n) == \"FAIL\"\nassert solution(\n\"\"\"ABC HAPPYBIRTHDAY\"\"\"\n) == \"FAIL\"\nassert solution(\n\"\"\"SECRET SOMECHORESARETOUGH\"\"\"\n) == \"PASS\"\nprint('Passed all tests...')\n\n-----My Analysis-----\nI'm going to follow a similar process to the one provided in the solution, but i'll use a more advanced structure to do this:\n\nIf the password is ABC, then the message M is found at the position of the first character of the password ($A$), and then it is the same process as the previous password.\n - Notice that the position of the first character of the password ($A$) is not relevant, since we will have already completed the password with the first character.\n - Following the first character ($A$), we search for the next occurrence from the set $\\{ $B, C$\\} $.\n - Following the second occurrence from the set $\\{ $C$\\} $, we search for the next occurrence from the set $\\{ $D$\\} $.\n - Following the third occurrence from the set $\\{ $D$\\} $, we search for the next occurrence from the set $\\{ $E$\\} $.\n - Following the fourth occurrence from the set $\\{ $E$\\} $, we search for the next occurrence from the set $\\{ $F$\\} $.\n - Following the fifth occurrence from the set $\\{ $F$\\} $, we search for the next occurrence from the set $\\{ $G$\\} $.\n - Following the sixth occurrence from the set $\\{ $G$\\} $, we search for the next occurrence from the set $\\{ $H$\\} $.\n - Following the seventh occurrence from the set $\\{ $H$\\} $, we search for the next occurrence from the set $\\{ $I$\\} $.\n - Following the eighth occurrence from the set $\\{ $I$\\} $, we search for the next occurrence from the set $\\{ $J$\\} $.\n - Following the ninth occurrence from the set $\\{ $J$\\} $, we search for the next occurrence from the set $\\{ $K$\\} $.\n - Following the tenth occurrence from the set $\\{ $K$\\} $, we search for the next occurrence from the set $\\{ $L$\\} $.\n - Following the eleventh occurrence from the set $\\{ $L$\\} $, we search for the next occurrence from the set $\\{ $M$\\} $.\n\nNote that we are searching from the first occurrence of the password ($A$), but not the first occurrence of the message ($M$). This is because the password is only the first occurrence of the password ($A$).\n\nSo, we can follow the same process as the previous password, but only from the message ($M$). This time, we need to keep track of the number of occurrences that we have found (and increment them for each occurrence we find). At the end, we will know how many occurrences of $M$ we have found, and we can print PASS if this is the right number.\n\"\"\"\n)\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(STANDARD_INPUT) == \"PASS\"\nassert solution(STANDARD_INPUT_2) == \"PASS\"\nassert solution(STANDARD_INPUT_3) == \"PASS\"\nassert solution(STANDARD_INPUT_4) == \"FAIL\"\nassert solution(STANDARD_INPUT_5) == \"PASS\"\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n([] [] )\n''') == '] 7'\nassert solution('''13\n([ {} {} ] [ {} ] ( ) )\n''') == 'ok so far'\nassert solution('''21\n[ {} {} {} {} ]\n''') == 'ok so far'\nassert solution('''27\n[ {} {} {} {} {} ] {} {} {}\n''') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('([] [] )') == ')'\nassert solution('()[]{}') == ']'\nassert solution('()[[]{}]{}()') == '}20'\nassert solution('()[{}{}]{}[]{}()[{][{}][{}][](){}[][[][}][}{}][](){}[][]{}') == '}]'"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n8\n([] [] )\n''') == '] 7'\nassert solution(\n'''\n13\n([] [])\n''') == 'ok so far'\nassert solution(\n'''\n27\n[ { { [()]] } ({}{}) ] ({}{}{}{}(){}\n''') == '] 20'\nassert solution(\n'''\n21\n[ { { { [ ] }} ]\n''') == 'ok so far'\nassert solution(\n'''\n13\n[ { { [ { } ] } ]\n''') == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('([] [] )') == ']'\nassert solution('(([] [] ) )') == ']'\nassert solution('[[[()]] [[{}]] ]') == ']'\nassert solution('[{[()]] [[{}]] )') == ']'\nassert solution('[[[()]] [[{}]] )') == ']'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('([] [] )') == ']'\nassert solution('[] [] []') == ']'\nassert solution('[] [ ] [ ]') == ']'\nassert solution('([] [] )') == ']'\nassert solution('[] [] []') == ']'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('([] [] ] )' == '] 7'\nassert solution('([[] []] ) )' == '] 20'\nassert solution('(([]) [{}]) () { }' == '] 20'\nassert solution('[{}][{}{}{})({})({}{}{})({}{}{})]' == '] 20'\nassert solution('[{}{}{})({}{}{})({}{}{})({}{}{}{})({}{}{})]' == '] 20'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'ok so far'\nassert solution(' ') == 'ok so far'\nassert solution('()') == '] 0'\nassert solution('([] [] )') == '] 7'\nassert solution('([] [] ]') == '] 0'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('()') == 'ok so far'\nassert solution('()[]{}') == '[4, 5, 6, 7] 0'\nassert solution('[()[]{}()]') == '] 22'\nassert solution('[({[]})]') == 'ok so far'\nassert solution('[()[]{}()]') == '] 22'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('()') == ')'\nassert solution(']') == ']'\nassert solution('[]') == ']'\nassert solution('(){}[]') == ')'\n"
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"([] [] ) \") == \")\"\nassert solution(\"( ([] [] ) ) \") == \"]\"\nassert solution(\"( [ ( [] ) ] ) \") == \"]\"\nassert solution(\"( [ [ {} ] ] ) \") == \"}\"\nassert solution(\"( [ [ {} ] ] ) \") == \"}\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5\napple\near\nreal\nletters\nstyle\n'''\n    ) == 'Fair Game'\nassert solution(\n'''\n3\napple\nextra\napple\n'''\n    ) == 'Player 1 lost'\nassert solution(\n'''\n2\napple\nneat\n'''\n    ) == 'Player 2 lost'\nassert solution(\n'''\n2\nsnake\nsnake\n'''\n    ) == 'Player 1 lost'\nassert solution(\n'''\n4\n1234\n56789\n67890\n'''\n    ) == 'Player 1 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n3\napple\nextra\napple\n\"\"\") == \"Player 2 lost\"\nassert solution(\"\"\"\\\n3\nxray\nc\nscot\n\"\"\") == \"Player 1 lost\"\nassert solution(\"\"\"\\\n5\na\na\na\na\na\n\"\"\") == \"Fair Game\"\nassert solution(\"\"\"\\\n5\na\na\na\na\na\n\"\"\") == \"Player 1 lost\"\nassert solution(\"\"\"\\\n5\na\na\na\na\na\na\n\"\"\") == \"Player 1 lost\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    '5',\n    'apple',\n    'ear',\n    'real',\n    'letters',\n    'style',\n])) == 'Fair Game'\n\nassert solution('\\n'.join([\n    '3',\n    'apple',\n    'extra',\n    'apple',\n])) == 'Player 2 lost'\n\nassert solution('\\n'.join([\n    '2',\n    'apple',\n    'neat',\n])) == 'Player 1 lost'\n\nprint('solution:', solution(stdin))\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'Fair Game'\nassert solution('apple') == 'Player 1 lost'\nassert solution('lipps') == 'Player 1 lost'\nassert solution('extra') == 'Player 2 lost'\nassert solution('real') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'Player 1 lost'\nassert solution('aa') == 'Player 2 lost'\nassert solution('abc') == 'Player 1 lost'\nassert solution('acb') == 'Player 1 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\napple\\near\\nreal\\nletters\\nstyle') == 'Fair Game'\nassert solution('3\\napple\\nextra\\napple') == 'Player 1 lost'\nassert solution('2\\napple\\nextra\\napple') == 'Player 2 lost'\nassert solution('2\\napple\\nextra\\nletters') == 'Player 2 lost'\nprint(solution(stdin))\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''3\napple\nextra\napple\n''') == 'Player 2 lost'\nassert solution('''2\napple\nneat\n''') == 'Player 1 lost'\nassert solution('''1\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == 'Player 1 lost'\nassert solution('''3\na\nb\nc\nd\n''') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Fair Game\"\nassert solution(stdin) == \"Player 1 lost\"\nassert solution(stdin) == \"Player 2 lost\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\napple\\near\\nreal\\nletters\\nstyle') == 'Player 2 lost'\nassert solution('5\\napple\\near\\nreal\\nletters\\nstyle\\n') == 'Player 1 lost'\nassert solution('6\\napple\\near\\nreal\\nletters\\nstyle\\n') == 'Player 2 lost'\nassert solution('7\\napple\\near\\nreal\\nletters\\nstyle\\n') == 'Player 1 lost'\nassert solution('8\\napple\\near\\nreal\\nletters\\nstyle\\n') == 'Player 1 lost'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000\\n*\\n100\\n') == '100000'\nassert solution('1000\\n+\\n100\\n') == '1010'\nassert solution('1000\\n+\\n1000\\n') == '10000'\nassert solution('1000\\n+\\n100000\\n') == '1010000'\nassert solution('1000\\n+\\n10\\n') == '10010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000\\n*\\n100\\n') == '100000'\nassert solution('10\\n+\\n1000\\n') == '10010'\nassert solution('100\\n+\\n1000\\n') == '1010'\nassert solution('10\\n+\\n10\\n') == '100'\nassert solution('1000000000\\n*\\n1000000000\\n') == '1000000010000010000'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000\\n*\\n100') == '100000'\nassert solution('1000\\n+\\n100') == '10010'\nassert solution('1000\\n+\\n1000') == '10000'\nassert solution('1000\\n*\\n1000') == '100000'\nassert solution('10\\n*\\n10') == '10010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000\\n*\\n100') == '100000'\nassert solution('1000\\n+\\n100') == '1010'\nassert solution('1000\\n+\\n1000') == '10000'\nassert solution('1000\\n*\\n1000') == '100000'\nassert solution('10\\n+\\n10') == '10010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('+') == ''\nassert solution('*') == ''\nassert solution('10') == '1'\nassert solution('100') == '10'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000*') == '10000000'\nassert solution('+') == '100'\nassert solution('*') == '100'\nassert solution('+100') == '100'\nassert solution('+') == '100'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1000\n*\n100\n''') == '100000'\nassert solution('''10000\n+\n10\n''') == '10010'\nassert solution('''10\n+\n1000\n''') == '1010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000 *\\n+ 100\\n= 10000') == '10010'"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000*\\n*\\n100') == '100000'\nassert solution('1000+\\n*\\n100') == '10010'\nassert solution('1000+\\n+\\n100') == '1010'\nassert solution('1000+\\n+\\n1000') == '1011'\nassert solution('1000*\\n*\\n1000') == '10000'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('10') == '10'\nassert solution('10+10') == '20'\nassert solution('10*10') == '100'\nassert solution('10+100') == '110'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 out''') == '3'\nassert solution('''8 in''') == '6'\nassert solution('''52 out''') == '8'"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nassert solution('52 in') == '6'\nassert solution('8 out') == '3'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n\n##"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nassert solution('52 in') == '6'\nassert solution('1000 out') == '13'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"52 in\") == \"6\"\nassert solution(\"8 in\") == \"3\"\nassert solution(\"8 out\") == \"3\"\nassert solution(\"52 out\") == \"8\"\nassert solution(\"8 out\") == \"8\"\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\nassert solution(\"52 in\") == \"6\"\nassert solution(\"1000000 in\") == \"1000000\"\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\nassert solution(\"52 in\") == \"8\"\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 in') == '0'\nassert solution('2 in') == '1'\nassert solution('5 in') == '2'\nassert solution('1 out') == '0'\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nprint('All tests past')\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\nassert solution(\"trolololox\") == \"trolololox\"\nassert solution(\"trololololox\") == \"trololololox\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nprint('All tests passed successfully!')"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\n\"\"\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nassert solution('menolaxios pax') =='menolaxiospax'\nassert solution('pamoli toxes') == 'pamolextoxes'\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nassert solution('laxmax os') == 'laxmaxxos'\nassert solution('pamoli tox') == 'pamolextx'\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n\"\"\"\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nassert solution('toxes toxes') == 'extoxtes'\nassert solution('toxes toxes') == 'extoxtes'\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    stdin = '2018') == 'yes'\nassert solution(\n    stdin = '2019') == 'no'\nassert solution(\n    stdin = '2020') == 'yes'\n\"\"\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'no'\nassert solution('18') == 'no'\nassert solution('2017') == 'yes'\nassert solution('2019') == 'yes'\nassert solution('2018') == 'no'\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\nassert solution(\"2321\") == \"no\"\n\"\"\""
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"\nprint(\"Tests passed\")\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'no'\nassert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\nprint(solution(''))\nprint(solution('2018'))\nprint(solution('2019'))\nprint(solution('2020'))\nprint(solution('12'))\nprint(solution('-1'))\nprint(solution('-2'))\nprint(solution('-3'))\nprint(solution('0'))\nprint(solution('1'))\nprint(solution('2'))\nprint(solution('3'))\nprint(solution('4'))\nprint(solution('5'))\nprint(solution('6'))\nprint(solution('7'))\nprint(solution('8'))\nprint(solution('9'))\nprint(solution('10'))\nprint(solution('11'))\nprint(solution('12'))\nprint(solution('13'))\nprint(solution('14'))\nprint(solution('15'))\nprint(solution('16'))\nprint(solution('17'))\nprint(solution('18'))\nprint(solution('19'))\nprint(solution('20'))\nprint(solution('21'))\nprint(solution('22'))\nprint(solution('23'))\nprint(solution('24'))\nprint(solution('25'))\nprint(solution('26'))\nprint(solution('27'))\nprint(solution('28'))\nprint(solution('29'))\nprint(solution('30'))\nprint(solution('31'))\nprint(solution('32'))\nprint(solution('33'))\nprint(solution('34'))\nprint(solution('35'))\nprint(solution('36'))\nprint(solution('37'))\nprint(solution('38'))\nprint(solution('39'))\nprint(solution('40'))\nprint(solution('41'))\nprint(solution('42'))\nprint(solution('43'))\nprint(solution('44'))\nprint(solution('45'))\nprint(solution('46'))\nprint(solution('47'))\nprint(solution('48'))\nprint(solution('49'))\nprint(solution('50'))\nprint(solution('51'))\nprint(solution('52'))\nprint(solution('53'))\nprint(solution('54'))\nprint(solution('55'))\nprint(solution('56'))\nprint(solution('57'))\nprint(solution('58'))\nprint(solution('59'))\nprint(solution('60'))\nprint(solution('61'))\nprint(solution('62'))\nprint(solution('63'))\nprint(solution('64'))\nprint(solution('65'))\nprint(solution('66'))\nprint(solution('67'))\nprint(solution('68'))\nprint(solution('69'))\nprint(solution('70'))\nprint(solution('71'))\nprint(solution('72'))\nprint(solution('73'))\nprint(solution('74'))\nprint(solution('75'))\nprint(solution('76'))\nprint(solution('77'))\nprint(solution('78'))\nprint(solution('79'))\nprint(solution('80'))\nprint(solution('81'))\nprint(solution('82'))\nprint(solution('83'))\nprint(solution('84'))\nprint(solution('85'))\nprint(solution('86'))\nprint(solution('87'))\nprint(solution('88'))\nprint(solution('89'))\nprint(solution('90'))\nprint(solution('91'))\nprint(solution('92'))\nprint(solution('93'))\nprint(solution('94'))\nprint(solution('95'))\nprint(solution('96'))\nprint(solution('97'))\nprint(solution('98'))\nprint(solution('99'))\nprint(solution('100'))\nprint(solution('101'))\nprint(solution('102'))\nprint(solution('103'))\nprint(solution('104'))\nprint(solution('105'))\nprint(solution('106'))\nprint(solution('107'))\nprint(solution('108'))\nprint(solution('109'))\nprint(solution('110'))\nprint(solution('111'))\nprint(solution('112'))\nprint(solution('113'))\nprint(solution('114'))\nprint(solution('115'))\nprint(solution('116'))\nprint(solution('117'))\nprint(solution('118'))\nprint(solution('119'))\nprint(solution('120'))\nprint(solution('121'))\nprint(solution('122'))\nprint(solution('123'))\nprint(solution('124'))\nprint(solution('125'))\nprint(solution('126'))\nprint(solution('127'))\nprint(solution('128'))\nprint(solution('129'))\nprint(solution('130'))\nprint(solution('131'))\nprint(solution('132'))\nprint(solution('133'))\nprint(solution('134'))\nprint(solution('135'))\nprint(solution('136'))\nprint(solution('137'))\nprint(solution('138'))\nprint(solution('139'))\nprint(solution('140'))\nprint(solution('141'))\nprint(solution('142'))\nprint(solution('143'))\nprint(solution('144'))\nprint(solution('145'))\nprint(solution('146'))\nprint(solution('147'))\nprint(solution('148'))\nprint(solution('149'))\nprint(solution('150'))\nprint(solution('151'))\nprint(solution('152'))\nprint(solution('153'))\nprint(solution('154'))\nprint(solution('155'))\nprint(solution('156'))\nprint(solution('157'))\nprint(solution('158'))\nprint(solution('159'))\nprint(solution('160'))\nprint(solution('161'))\nprint(solution('162'))\nprint(solution('163'))\nprint(solution('164'))\nprint(solution('165'))\nprint(solution('166'))\nprint(solution('167'))\nprint(solution('168'))\nprint(solution('169'))\nprint(solution('170'))\nprint(solution('171'))\nprint(solution('172'))\nprint(solution('173'))\nprint(solution('174'))\nprint(solution('175'))\nprint(solution('176'))\nprint(solution('177'))\nprint(solution('178'))\nprint(solution('179'))\nprint(solution('180'))\nprint"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'\nassert solution(3000) == 'no'\nassert solution(5000) == 'no'\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('0\\n') == ''\nassert solution('1') == 'no'\nassert solution('1\\n') == 'no'\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\""
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\nprint(solution(stdin))\n\nassert solution(stdin) == '0'\nprint(solution(stdin))"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''10 10 10 20 0 10 10 10 10\n4\n''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10\n4\n''') == '1820000'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n5\n''') == '0'\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''4 0 0 0 4 0 0 0 0 4\n3'''\n) == '64'\nassert solution(\n    '''4 0 0 0 4 0 0 0 0 4\n4\n'''\n) == '0'\nassert solution(\n    '''10 10 10 20 0 10 10 10 10 10\n4\n'''\n) == '1820000'\nassert solution(\n    '''10 10 10 20 0 10 10 10 10 10\n5\n'''\n) == '0'\nassert solution(\n    '''4 0 0 0 4 0 0 0 0 4\n4\n'''\n) == '64'\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4\\n3\\n') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4\\n4\\n') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10\\n4\\n') == '1820000'\nassert solution('1 2 3 4\\n5\\n') == '4'\nassert solution('4 0 0 0 4 0 0 0 0 4\\n4\\n') == '0'\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"9\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\\n\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\n\nassert solution(\n'''4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\n\nassert solution(\n'''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n\nassert solution(\n'''10 10 10 20 0 10 10 10 10 10\n5\n''') == '0'\n\nassert solution(\n'''1\n2\n''') == '1'"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330\\n'\n\nassert solution('''7 1\n30 270 995 996 997 998 999\n''') == '2 570\\n'\n\nassert solution('''7 2\n30 270 995 996 997 998 999\n''') == '0 0\\n'\n'''\n\n'''\nimport sys\nassert sys.stdin.read() == ''\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999\\n') == '2 330\\n'\nassert solution('7 1\\n30 270 995 996 997 998 999\\n') == '2 570\\n'\nassert solution('7 2\\n30 270 995 996 997 998 999\\n') == '0 0\\n'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'\nassert solution('7 3\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 4\\n30 270 995 996 997 998 999') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin1) == result1\nassert solution(stdin2) == result2\nassert solution(stdin3) == result3\nassert solution(stdin4) == result4\nassert solution(stdin5) == result5\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 0\\n30 270 995 996 997 998 999\") == \"2 330\"\nassert solution(\"7 1\\n30 270 995 996 997 998 999\") == \"2 570\"\nassert solution(\"7 2\\n30 270 995 996 997 998 999\") == \"0 0\"\n\"\"\"\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'\nassert solution('''7 3\n30 270 995 996 997 998 999''') == '0 0'\nassert solution('''7 4\n30 270 995 996 997 998 999''') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'\nassert solution('''7 3\n30 270 995 996 997 998 999''') == '0 0'\nassert solution('''7 4\n30 270 995 996 997 998 999''') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n7 0\n30 270 995 996 997 998 999\n''') == '2 330\\n'\nassert solution('''\\\n7 1\n30 270 995 996 997 998 999\n''') == '2 570\\n'\nassert solution('''\\\n7 2\n30 270 995 996 997 998 999\n''') == '0 0\\n'\nassert solution('''\\\n8 3\n30 270 995 996 997 998 999\n''') == '0 0\\n'\nassert solution('''\\\n8 4\n30 270 995 996 997 998 999\n''') == '0 0\\n'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abcdef') == '6'\nassert solution('abbaabba') == '2'\nassert solution('abcd') == '3'\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\n\n[input] = stdin.read().splitlines()\n\nresult = solution(input)\n\nprint(result)\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('aa') == 0\nassert solution('abcdef') == 0\nassert solution('aaaaaaaa') == 1\nassert solution('abcabc') == 2\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('ab') == None\nassert solution('abc') == None\nassert solution('aab') == None\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\nassert solution('abbaabbaabba') == 2\nassert solution('abcd') == 3\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\nassert solution('abbaabbaabba') == 2\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abcd') == 'abcd'\nassert solution('abcdef') == 'abcdef'\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n\"\"\") == \"2\\n1 2\\n\"\n\nassert solution(\"\"\"5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\"\"\"3 6\n1 2 4\n11 12 15 19 24 30\n\"\"\") == \"0\\n1\\n\"\n\nassert solution(\"\"\"6 9\n1 2 4 5 6 7 8 9 10 11\n\"\"\") == \"0\\n1\\n\"\n\n\"\"\""
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == \"2\\n1 2\\n\"\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == \"1\\n1\\n\"\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == \"0\\n1\\n\"\n'''\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\\n1 2\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\nSample Output 3''') == '0\\n1\\n'\nassert solution('''2 3\n1 2 3 4\n1 2 4 5\n''') == '1\\n1 2\\n'\nassert solution('''4 9\n1 2 4 5\n6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n''') == '1\\n1 2\\n'\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == input(\"\")\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '''2\n1 2\n'''\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '''1\n1\n'''\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '''0\n1 2\n'''"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 2\") == \"1\"\nassert solution(\"2 5\\n1 2 4 5\") == \"2\"\nassert solution(\"4 10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\") == \"0\"\nassert solution(\"5 9\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\") == \"1\"\nassert solution(\"1 2\\n2 1\") == \"0\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nassert solution(input()) == input()\n"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nassert solution('5555555') == '0'\nassert solution('555555') == '1'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"\nassert solution(\"3579678\") == \"0\"\nassert solution(\"1234567\") == \"0\"\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"5551212\") == 1\nassert solution(\"5519876\") == 0\nassert solution(\"5055555\") == 0\nassert solution(\"555121212\") == 0\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('-8/1') == '0/1'\nassert solution('-32/1') == '-5/9'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('100/1') == '100/1'\nassert solution('-100/1') == '-100/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('-50/1') == '5/9'\nassert solution('-0/1') == '0/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('-40/-1') == '-1/9'\nassert solution('-0/-1') == '-1/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\",\n\"\"\"#!/usr/bin/env python3\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('25/4') == '1/3'\nassert solution('-6/1') == '-2/3'\nassert solution('-2/1') == '-2/3'\nassert solution('1/2') == '5/16'\nassert solution('-1/2') == '-5/16'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nprint(\"Testcases passed successfully!\")\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"Nonsense\"\nassert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"\n\n\"\"\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3\nC E G\nD F# A\n\"\"\") == \"Transposition\"\nassert solution(\n\"\"\"7\nC C G G A A G\nC C F F D# D# F\n\"\"\") == \"Retrograde\"\nassert solution(\n\"\"\"7\nA B C D E F G\nG F E D C B A\n\"\"\") == \"Inversion\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n2\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\nC E G\\nD F# A') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Inversion'\nassert solution('7\\nA B C D E F G\\nC C F F D# D# F') == 'Retrograde'\nprint(solution(input()))"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10\\n1 A1') == 'Transposition'\nassert solution('7\\n1 A1 A2 A3 B1 B2') == 'Retrograde'\nassert solution('7\\n1 A1 A2 A3 B1 B2 A4') == 'Inversion'\nassert solution('7\\n1 A1 A2 A3 B1 B2 A4 A5 B3 B4 B5') == 'Nonsense'\nassert solution('10\\n1 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10') == 'Transposition'\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\nC E G\\nD F# A') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F\\n') == 'Inversion'\nassert solution('7\\nA B C D E F G\\nG F E D C B A\\n') == 'Retrograde'\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('ab') == 'Nonsense'\nassert solution('abc') == 'Transposition'\nassert solution('abc def') == 'Nonsense'\nassert solution('abcd efgh') == 'Retrograde'\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Nonsense'\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") is None\nassert solution(\"\\n\") == None\nassert solution(\"\\t\") is None\nassert solution(\"\\r\") == None\n\nassert solution(\"\\n1\\n\") == \"Transposition\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n'''\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('I love ba-na-na') == \"Gah kove bababa\"\nassert solution('Cat-a-pil-lar') == \"Catacillar\"\nassert solution('Co-ding is the best') == \"Cociccah gs the bestuh\"\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\n\"\"\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''I love ba-na-na\n''') == '''Gah kove bababa\n'''\nassert solution('''Cat-a-pil-lar\n''') == '''Catacillar\n'''\nassert solution('''Co-ding is the best\n''') == '''Cociccah gs the bestuh\n'''\nprint(\"Passed. (Add more tests to be more sure!)\")\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"I love ba-na-na\"\n) == \"Gah kove bababa\"\nassert solution(\n    \"Cat-a-pil-lar\"\n) == \"Catacillar\"\nassert solution(\n    \"Co-ding is the best\"\n) == \"Cociccah gs the bestuh\"\nprint(\"tests passed\")\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\nassert solution(\"Coding is the best\") == \"Cociccah gs the bestuh\"\nassert solution(\"Coding is the best\") == \"Cociccah gs the bestuh\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\nprint(\"All set?\")"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n\"\"\""
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == 16\nassert solution('1') == 6\nassert solution('3') == 14\nassert solution('3') == 14\nassert solution('9') == 54\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\nassert solution('1') == '6'\nassert solution('2') == '12'\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14\nassert solution(5) == 30\nassert solution(10) == 36\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 6\nassert solution('4') == 16\nassert solution('3') == 14\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\nprint(solution(stdin))"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'\nassert solution('1\\n') == '6'\nassert solution('2\\n') == '12'\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 6\nassert solution('4') == 16\nassert solution('3') == 14"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\") == \"2\"\nassert solution(\"5 10\\n4 8 1 9 7\\n7 2 2 2 2 2 2\") == \"4\"\nassert solution(\"1 5\\n2 4 3 5\") == \"3\"\nassert solution(\"5 6\\n1 2 3 4 5\") == \"3\"\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5\\n1 2 3 4 5\\n') == '3'\nassert solution('1 2 3 4 5\\n1 2 3 4 5\\n') == '3'\nassert solution('1 2 3 4 5\\n4 8 1 9 7\\n') == '2'\nassert solution('1 2 3 4 5\\n4 8 1 9 7\\n') == '2'\nassert solution('5 6\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '3'\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 6\n1 2 3 4 5''') == '3'\nassert solution('''5 10\n4 8 1 9 7''') == '2'\nassert solution('''6 5\n1 2 3 4 5 6\n7 8 9 10 11 12\n13 14 15 16 17\n18 19 20 21 22\n23 24 25 26 27''') == '4'\nassert solution('''2 2\n1\n2\n3''') == '1'\nassert solution('''1 1\n1\n2\n3''') == '1'\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\") == \"2\"\nassert solution(\"5 10\\n1 3 1 7\") == \"4\"\nassert solution(\"5 10\\n1 2 3 4 5\") == \"3\"\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5 10\n1 3 1 7\n''') == \"2\"\nassert solution(\n'''\n1 1\n1\n''') == \"1\"\nassert solution(\n'''\n1 3 1 4 5\n2 3 3 4 5\n''') == \"4\"\nassert solution(\n'''\n1 1\n1\n''') == \"1\"\nassert solution(\n'''\n1 1\n1\n''') == \"1\"\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"1\"\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 2') == '2'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''10 10\n1 3 1 7\n''') == '4'\nassert solution('''10 10\n2 3 5 8 9 1\n''') == '1'\nassert solution('''10 10\n1 3 1 7\n''') == '1'\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'possible'\n\n'''\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1\\n') == 'impossible'\nassert solution('1 2\\n1 0 0\\n0 1 1\\n') == 'impossible'\n\"\"\""
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"0 1\n0 0 1\n1 0 0\n\"\"\") == \"impossible\"\nassert solution(\"\"\"1 2\n1 0 0\n0 1 0\n\"\"\") == \"possible\"\n\n\"\"\""
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1\\n') == 'impossible'\nassert solution('1 2\\n1 0 0\\n1 1 0\\n') == 'impossible'\nassert solution('1 2\\n1 0 0\\n0 1 1\\n') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0\") == \"impossible\"\nassert solution(\"1 0\") == \"possible\"\nassert solution(\"1 1\") == \"impossible\"\nassert solution(\"1 1 1\") == \"impossible\"\nassert solution(\"1 1 0\") == \"possible\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'possible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'impossible'\nassert solution(stdin) == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1') == 'impossible'\nassert solution('1 2\\n1 1 1\\n1 1 1') == 'possible'\nassert solution('1 2\\n1 1 1\\n0 0 0') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\n\nassert solution(\n\"\"\"1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'possible'\nassert solution('1 2\\n0 1 1\\n1 0 0') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1\\n') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 1 1\\n') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'possible'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nassert solution('1 1000000000 1000000000') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\nassert solution(\"10 10\") == \"9.0\"\nassert solution(\"10 100\") == \"99.0\"\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nassert solution('10 5') == '5.75'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"2 3\\n\") == \"1.875\"\nassert solution(\"6 2\\n\") == \"4.25\"\nassert solution(\"3 2\\n\") == \"1.5\"\nassert solution(\"4 3\\n\") == \"2\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 0''') == '''0 0'''\nassert solution('''4 2 7''') == '''1 4'''\nassert solution('''3 0 0''') == '''1 6'''\nassert solution('''1000 5000000 1000''') == '''7 25'''\nassert solution('''1000 5000000 1500''') == '''5 1'''\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\nassert solution(\"4 0 0\") == \"1 6\"\nassert solution(\"2 3 2\") == \"4 1\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1 0''') == '0 0'\nassert solution('''4 2 7''') == '1 4'\nassert solution('''3 0 0''') == '1 6'\nassert solution('''7 2 4''') == '0 0'\nassert solution('''1 1 1''') == '0 0'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1 0''') == '0 0'\nassert solution('''4 2 7''') == '1 4'\nassert solution('''3 0 0''') == '1 6''''\nimport sys\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nassert solution('1 1 0') == '0 0'\nassert solution('2 1 1') == '1 0'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nassert solution('4 1 0') == '1 2'\nassert solution('3 0 0') == '1 6'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"1 1 0\"\n) == \"0 0\"\nassert solution(\n\"4 2 7\"\n) == \"1 4\"\nassert solution(\n\"3 0 0\"\n) == \"1 6\"\nassert solution(\n\"9 4 11\"\n) == \"5 6\"\nassert solution(\n\"9 0 8\"\n) == \"5 6\"\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('BWWB') == 0\nassert solution('WBWB') == 1\nassert solution('BWBWW') == 0\nassert solution('WBBWB') == 1\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"WBWWB\") == \"0\"\nassert solution(\"BWBWWB\") == \"1\"\nassert solution(\"WWBWBB\") == \"0\"\nassert solution(\"BWWBBW\") == \"0\"\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"BWBWBWB\") == \"\"\nassert solution(\"WWBWBWB\") == \"0\"\nassert solution(\"WBWBWBW\") == \"0\"\nassert solution(\"WWBWBWBWBWBWBWBWWWWWWWWWWWWWWWWWBWWWWWWWWW\") == \"1\"\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('WBBW') == '1'\nassert solution('BWBB') == '0'\nassert solution('BWWB') == '0'\nassert solution('BWBWB') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('BWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '0'\nassert solution('BWWBBW\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '1'\nassert solution('WWBWBB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '0'\nassert solution('WWWBWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '1'\nassert solution('WWWBWB\\nWWWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('a ') == None\nassert solution('a\\n') == None\nassert solution('a\\na') == None\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW''') == '1'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB''') == '0'\nassert solution('''2\nWWWWWW\nBBBBBB''') == '1'\nassert solution('''3\nWWWWWW\nWWWWWW\nWWWWWW''') == '0'\nassert solution('''3\nWWWWWW\nWWWWWW\nWWWWWW''') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW''') == '1'\nassert solution('''4\nBWWB\nWBWB\nBWWB\nBWBW''') == '0'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\nSample Output 3:\n0\n''') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('WBBWB') == '1'\nassert solution('WBWBWB') == '0'\nassert solution('BWBWBW') == '0'\nassert solution('WWBBWB') == '0'\nassert solution('WBBWBW') == '0'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('''1 1 2 1\n1 1 2 1\n1 1 2 1\n1 1 2 1''') == '1 1\\n1 1\\n1 1\\n1 1'\nassert solution('''1 2 2 3 3\n1 1 2 1 2\n1 1 2 1 2\n1 1 2 1 2''') == '1 2\\n1 1\\n1 2\\n1 2'\nassert solution('''1 2 2 3 3\n1 1 2 1 2\n1 1 2 1 2\n1 1 2 1 2''') == '1 2\\n1 1\\n1 2\\n1 2'\nassert solution('''1 2 2 3 3\n1 1 2 1 2\n1 1 2 1 2\n1 1 2 1 2''') == '1 2\\n1 1\\n1 2\\n1 2'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1'\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '3 4'\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '3 2'\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '1 2'\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '3 7'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\nassert solution(\"3 3 3 1 1\\n3 3 3 1 1\\n1 1 1 1 1\\n2 2 2 2 2\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\nassert solution(\"3 3 3 1 1\\n3 3 3 1 1\\n1 1 1 1 1\\n2 2 2 2 2\\n2 2 2 2 2\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\nassert solution(\"2 2 2 2 2\\n2 2 2 2 2\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\nassert solution(\"2 2 2 2 2\\n2 2 2 2 2\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1'\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n'''\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 7 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 7'\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 7 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n'''\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 7 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 3'\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 7 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n'''\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 7 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n3 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 3'\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 7 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n3 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n'''\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 7 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n3 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n4 4 1 2\n''') == '2 3'\n'''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 7 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n2 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n3 9 1 2\n3 4 6 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n4 4 1 2\n'''\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '''2 1\n3 4\n3 2\n1 2\n3 7'''\n\nassert solution('''1\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '''1 1\n1 4 5 8'''\n\nassert solution('''7\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n1 2 1 2\n3 4 5 6''') == '''1 1\n1 4 5 8\n3 4 5 6'''\n\nassert solution('''9\n1 1 1 1 1\n2 2 1 1 2\n1 1 1 1 1\n2 2 1 1 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '''1 1\n1 4 5 8\n3 4 5 6\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1'''\n\nassert solution('''9\n1 1 1 1 1\n2 2 1 1 2\n1 1 1 1 1\n2 2 1 1 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '''1 1\n1 4 5 8\n3 4 5 6\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1'''"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '2 1'\nassert solution('2\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '3 4'\nassert solution('2\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '3 2'\nassert solution('2\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '1 2'\nassert solution('2\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '3 7'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expect\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a -> b -> c -> d -> e -> f -> g -> h -> i -> j -> k -> l -> m') == True\nassert solution('a -> b -> c -> d -> e -> f -> g -> h') == True\nassert solution('a -> b -> c -> d -> e -> f -> g -> h -> i -> j') == False\nassert solution('a -> b -> c -> d -> e -> f -> g -> h -> i -> j -> k') == True\nassert solution('a -> b -> c -> d -> e -> f -> g -> h -> i -> j -> k -> l') == True\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('[3,2,0,-4]\\n1') == True\nassert solution('[1,2]\\n0') == True\nassert solution('[1]\\n-1') == False\nassert solution('[]\\n-1') == False\n\n\n\nThe idea is to use two pointers, one fast one slow. We increment fast one by one, and increment slow one by one. If they meet at some point, then there is a cycle. If the fast one reaches the end of the linked list, then the fast one can never reach the end of the linked list.\n\nWe only need to use one loop, so we can use the fast one to find the cycle. If there is a cycle, then the fast one will eventually catch up with the slow one, and we can see the cycle.\n\nHere's how the algorithm works:\n1) We create two pointers, one fast one slow. We set the fast one to head. fast one will increment one node and slow one will increment two nodes.\n2) We compare the values of the fast one and the slow one. If they are the same, we know that the fast one will eventually reach the slow one. If they are not the same, then there is no cycle.\n\nTime complexity: O(n)\nSpace complexity: O(1)\n'''\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"head, the head of a linked list, determine if the linked list has a cycle in it.\\n\"\n                \"There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter.\") == 'true\\n'\nassert solution(\"3\\n2\\n0\\n-4\\n\", 0) == 'true\\n'\nassert solution(\"1\\n2\\n\", -1) == 'false\\n'\nassert solution(\"1\\n2\\n\", 0) == 'false\\n'\nassert solution(\"1\\n2\\n\", 1) == 'false\\n'\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") is None\nassert solution(\"1->2->3\") == False\nassert solution(\"1->2->2->3\") == True\nassert solution(\"1->2->3->2->1\") == False\nassert solution(\"1->2->3->2->1->2->3->2->1\") == True\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0->1\") == True\nassert solution(\"0->1->2->1\") == False\nassert solution(\"0->1->2->3\") == False\nassert solution(\"1\") == True\nassert solution(\"1->2\") == True\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2\n0\n-4''') == True\nassert solution('''1\n2\n''') == True\nassert solution('''1\n''') == False\nassert solution('''3\n2\n0\n-4\n''') == True\nassert solution('''3\n2\n0\n-4\n''') == True\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([\"1->2->3->3\",\"2->4\",\"4->1\",\"1->2\",\"3\"]) == True\nassert solution([\"1->2\",\"2->3\"]) == False\nassert solution([\"1->2->3->3\",\"2->4\",\"4->1\",\"1->2\"]) == False\nassert solution([\"1->2\",\"2->3\",\"3\",\"4\",\"5\"]) == False\nassert solution([\"1->2->3\",\"2->4\",\"4->1\",\"1->2\"]) == False\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4 5\") == [0, 1]\nassert solution(\"1 1 2 3 4 5\") == [1, 2]\nassert solution(\"1 1 2 3 4 5 6\") == [1, 2]\nassert solutionn    assert solution(\"1 1 2 3 4 5\") == [0, 1]\n    "
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"0\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([]) == \"\"\nassert solution([2]) == \"\"\nassert solution([1, 1, 2]) == [0, 2]\nassert solution([2, 7, 11, 15]) == [0, 1]\nassert solution([2, 7, 11, 15, 22, 26, 3, 9, 17, 22]) == [3, 4]\n\"\"\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"0,1\"\nassert solution(\"1\\n2\\n3\") == \"0,2\"\nassert solution(\"1\\n2\\n3\\n4\") == \"0,2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"0,3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"0,3\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"0 1\"\n\nprint(solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\"))\n\nprint(solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\"))\n\nprint(solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\"))\n\nprint(solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\"))\n\nprint(solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\"))\n\nprint(solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([]) == \"\"\nassert solution([2, 7, 11, 15]) == \"0, 1\"\nassert solution([2, 7, 11, 15, 19]) == \"1, 2\"\nassert solution([2, 7, 11, 15, 19, 22, 32, 40]) == \"0, 1\"\nassert solution([2, 7, 11, 15, 19, 22, 32, 40, 42]) == \"0, 1\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 7 11 15''') == '[0,1]'\nassert solution('''2 4 6 8''') == '[1,3]'\nassert solution('''1''') == '[]'\nassert solution('''9''') == '[0]'\nassert solution('''2 4 6 7 8 10''') == '[1,2]'\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 2 3 4 5\\n\"\n    \"9\\n\"\n) == \"0 1\\n\"\n\nassert solution(\n    \"1 2 3 4 5\\n\"\n    \"6\\n\"\n) == \"2 3\\n\"\n\nassert solution(\n    \"1 2 3 4 5\\n\"\n    \"7\\n\"\n) == \"2 4\\n\"\n\nassert solution(\n    \"1 2 3 4 5\\n\"\n    \"9\\n\"\n) == \"0 1\\n\"\n\nassert solution(\n    \"1 2 3 4 5\\n\"\n    \"1\\n\"\n) == \"0 1\\n\""
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\nassert solution([5, 1, 3]) == [0, 1]\nassert solution([5, 3]) == [0, 1]\nassert solution([]) == []\nassert solution([1,2,3]) == [0, 1]\n"
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == [0, 1]\nassert solution(\"1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\") == [0, 3]\nassert solution(\"1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\") == [3, 4]\nassert solution(\"1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\") == [3, 4]\nassert solution(\"1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\") == [3, 4]\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '0'\nassert solution('''4''') == '1'\nassert solution('''4\n8\n3\n9\n2\n3\n1\n7\n4\n8\n1''') == '4'\nassert solution('''4\n8\n3\n9\n2\n3\n1\n7\n4\n8\n1\n''') == '4'\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(3) == 0\nassert solution(6) == 1\nassert solution(8) == 2\nassert solution(10) == 3\nassert solution(14) == 4\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '0'\nassert solution('''4''') == '1'\n\nprint(solution('''1'''))\n'''\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '0'\nassert solution('''4''') == '1'\nassert solution('''100''') == '6'\nassert solution('''1000''') == '1940'\nassert solution('''300000000''') == '100000000000000'"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == 0\nassert solution(\"4\") == 1\nassert solution(\"\") == 0\nassert solution(\"1\") == 0\nassert solution(\"2\") == 1\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n0\") == \"\"\nassert solution(\"1\\n0\\n0\") == \"\"\nassert solution(\"1\\n0\\n0\\n0\") == \"\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '5'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\"\"2\n1 2 2 1\"\"\") == \"4\"\nassert solution(\"\"\"1\n1 1 1 1\"\"\") == \"impossible\"\nassert solution(\"\"\"2\n1 2 1 2\"\"\") == \"impossible\"\nassert solution(\"\"\"10\n
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2 2 1\") == \"4\"\nassert solution(\"3\\n3 7\") == \"impossible\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2 2 1''') == '4'\nassert solution('''3\n1 3 7\nSample Output 2:\nimpossible\n''') == 'impossible'\nassert solution('''4\n1 3 6 2\nSample Output 2:\n6\n''') == '6'\nassert solution('''10\n1 2 1 1 1 1 1 1 1 1 1\nSample Output 2:\nimpossible\n''') == 'impossible'\nassert solution('''6\n1 2 1 2 1 1 2 1\nSample Output 2:\n4\n''') == '4'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2\n1 2 2 1\n''') == '4'\nassert solution(\n'''\n1\n3 7\n''') == 'impossible'\nassert solution(\n'''\n1\n2 2 1\n''') == 'impossible'\nassert solution(\n'''\n1\n1 1\n''') == 'impossible'\nassert solution(\n'''\n2\n1 2 2 1\n''') == '4'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data\n'''\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4') == 'impossible'\nassert solution('1\\n3\\n4\\n2') == 'impossible'\nassert solution('1\\n2\\n3\\n2') == 'impossible'\nassert solution('1\\n2\\n3\\n1') == 'impossible'\nassert solution('1\\n2\\n1\\n3') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"1 2 2 1\") == \"4\"\nassert solution(\"1 2 2 3 3 3 1\") == \"impossible\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2 2 1\n''') == '4'\nassert solution('''1\n2\n3 4\n''') == 'impossible'\nassert solution('''4\n1 4 2 4 1\n''') == '4'\nassert solution('''2\n5 5\n1 1 1 1 1\n2 2 2 2 2\n''') == 'impossible'\nassert solution('''2\n5 5\n1 3 1 1 1\n2 2 2 2 2\n''') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'impossible'\nassert solution('1\\n2') == 'impossible'\nassert solution('1\\n1 2 2 1') == '4'\nassert solution('1\\n1 2 2 2 1') == 'impossible'\nassert solution('1\\n1 2 2 1 4') == '6'\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''184 1\n''') == '180'\nassert solution(\n'''123450995 1\n''') == '123451000'\nassert solution(\n'''4 9\n''') == '180'\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6 2\") == \"180\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"100 5\") == \"120\"\nassert solution(\"10000000 1000000000\") == \"10000000\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\nprint(solution(stdin))\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"0\"\nassert solution(\"100 2\") == \"10\"\nassert solution(\"16 3\") == \"16\"\nassert solution(\"64000 9\") == \"64000\"\nassert solution(\"2 4\") == \"0\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n15\") == \"15\"\nassert solution(\"2\\n15\") == \"15\"\nassert solution(\"3\\n15\") == \"15\"\nassert solution(\"4\\n15\") == \"15\"\nassert solution(\"5\\n15\") == \"15\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 1\") == \"3\"\nassert solution(\"1 10\") == \"9\"\nassert solution(\"100 2\") == \"99\"\nassert solution(\"1000 3\") == \"999\"\nassert solution(\"10000 3\") == \"9999\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n179\\n') == '180'\nassert solution('9\\n0\\n') == '10'\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1617 9\n\"\"\"\n) == '1500000000'\n\nassert solution(\n\"\"\"\n461696 387965\n\"\"\"\n) == '70000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == 0\nassert solution(\"0 1\\n1 0\\n1 1\\n\") == 0\nassert solution(\"3\\n0 1\\n1 0\\n1 1\\n\") == 0\nassert solution(\"3\\n0 1\\n1 0\\n1 1\\n\") == 0\nassert solution(\"3\\n0 1\\n1 0\\n1 1\\n\") == 0\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n3\") == \"0.000000\"\nassert solution(\"1\\n1\\n2\\n3\\n3\") == \"0.000000\"\nassert solution(\"1\\n1\\n1\\n3\\n3\") == \"0.500000\"\nassert solution(\"1\\n1\\n2\\n3\\n3\") == \"0.000000\"\nassert solution(\"1\\n1\\n1\\n1\\n3\") == \"0.000000\"\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''1\n0 1\n1 0\n1 1''') == '0.000000'\nassert solution('''4\n0 1\n1 0\n1 1\n3 1''') == '0.166667'\nassert solution('''7\n0 0\n1 2\n2 4\n3 5\n4 6\n5 7\n6 8''') == '3.83984'\nassert solution('''10\n0 0\n1 2\n2 4\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12''') == '3.866685'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0.000000'\nassert solution('''8\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0.097839'\nassert solution('''9\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '0.451221'\nassert solution('''2\n1 1\n1 1''') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n2 3') == '0.0'\nassert solution('1 1\\n2 2\\n3 3') == '0.0'\nassert solution('0 1\\n1 0\\n1 1\\n') == '0.0'\nassert solution('3\\n0 1\\n1 0\\n1 1\\n') == '0.0'\nassert solution('3\\n0 0\\n1 0\\n1 0\\n') == '0.0'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.000000\""
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2\\n3\\n') == '0.000000'\nassert solution('1\\n2\\n3\\n') == '0.500000'\nassert solution('1\\n2\\n3\\n') == '0.000000'\nassert solution('1\\n3\\n2\\n') == '0.500000'\nassert solution('1\\n3\\n2\\n') == '0.500000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '''3\n1 1\n2 2\n3 3'''\n) == '0.000000'\n\nassert solution(\n    '''1\n1 1'''\n) == '0.000000'\n\nassert solution(\n    '''1\n1 1\n1 1\n1 1'''\n) == '0.000000'\n\nassert solution(\n    '''2\n1 1\n2 2\n3 3\n4 4'''\n) == '0.000000'\n\nassert solution(\n    '''2\n1 1\n2 2\n3 3'''\n) == '0.000000'"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == \"0.000000\"\nassert solution('''5\n3 2\n-4 4\n4 0\n3 -1\n-3 -1''') == \"2.50000\"\nassert solution('''10\n-2 1\n-1 -1\n3 -1\n1 -2\n2 -2\n5 -5\n-3 -3\n4 -4\n-5 -5\n-3 -4''') == \"3.000000000000001\"\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1\\n2\\n4\\n'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n6\\n8\\n'\nassert solution('''8\n3\n2 1 2\n2 3\n2 5\n1 3\n1 2\n4 2 6 8 1\n''') == '1\\n2\\n'\nassert solution('''8\n4\n2 1 2 3\n2 3\n2 4\n2 1\n3 4\n2 2\n2 3\n1 2\n4 2 6 8 1\n''') == '1\\n2\\n3\\n'\n\n--- 3.2.1 - Is it a bard? ---\nAn important step in a tale of epic proportions. You need to know if a person is a bard or not. In this problem, you will be given a list of villagers, who are present at a certain evening. Each of them will give you a song that has not been sung yet. But as you know, the song that has been sung is not the one you want.\n\nThe goal of the game is to find the bard. After each evening, the bard will sing the song that he has just learned. But the song that has been sung is not the one he wants, and he may have already been given one.\n\nGiven the list of villagers and the number of the song that he has just learned, output 'yes' if the bard is present, otherwise output 'no'.\n\nIf there is no bard, no song should be sung.\n\n-----Input-----\nThe first line of input contains an integer $N$, $2 \\leq N \\leq 100$, the number of villagers. The villagers are numbered $1$ to $N$. Villager number $1$ is the bard.\n\nThe second line contains an integer $E$, $1 \\leq E \\leq 50$, the number of evenings.\n\nThe next $E$ lines contain the list of villagers present on each of the $E$ evenings. Each line begins with a positive integer $K$, $2 \\leq K \\leq N$, the number of villagers present that evening, followed by $K$ positive integers separated by spaces representing the villagers.\n\nNo villager will appear twice in one night and the bard will appear at least once across all nights.\n\n-----Output-----\nOutput 'yes' if the bard is present, otherwise output 'no'.\n\n-----Example-----\nSample Input 1:\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\nSample Output 1:\nyes\n\nSample Input 2:\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\nSample Output 2:\nno\n\nSample Input 3:\n8\n3\n2 1 2\n2 3\n2 5\n1 3\n1 2\n4 2 6 8 1\nSample Output 3:\nyes\n\nSample Input 4:\n8\n3\n2 1 2\n2 3\n2 5\n1 3\n1 2\n4 2 6 8 1\nSample Output 4:\nno\n\nSample Input 5:\n8\n2\n2 1 2\n2 3\n2 5\n1 3\n1 2\n4 2 6 8 1\nSample Output 5:\nno\n\n----- Solution ----\n\"\"\"\n  Test to see if a person is a bard or not.\n  If the person is a bard, return 'yes'\n  If not, check each evening\n  If there is a bard, return 'yes'\n  Else, return 'no'\n\"\"\"\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1') == '1\\n2\\n4\\n'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\") == \"\"\"1\n2\n4\n\"\"\"\nassert solution(\n\"\"\"8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n\"\"\") == \"\"\"1\n2\n6\n8\n\"\"\"\nassert solution(\n\"\"\"10\n6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n\"\"\") == \"\"\"1\n1\n\"\"\"\nassert solution(\n\"\"\"20\n6\n
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3\\n2') == '1'\nassert solution('1\\n3\\n2\\n1') == '1'\nassert solution('1\\n3\\n2\\n1\\n1\\n2') == '2'\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint('Passed!')\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1\\n2\\n4\\n'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n6\\n8\\n'\nassert solution('''10\n10\n1 3 2 5 6 7 8 9 10\n1 3 2 5 7 8 9 10\n3 2 5 7 8 9 10\n4 5 7 8 9 10\n2 5 7 8 9 10\n3 5 7 8 9 10\n4 5 7 8 9 10\n2 5 7 8 9 10\n3 5 7 8 9 10\n''') == '1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n'\n\nprint('all tests passed')\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n1\\n3\\n2\\n3\\n3\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n3\\n3\\n4\\n2\\n4\\n1\\n2\\n2\\n3\\n3\\n4\\n3\\n3\\n3\\n2\\n1\\n2\\n3\\n1\\n2\\n2\\n2\\n1\\n1\\n2\\n3\\n1\\n2\\n3\\n2\\n2\\n2\\n3\\n3\\n4\\n2\\n4\\n1\\n2\\n2\\n2\\n3\\n1\\n2\\n3\\n2\\n2\\n3\\n2\\n3\\n2\\n2\\n2\\n3\\n3\\n4\\n3\\n3\\n3\\n3\\n3\\n2\\n1\\n2\\n2\\n1\\n2\\n3\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n1\\n3\\n2\\n2\\n2\\n2\\n3\\n2\\n3\\n3\\n2\\n2\\n1\\n2\\n2\\n3\\n2\\n2\\n3\\n2\\n2\\n2\\n3\\n3\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n2\\n3\\n2\\n1\\n2\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n3\\n1\\n2\\n3\\n1\\n1\\n1\\n1\\n3\\n3\\n2\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n2\\n3\\n3\\n1\\n3\\n2\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n1\\n1\\n3\\n2\\n2\\n3\\n2\\n2\\n3\\n3\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n1\\n3\\n1\\n1\\n2\\n1\\n3\\n3\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n3\\n3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n3\\n2\\n2\\n1\\n3\\n1\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n3\\n2\\n2\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n3\\n2\\n3\\n1\\n1\\n1\\n3\\n3\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n3\\n1\\n3\\n1\\n3\\n2\\n2\\n3\\n2\\n3\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n1\\n3\\n2\\n1\\n3\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n3\\n1\\n1\\n1\\n3\\n1\\n1\\n3\\n1\\n1\\n3\\n2\\n1\\n1\\n1\\n1\\n3\\n1\\n3\\n1\\n1\\n2\\n3\\n1\\n1\\n1\\n1\\n1\\n3\\n3\\n1\\n1\\n2\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n3\\n1\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n3\\n1\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1''') == '1\\n2\\n4\\n'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\nSample Output 2:\n1\n2\n6\n8\n''') == '1\\n2\\n6\\n8\\n'\nprint(solution('''10\n7\n5 1 3 6 9 7 6\n3 6 6 5 3\n6 5 6 2 4\n3 6 2 5 6\n2 2 3 5 1\n6 6 1 3 2\n1 3 2 3 2\n3 2 2 1 1\n1 3 3 3\nSample Output 2:\n1\n3\n6\n7\n'''))\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n4\\n1 2 3 4\\n3 2 3 4\\n3 4 2 1\\n2 4\\n2 1 3 4 5 6\\n3 6 2 1\\n4 2 6 2\\n2 6 2\\n4 2 6 2 1\\n1 2 3 4\\n3 4 2 1') == '1\\n2\\n4\\n6\\n8'\nassert solution('3\\n4\\n1 2 3 4\\n3 2 3 4\\n3 4 2 1\\n2 4\\n2 1 3 4 5 6\\n3 6 2 1\\n4 2 6 2\\n2 6 2\\n4 2 6 2 1\\n1 2 3 4\\n3 4 2 1') == '1\\n2\\n4\\n6'\nassert solution('3\\n4\\n1 2 3 4\\n3 2 3 4\\n3 4 2 1\\n2 4\\n2 1 3 4 5 6\\n3 6 2 1\\n4 2 6 2\\n2 6 2\\n4 2 6 2 1\\n1 2 3 4\\n3 4 2 1') == '1\\n2\\n4\\n6'\nassert solution('2\\n5\\n2 1 3 4 5\\n3 4 2 1\\n2 3 4\\n2 1 3 4 5 6\\n3 6 2 1\\n4 2 6 2\\n2 6 2\\n4 2 6 2 1\\n1 2 3 4\\n3 4 2 1') == '1\\n2\\n4'\nassert solution('2\\n5\\n2 1 3 4 5\\n3 4 2 1\\n2 3 4\\n2 1 3 4 5 6\\n3 6 2 1\\n4 2 6 2\\n2 6 2\\n4 2 6 2 1\\n1 2 3 4\\n3 4 2 1') == '1\\n2\\n4'\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\nprint(solution(\"5 4 4\"))\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 4 5\") == 60\nassert solution(\"1 2 3\") == 8\nassert solution(\"2 2 2\") == 16\nassert solution(\"3 4 5\") == 60\nassert solution(\"3 1 3\") == 8\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"60\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\nassert solution(\"2 3 4\") == \"24\"\nassert solution(\"2 2 3\") == \"60\"\nassert solution(\"2 3 3\") == \"4\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"10 9 8\") == \"384\"\n\"\"\""
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"8\"\n\nfrom itertools import permutations\nstdin = input().strip()\nN, T, M = stdin.split(' ')\nprint(len(list(permutations([int(N), int(T), int(M)], 3))))"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 5') == '60'\nassert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nprint('Test cases passed!')"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1 2 3 4\") == \"1.2\"\nassert solution(\"2 1 0 0 0\") == \"0.2\"\nassert solution(\"3 0 0 0 0 0\") == \"0.2\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 0 2\\n') == '1.6666666666666667'\nassert solution('3\\n3 0 0\\n') == '1.0'\nassert solution('3\\n3 0 4\\n') == '2.4'\nassert solution('3\\n3 -1 4\\n') == '2.5'\nassert solution('3\\n3 1 4\\n') == '2.0'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n3 0 2'''\n) == '1.6666666666666667'\n\nassert solution(\n'''3\n3 -1 4'''\n) == '2.5'\n\nassert solution(\n'''4\n0 1 2 3\n-1 -1 -1 -1'''\n) == '2.5'\n\nassert solution(\n'''2\n0 0\n1 1'''\n) == '2.5'\n\nassert solution(\n'''6\n0 0 0 0 0 0\n-1 -1 -1 -1 -1 -1'''\n) == '4.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == str(1.6666666666666667)"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3') == '1.6666666666666667'\nassert solution('2\\n3 0 1 2') == '1.3333333333333333'\nassert solution('3\\n3 0 2 1 3') == '1.3333333333333333'\nassert solution('4\\n3 0 2 1 4') == '1.3333333333333333'\nassert solution('5\\n3 0 2 1 4 5') == '1.3333333333333333'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1 1\\n') == '1.5'\nassert solution('1\\n1 1 1\\n') == '1.5'\nassert solution('1\\n1 1 1\\n') == '1.5'\nassert solution('1\\n1 1 1\\n') == '1.5'\nassert solution('1\\n1 1 1\\n') == '1.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n3 0 2\n\"\"\") == \"1.6666666666666667\"\nassert solution(\"\"\"3\n0 -1 4\n\"\"\") == \"2.5\"\nassert solution(\"\"\"3\n1 1 1\n\"\"\") == \"2.5\"\nassert solution(\"\"\"3\n1 0 0\n\"\"\") == \"2.0\"\nassert solution(\"\"\"3\n3 0 2\n\"\"\") == \"1.6666666666666667\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.5\"\nprint(solution(stdin))"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3\\n3 1 1\") == \"1.6666666666666667\"\nassert solution(\"3\\n-1 1 1\") == \"2.5\"\nassert solution(\"3\\n3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3\\n0 -1 1 1\") == \"2.5\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n3 0 2\"\"\") == \"1.6666666666666667\"\nassert solution(\"\"\"3\n1 -1 4\"\"\") == \"2.5\"\nassert solution(\"\"\"5\n3 0 2 4 0\n1 -1 4 1 1\n2 -1 4 0 1\n3 -1 4 1 0\n4 -1 4 1 1\"\"\") == \"3.5\"\n\"\"\""
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3''') == '6'\nassert solution('''15 12''') == '7'\nassert solution('''1000000 2''') == '1000000'\nassert solution('''1000001 2''') == '1000001'\nassert solution('''1010101 1''') == '1010101'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 3''') == '6'\nassert solution('''15 12''') == '7'\nassert solution('''23 40''') == '38'\nassert solution('''100000 100000''') == '1000000'\nassert solution('''100001 100001''') == '1000000'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 3\\n') == '6'\nassert solution('15 12\\n') == '7'\nassert solution('10 4\\n') == '3'\nassert solution('10 10\\n') == '3'\nassert solution('10 20\\n') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''7 3''') == '6'\nassert solution('''15 12''') == '7'\nassert solution('''25 8''') == '7'\nassert solution('''30 15''') == '7'\nassert solution('''30 15''') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3''') == '6'\nassert solution('''15 12''') == '7'\nassert solution('''10 100''') == '7'\n'''\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4') == '7'\nassert solution('5 3') == '6'\nassert solution('7 3') == '7'\nassert solution('7 12') == '7'\nassert solution('7 12') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"\nassert solution(\"1 2\") == None\nassert solution(\"15\") == \"15\"\nassert solution(\"15 2\") == None\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\"\nprint('Passed')\n\"\"\""
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"1 2 3 4 5 6\")) == \"1\"\nassert solution(input(\"10 9\")) == \"9\"\nassert solution(input(\"1000 1000\")) == \"0\"\nassert solution(input(\"1000 998\")) == \"0\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nassert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''123864 123865''') == '1'\nassert solution('''198765 198769''') == '0'\n\n'''"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\nprint(\"Test case passed\")\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''123864 123865''') == '1'\nassert solution('''198765 198769''') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\nassert solution(\"123456 123457\") == \"0\"\nassert solution(\"123456 123457\") == \"1\"\nassert solution(\"123864 123865\") == \"1\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nassert solution('988764 988765') == '0'\nassert solution('123456 123456') == '6'\nassert solution('987654 987654') == '4'\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == '0.2500000'\nassert solution('4') == '0.166667'\nassert solution('4') == '0.1666667'\nassert solution('4') == '0.1666667'\nassert solution('4') == '0.1666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1 2') == None\nassert solution('1 2 3') == None\nassert solution('1') == None\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"0.50000000\"\nassert solution(\"1\") == \"0.50000000\"\nassert solution(\"2\") == \"0.66666667\"\nassert solution(\"3\") == \"0.66666667\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('5') == '0.0000000'\nassert solution('100') == '0.0'\nassert solution('1000') == '1.0'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('10') == '0.050000000'\nassert solution('100') == '0.050000000'\nassert solution('1000') == '0.000000001'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 0.5\nassert solution('3') == 0.66666667\nassert solution('4') == 0.75\nassert solution('5') == 0.83333333\nassert solution('6') == 0.91666671\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('5') == '0.7692307692307693'\nassert solution('10') == '0.9183673469387755'\nassert solution('12') == '0.9714285714285714'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2''') == '0.50000000'\nassert solution('''3''') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nprint(solution(stdin))\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"single 1\"\nassert solution(\"10\") == \"single 10\"\nassert solution(\"20\") == \"single 20\"\nassert solution(\"30\") == \"single 30\"\nassert solution(\"40\") == \"double 40\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\nassert solution('99') == 'impossible'\nassert solution('99') == 'impossible'\nassert solution('100') =='single 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'double 15'\nassert solution('96') == 'triple 19'\nassert solution('0') == 'impossible'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\nassert solution('90') == 'double 15'\nassert solution('80') =='single 9'\nassert solution('90') == 'impossible'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'double 15'\nassert solution('96') =='single 9'\n'''"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('180') == 'triple 20\\ndouble 15\\nsingle 9'\nassert solution('96') == 'triple 19\\ndouble 15\\nsingle 9'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\\n\".join([\"180\"])) == [\"triple 20\", \"triple 20\", \"triple 20\"]\nassert solution(\"\\n\".join([\"96\"])) == [\"triple 19\", \"double 15\", \"single 9\"]\nassert solution(\"\\n\".join([\"180\"])) == [\"triple 20\", \"triple 20\", \"triple 20\"]\nassert solution(\"\\n\".join([\"96\"])) == [\"triple 19\", \"double 15\", \"single 9\"]\nassert solution(\"\\n\".join([\"270\"])) == [\"impossible\"]\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'impossible'\nassert solution('1') =='single 1'\nassert solution('2') =='single 2'\nassert solution('3') =='single 3'\nassert solution('4') == 'double 4'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == 'impossible'\nassert solution(2) == 'impossible'\nassert solution(3) == 'impossible'\nassert solution(4) == 'impossible'\nassert solution(5) == 'impossible'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0) == \"impossible\"\nassert solution(1) == \"triple 1\"\nassert solution(2) == \"double 2\"\nassert solution(3) == \"triple 3\"\nassert solution(4) == \"double 4\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\""
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 4 7\\n') == '168'\nassert solution('5 2 2\\n') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\nassert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 4 7\\n') == '168'\nassert solution('5 2 2\\n') == '36'\nassert solution('5 2 2\\n') == '36'\nassert solution('5 2 2\\n') == '36'\nassert solution('5 2 2\\n') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\nassert solution('5 5 5') == '125'\nassert solution('3 4 2') == '6'\nassert solution('3 6 4') == '9'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 4 7''') == '168'\nassert solution('''5 2 2''') == '36'\nassert solution('''20 12 15''') == '760'\nassert solution('''50 24 22''') == '1408'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''10 4 7\n'''\n) == \"168\"\n\nassert solution(\n'''5 2 2\n'''\n) == \"36\"\n\nassert solution(\n'''1 3 1\n'''\n) == \"6\"\n\nassert solution(\n'''1000 1000 1000\n'''\n) == \"104857600\"\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n\n\"\"\""
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3 10\\n') == '7'\nassert solution('2\\n3 8\\n5 8\\n') == '1'\nassert solution('10\\n1000000000\\n5000000000\\n') == '0'\nassert solution('10\\n1000000000\\n5000000000\\n5000000000\\n') == '5'\nassert solution('100\\n10000000\\n50000000\\n50000000\\n') == '5'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3 10') == '7'\nassert solution('2\\n3 8\\n5 8') == '1'\nassert solution('2\\n3 8\\n5 6') == '7'\nassert solution('2\\n3 8\\n5 6\\n7 6') == '0'\nassert solution('2\\n3 8\\n5 6\\n7 6\\n9 6') == '2'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n1\n3 10\n''') == '7'\nassert solution('''\\\n2\n3 8\n5 8\n''') == '1'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n1\n3 10\n''') == '7'\nassert solution('''\\\n2\n3 8\n5 8\n''') == '1'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3 10\\n') == 7\nassert solution('2\\n3 8\\n5 8\\n') == 1\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200') == \"1\"\nassert solution('0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200') == \"0\"\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3 10''') == '7'\nassert solution('''2\n3 8\n5 8''') == '1'\nprint('Passed!')\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n3 10\n2 5\n''') == '7'\nassert solution('''2\n3 8\n5 8\n''') == '1'\nassert solution('''3\n3 8\n5 8\n3 8\n''') == '0'\nassert solution('''4\n3 8\n5 8\n3 8\n5 8\n''') == '0'\nassert solution('''5\n3 8\n5 8\n3 8\n5 8\n3 8\n''') == '0'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3 10') == '7'\nassert solution('2\\n3 8\\n5 8') == '1'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n3 10''') == '7'\nassert solution('''2\n3 8\n5 8''') == '1'\nassert solution('''3\n2 9\n3 9\n5 9''') == '1'\nassert solution('''5\n4 10\n6 10\n5 10\n4 10''') == '2'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''1\nSimon says smile.\n'''\n    ) =='smile.\\n'\n\nassert solution(\n    '''3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n'''\n    ) =='raise your right hand.\\n raise your left hand.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\nSimon says smile.') =='smile.'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('7\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nSimon says smile.\\nLower your left hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your left hand.\\n raise your right hand.\\n raise your left hand.\\n'\nassert solution('11\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nSimon says raise your right hand.\\nLower your left hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your left hand.\\n raise your right hand.\\n raise your left hand.\\n'\n\n\"\"\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n') == ''\nassert solution('1\\nSimon says smile.\\n') =='smile.'\nassert solution('1\\n\\nSimon says smile.\\n') =='smile.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('1\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('1\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLowe\\'r right hand.\\nSimon says raise your right hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('1\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLowe\\'r right hand.\\nSimon says raise your right hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('1\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nLowe\\'r right hand.\\nSimon says raise your right hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('3\\nSimon says smile.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='smile.\\nLower your right hand.\\n'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\") == \" raise your right hand.\\n raise your left hand.\\n\"\nassert solution(\"2\\nSimon says raise your right hand.\") == \" raise your right hand.\\n\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') == 'raise your right hand.\\n raise your left hand.\\n'\n\n-----Conditionals-----\n1. $N$ is a positive integer with the value of 1 or greater.\n2. Each command of length $100$ characters.\n3. Each command contains at least one word.\n4. Each command contains at most one space, followed by a space and a word.\n5. Each word is composed of only lower and uppercase characters a\u2013z.\n6. Each pair of words is separated by a single space.\n7. The last command contains a period.\n8. The line that begins with exactly \u201cSimon says\u201d is followed by one or more additional commands.\n9. The line that does not begin with exactly \u201cSimon says\u201d is ignored.\n10. The last line does not end with a period.\n\n------# Solutions ------\n\"\"\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('Simon says raise your left hand. Lower your right hand.') =='raise your right hand. lower your left hand. '\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\\nSimon says raise your left hand.\") == \"raise your left hand.\"\nassert solution(\"3\\nSimon says raise your left hand.\\nLower your right hand.\\nSimon says raise your right hand.\") == \"raise your left hand.\"\nassert solution(\"3\\nSimon says raise your left hand.\\nLower your right hand.\\nSimon says raise your right hand.\") == \"raise your left hand.\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\"\n\"\"\"\n1. \u5c06\u6570\u5b57\u8f6c\u5316\u4e3a\u957f\u5ea6\u4e3a8\u7684\u6570\u7ec4\n2. \u6839\u636e\u6240\u6709\u6570\u5b57\u7684\u957f\u5ea6\uff0c\u5224\u65ad\u6bcf\u4e2a\u6570\u5b57\u5728\u4e0d\u5728\u6ce8\u518c\u533a\u95f4\u5185\n3. \u5224\u65ad\u6709\u591a\u5c11\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u4e0d\u5728\u7684\u6570\u5b57\n4. \u5224\u65ad\u5728\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n5. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u4e0d\u5728\u7684\u6570\u5b57\n6. \u5224\u65ad\u5f53\u524d\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n7. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n8. \u5224\u65ad\u5f53\u524d\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n9. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n10. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n11. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n12. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n13. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n14. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n15. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n16. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n17. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n18. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n19. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n20. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n21. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n22. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n23. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n24. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n25. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n26. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n27. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n28. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n29. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n30. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n31. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n32. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n33. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n34. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n35. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n36. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n37. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n38. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n39. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\u518c\u533a\u95f4\u5185\u7684\u4e0d\u5728\u7684\u6570\u5b57\n40. \u5224\u65ad\u5f53\u524d\u6700\u5927\u957f\u5ea6\u6ce8\ufffd"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n\n>>> from timeit import timeit\n>>> print(timeit(solution, number=1))\n0.00009517\n>>> print(timeit(solution, number=1))\n0.00346054\n>>> print(timeit(solution, number=1))\n0.0689865\n\n>>> print(timeit(solution, number=1))\n0.0488342\n>>> print(timeit(solution, number=1))\n0.043607\n>>> print(timeit(solution, number=1))\n0.0405117\n\n>>> print(timeit(solution, number=1))\n0.00942263\n>>> print(timeit(solution, number=1))\n0.0258663\n>>> print(timeit(solution, number=1))\n0.030868\n\n>>> print(timeit(solution, number=1))\n0.00843597\n>>> print(timeit(solution, number=1))\n0.0257299\n>>> print(timeit(solution, number=1))\n0.031239\n\n>>> print(timeit(solution, number=1))\n0.00796617\n>>> print(timeit(solution, number=1))\n0.0276338\n>>> print(timeit(solution, number=1))\n0.0287964\n\n>>> print(timeit(solution, number=1))\n0.00904966\n>>> print(timeit(solution, number=1))\n0.0290637\n>>> print(timeit(solution, number=1))\n0.0290897\n\n>>> print(timeit(solution, number=1))\n0.00772578\n>>> print(timeit(solution, number=1))\n0.0278336\n>>> print(timeit(solution, number=1))\n0.0278763\n\n>>> print(timeit(solution, number=1))\n0.00754082\n>>> print(timeit(solution, number=1))\n0.0276659\n>>> print(timeit(solution, number=1))\n0.0283436\n\n>>> print(timeit(solution, number=1))\n0.00695852\n>>> print(timeit(solution, number=1))\n0.0274693\n>>> print(timeit(solution, number=1))\n0.0274823\n\n>>> print(timeit(solution, number=1))\n0.00679472\n>>> print(timeit(solution, number=1))\n0.0277549\n>>> print(timeit(solution, number=1))\n0.0283754\n\n>>> print(timeit(solution, number=1))\n0.00669922\n>>> print(timeit(solution, number=1))\n0.0277236\n>>> print(timeit(solution, number=1))\n0.0277942\n\n>>> print(timeit(solution, number=1))\n0.00695943\n>>> print(timeit(solution, number=1))\n0.0277144\n>>> print(timeit(solution, number=1))\n0.0278125\n\n>>> print(timeit(solution, number=1))\n0.00754085\n>>> print(timeit(solution, number=1))\n0.0276614\n>>> print(timeit(solution, number=1))\n0.0277392\n\n>>> print(timeit(solution, number=1))\n0.00695848\n>>> print(timeit(solution, number=1))\n0.0277526\n>>> print(timeit(solution, number=1))\n0.0283755\n\n>>> print(timeit(solution, number=1))\n0.00679624\n>>> print(timeit(solution, number=1))\n0.0274693\n>>> print(timeit(solution, number=1))\n0.0274824\n\n>>> print(timeit(solution, number=1))\n0.00679471\n>>> print(timeit(solution, number=1))\n0.0277531\n>>> print(timeit(solution, number=1))\n0.0283754\n\n>>> print(timeit(solution, number=1))\n0.00669921\n>>> print(timeit(solution, number=1))\n0.0277235\n>>> print(timeit(solution, number=1))\n0.0277941\n\n>>> print(timeit(solution, number=1))\n0.00695946\n>>> print(timeit(solution, number=1))\n0.0277699\n>>> print(timeit(solution, number=1))\n0.0283756\n\n>>> print(timeit(solution, number=1))\n0.00669668\n>>> print(timeit(solution, number=1))\n0.0277699\n>>> print(timeit(solution, number=1))\n0.0278125\n\n>>> print(timeit(solution, number=1))\n0.00669920\n>>> print(timeit(solution, number=1))\n0.0277699\n>>> print(timeit(solution, number=1))\n0.0283755\n\n>>> print(timeit(solution, number=1))\n0.00669668\n>>> print(timeit(solution, number=1))\n0.0277699\n>>> print(timeit(solution, number=1))\n0.0278125\n\n>>> print(timeit(solution, number=1))\n0.00669921\n>>> print(timeit(solution, number=1))\n0.0277699\n>>> print(timeit(solution, number=1))\n0.0283755\n\n>>> print(timeit(solution, number=1))\n0.00669668\n>>> print(timeit(solution, number=1))\n0.0277699\n>>> print(timeit(solution, number=1))\n0.0278125\n\n>>> print(timeit(solution, number=1))\n0.00669922\n>>> print(timeit(solution, number=1))\n0.0277699\n>>> print(timeit(solution, number=1))\n0.0283756\n\n>>> print(timeit(solution, number=1))\n0.00669922\n>>> print(time"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('123456789012345678901234567890') == '10'\nassert solution
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('5 0 4 6 10 12 16 18') == '5'\nassert solution('5 1 4 6 10 12 16 18') == '0'\nassert solution('5 2 4 6 10 12 16 18') == '5'\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('5 6 4 3 2 1 0') == '1'\nassert solution('0 0 0 0 0 0 0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0 0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nprint(solution(input()))"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('1 2 4 6 10 12 16 17') == '-1'\nassert solution('1 2 4 6 10 12 16 19') == '-1'\nassert solution('1 2 4 6 10 12 16 19 19') == '-1'\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == \"3\"\nassert solution('''4 1\nA\nA\nG\nT''') == \"2\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AA\\nAT\\nTT\\nTC') == 3\nassert solution('4 2\\nAA\\nAT\\nTT\\nTC') == 3\nassert solution('4 1\\nA\\nA\\nG\\nT\\nSample Output 2') == 2\nassert solution('4 2\\nAA\\nAT\\nTT\\nTC') == 3\nassert solution('4 1\\nA\\nA\\nG\\nT\\nSample Output 2') == 2\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nassert solution('''2 4\nAC\nGG\nTG\nAG\nAT''') == '0 1'\nassert solution('''1 2\nA\nA\n''') == '0'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nassert solution('''3 1\nA\nT\nG''') == '1 2'\nassert solution('''3 3\nAG\nAG\nAG\nAG''') == '2 3'\nassert solution('''3 3\nAT\nAG\nAG''') == '2 3'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AA\\nAT\\nTT\\nTC') == '3'\nassert solution('1 2\\nAA\\nAT\\nTT\\nTC') == '0 1\\n1 2\\n2 3'\nassert solution('4 2\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('2 2\\nA\\nA\\nG\\nT\\n') == '0 1'\nassert solution('5 2\\nA\\nA\\nG\\nT\\n') == '0 1'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"1 1\") == \"0 1\"\nassert solution(\"2 3\") == \"0 1 2 3\"\nassert solution(\"3 2\") == \"0 1 2 3\"\nassert solution(\"4 3\") == \"0 1 2 3 4\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nassert solution('''5 2\nA\nA\nA\nG\nT\n''') == '3'\nassert solution('''4 1\nA\nA\nA\nG\nT''') == '2'\nassert solution('''6 1\nA\nA\nA\nA\nA\nA\n''') == '4'\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A\\nA\\nG\\nT\\n') == '0\\n0\\n0\\n0'\nassert solution('A\\nA\\nG\\nT\\n') == '0\\n0\\n0\\n0'\nassert solution('A\\nA\\nG\\nT\\n') == '0\\n0\\n0\\n0'\nassert solution('A\\nA\\nG\\nT\\n') == '0\\n0\\n0\\n0'\nassert solution('A\\nA\\nG\\nT\\n') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\nassert solution('ababa') == 'a'\nassert solution('baaba') == '-1'\nassert solution('babaab') == 'a'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(sample1) == result1\nassert solution(sample2) == result2\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10000)"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'a'\nassert solution('ba') == 'a'\nassert solution('aa') == 'a'\nassert solution('ab') == 'a'\nassert solution('baa') == 'a'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aaaa\") == \"-1\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"abc\") == \"-1\"\nassert solution(\"aab\") == \"a\"\nassert solution(\"aabab\") == \"a\"\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bba') == 'a'\nassert solution('bbabab') == 'bba'\nassert solution('bbb') == '-1'\nassert solution('bbbaa') == 'ba'\nassert solution('bbbb') == '-1'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"-\"\nassert solution(\"bbbaa\") == \"a\"\nassert solution(\"aaaa\") == \"a\"\nassert solution(\"bbbab\") == \"a\"\nassert solution(\"aabb\") == \"a\"\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\"\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ab') == '-1'\nassert solution('aaaa') == 'a'\nassert solution('abb') == 'a'\nassert solution('baa') == 'a'\nassert solution('bba') == 'a'\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == None\nassert solution(input(\"\")) == None\nassert solution(input(\"\")) == None\nassert solution(input(\"\")) == None\nassert solution(input(\"\")) == None\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('1 1') == 'Dr. Chaz needs 1 more piece of chicken!'\nassert solution('2 2') == 'Dr. Chaz needs 2 more pieces of chicken!'\nassert solution('4 8') == 'Dr. Chaz needs 10 more pieces of chicken!'\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'Dr. Chaz needs 5 more piece[s] of chicken!', 'No chicken :('\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!', 'Fewer than 1 piece of chicken'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!', 'Fewer than 1 piece of chicken'\nassert solution('1000 100') == 'Dr. Chaz needs 0 piece[s] of chicken!', 'More than 1000 pieces of chicken'\nassert solution('1000 10000') == 'Dr. Chaz needs 99891 piece[s] of chicken!', 'More than 1000 and more than 1 piece of chicken'\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n10 2\n\"\"\"\n) == \"Dr. Chaz will have 8 pieces of chicken left over!\"\nassert solution(\n\"\"\"\n2 3\n\"\"\"\n) == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\n\"\"\"\n4 3\n\"\"\"\n) == \"Dr. Chaz will need 6 pieces of chicken!\"\nassert solution(\n\"\"\"\n1 1\n\"\"\"\n) == \"Dr. Chaz needs 1 piece of chicken!\"\nassert solution(\n\"\"\"\n1 2\n\"\"\"\n) == \"Dr. Chaz needs 3 pieces of chicken!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"1 2\") == \"Dr. Chaz needs 2 more piece[s] of chicken!\"\nassert solution(\"10 100\") == \"Dr. Chaz needs 99 more piece[s] of chicken!\"\nassert solution(\"10 100\") == \"Dr. Chaz will have 99 more piece[s] of chicken!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"\nassert solution(\"10 9\") == \"Dr. Chaz will have 9 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"\nassert solution(\"10 9\") == \"Dr. Chaz will have 9 pieces of chicken left over!\\n\"\nassert solution(\"10 9\") == \"Dr. Chaz will have 9 pieces of chicken left over!\\n\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1''') == '-2'\nassert solution('''3 30\n1 1 1\n5 2 3\n5 2 1''') == '0'\n\nprint('Test cases passed:')\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0'\nassert solution(\"\") == '0'\nassert solution(\"1\\n1\\n1\\n\") == '0'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 10\") == \"-2\"\nassert solution(\"3 30\") == \"0\"\nassert solution(\"3 10\\n1 1 1\\n2 2 2\\n3 2 1\") == \"-2\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == \"0\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1''') == '-2'\nassert solution('''3 30\n1 1 1\n5 2 3\n5 2 1''') == '0'\nassert solution('''2 10\n1 1 2\n1 2 1''') == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"3 30\n1 1 1\n5 2 3\n5 2 1\"\"\"\n) == '0'\nassert solution(\n\"\"\"3 10\n1 1 2\n2 2 2\n3 2 1\"\"\"\n) == '-2'\nassert solution(\n\"\"\"3 30\n1 1 1\n5 2 3\n5 2 1\"\"\"\n) == '0'\nassert solution(\n\"\"\"3 30\n1 1 1\n5 2 3\n5 2 1\"\"\"\n) == '-2'\nassert solution(\n\"\"\"3 30\n1 1 1\n5 2 3\n5 2 1\"\"\"\n) == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1''') == '-2'\nassert solution('''3 30\n1 1 1\n5 2 3\n5 2 1''') == '0'\nassert solution('''3 10\n1 1 1\n5 2 3\n5 2 1''') == '0'\nassert solution('''1 1 1\n5 2 3\n5 2 1''') == '0'\nassert solution('''1 1 1\n1 1 1\n1 1 1''') == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(sample0) == \"0\"\nassert solution(sample1) == \"1\"\nassert solution(sample2) == \"-2\"\nassert solution(sample3) == \"0\"\nassert solution(sample4) == \"1\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 10\\n2 2 2\\n3 2 1') == '-2'\nassert solution('1 10\\n2 2 2\\n3 2 1\\n4 3 2\\n5 3 1') == '0'\nassert solution('1 10\\n2 2 2\\n3 2 1\\n4 3 2\\n5 3 1\\n6 4 3\\n7 4 1') == '0'\nassert solution('1 10\\n2 2 2\\n3 2 1\\n4 3 2\\n5 3 1\\n6 4 3\\n7 4 1\\n8 5 2\\n9 5 1') == '0'\nassert solution('1 10\\n2 2 2\\n3 2 1\\n4 3 2\\n5 3 1\\n6 4 3\\n7 4 1\\n8 5 2\\n9 5 1\\n10 6 4\\n11 6 1') == '0'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as''') == 'as'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\nas''') == 'as'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\nas''') == 'as'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\nas''') == 'as'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\nabcd') == 'abcd'\nassert solution('4 4\\n#a#\\n#a#\\n#a#\\na#a#') == 'a'\nassert solution('4 4\\n#a#\\n#a#\\n#a#\\na#a#\\na#a#') == 'a'\nassert solution('4 4\\n#a#\\n#a#\\n#a#\\na#a#\\na#a#\\na#a#') == 'a'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\"\n\"\"\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('luka') == 'kula'\nassert solution('o#a#') == 'kula'\nassert solution('o#a#kula') == 'kula'\nassert solution('o#a#kulai') == 'kula'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\"\n\"\"\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"as\"\n'''\n'''\nr, c = map(int, input().split())\nword = input()"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('1 1\\n#') == '#'\nassert solution('1 1\\n#') == '#'\nassert solution('2 2\\n##\\n#') == '#'\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''4 4\nkula\ni#a#\no#a#\nluka\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"kala\"\nassert solution(input()) == \"as\"\nassert solution(input()) == \"as\"\nassert solution(input()) == \"as\"\n\"\"\""
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('N') == '1'\nassert solution('S') == '1'\nassert solution('E') == '1'\nassert solution('W') == '1'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"WNWNENENEWS\") == 4\nassert solution(\"NSWE\") == 4\nassert solution(\"NENEWSWW\") == 19\nassert solution(\"NWNESWENEN\") == 22\nassert solution(\"ENEWNSWENEN\") == 15\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('NS') == 0\nassert solution('ENWWNEEENENENENENEW') == 36\nassert solution('WNENENEWSWSWSWSE') == 26\nassert solution('WWWW') == 0\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('WNEENWEENE') == 'EEN'\nassert solution('NSEW') == 'NWSE'\nassert solution('NWW') == 'W'\nassert solution('NWSE') == 'WS'\nassert solution('WEENWEENEWSWENEWSEWSWENEWSEEWSE') == 'WSENWN'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('WNESE') == 'EW'\nassert solution('NNW') == 'N'\nassert solution('WSW') == 'S'\nassert solution('NWSE') == 'SW'\nassert solution('NWSE') == 'SE'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('EEN') == 'ENENWEEN'\nassert solution('WNEENWEENE') == 'WEENENWEENENEN'\nassert solution('NNEWENWWNNNSEW') == 'ENENWEEN'\nassert solution('NEENWEENENWEEN') == 'ENENWEEN'\nassert solution('NENENWEENEWS') == 'ENENWEENENEN'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('NEENWEENE') == 'NNWE'\nassert solution('NSEW') == 'NNWE'\nassert solution('WWW') == 'WWWW'\nassert solution
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"WNSEW\") == 4\nassert solution(\"WNSE\") == 4\nassert solution(\"NNN\") == 5\nassert solution(\"ENEN\") == 4\nassert solution(\"NWENEN\") == 10\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('N') == 'N'\nassert solution('NWWENNWNNNSSSEENENENENESWNWESW') == 'ENENENENENENENENENENEN'\nassert solution('NWWWNEENNWEESENEENESN') == 'EWENENENENENEN'\nassert solution('NWWSENWWWNWESW') == 'WNWESW'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(STDIN) == EXPECTED_OUTPUT\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n        '1 2 3 4'\n    ) == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\nassert solution(\n        '0 4 2 2'\n    ) == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\nassert solution(\n        '0 4 2 0'\n    ) == 'problems ahead'\n\"\"\"\n\nfrom operator import truediv, mul, sub, add, div\nfrom functools import reduce"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\nassert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\nassert solution('1 2 3 4 5') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead'\n\nhttps://www.codewars.com/kata/solution-to-gloria-chemical-engineers-mildra-and-gloisa\n\"\"\"\n\nfrom operator import mul, add, sub, truediv\nfrom functools import reduce\nfrom fractions import Fraction\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\nassert solution(\"0 4 2 2\") == \"problems ahead\"\nassert solution(\"-4 4 2 2\") == \"problems ahead\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '''0 4 2 2'''\n) == '''0 * 4 = 2 - 2\n0 + 4 = 2 * 2\n0 + 4 = 2 + 2\n0 / 4 = 2 - 2'''\n\nassert solution(\n    '''1 2 3 4'''\n) == '''1 - 2 = 3 - 4\n1 / 2 = 3 / 4'''\n\nassert solution(\n    '''0 4 2 2'''\n) == '''0 * 4 = 2 - 2\n0 + 4 = 2 * 2\n0 + 4 = 2 + 2\n0 / 4 = 2 - 2\nproblems ahead'''\n\nassert solution(\n    '''1 1 1 1'''\n) == '''1 * 1 = 1 * 1\n1 + 1 = 1 + 1\n1 + 1 = 1 + 1\n1 / 1 = 1 / 1\nproblems ahead'''\n\nassert solution(\n    '''2 3 4 4'''\n) == '''2 * 3 = 6 - 4\n2 / 3 = 6 / 4\n2 + 3 = 6 + 4\n2 - 3 = 6 - 4'''"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == \"problems ahead\"\nassert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\n'''"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\nassert solution('0 4 2 2') == 'problems ahead'\n'''"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"BANANA\nPIDZAMA\"\"\") == \"\"\"\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n\"\"\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n\"\"\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('MAMA') == 'MAMA'\nassert solution('BANANA') == 'BANANA'\nassert solution('MAMA TATA') == 'MAMA'\nassert solution('MAMA TATA') == 'MAMA'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('I LOVE YOU') == 'I.L.O.Y.'\nassert solution('BANANA') == '.A.N.A.N.A.'\nassert solution('PIDZAMA') == '.D.I.Z.A.M.A.'\nassert solution('TATA') == '.M.A.T.A'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\nassert solution('ACCT') == '.C..\\n.C..\\n.C..\\n.C..'\nassert solution('PICCAD') == '.C.\\n.C.\\n.C..\\n.C..'\nassert solution('GEEKSFORGEEKS') == '...\\n.G..\\n...\\n...'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('A') == 'A'\nassert solution('AB') == 'AB'\nassert solution('ABBA') == 'ABBA'\nassert solution('AAAB') == 'ABBA'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('A') == 'A'\nassert solution('AA') == 'AA'\nassert solution('ABC') == 'ABC'\nassert solution('ABCD') == 'ABCD'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABBA') == '4'\nassert solution('BANANA') == '4'\nassert solution('MAMA TATA') == '4'\nassert solution('PIDZAMA') == '4'\nassert solution('TIDZAMA') == '4'\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"P....\\nI....\\nD....\\nZ....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\nprint(\"Tests passed successfully\")\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\nassert solution('''2\n1 1\n1 1\n1 1\n1 1''') == '1'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3\n10 14\n13 17\n25 26\n'''\n) == '10'\nassert solution(\n'''\n2\n1 365\n20 28\n'''\n) == '365'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''3\n1 365\n20 28\n25 26''') == '365'\nassert solution('''3\n1 365\n2 28\n25 26''') == '365'\nassert solution('''5\n1 365\n2 28\n3 21\n4 18\n5 15''') == '10'\nassert solution('''5\n1 365\n2 28\n3 21\n4 18\n5 15''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2') == '2'\nassert solution('2\\n2\\n2') == '2'\nassert solution('3\\n10 13\\n17 25\\n26') == '10'\nassert solution('10\\n13\\n17\\n25\\n26') == '365'\nassert solution('10\\n12\\n13\\n17\\n25\\n26') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n10 14\\n13 17\\n25 26') == '10'\nassert solution('2\\n1 365\\n20 28') == '365'\nassert solution('2\\n1 1\\n1000 100') == '1000'\nassert solution('3\\n2 1\\n1 1\\n2 100') == '2'\nassert solution('2\\n1 1\\n2 100') == '2'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 10\\n2 10\\n1 10\") == \"10\"\nassert solution(\"1 2\\n1 10\\n2 10\") == \"10\"\nassert solution(\"1 2\\n1 10\\n2 10\\n1 10\") == \"10\"\nassert solution(\"1 2\\n1 10\\n2 10\\n1 10\\n1 10\") == \"10\"\nassert solution(\"1 2\\n1 10\\n2 10\\n1 10\\n2 10\") == \"10\"\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\nassert solution('''\n6\n1 365\n20 28\n''') == '365'\nassert solution('''\n100\n9 365\n5 9\n10 5\n15 10\n20 5\n''') == '365'\nassert solution('''\n10\n1 365\n20 28\n''') == '365'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1''') == \"0 1\"\nassert solution(\n'''4''') == \"2 3\"\nassert solution(\n'''200''') == \"92 256\"\nassert solution(\n'''2600''') == \"212 224\"\nassert solution(\n'''5000''') == \"822 384\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '0 1'\nassert solution('1') == '0 1'\nassert solution('4') == '2 3'\nassert solution('3') == '1 2'\nassert solution('2') == '0 1'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2 3\"\nassert solution(\"1\") == \"0 1\"\nassert solution(\"2\") == \"2 3\"\nassert solution(\"3\") == \"2 3\"\nassert solution(\"4\") == \"2 3\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '0 1'\nassert solution('4\\n') == '2 3'\nassert solution('45\\n') == '7 7'\nassert solution('5\\n') == '5 5'\nassert solution('10\\n') == '9 9'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '0 0'\nassert solution('1') == '0 1'\nassert solution('4') == '2 3'\nassert solution('1 1') == '0 0'\nassert solution('4 3') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0 1'\nassert solution('1') == '0 1'\nassert solution('1 2 3 4') == '0 2'\nassert solution('4') == '2 3'\nassert solution('4 3') == '2 2'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == \"0 1\"\nassert solution('1') == \"0 1\"\nassert solution('1 1') == \"0 1\"\nassert solution('2') == \"0 2\"\nassert solution('3') == \"0 3\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\"\"\") == \"\"\"B 100 49\nA 1 197\nA 49 100\n0.196721763\n\n\"\"\".strip()\n\nassert solution(\"\"\"1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\"\"\") == \"\"\"A 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 100 1\\n1 100 1\\n1 100 1\\n4 100 99') == 'A 1 197\\nA 0 99'\nassert solution('2 2\\n1 100 1\\n1 100 1\\n1 100 1\\n4 100 99') == 'A 0 99\\nA 0 99'\nassert solution('5 4\\n3 100 99\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'B 0 99\\nB 0 99\\nB 0 99\\nB 0 99\\n0.4975074372'\nassert solution('5 5\\n3 100 99\\n4 100 99\\n2 100 99\\n1 100 99\\n3 100 99') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4994792081'\nassert solution('5 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'B 0 99\\nB 0 99\\nB 0 99\\nB 0 99'\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"\nprint(solution('''10 10\n1 1 1\n2 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1'''))\nprint(solution('''3 3\n1 100 200\n2 100 99\n1 100 99'''))\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\nSample Output 2:\nA 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372\n''') == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"\nassert solution('''1 1 1\n2 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == \"A 1 1\\n1 1 1\\n0.7071070185\nSample Output 2:\nB 0 99\nA 0 99\n0.7071070185\n'''))\nassert solution('''10 10\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n6 100 99\n1 100 99\n9 100 99\n1 100 99\n4 100 99\n1 100 99\n''') == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\nassert solution('''1 1 1\n2 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == \"A 1 1\\n1 1 1\\n0.7071070185\nSample Output 2:\nB 0 99\nA 0 99\n0.7071070185\n'''))\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == '''B 100 49\nA 1 197\nA 49 100\n0.1965897693'''\n\nassert solution('''5 3\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n2 2 2''') == '''A 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372'''\n\nassert solution('''5 3\n3 100 99\n3 100 50\n3 100 50\n2 100 98\n2 2 2''') == '''A 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372'''\n\nassert solution('''5 5\n1 100 100\n2 100 100\n3 100 100\n4 100 100\n5 100 100\n3 4 5\n1 100 99\n2 100 99\n3 100 49\n4 100 99\n5 100 49\n4 4 4\n1 100 99\n2 100 99\n3 100 49\n4 100 99\n5 100 49\n3 4 5''') == '''B 100 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 49'''\n\nassert solution('''5 5\n1 100 100\n2 100 100\n3 100 100\n4 100 100\n5 100 100\n3 4 5\n1 100 99\n2 100 99\n3 100 49\n4 100 99\n5 100 49\n4 4 4\n1 100 99\n2 100 99\n3 100 49\n4 100 99\n5 100 49\n3 4 5''') == '''B 100 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 49'''"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1955024532\\n'\nassert solution('1 1\\n0 0') == 'A 0 0\\nA 0 0\\n0.0\\n'\nassert solution('1 1\\n1 1') == 'A 1 1\\nA 1 1\\n1 1 1\\n1 1 1\\n0 0\\n'\nassert solution('1 1\\n2 2') == 'A 1 1\\nA 1 1\\n1 1 1\\n1 1 1\\n2 2\\n2 2\\n'\nassert solution('1 1\\n3 3') == 'A 1 1\\nA 1 1\\n1 1 1\\n1 1 1\\n3 3\\n3 3\\n'\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 3\\n2 3\\n3 4\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\nassert solution(\"5 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\nassert solution(\"2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\nassert solution(\"3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\nassert solution(\"3 5\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1963790023\\n'\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\\n'\nassert solution('''5 5\n4 100 99\n3 100 99\n2 100 99\n3 100 99\n4 100 99''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\\n'\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n4 100 99''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.0\\n'\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n3 100 99\n1 100 99''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.0\\n'\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"5 4\") == \"\"\nassert solution(\"5 4\\n1 100 99\\n2 100 99\\n3 100 50\\n4 100 99\\n3 100 50\\n2 100 98\\n\") == \"\"\nassert solution(\"5 4\\n1 100 99\\n2 100 99\\n3 100 50\\n4 100 99\\n3 100 50\\n2 100 98\\n\") == \"\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(open(\"test.txt\").read()) == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99'\nassert solution(open(\"test2.txt\").read()) == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99'\nassert solution(open(\"test3.txt\").read()) == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99'\nassert solution(open(\"test4.txt\").read()) == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99'\nassert solution(open(\"test5.txt\").read()) == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\nA 0 99'\n\n-----Note-----\nWe will be using a black-box testing platform to check the correctness of your code. The evaluation will be done against the Markdown file describing the contest.\n\nThe number of test cases will be the same as the number of lines in the input file. You will be provided the same number of lines in the input file.\n\n\"\"\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\nassert solution('''10 10\n1 100 1\n2 100 2\n3 100 3\n4 100 4\n5 100 5\n6 100 6\n7 100 7\n8 100 8\n9 100 9\n10 100 10''') == 'B 0 0\\nB 0 0\\nB 0 0\\nB 0 0\\nB 0 0\\nB 0 0\\nB 0 0\\nB 0 0\\nB 0 0\\n0.5'\nassert solution('''10 10\n1 100 1\n2 100 2\n3 100 3\n4 100 4\n5 100 5\n6 100 6\n7 100 7\n8 100 8\n9 100 9\n10 100 10''') == 'A 0 0\\nA 0 0\\nA 0 0\\nA 0 0\\nA 0 0\\nA 0 0\\nA 0 0\\nA 0 0\\nA 0 0\\n0.5'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\n1\\n4\\n3\\n5') == 1\nassert solution('2\\n1\\n4\\n3\\n5') == 4\nassert solution('2\\n1\\n1\\n4\\n3\\n5') == 25\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == 1\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == 1\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution) == 1\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '4'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('5\\n2\\n1\\n4\\n3') == '168'\nassert solution('5\\n2\\n1\\n4\\n3\\n5') == '168'\nassert solution('2\\n1\\n1') == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1\\n2') == '4'\nassert solution('1\\n2\\n4') == '6'\nassert solution('1\\n2\\n3') == '6'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\n ABC\\n DEF\\n 0') == 'CBADEF'\nassert solution('3 3\\n ABC\\n DEF\\n 2') == 'CDBEAF'\nassert solution('3 3\\n ABC\\n DEF\\n 3') == 'EACABD'\nassert solution('3 3\\n ABC\\n DEF\\n 100') == 'CDBEABE'\nassert solution('3 3\\n ABC\\n DEF\\n 0') == 'CBADEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n0') == 'CDBEAF'\nassert solution('3 3\\nABC\\nDEF\\n0') == 'CDBEAF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"ABEF\"\nassert solution(input()) == \"CDBE\"\nassert solution(input()) == \"ABCDE\"\nassert solution(input()) == \"ABCDE\"\nassert solution(input()) == \"CABDE\"\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC\\nDEF\\n0') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n0') == 'CDBEAF'\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF'\nassert solution('4 5\\nABDEGH\\nCDHEGF\\nEFGHIJ\\nKLHIJK\\nMNOJKP\\nQRSTU\\nVWXYZ\\n0') == 'KLHIJKQRSTUVVWXYZ'\nassert solution('5 5\\nABDEGH\\nCDHEGF\\nEFGHIJ\\nKLHIJK\\nMNOJKP\\nQRSTU\\nVWXYZ\\n0') == 'KLHIJKQRSTUVVWXYZ'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\nABC\nDEF\n0''') == 'CBADEF'\nassert solution('''3 3\nABC\nDEF\n2''') == 'CDBEAF'\nassert solution('''3 3\nAAC\nBDF\n2''') == 'BDFAF'\nassert solution('''3 3\nACD\nBEF\n2''') == 'BCDEAF'\nassert solution('''3 3\nABD\nCDE\n2''') == 'BCDEAF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\nABC\nDEF\n2''') == 'CDBEAF'\nassert solution('''3 3\nDEF\nABC\n2''') == 'CBADEF'\nassert solution('''10 10\nFGCJTGCK\nSASXZYUAS\nXSZYUASFGCJ\nTGCJFGCJ\nSXFGCJ\nUASFGCJ\nSASFGCJ\nYUASFGCJ\nZYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nASFGCJ\nYUAFGCJ\nUAFGCJ\nSXFGCJ\nUAFGCJ\nSXFGCJ\nUAFGCJ\nSXFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nTGCJFGCJ\nZYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUAFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ\nUAFGCJ\nSASFGCJ\nYUASFGCJ"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2') == 'CBADEF'\nassert solution('4 4\\nABCD\\nEFGH\\n2\\n2') == 'CDBEFG'\nassert solution('3 5\\nABBCDE\\nFGHIJK\\n3\\n3') == 'ABCDFGJK'\nassert solution('4 5\\nABCD\\nEFGH\\n3\\n3') == 'ABBCDE'\nassert solution('6 6\\nABBCDE\\nFGHIJKL\\n4\\n4') == 'ABBCDE'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CDBEAF'\nassert solution('1 2') == 'AB'\nassert solution('1 2') == 'BA'\nassert solution('1 2') == 'AB'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc def') == 'cbad ef'\nassert solution('abc def') == 'cbad ef'\nassert solution('abc def') == 'cbad ef'\nassert solution('abc def') == 'cbad ef'\nassert solution('abc def') == 'cbad ef'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('2 2') == '3'\nassert solution('2 2 3') == '2'\nassert solution('2 2 3 4') == '1'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == \"\"\nassert solution('1\\n0') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n5') == '5'\nassert solution('2\\n5') == '5'\nassert solution('3\\n5') == '5'\nassert solution('4\\n5') == '5'\nassert solution('5\\n5') == '5'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '1\\n5\\n20\\nT\\n50\\n80\\n50\\n50\\n30\\n'\n) == '5'\n\"\"\"\n\"\"\"\nGiven a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\n\nNote: For the purpose of this problem, we define empty string as valid palindrome.\n\nExample 1:\nInput: \"A man, a plan, a canal: Panama\"\nOutput: true\n\nExample 2:\nInput: \"race a car\"\nOutput: false\n\nNote:\nHave you consider that the string might be empty? This is a good question to ask during an interview.\n\nFor the purpose of this problem, we define empty string as valid palindrome.\n\nConstraints:\ns consists only of printable ASCII characters.\n\"\"\"\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\"\nassert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\"\nassert solution(\"2\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\"\nassert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\"\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n20\\nT\\n50\\n80\\n50\\n50\\n30\\n') == '5'\nassert solution('3\\n5\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n') == '4'\nassert solution('1\\n3\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n') == '4'\nassert solution('4\\n5\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n') == '4'\nassert solution('2\\n5\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n') == '4'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\"\nassert solution(\"2\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\"\nassert solution(\"2\\n2\\n100 T\\n100 N\") == \"1\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\"\nassert solution(\"3\\n5\\n100 T\\n100 T\\n100 T\\n100 T\\n100 N\") == \"1\"\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '1\\n5\\n20\\n50\\n80\\n50\\n30\\n'\n) == '5'\n\nassert solution(\n    '3\\n5\\n100\\n100\\n100\\n100\\n100\\n'\n) == '4'\n\nassert solution(\n    '3\\n5\\n100\\n100\\n100\\n100\\n100\\n'\n) == '4'\n'''\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '4'\nassert solution('2\\n3') == '3'\nassert solution('2\\n4') == '4'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\nassert solution('6 8') == '22'\nassert solution('7 10') == '19'\nassert solution('10 9') == '23'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n''') == '6'\nassert solution('''\n6 8\n''') == '22'\nassert solution('''\n4 8\n''') == '22'\nassert solution('''\n4 3\n''') == '6'\nassert solution('''\n6 8\n''') == '22'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == 6\nassert solution(\"6 8\") == 22\nprint(\"all tests passed.\")\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2 3') == '6'\nassert solution('3 4') == '12'\nassert solution('6 8') == '22'\nassert solution('6 10') == '28'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3''') == '6'\nassert solution('''6 8''') == '22'\nassert solution('''10 5''') == '20'\nassert solution('''12 17''') == '43'\nassert solution('''30 7''') == '68'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4 3\n\"\"\") == \"6\"\nassert solution(\"\"\"6 8\n\"\"\") == \"22\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '1'\nassert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '0'\nassert solution('''1 4\n4 3 2 1\n''') == '0'\nassert solution('''2 2\n1 1\n1 1\n''') == '0'\nassert solution('''10 3\n1 2 3\n6 5 4\n7 8 9\n6 7 8\n7 6 7\n8 6 7\n8 7 6\n8 7 5\n8 6 5\n8 5 4\n8 4 3\n8 3 2\n8 2 1\n8 1\n''') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"0\"\n\nimport sys\nfrom math import floor\nfrom math import ceil"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '1'\nassert solution('''1 4\n4 3 2 1\nSample Output 2:\n0''') == '0'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n10 9 8 7 6 5 4 3 2 1\nSample Output 2:\n9\n''') == '9'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n10 9 8 7 6 5 4 3 2 1\nSample Output 2:\n9''') == '9'\nassert solution('''2 3\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 8 9\n8 9 10\nSample Output 2:\n5\n''') == '5'\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\nassert solution('''\n1 1\n1\n''') == '0'\nassert solution('''\n1\n1\n''') == '0'\nassert solution('''\n4 1\n1\n2\n3\n4\n''') == '3'\nassert solution('''\n4 4\n1\n2\n3\n4\n''') == '2'\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n1\\n3') == '1'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n5\\n3\\n1\\n5\\n1\\n4\\n1') == '4'\nassert solution('3\\n2\\n2\\n3') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('6 5 4') == ''\nassert solution('1 2 3') == ''\nassert solution('6 5 4') == ''\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '28'\nassert solution('10\\n3\\n4\\n6\\n2') == '16'\nassert solution('10\\n3\\n10\\n2\\n12') == '16'\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"10\n3\n4\n6\n2\n\"\"\") == \"28\"\n\nassert solution(\n\"\"\"10\n3\n10\n2\n12\n\"\"\") == \"16\"\n\nassert solution(\n\"\"\"3\n1\n2\n3\n\"\"\") == \"6\"\n\nassert solution(\n\"\"\"3\n1\n2\n3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"5\n1\n2\n3\n4\n5\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n3\n4\n6\n2''') == '28'\nassert solution('''10\n3\n10\n2\n12''') == '16'\nassert solution('''10\n3\n10\n2\n4\n1\n5\n2\n7\n4\n6\n3\n8\n2\n9\n1\n3\n4\n2\n3\n4\n2\n3\n1\n4\n2\n3\n2\n2\n1\n1\n3\n2\n1\n3\n1\n2\n1\n1\n3\n1\n4\n1\n2\n2\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n3\\n4\\n6\\n2\\n') == '28'\nassert solution('10\\n3\\n10\\n2\\n12\\n') == '16'\nprint(\"Asserts passed\")\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"10\\n10\") == \"\"\nassert solution(\"10\\n10\\n10\") == \"\"\nassert solution(\"10\\n10\\n10\\n10\") == \"\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n3\\n4\\n6\\n2\\n') == '28'\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"2\\n2\\n3\") == \"2\"\nassert solution(\"2\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n3\") == \"2\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nprint(\"test passed\")\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"piss\") == \"no hiss\"\nassert solution(\"asdf\") == \"no hiss\"\nassert solution(\"octopus\") == \"no hiss\"\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'no hiss'\nassert solution('hiss') == 'hiss'\nassert solution('hississ') == 'hiss'\nassert solution('mississippi') == 'no hiss'\nassert solution('kissssss') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('asdfasdfasdfasdf') == 'no hiss'\nassert solution('asdfasdfasdfasdf') == 'no hiss'\nassert solution('asdfasdfasdfasdf') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('hissing') == 'hiss'\nassert solution('mississippi') == 'no hiss'\nassert solution('hiss') == 'hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('kiss') == 'no hiss'\nassert solution('abc') == 'no hiss'\nassert solution('mississippi') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('octopus') == 'no hiss'\nassert solution('mississippi') == 'hiss'\nassert solution('hiss') == 'hiss'\nassert solution('hisss') == 'hiss'\nassert solution('hissss') == 'hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('mississippi') == 'no hiss'\nassert solution('mississippii') == 'hiss'\nassert solution('mississipppiiii') == 'hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('s') == ''\nassert solution('sss') == ''\nassert solution('hisss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('amiss') == 'hiss'\nassert solution('octopus') == 'no hiss'\nassert solution('mississippi') == 'hiss'\nassert solution('mississippipi') == 'no hiss'\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"4\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"1\"\nassert solution(\"10\\n\") == \"2\"\nassert solution(\"20\\n\") == \"2\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'\n\nTests:\n1. First four lines of test case 0:\n4\nc++\nC++\nc\nc#\nExpected output:\n3\n\n2. First four lines of test case 1:\n5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\nExpected output:\n5\n\n3. First four lines of test case 2:\n5\nPython\nPython\nPython\nPython\nExpected output:\n1\n\"\"\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\nunix\nblockchain\nartificial intelligence\nmachine-learning\n''') == '5'\nassert solution('''4\ncryptography\nblockchain\nartificial intelligence\nmachine-learning\n''') == '3'\nassert solution('''4\nmySQL\nmysql\nMachine learning\nBlockchain\n''') == '4'\nassert solution('''5\nMySQL\nmysql\nMachine Learning\nblockchain\n''') == '5'\n'''\nNote:\n\nC: The first character in each keyword is capital, and the first character in each line is not a space.\n\nThere are no hyphens.\n\nThe keywords are distinct, i.e., there are no duplicate keywords in the data bank.\n\nAll strings contain only lowercase English letters.\n\nEach line contains at least one keyword.\n'''\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\\\"C++\\\"\\n\\\"C#\\\"\\n\\\"c\\\"\\n\\\"c++\\\"\") == \"3\"\nassert solution(\"3\\n\\\"Python\\\"\\n\\\"web technology\\\"\\n\\\"database\\\"\\n\\\"flask\\\"\") == \"2\"\nassert solution(\"3\\n\\\"Microsoft\\\"\\n\\\"Microsoft SQL Server\\\"\\n\\\"Microsoft Access\\\"\\n\\\"Microsoft SQL Management\\\"\") == \"4\"\nassert solution(\"4\\n\\\"PHP\\\"\\n\\\"MySQL\\\"\\n\\\"database\\\"\\n\\\"sql\\\"\") == \"2\"\nassert solution(\"1\\n\\\"dummy\\\"\") == \"0\"\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"a\") == 1\nassert solution(\"a a\") == 0\nassert solution(\"a a a\") == 0\nassert solution(\"a b\") == 2\nassert solution(\"a b a\") == 1\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\nc++\nC++\nc\nc#\n''') == '3'\nassert solution('''\n5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\nassert solution('''\n6\nC++\nC\nc#\nC++\nC#\n''') == '6'\nassert solution('''\n1\nc\na\nb\nc\nd\n''') == '0'\nassert solution('''\n6\nc\na\nb\nc\nd\ne\nf\n''') == '6'\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('    ') == ''\nassert solution('\\n\\n\\n') == ''\nassert solution(' \\n') == ''\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n'''"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n4\nc++\nC++\nc\nc#\n''') == '3'\n\nassert solution('''\\\n4\nmachine-learning\nbig-data\nAI\nC++\n''') == '5'\n\nassert solution('''\\\n5\nblockchain\nArtificial-intelligence\nMachine-learning\nLinux\n''') == '5'\n\nassert solution('''\\\n5\nblockchain\nArtificial-intelligence\nMachine-learning\nLinux\n''') == '5'\n\nassert solution('''\\\n5\ncryptography\nblockchain\nArtificial intelligence\nMachine-learning\nLinux\n''') == '5'"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\nc++\\nC++\\nc\\nc#\\n') == '3'\nassert solution('5\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux\\n') == '5'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\n-----"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCCC') == 9\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\nassert solution('GTCCG') == 22\nassert solution('GCTGTG') == 25\nassert solution('GCTGTC') == 22\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\nassert solution('TTCGTTC') == 21\nassert solution('GTCGTCGTT') == 6\nassert solution('TTTGTTGTCGTCG') == 9\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == 21\n\nprint(\"all tests passed\")\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\n'''\n\nimport sys"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\nprint(\"Test case 1 and 2 passed.\")\n\"\"\""
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\nassert solution
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\"\nassert solution(\"315\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'\nassert solution('270') == '-90'\nassert solution('0') == '0'\nassert solution('90') == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('90') == '90'\nassert solution('315') == '90'\nassert solution('0') == '180'\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '-90'\nassert solution('10,89') == '-45'\nassert solution('-90,45') == '45'\nassert solution('-90,0') == '0'\nassert solution('0,0') == '0'\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\"\nassert solution(\"315\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\"\nassert solution(\"315\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('315', '45') == '90'\nassert solution('180', '270') == '90'\nassert solution('270', '315') == '90'\nassert solution('90', '180') == '90'\nassert solution('90', '270') == '-90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"315\\n45\") == \"90\"\nassert solution(\"180\\n270\") == \"90\"\nassert solution(\"315\\n-45\") == \"180\"\nassert solution(\"180\\n-270\") == \"270\"\nassert solution(\"315\\n0\") == \"0\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == result\nprint(solution(input))\n\"\"\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 180"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\n\nassert solution('''1\n1''') == '1'\n\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '1'\n\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == '2'"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\nassert solution('''5\n11\n20\n33\n40\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99''') == '1'\nassert solution('''5\n1\n23\n18\n13\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256''') == '3'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '5\\n' +\n    '11\\n' +\n    '20\\n' +\n    '33\\n' +\n    '40\\n' +\n    '55\\n'\n) == '1'\n\nassert solution(\n    '5\\n' +\n    '11\\n' +\n    '20\\n' +\n    '33\\n' +\n    '40\\n' +\n    '55\\n'\n) == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55\n''') == '1'\nassert solution('''5\n''') == '0'\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '0'\nassert solution('''11\n20\n33\n40\n55\n''') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\n\nTest Case 1\n-----Input-----\n5\n1\n23\n18\n13\n99\nSample Output 1:\n3\n\nTest Case 2\n-----Input-----\n10\n11\n12\n14\n18\n19\n22\n24\n26\n27\nSample Output 2:\n1\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55\n''') == '1'\nassert solution('''3\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '2'\nassert solution('''3\n1\n2\n3\n''') == '1'\nassert solution('''4\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '3'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '5'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '5'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '5'\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\n\"\"\"\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11''') == '9'\nassert solution('''10\n3\n2\n6\n9\n10\n11\n13\n15\n17\n19''') == '5'\nassert solution('''50\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50''') == '51'\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBB\") == \"0\"\nassert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWWWW\") == \"0\"\nassert solution(\"WWWWWWW\") == \"1\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(\"\\033[92mAll tests passed!\")"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWBBBW') == '0'\nassert solution('WWWWBBWWWWWW') == '0'\nassert solution('WWWBBBWWWWW') == '1'\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('WWBWBB') == '1'\nassert solution('WWWWBBW') == '0'\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBWW') == '0'\nassert solution('WWWWBBWWWW') == '0'\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBWB\") == \"0\"\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('WWWWBBW') == 0\nassert solution('WWWBWBW') == 1\nassert solution('WWBBBW') == 0\nassert solution('WWBBWW') == 1\nassert solution('WWBBBWBWWW') == 1\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'\nassert solution('WWWWBBWWWW') == '0'\nassert solution
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 3 3''') == 9\nassert solution('''1 2 1 1''') == 1.299038105676658\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n\"\"\""
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('3 2 1 3') == '8.394957279613464'\nassert solution('10 3 5 4') == '45'\n\nprint('All tests passed successfully!')\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 3 3') == 9\nassert solution('1 2 1 1') == 1.299038105676658\nassert solution('1 1 1 1') == 1\nassert solution('2 1 1 1') == 1\nassert solution('3 1 1 1') == 1\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nprint(\"Testcases passed\")\n\"\"\"\n\"\"\"\nThe quadrilateral can be made of the three sides of the same length and of the form $2s_ i = s_1 + s_2 + s_3$ for all $i$, but the area $2s_ i = s_1 + s_2 + s_3$ cannot be formed in this way since these three sides cannot all be of the same length.\n\nAnother possibility is to create four sides of different lengths, so that the sum of the lengths of these two sides is equal to the length of the third side.\n\nThen the area is\n\n$$\n2 \\left(\\frac{s_1}{2}\\right)^2 \\left(\\frac{s_2}{2}\\right)^2 + 2\\left(\\frac{s_3}{2}\\right)^2 - \\frac{s_1}{2}\\left(\\frac{s_2}{2}\\right)^2 - \\frac{s_3}{2}\\left(\\frac{s_1}{2}\\right)^2\n$$\n\nWhere $s_1, s_2, s_3 \\neq 0$, is the length of the other three sides.\n\nNote: I have attempted solving this problem before, but this time, I found that the area cannot be calculated in a closed form.\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == 1.299038105676658\nassert solution('3 3 3 3') == 9\nassert solution('1 2 1 1') == 1.299038105676658\nassert solution('3 3 3 3') == 9\nassert solution('1 1 1 1') == 1.299038105676658\n"
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1.299038105676658'"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robertapalaxiamethostenes'\nassert solution('robertapalaxiamethostenesapaxianqueen') == 'robertapalaxiamethostenesapaxianqueen'\nassert solution('robertapaxiamethostenes') == 'robertapaxiamethostenes'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robertapalaxiamethostenes'\nassert solution('rrroobbert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robertapalaxiamethostenes'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'robert'\nassert solution(input()) == 'robert'\nassert solution(input()) == 'robert'\nassert solution(input()) == 'robert'\nassert solution(input()) == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"robertapaxiamethostenes\") == \"robert\"\nassert solution(\"robertapaxiamethosten\") == \"robert\"\nassert solution(\"robertapaxiamethostene\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rrroobbert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"roberta\") == \"robert\"\nassert solution(\"robertaapax\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('robertapalaxiamethostenesc') == 'robert'\nassert solution('robertapalaxiamethostenescl') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('rrrooobbbert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('robertapalaxiamethostenesapaxiamethostenes') == 'robertapaxiamethostenes'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('roobroobert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('roobert') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('rrroobertapalaxiamethostenes') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"rrroobbert\") == \"robert\"\nassert solution(\"roobert\") == \"robert\"\nassert solution(\"roobertapalaxiamethostenes\") == \"robert\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('10000 10001 20000') == '108 4'\n\n\"\"\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1000 9 7''') == '108 4'\nassert solution('''1000 900 7''') == 'Impossible'\nassert solution('''5000 50 100''') == '108 4'\nassert solution('''1000 9000 7''') == 'Impossible'\nassert solution('''5000 5000 1000''') == '108 4'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n\n\"\"\"\n\nimport sys\n\nv1, v2, volume = [int(n) for n in sys.stdin.readline().split()]\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\nassert solution(\"1000 9 7\") == \"108 4\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'Impossible'\nassert solution('a') == 'Impossible'\nassert solution('4 5 2') == '108 4'\nassert solution('3 5 2') == '108 4'\nassert solution('5 6 3') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 9 7') == '108 4'\nassert solution('100 9 7') == 'Impossible'\nassert solution('100 999 7') == '108 4'\nassert solution('1000 9 9') == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000 9 7\\n') == '108 4'\n\n[Time Limit]\n5.0 seconds\n[Memory Limit]\n256 megabytes\n\"\"\""
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"108 4\"\n\"\"\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\""
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 9 3') == '108 3'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('1000 9 3') == 'Impossible'\nassert solution('999 9 1') == '108 3'\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '1\\n1\\n2\\n1\\n0'\nassert solution('4 4\\n....\\n....\\n....\\n....\\n') == '9\\n0\\n0\\n0\\n0'\nassert solution('6 6\\n...#.\\n.#.X#\\n.#.X#\\n.#.#X#\\n.#.#.X#\\n.#.#.#.\\n.#.#.#.\\n#.#.#.#\\n#.#.#.#') == '25\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"4 4\\n.#.\\n.#.\\n.#.\\n.#.\\n\") == \"9\\n0\\n0\\n0\\n0\"\nassert solution(\"6 6\\n.#.#\\n.#.#\\n.#.#\\n.#.#\\n.#.#\") == \"0\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"8 8\\n..#..\\n...#.\\n#...#\\n#..#..\\n#...#.\\n#...#.\\n#..#..\\n\") == \"5\\n1\\n1\\n1\\n1\\n1\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"1 1\\n#\") == \"0\"\nassert solution(\"5 1\\n#X.\\n....\") == \"4\\n1\\n1\\n1\\n1\"\nassert solution(\"3 5\\n.X....\\n..#...\\n....X.\\n....#.\\n#.##.#\\n#....#\\n#....#\\n#....#\") == \"1\\n0\\n1\\n0\\n1\"\nassert solution(\"3 5\\n#.X...\\n..#...\\n....X.\\n....#.\\n#.##.#\\n#....#\\n#....#\\n#....#\") == \"2\\n1\\n0\\n0\\n0\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('\\n') == '\\n'\nassert solution('\\n' * 3) == '\\n\\n\\n'\nassert solution('#.\\n.##\\n#..\\n#.#\\n#..\\n#...\\n#.#\\n#.#\\n#...\\n#...\\n#...\\n') == '3\\n0\\n0\\n0\\n0\\n0'\nassert solution('#.\\n.##\\n#..\\n#.#\\n#..\\n#...\\n#.#\\n#.#\\n#...\\n#...\\n#...\\n') == '9\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0'\nassert solution(\n    '4 4\\n....\\n....\\n....\\n....\\n') == '9\\n0\\n0\\n0\\n0'\nassert solution(\n    '5 5\\n####\\n....\\n....\\n....\\n....\\n') == '1\\n1\\n1\\n1\\n1'\nassert solution(\n    '5 5\\n####\\n#....\\n....\\n....\\n....\\n') == '1\\n1\\n1\\n1\\n1'\nassert solution(\n    '5 5\\n####\\n#....\\n....\\n....\\n....\\n') == '1\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('###') == ''\nassert solution('#X') == ''\nassert solution('#.#') == ''\nassert solution('##.#') == ''\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0\\n'\nassert solution('2 2\\n.#\\n.#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\n1\\n2\") == \"3\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n212\\n1253') == '1953566'\nassert solution('5\\n23\\n17\\n43\\n52\\n22') == '102'\nassert solution('1\\n2\\n3\\n4\\n5') == '102345'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '987654321'\nassert solution('1000\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '987654321'\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"2\n212\n1253\"\"\"\n) == \"1953566\"\nassert solution(\n    \"\"\"5\n23\n17\n43\n52\n22\"\"\"\n) == \"102\"\nassert solution(\n    \"\"\"1\n17\"\"\"\n) == \"17\"\nassert solution(\n    \"\"\"1000\n999\"\"\"\n) == \"100000001\"\nassert solution(\n    \"\"\"100\n99\"\"\"\n) == \"999999\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '102'\nassert solution(stdin) == '1953566'\nassert solution(stdin) == '103459318'\nassert solution(stdin) == '2730478870'\nassert solution(stdin) == '91217283896'\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n153 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n200 202\\n200 203\\n200 204\\n200 205\\n200 206\\n200 207\\n200 208\\n200 209\\n200 210\\n200 211\\n200 212\\n200 213\\n200 214\\n200 215\\n200 216\\n200 217\\n200 218\\n200 219\\n200 220\\n200 221\\n200 222\\n200 223\\n200 224\\n200 225\\n200 226\\n200 227\\n200 228\\n200 229\\n200 230\\n200 231\\n200 232\\n200 233\\n200 234\\n200 235\\n200 236\\n200 237\\n200 238\\n200 239\\n200 240\\n200 241\\n200 242\\n200 243\\n200 244\\n200 245\\n200 246\\n200 247\\n200 248\\n200 249\\n200 250\\n200 251\\n200 252\\n200 253\\n200 254\\n200 255\\n200 256\\n200 257\\n200 258\\n200 259\\n200 260\\n200 261\\n200 262\\n200 263\\n200 264\\n200 265\\n200 266\\n200 267\\n200 268\\n200 269\\n200 270\\n200 271\\n200 272\\n200 273\\n200 274\\n200 275\\n200 276\\n200 277\\n200 278\\n200 279\\n200 280\\n200 281\\n200 282\\n200 283\\n200 284\\n200 285\\n200 286\\n200 287\\n200 288\\n200 289\\n200 290\\n200 291\\n200 292\\n200 293\\n200 294\\n200 295\\n200 296\\n200 297\\n200 298\\n200 299\\n200 300\\n200 301\\n200 302\\n200 303\\n200 304\\n200 305\\n200 306\\n200 307\\n200 308\\n200 309\\n200 310\\n200 311\\n200 312\\n200 313\\n200 314\\n200 315\\n200 316\\n200 317\\n200 318\\n200 319\\n200 320\\n200 321\\n200 322\\n200 323\\n200 324\\n200 325\\n200 326\\n200 327\\n200 328\\n200 329\\n200 330\\n200 331\\n200 332\\n200 333\\n200 334\\n200 335\\n200 336\\n200 337\\n200 338\\n200 339\\n200 340\\n200 341\\n200 342\\n200 343\\n200 344\\n200 345\\n200 346\\n200 347\\n200 348\\n200 349\\n200 350\\n200 351\\n200 352\\n200 353\\n200 354\\n200 355\\n200 356\\n200 357\\n200 358\\n200 359\\n200 360\\n200 361\\n200 362\\n200 363\\n200 364\\n200 365\\n200 366\\n200 367\\n200 368\\n200 369\\n200 370\\n200 371\\n200 372\\n200 373\\n200 374\\n200 375\\n200 376\\n200 377\\n200 378\\n200 379\\n200 380\\n200 381\\n200 38"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n212\n1253''') == '1953566'\nassert solution('''5\n23\n17\n43\n52\n22\n''') == '102'\nassert solution('''1\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n''') == '373846647671'\nprint('Passed all tests...')\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"212\") == \"1953566\"\nassert solution(\"23\") == \"102\"\nassert solution(\"17\") == \"8\"\nassert solution(\"43\") == \"27\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    r\"\"\"\n2\n212\n1253\n\"\"\"\n) == \"1953566\"\n\nassert solution(\n    r\"\"\"\n5\n23\n17\n43\n52\n22\n\"\"\"\n) == \"102\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n212\\n1253') == '1953566'\nassert solution('3\\n23\\n17\\n43\\n52') == '102'\nassert solution('4\\n23\\n17\\n43\\n52') == '206955'\nassert solution('5\\n23\\n17\\n43\\n52') == '444313'\nassert solution('10\\n23\\n17\\n43\\n52') == '444313'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 10 10''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\n'''\n\nassert solution('''5 5 5''') == '0.000000 0.000000 0.000000'\nassert solution('''5 5 5''') == '0.000000 0.000000 0.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 10 10''') == '''0.000000 0.000000 0.000000\n'''\nassert solution('''9 9 9''') == '''0.000000 3.000000 6.000000\n'''\nassert solution('''1 2 3''') == '''0.000000 2.000000 5.000000\n'''\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 10 10''') == '''0.000000 0.000000 0.000000'''\nassert solution('''9 9 9''') == '''0.000000 3.000000 6.000000'''\nassert solution('''6 6 6''') == '''0.000000 0.000000 0.000000'''\nassert solution('''1 1 1''') == '''0.000000 3.000000 6.000000'''\nassert solution('''2 3 1''') == '''0.000000 0.000000 3.000000'''\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 10 10\\n3 3 3') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9\\n3 2 1') == '0.000000 3.000000 6.000000'\nassert solution('9 10 10\\n3 2 1') == '0.000000 1.000000 2.000000'\nassert solution('10 10 10\\n3 3 3') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10\\n3 1 3') == '0.000000 1.000000 2.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '3.000000 6.000000 9.000000'\nassert solution('3 3 3') == '0.000000 3.000000 6.000000'\nassert solution('1 1 1') == '0.000000 0.000000 0.000000'\nassert solution('2 2 2') == '0.000000 0.000000 3.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\nassert solution('''4 4 4\n1 1 1\n''') == '0.00000 0.00000 0.00000'\nassert solution('''3 3 3\n1 1 1\n''') == '0.00000 3.00000 6.00000'\nassert solution('''16 16 16\n3 3 3\n1 1 1\n''') == '0.000000 0.000000 0.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"5 10 3\") == \"0.500000 3.000000 7.000000\"\nassert solution(\"9 10 10\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"1 2 3\") == \"0.000000 0.000000 0.000000\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.replace('<','')\nprint('all tests passed')"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'foss'\n'''\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('foss<rritun') == 'forritun'\nassert solution('a<bc<') == 'b'\nassert solution('hjdskjl<dfdfhkl') == 'hjdskjl'\nassert solution('x<rritun') == 'x'\nassert solution('hjdskjl<dfdfhkl') == 'hjdskjl'\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\nassert solution(\"foss<<rritunfoss<<rritun\") == \"forritunforritun\"\nassert solution(\"foss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<rritunfoss<<r"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\nassert solution(\"<cabc\") == \"cabc\"\n\nprint('Test success!')"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\nassert solution(\"ls<@_@>\") == \"<@_@>\"\nassert solution(\"rri<<@_@_@>\") == \"@_@>\"\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('hello') == 'hello'\nprint('All set!')\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n\n'''\nsolution\n\n'''"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a-b') == 'a-b'\nassert solution('ab') == 'a-b'\nassert solution('ab-c') == 'a-b-c'\nassert solution('ab-c-d') == 'a-b-cd'\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"Mirko-Slavko\"\n) == \"MS\"\nassert solution(\n    \"Kim-Jung-Jin\"\n) == \"KJ\"\nassert solution(\n    \"K-J-J-J\"\n) == \"KJ\"\nassert solution(\n    \"K-J-J-J-J-J\"\n) == \"KJ\"\nassert solution(\n    \"K-J-J-J-J-J-J\"\n) == \"KJ\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sample') == 'MS'\nassert solution('KMP') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nassert solution('-CIC') == 'IC'\nassert solution('-MIRKOSLAVKO') == 'MS'\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('-') == '-'\nassert solution('abcdefghi') == 'abcdefghi'\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"KMP\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\nprint(\"Assertions passed\")\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -\n    - -"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a-b-c\") == \"ab-c\"\nassert solution(\"a-b-c-a\") == \"a-c-a\"\nassert solution(\"a-b-c-d\") == \"ab-c-d\"\nassert solution(\"a-b-c-d-a\") == \"ab-c-d-a\"\nassert solution(\"a-b-c-d-e\") == \"a-b-c-d-e\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nassert solution('Knuth-Morris-Pratt-Medium') == 'KMP'\nassert solution('KMP-Medium') == 'KMP'\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abcd') == 'abcd'\nassert solution('abcdefgh') == 'abcd'\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('MIRKO-SLAVKO') == \"MS\"\nassert solution('MIRKO-SLAVKO') == \"MS\"\nassert solution('MIRKO-SLAVKO') == \"MS\"\nassert solution('KMP') == \"KMP\"\nassert solution('KMP') == \"KMP\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('2 1 1') == 'Gold or Silver'\nassert solution('2 1 2') == 'Gold or Silver or Province'\nassert solution('1 1 0') == 'Gold or Silver or Province'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0 1 0') == ''\nassert solution('1 0 1') == ''\nassert solution('1 1 1') == ''\nassert solution('1 1 1 1') == ''\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 1 0') == \"Estate or Copper\"\nassert solution('2 1 0') == \"Province or Gold\"\nassert solution('1 1 1') == \"Province or Gold\"\n\n\"\"\""
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('1 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('1 2 0') == 'Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\nassert solution(\"1 0 1\") == \"Province or Gold\"\nassert solution(\"0 1 1\") == \"Province or Gold\"\nassert solution(\"0 0 1\") == \"Gold\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Estate or Copper'\nassert solution(stdin) == 'Province or Gold'\nassert solution(stdin) == 'Province or Gold'\nassert solution(stdin) == 'Province or Gold'\nassert solution(stdin) == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '0 0 0'\n) == 'Province or Gold'\nassert solution(\n    '1 1 0'\n) == 'Province or Gold'\nassert solution(\n    '2 1 0'\n) == 'Province or Gold'\nassert solution(\n    '0 1 2'\n) == 'Province or Gold'\nassert solution(\n    '0 1 0'\n) == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('1 1 1') == 'Province or Duchy or Province'\nassert solution('3 1 0') == 'Province or Gold'\nassert solution('1 1 1') == 'Province or Duchy or Province'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('1 0 0') == 'Province or Gold'\nassert solution('1 1 1') == 'Province or Gold'\nassert solution('1 1 2') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('1 1 1') == 'Province or Gold'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('2 2 2') == 'Province or Gold'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"75.7142857\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1\\n70 50') == '90.00'\nassert solution('10 3\\n80 90') == '75.7142857'\nassert solution('10 2\\n70 60') == '50.000'\nassert solution('10 1\\n70 40') == 'impossible'\nassert solution('0 0\\n0 0') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1\\n70 50') == '90.00'\nassert solution('10 3\\n80 90') == '75.7142857'\nassert solution('10 3\\n70 50') == 'impossible'\nassert solution('10 3\\n90 90') == 'impossible'\nassert solution('10 3\\n80 90') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('1 1') == 'impossible'\nassert solution('5 4') == 'impossible'\nassert solution('20 7') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '45'\nassert solution('1 2 3 4 5 6 7 8 9 10') == 'impossible'\nassert solution('5 4') == '47.6'\nassert solution('10 9') == 'impossible'\nassert solution('11 11') == '47.6'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00'\nassert solution('10 3\\n80 90\\n') == '75.7142857'\nassert solution('10 5\\n70 90\\n') == 'Impossible'\nassert solution('10 2\\n80 90\\n') == '90.00'\nassert solution('2 2\\n70 90\\n') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'impossible'\nassert solution('2\\n3') == 'impossible'\nassert solution('10\\n3') == '90.000000'\nassert solution('10\\n3') == 'impossible'\nassert solution('100\\n1') == 'impossible'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('3 10') == 'impossible'\nassert solution('5 10') == 'impossible'\nassert solution('10 10') == 'impossible'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 1 5 4 7 6''') == '4\\n2 3 5 7'\nassert solution('''5\n1 2 3 4 5''') == '5\\n1 2 3 4 5'\nassert solution('''7\n2 3 1 5 4 7 6''') == '4\\n2 3 5 7'\nassert solution('''2\n2 3 1 5 4 7 6''') == '4\\n2 3 5 7'\nassert solution('''2\n1 2 3 4 5''') == '5\\n1 2 3 4 5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2\n1 2 3 4 5''') == '4\\n1 2 3 5'\nassert solution(\n'''7\n2 3 1 5 4 7 6''') == '4\\n2 3 5 7'\nassert solution(\n'''5\n1 2 3 4 5''') == '5\\n1 2 3 4 5'\nassert solution(\n'''5\n3 4 1 2 3''') == '5\\n1 2 3 4'\nassert solution(\n'''2\n1 2''') == '1'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n7\\n1 2 3 4 5') == '4\\n1 2 3 5'\nassert solution('1\\n5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('1\\n5\\n1 4 3 2') == '5\\n1 4 3 2'\nassert solution('1\\n5\\n1 4 3 2') == '5\\n1 4 3 2'\nassert solution('1\\n5\\n1 4 3 2') == '5\\n1 4 3 2'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 1 5 4 7 6''') == '4\\n2 3 5 7'\nassert solution('''5\n1 2 3 4 5''') == '5\\n1 2 3 4 5'\nassert solution('''7\n2 3 1 5 4 7 6''') == '4\\n2 3 5 7'\nassert solution('''6\n1 2 3 4 5 6''') == '5\\n1 2 3 4 5'\nassert solution('''9\n2 3 1 5 4 7 8 9''') == '4\\n2 3 5 7'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3 4 5''') == '5'\nassert solution('''2 3 1 5 4 7 6''') == '5'\nassert solution('''1 3 2 4 5 6''') == '6'\nassert solution('''1 2 3 4 5''') == '5'\nassert solution('''2 3 1 5 4 7 6''') == '6'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('2\\n3 1 5 4 7') == '5\\n1 2 3 4 5'\nassert solution('2\\n1 3 5 4 7') == '5\\n1 2 3 4 5'\nassert solution('2\\n3 1 2 5 4 7') == '5\\n1 2 3 4 5'\nassert solution('2\\n3 2 1 5 4 7') == '5\\n1 2 3 4 5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n3\n1\n5\n4\n7\n6\"\"\") == \"4\\n5 1 2 3\\n\"\nassert solution(\"\"\"7\n1\n2\n3\n4\n5\n6\n7\"\"\") == \"5\\n1 2 3 4 5\\n\"\nassert solution(\"\"\"3\n3\n1\n2\n3\"\"\") == \"3\\n1 2 3\\n\"\nassert solution(\"\"\"7\n1\n2\n3\n4\n5\n6\n7\"\"\") == \"5\\n1 2 3 4 5\\n\"\nassert solution(\"\"\"9\n1\n2\n3\n4\n5\n6\n7\n8\n9\"\"\") == \"9\\n1 2 3 4 5 6 7 8 9\\n\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 1 5 4 7 6\\n\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n1 2 3 4 5\"\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\") == \"23 45\"\nassert solution(\"1 0\") == \"2 45\"\nassert solution(\"9 26\") == \"9 45\"\nassert solution(\"5 30\") == \"13 45\"\nassert solution(\"7 40\") == \"19 45\"\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\""
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('5 30') == '0 45'\nassert solution('5 15') == '0 45'\nassert solution('0 0') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('0 0') == '0 0'\nassert solution('0 30') == '23 45'\nassert solution('0 30') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n\nexpected = \"9 25\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('10 22') == '9 17'\nassert solution('3 24') == '15 30'\nassert solution('5 30') == '20 29'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nassert solution(\"10 22\") == \"9 22\"\nassert solution(\"6 14\") == \"3 35\"\nassert solution(\"15 22\") == \"9 22\"\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('14 22') == '13 45'\nassert solution('14 25') == '13 45'\nassert solution('14 26') == '14 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nassert solution(\"20 10\") == \"19 25\"\nassert solution(\"0 0\") == \"23 45\"\nassert solution(\"12 12\") == \"12 45\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n\"\"\""
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1.000000) == \"1.000000\"\nassert solution(2.000000) == \"1.414214\"\nassert solution(3.000000) == \"2.718282\"\nassert solution(4.000000) == \"3.464101\"\nassert solution(5.000000) == \"4.796702\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(2.0) == 1.414214\nassert solution(1.0) == 1.0\nassert solution(0.36788) == 1.414214\nassert solution(2.718281) == 1.414214\nassert solution(1.0) == 1.0\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\""
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0.36788') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('1.732637') == '1.732637'"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('0.36788') == '1.414214'\nassert solution('0.15962') == '1.414214'\nassert solution('0.999') == '1.414214'\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n'''"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '3:', \"3\"\nassert solution('5') == '5:', \"5\"\nassert solution('50') == '50:', \"50\"\nprint(\"all tests passed\")\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '3:', '3'\nassert solution('50') == '50:', '50'\nassert solution('60') == '60:', '60'\nassert solution('10') == '10:', '10'\nassert solution('1') == '1:', '1'\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '3:', 'This is 3'\nassert solution('50') == '50:', 'This is 50'\nassert solution('0') == '0:', 'This is 0'\nassert solution('999999999999999999999999999') == '999999999999999999999999999:', 'This is 999999999999999999999999999'\nassert solution('1') == '1:', 'This is 1'\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\n\nprint(solution('3'))\nprint(solution('50'))"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '3:\n2,1'\nassert solution('50') == '50:\n2,1\n2,2'\nassert solution('50') == '50:\n2,1'\nassert solution('50') == '50:\n2,1'\nassert solution('50') == '50:\n2,1'\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '3:', \"just one\"\nassert solution('50') == '50:', \"just one\"\nassert solution('3,1') == '3:1', \"just one\"\nassert solution('2,1') == '2:1', \"just one\"\nassert solution('3,2') == '3:2', \"just one\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1:', '1'\nassert solution('2') == '2:', '2'\nassert solution('3') == '3:', '3'\nassert solution('4') == '2,1', '4'\nassert solution('5') == '5:', '5'\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('3') == '3:1'\nassert solution('7') == '7:1'\nassert solution('50') == '50:1'\n"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN AND THE SNOW\") == \"yes\"\nassert solution(\"THE RAIN IN SPAIN AND THE SNOW IN THE PLAIN\") == \"yes\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW IN THE PLAIN\") == \"no\"\n\nassert solution(\"ONE TWO THREE\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"\") == \"yes\"\nassert solution(\" \") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\"\nassert solution(\"\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\"\"\""
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('THE RAIN IN SPAIN') == \"yes\"\nassert solution('IN THE RAIN AND THE SNOW') == \"no\"\nassert solution('THE RAIN IN SPAIN IN THE PLAIN') == \"yes\"\nassert solution('THE RAIN IN SPAIN IN THE PLAIN') == \"no\"\nassert solution('The rain in Spain is nice and wet') == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\nassert solution('THE RAIN IN SPAIN IN THE PLAIN') == 'no'\nassert solution('THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN') == 'no'\nassert solution('THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN THE RAIN IN SPAIN IN THE PLAIN') == 'no'\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\nassert solution('IN THE RAIN IN THE PLAIN') == 'no'\nassert solution('HALLO WIRLD') == 'no'\nassert solution('the rain in spain is blooood') == 'no'\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n\n\"\"\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n'''\n\nfrom typing import List"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n\nprint(\"Testcase 1 passed\\n\")\n\nprint(\"Testcase 2 passed\\n\")\n\nprint(\"Testcase 3 passed\\n\")\n\nprint(\"Testcase 4 passed\\n\")\n\nprint(\"Testcase 5 passed\\n\")\n\nprint(\"Testcase 6 passed\\n\")\n\nprint(\"Testcase 7 passed\\n\")\n\nprint(\"Testcase 8 passed\\n\")\n\nprint(\"Testcase 9 passed\\n\")\n\nprint(\"Testcase 10 passed\\n\")\n\nprint(\"Testcase 11 passed\\n\")\n\nprint(\"Testcase 12 passed\\n\")\n\nprint(\"Testcase 13 passed\\n\")\n\nprint(\"Testcase 14 passed\\n\")\n\nprint(\"Testcase 15 passed\\n\")\n\nprint(\"Testcase 16 passed\\n\")\n\nprint(\"Testcase 17 passed\\n\")\n\nprint(\"Testcase 18 passed\\n\")\n\nprint(\"Testcase 19 passed\\n\")\n\nprint(\"Testcase 20 passed\\n\")\n\nprint(\"Testcase 21 passed\\n\")\n\nprint(\"Testcase 22 passed\\n\")\n\nprint(\"Testcase 23 passed\\n\")\n\nprint(\"Testcase 24 passed\\n\")\n\nprint(\"Testcase 25 passed\\n\")\n\nprint(\"Testcase 26 passed\\n\")\n\nprint(\"Testcase 27 passed\\n\")\n\nprint(\"Testcase 28 passed\\n\")\n\nprint(\"Testcase 29 passed\\n\")\n\nprint(\"Testcase 30 passed\\n\")\n\nprint(\"Testcase 31 passed\\n\")\n\nprint(\"Testcase 32 passed\\n\")\n\nprint(\"Testcase 33 passed\\n\")\n\nprint(\"Testcase 34 passed\\n\")\n\nprint(\"Testcase 35 passed\\n\")\n\nprint(\"Testcase 36 passed\\n\")\n\nprint(\"Testcase 37 passed\\n\")\n\nprint(\"Testcase 38 passed\\n\")\n\nprint(\"Testcase 39 passed\\n\")\n\nprint(\"Testcase 40 passed\\n\")\n\nprint(\"Testcase 41 passed\\n\")\n\nprint(\"Testcase 42 passed\\n\")\n\nprint(\"Testcase 43 passed\\n\")\n\nprint(\"Testcase 44 passed\\n\")\n\nprint(\"Testcase 45 passed\\n\")\n\nprint(\"Testcase 46 passed\\n\")\n\nprint(\"Testcase 47 passed\\n\")\n\nprint(\"Testcase 48 passed\\n\")\n\nprint(\"Testcase 49 passed\\n\")\n\nprint(\"Testcase 50 passed\\n\")\n\nprint(\"Testcase 51 passed\\n\")\n\nprint(\"Testcase 52 passed\\n\")\n\nprint(\"Testcase 53 passed\\n\")\n\nprint(\"Testcase 54 passed\\n\")\n\nprint(\"Testcase 55 passed\\n\")\n\nprint(\"Testcase 56 passed\\n\")\n\nprint(\"Testcase 57 passed\\n\")\n\nprint(\"Testcase 58 passed\\n\")\n\nprint(\"Testcase 59 passed\\n\")\n\nprint(\"Testcase 60 passed\\n\")\n\nprint(\"Testcase 61 passed\\n\")\n\nprint(\"Testcase 62 passed\\n\")\n\nprint(\"Testcase 63 passed\\n\")\n\nprint(\"Testcase 64 passed\\n\")\n\nprint(\"Testcase 65 passed\\n\")\n\nprint(\"Testcase 66 passed\\n\")\n\nprint(\"Testcase 67 passed\\n\")\n\nprint(\"Testcase 68 passed\\n\")\n\nprint(\"Testcase 69 passed\\n\")\n\nprint(\"Testcase 70 passed\\n\")\n\nprint(\"Testcase 71 passed\\n\")\n\nprint(\"Testcase 72 passed\\n\")\n\nprint(\"Testcase 73 passed\\n\")\n\nprint(\"Testcase 74 passed\\n\")\n\nprint(\"Testcase 75 passed\\n\")\n\nprint(\"Testcase 76 passed\\n\")\n\nprint(\"Testcase 77 passed\\n\")\n\nprint(\"Testcase 78 passed\\n\")\n\nprint(\"Testcase 79 passed\\n\")\n\nprint(\"Testcase 80 passed\\n\")\n\nprint(\"Testcase 81 passed\\n\")\n\nprint(\"Testcase 82 passed\\n\")\n\nprint(\"Testcase 83 passed\\n\")\n\nprint(\"Testcase 84 passed\\n\")\n\nprint(\"Testcase 85 passed\\n\")\n\nprint(\"Testcase 86 passed\\n\")\n\nprint(\"Testcase 87 passed\\n\")\n\nprint(\"Testcase 88 passed\\n\")\n\nprint(\"Testcase 89 passed\\n\")\n\nprint(\"Testcase 90 passed\\n\")\n\nprint(\"Testcase 91 passed\\n\")\n\nprint(\"Testcase 92 passed\\n\")\n\nprint(\"Testcase 93 passed\\n\")\n\nprint(\"Testcase 94 passed\\n\")\n\nprint(\"Testcase 95 passed\\n\")\n\nprint(\"Testcase 96 passed\\n\")\n\nprint(\"Testcase 97 passed\\n\")\n\nprint(\"Testcase 98 passed\\n\")\n\nprint(\"Testcase 99 passed\\n\")\n\nprint(\"Testcase 100 passed\\n\")\n\nprint(\"Testcase 101 passed\\n\")\n\nprint(\"Testcase 102 passed\\n\")\n\nprint(\"Testcase 103 passed\\n\")\n\nprint(\"Testcase 104 passed\\n\")\n\nprint(\"Testcase 105 passed\\n\")\n\nprint(\"Testcase 106 passed\\n\")\n\nprint(\"Testcase 107 passed\\n\")\n\nprint(\"Testcase 108 passed\\n\")\n\nprint(\"Testcase 109 passed\\n\")\n\nprint(\"Testcase 110 passed\\n\")\n\nprint(\"Testcase 111 passed\\n\")\n\nprint(\"Testcase 112 passed\\n\")\n\nprint(\"Testcase 113 passed\\n\")\n\nprint(\"Testcase 114 passed\\n\")\n\nprint(\"Testcase 115 passed\\n\")\n\nprint(\"Testcase 116 passed\\n\")\n\nprint(\"Testcase 117 passed\\n\")\n\nprint(\"Testcase 118 passed\\n\")\n\nprint(\"Testcase 119 passed\\n\")\n\nprint(\"Testcase 120 passed\\n\")\n\nprint(\"Testcase 121 passed\\n\")\n\nprint(\"Testcase 122 passed\\n\")\n\nprint(\"Testcase 123 passed\\n\")\n\nprint(\"Testcase 124 passed\\n\")\n\nprint(\"Testcase 125 passed\\n\")\n\nprint(\"Testcase 126 passed\\n\")\n\nprint(\"Testcase 127 passed\\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n\"\"\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nassert solution(\"RRRRRLLLRLRLRBBLLLLLLL\") == \"HHSSSSSSSSSSSSSSS\"\nassert solution(\"RLLLLRRRRRRR\") == \"KKKKKKKKKKK\"\n\n---5 min ---"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nassert solution(\"RBRRRBRLLR\") == \"SSSSHHRSRRRRR\"\nassert solution(\"RRRRBRRRRRRR\") == \"SSSSSSSSSSSSSS\"\nassert solution(\"RRRBRRRRRRRRBRRRRRR\") == \"SSSSSSSSSSSSSSSSSS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nassert solution('RBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nassert solution(\"RLRL\") == \"CHCS\"\nassert solution(\"RRRRR\") == \"SSSSS\"\nassert solution(\"RLRLLRRRB\") == \"SSSSS\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\nassert solution(\"2 3 4\") == \"1\\nFizz\\nBuzz\\nFizz\\n4\\n\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4 7''') == '''1\nFizz\n3\nFizzBuzz\n5\nFizz\n7'''\nassert solution('''2 4 10''') == '''1\nFizz\n3\nFizzBuzz\n5\nFizz\n7'''\nassert solution('''2 4 5''') == '''1\nFizz\nBuzz\nFizz\n5'''\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    stdin=\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\"\nassert solution(\n    stdin=\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution(\n    stdin=\"2 5 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\"\nassert solution(\n    stdin=\"2 6 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\"\nassert solution(\n    stdin=\"2 7 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '1'\nassert solution('2 3 4') == '1 2 Fizz 4 Buzz Fizz'\nassert solution('2 4 7') == '1 2 Fizz 3 4 Buzz Fizz 7'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution(\"1 2 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution(\"1 2 3\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizz\\n7\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution(\"2 4 8\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n8\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7'\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7'\n\nassert solution('2 4 5') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\n\nassert solution('2 4 6') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\n\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\n\nassert solution('4 8 6') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1\\nFizz\\n3'\nassert solution('1 2 4') == '1\\nFizz\\nBuzz'\nassert solution('2 4 6') == '1\\nFizz\\nBuzz\\nFizz'\nassert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7'\nassert solution('2 4 5') == '1\\nFizz\\nBuzz\\nFizz\\nBuzz\\nFizz'\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1, 2, 3) == 1\nassert solution(2, 3, 7) == 1\nassert solution(3, 3, 7) == \"Fizz\"\nassert solution(4, 3, 7) == \"Fizz\"\nassert solution(5, 3, 7) == \"FizzBuzz\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 4 7''') == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"\nassert solution('''1 1 1''') == \"1\"\nassert solution('''7 7 7''') == \"7\"\nassert solution('''5 4 4''') == \"FizzBuzz\"\nassert solution('''3 3 3''') == \"Fizz\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 3 3 2') == 'It hadn\\'t snowed this early in 3 years!\\n'\nassert solution('2 10\\n0 100\\n') == 'It hadn\\'t snowed this early in 0 years!\\n'\nassert solution('0 1\\n0 1\\n') == 'It hadn\\'t snowed this early in 0 years!\\n'\nassert solution('0 1\\n3 3 3 2\\n') == 'It hadn\\'t snowed this early in 3 years!\\n'\nassert solution('0 1\\n0 1\\n') == 'It hadn\\'t snowed this early in 0 years!\\n'\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\\n3\\n3\\n3\\n2\") == \"It hadn't snowed this early in 0 years!\"\nassert solution(\"1\\n0\\n0\\n0\\n0\") == \"It hadn't snowed this early in 0 years!\"\nassert solution(\"1\\n3\\n3\\n3\\n3\") == \"It hadn't snowed this early in 1 years!\"\nassert solution(\"2\\n3\\n3\\n2\\n3\") == \"It hadn't snowed this early in 1 years!\"\nassert solution(\"2\\n3\\n3\\n3\\n3\") == \"It hadn't snowed this early in 2 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n3 3 3 2') == 'It hadn\\'t snowed this early in 3 years!'\nassert solution('2 10\\n0 100') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('4 2\\n3 3 3 2') == 'It hadn\\'t snowed this early in 3 years!'\nassert solution('2 10\\n0 100') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('4 1\\n3 3 3 2') == 'It had never snowed this early!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"It hadn't snowed this early in 0 years!\\n\"\nprint(solution(stdin))\n\"\"\"\n\nn, d = [int(x) for x in stdin.strip().split(\" \")]\ndays = [int(x) for x in stdin.strip().split(\" \")]\n\nsnow_count = 0\ncurrent_count = 0\nfor i in range(n):\n    if days[i] > days[i-1]:\n        current_count += 1\n    else:\n        current_count = 0\n    if current_count > snow_count:\n        snow_count = current_count"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''4 2\n3 3 3 2''') == 'It hadn\\'t snowed this early in 3 years!'\nassert solution(\n'''2 10\n0 100\n''') == 'It hadn\\'t snowed this early in 0 years!'"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n3 3 3 2\\n') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('2 10\\n0 100\\n') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('2 1\\n0 0\\n') == 'It hadn\\'t snowed this early in 0 years!'\n\n'''\n\n\n'''\n>>> test_list = [1, 2, 3, 3, 3, 2, 2, 2, 2, 2, 1]\n>>> for i in range(10):\n...     print(test_list.count(i))\n... \n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n>>> test_list = [1, 2, 3, 3, 3, 2, 2, 2, 2, 2, 1]\n>>> for i in range(10):\n...     print(test_list.count(i))\n... \n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n>>> test_list = [1, 2, 3, 3, 3, 2, 2, 2, 2, 2, 1]\n>>> for i in range(10):\n...     print(test_list.count(i))\n... \n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n>>> test_list = [1, 2, 3, 3, 3, 2, 2, 2, 2, 2, 1]\n>>> for i in range(10):\n...     print(test_list.count(i))\n... \n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n>>> test_list = [1, 2, 3, 3, 3, 2, 2, 2, 2, 2, 1]\n>>> for i in range(10):\n...     print(test_list.count(i))\n... \n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n>>> test_list = [1, 2, 3, 3, 3, 2, 2, 2, 2, 2, 1]\n>>> for i in range(10):\n...     print(test_list.count(i))\n... \n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 2\n''') == '2'\nassert solution('''10 10\n''') == '7'\nassert solution('''1 0\n''') == '1'\nassert solution('''2 0\n''') == '1'\nassert solution('''100 10\n''') == '7'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 2') == '1'\nassert solution('1 1') == '2'\nassert solution('2 1') == '1'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\nassert solution('5 2') == '1'\nassert solution('1 10') == '1'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('CoconutSplat is one of Theta\\'s favorite counting-out games. It goes like this: initially, all players stand in a circle with their hands folded together (like an intact coconut). In clockwise order, one player touches the hands of the other players and says the rhyme: \u201cCo-co-nut, Co-co-nut, Co-co-nut, Splat!\u201d At each syllable, the player touches a hand, and the player whose hand or hands is touched last takes one of the following actions:') == '2'\nassert solution('CoconutSplat is one of Theta\\'s favorite counting-out games. It goes like this: initially, all players stand in a circle with their hands folded together (like an intact coconut). In clockwise order, one player touches the hands of the other players and says the rhyme: \u201cCo-co-nut, Co-co-nut, Co-co-nut, Splat!\u201d At each syllable, the player touches a hand, and the player whose hand or hands is touched last takes one of the following actions:') == '2'\nassert solution('CoconutSplat is one of Theta\\'s favorite counting-out games. It goes like this: initially, all players stand in a circle with their hands folded together (like an intact coconut). In clockwise order, one player touches the hands of the other players and says the rhyme: \u201cCo-co-nut, Co-co-nut, Co-co-nut, Splat!\u201d At each syllable, the player touches a hand, and the player whose hand or hands is touched last takes one of the following actions:') == '2'\nassert solution('CoconutSplat is one of Theta\\'s favorite counting-out games. It goes like this: initially, all players stand in a circle with their hands folded together (like an intact coconut). In clockwise order, one player touches the hands of the other players and says the rhyme: \u201cCo-co-nut, Co-co-nut, Co-co-nut, Splat!\u201d At each syllable, the player touches a hand, and the player whose hand or hands is touched last takes one of the following actions:') == '2'\nassert solution('CoconutSplat is one of Theta\\'s favorite counting-out games. It goes like this: initially, all players stand in a circle with their hands folded together (like an intact coconut). In clockwise order, one player touches the hands of the other players and says the rhyme: \u201cCo-co-nut, Co-co-nut, Co-co-nut, Splat!\u201d At each syllable, the player touches a hand, and the player whose hand or hands is touched last takes one of the following actions:') == '2'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\nprint(solution(stdin))\n\n--- 4 minutes ---"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\nassert solution('3 2') == '1'\nassert solution('10 20') == '7'\nassert solution('10 100') == '1'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\nassert solution('1 2') == '1'\nassert solution('10 100') == '7'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n\nfrom sys import stdin,stdout\nn,m = map(int,stdin.readline().split())\nrhyme = stdin.readline().strip()\n\nsyllables = len(rhyme)\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"\n\nn = int(stdin.readline().strip())\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\n-----Note-----\nTest input and output are always valid, no exceptions will be raised.\n\"\"\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('kukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukukuk"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('boudonuilcbsai') == 'bombonisuuladici'\nassert solution('boudonuilcbsai') == 'bombonisuuladici'\nassert solution('boudonuilcbsai') == 'bombonisuuladici'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('kakosi') == 'kakosi'\nassert solution('boudonuimilcbsai') == 'boudonuimilcbsai'\nassert solution('boudonuimilcbsai') == 'boudonuimilcbsai'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('dvzjrwzsyvrbqzjrwzqnzyvzqjrwzqjrwzqjrwzqzqjrwzqzqjrwzqjrwzqzqzqjrwzqjrwzqjrwzqzqjrwzqzqzqjrwzqjrwzqjrwzqzqjrwzqzqzqzqjrwzqzqzqjrwzqjrwzqzqjrwzqzqjrwzqzqzqjrwzqjrwzqzqjrwzqzqjrwzqzqzqjrwzqzqjrwzqzqzqjrwzqzqjrwzqzqzqjrwzqzqzqjrwzqzqjrwzqzqjrwzqzqzqjrwzqzqzqjrwzqzqzqjrwzqzqjrwzqzqjrwzqzqzqjrwzqzqzqjrwzqzqzqjrwzqzqzqjrwzqzqzqjrwzqzqjrwzqzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqjrwzqzqj"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(bok) == bok\nassert solution(koaski) == kakosi"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\""
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6''') == '8 2'\nassert solution('''7''') == '8 3'\nassert solution('''100''') == '64 81'\nassert solution('''998''') == '20 21'\nassert solution('''1000''') == '32 63'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6''') == '8 2'\nassert solution('''7''') == '8 3'\nassert solution('''500000''') == '21 9174'\nassert solution('''100000''') == '8 9174'\nassert solution('''1000000''') == '32 9585'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6''') == '8 2'\nassert solution('''7''') == '8 3'\nassert solution('''2''') == '1 2'\nassert solution('''3''') == '1 3'\nassert solution('''4''') == '2 3'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('4') == '8 2'\nassert solution('6') == '8 2'\nassert solution('8') == '8 2'\nassert solution('10') == '8 3'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6''') == '8 2'\nassert solution('''7''') == '8 3'\nassert solution('''1000000''') == '256 16'\nassert solution('''10''') == '256 256'\nassert solution('''10000''') == '256 256'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6''') == '8 2'\nassert solution('''7''') == '8 3'\nassert solution('''1000000''') == '2856 29544'\nassert solution('''100000''') == '2 1'\nassert solution('''150000''') == '5 8499'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6''') == '8 2'\nassert solution('''7''') == '8 3'\nassert solution('''100000''') == '104 903'\nassert solution('''1234567''') == '104 491'\nassert solution('''12345''') == '9 2'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''stairs'''\n) == '''YES'''\n\nassert solution(\n'''rotten'''\n) == '''NO'''\n\nassert solution(\n'''bales of cotton'''\n) == '''YES'''\n\nassert solution(\n'''eat'''\n) == '''NO'''\n\nassert solution(\n'''eat'''\n) == '''NO'''"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('stairs',\n                'e',\n                'erres airs ears ares aires',\n                'eet eat',\n                '2',\n                'apples and pears',\n                'plates of meat',\n                '2',\n                'tasty sprout',\n                'difficult route',\n                'worried and fraught',\n                'forever in doubt',\n                'apples and pears') == 'YES\\nYES\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('drought',\n                'e',\n                'aught ought aut acht',\n                'ought oubt outte out oute',\n                '2',\n                'tasty sprout',\n                'difficult route',\n                'worried and fraught',\n                'forever in doubt',\n                'apples and pears',\n                'plates of meat',\n                '2',\n                'tasty sprout',\n                'difficult route',\n                'worried and 67pears',\n                'forever in doubt',\n                'apples and pears') == 'NO\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet') == 'NO'\nassert solution('aught') == 'NO'\nassert solution('ought') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"aught\") == \"NO\"\nassert solution(\"ought\") == \"NO\"\nassert solution(\"eet\") == \"YES\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet') == 'YES'\nassert solution('eats') == 'NO'\nassert solution('ought') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet') == 'NO'\nassert solution('worried and ') == 'NO'\nassert solution('apples and pears') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet') == 'NO'\nassert solution('apples and pears') == 'YES'\nassert solution('plates of meat') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''stairs'''\n) == 'YES'\nassert solution(\n'''eet'''\n) == 'NO'\nassert solution(\n'''eet'''\n) == 'NO'\nassert solution(\n'''oops'''\n) == 'NO'\nassert solution(\n'''ought'''\n) == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('l') == 'YES'\nassert solution('u') == 'NO'\nassert solution('t') == 'NO'\nassert solution('r') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('eet') == 'NO'\nassert solution('tasty') == 'YES'\nassert solution('difficult') == 'NO'\nassert solution('worried') == 'YES'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == \"WIN\"\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == \"LOSE\"\nassert solution('''BEVERAGE\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == \"LOSE\"\nassert solution(''''') == \"WIN\"\nassert solution(''''') == \"LOSE\"\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"\n\"\"\"\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'WIN'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'WIN'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\nassert solution('BANANA') == 'LOSE'\nassert solution('A') == 'WIN'\nassert solution('A') == 'WIN'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n\"\"\"\n\n\"\"\"\n6/6 test cases passed.\nStatus: Accepted\nRuntime: 56 ms\n\"\"\"\n\nfrom string import ascii_uppercase as A"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('BANANA') == 'LOSE'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BA') == 'WIN'\nassert solution('BABE') == 'WIN'\nassert solution('BABEBEBEBEBEBE') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n\"\"\"\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\nassert solution('AA') == 'LOSE'\nassert solution('AABB') == 'WIN'\nassert solution('ABAA') == 'LOSE'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"INCREASING\"\nassert solution(\"HOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"DECREASING\"\nassert solution(\"LOST\\nHELLO\\nLOVED\\nHELLO\\n\") == \"INCREASING\"\n\"\"\""
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'INCREASING'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'DECREASING'\nassert solution('''4\nSANDY\nMARY\nPETER\nSUE''') == 'INCREASING'\nassert solution('''8\nABYSS\nCHANT\nDORIS\nDELETE\nGLEEF\nGLEEF\nGERRY\nSAMMIE\nSAMMIE''') == 'INCREASING'\nassert solution('''10\nGLEEF\nGERRY\nDELETE\nGLEEF\nCHANT\nDORIS\nABYSS\nSAMMIE\nSAMMIE\nSANDY\nSANDY''') == 'DECREASING'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('JOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'INCREASING'\nassert solution('HOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == 'DECREASING'\nassert solution('MARY\\nBILLY\\nMARY\\nBILLY\\nMARY\\n') == 'NEITHER'\nassert solution('AB\\nAB\\nAB') == 'NEITHER'\nassert solution('A\\nB') == 'NEITHER'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"INCREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"DECREASING\"\nassert solution(\"1\\nDELOIS\\nAILTON\\nALLIS\\nALEXANDER\\nABLOMI\") == \"INCREASING\"\nassert solution(\"1\\nDELOIS\\nAILTON\\nALLIS\\nALEXANDER\\nABLOMI\") == \"DECREASING\"\nassert solution(\"1\\n\") == \"INCREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == 'DECREASING'\nassert solution('11') == 'NEITHER'\nassert solution('HOPE') == 'DECREASING'\nassert solution('ALI') == 'DECREASING'\nassert solution('BECKY') == 'DECREASING'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Hello World') == 'INCREASING'\nassert solution('BOB JOE') == 'INCREASING'\nassert solution('ANDY ALI BECKY JULIE MEGHAN LAUREN MORGAN CARLI MEGAN ALEX TOBIN') == 'DECREASING'\nassert solution('JOHN MARY') == 'NEITHER'\nassert solution('JOE') == 'INCREASING'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('AL') == 'INCREASING'\nassert solution('ALI') == 'INCREASING'\nassert solution('ALI1') == 'INCREASING'\nassert solution('ALI1') == 'INCREASING'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\nJOE') == 'INCREASING'\nassert solution('2\\nJOE\\nBOB') == 'INCREASING'\nassert solution('2\\nBOB\\nJOE') == 'DECREASING'\nassert solution('4\\nBOB\\nJOE\\nAL\\nADAM') == 'INCREASING'\nassert solution('5\\nMARY\\nJOE\\nBOB\\nAL\\nADAM') == 'DECREASING'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\"\nassert solution(\"5 10 17\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Bob wins!\"\nassert solution(\"5 10 17\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\"\nassert solution(\"5 10 17\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"No winner!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!\\nNina wins!\\nJess wins!'\n\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\nBob wins!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2') == 'Nina wins!\\nJess wins!'\nassert solution('2 10 5\\nNina\\nBob\\nJess\\nTim') == 'No winner!'\nassert solution('2 10 8\\nNina\\nBob\\nJess\\nTim\\nNina 2\\nBob 2\\nJess 2') == 'Nina wins!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!\\nNina wins!\\nJess wins!', '1st sample'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!', '2nd sample'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2') == 'Nina wins!\\nJess wins!'\nprint(solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2'))\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"No winner!\"\nassert solution(\"2 3 3\") == \"Bob wins!\"\nassert solution(\"2 2 2\") == \"Bob wins!\"\nassert solution(\"3 2 2\") == \"Bob wins!\"\nassert solution(\"3 3 3\") == \"Bob wins!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!\\nNina wins!\\nJess wins!'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\n'\nprint('Passed!')\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'Nina wins!\\nJess wins!'\nassert solution('''3 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!\\nJess wins!\\n'\nassert solution('''3 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\n'\nassert solution('''3 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\n'\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '7 3 0 0 5 4\\n'\n    '6 0 0 2 7 6\\n'\n) == '2.0\\n'\n\nassert solution(\n    '7 3 0 0 5 4\\n'\n    '6 0 0 2 7 6\\n'\n) == '2.0\\n'\n\nassert solution(\n    '7 3 0 0 5 4\\n'\n    '6 0 0 2 7 6\\n'\n) == '2.0\\n'\n\nassert solution(\n    '7 3 0 0 5 4\\n'\n    '6 0 0 2 7 6\\n'\n) == '2.0\\n'\n\nassert solution(\n    '7 3 0 0 5 4\\n'\n    '6 0 0 2 7 6\\n'\n) == '2.0\\n'"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\nassert solution(\"2 3 4 1 3\") == \"2.0\"\nassert solution(\"-10 0 0 10 1\") == \"8.0\"\nassert solution(\"-2 4 -5 -9 -4 -5\") == \"0.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\nassert solution(\"6 0 0 2 6 5\") == \"1.0\"\nassert solution(\"6 0 0 2 -5 5\") == \"2.0\"\nassert solution(\"-6 0 0 2 -5 5\") == \"2.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nprint('Passed!')\n\nprint(\"%s/%s\" % (len(passed), len(problems)))\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3 0 0 5 4\\n') == '2.0\\n'\nassert solution('6 0 0 2 7 6\\n') == '2.0\\n'\n\"\"\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nprint('Testcases passed')\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nassert solution('6 1 0 2 7 6') == '4.0'\nassert solution('-7 3 0 0 5 4') == '-2.0'\nassert solution('-6 0 0 2 7 6') == '-2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 3 0 0 5 4\\n\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\\n\") == \"2.0\"\nassert solution(\"0 0 0 0 0 0\\n\") == \"0.0\"\nassert solution(\"4 -2 0 -2 -4\\n\") == \"0.0\"\nassert solution(\"0 0 0 0 0 0\\n\") == \"0.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3 0 0 5 4\\n') == '2.0'\nassert solution('6 0 0 2 7 6\\n') == '2.0'\nassert solution('-7 3 0 0 5 4\\n') == '2.0'\nassert solution('7 -3 0 0 5 4\\n') == '2.0'\nassert solution('7 3 0 0 -5 4\\n') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 0 0 0\") == \"0.0\"\nassert solution(\"1 1 1 1 1 1\") == \"1.0\"\nassert solution(\"10 -3 -2 2 10 10\") == \"0.0\"\nassert solution(\"-3 -2 -2 -2 -2\") == \"0.0\"\nassert solution(\"0 0 0 0 0 0\") == \"0.0\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0) == 0\nassert solution(12) == 12\nassert solution(987) == 0\nassert solution(999) == 999\nassert solution(9876) == 987\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(str(156)) == \"165\"\nassert solution(str(330)) == \"0\""
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nassert solution('12345678901') == '987654321'\nassert solution('999') == '987654321'\n\"\"\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0\nprint(\"Tests passed\")\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nassert solution('123') == '135'\nassert solution('1234') == '145'\nassert solution('1315') == '155'\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nassert solution('26000') == '26005'\nassert solution('199') == '199'\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"6\"\nassert solution(\"100\") == \"101\"\nassert solution(\"900\") == \"901\"\nassert solution(\"1234\") == \"1235\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''156''') == '165'\nassert solution('''330''') == '0'"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('153') == '155'\nassert solution('123456789') == '12345678'\nassert solution('1234567') == '1234567'\nassert solution('123') == '123'\nassert solution('1') == '2'\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\n'''\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\nprint(solution(input1))\nprint(solution(input2))\n\"\"\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\n\nassert solution(\n'''2 2\n100000 100000\n0 100000\n''') == '1'\n\nassert solution(\n'''3 3\n10000 1 10\n1 10000\n1000 1000\n''') == '3'\n\nassert solution(\n'''7 5\n2 1 1 1 2 1 1\n3 1 1 1 1 1\n1 1 1 1 1 1\n3 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '4'\n\nassert solution(\n'''10 10\n1000 1 10\n1 1000\n100 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1 1000\n1"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"1 5\") == \"1\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000''') == '4'\nassert solution('''4 4\n180000 185000 199999 100000\n199999 180000 170000 120000''') == '3'\nassert solution('''6 3\n45000 45000 456000 45000 456000\n45000 45000 45000 45000 456000''') == '2'\nassert solution('''5 2\n1000000 1000000 1000000 1000000 1000000\n2000000 2000000 2000000 2000000 2000000''') == '4'\nassert solution('''5 2\n250000 250000 250000 250000 250000\n250000 250000 250000 250000 250000''') == '1'\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5\\n1 2 3 4 5') == '5'\nassert solution('2 3 4 4\\n1 2 3 4') == '3'\nassert solution('1 2 3 4 4\\n1 2 3 4 4') == '4'\nassert solution('1 2 3 4 4\\n1 2 3 4 4') == '3'\nassert solution('1 2 3 4 4\\n1 2 3 4 4') == '4'\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(4)\n\n\"\"\""
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"1 2 2 3\") == \"3\"\nassert solution(\"1 2 1 1\") == \"2\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1'\nassert solution('39\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\") == \"1\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n\") == \"1\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n42\") == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10\\n'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1\\n'\nassert solution('1\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n42') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '6'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126') == '6'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '100'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1'\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '10'\nassert solution('''\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n''') == '1'\nassert solution('''\n1\n42\n42\n42\n42\n42\n42\n42\n42\n42\n''') == '6'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('1\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42') == '6'\nassert solution('42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42') == '1'\nassert solution('42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42') == '1'\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 0\") == \"yes\"\nassert solution(\"3 3\") == \"yes\"\nassert solution(\"13 3\") == \"yes\"\nassert solution(\"1 1\") == \"no\"\nassert solution(\"10 4\") == \"yes\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''9 0''') == 'no'\nassert solution('''10 4''') == 'no'\nassert solution('''15 3''') == 'yes'\nassert solution('''100 40''') == 'yes'\nassert solution('''1000 2''') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'yes'\nassert solution('13 2') == 'yes'\nassert solution('1 1') == 'no'\nassert solution('13 1') == 'no'\nassert solution('13 3') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''13 3''') == 'yes'\nassert solution('''1 0''') == 'yes'\nassert solution('''11 2''') == 'no'\nassert solution('''12 1''') == 'no'\nassert solution('''2 1''') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'yes' or solution(stdin) == 'no'\n\"\"\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'yes'\nassert solution('1 2') == 'yes'\nassert solution('1 1000000') == 'no'\nassert solution('7 9') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('13 3\\n1 0\\n') == 'yes\\n'\nassert solution('13 1\\n1 0\\n') == 'yes\\n'\nassert solution('13 2\\n1 0\\n') == 'no\\n'\nassert solution('13 2\\n1 0\\n') == 'no\\n'\nassert solution('13 3\\n1 0\\n') == 'no\\n'\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'yes'\nassert solution('8 0') == 'no'\nassert solution('8 3') == 'no'\nassert solution('2 0') == 'no'\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nassert solution('A02H10P11H02') == 'GRESKA'\nassert solution('A02H10P11H02') == 'GRESKA'\nassert solution('A02H10P11H02') == 'GRESKA'\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n\n-----Note for this task-----\nYou can assume that there are no special characters, and that there are no spaces in the input.\n-----Challenge-----\nYou don't have to do anything special with the input.\n\nTest your implementation on the tablet.\n\nUse your implementation to answer the following challenge:\n\nFind the number of cards per suit.\n\n-----Showcase-----\nSample Input:\nP01K02H03H04\nSample Output:\n12 12 11 13\n\nSample Input:\nH02H10P11H02\nSample Output:\nGRESKA\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n\"\"\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"12 12 11 13\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12 12 11 13\""
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n'''\n\n'''\nREF:\n1. https://en.wikipedia.org/wiki/Deck_of_poker\n2. https://www.freecodecamp.com/news/dictionary-of-cards-and-their-poker-equivalent/\n3. https://en.wikipedia.org/wiki/Royal_Flush\n4. https://en.wikipedia.org/wiki/Straight_Flush\n5. https://en.wikipedia.org/wiki/Four_of_a_kind\n6. https://en.wikipedia.org/wiki/Full_House\n7. https://en.wikipedia.org/wiki/Flush\n8. https://en.wikipedia.org/wiki/Straight\n9. https://en.wikipedia.org/wiki/Three_of_a_kind\n10. https://en.wikipedia.org/wiki/Two_Pair\n11. https://en.wikipedia.org/wiki/One_Pair\n12. https://en.wikipedia.org/wiki/High_Card\n'''\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n'''\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nassert solution('P01K02H03H04H03H10P11H02H02H10P11H02') == '12 12 11 13'\nassert solution('H02H10P11H02H02H10P11H02H02H10P11H02') == 'GRESKA'\nassert solution('P02K03H04H05K06H07H08P09P10P11P12P13') == '15 15 14 16'\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n\nprint(solution(stdin))\n\n-----\n\"\"\"\n\nimport re"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open('samples/1.txt', 'r').read()) == '1'\nassert solution(open('samples/2.txt', 'r').read()) == '2'\nassert solution(open('samples/3.txt', 'r').read()) == '1'\nassert solution(open('samples/4.txt', 'r').read()) == '2'\nassert solution(open('samples/5.txt', 'r').read()) == '1'\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"input/sample_input_1.txt\").read()) == \"1\"\nassert solution(open(\"input/sample_input_2.txt\").read()) == \"2\"\nassert solution(open(\"input/sample_input_3.txt\").read()) == \"3\"\nassert solution(open(\"input/sample_input_4.txt\").read()) == \"1\"\nassert solution(open(\"input/sample_input_5.txt\").read()) == \"3\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nassert solution('''10 10 10\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n''') == '10'\nassert solution('''100 100 100\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n.........\n........."
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5 3\\n.....\\n.*.*.\\n.....\\n') == '1\\n+-+..\\n|*|*.\\n+-+..'\nassert solution('7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n') == '2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*'\nassert solution('2 3 3\\n........\\n*.*.*.\\n........\\n.*.*.*\\n........\\n') == '1\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..'\nassert solution('1 1 1\\n*\\n*\\n') == '0\\n*'\nassert solution('1 1 1\\n*\\n*\\n*\\n') == '0\\n*'\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\"\nassert solution(\"8 1 2\") == \"0\"\nassert solution(\"7 2 3\") == \"0\"\nassert solution(\"7 4 5\") == \"0\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5 3\\n.....\\n.*.*.\\n.....\\n') == '1'\nassert solution('7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n') == '2'\nassert solution('5 4 6\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n') == '7'\nassert solution('2 5 3\\n..*..\\n.*.*.*\\n*.*.*.*\\n.*.*.*.*\\n*.*.*.*\\n.*.*.*.*\\n') == '0'\nassert solution('7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n') == '2'\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 5 3\n.....\n.*.*.\n.....\n\"\"\") == \"1\"\nassert solution(\"\"\"7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\") == \"2\"\nassert solution(\"\"\"3 5 4\n.....\n*.*.*.\n....*.\n*.*.*.\n\"\"\") == \"0\"\nassert solution(\"\"\"7 6 4\n.....\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\") == \"2\"\nassert solution(\"\"\"3 5 4\n.....\n.*.*.*\n....*.\n*.*.*.\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected1\nassert solution(stdin) == expected2\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 5 3\n.....\n.*.*.\n.....\n'''\n) == '1'\n\nassert solution(\n'''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n'''\n) == '2'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    'AC AD AH AS KD\\n'\n    '2C 4D 4H 2D 2H\\n') == '4'\nassert solution(\n    '2C 4D 4H 2D 2H\\n'\n    'AC AD AH AS KD\\n') == '3'\nassert solution(\n    '2C 4D 4H 2D 2H\\n'\n    'AC AD KH KH QS\\n') == '4'\nassert solution(\n    '2C 4D 4H 2D 2H\\n'\n    'AC AD KH KH 7H\\n') == '6'\nassert solution(\n    '2C 4D 4H 2D 2H\\n'\n    'AC AD KH KH KH\\n') == '5'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''AC AD AH AS KD\n''') == '4'\nassert solution('''2C 4D 4H 2D 2H\n''') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('AS TS 4H 3C AS') == '3'\nassert solution('A2 2C 2D 2H 3C') == '4'\nassert solution('A2 2C 2D 2H 3C 4D') == '4'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('6H 7C 8S 9D TD') == '8'\nassert solution('AS KH JS QS JS') == '7'\nassert solution('AC AH JD KD 9C') == '7'\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\nassert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AC AD AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('AC AD AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AC AD AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3\nassert solution('AC KH AS KC AS') == 5\nassert solution('3C 4D 4H 2D 2H') == 3\nassert solution('AC KH 3C 4D 4H 2D 2H') == 5\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\nassert solution(\"3C 5C 6H 7H 8H 9H TH\") == \"7\"\n"
    }
]