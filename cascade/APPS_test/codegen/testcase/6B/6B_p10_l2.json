[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 3\n4 3\n2 3\n''') == '1 3 7'\nassert solution('''\n3\n1 2\n2 3\n1 3\n''') == '1 3'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\nassert solution('''\n7\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n3 5\n''') == '1 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n3\n1 2\n2 3\n3 4\n''') == '1 8 6'\nassert solution('''\n9\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n''') == '1 8 6'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n''') == '1 8 6'\nassert solution('''\n7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5\\n1 8 6'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6') == '5\\n1 8 6'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\\n5 8') == '5\\n1 8 6'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '5\\n1 8 6'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n6 8') == '5\\n1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.splitlines()[1]\nprint(solution(stdin))\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8''') == '5'\n\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n1 7''') == '1 8 6'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n4\n1 2\n2 3\n3 4\n''') == '1 8 6'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '3'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n4 8\n''') == '2 4 3'\nassert solution('''\n4\n1 2\n2 3\n3 4\n''') == '1 4 2'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5'\n"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n\"\"\"\n\nimport sys\nsys.path.append(r\"C:\\Users\\Nikolai\\Documents\\Data\\MITx\\6.00.2x\\Course\\Advanced 1\")\nfrom graph_theory.basic_graph_theory import undirected_graph"
    },
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n') == '5\\n1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6') == '1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6 7') == '1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6 7 8') == '1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6 7 8 9') == '1 8 6'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1\\n1'\nassert solution('2\\n1') == '2\\n1'\nassert solution('3\\n1') == '2\\n1'\nassert solution('4\\n1') == '4\\n1'\nassert solution('5\\n1') == '5\\n1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom itertools import *"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''5\n20 2 8 1 2 4 1 4''') == '20 8'\nassert solution('''4\n20 2 8 1 2 4 1 5''') == '20 8'\nassert solution('''1\n10''') == '20 8'\nassert solution('''2\n1''') == '1 2'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\nimport sys\nfrom collections import Counter\n\nn = int(sys.stdin.readline().strip())\ndivisors = [int(sys.stdin.readline().strip()) for _ in range(n)]"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == \"20 8\"\n'''\n\nfrom math import sqrt\n\nn = int(input())\nd = map(int, input().split())\n\ns = {x for x in d if d.count(x) > 1}\nt = {x for x in d if d.count(x) == 1}\n\ns = sorted(s)\nt = sorted(t)\n\nfor i in s:\n    if i in t:\n        print(i)\n        break\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1 1'\nassert solution('2\\n1') == '1'\nassert solution('10\\n2\\n1') == '1 1'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.readline().split()]\na = [int(stdin.readline()) for i in range(n)]\ns = 0\nfor i in range(n):\n    s = max(s, sum([a[i][j] for j in range(m//2)]))\ns %= k\nprint(s)\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\n\"\"\""
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\nassert solution('''10 10 5\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n4 5 3 2 1\n3 6 1 1 4\n1 7 2 1 1\n3 8 7 1 2\n8 4 7 1 6\n''') == '24'\nassert solution('''10 10 7\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n4 5 3 2 1\n3 6 1 1 4\n1 7 2 1 1\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n'''\n'''\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\nassert solution('3 4 2\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\nassert solution('2 2 2\\n1 1 1\\n2 2 2') == '0'\nassert solution('3 4 2\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 3') == '6'\nassert solution('3 4 3') == '12'\nassert solution('5 4 3') == '30'\nassert solution('7 1 1 4') == '56'"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\n\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\nassert solution('5 1 6\\n1 2 2 2 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4') == '20'\nassert solution('2 2 1\\n2 2 1\\n2 2 1') == '4'\nassert solution('4 4 1\\n1 2 4 4 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '56'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 2 4 3 2\") == \"4\"\nassert solution(\"2 2 2\") == \"1\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"5\\n1 2 4 3 2\") == \"4\\nLRLRRR\"\n\nassert solution(\n\"7\\n1 3 5 6 5 4 2\") == \"6\\nLRLRRR\"\n\nassert solution(\n\"3\\n2 2 2\") == \"1\\nR\"\n\nassert solution(\n\"4\\n1 2 4 3\") == \"4\\nLLRR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6\\nLRLRRR'\nassert solution('3\\n2 2 2\\n') == '1\\nR'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRR'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6\\nLRLRRR'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"LRLRRR\"\nassert solution(\"3\") == \"R\"\nassert solution(\"2\") == \"L\"\nassert solution(\"4\") == \"LLRR\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 4 3 2\") == \"4\"\nassert solution(\"1 3 5 6 5 4 2\") == \"6\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 4 3 2') == '4'\nassert solution('1 3 5 6 5 4 2') == '6'\nassert solution('2 2 2') == '1'\nassert solution('2 2 2') == '2'\nassert solution('2 2 2') == 'R'\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(''.join(input().split())) == ''.join(input().split())\nassert solution(''.join(input().split())) == ''.join(input().split())\nassert solution(''.join(input().split())) == ''.join(input().split())\nassert solution(''.join(input().split())) == ''.join(input().split())\n\n\n\n-----\n\"\"\""
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a b c\") == \"a b c\"\nassert solution(\"a b c d\") == \"a b c d\"\nassert solution(\"a b c d e\") == \"a b c d e\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4 4\\n') == '3'\nassert solution('2\\n2 5\\n') == '3'\nassert solution('3\\n1 4 7 7\\n') == '3'\nassert solution('4\\n1 3 3 7\\n') == '-1'\nassert solution('5\\n2 2 5 2 5\\n') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '-1'\nassert solution('1\\n2') == '-1'\nassert solution('2\\n2') == '0'\nassert solution('1\\n3') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '-1'\nassert solution('1\\n2\\n3') == '-1'\nassert solution('1\\n1') == '-1'\nassert solution('1\\n1\\n2') == '2'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '3'\nassert solution('2\\n1\\n') == '-1'\nassert solution('2\\n2\\n') == '2'\nassert solution('3\\n3\\n') == '-1'\nassert solution('3\\n4\\n') == '1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5\n2 2 5 2 5\n''') == '3'\nassert solution('''\n6\n1 3 3 7 4 1\n''') == '3'\nassert solution('''\n4\n1 3 3 7\n''') == '-1'\nassert solution('''\n2\n2 8\n''') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n1 4 4 7 4 1\n''') == '3'\n\nassert solution('''5\n2 2 5 2 5\n''') == '3'\n\nassert solution('''4\n1 3 3 7\n''') == '-1'\n\nassert solution('''2\n2 8\n''') == '3'\n\nassert solution('''6\n1 4 4 7 4 1\n''') == '3'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n2') == '-1'\nassert solution('1\\n1') == '0'\nassert solution('3\\n1') == '2'\nassert solution('1\\n5') == '-1'\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n''') == '3'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n''') == '-1'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n''') == '3'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '103'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\") == \"YES\"\nassert solution(\"0 0 499999 1000000\") == \"NO\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'NO'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\nassert solution('0 0 1000000 1000000') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5''') == 'NO'\nassert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5\n2 2 4 4''') == 'YES'\nassert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5\n2 2 4 4''') == 'YES'\nassert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5\n2 1 2 4''') == 'YES'\nassert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5\n2 1 2 4''') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\nimport sys\nfrom typing import Tuple\n\nsys.setrecursionlimit(5000)\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\nassert solution('0 0 1000000 1000000') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"NO\"\nassert solution(\"3 1 5 5\") == \"NO\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\n\"\"\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\n\"\"\"\n\nGiven 2 arrays of integers, determine if they are the same or not.\n\nExample:\n\narr1 = [1, 2, 3, 4]\narr2 = [4, 3, 2, 1]\n\nWe return False\n\n\"\"\""
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'YES'\nassert solution('1 1 1 1') == 'YES'\nassert solution('0 0 1 1') == 'NO'\nassert solution('3 3 1 3') == 'YES'\nassert solution('2 2 4 4') == 'NO'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n''') == '1'\n\nassert solution('''0\n''') == '0'\n\nassert solution('''10\n''') == '19'\n\nassert solution('''1098\n''') == '20'\n\nassert solution('''1099\n''') == '20'"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('10') == '1'\nassert solution('100') == '1'\nassert solution('1098') == '20'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1000000001') == '20'\nassert solution('100000000') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1234') == '5'\nassert solution('1') == '1'\nassert solution('1098') == '20'\nassert solution('10099') == '1010'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1009') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('999') == '199'\nassert solution('9') == '18'\nassert solution('99') == '17'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\nassert solution(\"999999999999999999999999999\") == \"1000000000\"\nassert solution(\"99999\") == \"998\"\nassert solution(\"9876543210\") == \"98765432\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1098') == '20'\nassert solution('10099') == '101'\nassert solution('10') == '19'\nassert solution('101') == '0'\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('999999999') == '10'\nassert solution('99999999') == '9'\nassert solution('1000000009') == '8'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '5'\nassert solution('''7''') == '7'\nassert solution('''7''') == '7'\nassert solution('''7''') == '7'\nassert solution('''7''') == '7'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1'\nassert solution('1\\n0\\n0\\n0\\n0\\n0') == '1\\n0\\n0\\n0\\n0'\nassert solution('2\\n1 0\\n0\\n0') == '2\\n1\\n0\\n0'\nassert solution('1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1'\nassert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\n\nassert solution(\n'''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\n\nassert solution(\n'''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n\nassert solution(\n'''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\n\nassert solution(\n'''4\n4 1 0 0 0\n''') == '4 1 4 3 2'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3'\n\n\n\"\"\"\n\nimport sys\nsys.path.append(\"../../\")\n\nfrom math import factorial\nfrom utils.tools import timing\nfrom math import sqrt\nfrom math import log"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 0 1 0\") == \"2 1 4 5 3\"\nassert solution(\"3 1 0 1 0\") == \"4 1 6 5 2\"\nassert solution(\"7 1 0 1 0\") == \"7 1 6 5 2\"\nassert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"1 2 0 1 0\") == \"2 1 4 5 3\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5\n5 0 0 2 4\n'''\n    ) == '5 3 1 2 4'\n\nassert solution(\n'''7\n7 0 0 1 4 0 6\n'''\n    ) == '7 3 2 1 4 5 6'\n\nassert solution(\n'''7\n7 4 0 3 0 5 1\n'''\n    ) == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n2 1 1 2 1''') == \"YES\"\nassert solution('''5 2\n3 2 1 2 3''') == \"NO\"\nassert solution('''5 2\n1 2 1 2 1''') == \"YES\"\nassert solution('''5 2\n2 1 1 2 1''') == \"NO\"\nassert solution('''5 2\n3 2 1 2 1''') == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1 2 1') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('2 1 1 2 1') == 'YES'\nassert solution('5 2') == 'NO'\nassert solution('2 1 1 2 1') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == 'YES\\n2 1 1 2 1'\nassert solution('2 2') == 'YES\\n1 1 2 2'\nassert solution('2 2') == 'NO'\nassert solution('3 3') == 'YES\\n1 1 1 1'\nassert solution('3 3') == 'YES\\n1 1 2 2'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2 3') == 'YES'\nassert solution('2 1 2 3') == 'YES'\nassert solution('3 2 1 2 3') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('5 2') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 2 2 3\\n') == 'YES\\n2 1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'NO'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n1 2 1 2 1\\n') == 'YES\\n1 1 2 2 2'\nassert solution('5 2\\n1 2 1 2 1\\n') == 'YES\\n2 1 1 2 2'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2''') == 'YES'\nassert solution('''5 2''') == 'YES'\nassert solution('''5 2''') == 'NO'\nassert solution('''6 2''') == 'NO'\nassert solution('''6 2''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 2') == 'YES\\n1 1 2 2'\nassert solution('2 1\\n1 2') == 'NO'\nassert solution('3 2\\n1 2 1') == 'NO'\nassert solution('2 2\\n1 2 1') == 'YES\\n2 1 1 2 1'\nassert solution('3 2\\n1 2 1') == 'YES\\n1 1 2 2'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2''') == 'YES'\nassert solution('''5 2''') == 'NO'\nassert solution('''5 2''') == 'YES'\nassert solution('''5 2''') == 'YES'\nassert solution('''5 2''') == 'YES'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11 1 1') == '1'\nassert solution('11 1 2') == '3'\nassert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 4 2') == '5'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 1000000000 2') == '9'\nassert solution('11 100000000 2') == '9'\nassert solution('11 1000000000 2') == '9'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 1 1\") == \"2\"\nassert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 1 1\") == \"3\"\nassert solution(\"11 1 1\") == \"3\"\nassert solution(\"11 1 1\") == \"3\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"11 5 2\\n11010100101\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\") == \"3\"\nassert solution(\"11 16 1\\n11010100101\") == \"0\"\nassert solution(\"11 16 1\\n11010111010\") == \"3\"\nassert solution(\"11 11 1\\n11010111010\") == \"6\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\nprint('success')\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"11 5 2\\n11010100101\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\") == \"3\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 5 10') == '3'\nassert solution('11 11 2') == '3'\nassert solution('11 11 1') == '1'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('11 16 2') == '1'\nassert solution('11 100 1') == '3'\nassert solution('11 1000 1') == '4'\n"
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789') == '3'\nassert solution('123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789') == '6'\nassert solution
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11 5 2\\n11010100101') == '1'\nassert solution('11 5 1\\n11010100101') == '3'\nassert solution('10 3 2\\n1011110111') == '2'\nassert solution('11 9 2\\n1011110111') == '2'\nassert solution('10 9 3\\n1011110111') == '3'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == 'NO'\nassert solution('''1 2 1''') == 'NO'\nassert solution('''5''') == 'NO'\nassert solution('''1 2 2 3 2''') == 'YES'\nassert solution('''3''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'YES'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'YES'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'NO'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'NO'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n5\n1 2 2 3 2 1\n4\n1 2 2 1\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nNO\\nNO\\nYES\\nNO'\nassert solution('1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nNO\\nNO\\nYES\\nNO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'\nassert solution('''1\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n1 1 2 2 1') == 'YES'\nassert solution('5\\n3\\n1 2 1') == 'NO'\nassert solution('5\\n3\\n1 2 2 1') == 'YES'\nassert solution('5\\n3\\n1 2 2 3 2') == 'YES'\nassert solution('3\\n1 1 2') == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'\nassert solution('''4\n2\n1 2 2 1\n3\n1 1 2\n4\n1 2 2 1\n''') == 'YES\\nYES\\nYES\\nNO'\nassert solution('''1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'\nassert solution('''10\n3\n1 2 2 1\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1553'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''10\n999 9998 99988 99997 99996 99995 99994 99993 99992 99991 99990 99989 99978\n99787 99976 99975 99974 99973 99972 99971 99969 99968 99967 99966 99965\n99964 99963 99962 99961 99960 99959 99958 99957 99956 99955 99954 99953\n99952 99951 99950 99949 99948 99947 99946 99945 99944 99943 99942 99941\n99940 99939 99938 99937 99936 99935 99934 99933 99932 99931 99930 99929\n99928 99927 99926 99925 99924 99923 99922 99921 99920 99919 99918 99917\n99916 99915 99914 99913 99912 99911 99910 99909 99908 99907 99906 99905\n99904 99903 99902 99901 99900\n''') == '999999999'\nassert solution('''2\n88\n
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1''') == '33'\nassert solution('''2\n33\n9 7 6 5 4 3 2 1''') == '33'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1''') == '33'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[-1]\nprint(solution(stdin))\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1337\\n1 2 5 4 6 6 3 1 9') == '1553'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1') == '33'\n\n\n\"\"\"\n\n\"\"\"\n\nThe maximum number that can be obtained from applying the operations described in the statement no more than once\nis no more than $n*9$ digits. For example, if $n = 4$, the number is limited to the range from $9*4$ to $9*4 + 9$ = $45 - 9$ = $44$.\n\nBy choosing the first digit in the subsegment, you get $1*9 + 1$ = $10$. By choosing the second digit in the subsegment, you get $2*9 + 1$ = $11$.\n\nBy choosing the third digit in the subsegment, you get $5*9 + 1$ = $15$. By choosing the fourth digit in the subsegment, you get $4*9 + 1$ = $24$.\n\nBy choosing the fifth digit in the subsegment, you get $6*9 + 1$ = $30$. By choosing the sixth digit in the subsegment, you get $3*9 + 1$ = $39$.\n\nBy choosing the seventh digit in the subsegment, you get $1*9 + 0$ = $1$. The maximum number that can be obtained from applying the operations described in the statement no more than once is no more than $n*9$ digits.\n\nThus, for the example case $n = 4$, the maximum number that can be obtained is $44$.\n\nYou can see the reason for the result of the solution on the test cases.\n\n\"\"\""
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"99999\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1553\"\nassert solution(\"9 8 7 6 5 4 3 2 1\") == \"99999\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''2\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n11111\n5 2 1 1 1 1 1 1 1\n''') == '33'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1337') == '1553'\nassert solution('11111') == '99999'\nassert solution('9 8 7 6 5 4 3 2 1') == '99999'"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4\\n1 2 5 4 6 6 3 1 9\\n') == '1553'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1\\n') == '99999'\nassert solution('2\\n33\\n1 1 1 1 1 1 1 1 1\\n') == '33'\nassert solution('2\\n11111\\n9 8 7 6 5 4 3 2 1\\n') == '11111'\nassert solution('2\\n3\\n1 1 1 1 1 1 1 1 1\\n') == '1'\n"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[2]\nprint(solution(stdin))\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 1\\n') == '1 1 3'\nassert solution('1\\n1 1 1\\n') == '102'\nassert solution('1\\n1 1 1\\n') == '114 228 456'\nassert solution('1\\n1 1 1\\n') == '4'\nassert solution('1\\n1 1 1\\n') == '4 8 16'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n') == '0\\n0\\n0'\nassert solution('2\\n1\\n1\\n') == '1\\n0\\n1'\nassert solution('1\\n1\\n1\\n') == '0\\n1\\n2'\nassert solution('2\\n2\\n2\\n') == '0\\n0\\n1'\nassert solution('2\\n1\\n1\\n') == '1\\n0\\n1'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '''1\n1 1 3\n102\n114 228 456\n4\n4 8 16\n6\n18 18 18\n1\n100 100 100\n7\n1 22 22\n2\n1 19 38\n8\n6 24 48'''"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3') == '2\\n1 1 3'\nassert solution('2\\n1 2 3\\n1 2 3') == '0\\n1 1 3'\nassert solution('1\\n1 1\\n1 1') == '0\\n1 1 1'\nassert solution('10\\n1 2 3\\n1 2 3') == '0\\n1 1 3'\nassert solution('1\\n1 1\\n1 1') == '0\\n1 1 1'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n'''\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\nassert solution('''2\n1 100000\n1 90000\n''') == '0'\nassert solution('''2\n1 100000\n1 90000\n1 100000\n''') == '0'\nassert solution('''6\n1 6 1 2 6 3\n''') == '3'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == input()\n\n\"\"\"\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n1 3 3 7') == 2\nassert solution('1\\n1\\n1 1') == 0\n\"\"\""
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\nassert solution('''10\n1 100000\n''') == '0'\nassert solution('''8\n1 100000\n''') == '0'\nassert solution('''6\n1 100000\n''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 3 7\n''') == \"2\"\n\nassert solution('''2\n1 100000\n''') == \"0\"\n\n\n'''\nfrom math import inf\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('1\\n4') == '3'\nassert solution('1\\n5') == '4'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n100000\\n') == '0'\nassert solution('1\\n100000\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n3\\n7') == '2'\nassert solution('2\\n1000000') == '0'\nassert solution('3\\n3\\n3') == '0'\nassert solution('4\\n1 3 3 7') == '2'\nassert solution('2\\n1 100000') == '0'\n\"\"\"\nfrom math import inf"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''13 4\n
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''7 3\n5 6 1\n1 4 1\n3 5 1''') == '3 3 2 2 2 3 3 1'"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1') == '1 2 3 0 3'\nassert solution('3 2\\n1 3 1\\n1 2 1') == '-1'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1') == '2 2 2 1 1 0 4 3 4 4'"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('10 4') == '1 2 1 0 1 1 1 1 1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 1') == '1 0 0 0'\nassert solution('5 2') == '-1'\nassert solution('3 2') == '1 0 0 0'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('7 4') == '1 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 2\n1 3 1\n1 5 1\n\n\"\"\") == \"\"\"\n1 2 3 0 3\n\n\"\"\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1\\n') == '1 2 0 3 0'\nassert solution('1\\n1\\n1\\n') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\nassert solution('100 100') == '0'\nassert solution('100 1000') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''120 51840''') == '7'\nassert solution('''42 42''') == '0'\nassert solution('''48 72''') == '-1'\nassert solution('''965 353''') == '12'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'\nassert solution('12345 67890') == '-1'\nassert solution('12345 51337') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n\u5168\u6392\u5217\u95ee\u9898\n\"\"\""
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('42 42') == '0'\nassert solution('120 51840') == '7'\nassert solution('48 72') == '-1'\nassert solution('4 1000000000') == '10'\nassert solution('1 1000000000') == '-1'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''aba\n''') == 'ababababa'\nassert solution('''cat\n''') == 'catcat'\nassert solution('''aaaaaaaa\n''') == 'aaaaaaaaaa'\nassert solution('''aba\n''') == 'ababababa'\nassert solution('''bab\n''') == 'babab'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\naba\n''') == 'ababababa'\nassert solution('''2 1\ngeeks\n''') == 'geeks'\nassert solution('''2 2\ngeek\n''') == 'geek'\nassert solution('''2 1\nab\n''') == 'ab'\nassert solution('''2 3\nab\n''') == 'abc'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ab') == 'ab'\nassert solution('aba') == 'ab'\nassert solution('abab') == 'ab'\nassert solution('ababab') == 'ab'\nassert solution('abcabc') == 'abcabc'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\naba''') == 'ababababa'\nassert solution('''3 2\ncat''') == 'catcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('baa') == 'a'\nassert solution('bac') == 'a'\nassert solution('baa') == 'a'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\", 1) == \"a\"\nassert solution(\"\", 3) == \"\"\nassert solution(\"ab\", 3) == \"abababab\"\nassert solution(\"a\", 3) == \"a\"\nassert solution(\"a\", 4) == \"a\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aba', 'cat') == 'ababababa'\nassert solution('cat', 'cat') == 'catcat'\nassert solution('a', 'a') == 'a'\nassert solution('a', 'aa') == 'aaaa'\nassert solution('aa', 'aa') == 'aaaa'\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''aba\n''') == 'ababababa'\nassert solution('''\n''') == 'catcat'\nassert solution('''\n''') == ''"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\nassert solution('aca') == 'acacac'\nassert solution('cba') == 'cbcbcb'\nassert solution('cac') == 'caca'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 5 1 2 2\n\n''') == '3\\n4 1 5\\n'\nassert solution('''\n4\n8 3 5 2\n\n''') == '2\\n1 4\\n'\nassert solution('''\n5\n2 1 2 4 3\n\n''') == '0\\n'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 1 2 2\\n') == '3\\n4 1 5'\nassert solution('2\\n2 1 2 2\\n2 2 1 2 2\\n') == '3\\n'\nassert solution('2\\n2 1 2 2\\n2 1 1 1 1 1\\n') == '2\\n'\nassert solution('2\\n2 1 2 2\\n2 1 1 1 1 1\\n1 1 1 1 1 1\\n') == '2\\n'\nassert solution('2\\n2 1 2 2\\n2 1 1 1 1 1\\n1 1 1 1 1 1\\n2 1 1 1 1 1\\n2 1 1 1 1 1\\n') == '2\\n'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n2 5 1 2 2\\n') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2\\n') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\\n\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\"\nassert solution(\"5\\n2 1 2 2 1\\n\") == \"0\"\nassert solution(\"5\\n2 1 2 2 1\\n\") == \"0\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 5 1 2 2\\n') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2\\n') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\nassert solution('5\\n2 1 2 4 3\\n') == '0'\n\n\n\"\"\""
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 5 1 2 2''') == '3'\nassert solution('''4\n8 3 5 2''') == '2'\nassert solution('''5\n2 1 2 4 3''') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 1 2 2\") == \"0\\n\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\\n\"\nassert solution(\"5\\n2 1 2 4 3\") == \"2\\n1 4\\n\"\nassert solution(\"4\\n2 1 2 4\") == \"0\\n\"\nassert solution(\"3\\n1 2 3\") == \"0\\n\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 5\nasdf\n''') == '4'\nassert solution('''5 6\naaaaa\n''') == '15'\nassert solution('''10 100\najihiushda\n''') == '233'\nassert solution('''2 3\nab\n''') == '-1'"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\"\nassert solution(\"5 6\\naaaa\\n\") == \"-1\"\nassert solution(\"10 100\\ajihiushda\\n\") == \"233\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\"\nassert solution(\"7 8\\naaaaa\\n\") == \"-1\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('asdf') == '4'\nassert solution('asd') == '1'\nassert solution('adf') == '1'\nassert solution('asf') == '1'\nassert solution('sdf') == '0'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aa') == '-1'\nassert solution('aaad') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == str(expected)\n\n\"\"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf', '5', '5') == '4'\nassert solution('asdf', '5', '6') == '15'\nassert solution('aaaaa', '5', '6') == '-1'\nassert solution('aaaaa', '7', '6') == '-1'\nassert solution('aaaaa', '5', '5') == '4'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('123456789') == '123456789'\n\n\"\"\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\n\"\"\"\n\n\"\"\"\n\nIntroduction to Algorithms\n\nRecursion\n\nThe main feature of the recursion is the ability to terminate the recursion.\nThe function might call itself, but the task can be completed without any problems.\n\nIt's not bad to use this feature when it's not needed. In fact, it's a common thing to have.\n\nExample 1:\n\nGiven $n = 3$, and $k = 3$,\n\nReturn $1$, since the only solution is to delete the last three characters\n\nreturn $1$\n\nExample 2:\n\nGiven $n = 4$, and $k = 3$,\n\nreturn $1$, since the only solution is to delete the last four characters\n\nreturn $1$\n\nExample 3:\n\nGiven $n = 6$, and $k = 3$,\n\nreturn $2$, since we can delete the last three characters and keep the last two, and this will produce the best solution\n\nreturn $2$\n\nExample 4:\n\nGiven $n = 5$, and $k = 4$,\n\nreturn $2$, since we can delete the last four characters and keep the last two, and this will produce the best solution\n\nreturn $2$\n\nExample 5:\n\nGiven $n = 10$, and $k = 7$,\n\nreturn $8$, since we can delete the last seven characters and keep the last three, and this will produce the best solution\n\nreturn $8$\n\nExample 6:\n\nGiven $n = 10$, and $k = 5$,\n\nreturn $0$, since there are no solutions\n\nreturn $0$\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == \"YES\"\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4''') == \"NO\"\nassert solution('''5 5 2\n1 4\n1 3\n1 2\n2 4\n3 4\n3 3''') == \"YES\"\nassert solution('''5 5 2\n1 4\n1 3\n1 2\n2 4\n3 4\n3 3''') == \"NO\"\nassert solution('''10 10 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n9 1''') == \"YES\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4'''\n) == 'YES'\n\nassert solution(\n'''4 5 3\n1 2\n1 4\n2 3\n3 4'''\n) == 'NO'"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 4\\n2 3\\n'\nassert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 5 1''') == 'YES'\nassert solution('''4 5 3''') == 'NO'\nassert solution('''5 2 1''') == 'NO'\nassert solution('''4 4 3''') == 'NO'\nassert solution('''5 2 2''') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4') == 'YES\\n2 1\\n2 3\\n3 4\\n4 1'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n4 1') == 'YES\\n1 2\\n1 3\\n1 4\\n4 1'\nassert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 1\\n3 2') == 'YES\\n2 1\\n2 3\\n3 4\\n4 1'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n4 1\\n3 2') == 'YES\\n1 2\\n1 4\\n2 3\\n3 4\\n4 1'\nassert solution('4 5 3\\n1 2\\n1 4\\n2 3\\n3 4\\n4 1\\n3 2\\n4 3') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('3 4 3\\n1 2\\n1 4\\n2 3\\n3 4') == 'NO'\nassert solution('5 6 2\\n1 2\\n1 3\\n1 4\\n1 5\\n4 5\\n3 4\\n2 4\\n4 3\\n3 5\\n5 4') == 'YES\\n1 2\\n1 3\\n1 4\\n1 5\\n4 5\\n3 4'\nassert solution('5 6 2\\n1 2\\n1 3\\n1 4\\n1 5\\n4 5\\n3 4\\n2 4\\n4 3\\n3 5\\n5 4') == 'YES\\n1 2\\n1 3\\n1 4\\n1 5\\n4 5\\n3 4'\n\n\n\n\n-----Best Practice-----\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 4\n2 3\n3 4''') == 'NO'\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4''') == 'NO'\nassert solution('''7 8 3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n3 4\n4 5\n4 6\n5 6\n6 7\n7 8''') == 'YES'\nassert solution('''7 8 3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n5 8\n6 7\n6 8\n6 9\n7 8\n7 9\n7 10\n8 9\n8 10\n8 11\n9 10\n9 11\n9 12\n10 11\n10 12\n10 13\n11 12\n11 13\n11 14\n12 13\n12 14\n12 15\n13 14\n13 15\n13 16\n14 15\n14 16\n14 17\n15 16\n15 17\n15 18\n16 17\n16 18\n16 19\n17 18\n17 19\n17 20\n18 19\n18 20\n18 21\n19 20\n19 21\n19 22\n20 21\n20 22\n20 23\n21 22\n21 23\n21 24\n22 23\n22 24\n22 25\n23 24\n23 25\n23 26\n24 25\n24 26\n24 27\n25 26\n25 27\n25 28\n26 27\n26 28\n26 29\n27 28\n27 29\n27 30\n28 29\n28 30\n28 31\n29 30\n29 31\n29 32\n30 31\n30 32\n30 33\n31 32\n31 33\n31 34\n32 33\n32 34\n32 35\n33 34\n33 35\n33 36\n34 35\n34 36\n34 37\n35 36\n35 37\n35 38\n36 37\n36 38\n36 39\n37 38\n37 39\n37 40\n38 39\n38 40\n38 41\n39 40\n39 41\n39 42\n40 41\n40 42\n40 43\n41 42\n41 43\n41 44\n42 43\n42 44\n42 45\n43 44\n43 45\n43 46\n44 45\n44 46\n44 47\n45 46\n45 47\n45 48\n46 47\n46 48\n46 49\n47 48\n47 49\n47 50\n48 49\n48 50\n48 51\n49 50\n49 51\n49 52\n50 51\n50 52\n50 53\n51 52\n51 53\n51 54\n52 53\n52 54\n52 55\n53 54\n53 55\n53 56\n54 55\n54 56\n54 57\n55 56\n55 57\n55 58\n56 57\n56 58\n56 59\n57 58\n57 59\n57 60\n58 59\n58 60\n58 61\n59 60\n59 61\n59 62\n60 61\n60 62\n60 63\n61 62\n61 63\n61 64\n62 63\n62 64\n62 65\n63 64\n63 65\n63 66\n64 65\n64 66\n64 67\n65 66\n65 67\n65 68\n66 67\n66 68\n66 69\n67 68\n67 69\n67 70\n68 69\n68 70\n68 71\n69 70\n69 71\n69 72\n70 71\n70 72\n70 73\n71 72\n71 73\n71 74\n72 73\n72 74\n72 75\n73 74\n73 75\n73 76\n74 75\n74 76\n74 77\n75 76\n75 77\n75 78\n76 77\n76 78\n76 79\n77 78\n77 79\n77 80\n78 79\n78 80\n78 81\n79 80\n79 81\n79 82\n80 81\n80 82\n80 83\n81 82\n81 83\n81 84\n82 83\n82 84\n82 85\n83 84\n83 85\n83 86\n84 85\n84 86\n84 87\n85 86\n85 87\n85 88\n86 87\n86 88\n86 89\n87 88\n87 89\n87 90\n88 89\n88 90\n88 91\n89 90\n89 91\n89 92\n90 91\n90 92\n90 93\n91 92\n91 93\n91 94\n92 93\n92 94\n92 95\n93 94\n93 95\n93 96\n94 95\n94 96\n94 97\n95 96\n95 97\n95 98\n96 97\n96 98\n96 99\n97 98\n97 99\n97 100\n98 99\n98 100\n98 101\n99 100\n99 101\n99 102\n100 101\n100 102\n100 103\n101 102\n101 103\n101 104\n102 103\n102 104\n102 105\n103 104\n103 105\n103 106\n104 105\n104 106\n104 107\n105 106\n105 107\n105 108\n106 107\n106 108\n106 109\n107 108\n107 109\n107 110\n108 109\n108 110\n108 111\n109 110\n109 111\n109 112\n110 111\n110 112\n110 113\n111 112\n111 113\n111 114\n112 113\n112 114\n112 115\n113 114\n113 115\n113 116\n114 115\n114 116\n114 117\n115 116\n115 117\n115 118\n116 117\n116 118\n116 119\n117 118\n117 119\n117 120\n118 119\n118 120\n118 121\n119 120\n119 121\n119 122\n120 121\n120 122\n120 123\n121 122\n121 123\n121 124\n122 123\n122 124\n122 125\n123 124\n123 125\n123 126\n124 125\n124 126\n124 127\n125 126\n125 127\n125 128\n126 127\n126 128\n126 129\n127 128\n127 129\n127 130\n128 129\n128 130\n128 131\n129 130\n129 131\n129 132\n130 131\n130 132\n130 133\n131 132\n131 133\n131 134\n132 133\n132 134\n132 135\n133 134\n133 135\n133 136\n134 135\n134 136\n134 137\n135 136\n135 137"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nfrom queue import Queue\nfrom collections import defaultdict\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"03:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\""
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n\nprint(expected)\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'\nassert solution('10:00\\n11:00\\n00:00\\n23:00') == '10:30\\n00:00'\nassert solution('11:10\\n11:12\\n00:00\\n00:00\\n00:00') == '11:11\\n00:00\\n00:00'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'\nassert solution('10:00\\n11:00\\n01:02\\n03:02') == '10:30\\n02:02'\nassert solution('11:10\\n11:12\\n01:02\\n03:02') == '11:11\\n02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:00\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\nassert solution(\"03:02\") == \"02:02\"\n\nprint('All test cases passed!')"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:00') == '11:30'\n"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:00'\nassert solution('11:10') == '11:11'\nassert solution('11:12') == '11:11'\nassert solution('01:02') == '02:02'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n\"\"\""
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\nassert solution('8') == 7\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"27\") == \"5\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 1\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 2\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution(' ') == None\nassert solution('a') == None\nassert solution('b') == None\nassert solution('1') == None\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nassert solution(2) == 1\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2''') == 1\nassert solution('''4''') == 2\nassert solution('''27''') == 5\nassert solution('''42''') == 6\nassert solution('''5''') == 0\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('2') == 1\nassert solution('4') == 2\nassert solution('27') == 5\nassert solution('42') == 6\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\nassert solution('''2\n3 10\n1 5\n''') == '7'\nassert solution('''3\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == \"1\"\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == \"2\"\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == \"0\"\n\nassert solution('''2\n3 10\n1 5\n''') == \"7\"\n\"\"\""
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 3\\n2 6') == '1'\nassert solution('4\\n1 3\\n0 4\\n3 3\\n') == '2'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '0'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '7'\nassert solution('2\\n3 10\\n1 5\\n') == '0'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3\\n3\\n3\\n0\\n2\\n2\\n2\\n0\\n0\\n0\\n2\\n2\\n2\\n2\\n2\\n2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n\nassert solution('''4\n4 7\n2 8\n1 3\n0 4\n3 6\n1 4\n''') == '2'"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3 4\\n5 6') == '1'\nassert solution('0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4') == '2'\nassert solution('2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4') == '7'\nassert solution('4 5\\n1 2\\n9 20\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4') == '0'\nassert solution('2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n3 3\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4') == '7'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0') == '1'\nassert solution('1\\n3') == '0'\nassert solution('1\\n2\\n3\\n3\\n3') == '2'\nassert solution('1\\n3\\n3\\n3') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '0'\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\" or solution(stdin) == \"3\"\n\"\"\"\n\nfrom sys import stdin, stdout\nn = int(stdin.readline().strip())\nsegments = []\nfor _ in range(n):\n    l, r = map(int, stdin.readline().split())\n    segments.append((l, r))\nsegments.sort(key = lambda s: s[1])\n\nsegment = segments[0]\nsegments = segments[1:]\n\ni = 0\nj = 1\nwhile i < len(segments) and j < len(segments):\n    if segments[i][1] > segments[j][0]:\n        if segments[i][1] > segments[j][1]:\n            segments[i], segments[j] = segments[j], segments[i]\n        else:\n            segments[j], segments[i] = segments[i], segments[j]\n    else:\n        i += 1\n\nresult = []\n\nfor segment in segments:\n    if segment[0] < segment[1]:\n        result.append(segment[1] - segment[0])\n\nstdout.write(str(max(result)))"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"1\\n10\") == \"NO\"\nassert solution(\"4\\n2 1 1 2 5\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'\nassert solution('3\\n4 5 3') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\nassert solution('1\\n10') == 'NO'\nassert solution('3\\n10 2 3 4') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''3''') == 'NO'\nassert solution('''10 10''') == 'YES'\nassert solution('''5''') == 'NO'\nassert solution('''1 1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES\\n'\nassert solution('3\\n4 5 3') == 'NO\\n'\nassert solution('2\\n10 10') == 'YES\\n'\nassert solution('2\\n10 10') == 'YES\\n'\nassert solution('2\\n10 10\\n10 10') == 'NO\\n'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nassert solution('2\\n1\\n1') == 'NO'\nassert solution('3\\n1\\n1\\n1') == 'YES'\nassert solution('5\\n2\\n1\\n1\\n2') == 'NO'\nassert solution('10\\n9\\n9\\n9\\n9') == 'NO'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n0') == 'YES\\n'\nassert solution('2\\n1') == 'NO\\n'\nassert solution('2\\n1 2') == 'NO\\n'\nassert solution('1\\n10') == 'NO\\n'\nassert solution('2\\n1 2 3') == 'NO\\n'\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 'NO'\nassert solution('2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'NO'\nassert solution('''2\n10 10''') == 'YES'\nassert solution('''10\n1000000000000000\n''') == 'YES'\nassert solution('''10\n1000000000000000000\n''') == 'YES'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\ns = sys.stdin.readline().strip()\n\ns = set()\n\ncost = 0\nfor i in range(n):\n    if len(s) < k:\n        if s:\n            cost += len(s) - 1\n        s.add(s[0])\n        s.remove(s[0])\n    else:\n        break"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abaca') == '4'\nassert solution('aabaca') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == '4'\nassert solution('aaaaa') == '4'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abaca\") == \"2\"\nassert solution(\"cb\") == \"-1\"\nassert solution(\"abcbab\") == \"11\"\nassert solution(\"abccbba\") == \"9\"\nassert solution(\"abcddcba\") == \"7\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4 5\nasdf\n'''\n    ) == '4'\n\nassert solution(\n'''\n5 6\naaaaa\n'''\n    ) == '15'\n\nassert solution(\n'''\n10 100\najihiushda\n'''\n    ) == '-1'\n\nassert solution(\n'''\n4 5\nabacababacab\n'''\n    ) == '11'\n\nassert solution(\n'''\n4 6\nabacababacab\n'''\n    ) == '-1'"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n\"\"\""
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('asdf') == '4'\nassert solution('ajihiushda') == '15'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 10\\naabaa') == '9'\nassert solution('1 1000\\n2') == '0'\nassert solution('1 1000\\n2') == '0'\nassert solution('1 1000\\n2') == '0'\nassert solution('1 1000\\n2') == '0'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('asdf') == '4'\nassert solution('asdf') == '-1'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('abcdefghi') == '-1'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"3 4 2\") == \"5\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4'\nassert solution(\"2 1 1\") == '4'\nassert solution(\"3 2 2\") == '7'\nassert solution(\"1 100 1\") == '3'\nassert solution(\"30 20 10\") == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('2 1 1') == '4'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom itertools import combinations\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\n'''"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"6 3\\n5 7\\n5 4\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\") == \"NO\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\") == \"YES\"\nassert solution(\"5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\") == \"YES\"\n\n\n-----Alternate solutions-----\n\n1. Use a stack to store the tiles of each type.\n\n2. Use a dictionary to store the tiles of each type.\n\n3. Use a two-dimensional array to store the tiles of each type.\n\n4. Use a string to store the tiles of each type.\n\n5. Use a list to store the tiles of each type.\n\n6. Use a dictionary to store the tiles of each type and their coordinates.\n\n7. Use a queue to store the tiles of each type.\n\n8. Use a linked list to store the tiles of each type.\n\n9. Use a heap to store the tiles of each type.\n\n10. Use a priority queue to store the tiles of each type.\n\n11. Use a deque to store the tiles of each type.\n\n\n\n\"\"\"\n\nimport sys\nfrom typing import Dict, List, Tuple\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        \"\"\"\n        Input:\n        7 6\n        1 2\n        5 6\n        5 7\n        7 4\n        8 9\n        9 8\n        2 5\n        1 1\n        1 1\n        2 2\n        2 2\n        1 100\n        10 10\n        10 10\n\n        Output:\n        YES\n        NO\n        YES\n        NO\n        YES\n        YES\n        \"\"\"\n        pass\n\n\nsys.setrecursionlimit(99999)\nsolution = Solution()\ntests = int(input())\n\nfor _ in range(tests):\n    n, m = [int(x) for x in input().split()]\n    tiles = [[int(x) for x in input().split()] for _ in range(n)]\n    matrix = [[0] * m for _ in range(m)]\n\n    ans = \"NO\"\n    for i in range(n):\n        for j in range(m):\n            matrix[j][n - 1 - i] = tiles[i][j]\n    matrix[0][0] = matrix[n - 1][0] = matrix[0][m - 1] = matrix[m - 1][0] = 1\n    for row in matrix:\n        for num in row:\n            if num > 0:\n                ans = \"YES\"\n                break\n    print(ans)\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4') == 'YES'\nassert solution('1 2\\n5 6\\n5 7\\n7 4') == 'NO'\nassert solution('1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1') == 'NO'\n\n\n\n\n-----My Solution-----\n\"\"\"\n\nnum_cases = int(input())\n\nfor case in range(num_cases):\n    n, m = map(int, input().split())\n    tiles = [list(map(int, input().split())) for _ in range(2 * n)]\n    \n    # all tiles must have equal side lengths\n    if any(map(lambda x: x[0]!= x[1], zip(*tiles))):\n        print('NO')\n    else:\n        # construct square with largest side\n        max_side = max(map(lambda x: max(x), tiles))\n        \n        # check for symmetry\n        for i in range(max_side - 1):\n            row = tiles[i:2 * n:2]\n            col = tiles[i + 1:2 * n:2]\n            if row!= col:\n                print('NO')\n                break\n        else:\n            print('YES')\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(''.join(input().split())) == \"NO\"\nassert solution(''.join(input().split())) == \"YES\"\nassert solution(''.join(input().split())) == \"YES\"\nassert solution(''.join(input().split())) == \"NO\"\nassert solution(''.join(input().split())) == \"NO\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == 'YES'\n\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"5 6\") == \"NO\"\nassert solution(\"5 7\") == \"NO\"\nassert solution(\"7 4\") == \"NO\"\nassert solution(\"8 9\") == \"NO\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"input_test_2.txt\") == \"YES\"\nassert solution(\"input_test_1.txt\") == \"YES\"\nassert solution(\"input_test_3.txt\") == \"NO\"\nassert solution(\"input_test_4.txt\") == \"YES\"\nassert solution(\"input_test_5.txt\") == \"YES\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''7''') == '2'\nassert solution('''8''') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n4\\n5\") == \"0\"\nassert solution(\"2\\n3\\n4\\n5\") == \"1\"\nassert solution(\"2\\n4\\n3\\n5\") == \"1\"\nassert solution(\"3\\n4\\n5\") == \"0\"\nassert solution(\"4\\n5\") == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 0\nassert solution('2') == 1\nassert solution('3') == 1\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\n'''\n\nassert solution('1,2,3') == '0'\nassert solution('1,3,4') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('123') == 0\nassert solution('1234') == 0\nassert solution('12345') == 1\nassert solution('123445') == 2\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('6 7 8 9 10 11') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1, 2, 3') == 0\nassert solution('1, 2, 3, 4, 5') == 1\nassert solution('1, 2, 3, 4, 5, 6') == 1\nassert solution('1, 2, 3, 4, 5, 6, 7') == 2\nassert solution('1, 2, 3, 4, 5, 6, 7, 8') == 2\n"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3''') == '0'\nassert solution(\n'''5''') == '1'\nassert solution(\n'''6''') == '1'\nprint('Testcases passed')\n\"\"\""
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''8''') == '3'\nassert solution('''10''') == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"(()()()\") == \"6\"\nassert solution(\"())()\") == \"4\"\nassert solution(\"(()())\") == \"4\"\nassert solution(\"(()))()\") == \"4\"\nassert solution(\"()((()\")) == \"4\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n\"\"\""
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"(()(()))())\") == \"0\"\nassert solution(\"()((())\") == \"4\"\nassert solution(\"((()()))())\") == \"5\"\nassert solution(\"((()))())\") == \"4\"\nassert solution(\"((()))()\") == \"4\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('()') == 0\nassert solution('()()') == 1\nassert solution('(()') == 0\nassert solution(')()') == 0\nassert solution(')(') == 0\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"(()())()\") == \"5\"\nassert solution(\"((()))())\") == \"4\"\nassert solution(\"((()))()\") == \"4\"\nassert solution(\"()((()))()\") == \"4\"\nassert solution(\"()((()))()\") == \"4\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('5') == '1'\nassert solution('567') == '2'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\n\"\"\"\n\nfrom collections import Counter, defaultdict\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'\n\n\"\"\"\n\n\"\"\"\nEasy - 124\n\nGiven a number, n, find the number of ways to write n as a sum of consecutive positive integers.\n\nExample\n\nFor n = 4, the output should be\n1) 1\n2) 3\n3) 2\n4) 0\n\nThe possible ways to write 4 as a sum of consecutive integers are 1, 2, 3, 4.\n\nFor n = 3, the output should be\n1) 1\n2) 2\n3) 1\n\nThe possible ways to write 3 as a sum of consecutive integers are 1, 2, 3.\n\nFor n = 6, the output should be\n1) 1\n2) 2\n3) 3\n4) 4\n5) 5\n6) 0\n\nThe possible ways to write 6 as a sum of consecutive integers are 1, 2, 3, 4, 5, 6.\n\nFor n = 10, the output should be\n1) 1\n2) 2\n3) 4\n4) 5\n5) 6\n6) 7\n7) 8\n8) 9\n9) 10\n\nThe possible ways to write 10 as a sum of consecutive integers are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10.\n\"\"\""
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\n\n\"\"\"\n\n\n\"\"\"\nThis problem is a variant of the Smallest Multiple problem.\n\nThe goal is to find the smallest positive integer m so that n*m is divisible by 25. \nIf there is no such integer m, then the answer is -1.\n\nInput\nThe first line contains an integer t, the number of test cases. \nThe description of t test cases follows.\nThe first line of each test case contains a single integer n, the number to be tested.\nOutput\nFor each test case, print the smallest positive integer m to which n*m is divisible by 25, or -1 if it is impossible to obtain such integer m.\n\nConstraints\n1\u2264t\u2264105\n1\u2264n\u226410^{18}\n\nSample Input\n\n2\n5071\n712\n\nSample Output\n\n4\n-1\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == '1'\nassert solution('ab') == '2'\nassert solution('abc') == '3'\nassert solution('abcd') == '4'\nassert solution('abcde') == '5'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('aaaaa') == None\nassert solution('aab') == None\nassert solution('aaab') == None\nassert solution('aaabc') == None\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('abcdea') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abacbecfd') == '2'\nassert solution('aaabbcbb') == '2'\nassert solution('abcdedc') == '3'\nassert solution('abcde') == '1'\nassert solution('aabbcbb') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\nabacbecfd\n''') == '2'\nassert solution('''3\nabcd\n''') == '1'\nassert solution('''9\nabacbecfd\n''') == '2'\nassert solution('''8\naaabbcbb\n''') == '2'\nassert solution('''7\nabcdedc\n''') == '3'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('ab') == '1'\nassert solution('abc') == '1'\nassert solution('ac') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacbecfd') == '2\\n1 1 2 1 2 1 2 1 2\\n'\nassert solution('aaabbcbb') == '2\\n1 2 1 2 1 2 1 1\\n'\nassert solution('abcdedc') == '3\\n1 1 1 1 1 1 2 3\\n'\nassert solution('abcde') == '1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n'\n"
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abacbecfd\") == \"2\"\nassert solution(\"aaabbcbb\") == \"2\"\nassert solution(\"abcdedc\") == \"3\"\nassert solution(\"abcde\") == \"1\"\nassert solution(\"abcd\") == \"1\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na\\nb\\na"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == \"YES\"\nassert solution('abc') == \"NO\"\nassert solution('ab') == \"YES\"\nassert solution('aba') == \"YES\"\nassert solution('abab') == \"YES\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''a''') == 'NO'\nassert solution('''aba''') == 'YES'\nassert solution('''abacaba''') == 'YES'\nassert solution('''ba''') == 'YES'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n1\") == \"NO\"\nassert solution(\"1\\n2\\n1\") == \"YES\"\nassert solution(\"1\\n2\\n2\") == \"NO\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''5\na\nabacaba\nba\naba\nabab\n''') == 'NO'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'YES'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'NO'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''5\na\nabacaba\nba\naba\nabab\n''') == 'NO'\nassert solution('''5\na\nabacaba\nba\naba\nabab\n''') == 'NO'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'YES'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'a'\nassert solution('abacaba') == 'a'\nassert solution('ba') == 'ba'\nassert solution('abab') == 'NO'\nassert solution('qwerty') == 'YES'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_test) == output_test\nprint(solution(input))\n'''\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n4 2 3 1') == '5'\nassert solution('10 10 10 10\\n9 9 9 9 9 9 9 9 9 9\\n8 8 8 8 8 8 8 8 8 8') == '0'\nassert solution('3 1 2\\n3 2 1\\n1 1 1\\n2 1 2\\n1 1\\n1 1\\n1 1\\n1 1') == '5'\nassert solution('5 2\\n1 1 2 1 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '5'\nassert solution('5 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('1\\n3') == '0'\nassert solution('1\\n4') == '0'\nassert solution('2\\n1') == '1'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3\\n') == '0'\nassert solution('5 100\\n12 34 55 43 21\\n') == '5'\nassert solution('8 10\\n1 1 2 2 3 3 4 4 5 5\\n') == '5'\nassert solution('8 10\\n1 1 2 2 3 3 4 4 5 5\\n') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\n\n\n\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('5 1\\n5') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\nassert solution('12 34 55 43 21') == '5'\n\n\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 4\n4 2 3 1 5 1 6 4''') == '5'\nassert solution('''5 2\n3 1 2 1 3''') == '0'\nassert solution('''5 100\n12 34 55 43 21''') == '5'\n\n'''\nimport sys"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '14'\nassert solution(stdin) == '22'\nassert solution(stdin) == '24'\nassert solution(stdin) == '14'\nassert solution(stdin) == '20'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('5 7') == '9'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"12\"\n\"\"\"\nfrom math import ceil, floor\n\na, b = map(int, stdin.split())\n\nprint(ceil(a + b) * 2 - 2)\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n\n\n'''\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '4 4'\n) == '12'\nassert solution(\n    '3 9'\n) == '14'\nassert solution(\n    '9 3'\n) == '14'\nassert solution(\n    '3 6'\n) == '12'\nassert solution(\n    '506 2708'\n) == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4') == '12'\nassert solution('4 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n\"\"\""
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\nprint('All tests past.')"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdedc') == 'YES\\n00010'\nassert solution('aaabbcbb') == 'YES\\n01011011'\nassert solution('aaabbcbb') == 'NO'\nassert solution('abcdeeba') == 'NO'\nassert solution('abcdeedb') == 'YES\\n00010101'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\nabacbecfd''') == 'YES'\nassert solution('''8\naaabbcbb''') == 'YES'\nassert solution('''7\nabcdedc''') == 'NO'\nassert solution('''5\nabcde''') == 'YES'\nassert solution('''4\nabcd''') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcdeabca') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'YES'\nassert solution('ab') == 'YES'\nassert solution('abcd') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('abcdee') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\nabacbecfd\n''') == 'YES'\nassert solution('''8\naaabbcbb\n''') == 'YES'\nassert solution('''7\nabcdedc\n''') == 'NO'\nassert solution('''5\nabcde\n''') == 'YES'\nassert solution('''4\nabcd\n''') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n9\nabacbecfd\n\n''') == 'YES'\n\nassert solution('''\n8\naaabbcbb\n\n''') == 'YES'\n\nassert solution('''\n7\nabcdedc\n\n''') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'NO'\nassert solution('aaaaaa') == 'NO'\nassert solution('abacbe') == 'YES'\nassert solution('abcdedc') == 'YES'\nassert solution('abcde') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'NO'\nassert solution('1') == 'YES'\nassert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacbecfd') == 'YES'\nassert solution('aaabbcbb') == 'YES'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES'\nassert solution('aaab') == 'YES'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'NO'\nassert solution('a') == 'NO'\nassert solution('ab') == 'YES'\nassert solution('abacbe') == 'YES'\nassert solution('aaba') == 'NO'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2''') == \"25\"\nassert solution('''2 2''') == \"25\"\nassert solution('''2 2''') == \"25\"\nassert solution('''1 1''') == \"2\"\nassert solution('''2 1''') == \"1\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '25'\nassert solution('2 2') == '25'\nassert solution('1 3') == '-1'\nassert solution('3 3') == '-1'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('2 2') == '25'\nassert solution('2 1') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 4\") == \"-1\"\nassert solution(\"1 100\") == \"-1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 200\") == \"-1\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '25'\nassert solution('6 2') == '-1'\nassert solution('4 1') == '11'\nassert solution('12 5') == '-1'\nassert solution('4 2') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"25\"\nassert solution(\"1 2\") == \"25\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"10 100\") == \"100\"\nassert solution(\"10 100\") == \"-1\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == \"25\"\nassert solution('''3 3''') == \"27\"\nassert solution('''100 100''') == \"100\"\nassert solution('''2 3''') == \"-1\"\nassert solution('''12 14''') == \"15\"\n'''\nTried to solve it, but didnt have time"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[0] + stdin[1]\n\"\"\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '25'\nassert solution('3 2') == '-1'\nassert solution('1 10') == '25'\nassert solution('2 10') == '-1'\nassert solution('4 7') == '13'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('26 6') == 'NO'\nassert solution('8 3') == 'NO'\nassert solution('9 4') == 'NO'"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''26 6''') == 'YES\\n1 2 4 5 6 8'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES\\n1'\nassert solution('''9 4''') == 'NO'\nassert solution('''5 1''') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3\\n') == 'YES\\n4 1 2 3'\nassert solution('2 3\\n') == 'NO'\nassert solution('1 2\\n') == 'NO'\nassert solution('3 3\\n') == 'NO'\nassert solution('2 3\\n') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''26 6''') == '''YES\n1 2 4 5 6 8'''\n\nassert solution(\n'''8 3''') == '''NO'''\n\nassert solution(\n'''1 1''') == '''YES\n1'''\n\nassert solution(\n'''9 4''') == '''NO'''\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('8 3') == 'NO\\n'\nassert solution('1 1') == 'YES\\n1\\n'\nassert solution('9 4') == 'NO\\n'\nassert solution('10 11') == 'NO\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"NO\"\nassert solution(input2) == \"YES\"\nassert solution(input3) == \"YES\"\nassert solution(input4) == \"YES\"\nassert solution(input5) == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('8 3') == 'NO\\n'\nassert solution('1 1') == 'YES\\n1\\n'\nassert solution('9 4') == 'NO\\n'\nassert solution('2 3') == 'NO\\n'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''26 6\n''') == 'YES\\n1 2 4 5 6 8\\n'\nassert solution('''8 3\n''') == 'NO\\n'\nassert solution('''1 1\n''') == 'YES\\n1\\n'\nassert solution('''9 4\n''') == 'NO\\n'\nassert solution('''9 4\n1 1\n1 2 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n1 11 1\n1 12 1\n1 13 1\n1 14 1\n1 15 1\n1 16 1\n1 17 1\n1 18 1\n1 19 1\n1 20 1\n1 21 1\n1 22 1\n1 23 1\n1 24 1\n1 25 1\n1 26 1\n1 27 1\n1 28 1\n1 29 1\n1 30 1\n1 31 1\n1 32 1\n1 33 1\n1 34 1\n1 35 1\n1 36 1\n1 37 1\n1 38 1\n1 39 1\n1 40 1\n1 41 1\n1 42 1\n1 43 1\n1 44 1\n1 45 1\n1 46 1\n1 47 1\n1 48 1\n1 49 1\n1 50 1\n1 51 1\n1 52 1\n1 53 1\n1 54 1\n1 55 1\n1 56 1\n1 57 1\n1 58 1\n1 59 1\n1 60 1\n1 61 1\n1 62 1\n1 63 1\n1 64 1\n1 65 1\n1 66 1\n1 67 1\n1 68 1\n1 69 1\n1 70 1\n1 71 1\n1 72 1\n1 73 1\n1 74 1\n1 75 1\n1 76 1\n1 77 1\n1 78 1\n1 79 1\n1 80 1\n1 81 1\n1 82 1\n1 83 1\n1 84 1\n1 85 1\n1 86 1\n1 87 1\n1 88 1\n1 89 1\n1 90 1\n1 91 1\n1 92 1\n1 93 1\n1 94 1\n1 95 1\n1 96 1\n1 97 1\n1 98 1\n1 99 1\n1 100 1\n1 101 1\n1 102 1\n1 103 1\n1 104 1\n1 105 1\n1 106 1\n1 107 1\n1 108 1\n1 109 1\n1 110 1\n1 111 1\n1 112 1\n1 113 1\n1 114 1\n1 115 1\n1 116 1\n1 117 1\n1 118 1\n1 119 1\n1 120 1\n1 121 1\n1 122 1\n1 123 1\n1 124 1\n1 125 1\n1 126 1\n1 127 1\n1 128 1\n1 129 1\n1 130 1\n1 131 1\n1 132 1\n1 133 1\n1 134 1\n1 135 1\n1 136 1\n1 137 1\n1 138 1\n1 139 1\n1 140 1\n1 141 1\n1 142 1\n1 143 1\n1 144 1\n1 145 1\n1 146 1\n1 147 1\n1 148 1\n1 149 1\n1 150 1\n1 151 1\n1 152 1\n1 153 1\n1 154 1\n1 155 1\n1 156 1\n1 157 1\n1 158 1\n1 159 1\n1 160 1\n1 161 1\n1 162 1\n1 163 1\n1 164 1\n1 165 1\n1 166 1\n1 167 1\n1 168 1\n1 169 1\n1 170 1\n1 171 1\n1 172 1\n1 173 1\n1 174 1\n1 175 1\n1 176 1\n1 177 1\n1 178 1\n1 179 1\n1 180 1\n1 181 1\n1 182 1\n1 183 1\n1 184 1\n1 185 1\n1 186 1\n1 187 1\n1 188 1\n1 189 1\n1 190 1\n1 191 1\n1 192 1\n1 193 1\n1 194 1\n1 195 1\n1 196 1\n1 197 1\n1 198 1\n1 199 1\n1 200 1\n1 201 1\n1 202 1\n1 203 1\n1 204 1\n1 205 1\n1 206 1\n1 207 1\n1 208 1\n1 209 1\n1 210 1\n1 211 1\n1 212 1\n1 213 1\n1 214 1\n1 215 1\n1 216 1\n1 217 1\n1 218 1\n1 219 1\n1 220 1\n1 221 1\n1 222 1\n1 223 1\n1 224 1\n1 225 1\n1 226 1\n1 227 1\n1 228 1\n1 229 1\n1 230 1\n1 231 1\n1 232 1\n1 233 1\n1 234 1\n1 235 1\n1 236 1\n1 237 1\n1 238 1\n1 239 1\n1 240 1\n1 241 1\n1 242 1\n1 243 1\n1 244 1\n1 245 1\n1 246 1\n1 247 1\n1 248 1\n1 249 1\n1 250 1\n1 251 1\n1 252 1\n1 253 1\n1 254 1\n1 255 1\n1 256 1\n1 257 1\n1 258 1\n1 259 1\n1 260 1\n1 261 1\n1 262 1\n1 263 1\n1 264 1\n1 265 1\n1 266 1\n1 267 1\n1 268 1\n1 269 1\n1 270 1\n1 271 1\n1 272 1\n1 273 1\n1 274 1\n1 275 1\n1 276 1\n1 277 1\n1 278 1\n1 279 1\n1 280 1\n1 281 1\n1 282 1\n1 283 1\n1 284 1\n1 285 1\n1 286 1\n1 287 1\n1 288 1\n1 289 1\n1 290 1\n1 291 1\n1 292 1\n1 293 1\n1 294 1\n1 295 1\n1 296 1\n1 297 1\n1 298 1\n1 299 1\n1 300 1\n1 301 1\n1 302 1\n1 303 1\n1 304 1\n1 305 1\n1 306 1\n1 307 1\n1 308 1\n1 309 1\n1 310 1\n1 311 1\n1 312 1\n1 313 1\n1 314 1\n1 315 1\n1 316 1\n1 317 1\n1 318 1\n1 319 1\n1 320 1\n1 321 1\n1 322 1\n1 323 1\n1 324 1\n1 325 1\n1 326 1\n1 327 1\n1 328 1\n1 329 1\n1 330 1\n1 331 1\n1 332"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"26 6\\n\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\\n\") == \"NO\"\nassert solution(\"1 1\\n\") == \"YES\\n1\"\nassert solution(\"9 4\\n\") == \"NO\"\nassert solution(\"1 3\\n\") == \"NO\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n40 -45''') == '3'\nassert solution('''5 2\n3 2\n2 -2\n1 -1\n3 3\n2 -1''') == '3'\nassert solution('''10 -2\n8 -1\n''') == '0'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4 6\n4 6\n10 -2\n8 -1\"\"\") == \"3\"\nassert solution(\"\"\"5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\"\"\") == \"5\"\nassert solution(\"\"\"3 2\n300 -300\n1 299\n1 123\n40 -45\"\"\") == \"3\"\nassert solution(\"\"\"7 10\n-5 -3\n1 -7\n4 -5\n-2 -3\n5 -6\n3 -3\n-6 -1\n1 5\n1 5\n-1 -2\n2 -5\n3 -5\"\"\") == \"5\"\nassert solution(\"\"\"7 10\n-5 -3\n1 -7\n4 -5\n-2 -3\n5 -6\n3 -3\n-6 -1\n1 5\n1 5\n-1 -2\n2 -5\n3 -5\"\"\") == \"5\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123''') == '3'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n1 45\n10 34\n10 -6''') == '5'\nassert solution('''4 5\n2 1\n1 1\n5 5\n3 -5\n4 4\n-2 -3\n1 -1\n-1 3\n1 -3\n-5 -5''') == '2'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n\n3 1\n1 4\n1 2\n''') == '3'\nassert solution('''5 2\n500 -300\n5 -2\n12 -2\n13 -3\n25 -3\n50 -5\n''') == '4'\nassert solution('''5 2\n500 -300\n5 -2\n12 -2\n13 -3\n25 -3\n50 -5\n\n3 1\n1 4\n1 2\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n40 -45''') == '3'\nassert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n40 -45''') == '3'\nassert solution('''30 100\n-300 300\n-300 -300\n200 250\n-300 250\n-100 -300\n-300 -300\n-300 -300''') == '4'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n40 -45\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 6\n4 6\n10 -2\n8 -1''') == '3'\n\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\n\nassert solution('''5 7\n20 -9\n10 2\n4 -6\n1 -4\n2 3\n''') == '5'\n\nassert solution('''5 9\n-2 -6\n-1 1\n0 3\n-1 -2\n-1 3\n''') == '3'"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2') == 'NO'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == result\nprint(solution(input()))\n-----\n\"\"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1''') == 'YES'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1''') == 'NO'\nassert solution('''3\n1 1 1 1 1 3 3 3 3 3\n''') == 'NO'\nassert solution('''4\n1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution('''10\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1''') == 'NO'"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"\\t\") == \"\"\nassert solution(\"123\") == \"\"\nassert solution(\"12345\") == \"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('2\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n1\\n1\\n2\\n1') == 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 1 3 4\n2 3 4 1 1\n3 4 1 1 1\n4 1 1 1 1\n''') == \"YES\\n1 2 1\\n2 3 4\\n3 4 1\\n4 1 1\"\nassert solution('''4\n1 1 1 1 1 3 3 3 3 3 1 1 1 1\n3 1 2 1 3 3 3 3 3 3 1 1 1 1\n3 1 2 1 3 3 3 3 3 3 1 1 1 1\n3 1 2 1 3 3 3 3 3 3 1 1 1 1\n''') == \"YES\\n1 3 1\\n3 1 3\\n3 1 3\\n3 1 3\\n1 3 1\\n1 3 1\\n1 3 1\"\nassert solution('''2\n1 1 1\n1 1 1\n''') == \"NO\"\nassert solution('''6\n3 4 5 6 1 4 5 3\n4 5 6 1 4 5 3\n5 6 1 4 5 3\n1 4 5 6 1 4 5\n4 5 6 1 4 5 3\n5 6 1 4 5 3\n''') == \"NO\"\nassert solution('''7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n''') == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == expect\n\n\"\"\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('4 -1') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('5 2') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 4') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('3 10') == 'NO'\nassert solution('10 0') == 'NO'\nassert solution('10 -10') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 2\\n1 2\\n1 2') == 'YES'\nassert solution('1 5\\n1 -5\\n1 -2\\n1 3\\n1 3\\n1 -3\\n1 3\\n1 3') == 'YES'\nassert solution('1 5\\n1 -5\\n1 -2\\n1 3\\n1 3\\n1 -3\\n1 3\\n1 3') == 'NO'\nassert solution('1 10\\n10 0\\n10 -10\\n30 0') == 'YES'\nassert solution('1 10\\n10 0\\n10 -10\\n30 0') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4''') == 'YES'\nassert solution('''3 5''') == 'YES'\nassert solution('''4 -5''') == 'YES'\nassert solution('''4 -2''') == 'YES'\nassert solution('''1 3''') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"YES\"\nassert solution(input(\"4 6\\n10 -2\\n8 -1\")) == \"YES\"\nassert solution(input(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\")) == \"YES\"\nassert solution(input(\"3 10\\n10 0\\n10 -10\\n30 0\\n\")) == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0') == 'NO'\nassert solution('4 10\\n10 0\\n10 -10\\n30 0') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\nassert solution('''3 5\n5 2\n5 -3\n2 1\n4 -2\n''') == 'NO'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\n\nassert solution(\n'''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\n\nassert solution(\n'''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n\nassert solution(\n'''\n10 1 11\n1\n''') == 'NO'\n\nassert solution(\n'''\n8 4 1\n2\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 0'"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('7 3 2\\n1 2 1') == 'YES'\nassert solution('10 1 11\\n1') == 'YES'\nassert solution('10 1 5\\n2') == 'YES'\nassert solution('10 1 5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('11 1 1') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('9 4 2') == 'YES\\n0 0 0 0 0 0 0 0 1 0 1 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''7 1 11''') == 'YES'\nassert solution('''1''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3 2''') == 'NO'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''1 2 1''') == 'NO'\nassert solution('''1''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, m, d = [int(x) for x in stdin.strip().split()]\nc = [int(x) for x in stdin.strip().split()]"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''7 3 2''') == 'YES'\nassert solution('''11 1 10''') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 3 2''') == 'YES'\nassert solution('''10 1 11''') == 'YES'\nassert solution('''10 1 5''') == 'YES'\nassert solution('''4 0 5''') == 'NO'\nassert solution('''2 0 1''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n\n\"\"\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('aa') == 1\nassert solution('baa') == 1\nassert solution('baaab') == 2\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"abcdef\", \"defabc\") == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('bsjdwaf', 'fjdwaf') == 1\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"aabbbbccdddddeeeeffff\", \"bb\") == 6\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('XxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"bbaba\", \"bb\") == 3\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('5.272501') == '9 9'\nassert solution('0.942853') == '8 5'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\nassert solution(\"-0.5\") == \"3 2\"\nassert solution(\"0.5\") == \"3 2\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\nprint(solution(\"1.200000\"))\nprint(solution(\"2.572479\"))\nprint(solution(\"4.024922\"))\n\n------\n\nAccepted\n235,637\nSubmissions\n836,165\n\"\"\"\n\nfrom math import ceil, floor"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1.20000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\nTest Case 1\nSample test case:\n\nInput\n1.20000\n\nOutput\n3 2\n\nTest Case 2\nSample test case:\n\nInput\n2.572479\n\nOutput\n10 3\n\nTest Case 3\nSample test case:\n\nInput\n4.024922\n\nOutput\n9 9\n\nTest Case 4\nSample test case:\n\nInput\n2.0\n\nOutput\n1 1\n\nTest Case 5\nSample test case:\n\nInput\n1.1\n\nOutput\n1 1\n\"\"\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\""
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 2 3\") == \"YES\\n2 9\\n2 10\\n\"\nassert solution(\"6 2 3\") == \"YES\\n2 9\\n2 10\\n3 1\\n4 1\\n5 2\\n6 7\\n7 8\\n8 9\\n10 3\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n3 1\\n4 1\\n6 10\\n8 2\\n4 3\\n5 6\\n7 8\\n9 10\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n6 10\\n8 7\\n4 3\\n5 6\\n7 8\\n9 10\\n\"\n\n\n\n-----\n\n## SOLUTION\n\n-----\n\n-----\n\n## COMMENTS\n\n-----\n\n## LEXICAL\n\n----\n\n## SYNTACTIC\n\n----\n\n## REFERENCES\n\n-----\n\n## SEE\n\n\"\"\"\n\n\nimport sys\nfrom collections import defaultdict\n\nclass Graph:\n    def __init__(self):\n        self.nodes = []\n        self.edges = defaultdict(list)\n        self.visited = set()\n\n    def add_node(self, node):\n        if node not in self.nodes:\n            self.nodes.append(node)\n            self.edges[node] = []\n\n    def add_edge(self, u, v):\n        if u not in self.nodes:\n            self.add_node(u)\n        if v not in self.nodes:\n            self.add_node(v)\n        self.edges[u].append(v)\n        self.edges[v].append(u)\n\n    def is_connected(self, u, v):\n        if u not in self.nodes or v not in self.nodes:\n            return False\n        return v in self.edges[u]\n\n    def find_shortest_path(self, u, v):\n        if not self.is_connected(u, v):\n            return -1\n\n        visited = set()\n\n        def dfs(u):\n            if u in visited:\n                return\n            visited.add(u)\n            for v in self.edges[u]:\n                dfs(v)\n\n        dfs(u)\n\n        return visited\n\n    def has_cycle(self):\n        n = len(self.nodes)\n        visited = set()\n\n        def dfs(u, c):\n            if u in visited:\n                return True\n            if u in c:\n                return True\n            visited.add(u)\n            for v in self.edges[u]:\n                if dfs(v, c):\n                    return True\n            return False\n\n        for i in range(n):\n            if dfs(i, visited):\n                return True\n\n        return False\n\n    def diameter(self):\n        n = len(self.nodes)\n        dist = [0] * n\n\n        def dfs(u, d):\n            if u in dist:\n                return d\n            dist[u] = d\n            for v in self.edges[u]:\n                d = dfs(v, d + 1)\n            return d\n\n        for i in range(n):\n            dfs(i, 0)\n\n        return max(dist)\n\n    def degree(self, u):\n        return len(self.edges[u])\n\n    def __str__(self):\n        res = []\n        for node in self.nodes:\n            res.append((node, self.degree(node)))\n        return str(res)"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 5 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'NO'\n\n\"\"\""
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3 3') == 'YES\\n' + '3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n'\nassert solution('6 2 3') == 'NO\\n'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n'\nassert solution('2 5 4') == 'YES\\n2 4\\n2 3\\n1 3\\n'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''8 5 3''') == 'NO'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 3') == 'YES'\nassert solution('8 5 3') == 'NO'\nassert solution('8 5 3') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('2 1') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\nassert solution(\"8 5 4\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n6 7\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '010100'\n\n\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n\n'''\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"0 1 1\") == \"11000100\"\nassert solution(\"1 1 1\") == \"11000100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"010100\"\nassert solution(\"3 1 4\") == \"101110\"\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"010100\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('7 4 5') == '110101101'\n\"\"\"\n\na, b, x = map(int, stdin.split())\ns = '0' * a + '1' * b + '0' * x\nprint(s)\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('7 2 1') == '1001101'\nassert solution('4 2 4') == '000011'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ab\", \"bc\") == \"YES\\nacbbac\"\nassert solution(\"aa\", \"bc\") == \"YES\\ncacbacbab\"\nassert solution(\"cb\", \"ac\") == \"YES\\ncbacbacbab\"\n\n\n-----\n\n## Subtask: Introduction to Theory of Computer Science\n\n### 1.3.1 The Pareto Principle\n\nThe Pareto Principle states that any pair of comparable objects should not be treated unfairly.\n\nConsider the following example, which is a pair of comparable objects, [$a$] and [$b$]:\n\n[$[a]$] is less than [$[b]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[a]$] is less than [$[b]$], because in the first case the former is a scalar while the latter is a vector.\n\nThe Pareto Principle states that any pair of comparable objects should not be treated unfairly.\n\n### 1.3.2 The Scalar-Vector Test\n\nConsider the following two vectors, [$v$] and [$w$]:\n\n[$[v]$] is less than [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is less than [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is greater than [$[w]$], because in the first case the former is a vector while the latter is a scalar.\n\n[$[v]$] is greater than [$[w]$], because in the first case the former is a vector while the latter is a scalar.\n\nIf we consider the example above, we can see that [$[v]$] is greater than [$[w]$] because it is a vector while [$[w]$] is a scalar.\n\nThe Scalar-Vector Test states that if $v$ and $w$ are comparable, then $v$ is less than $w$ if $v$ is scalar and $w$ is vector.\n\n### 1.3.3 The Equal-Vector Test\n\nConsider the following two vectors, [$v$] and [$w$]:\n\n[$[v]$] is equal to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is equal to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is not equal to [$[w]$], because in the first case the former is a vector while the latter is a scalar.\n\n[$[v]$] is not equal to [$[w]$], because in the first case the former is a vector while the latter is a scalar.\n\nIf we consider the example above, we can see that [$[v]$] is equal to [$[w]$] because it is a vector while [$[w]$] is a scalar.\n\nThe Equal-Vector Test states that if $v$ and $w$ are comparable, then $v$ is equal to $w$ if $v$ is scalar and $w$ is vector.\n\n### 1.3.4 The Not-Equal-Vector Test\n\nConsider the following two vectors, [$v$] and [$w$]:\n\n[$[v]$] is not equal to [$[w]$], because in the first case the former is a vector while the latter is a scalar.\n\n[$[v]$] is not equal to [$[w]$], because in the first case the former is a vector while the latter is a scalar.\n\n[$[v]$] is equal to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is equal to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\nIf we consider the example above, we can see that [$[v]$] is equal to [$[w]$] because it is a vector while [$[w]$] is a scalar.\n\nThe Not-Equal-Vector Test states that if $v$ and $w$ are comparable, then $v$ is not equal to $w$ if $v$ is scalar and $w$ is vector.\n\n### 1.3.5 The Not-Equal-Scalar Test\n\nConsider the following two vectors, [$v$] and [$w$]:\n\n[$[v]$] is not equal to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is not equal to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is equal to [$[w]$], because in the first case the former is a vector while the latter is a scalar.\n\n[$[v]$] is equal to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\nIf we consider the example above, we can see that [$[v]$] is equal to [$[w]$] because it is a scalar while [$[w]$] is a vector.\n\nThe Not-Equal-Scalar Test states that if $v$ and $w$ are comparable, then $v$ is not equal to $w$ if $v$ is scalar and $w$ is vector.\n\n### 1.3.6 The Comparable Test\n\nIf we consider the following two vectors, [$v$] and [$w$]:\n\n[$[v]$] is comparable to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is comparable to [$[w]$], because in the first case the former is a scalar while the latter is a vector.\n\n[$[v]$] is not comparable to [$[w]$], because in the first case the former is a vector while the latter is a scalar.\n\n[$[v]$] is not comparable to [$[w]$], because in the first case the former is a vector while the latter"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"YES\"\nassert solution(\"bbc\") == \"YES\"\nassert solution(\"aac\") == \"YES\"\nassert solution(\"aaa\") == \"NO\"\nassert solution(\"abca\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\nacbbac'\nassert solution('''3\naa\nbc\n\n''') == 'YES\\ncacbacbab'\nassert solution('''1\ncb\nac\n\n''') == 'YES\\ncbacbac'\nassert solution('''2\nab\n\n''') == 'NO'\nassert solution('''3\naa\nbc\n\n''') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ab\") == \"YES\\naab\\n\"\nassert solution(\"bc\") == \"YES\\nbcbc\\n\"\nassert solution(\"cc\") == \"NO\\n\"\nassert solution(\"ab\") == \"YES\\naab\\n\"\nassert solution(\"aa\") == \"YES\\naa\\naa\\n\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"YES\"\nassert solution(\"ca\") == \"NO\"\nassert solution(\"bb\") == \"NO\"\nassert solution(\"abca\") == \"YES\"\nassert solution(\"abc\") == \"NO\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == 'NO'\nassert solution('''2\nab\nbc''') == 'NO'\nassert solution('''3\naa\nbc\n''') == 'NO'\nassert solution('''1\ncb\nac''') == 'YES'\nassert solution('''3\nab\nab\n''') == 'YES'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\nab\nbc''') == 'YES'\nassert solution('''3\naa\nbc\n\nInput\n3\naa\nbc\n''') == 'YES'\nassert solution('''2\ncb\nac\n''') == 'NO'\nassert solution('''1\nbc\nac''') == 'YES'\nassert solution('''2\nbc\nac\n''') == 'NO'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ab\", \"bc\") == \"NO\"\nassert solution(\"ca\", \"bb\") == \"NO\"\nassert solution(\"ab\", \"bb\") == \"NO\"\nassert solution(\"ab\", \"cb\") == \"YES\"\nassert solution(\"ca\", \"bc\") == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2\\n'\nassert solution('5\\n1 1 1 1 1\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n-1 2 2\\n') == '-1\\n'\nassert solution('4\\n3 3 3 3\\n') == '-1\\n'\nassert solution('4\\n3 2 1\\n') == '3 1 2\\n'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n-1') == '-1'\nassert solution('2\\n1') == '3 1 2'\nassert solution('2\\n2') == '-1'\nassert solution('2\\n1 2') == '2 1 3'\nassert solution('3\\n-1') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2'\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5'\nassert solution('4\\n-1 2 2\\n') == '-1'\nassert solution('3\\n-2 1\\n') == '3 1 2'\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '1 2'\nassert solution('2\\n2\\n') == '1 2'\nassert solution('1\\n2\\n') == '2 1'\nassert solution('2\\n3\\n') == '-1'\nassert solution('3\\n2\\n') == '1 2'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n-2 1') == '3 1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('4\\n-1 2 2') == '-1'\nassert solution('4\\n1 1 1') == '1 2 3 4'\nassert solution('2\\n-1 2') == '-1'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == '1 2 3 4'\nassert solution('-1 2 2') == '-1'\nassert solution('1 1 1 1') == '1 2 3 4'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n-2 1''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''5\n1 1 1 1 1''') == '1 2 3 4 5'\nassert solution('''6\n0 1 2 3 4 5''') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-1 1 1 1') == '1 2 3 4 5'\nassert solution('1 1 1 1') == '1 2 3 4 5'\nassert solution('-1 -2 -1') == '-1 -2'\nassert solution('-1 -2 -1 0') == '-1 -2'\nassert solution('1 1 1 1') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''7\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7'\nassert solution('''7\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1'\nassert solution('''5''') == '2'\nassert solution('''2 2 2 3 3''') == '2'\nassert solution('''1 2 2 3 3''') == '2'\nassert solution('''10''') == '5'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('5 2 2 3 3') == '2'\nassert solution('10 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"3\\n2 2 2 3 3\") == \"2\\n\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\\n\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3\n1 2 3\n''') == '1'\nassert solution(\n'''\n5\n2 2 2 3 3\n''') == '2'\nassert solution(\n'''\n2\n2 2\n''') == '1'\nassert solution(\n'''\n3\n2 2 2\n''') == '2'\nassert solution(\n'''\n4\n2 2 2 3\n''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('3\\n2 2 2 3 3') == '2'\nassert solution('5\\n2 2 2 3 3') == '2'\n\"\"\"\nfrom sys import stdin, stdout\nfrom collections import deque\n\nn = int(stdin.readline().strip())\nchips = deque(map(int, stdin.readline().split()))\n\ncost = 0\nwhile chips:\n    cost += 1\n    left = chips.popleft()\n    right = chips.pop()\n    if left == right:\n        continue\n    elif left > right:\n        chips.appendleft(left - 2)\n    else:\n        chips.append(right - 1)\n\nstdout.write(str(cost) + '\\n')\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expect\n\n\"\"\""
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\\n4\\n2\\n2\\n1\\n2\") == \"4\"\nassert solution(\"1\\n3\\n2\\n3\\n3\") == \"3\"\nassert solution(\"2\\n1\\n3\\n2\\n1\") == \"2\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n5\n2 2 2 3 3\n''') == '2'\nassert solution('''\n8\n3 1 4 5 2 6 7 8\n''') == '1'\nassert solution('''\n9\n1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('10') == '5'\nassert solution('100000000') == '10'\nassert solution('100000') == '10'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == '5'\nassert solution('25') == '10'\nassert solution('50') == '15'\nassert solution('100') == '25'\nassert solution('1000') == '50'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10''') == '5'\nassert solution('''100''') == '6'\nassert solution('''1000''') == '33'\nassert solution('''10000''') == '56'\nassert solution('''1000000''') == '113'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == \"5\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '5'\nassert solution('10') == '5'\nassert solution('123456789') == '17'\nassert solution('10000000') == '20000000'\nassert solution('1000000000') == '100000000'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10''') == 5\nassert solution('''2''') == 2\nassert solution('''3''') == 3\nassert solution('''4''') == 4\nassert solution('''5''') == 5\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10\") == 5\nassert solution(\"100\") == 25\nassert solution(\"10000\") == 500\nassert solution(\"1000000\") == 50500\nassert solution(\"10000000\") == 500500\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '5'\nassert solution('11') == '6'\nassert solution('12') == '7'\nassert solution('13') == '8'\nassert solution('14') == '9'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\nassert solution('10') == '5'\nassert solution('1000') == '45'\nassert solution('1000') == '45'\nassert solution('10000') == '78'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '5'"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2\n0 1 1\n1 1 0''') == '0 1'\n\nassert solution(\n'''15\n5 5 5\n5 5 5\n''') == '0 15'\n\nassert solution(\n'''3\n0 0 3\n3 0 0\n''') == '3 3'\n\nassert solution(\n'''686\n479 178 29\n11 145 530\n''') == '22 334'\n\nassert solution(\n'''319\n10 53 256\n182 103 34\n''') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('2\\n0 0 1\\n1 1 0') == '1 1'\nassert solution('2\\n0 0 1\\n1 1 0') == '1 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1 0\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1') == '0 1'\nassert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('2\\n0 1 1\\n1 1 0') == '0 1'\nassert solution('2\\n0 2 2\\n2 2 0') == '1 1'\nassert solution('3\\n0 0 3\\n3 0 0') == '1 2'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0 15\"\nassert solution(input()) == \"0 15\"\nassert solution(input()) == \"0 15\"\nassert solution(input()) == \"0 15\"\nassert solution(input()) == \"3 3\"\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2\n0 1 1\n1 1 0\n\"\"\") == \"\"\"0 1\n\"\"\"\n\nassert solution(\n\"\"\"15\n5 5 5\n5 5 5\n\"\"\") == \"\"\"0 15\n\"\"\"\n\nassert solution(\n\"\"\"3\n0 0 3\n3 0 0\n\"\"\") == \"\"\"3 3\n\"\"\"\n\nassert solution(\n\"\"\"686\n479 178 29\n11 145 530\n\"\"\") == \"\"\"22 334\n\"\"\"\n\nassert solution(\n\"\"\"319\n10 53 256\n182 103 34\n\"\"\") == \"\"\"119 226\n\"\"\""
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0 1'\n\n'''"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '4'\nassert solution('''5\n1 1 1 1 1\n''') == '4'\nassert solution('''4\n-5 -4 -3 -2 -1 0 1 2 3 4\n''') == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4\n1 1 1 1\n\"\"\") == \"\"\"3\n7 7\n2 3\n4 5\n\"\"\"\nassert solution(\"\"\"11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"\"\"2\n3 4\n1 1\n2 2\n3 3\n4 5\n6 7\n8 9\n9 10\n\"\"\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('-1\\n-2\\n-3\\n-4\\n-5\\n-6\\n-7\\n-8\\n-9\\n-10\\n-11\\n-12\\n-13\\n-14\\n-15\\n-16\\n-17\\n-18\\n-19\\n-20\\n-21\\n-22\\n-23\\n-24\\n-25\\n-26\\n-27\\n-28\\n-29\\n-30\\n-31\\n-32\\n-33\\n-34\\n-35\\n-36\\n-37\\n-38\\n-39\\n-40\\n-41\\n-42\\n-43\\n-44\\n-45\\n-46\\n-47\\n-48\\n-49\\n-50\\n-51\\n-52\\n-53\\n-54\\n-55\\n-56\\n-57\\n-58\\n-59\\n-60\\n-61\\n-62\\n-63\\n-64\\n-65\\n-66\\n-67\\n-68\\n-69\\n-70\\n-71\\n-72\\n-73\\n-74\\n-75\\n-76\\n-77\\n-78\\n-79\\n-80\\n-81\\n-82\\n-83\\n-84\\n-85\\n-86\\n-87\\n-88\\n-89\\n-90\\n-91\\n-92\\n-93\\n-94\\n-95\\n-96\\n-97\\n-98\\n-99\\n-100\\n-101\\n-102\\n-103\\n-104\\n-105\\n-106\\n-107\\n-108\\n-109\\n-110\\n-111\\n-112\\n-113\\n-114\\n-115\\n-116\\n-117\\n-118\\n-119\\n-120\\n-121\\n-122\\n-123\\n-124\\n-125\\n-126\\n-127\\n-128\\n-129\\n-130\\n-131\\n-132\\n-133\\n-134\\n-135\\n-136\\n-137\\n-138\\n-139\\n-140\\n-141\\n-142\\n-143\\n-144\\n-145\\n-146\\n-147\\n-148\\n-149\\n-150\\n-151\\n-152\\n-153\\n-154\\n-155\\n-156\\n-157\\n-158\\n-159\\n-160\\n-161\\n-162\\n-163\\n-164\\n-165\\n-166\\n-167\\n-168\\n-169\\n-170\\n-171\\n-172\\n-173\\n-174\\n-175\\n-176\\n-177\\n-178\\n-179\\n-180\\n-181\\n-182\\n-183\\n-184\\n-185\\n-186\\n-187\\n-188\\n-189\\n-190\\n-191\\n-192\\n-193\\n-194\\n-195\\n-196\\n-197\\n-198\\n-199\\n-200\\n-201\\n-202\\n-203\\n-204\\n-205\\n-206\\n-207\\n-208\\n-209\\n-210\\n-211\\n-212\\n-213\\n-214\\n-215\\n-216\\n-217\\n-218\\n-219\\n-220\\n-221\\n-222\\n-223\\n-224\\n-225\\n-226\\n-227\\n-228\\n-229\\n-230\\n-231\\n-232\\n-233\\n-234\\n-235\\n-236\\n-237\\n-238\\n-239\\n-240\\n-241\\n-242\\n-243\\n-244\\n-245\\n-246\\n-247\\n-248\\n-249\\n-250\\n-251\\n-252\\n-253\\n-254\\n-255\\n-256\\n-257\\n-258\\n-259\\n-260\\n-261\\n-262\\n-263\\n-264\\n-265\\n-266\\n-267\\n-268\\n-269\\n-270\\n-271\\n-272\\n-273\\n-274\\n-275\\n-276\\n-277\\n-278\\n-279\\n-280\\n-281\\n-282\\n-283\\n-284\\n-285\\n-286\\n-287\\n-288\\n-289\\n-290\\n-291\\n-292\\n-293\\n-294\\n-295\\n-296\\n-297\\n-298\\n-299\\n-300\\n-301\\n-302\\n-303\\n-304\\n-305\\n-306\\n-307\\n-308\\n-309\\n-310\\n-311\\n-312\\n-313\\n-314\\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2 1 1 5 3') == '3'\nassert solution('1 2 2 1 1 5 3') == '3'\nassert solution('3 4 4 4 4 4') == '4'\nassert solution('3 4 4 4 4 4') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '4'\nassert solution('1\\n2\\n2\\n3\\n') == '3'\nassert solution('2\\n2\\n2\\n3\\n') == '2'\nassert solution('2\\n2\\n2\\n1\\n') == '2'\nassert solution('3\\n3\\n1\\n2\\n3\\n') == '1'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6') == '4'\nassert solution('1 2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5 6') == '6'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"-1\") == \"\"\nassert solution(\"123\") == \"\"\nassert solution(\"12345\") == \"\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n'\nassert solution('''\n4\n1 1 1 1\n''') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'\nassert solution('''\n5\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n2 2\\n4 4\\n'\nassert solution('''\n6\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6\n''') == '3\\n6 6\\n3 4\\n1 1\\n2 2\\n4 4\\n5 5\\n'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10''') == '2\\n3 4\\n1 1\\n7 7\\n2 3\\n4 5\\n6 7\\n8 9\\n10 10'\nassert solution('''4\n1 1 1 1''') == '4\\n4 4\\n1 1\\n2 2\\n3 3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10''') == '2\\n3 4\\n1 1\\n7 7\\n2 3\\n4 5\\n6 7\\n8 9\\n10 10'\nassert solution('''4\n1 1 1 1''') == '4\\n4 4\\n1 1\\n2 2\\n3 3'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 2 1 5 3\") == \"3\"\nassert solution(\"7\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"3\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10\") == \"3\"\nassert solution(\"4\\n1 1 1 1\") == \"4\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11\") == \"4\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4 5 6 7 8 9') == 'NO'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\nassert solution(\"3\\n3 1 3\") == \"NO\"\nassert solution(\"3\\n3 1 3\") == \"NO\"\nassert solution(\"3\\n2 1 2\") == \"YES\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n') == 'NO'\nassert solution('2\\n1 2 3\\n') == 'YES'\nassert solution('2\\n1 2 3 4\\n') == 'YES'\nassert solution('2\\n1 2 3 4 5\\n') == 'YES'\nassert solution('2\\n1 2 3 4 5 6\\n') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n1 2 3\\n2 3 1') == 'NO'\nassert solution('2\\n3 3') == 'YES'\nassert solution('2\\n1 1') == 'YES'\nassert solution('2\\n1 1\\n2 1') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == 'YES'\n\nassert solution('''\n6\n1 2 3 4 5 6\n''') == 'NO'\n\nassert solution('''\n8\n1 2 3 4 5 6 7 8\n''') == 'NO'\n\nassert solution('''\n1\n1\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\nassert solution('3\\n3 1 2\\n2 1 2') == 'YES'\nassert solution('3\\n3 1 2\\n2 1 2\\n2 1 2') == 'NO'\n\n\n\"\"\""
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''7\n1 2 3 4 5 6 7''') == 'NO'\nassert solution('''1\n1''') == 'YES'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == 'YES'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n2') == 'YES'\nassert solution('1\\n2\\n2') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n2') == 'NO'\nassert solution('2\\n3\\n1') == 'NO'\nassert solution('3\\n1 2 3\\n3 2 1') == 'YES'\nassert solution('3\\n2 3 1') == 'YES'\nassert solution('3\\n3 1 2\\n2 1 3') == 'YES'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdef') == 'abdfec'\nassert solution('abdfec') == 'abdfec'\nassert solution('abcd') == '-1'\nassert solution('accd') == '-1'\nassert solution('abcde') == '-1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6\nabcdef\nabdfec\n\n\"\"\") == \"4\\n3 5 4 5\"\nassert solution(\n\"\"\"\n4\nabcd\naccd\n\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n4\nabcd\nbacd\n\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '-1'\n\n\"\"\""
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"abcdef\") == \"abdcef\"\nassert solution(\"abdfec\") == \"abdcfe\"\nassert solution(\"abdfec\") == \"abdfec\"\nassert solution(\"abdfec\") == \"abdfec\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abcdef\", \"abdfec\") == \"abdfec\"\nassert solution(\"abcd\", \"accd\") == \"-1\"\nassert solution(\"abcd\", \"acde\") == \"4 5 4 5\"\nassert solution(\"abcd\", \"acd\") == \"3 5 4 5\"\nassert solution(\"abcd\", \"acd\") == \"3 5 4 5\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abcdef\", \"abdfec\") == \"abdfec\"\nassert solution(\"abcd\", \"accd\") == \"0\"\nassert solution(\"abcd\", \"cbad\") == \"-1\"\nassert solution(\"abcd\", \"cbad\") == \"-1\""
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n6\nabcdef\nabdfec\n\"\"\") == \"4\", '0'\nassert solution(\n    \"\"\"\n4\nabcd\naccd\n\"\"\") == \"-1\", '-1'"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcdef', 'abdfec') == '-1'\nassert solution('abcd', 'accd') == '3 5 4 5'\nassert solution('abc', 'abc') == '0'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == expected\n\"\"\"\n\nN = int(input())\nS = input()\nT = input()\n\nswaps = 0\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aa') == 'PPS'\nassert solution('a') == 'PS'\nassert solution('ba') == 'PSPSPS'\nassert solution('abab') == 'SPPSPSPS'\nassert solution('a') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'\nassert solution('1') == 'P'\nassert solution
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '''SPPSPSPS'''\nassert solution('''3''') == '''PS'''\nassert solution('''2''') == '''PS'\nassert solution('''ba''') == '''PSPSPSPS'''\nassert solution('''aa''') == '''PSPS'''\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abab') == 'SPPSPSPS'\nassert solution('a') == 'PS'\nassert solution('ba') == 'PS'\nassert solution('abab') == 'SPPSPSPS'\nassert solution('a') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\nassert solution('''\n3\na\naa\naa\na\n''') == 'PPSS'\nassert solution('''\n2\na\nc\n''') == 'PS'\nassert solution('''\n5\na\naa\naa\na\na\n''') == 'SPPSPSPS'\n\n\n\"\"\"\n\n\"\"\"\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"SP\"\nassert solution(\"abab\") == \"PPSPSPS\"\nassert solution(\"abba\") == \"PS\"\nassert solution(\"baaba\") == \"PSPSPSPS\"\nassert solution(\"a\") == \"PS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'P'\nassert solution('aa') == 'PPS'\nassert solution('aa') == 'PS'\nassert solution('abab') == 'SPPSPSPS'\nassert solution('aba') == 'PSS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ababc') == 'PSPSPS'\nassert solution('aabc') == 'PPS'\nassert solution('abaa') == 'SPSS'\nassert solution('aab') == 'PS'\nassert solution('a') == 'P'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\nassert solution('''3\na\naa\naa\na\n''') == 'PPSS'\nassert solution('''2\na\nc\n''') == 'PS'\nassert solution('''3\na\nb\na\n''') == 'SP'\nassert solution('''4\na\nba\naa\na\n''') == 'PSPSPS'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4 6 8 10''') == 1\nassert solution('''2 4 6 8 10 11 12''') == 0\nassert solution('''2 4 6 8 10 11 12 13 14''') == -1\n'''"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4 6 8 10''') == 1\nassert solution('''0 0 0 0 0 0 0 0''') == 0\nassert solution('''10 10 10 10 10 10 10 10''') == 0\nassert solution('''6 6 6 6 6 6 6''') == 0\nassert solution('''4 8 10 16''') == 0\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\n\nprint(solution(\"2 4 6 8 10\"))\n\nassert solution
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\n\nInput\n7 3 5 4 1 6 2\n\nOutput\n5\n'''\n) == '5'"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('2 4 6 8 10 1') == '2'\nassert solution('2 4 6 8 10 1 1') == '3'\nassert solution('2 4 6 8 10 1 1 1') == '4'\nassert solution('2 4 6 8 10 1 1 1 1') == '5'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''2 4 6 8 10''') == '1'\nassert solution('''9 7 5 4 3 2 1''') == '4'\nassert solution('''1 1 1 1 1 1 1''') == '1'\nassert solution('''4 4 4 4 4 4''') == '1'\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 6 8 10') == 1\nassert solution('2 4 6 8 10') == 1\n\n'''\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''8\n1 1 1 1 1 1 1 1 1\n''') == '8'\nassert solution('''9\n1 1 1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == 2\nassert solution('''5\n1 1 0 0 0\n\n''') == 0\nassert solution('''4\n1 1 1 1\n\n''') == 0\nassert solution('''6\n1 1 1 1 0 0\n\n''') == 0\nassert solution('''100\n
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\n\nassert solution(\n'''\n5\n1 1 0 0 0\n''') == '0'\n\nassert solution(\n'''\n4\n1 1 1 1\n''') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'\nassert solution('1000\\n
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\\\n5\n1 1 0 0 0\n''') == '0'\nassert solution('''\\\n4\n1 1 1 1\n''') == '0'\nassert solution('''\\\n5\n1 1 0 0 0\n''') == '0'\nassert solution('''\\\n5\n1 1 0 0 0\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\\\n5\n1 1 0 0 0\n''') == '0'\nassert solution('''\\\n4\n1 1 1 1\n''') == '0'\nassert solution('''\\\n10\n1 1 1 1 1 1 1 1 1 1\n''') == '0'\nassert solution('''\\\n20\n
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 0 0 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"5\\n1 1 1 1 0\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n10\n1 1 0 1 1 0 1 0 1 0\n\"\"\"\n) == '2'\n\n\nassert solution(\n\"\"\"\n5\n1 1 0 0 0\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n4\n1 1 1 1\n\"\"\"\n) == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\nfrom sys import stdin"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\\n\\n\\n\")) == \"\"\nassert solution(input(\"\\n\\n\\n\\n\\n\")) == \"\"\nassert solution(input(\"\\n\\n\\n\\n\\n\\n\")) == \"\"\nassert solution(input(\"\\n\\n\\n\\n\\n\\n\\n\")) == \"\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n') == '1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n') == '2'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\nassert solution(\"6\\n6 90 12 18 30 18\") == \"4\"\nassert solution(\"1\\n1 2 3 4 5 6\") == \"0\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"6\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1''') == '1'\nassert solution('''2\n2''') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('3\\n1') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\nprint(solution(stdin))\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '0'\nassert solution('3\\n1\\n') == '0'\nassert solution('4\\n1\\n') == '1'\nassert solution('5\\n1\\n') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == '11'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '4'\n\n\n\"\"\""
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n100') == 1\nassert solution('2\\n101') == 2\nassert solution('3\\n100') == 1\nassert solution('4\\n100') == 2\nassert solution('5\\n101') == 3\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n1 2') == '1'\nassert solution('1\\n100') == '1'\nassert solution('100\\n1 2') == '1'\nassert solution('2\\n1 2') == '1'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n1 2 4 3 3 2\n''') == \"2\"\nassert solution('''\n1\n100\n''') == \"1\"\nassert solution('''\n4\n1 2 3 4\n''') == \"1\"\nassert solution('''\n8\n2 1 4 4 3 1 1\n''') == \"4\"\nassert solution('''\n3\n1 2 3\n''') == \"1\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 1\nassert solution('100') == 1\nassert solution('1 2 4 3 3 2') == 2\nassert solution('1 100') == 1\nassert solution('1 100 100 100 100 100 100 100') == 1\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('100') == 1\nassert solution('3') == 1\nassert solution('6') == 2\nassert solution('10') == 3\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2 4 3 3 2\\n') == '2'\nassert solution('1\\n100\\n') == '1'\nassert solution('6\\n1 2 4 3 3 2\\n') == '2'\nassert solution('6\\n1 2 4 3 3 2\\n') == '2'\nassert solution('6\\n1 2 4 3 3 2\\n') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2 4 3 3 2\\n') == '2'\nassert solution('1\\n100\\n') == '1'\nassert solution('6\\n10 20 30 40 50 60\\n') == '2'"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n100') == '2'\nassert solution('3\\n100') == '2'\nassert solution('4\\n100') == '4'\nassert solution('5\\n100') == '5'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''7\n7 7 7 7 7 7 7 7 7 7''') == '7'\nassert solution('''7\n1 2 4 3 3 2''') == '2'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 4 3 3 2') == 2\nassert solution('1 100') == 1\nassert solution('100') == 1\nassert solution('1000') == 1\nassert solution('1 1001') == 2\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('10 3\\n1 0 0 1 1 0 1 0 1\\n') == '2'\n\n\n\n'''\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n\n'''\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n3') == '3'\nassert solution('3\\n0') == '0'\nassert solution('1\\n0') == '-1'\nassert solution('1\\n1') == '2'\nassert solution('1\\n1\\n1') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"-1\"\nassert solution(\"10 3\") == \"-1\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n0 0 0 0 0\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"\nassert solution(\"10 10\\n0 0 1 1 0 1 0 0 0 1\") == \"-1\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 1 0 0 1') == '3'\nassert solution('5 3') == '2'\nassert solution('5 10') == '3'\nassert solution('10 3') == '2'\nassert solution('10 5') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n0 0 0 0 0\\n') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('7 5\\n0 0 0 0 0 0 0 0\\n') == '-1'\nassert solution('8 10\\n0 0 0 0 0 0 0 0 0\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('0 1 1 0 0 1') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '-1'\nassert solution('0 0 0 0 0') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 3\\n1 0 0 0 1\\n') == '3'\nassert solution('5 3\\n0 0 1 1 0\\n') == '2'\nassert solution('5 10\\n0 0 1 1 0 1 0 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 1 1 0 1 0 0 0 1\\n') == '3'\nassert solution('15 3\\n0 0 0 0 1 0 0 0 1 0 1 0 0 0\\n') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution(\n'''\n5 3\n1 0 0 0 1\n''') == '2'\n\nassert solution(\n'''\n5 10\n0 0 0 0 0\n''') == '-1'\n\nassert solution(\n'''\n10 3\n0 0 1 1 0 1 0 0 1\n''') == '3'\n\nassert solution(\n'''\n10 5\n0 0 1 1 0 1 0 0 1\n''') == '2'"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"3\") == 2\nassert solution(\"4\") == 4\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('100') == '10'\nassert solution('1000') == '100'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '3'\nassert solution('100') == '4950'\nassert solution('1000') == '796776'\nassert solution('10000') == '69972564'\nassert solution('100000') == '186044040610333'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('3') == ''\nassert solution('3\\n') == ''\nassert solution('3\\n1\\n2\\n3\\n4') == ''\nassert solution('3\\n2\\n1\\n3\\n4') == '1'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '3'\n'''\n    We need to generate a list of all possible combinations of 2 numbers of the range [1, n]\n    In the given example, we have 2 numbers of the range [1, 3] and 2 numbers of the range [2, 4].\n    We get the number of possible combinations is 4 = n * (n - 1) / 2.\n    If we count the elements, we have 2 * 3 = 6.\n    If we generate all possible combinations, we have:\n    1 * 1 = 1\n    1 * 2 = 2\n    1 * 3 = 3\n    1 * 4 = 4\n    2 * 1 = 2\n    2 * 2 = 4\n    2 * 3 = 6\n    3 * 1 = 3\n    3 * 2 = 6\n    3 * 3 = 9\n    Total = 12\n    \n    Each number of the range can be represented by a string of length 2.\n    For example, the numbers of the range [1, 3] can be represented by ['1', '11'], ['1', '21'], ['2', '12'].\n    We need to produce a string of length 2 * n, each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second combinations\n    5. We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We need to produce the string of length 2 * (n-1), each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second combinations\n    5. We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    \n    We need to produce the string of length 2 * n, each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second combinations\n    5. We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We need to produce the string of length 2 * (n-1), each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second combinations\n    5. We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    \n    We need to produce the string of length 2 * n, each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second combinations\n    5. We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    \n    We need to produce the string of length 2 * (n-1), each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second combinations\n    5. We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    \n    We need to produce the string of length 2 * (n-1), each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second combinations\n    5. We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    \n    We need to produce the string of length 2 * (n-1), each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second combinations\n    5. We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    \n    We need to produce the string of length 2 * (n-1), each element is a number of string.\n    We know that the total number of the combinations is:\n    (n-1) * (n-2) / 2\n    We can generate all the combinations in the following way:\n    1. Generate all the combinations of length (n-1)\n    2. For each element of the first combination, produce all the combinations of length (n-2)\n    3. For each element of the second combination, produce all the combinations of length (n-2)\n    4. We get the number of combinations is the product of the number of combinations in the first and second"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '3'\nassert solution('''10''') == '2'\nassert solution('''1''') == '0'\nassert solution('''20''') == '6'\nassert solution('''2''') == '0'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('5') == '3'\nassert solution('10') == '6'\nassert solution('100') == '25'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[:-1]\n'''"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(((()))\") == 3\nassert solution(\"()()()\") == 0\nassert solution(\"((()))\") == 0\nassert solution(\"(()\") == 0\nassert solution(\"\") == 0\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"(()\"\n) == 0\nassert solution(\n    \"(()(()\"\n) == 1\nassert solution(\n    \"()()()\"\n) == 3\nassert solution(\n    \"()()()()\"\n) == 0\nassert solution(\n    \"(()(()()\"\n) == 2\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('((()') == 0\nassert solution(')())()') == 3\nassert solution('()()') == 0\nassert solution('())))(((') == 3\nassert solution('))))))(((') == 2\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('((()') == 3\nassert solution('))(') == 0\nassert solution('())(') == 0\nassert solution('(()') == 1\nassert solution('()())') == 1\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 0\n\n\"\"\"\n\n\nimport sys\n\n\"\"\"\nstdin = input()\nn = int(stdin)\n\nassert 1 <= n <= 10**6"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(((()'\nassert solution('()()()'\nassert solution(')))('\nassert solution(')(()'\nassert solution(')((((('\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('(((()') == '0'\nassert solution('))())') == '0'\nassert solution('()()()') == '0'\nassert solution(')()()') == '0'\nassert solution('())((()())') == '1'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('(((()' == solution(input()))\n\nassert solution('(((()))' == solution(input()))\n\nassert solution('((((()))' == solution(input()))\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''((()\n''') == '0'\n\nassert solution('''()()()\n''') == '0'\n\nassert solution(''')))(((\n''') == '0'\n\nassert solution(''')))(\n''') == '0'\n\nassert solution('''()()\n''') == '0'"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('qwerty', 'fghj') == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bbaba', 'bb', '3') == '3'\nassert solution('baaba', 'ab', '2') == '2'\nassert solution('abcde', 'abcde', '0') == '0'\nassert solution('asdfasdf', 'fasd', '3') == '3'\nassert solution('bb', 'ba', '3') == '3'"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('a', 'a') == 0\n\n\nprint(solution(input(), input()))\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"asdfasdf\", \"asdfasdf\") == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"asdf\", \"fasd\") == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('acdcb', 'acdb') == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 3\n'''\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\", \"bb\") == 3\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"abcde\", \"abcde\") == 0\nassert solution(\"asdfasdf\", \"fasd\") == 3\nassert solution(\"qwertyuiop\", \"yuopq\") == 3\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bbaba', 'bb') == 3\nassert solution('baaba', 'ab') == 2\nassert solution('abcde', 'abcde') == 0\nassert solution('asdfasdf', 'fasd') == 3\nassert solution('fkasdfasdf', 'fasd') == 3\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 2 1') == '2'\nassert solution('1 1 2 1') == '2'\nassert solution('1 1 2 1') == '2'\nassert solution('1 1 2 1') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '2'\n\"\"\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('1 2 1 2') == '2'\nassert solution('1 2 1 2') == '2'\nassert solution('1 2 1 2') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('1 2 2 2') == '4'\nassert solution('1 2 1 2') == '2'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[3]\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"3 4 3 3\") == \"12\"\nassert solution(\"-1 1 1 1\") == \"-1\"\nassert solution(\"3 -1 -1 -1\") == \"0\"\nassert solution(\"1 0 1 1\") == \"0\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '4'\nassert solution('1 1 1 1') == '8'\nassert solution('1 2 1 1') == '2'\nassert solution('2 2 1 1') == '4'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1,1,1,1) == 1\nassert solution(2,1,1,1) == 2\nassert solution(1,1,1,2) == 2\nassert solution(2,1,1,2) == 4\nassert solution(1,1,2,1) == 2\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 3 2') == '4'\nassert solution('2 1 2 1') == '2'\nassert solution('1 1 2 3') == '4'\nassert solution('1 1 1 1') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('1\\n1') == '1'\n\"\"\""
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n9''') == '1'\nassert solution('''6\n1 1 4 4 6 7''') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('9\\n1 4 4 6 7') == '3'\nassert solution('4\\n1 2 4 4') == '3'\nassert solution('5\\n1 2 4 4 5') == '2'\nassert solution('6\\n1 2 4 4 6 7') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('10\\n
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\n\"\"\"\n\nn = int(input().strip())\nk = int(input().strip())\n\ncount = 0\nfor i in range(1, k + 1):\n    count += int(n / k)\nprint(count)"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''4\n9 1 4 4 6 7''') == '2'\nassert solution('''5\n9 1 4 4 6 7''') == '1'\nassert solution('''6\n10 1 4 4 6 7''') == '0'\nassert solution('''7\n10 1 4 4 6 7''') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\n\"\"\"\n\nfrom math import log\n\nnum_cases = int(input())\nfor _ in range(num_cases):\n    n = int(input())\n    d = list(map(int, input().split()))\n    \n    # solve for d_1\n    count_1 = 0\n    for i in range(1, n):\n        if i <= d[i-1]:\n            count_1 += 1\n    \n    # solve for d_2\n    count_2 = 0\n    for i in range(1, n):\n        if i <= n-i:\n            count_2 += 1\n    \n    # print the result\n    print(min(count_1, count_2))\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 1 4 4 6 7') == '2'\nassert solution('9 1 4 4 6 6') == '0'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n9 1 4 4 6 7''') == '2'\nassert solution('''5\n1 1 2 3 4''') == '3'\nassert solution('''6\n1 1 2 3 4 5''') == '3'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''8\n5 1 2 1 1 1 1''') == '3'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n4\\n4\\n4\\n4\\n4') == '1'\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == '0'\nassert solution('3\\n5\\n5\\n5\\n5\\n5') == '1'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4 12 2 3\\n1 3 1 2') == '3'\nassert solution('1 5 2 3\\n1 2 1 2') == '4'\nassert solution('2 4 10 2 3\\n2 1 2 1') == '3'\nassert solution('3 4 10 2 3\\n3 2 1 2') == '2'\nassert solution('4 4 10 2 3\\n4 2 1 2') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 24 21 23') == '3'"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 22\n16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 22\n16 17 14 19 19 11 22''') == '2'\nassert solution('''7 24 21 22\n16 17 14 19 19 11 22''') == '2'\nassert solution('''7 24 21 22\n16 17 14 19 19 11 22''') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('16 17 14 20 20 11 22') == '3'\nassert solution('15 17 14 20 20 11 22') == '3'\nassert solution('16 17 14 20 19 11 22') == '2'\nassert solution('15 17 14 20 19 11 22') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''4 1 2 3 4''') == '0'\nassert solution('''3 1 2 3''') == '2'\nassert solution('''2 4 1 3''') == '1'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('16 17 14 20 20 11 22') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 19''') == '4'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\\\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\n\nassert solution(\n'''\\\n5\n2 10 50 110 250\n''') == '1'\n\nassert solution(\n'''\\\n6\n4 7 12 100 150 199\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n10\n1 2 5 6 7 10 21 23 24 49\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n5\n2 10 50 110 250\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n6\n4 7 12 100 150 199\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n0\n2 10 50 110 250\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n1\n2 10 50 110 250\n\"\"\") == \"0\""
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"1\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\n'''\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2\\n1 2') == '2'\nassert solution('3\\n1 2 3\\n1 2 3') == '2'\nassert solution('4\\n1 2 3 4\\n1 2 3 4') == '2'\nassert solution('5\\n1 2 3 4 5\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10''') == '4'\nassert solution('''5''') == '1'\nassert solution('''6''') == '3'\nassert solution('''1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''2 10 50 110 250''') == '1'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\\n\") == \"4\\n\"\nassert solution(\"5\\n2 10 50 110 250\\n\") == \"1\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '1'\nassert solution('3\\n1\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n2\\n2\\n2\\n2\\n1\\n2\\n1\\n2\\n2\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8\\n1 2 5 6 7 10 21 23 24 49\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('10\\n2 10 50 110 250\\n1 2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n1 2 10 50 110 250') == '3'\nassert solution('3\\n3 4 7 12\\n1 2 10 50 110 250') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''5\n2 10 50 110 250\n''') == '1'\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''5\n2 10 50 110 250\n''') == '1'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''2\n5 2 11 3 7''') == '1 4'\nassert solution('''4\n2 5 11 3 7''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n1 2 11 3 7''') == '1 4'\nassert solution('''6\n4 5 10 1 10 2''') == '2 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n5\\n2 11 3 7\\n') == '1 2'\nassert solution('2\\n5\\n2 11 3 7\\n') == '1 4'\nassert solution('2\\n5\\n2 11 3 7\\n') == '1 4'\nassert solution('2\\n5\\n2 11 3 7\\n') == '1 4'\nassert solution('2\\n5\\n2 11 3 7\\n') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 8 3 6') == '1 2\\n'\nassert solution('5 2 11 3 7') == '1 4\\n'\nassert solution('6 2 10 1 10 2') == '1 4\\n'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2 11 3 7\") == \"1 4\"\nassert solution(\"2\\n5 2 11 3 7\\n\") == \"1 4\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1 2'\n'''\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\nassert solution('6 2 5 10 1 10 2') == '1 4'\n\n\"\"\"\n\nn = int(input())\nnums = list(map(int, input().split()))\n\nnums.sort()\n\nnums_set = set()\n\nfor i in range(n):\n    if i not in nums_set:\n        for j in range(i + 1, n):\n            if (nums[j] - nums[i]) % nums[i] == 0:\n                nums_set.add(i)\n                nums_set.add(j)\n                break\nprint(nums[0], nums[-1])"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n' + '1\\n' + '1\\n' + '1\\n' + '1\\n') == '1 1'\nassert solution('1\\n' + '2\\n' + '1\\n' + '1\\n' + '1\\n') == '1 2'\nassert solution('1\\n' + '5\\n' + '2\\n' + '3\\n' + '2\\n' + '1\\n') == '1 2'\nassert solution('1\\n' + '5\\n' + '2\\n' + '3\\n' + '2\\n' + '1\\n') == '1 4'\nassert solution('1\\n' + '5\\n' + '2\\n' + '3\\n' + '2\\n' + '1\\n') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n5 2 11 3 7') == '1 2'\nassert solution('2\\n2\\n5 2 11 3 7') == '1 4'\nassert solution('2\\n2\\n5 2 11 3 7') == '1 4'\nassert solution('2\\n2\\n5 2 11 3 7') == '1 4'\nassert solution('2\\n2\\n5 2 11 3 7') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == ''\nassert solution('''2 4 8 3 6''') == ''\nassert solution('''5''') == ''\nassert solution('''2 5 10 1 10 2''') == ''\nassert solution('''10''') == ''\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('121') == '021'\nassert solution('123') == '132'\nassert solution('1231') == '2132'\nassert solution('123123123') == '12312321323'\nassert solution('123123123123') == '123123123123123'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('121') == '021'\nassert solution('221010') == '221020'\nassert solution('120110') == '120120'\nassert solution('1210110') == '1210120'\nassert solution('12101100') == '12101200'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('121') == '021'\nassert solution('0122') == '0102'\nassert solution('001122') == '0120'\nassert solution('10001100') == '10011011'\nassert solution('11100011') == '1101100'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('21') == '120'\nassert solution('2112') == '21120'\nassert solution('120110') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('22') == '222'\nassert solution('111') == '1111'\nassert solution('11') == '100'\nassert solution('1101') == '101001'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'\nassert solution('000000') == '001122'\n\nprint('All Tests past')\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('121') == '021'\nassert solution('123456789') == '001122'\nassert solution('0000') == '000'\nassert solution('001122') == '10020'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('211200') == '211200'\nassert solution('120110') == '120120'\nassert solution('111222333') == '1112223133'\nassert solution('112220211') == '112222011'\nassert solution('112220211') == '112222011'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n0 1 2 3\n''') == '10'\n\nassert solution('''\n5 5\n0 1 2 3 4 5\n''') == '64'\n\nassert solution('''\n10 10\n0 1 2 3 4 5 6 7 8 9 10\n''') == '496\n\nassert solution('''\n3 1\n0\n''') == '1'\n\nassert solution('''\n2 2\n0 1\n2\n''') == '3'"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2') == '2'\nassert solution('4\\n1') == '1'\nassert solution('4\\n2') == '2'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 1') == 4\nassert solution('3 1') == 1\nassert solution('6 2') == 2\nassert solution('6 3') == 2\nassert solution('6 4') == 2\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '4'\nassert solution('2 2') == '4'\nassert solution('3 3') == '9'\nassert solution('3 3') == '9'\nassert solution('4 4') == '16'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 4\") == \"2\"\nassert solution(\"6 5\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 1\\n3') == '4'\nassert solution('6 1\\n3\\n3') == '6'\nassert solution('6 1\\n3\\n3\\n3') == '12'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n6 1\n3\n''') == '4'\nassert solution('''\n6 1\n4\n''') == '1'\nassert solution('''\n5 2\n1\n2\n2\n2\n2\n2\n''') == '3'\nassert solution('''\n5 2\n1\n2\n2\n3\n3\n''') == '2'\nassert solution('''\n6 2\n3\n4\n5\n6\n7\n''') == '0'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_stdin_after\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 4 0') == '0'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '1'\nassert solution('10 10 10') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 2 4''') == '2'\nassert solution('''1 3 3''') == '0'\nassert solution('''10 10 10''') == '0'\nassert solution('''10 10 15''') == '0'\nassert solution('''1 100 100''') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('7 2 4') == '3'\nassert solution('10 3 2') == '2'\nassert solution('10 15 2') == '5'\nassert solution('10 1 6') == '3'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 2 4') == '2'\nassert solution('6 2 4') == '2'\nassert solution('6 2 4') == '2'\nassert solution('6 2 4') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('5 3 4') == '2'\nassert solution('0 1 1') == '1'\nassert solution('2 1 1') == '1'\nassert solution('2 2 1') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 1 1') == '0'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n'''\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'\nprint('All test cases passed!')"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''11''') == 2\nassert solution('''14''') == 0\nassert solution('''61441''') == 2\nassert solution('''571576''') == 10\nassert solution('''2128506''') == 3"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11') == 2\nassert solution('14') == 0\nassert solution('61441') == 2\nassert solution('571576') == 10\nassert solution('2128506') == 3\n\nimport math\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''11\n''') == '2'\n\nassert solution('''14\n''') == '0'\n\nassert solution('''61441\n''') == '2'\n\nassert solution('''571576\n''') == '10'\n\nassert solution('''2128506\n''') == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9') == '2'\nassert solution('18') == '0'\nassert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('9') == 1\nassert solution('99999') == 1\nassert solution('56') == 2\nassert solution('68') == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11\n''') == 2\nassert solution('''14\n''') == 0\nassert solution('''61441\n''') == 2\nassert solution('''571576\n''') == 10\nassert solution('''2128506\n''') == 3"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(3) == 27\nassert solution(5) == 135\nassert solution(10) == 253\nassert solution(15) == 1085\nassert solution(20) == 27777\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"27\"\n\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3) == 27\nprint(solution(3))\nprint(\"Correctness checked\")\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '27'\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('1') == 1\nassert solution('2') == 4\nassert solution('3') == 9\nassert solution('4') == 16\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == 27\nassert solution('''9''') == 81\nassert solution('''27''') == 81\nassert solution('''123456789''') == 72913828922\nassert solution('''9473798373''') == 72913828922\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == None\n\"\"\""
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == 27\n\n'''\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('999') == '1'\nassert solution('900') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\nprint('Tests passed successfully')\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\n\n\"\"\"\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('-10') == '1'\nassert solution('-927') == '1'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nprint(solution('2543'))\nprint(solution('10'))"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n2 5 3 1') == '4'\nassert solution('3\\n3 2 1') == '1'\nassert solution('2\\n1 1') == '1'\nassert solution('10\\n1 1 2 1 1 3 1 2 1') == '2'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n2 5 3 1''') == '4'\n\nassert solution('''1\n3''') == '2'\n\nassert solution('''4\n-7 -4 -9 -2''') == '-8'\n\nassert solution('''11\n12 3 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10''') == '-1'\n\n\n-----Same Test Set as a7.py-----\n\n'''\n\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5 3 1') == '4'\nassert solution('3 1 2 1') == '2'\nassert solution('5 1 2 3 4') == '2'\nassert solution('1 3 1 4 2') == '4'\nassert solution('2 4 4 3 3') == '1'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2 5 3 1') == '4'"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"4\n2 5 3 1\"\"\"\n) == 4\nassert solution(\n\"\"\"7\n4 2 1 7 7 4 1 7\"\"\"\n) == 8\nassert solution(\n\"\"\"3\n5 4 3\"\"\"\n) == 5\nassert solution(\n\"\"\"1\n1\"\"\"\n) == 1\nassert solution(\n\"\"\"2\n1 1\"\"\"\n) == 0\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n2 5 3 1') == 4\nassert solution('4\\n2 5 3 1') == 4\nassert solution('4\\n2 5 3 1') == 4\nassert solution('4\\n2 5 3 1') == 4\nassert solution('4\\n2 5 3 1') == 4\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('stdin') == '4'\n\n-----Solutions Overview-----\n\nThe code is only good until it gets into the 'while' statement.\n\nInstead, we need to call a separate function to recursively\nsolve the problem.\n\n---"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3 1\n4 5\n''') == '4'\nassert solution('''4\n2 5 3 1\n''') == '4'\nassert solution('''9\n2 3 2 2 5 1 1 6 4\n''') == '4'\nassert solution('''5\n3 2 1 4 2 5\n''') == '1'\nassert solution('''9\n1 3 2 2 4 5 4 2 3\n''') == '8'\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 2 4 8\"\n\n\n\"\"\"\n\nfrom functools import reduce\nfrom operator import xor\n\nn = int(input())\nnums = list(map(int, input().split()))\n\nprint(reduce(xor, nums))\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''5 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\nassert solution(\n    '''5 6\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '8'\nassert solution(\n    '''5 7\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '1'\nassert solution(\n    '''5 6\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '8'\nassert solution(\n    '''7 9\n1 6\n1 9\n1 6\n1 6\n1 6\n1 6\n1 6\n1 6\n1 6\n1 6\n1 6\n1 6''') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcdefghij') == '2'\nassert solution('abcdefgh') == '2'\nassert solution('abcd') == '3'\nassert solution('a') == '1'\nassert solution('ab') == '2'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''7 7\n7 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2\\n8\\n1\\n999999733\\n1'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == None\nassert solution('3') == None\nassert solution('2 3') == None\nassert solution('10 2') == None\nassert solution('2 3 4 3') == None\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('asdf') == 'asdf'\nassert solution('a') == 'a'\nassert solution('hi') == 'hi'\nassert solution('hel') == 'hel'\nassert solution('h') == 'h'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2\\n8\\n1\\n999999733\\n1'\n'''\n\n\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n0\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '2'\nassert solution('3\\n3\\n') == '3'\nassert solution('4\\n2\\n') == '2'\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\nassert solution('''8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '8'\nassert solution('''8 1\n6 10\n99999983 99999972''') == '1'\nassert solution('''8 1\n9 1\n9 9\n99999983 99999972''') == '9'\nassert solution('''8 1\n1 1\n1 9\n99999983 99999972''') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('1 10\\n
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2') == '1'\nassert solution('3 3\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('3 3\\n2 1 2\\n1 2\\n0 1\\n0 1') == '2'\nassert solution('3 3\\n2 1 2\\n1 2\\n0 1\\n0 1\\n0 1') == '3'\nassert solution('4 3\\n2 1 2 3 4\\n1 2\\n0 1\\n0 1\\n0 1\\n0 1') == '2'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\"\"\"\n\n\"\"\"\n-----Description of the problem-----\n\nWe have N switches with \"on\" and \"off\" state, and M bulbs. The switches are numbered 1 to N, and the bulbs are numbered 1 to M.\nBulb i is connected to k_i switches: Switch s_{i1}, s_{i2},..., and s_{ik_i}. It is lighted when the number of switches that are \"on\" among these switches is congruent to p_i modulo 2.\nHow many combinations of \"on\" and \"off\" states of the switches light all the bulbs?\n\n-----Constraints-----\n - 1 \\leq N, M \\leq 10\n - 1 \\leq k_i \\leq N\n - 1 \\leq s_{ij} \\leq N\n - s_{ia} \\neq s_{ib} (a \\neq b)\n - p_i is 0 or 1.\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nk_1 s_{11} s_{12}... s_{1k_1}\n:\nk_M s_{M1} s_{M2}... s_{Mk_M}\np_1 p_2... p_M\n\n-----Output-----\nPrint the number of combinations of \"on\" and \"off\" states of the switches that light all the bulbs.\n\n-----Sample Input-----\n2 2\n2 1 2\n1 2\n0 1\n\n-----Sample Output-----\n1\n\n\"\"\""
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''3 2\n1 2 1\n1 1\n0 1''') == '1'\nassert solution('''1 1\n1\n0''') == '0'\nassert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 2\\n\") == \"0\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 2\\n\") == \"0\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 2\\n\") == \"0\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\n\nassert solution('''3 3\n1 1 1\n2 2 2\n3 3 3\n3 3 3\n2 2 2\n2 2 2''') == '3'\n\nassert solution('''10 10\n1 1 1 1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3 3 3 3 3\n4 4 4 4 4 4 4 4 4 4 4 4\n5 5 5 5 5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7 7 7 7 7\n8 8 8 8 8 8 8 8 8 8 8 8\n9 9 9 9 9 9 9 9 9 9 9 9\n10 10 10 10 10 10 10 10 10 10''') == '1'\n\nprint(solution(input()))"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"1 2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\""
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n\n'''\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"3 3\\n3 1 3\\n1 3\\n0 1\\n2 1\\n2 2\") == \"2\"\nassert solution(\"3 2\\n3 1 3\\n1 3\\n0 1\\n2 1\\n2 2\") == \"0\"\nassert solution(\"3 2\\n3 1 3\\n1 3\\n0 1\\n2 1\\n2 2\") == \"0\"\nassert solution(\"3 2\\n3 1 3\\n1 3\\n0 1\\n2 1\\n2 2\") == \"2\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n\"\"\""
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 2\") == \"2.7777777777777778\"\nassert solution(\"3 4 9 4\") == \"1.732702702702703\"\nassert solution(\"3 4 9 6\") == \"0.4814814814814814\"\nassert solution(\"3 4 9 8\") == \"0.23076923076923075\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 2 3 4') == '1.4142135623730951'\nassert solution('3 4 7 0') == '2.8284271247461903'\nassert solution('3 4 8 0') == '2.23606797749979'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5.00000000000000000000\"\n\"\"\""
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 4 0') == '5.00000000000000000000'\nassert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 4 0') == '5.00000000000000000000'\nassert solution('3 4 9 0') == '5.00000000000000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"7.00000000000000000000\"\nassert solution(\"4 4 9 0\") == \"3.00000000000000000000\"\nassert solution(\"5 4 9 0\") == \"1.00000000000000000000\"\nassert solution(\"6 4 9 0\") == \"0.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 8 0') == '2.7999999999999999'\nassert solution('1 3 4 0') == '0.90000000000000002'\nassert solution('1 1 1 0') == '0.0'\nassert solution('3 3 3 0') == '0.5'\n"
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 4 9 0\") == \"5.00000000000000000000\"\n\nassert solution(\n    \"3 4 4 7 0\") == \"3.000000000000000973\"\n\nassert solution(\n    \"4 3 4 7 0\") == \"5.00000000000000000000\"\n\nassert solution(\n    \"4 3 2 0\") == \"2.9999999999999993\"\n\nassert solution(\n    \"4 3 1 0\") == \"2.9999999999999992\""
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''3 1\n1 1 1''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\nassert solution('''2 2\n1 1 1''') == '4'\nassert solution('''15 1\n1 2 3 1 2 3 1 2 3 1 2 3''') == '1'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 1\n1 1 1''') == '6'\nassert solution('''5 4\n1 4 5 60 4''') == '8'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\n\n\n\"\"\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4''') == '8'\nassert solution('''3 1''') == '6'\nassert solution('''15 2''') == '97'\nassert solution('''6 4''') == '96'\nassert solution('''18 10''') == '2184'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'\nassert solution('5 2\\n1 4 5 60 4') == '8'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 4 5 60 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\nassert solution('1 1 1') == '6'\nassert solution('1 2 3 1 2 3 1 2 3 1 2 3') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\nassert solution('''15 3\n1 2 3 1 2 3 1 2 3 1 2 3\n''') == '60'\nassert solution('''15 4\n1 2 3 1 2 3 1 2 3 1 2 3\n''') == '72'"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 -1 3 1 2') == '6'\nassert solution('1 -1 3 1 4') == '7'\nassert solution('1 -1 -1 -1 -1') == '0'\nassert solution('1000000') == '0'\nassert solution('2 -2 3 1 2') == '6'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0\\n1000000') == '0'\nassert solution('2 0\\n1000000') == '0'\nassert solution('2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '7'\nassert solution('2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '7'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n1 4\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('1 0\\n1000000\\n') == '0\\n0\\n'\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000000') == '0'\nassert solution('2 -2 3 1 2') == '6'\nassert solution('2 3 1 2') == '7'\nassert solution('1 3') == '2'\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == result, \"Actual result: {}; Expected result: {}\".format(solution(stdin), result)\n\"\"\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000000\\n') == '0'\nassert solution('1000000\\n') == '0'\nassert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''abcd\nefgh\nijkl\nmnop\n''') == 'No\\nYes\\nYes\\nNo'\nassert solution('''bab\ncab\nabd\n''') == 'Yes\\nYes\\nYes'\nassert solution('''axab\nxax\nxa\nxa\n''') == 'Yes\\nNo\\nYes\\nYes'\nassert solution('''abc\ncba\ncab\n''') == 'Yes\\nNo\\nYes\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == 'Yes\\nNo\\nYes\\nNo\\nYes\\nNo\\nYes\\nNo\\nYes\\nNo\\nYes\\nNo\\nYes\\nNo'\n\nassert solution('''ab\nba\ncd\n''') == 'Yes\\nYes\\nYes'\nassert solution('''cd\ncd\n''') == 'No'\nassert solution('''a\na\nb\nb\nc\nc\n''') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('foo') == 'No'\nassert solution('z') == 'Yes'\nassert solution('bad') == 'No'\nassert solution('az') == 'No'\nassert solution('aa') == 'Yes'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbac\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('az\\naa\\nbac\\nbabc\\n') == 'Yes\\nNo\\nNo\\nNo'\nassert solution('az\\naa\\nbac\\nbabc\\n') == 'No\\nNo\\nNo\\nNo'\nassert solution('az\\naa\\nbac\\nbabc\\n') == 'No\\nNo\\nNo\\nNo'\nassert solution('aa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('fced\\nxyz\\nr\\ndabcef\\na\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\""
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/02') == '6'\nassert solution('inputs/03') == '7'\nassert solution('inputs/04') == '0'\nassert solution('inputs/05') == '1'\nassert solution('inputs/06') == '2'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 -3 1 2') == '6'\nassert solution('3 5') == '2'\nassert solution('2 4') == '4'\nassert solution('1 3') == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == \"6\\n2\\n4 1\\n\"\nassert solution(\"1000000\\n\") == \"0\\n0\\n\"\nassert solution(\"1000000\\n2\\n\") == \"0\\n0\\n\"\nassert solution(\"1000000\\n2\\n2\\n\") == \"0\\n0\\n\"\nassert solution(\"1000000\\n2\\n1\\n1\\n\") == \"0\\n0\\n\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"2 -2 3 1 2\") == \"6\"\nassert solution(\"1 3\") == \"2\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == '6\\n7\\n'\nassert input[:1] == '5 4\\n'\nassert input[1:] == '2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n'"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''0 0\n0\n''') == '0'\nassert solution('''0 0\n0\n''') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n4 1\\n'\nassert solution('2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\nassert solution('1000000\\n') == '0\\n0\\n'\nassert solution('1000000\\n0\\n0\\n') == '0\\n0\\n'\nassert solution('1000000\\n0\\n0\\n0\\n0\\n') == '0\\n0\\n0\\n'\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\".join(stdin.split())) == \"LRLRLLL\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\nn = int(input())\n\nA = list(map(int,input().split()))\n\nk = 1\n\nfor i in range(len(A)):\n    if A[i] > A[k-1]:\n        k = i + 1\n\nprint(k)\n\nB = A[::-1]\n\nprint(\"\".join([\"L\" if x == x[::-1] else \"R\" for x in A]))\n\nprint(\"\".join([\"L\" if x == x[::-1] else \"R\" for x in B]))"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"5 1 2 4 3\") == \"\"\nassert solution(\"2 1 5 4 3\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''\n\nfrom collections import deque"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n-----\n\nTest Case:\n\ninput:\n3\n1 2 3\n\noutput:\n3\nLLL\n\ninput:\n7\n1 2 3 4 5 6 7 4 2\n\noutput:\n7\nLRLRLLL\n\ninput:\n4\n1 2 4 3\n\noutput:\n4\nLLRL\n\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 3 4 5\") == \"\"\nassert solution(\"1 2 4 3\") == \"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nIf $n$ is the number of elements in the sequence, the number of distinct values is $n^2$ and the maximum number of elements in a strictly increasing sequence is $n$. The number of the distinct values in the sequence is less than $n$ and therefore $n^2 < 2 \\cdot 10^5$.\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4\\nLRLR'\nassert solution('7\\n1 3 5 6 7 4 2\\n') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3\\n') == '3\\nLLL'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL'\nassert solution('5\\n1 2 3 4 5\\n') == '5\\nRRL'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''5\n6 5 4 3 2 4''') == '2'\nassert solution('''7\n6 5 4 3 2 4''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '1'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n2') == '2'\nassert solution('5\\n1 2 5 3 4') == '4'\nassert solution('2\\n1') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n5\\n') == '2'\nassert solution('2\\n4\\n') == '2'\nassert solution('2\\n3\\n') == '1'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\n\nassert solution('''2\n1 2\n''') == '2'\n\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n\nassert solution('''1\n5\n''') == '5'\n\nassert solution('''2\n1 2\n''') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2 1 5 3 4') == '2'\nassert solution('7 6 5 4 3 2 4 3') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2 1') == '2'\nassert solution('7 6 5 4 3 2 4 3') == '2'\n\n\n-----Answer-----\ncode:\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '3'\nassert solution('2\\n1 2') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '4'\nassert solution('''2''') == '2'\nassert solution('''7''') == '2'\nassert solution('''6 5 4 3 2 4 3''') == '2'\nassert solution('''10''') == '9'\n\n'''\n\n'''\n\n'''\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\n\n'''\nn, k = [int(x) for x in stdin.readline().split()]\narr = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''5 3''') == '1'\nassert solution('''2 2''') == '0'\nassert solution('''7 4''') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3''') == '1'\nassert solution('''5 3''') == '2'\nassert solution('''5 3''') == '0'\nassert solution('''3 5''') == '1'\nassert solution('''3 5''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n3\\n') == '1'\nassert solution('1\\n3\\n') == '1'\nassert solution('1\\n3\\n4\\n') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 4 5\\n1 2 3 3 3\\n\") == \"1\"\nassert solution(\"1 2 2 4 5\\n1 2 3 3 3\\n\") == \"2\"\nassert solution(\"1 2 2 4 5\\n1 2 3 3 3\\n\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 2 3 3 3\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5 1\") == \"2\"\nassert solution(\"1 2 3 3 3 1\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0\\n'\nassert solution('2\\n1') == '0\\n'\nassert solution('3\\n1') == '1\\n'\nassert solution('4\\n1') == '2\\n'\nassert solution('5\\n1') == '2\\n'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 3\\n1 2 3 3 3') == '2'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10') == '0'\nassert solution('10 5\\n1 1 1 1 1 1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''5 3\n1 2 3 3 3\n''') == '0'\nassert solution('''5 3\n1 2 3 3 2\n''') == '0'\nassert solution('''7 3\n5 7 3 7 7 7\n''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2 2 3 3 3') == '0'\nassert solution('1 2 3 3 3 3') == '2'\nassert solution('1 2 2 3 4 5') == '1'\n\n\n\"\"\""
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('2 0 0') == '0'\nassert solution('1 5 2') == '1'\nassert solution('100000 1 0') == '100000'\nassert solution('8 1000 1') == '1000'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 3 4''') == '4'\nassert solution('''8 5 10''') == '0'\nassert solution('''8 12 19''') == '1'\nassert solution('''1000000 1000000 1000000''') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 2') == '2'\nassert solution('8 3 1') == '1'\nassert solution('8 9 3') == '0'\nassert solution('10 9 3') == '1'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 10 10') == '10'\nassert solution('10 10 10') == '0'\nassert solution('10000000000 100000 1000') == '0'\nassert solution('10000000000 100000 1000') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('5 2 3') == '0'\nassert solution('1 2 3') == '3'\nassert solution('6 1 2') == '2'\nassert solution('3 3 1') == '1'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"1 5 3\") == \"3\"\nassert solution(\"10 3 2\") == \"3\"\nassert solution(\"1000000000 3 2\") == \"0\"\nassert solution(\"8 7 2\") == \"3\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 0 0') == '0'\nassert solution('2 1 2') == '2'\nassert solution('2 2 3') == '2'\nassert solution('2 3 1') == '2'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 17 8') == '1'\nassert solution('8 12 7') == '2'\nassert solution('8 17 9') == '2'\nassert solution('8 18 8') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 2') == '3'\nassert solution('8 3 1') == '2'\nassert solution('8 3 0') == '1'\nassert solution('8 2 1') == '0'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\") == \"48\\n4\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\") == \"-1\"\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\") == \"48\\n4\"\nassert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\") == \"-1\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\") == \"48\\n4\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n9\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n5\n''') == '4'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\n\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n5\\n8\\n') == '48'\nassert solution('1\\n3\\n5\\n8\\n') == '4'\nassert solution('2\\n2\\n4\\n5\\n8\\n') == '4'\nassert solution('2\\n5\\n8\\n') == '4'\nassert solution('3\\n9\\n15\\n27\\n') == '24'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2\n2 2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n1\n2 2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n2\n3 2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n2\n1\n2 1\n''') == '48'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n4\\n2\\n2\\n1\") == \"-1\"\nassert solution(\"2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\") == \"8\"\nassert solution(\"2\\n5\\n1\\n1\\n1\\n1\\n1\\n1\") == \"8\"\nassert solution(\"2\\n6\\n1\\n1\\n1\\n1\\n1\\n1\") == \"8\"\nassert solution(\"2\\n7\\n1\\n1\\n1\\n1\\n1\\n1\") == \"8\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\nUse a list of divisors to solve the problem in O(n) time.\n\"\"\""
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2\\n2\\n3\\n2') == '48'\nassert solution('1\\n5\\n2\\n4\\n2\\n3\\n2') == '24'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n9\n''') == '4'\nassert solution('''8\n1\n2\n''') == '-1'\nassert solution('''8\n2\n2\n2\n2\n''') == '-1'\nassert solution('''8\n2\n3\n2\n2\n2\n2\n2\n2\n''') == '-1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n8\\n8 2 12 6 4 24 16 3\") == \"48\"\nassert solution(\"1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_) == answer_)\n\n\"\"\"\n\nimport sys\n\n\"\"\"\n\n-----Input-----\n\n2\n8\n8 2 12 6 4 24 16 3\n1\n2\n\n-----Output-----\n\n48\n4\n\n-----Example-----\nInput\n2\n8\n8 2 12 6 4 24 16 3\n1\n2\n\nOutput\n48\n4\n\n\"\"\""
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n1 2 3 4 5'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 3 1\\n') == '2\\n1 3'\nassert solution('4\\n2 3 2 2\\n') == '2\\n2 3'\nassert solution('3\\n1 1 1\\n') == '1\\n1'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n5\\n5\\n1\\n6\\n1\\n') == '3\\n5 6 1'\nassert solution('2\\n4\\n2\\n4\\n4\\n') == '2\\n4'\nassert solution('5\\n6\\n6\\n6\\n6\\n') == '1\\n6'\nassert solution('6\\n6\\n6\\n6\\n6\\n') == '1\\n6'\nassert solution('6\\n6\\n6\\n6\\n6\\n') == '1\\n6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '3'\n\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\n\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\nassert solution('''\n5\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n4\n1 2 3 4\n''') == '2'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('5\\n5 5 5 5 5\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n1 2 3 4 5'\n\n\"\"\""
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 1') == '2\\n1'\nassert solution('5\\n2 4 2 4 4') == '2\\n4'\nassert solution('6\\n6 6 6 6 6') == '1\\n6'"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6'\nassert solution('1\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5 5 1 6 1') == '3'\nassert solution('2 4 2 4 4') == '2'\nassert solution('5 6 6 6 6 6') == '1'\nassert solution('7 7 7 7 7 7') == '7'\nassert solution('2 4 2 4 4') == '2'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n6 6 6 6 6\\n') == '1\\n6 '\nassert solution('3\\n5 6\\n') == '2\\n5 6\\n'\nassert solution('5\\n2 4 2 4 4\\n') == '2\\n2 4\\n'\nassert solution('5\\n6 6 6 6 6\\n') == '1\\n6 '\nassert solution('1\\n1\\n') == '1\\n1\\n'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"6\\n1 5 5 1 6 1\\n\"\n) == \"3\\n5 6 1\\n\"\n\nassert solution(\n\"5\\n2 4 2 4 4\\n\"\n) == \"2\\n2 4\\n\"\n\nassert solution(\n\"5\\n6 6 6 6 6\\n\"\n) == \"1\\n6\\n\"\n\nassert solution(\n\"5\\n2 4 2 4 4\\n\"\n) == \"1\\n2 4\\n\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'') == ''\nassert solution(\n'') == ''\nassert solution(\n'') == ''\nassert solution(\n'') == ''\nassert solution(\n'') == ''\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\nprint('Test cases passed')\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('43') == '44'\nassert solution('99') == '103'\nassert solution('932') == '935'\nassert solution('237') == '237'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"432\"\n) == \"435\"\nassert solution(\n    \"99\"\n) == \"103\"\nassert solution(\n    \"237\"\n) == \"237\"\nassert solution(\n    \"42\"\n) == \"44\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('333') == '333'\nassert solution('333') == '333'\nassert solution('232') == '233'\nassert solution('33') == '333'\nassert solution('34') == '343'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100') == '101'\nassert solution('123') == '124'\nassert solution('1000000') == '1000001'\nassert solution('37') == '38'\nassert solution('100000') == '101000'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac','should return \"aac\" for input: abac'\nassert solution('''\nabc\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b','should return \"b\" for input: abac'\nassert solution('''\nabc\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aab','should return \"aab\" for input: abac'\nassert solution('''\nabc\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'codeforces','should return \"codeforces\" for input: abac'\nassert solution('''\nabc\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'codeforces','should return \"codeforces\" for input: abac'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('abc') == 'a'\nassert solution('ecoosdcefr') == 'e'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc') == 'a'\nassert solution('aab') == 'b'\nassert solution('abac') == 'a'\nassert solution('ababc') == 'ab'\nassert solution('abacab') == 'abc'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1''') == 'aac'\nassert solution('''abc\n1\n0\nabc\n1\n0\n''') == 'b'\nassert solution('''abc\n1\n0\nabc\n1\n0\n''') == 'codeforces'\nassert solution('''ecoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == ''\nassert solution('''codeforces\n10\n38 13 24 14 11 5 3 24 17 0\n''') == ''\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('aabbc') == 'abc'\nassert solution('ababca') == 'abac'\nassert solution('abacabac') == 'abac'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''abac''') == 'aac'\nassert solution('''abc''') == 'b'\nassert solution('''abac''') == 'aac'\nassert solution('''abc''') == 'b'\nassert solution('''ecoosdcefr''') == 'codeforces'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abc') == 'a'\nassert solution('abc') == 'b'\nassert solution('abc') == 'c'\nassert solution('abc') == 'a'\nassert solution('abc') == 'b'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\", \"First\"\nassert solution('''acb\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"a\", \"Second\"\nassert solution('''acb\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"ab\", \"Third\"\nassert solution('''acb\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"b\", \"Fourth\"\nassert solution('''acb\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"ac\", \"Fifth\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('ecoosdcefr') == 'eforces'\nassert solution('abc') == 'b'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'b'\nassert solution('abba') == 'codeforces'\nassert solution('codeforces') == 'codeforces'\nassert solution('e') == 'e'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"b\"\nassert solution(\"27\") == \"b\"\nassert solution(\"27\") == \"b\"\nassert solution(\"27\") == \"b\"\nassert solution(\"27\") == \"b\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"b\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 'b'\nassert solution('99') == 'zy'\nassert solution('300') == 'zz'\nassert solution('744') == 'zzz'\nassert solution('123456789') == 'aaaaaaaaaaaaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('10') == 'b'\nassert solution('14') == 'z'\nassert solution('15') == 'aa'\nassert solution('20') == 'az'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == 'b'\nassert solution('''7''') == 'zz'\nassert solution('''27''') == 'zy'\nassert solution('''277''') == 'zzz'\nassert solution('''277''') == 'zzz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'b'\nassert solution('2') == 'b'\nassert solution('9') == 'z'\nassert solution('13') == 'zy'\nassert solution('19') == 'zyz'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"b\"\nassert solution(\"1000000000000001\") == \"z\"\nassert solution(\"5\") == \"a\"\nassert solution(\"55\") == \"aa\"\nassert solution(\"78\") == \"ab\"\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'b'\nassert solution('1000000000000001') == 'z'\nassert solution('100') == 'a'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('26') == 'z'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'b'\nassert solution('1') == 'b'\nassert solution('2') == 'a'\nassert solution('3') == 'z'\nassert solution('4') == 'y'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[2:6]\n\"\"\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a ab a a b ab a a b c'.split()) == 'TB or not TB'\nassert solution('aa bb aa aa bb bb'.split()) == 'a AAAB AAAB c'\nassert solution('aa bb aa aa bb bb'.split()) == 'AB aa AB bb'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''to be or not to be''') == 12\nassert solution('''a ab a a b ab a a b c''') == 13\nassert solution('''aa bb aa aa bb bb''') == 11\nassert solution('''aa bb aa aa bb bb''') == 11\nassert solution('''aa bb aa aa bb bb''') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''to be or not to be''') == 12\nassert solution('''a ab a a b ab a a b c''') == 13\nassert solution('''aa bb aa aa bb bb''') == 11\nassert solution('''aa bb aa aa bb bb''') == 11\nassert solution('''aa bb aa aa bb bb''') == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n6\nto be or not to be\n''') == '12'\n\nassert solution('''\n10\na ab a a b ab a a b c\n''') == '13'\n\nassert solution('''\n6\naa bb aa aa bb bb\n''') == '11'\n\nassert solution('''\n6\naa bb aa aa bb bb\n''') == '11'\n\nassert solution('''\n6\ncc ccc ccc ccc ccc\n''') == '0'"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"to be or not to be\") == 12\nassert solution(\"a ab a a b ab a a b c\") == 13\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"aa bb aa aa bb bb\") == 11\nassert solution(\"a ab aa bb bb\") == 11\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"a\"\n\n\"\"\""
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\nto be or not to be\n''') == 12\n\nassert solution('''10\na ab a a b ab a a b c\n''') == 13\n\nassert solution('''6\naa bb aa aa bb bb\n''') == 11\nassert solution('''2\naa\n''') == 2\nassert solution('''3\nabc\nabc\nabc\nabc\nabc\nabc\n''') == 4\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:7]\n\n\"\"\"\n\n__author__ ='sarangis'\n\nimport sys"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''to be or not to be\n''') == 12\nassert solution('''a ab a a b ab a a b c\n''') == 13\nassert solution('''aa bb aa aa bb bb\n''') == 11\nassert solution('''aa bb aa aa bb bb\n''') == 11\nassert solution('''aa bb aa aa bb bb\n''') == 11\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4000\\n2 2\"\n\"\"\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4000\\n2 2\"\n\n\"\"\""
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\") == \"20\\n3 2 3\"\nassert solution(\"5 1\\n1 1 1 1 1\\n\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\\n2 2\"\nassert solution(\"10 2\\n
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nassert solution('''2 1\n1 2''') == '2'\nassert solution('''2 1\n1 2''') == '2'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\n\nsys.stdin = open('in/47.in')\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20\\n3 2 3'\nassert solution('''5 1\n1 1 1 1 1''') == '1\\n5'\nassert solution('''4 2\n1 2000 2000 2''') == '4000\\n2 2'\nassert solution('''6 7\n1 1 2 3 4 5 6 7''') == '62\\n1 1 2 3 4 5'\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\na = [int(x) for x in stdin.readline().split()]"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8 3''') == '20'\nassert solution('''5 1''') == '1'\nassert solution('''4 2''') == '4000'\n'''\nn, k = [int(x) for x in stdin.split()]\nprint(solution('''5 4 2 6 5 1 9 2'''))\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''-5 -1 1 1 -1 -1''') == '0'\nassert solution('''4\n1 -5 3 2''') == '1'\nassert solution('''5\n4 -2 3 -9 2''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4''') == '3'"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"-1 1 -1 1 -1 1 1 -1 -1\") == \"3\"\nassert solution(\"16 -5 -11 -15 10 5 4 -4\") == \"0\"\nassert solution(\"9\") == \"0\"\nassert solution(\"4 -2 3 -9 2\") == \"1\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n1 -5 3 2\n''') == '1'\n\nassert solution(\n'''\n5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution(\n'''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\nassert solution('''2\n1\n2\n3\n4\n4\n4\n4\n4\n4\n4\n4\n''') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == ''\nassert solution('4\\n1 -5 3 2') == ''\nassert solution('5\\n4 -2 3 -9 2') == ''\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == ''\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 -5 3 2''') == '1'\nassert solution('''5\n4 -2 3 -9 2''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4''') == '3'\nassert solution('''15\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9''') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 -5 3 2''') == '1'\nassert solution('''5\n4 -2 3 -9 2''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4''') == '3'\n\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n2') == '0'\nassert solution('5\\n5') == '0'\nassert solution('1\\n100') == '0'\nassert solution('2\\n100') == '2'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 3\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''10\n1 100\n2 3\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000\\n100000000\\n100000000\\n100000000\\n100000000'\nassert solution('''10\n1 100\n2 3\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000\\n100000000\\n100000000\\n100000000\\n100000000'\nassert solution('''10\n1 100\n1 100\n2 3\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000\\n100000000\\n100000000\\n100000000\\n100000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n10') == '9'\nassert solution('2\\n10\\n100') == '99'\nassert solution('2\\n1\\n100') == '99'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''4\n1 2\n3 4\n5 6\n7 8''') == '0\\n1\\n2\\n4'\nassert solution('''4\n1 2\n2 3\n3 4\n5 6''') == '2\\n0\\n2\\n2'\n'''\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == result\n\"\"\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 3\n5 5\n2 1000000000\n1000000000 1000000000''') == '2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2\\n10\\n1000000000\\n2000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n0\\n1\\n2') == '2\\n4\\n4\\n1\\n0'\nassert solution('4\\n5\\n0\\n1\\n2') == '0\\n0\\n0\\n0'\nassert solution('5\\n5\\n0\\n1\\n2') == '0\\n0\\n0\\n0'\nassert solution('1\\n2\\n3\\n4\\n5') == '0\\n0\\n0\\n0'\nassert solution('100\\n1000000000') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 1 3') == '0'\nassert solution('2 3 1 2 1') == '2'\nassert solution('5 3 2 1 3') == '10'\nassert solution('5 3 2 1 3') == '10'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('101') == '4'\nassert solution('101') == '4'\nassert solution('101') == '4'\nassert solution('1000000007') == '-1'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[4]\n\"\"\""
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == str(solution(input()))\n\"\"\""
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('101') == 4\nassert solution('1') == -1\nassert solution('7') == 0\nassert solution('77') == 1\nassert solution('777') == 2\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('7') == '4'\nassert solution('77') == '4'\nassert solution('7777') == '4'\nassert solution('777777') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('101') == 4\n\"\"\"\n\"\"\"\nfrom collections import defaultdict\n\nK = int(input())\nnumbers = [int(stdin) for i in range(K)]\nmultiples = defaultdict(lambda: 0)\n\nfor number in numbers:\n    multiples[number] += 1\n\nfor i in range(1, K + 1):\n    if multiples[i]!= 0:\n        print(i)\n        break\nelse:\n    print(-1)\n\"\"\"\n\nfrom collections import defaultdict\n\nK = int(input())\nnumbers = [int(stdin) for i in range(K)]"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''101''') == '4'\nassert solution('''101\\n''') == '4'\nassert solution('''123''') == '-1'\nassert solution('''12345''') == '-1'\nassert solution('''1776''') == '7'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('101') == 4\nassert solution('102') == -1\nassert solution('103') == -1\nassert solution('103') == -1\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == 4\nassert solution('4') == 2\nassert solution('101') == 7\nassert solution('7') == 7\nassert solution('77') == 4\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('101') == '4'\nassert solution('101') == '4'\nassert solution('101') == '4'\nassert solution('101') == '4'\nassert solution('101') == '4'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '0'\nassert solution('3 2') == '1'\nassert solution('3 3') == '2'\nassert solution('3 4') == '3'\nassert solution('3 5') == '2'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\nassert solution('''15 5\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '1'\nassert solution('''10 10\n1 10 2 9 8 7 6 5 4 3 2 1\n''') == '0'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n1 2 3') == '2'\nassert solution('3\\n1\\n1 2 3') == '2'\nassert solution('2\\n1\\n1 2') == '1'\nassert solution('4\\n2\\n2 2 2') == '1'\nassert solution('3\\n1\\n1 2 3') == '1'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n'''\n    \n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\nassert solution('''1 10\n1 9 2 3 4 5 6 7 8 9 10''') == '10'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\n\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\n'''\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n1 2 3 4 5\\n') == '4'\nassert solution('2\\n1 2\\n') == '0'\nassert solution('2\\n1 2\\n1 2\\n') == '2'\nassert solution('2\\n1 2\\n1 2\\n1 2\\n') == '4'\nassert solution('1\\n10\\n1 2 3 4 5 6 7 8 9 10\\n') == '9'\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == 4\nassert solution('2 4 5 3 1') == 1\nassert solution('1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == 48\nassert solution('2 1 1 1 2 2 2 2 1 1') == 0\nassert solution('2 2 2 2 2 2 2 2 2 2 2 2 2 1 1') == 0\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4\\n'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1\\n'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48\\n'\n\n\n\n\"\"\"\n\n\"\"\"\nOn my first try, I did the same thing as the previous one but for the \nsecond sample, I had to add more code to handle the case in which there \nwere more than 2 elements in the input. After doing this I found that the \nsolution returned the correct answer.\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\n\nn, m = map(int, sys.stdin.readline().strip().split())\n\ncups = list(map(int, sys.stdin.readline().strip().split()))\n\nmin_days = 10**6\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5 8\n2 3 1 1 2\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n7 10\n1 3 4 2 1 4 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5 15\n5 5 5 5 5\n\"\"\"\n) == \"-1\"\n\nassert solution(\n\"\"\"\n5 26\n5 5 5 5 5\n\"\"\"\n) == \"-1\"\n\nassert solution(\n\"\"\"\n5 26\n5 5 5 5 5\n\"\"\"\n) == \"2\""
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 10\\n5 5 5 5 5\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 7\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 8\n2 3 1 1 2''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2''') == '2'\nassert solution('''5 26\n5 5 5 5 5 5''') == '-1'\nassert solution('''5 15\n5 5 5 5 5''') == '1'\nassert solution('''5 16\n5 5 5 5 5''') == '2'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4\\n'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2\\n'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1\\n'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1\\n'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1\\n'\n\n\n\"\"\"\n\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\ncups_of_coffee = list(map(int, stdin.readline().split()))\n\nsorted_cups = sorted(cups_of_coffee)"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\nassert solution('''2\n500 500\n''') == '0'\nassert solution('''3\n14 5 1\n''') == '-1'\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\nassert solution('''2\n500 500\n''') == '0'\nassert solution('''3\n14 5 1\n''') == '-1'\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('3\\n3\\n') == '1'\nassert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('5\\n500 500\\n') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 0\nassert solution('24 21 14 10') == 3\nassert solution('500 500') == 0\nassert solution('14 5 1') == 1\nassert solution('14 5 1') == 0\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n24 21 14 10\n'''\n) == '3'\n\nassert solution(\n'''\n2\n500 500\n'''\n) == '0'\n\nassert solution(\n'''\n3\n14 5 1\n'''\n) == '-1'\n\nassert solution(\n'''\n5\n1 3 6 9 12\n'''\n) == '1'\n\nassert solution(\n'''\n5\n10 20 30 40 50\n'''\n) == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n\nassert solution('''6\n1 3 6 9 12 15\n''') == '0'"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n24 21 14 10\n''') == '3'\n\nassert solution('''2\n500 500\n''') == '0'\n\nassert solution('''3\n14 5 1\n''') == '-1'\n\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('4\\n1 3 6 9 12\\n') == '1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('6 1 36 4 1 25 9 16') == '2'\nassert solution('4 4 1 10 100 1000') == '4'\nassert solution('1 10 100 1000') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''7 1\n9 3 5 9 9 9 9\n''') == '4'\nassert solution('''10 4\n29 2 1 12 2 1 8 3\n''') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('1 2') == '1'\nassert solution('3 3') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\nassert solution('1 2 15 15 15') == '5'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2 15 15 15\n1 2 15 15 15\n''') == '5'\nassert solution('''4 1\n36 4 1 25 9 16\n''') == '4'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''5 3\n1 2 15 15 15\n''') == '3'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 10 100 1000\\n') == '2'\nassert solution('5 2\\n1 2 15 15 15\\n') == '5'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2'\nassert solution('1 10 100 1000\\n') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''6 1\n1 2 3 4 5 6\n''') == '6'\nassert solution('''3 1\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"8\"\nassert solution(input2) == \"7\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"1 10 1\\n1 10 1\\n\") == \"0\"\nassert solution(\"1 10 1\\n1 10 1\\n\") == \"0\"\nassert solution(\"1 10 1\\n1 10 1\\n\") == \"-1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 1 1') == '-1'\nassert solution('5 10 7') == '8'\nassert solution('5 10 7') == '8'\n\"\"\"\nfrom sys import stdin, stdout\ninput = stdin.readline\n\nN, K, M = map(int, input().split())\n\nA = [int(x) for x in input().split()]\n\nscore = [0]*(N+1)\nfor i in range(N-1):\n    score[i+1] = score[i]+A[i]"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 7 8') == '8'\nassert solution('5 10 7') == '8'\nassert solution('8 10 7') == '8'\nassert solution('8 10 7') == '8'\nassert solution('5 10 7') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 5 5\") == \"0\"\nassert solution(\"2 4 4\") == \"-1\"\nassert solution(\"5 1 3\") == \"4\"\nassert solution(\"5 2 2\") == \"2\"\nassert solution(\"5 3 2\") == \"1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 100 7\\n8 10 3 6\\n') == '-1'\nassert solution('4 3 4\\n4 2 1 3\\n') == '3'\nassert solution('5 2 1\\n5 2 1\\n') == '2'\nassert solution('3 3 4\\n4 2 1 3\\n') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 10 7\n8 10 3 6''') == '8'\nassert solution('''4 11 5\n4 5 2 4\n3 2 3 4''') == '-1'\nassert solution('''3 10 1\n2 4 8\n1 5 10''') == '-1'\nassert solution('''4 10 3\n4 10 3\n3 10 3''') == '4'\nassert solution('''5 10 7\n8 10 3 6\n4 5 2 4''') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('5 10 5') == '-1'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3\\n1\\n3') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('10 3 10\\n1\\n3\\n2\\n3\\n3\\n2\\n3') == 'Yes\\nYes\\nNo\\nYes\\nYes\\nYes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3\\n3\\n1\\n3') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3\\n3\\n1\\n2') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('8 1\\n7\\n4\\n3\\n4\\n2\\n4\\n5\\n') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo'\nassert solution('6 2 5\\n1\\n1\\n1\\n1\\n1\\n') == 'No\\nNo\\nYes\\nNo\\nYes\\nNo'\nassert solution('6 2 5\\n5\\n5\\n5\\n5\\n5\\n') == 'No\\nNo\\nYes\\nYes\\nYes\\nNo'\nassert solution('8 4 6\\n4\\n1\\n1\\n1\\n1\\n1\\n1\\n') == 'No\\nYes\\nYes\\nNo\\nYes\\nYes\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n''') == '''No\nNo\nYes\nNo\nNo\nNo\n'''\n\nassert solution('''6 3 4\n2\n1\n3\n2\n''') == '''Yes\nNo\nNo\nYes\nNo\nNo\n'''\n\nassert solution('''6 3 4\n1\n2\n3\n4\n5\n6\n''') == '''No\nNo\nNo\nYes\nYes\nYes\n'''\n\nassert solution('''5 4 3\n1\n2\n3\n4\n5\n''') == '''Yes\nYes\nYes\nYes\nYes\n'''\n\nassert solution('''5 4 3\n1\n2\n3\n4\n5\n6\n''') == '''No\nNo\nNo\nYes\nNo\n'''"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 3 4\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3 3 4\") == \"No\"\nassert solution(\"3 3 4\") == \"No\"\nassert solution(\"3 3 3\") == \"No\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'No'\n'''"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 2 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"1 1 1\\n1\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"1 2 3\\n3\\n1\\n2\\n3\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"1 2 2\\n2\\n1\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes'\nassert solution('5 10 5\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 3 4\\n1\\n2\\n1\\n2\\n2\\n') == 'No\\nNo\\nYes'\nassert solution('1 1 1\\n1\\n1\\n1\\n1\\n1\\n') == 'No\\nNo\\nYes'\nassert solution('3 4 4\\n2\\n1\\n3\\n2\\n') == 'Yes\\nYes\\nYes\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3 4\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4\") == \"No\"\nassert solution(\"3 3 4\") == \"No\"\nassert solution(\"4 2 3\") == \"No\"\nassert solution(\"5 2 3\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n3\\n3\\n3\\n3') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('1 2 3\\n1\\n1\\n1\\n1\\n1') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('3 5 4\\n1\\n3\\n3\\n3\\n3') == 'Yes\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('2 3 5\\n1\\n2\\n2\\n2\\n2') == 'Yes\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'YES'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''3 3\n1 1 1\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1 1\\n0 1 1\\n0 1 1\") == \"YES\\n00\\n01\"\nassert solution(\"2 2\\n0 0\\n1 1\\n1 1\") == \"YES\\n01\\n00\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n0 0 0 0\") == \"NO\\n0\\n100\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n1 1 1\\n0 1 1\") == \"NO\\n00\\n000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n1 1 1\\n0 1 1\") == \"NO\\n00\\n100\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('1\\n0') == 'NO'\nassert solution('2\\n1') == 'NO'\nassert solution('1\\n1\\n0') == 'NO'\nassert solution('3\\n3\\n0\\n0\\n0') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n') == 'YES\\n00\\n10'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES\\n010\\n0000'\nassert solution('2 1\\n1\\n') == 'NO'\n\n\n---\n\nFor more information, see the **HackerRank article**.\n\n\"\"\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"2 2\"\"\") == \"\"\"YES\n00\n10\"\"\"\n\nassert solution(\n\"\"\"3 4\"\"\"\n) == \"\"\"NO\"\"\"\n\nassert solution(\n\"\"\"3 4\n0 0 0\n0 0 0\n1 1 1\n\"\"\") == \"\"\"YES\n010\n0000\"\"\""
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"2 2\n1 1\n0 1\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"3 3\n0 0 0\n1 0 1\n1 1 0\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == 'NO'\nassert solution('''3 4''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''2 3\n1 1 1\n0 0 0''') == 'YES'\nassert solution('''4 4\n0 0 0 0\n0 0 0 0\n1 1 1 1\n0 0 0 0''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == None"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''2 2'''\n) == 'YES'\nassert solution(\n'''2 1'''\n) == 'NO'\nassert solution(\n'''3 3'''\n) == 'YES'\nassert solution(\n'''2 3'''\n) == 'NO'\nassert solution(\n'''1 1'''\n) == 'NO'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\nassert solution('0') == 'No'\nassert solution('-121') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('121') == 'Yes'\nassert solution('73') == 'Yes'\nassert solution('373') == 'Yes'\nassert solution('436') == 'No'\nassert solution('1') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == 'Yes'\nassert solution('16') == 'Yes'\nassert solution('632') == 'No'\nassert solution('256') == 'Yes'\nassert solution('1000000') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('121') == 'No'\nassert solution('373') == 'Yes'\nassert solution('436') == 'Yes'\nassert solution('1049') == 'No'\nassert solution('120') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\nassert solution('739369') == 'Yes'\nassert solution('73937') == 'No'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\n\n'''\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\n\n'''"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4312') == 'No'\nassert solution('3123') == 'No'\nassert solution('1231') == 'Yes'\nassert solution('1221') == 'Yes'\nassert solution('6234') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('962') == \"No\"\nassert solution('63') == \"No\"\nassert solution('44') == \"No\"\nassert solution('45') == \"Yes\"\nassert solution('458') == \"Yes\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 1''') == '5'\nassert solution('''6 2 1''') == '3'\nassert solution('''10 2 1''') == '4'\nassert solution('''1 1 1 1 1''') == '5'\nassert solution('''3 2 1''') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 1''') == '5'\nassert solution('''6 2 1''') == '3'\nassert solution('''1 0 0 1 0 1''') == '3'\nassert solution('''1 0 1 0 1 0''') == '3'\nassert solution('''1 0 0 1 0 1''') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1 1') == 1\nassert solution('6 2 1') == 3\nassert solution('0 1 0 1 0 1') == 5\nassert solution('1 0 0 1 0 1') == 3\nassert solution('0 0 1 0 1 0') == 5\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"5 2 1\"\"\"\n) == \"\"\"5\"\"\"\n\nassert solution(\n\"\"\"6 2 1\"\"\"\n) == \"\"\"3\"\"\"\n\nassert solution(\n\"\"\"6 2 1\"\"\"\n) == \"\"\"3\"\"\"\n\nassert solution(\n\"\"\"7 2 1\"\"\"\n) == \"\"\"4\"\"\"\n\nassert solution(\n\"\"\"11 2 1\"\"\"\n) == \"\"\"6\"\"\""
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\"\"\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\nprint(solution(input()))"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"375\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nprint(\"Tests passed successfully.\")"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(8-7+6-5+4-3+2-1-0) == 4\nassert solution(2+2) == -46\nassert solution(112-37) == 375\nassert solution('2+2') == -46\nassert solution('112-37') == 375\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n8-7+6-5+4-3+2-1-0\n'''\n) == '4'\n\nassert solution(\n'''\n2+2\n'''\n) == '-46'\n\nassert solution(\n'''\n112-37\n'''\n) == '375'\n\nprint(\"\"\"Check done. Well done! It is all about practicing simple subtraction.\"\"\")\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nprint(solution(input()))\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"112-37\") == -46\nassert solution(\"2+2\") == -46\nassert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"112-37\") == 375\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''10 4''') == 'YES'\nassert solution('''13 4''') == 'NO'\nassert solution('''10 5''') == 'NO'\nassert solution('''13 5''') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'\nassert solution('5 3') == 'YES\\n5 5\\n5 3\\n4 4\\n4 3\\n3 3'\nassert solution('7 5') == 'YES\\n5 4\\n5 3\\n4 4\\n4 3\\n3 2\\n2 3'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 4\") == \"NO\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"18 5\") == \"NO\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"100 50\") == \"NO\\n\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\\n\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\nassert solution('100 100') == 'NO'\nassert solution('3 4') == 'YES\\n1 3\\n3 2\\n2 4\\n'\nassert solution('100 200') == 'NO'\nassert solution('5 10') == 'NO'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''4 2''') == 'NO'\nassert solution('''9 5''') == 'YES'\nassert solution('''1002 5''') == 'NO'\nassert solution('''9 7''') == 'YES'\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('1 1\\n2 1\\n1 2') == 'YES'\nassert solution('2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2') == 'NO'\nassert solution('2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"14 4\") == \"NO\"\nassert solution(\"11 4\") == \"YES\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n5\") == \"5\"\nassert solution(\"2\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n1\") == \"2\"\nassert solution(\"2\\n1\\n2\") == \"1\"\nassert solution(\"2\\n2\\n2\") == \"0\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\") == \"-1\"\nassert solution(\"5 1 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\nassert solution(\"6 1 5\") == \"100\"\nassert solution(\"6 1 5\") == \"100\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 1 3\") == \"18\"\nassert solution(\"6 1 5\") == \"-1\"\nassert solution(\"4 3 1\") == \"100\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"2 2 2\") == \"3\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30') == '100'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '100'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '100'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '100'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '100'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\nassert solution('''2 2 1\n1 1 1''') == '-1'\nassert solution('''1 10\n1''') == '10'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10') == '100'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''10 30 30 70 10 10''') == '100'\nassert solution('''4 3 1''') == '-1'\nassert solution('''4 3 1''') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"\nassert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"5 5 2\\n1 2 1 2 3\\n\") == \"6\"\nassert solution(\"7 2 2\\n5 1 3 1 3 3\\n\") == \"9\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 1 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"\nassert solution(\"4 3 1\\n1 10 1 1\") == \"-1\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 1\") == \"3\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\\n\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\\n\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\\n\"\nassert solution(\"5 2 3\\n1 100 1 1\\n\") == \"-1\\n\"\nassert solution(\"4 2 2\\n1 10 1 1\\n\") == \"11\\n\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == ''\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\n00100\\n') == '3'\nassert solution('6 1\\n000000\\n') == '21'\nassert solution('12 6\\n000010000100\\n') == '15'\nassert solution('7 1\\n0000000\\n') == '4'"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n00100\n''') == '3'\nassert solution('''6 1\n000000\n''') == '21'\nassert solution('''4 1\n0011\n''') == '4'\nassert solution('''12 6\n000010000100\n''') == '15'\nassert solution('''13 4\n000000000\n''') == '18'\n\n'''\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1\\n0011') == '4'\nassert solution('6 1\\n000000') == '15'\nassert solution('5 2\\n00100') == '3'\nassert solution('10 2\\n000010000100') == '15'\nassert solution('12 1\\n00001000010000') == '21'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\n\"\"\"\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '21'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"\n\"\"\""
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '21'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('aaaaaaaa') == 'Yes'\nassert solution('aaaaaaaaa') == 'Yes'\nassert solution('aaaaaaaaaa') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''azzel''') == '''Yes\n'''\nassert solution('''abcd''') == '''No\n'''\nassert solution('''al''') == '''Yes\n'''\nassert solution('''he''') == '''Yes\n'''\nassert solution('''hell''') == '''No\n'''\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"Yes\"\nassert solution('abcde') == \"Yes\"\nassert solution('abcde') == \"No\"\nassert solution('a') == \"No\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('azzel') == \"Yes\"\nassert solution('apple') == \"No\"\nassert solution('aa') == \"Yes\"\nassert solution('a') == \"Yes\"\nassert solution('zzzzzzzzzz') == \"Yes\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('ad') == 'No'\n\"\"\"\n\n\n\"\"\"\n----SOLUTION----\n\n- Each element of T can be used as target element\n- We can use T as a template, if T and S are the same, then we can remove elements from S\n\"\"\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('abcdef') == 'No'\nassert solution('abcdefg') == 'Yes'\nassert solution('abcdefg') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\n\n\"\"\""
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('aaaaa') == 'No'\nassert solution('aazzel') == 'Yes'\nassert solution('apple') == 'Yes'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == \"No solution\"\nassert solution('2 2 1') == \"Yes, 1\"\nassert solution('1 1 1') == \"Yes, 1\"\nassert solution('2 2 2') == \"Yes, 2\"\nassert solution('2 2 3') == \"Yes, 1\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 2 10') == '100'\nassert solution('1 1 1') == '0'\nassert solution('3 5 7') == '160'\nassert solution('100000 100000 100000') == '50600'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8\\n8\\n1 3\\n2 4\\n3 4\\n1 2\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\") == \"1\"\nassert solution(\"8\\n8\\n1 3\\n2 4\\n3 4\\n1 2\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\") == \"0\"\nassert solution(\"3\\n3\\n2 2\\n2 1\\n1 1\") == \"0\"\nassert solution(\"10\\n10\\n1 3\\n2 4\\n3 4\\n1 2\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"0\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 2\\n1 2 3\\n1 3') == '3'\nassert solution('3\\n2 2\\n1 3 1\\n1 2 3') == '2'\nassert solution('2\\n1\\n2\\n3\\n3\\n2\\n1\\n2\\n1\\n2\\n3\\n3') == '5'\nassert solution('2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\n2\\n1\\n3\\n2\\"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\n\n'''\n\nfrom functools import lru_cache\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n1 2 3\n2 3 4\n''') == '1'\n\nassert solution('''\n5 3\n1 2 3 4 5\n2 3 4 5 6\n''') == '5'\n\nassert solution('''\n6 4\n1 2 3 4 5 6\n2 3 4 5 6 7\n''') == '4'\n\nassert solution('''\n3 4\n1 2 3\n2 3 4\n''') == '1'\n\nassert solution('''\n3 4\n1 2 3\n2 3 4\n3 4 5\n''') == '2'"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\nimport unittest\n\nfrom solutions.kyu_8.takahashi_wants_to_learn_m_algorithms import solution\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution(stdin), expected)\n\n\nstdin = \"\"\"0\n0\n0\n0\n\"\"\"\n\nexpected = \"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n3 1 2\\n3 1 2\") == \"1\\n2\\n1\"\n\"\"\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '2'\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '3'\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '4'\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '2'\n\nassert solution('''Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n''') == '5'"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '1'\nassert solution('5 800') == '3'\nassert solution('1 10') == '1'\nassert solution('2 700') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''2 7\n3 500\n5 800''') == '4'\nassert solution('''3 7\n5 500\n7 800''') == '1'\nassert solution('''3 7\n5 500\n5 800''') == '1'\nassert solution('''3 7\n5 500\n5 100''') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7') == '2'\nassert solution('50 50') == '3'\nassert solution('70 700') == '3'\nassert solution('40 40') == '3'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 700\\n3 500\\n5 800\\n') == '3'\nassert solution('2 700\\n3 500\\n5 800\\n') == '3'\nassert solution('2 700\\n3 500\\n5 800\\n') == '3'\nassert solution('2 700\\n3 500\\n5 800\\n') == '3'\nassert solution('2 700\\n3 500\\n5 800\\n') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 10\") == \"0\"\nassert solution(\"2 100\") == \"1\"\nassert solution(\"50 100\") == \"0\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"1000 100\") == \"1\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100\\n7 100\\n8 100\\n9 100') == '1'\nassert solution('1 200\\n2 200\\n3 200\\n4 200\\n5 200\\n6 200\\n7 200\\n8 200\\n9 200') == '4'\n\"\"\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '3'\nassert solution('1 100') == '0'\nassert solution('1 100') == '0'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''2 702\n3 500\n5 800''') == '3'\nassert solution('''2 700\n3 500\n5 800\n6 800''') == '4'\nassert solution('''2 700\n3 500\n5 800\n6 800\n7 800''') == '5'\nassert solution('''2 700\n3 500\n5 800\n6 800\n7 800\n8 800''') == '5'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '4'\nassert solution('5 800') == '5'\nassert solution('5 300') == '2'\nassert solution('5 200') == '1'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 5\") == \"\"\nassert solution(\"2 500\") == \"1\"\nassert solution(\"2 700\") == \"3\"\nassert solution(\"4 7\") == \"4\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('5\\n3 1 4 3 3 1 2') == '0'\nassert solution('7\\n2 3 4 2 2 3 2 2 4') == '2'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 1') == '1'\nassert solution('3\\n3 2 1') == '0'\nassert solution('3\\n3 2 1') == '0'\nassert solution('3\\n2 1 2') == '0'\nassert solution('4\\n4 1 4 4 4') == '0'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 4 3 3\\n') == '2'\nassert solution('5\\n1 4 3 3 5\\n') == '3'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\nassert solution('15\\n2 3 4 2 2 3 2 2 4 5 6 7 8 9 10 11 12 13 14 15\\n') == '0'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '3'\n\nprint('All set! Click \"Check\" to earn cool rewards!')\n\"\"\"\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 1 1') == '1'\nassert solution('6\\n2 4 3 4 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('10\\n2 3 4 2 2 3 2 2 4 5') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7''') == '''2\n'''\n\nassert solution('''8''') == '''2\n'''\n\nassert solution('''9''') == '''3\n'''\n\nassert solution('''4 2 3 4 2 2 3 2 2 4''') == '''2\n'''\n\nassert solution('''4 2 3 3 2 2 1''') == '''3\n'''"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('7') == None\nassert solution('7\\n5 5 4 5 5 5 6') == None\nassert solution('8\\n4 8 8 7 8 4 4 5') == None\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == None\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\nassert solution('10\\n2 3 4 2 2 3 2 2 4 3') == '3'\n\n\n\"\"\""
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '100'\nassert solution('''4 3 1\n1 100 1 1''') == '-1'\nassert solution('''7 4 7\n7 9 1 3 2 5''') == '24'\nassert solution('''8 6 2\n8 6 9 3 8 1''') == '32'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''5 1 3''') == '-1'\nassert solution('''6 1 5''') == '100'\nassert solution('''10 30 30 70 10 10''') == '-1'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10') == '-1'\nassert solution('4 3 1\\n1 100 1 1') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 1 3 10 1\\n') == '18'\nassert solution('4\\n1 100 1 1\\n') == '100'\nassert solution('5\\n5 1 3 10 1\\n') == '18'\nassert solution('6\\n10 30 30 70 10 10\\n') == '-1'\nassert solution('4\\n1 100 1 1\\n') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\nassert solution('''8 2 4\n100 10 1 1 100 1 1''') == '100'\nassert solution('''10 10 10 10 10 10''') == '0'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'\nassert solution('6 1 10') == '100'\nassert solution('6 1 50') == '50'\nassert solution('6 1 100') == '0'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'\nassert solution('''4 3 1\n1 100 1 1\n''') == '100'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"13\") == \"No\"\nassert solution(\"14\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(11) == \"Yes\"\nassert solution(15) == \"Yes\"\nassert solution(7) == \"No\"\nassert solution(0) == \"Yes\"\nassert solution(16) == \"No\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11') == 'Yes'\nassert solution('1') == 'No'\nassert solution('10') == 'No'\nassert solution('100') == 'Yes'\nassert solution('100000000000000000000000000000000') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == 'Yes'\nassert solution('5') == 'No'\nassert solution('11') == 'Yes'\nassert solution('10') == 'Yes'\nassert solution('11') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == 'No'\nassert solution('5') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('10') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"111\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"100000000\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"No\"\n\n\"\"\"\n\n\"\"\"\nSolution:\n------\n\n------\n------\n\n\"\"\"\n\nimport sys\n\nN = int(sys.stdin.readline().strip())"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n') == 'Yes'\nassert solution('2\\n') == 'No'\nassert solution('7\\n') == 'Yes'\nassert solution('10\\n') == 'No'\nassert solution('100\\n') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'Yes'\nassert solution('2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nassert solution('''2\n2 3 5\n2 1 5''') == '2 2 6'\nassert solution('''10\n0 1 9\n0 0 9\n0 1 9\n0 0 9\n1 0 9\n1 1 9\n1 1 9\n2 1 9\n2 2 9\n2 2 9\n2 1 9\n2 0 9''') == '2 2 6'\nassert solution('''10\n1 1 9\n1 0 9\n0 1 9\n0 0 9\n0 0 9\n1 0 9\n1 1 9\n1 1 9\n2 1 9\n2 0 9\n2 0 9''') == '2 2 6'\nassert solution('''10\n0 0 9\n0 0 9\n0 0 9\n0 0 9\n1 0 9\n1 1 9\n1 1 9\n2 1 9\n2 0 9\n2 0 9\n2 0 9''') == '2 2 6'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n'''\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2 1 5\n1 2 5''') == \"2 2 6\"\nassert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == \"2 2 6\""
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n\nassert solution(\n'''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n\nassert solution(\n'''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n\nassert solution(\n'''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n\nassert solution(\n'''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nassert solution('''\n2\n2 1 2\n1 2 2\n2 1 2\n''') == '2 2 6'\nassert solution('''\n2\n2 1 1\n1 2 2\n2 1 1\n''') == '2 2 5'\nassert solution('''\n2\n2 1 2\n1 2 2\n2 1 2\n''') == '2 2 6'\nassert solution('''\n6\n1 1 5\n1 1 5\n1 1 5\n2 1 5\n2 1 5\n2 1 5\n''') == '2 2 6'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n'''"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 5\") == \"2 2 6\"\nassert solution(\"2 1 5\") == \"2 2 6\"\nassert solution(\"1 2 5\") == \"2 2 6\"\nassert solution(\"3 2 5\") == \"2 2 6\"\nassert solution(\"2 3 4\") == \"1 1 2\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nassert solution('''3\n2 3 5\n2 1 5\n1 2 5''') == '2 2 6'\n'''\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\nassert solution('rsdrcnoyce') == '5'\nassert solution('aba') == '0'\nassert solution('bbba') == '0'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('redcoder') == 1\nassert solution('red') == 2\nassert solution('abcd') == 1\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\n\"\"\""
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ababab\") == 1\nassert solution(\"ababab\") == 2\nassert solution(\"a\") == 0\nassert solution(\"aabb\") == 2\nassert solution(\"aabbccc\") == 3\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('aaaaaa') == ''\nassert solution('aabb') == 'aab'\nassert solution('aaabb') == 'aaaba'\nassert solution('aabbba') == 'aabaa'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('acb') == 0\nassert solution('abbacba') == 2\nassert solution('drcdc') == 0\nassert solution('ebacba') == 3\nassert solution('xabx') == 3\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('redcoder') == '1'\nassert solution('radar') == '0'\nassert solution('radar') == '0'\nassert solution('cattac') == '2'\nassert solution('bbbbbba') == '1'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"redcoder\") == 1\nassert solution(\"aabcdabcd\") == 2\nassert solution(\"redcoderredcoderredcoderredcoder\") == 1\nassert solution(\"aabcd\") == 2\nassert solution(\"a\") == 1\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == \"Yes\"\nassert solution('8') == \"No\"\nassert solution('123') == \"Yes\"\nassert solution('45') == \"No\"\nassert solution('817') == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10''') == 'Yes'\nassert solution('''10101010''') == 'No'\nassert solution('''20''') == 'Yes'\nassert solution('''1111''') == 'Yes'\nassert solution('''17777777''') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10\\n') == 'Yes'\nassert solution('100\\n') == 'No'\nassert solution('10000\\n') == 'Yes'\nassert solution('100000000\\n') == 'No'\nassert solution('13\\n') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == 'Yes'\nassert solution('100') == 'No'\nassert solution('1') == 'Yes'\nassert solution('9') == 'No'\nassert solution('52') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10') == 'Yes'\nassert solution('7') == 'No'\nassert solution('743') == 'No'\nassert solution('743303') == 'Yes'\nassert solution('74330326') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"19\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"16\") == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(123) == 'Yes'\nassert solution(124) == 'No'\nassert solution(0) == 'Yes'\nassert solution(1) == 'Yes'\nassert solution(2) == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"30\") == \"No\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"300\") == \"No\"\nassert solution(\"1000\") == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"-10\") == \"No\"\nassert solution(\"100\") == \"No\"\nassert solution(\"999999\") == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'No'\nassert solution('1') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('20') == 'No'\nassert solution('30') == 'No'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4 9 7 5') == '5'\nassert solution('1 4 4 8 2') == '8'\nassert solution('2 4 5 2') == '3'\nassert solution('3 4 5 6') == '0'\nassert solution('1 2 2 3 4 5 6 7 8') == '3'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 9 7 5') == '5'\nassert solution('4 4 9 7 5') == '5'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\n4 4 9 7 5\n''') == \"5\"\n\nassert solution(\n'''\n3\n1 2 1\n''') == \"1\"\n\nassert solution(\n'''\n1\n1\n1\n''') == \"1\"\n\nassert solution(\n'''\n5\n1 2 1 2 3\n''') == \"2\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 4 9 7 5\") == \"5\"\n\"\"\"\nimport sys\nsys.setrecursionlimit(5000)"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"\") == \"\"\nassert solution(\"3 4 2 1\") == \"3\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"3 4 3 3\") == \"2\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"5 4 9 7 5\") == \"5\"\nassert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"5 4 9 7 5\") == \"5\"\nassert solution(\"5 5 5 5 5 5\") == \"0\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4\n4 4 9 7 5''') == '5'\nassert solution(\n'''5\n4 4 9 7 5''') == '5'\nassert solution(\n'''6\n3 2 5 1 1 3''') == '2'\nassert solution(\n'''7\n3 2 5 1 1 3''') == '2'\nassert solution(\n'''8\n3 2 5 1 1 3''') == '1'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''1\n2\n3\n4\n5''') == '5'\nassert solution('''10\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == '10'\nassert solution('''3\n4\n5\n6''') == '6'\nassert solution('''3\n1\n2\n3''') == '2'\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"3 1 5 2 4\") == \"4\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"2 1 1 1 1\") == \"2\"\nassert solution(\"1 2 3 4 5 6\") == \"6\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n\") == \"\"\nassert solution(\"1 2\\n3 4\") == \"\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"\"\nassert solution(\"1 2\\n2 3\\n3 4\") == \"\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 2') == '-1'\nassert solution('1 2 3') == '6'\nassert solution('2 3') == '4'\nassert solution('3 4') == '6'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '10'"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1, 2) == \"10\"\nassert solution(2, 3) == \"-1\"\nassert solution(10, 10) == \"100\"\nassert solution(10, 5) == \"-1\"\nassert solution(5, 10) == \"-1\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 1') == '1'\nassert solution('5 1') == '-1'\nassert solution('4 2') == '8'\nassert solution('4 5') == '12'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\nassert solution('5 10') == '-1'\nassert solution('9 5') == '45'\nassert solution('5 9') == '-1'\nassert solution('1 5') == '5'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '3'\nassert solution('2 5') == '10'\nassert solution('2 5') == '10'\nassert solution('-1 -1') == '-1'\nassert solution('-1 -1') == '-1'\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5') == '10'\nassert solution('4 1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 1') == '2'\nassert solution('10 5') == '2'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_lines[0]) == output_lines[0]\nprint(solution(input_lines[1]))\n'''"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '5'\nassert solution('2 2') == '0'\nassert solution('2 1') == '1'\nassert solution('2 10') == '1'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1'\nassert solution('10 12 1 2 14') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '8'\nassert solution('1 3 4 5 6 7 8 9 10 11 12') == '6'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5') == '5'\nassert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('1 2\\n1') == '0'\nassert solution('1 1\\n1') == '0'\nassert solution('1 10\\n10') == '0'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\n'''\nfrom functools import lru_cache\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9''') == '1'\nassert solution('''3 3\n-1 2 3\n1 2 -3\n1 -2 3''') == '-1'\nassert solution('''3 3\n1 1\n-1 -1\n1 1''') == '0'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n1 1 1 1 1 1 1 1 1 1''') == '1'\n'''\nimport sys\nfrom io import StringIO\nimport unittest\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self."
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 5\n10 12 1 2 14''') == '5'\nassert solution('''3 5\n1 6 5 3 2''') == '3'\nassert solution('''4 5\n1 6 5 3 2''') == '4'\nassert solution('''5 5\n1 6 5 3 2''') == '2'\nassert solution('''6 5\n1 6 5 3 2''') == '3'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2'\n\nassert solution(\n'''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\n\nassert solution(\n'''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\n\nassert solution(\n'''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n\nassert solution(\n'''7 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n2 5\n1 4\n''') == '2'"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2\\n1110\\n1011'\nassert solution('''4 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1\\n101001'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2\\n111100'\nassert solution('''5 6 4\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n''') == '1\\n11010101'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2\\n101001'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\nassert solution(\"5 6 2\") == \"2\"\nassert solution(\"1 2\") == \"1110\"\nassert solution(\"1 3\") == \"1011\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '1110'\nassert solution('2 3 4') == '1011'\nassert solution('4 3 5') == '011110'\nassert solution('2 4 3') == '00111'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\"\"\""
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3''') == '2'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\nassert solution('''10 10 1\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n4 6\n5 6\n5 7\n6 7\n6 8\n7 8\n7 9\n8 9\n8 10\n9 10\n9 11\n10 11\n10 12\n11 12\n11 13\n12 13\n12 14\n13 14\n13 15\n14 15\n14 16\n15 16\n15 17\n16 17\n16 18\n17 18\n17 19\n18 19\n18 20\n19 20\n19 21\n20 21\n20 22\n21 22\n21 23\n22 23\n22 24\n23 24\n23 25\n24 25\n23 26\n24 26\n23 27\n24 27\n23 28\n24 28\n23 29\n24 29\n23 30\n24 30\n23 31\n24 31\n23 32\n24 32\n23 33\n24 33\n23 34\n24 34\n23 35\n24 35\n23 36\n24 36\n23 37\n24 37\n23 38\n24 38\n23 39\n24 39\n23 40\n24 40\n23 41\n24 41\n23 42\n24 42\n23 43\n24 43\n23 44\n24 44\n23 45\n24 45\n23 46\n24 46\n23 47\n24 47\n23 48\n24 48\n23 49\n24 49\n23 50\n24 50\n23 51\n24 51\n23 52\n24 52\n23 53\n24 53\n23 54\n24 54\n23 55\n24 55\n23 56\n24 56\n23 57\n24 57\n23 58\n24 58\n23 59\n24 59\n23 60\n24 60\n23 61\n24 61\n23 62\n24 62\n23 63\n24 63\n23 64\n24 64\n23 65\n24 65\n23 66\n24 66\n23 67\n24 67\n23 68\n24 68\n23 69\n24 69\n23 70\n24 70\n23 71\n24 71\n23 72\n24 72\n23 73\n24 73\n23 74\n24 74\n23 75\n24 75\n23 76\n24 76\n23 77\n24 77\n23 78\n24 78\n23 79\n24 79\n23 80\n24 80\n23 81\n24 81\n23 82\n24 82\n23 83\n24 83\n23 84\n24 84\n23 85\n24 85\n23 86\n24 86\n23 87\n24 87\n23 88\n24 88\n23 89\n24 89\n23 90\n24 90\n23 91\n24 91\n23 92\n24 92\n23 93\n24 93\n23 94\n24 94\n23 95\n24 95\n23 96\n24 96\n23 97\n24 97\n23 98\n24 98\n23 99\n24 99\n23 100\n24 100\n23 101\n24 101\n23 102\n24 102\n23 103\n24 103\n23 104\n24 104\n23 105\n24 105\n23 106\n24 106\n23 107\n24 107\n23 108\n24 108\n23 109\n24 109\n23 110\n24 110\n23 111\n24 111\n23 112\n24 112\n23 113\n24 113\n23 114\n24 114\n23 115\n24 115\n23 116\n24 116\n23 117\n24 117\n23 118\n24 118\n23 119\n24 119\n23 120\n24 120\n23 121\n24 121\n23 122\n24 122\n23 123\n24 123\n23 124\n24 124\n23 125\n24 125\n23 126\n24 126\n23 127\n24 127\n23 128\n24 128\n23 129\n24 129\n23 130\n24 130\n23 131\n24 131\n23 132\n24 132\n23 133\n24 133\n23 134\n24 134\n23 135\n24 135\n23 136\n24 136\n23 137\n24 137\n23 138\n24 138\n23 139\n24 139\n23 140\n24 140\n23 141\n24 141\n23 142\n24 142\n23 143\n24 143\n23 144\n24 144\n23 145\n24 145\n23 146\n24 146\n23 147\n24 147\n23 148\n24 148\n23 149\n24 149\n23 150\n24 150\n23 151\n24 151\n23 152\n24 152\n23 153\n24 153\n23 154\n24 154\n23 155\n24 155\n23 156\n24 156\n23 157\n24 157\n23 158\n24 158\n23 159\n24 159\n23 160\n24 160\n23 161\n24 161\n23 162\n24 162\n23 163\n24 163\n23 164\n24 164\n23 165\n24 165\n23 166\n24 166\n23 167\n24 167\n23 168\n24 168\n23 169\n24 169\n23 170"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '2\\n1110\\n1011'\nassert solution('4 6 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '1\\n101001\\n'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2\\n111100\\n110110'\nassert solution('6 10 1\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n5 6\\n') == '1\\n111110000\\n111110001\\n1110010010\\n1110010011\\n1110110100\\n1110110101\\n1110110110\\n1110110111\\n1110111000\\n1110111001\\n1110111010\\n1110111011\\n'\nassert solution('100000 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n5 6\\n') == '1\\n101000\\n110100\\n110101\\n110110\\n110111\\n111000\\n111001\\n111010\\n111011\\n'\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'YES'\nassert solution('''2\n10 10''') == 'YES'\nassert solution('''3\n1 2 3''') == 'NO'\nassert solution('''2\n10 10''') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"1\\n1\") == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1 1') == 'YES'\nassert solution('3\\n1 1 1') == 'YES'\nassert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n2') == 'NO'\nassert solution('2\\n3') == 'NO'\nassert solution('2\\n4') == 'NO'\nassert solution('2\\n5') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''3\n4 5 3\n''') == 'YES'\nassert solution('''2\n10 10\n''') == 'YES'\nassert solution('''3\n1 2 3\n''') == 'NO'\n'''\n\nimport sys\nsys.stdin = open('input.txt')"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''2 1 1 2 5''') == 'YES'\nassert solution('''3''') == 'NO'\nassert solution('''4 5 3''') == 'YES'\nassert solution('''1 2 3''') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'YES'\nassert solution('2\\n10 10') == 'YES'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('1\\n10') == 'YES'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n2 3 4') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('2\\n1 1\\n1 1\\n1 1') == 'NO'\nassert solution('2\\n2 2\\n2 2') == 'NO'\nassert solution('2\\n3 2\\n2 2') == 'NO'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '9'\nassert solution(input()) == '4999999999996'\nassert solution(input()) == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4\n''') == '9'\n\nassert solution('''1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996'\n\nassert solution('''10 4\n-3 -6 5 4\n''') == '-1'\n\nprint(solution('''7 4\n-10 -6 -3 -3 -2 -1\n'''))\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''-1000 -200 -300 125 77 -4''') == '-1'\nassert solution('''-1000 -200 -300 125 77 -4''') == '4999999999996'\nassert solution('''-100 -200 -300 125 77 -4''') == '9'\nassert solution('''-100 -200 -300 125 77 -4''') == '9'\nassert solution('''-1000 -200 -300 125 77 -4''') == '9'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"\nprint(\"All set? Click 'Check' to earn sweet rewards!\")\n\"\"\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''-1000 -200 -300 125 77 -4''') == '9'\nassert solution('''-1 0 0 0 0''') == '-1'\nassert solution('''-1 0 0 0 0''') == '-1'\nassert solution('''-1 -1 -1 -1 -1''') == '-1'\nassert solution('''-1 0 0 0 0''') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[1:6]\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\\n\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\\n\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"-1\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"-1\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''100000 100000\n0 0 0 0 0''') == '1'\nassert solution('''1000 1\n-3 -6 -5 -4''') == '1'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('AA') == 'AA'\nassert solution('AAB') == 'AA'\nassert solution('AAAB') == 'AA'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('AAA') == 'AA'\nassert solution('AAAAA') == 'AA'\nassert solution('ABACAB') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n7\nABACABA\n''') == 'AB'\nassert solution(\n'''\n5\nZZZAA\n''') == 'ZZ'\nassert solution(\n'''\n3\nAAA\n''') == 'AAA'\nassert solution(\n'''\n4\nBBAABBBA\n''') == 'BB'\nassert solution(\n'''\n2\nA\n''') == 'A'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"ABCDABC\") == \"AB\"\nassert solution(\"AB\") == \"AB\"\nassert solution(\"AB\") == \"AB\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''ABACABA''') == 'AB'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''BBAABBBA''') == 'BB'\nassert solution('''BBAABBBA''') == 'BB'\nassert solution('''ZZZZZ''') == 'ZZ'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('AABBAA') == 'AB'\nassert solution('BAAABA') == 'AB'\nassert solution('BBBBB') == ''\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''ABACABA\n''') == 'AB'\nassert solution('''ZZZAA\n''') == 'ZZ'\nassert solution('''ABCABAB\n''') == 'AB'\nassert solution('''ABCABAB\n''') == 'AB'\nassert solution('''ABCABCABAB\n''') == 'AB'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''ABACABA''') == 'AB'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''AAAAAA''') == 'AAAAAA'\nassert solution('''AAABBB''') == 'AA'\nassert solution('''AABBBB''') == 'AA'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"west\") == \"we\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"b\"\nassert solution(\"a\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('test') == 'ew'\nassert solution('codeforces') == 'es'\nassert solution('codeforces') == 'es'\nassert solution('yes') == 'es'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"test\") == \"west\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"yes\") == \"yes\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"test\"\nassert solution(\"b\") == \"b\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"abc\") == \"a\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"where\") == \"here\"\nassert solution(\"a\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"no\") == \"no\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'y'\n\n\"\"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"west\") == \"east\"\nassert solution(\"test\") == \"test\"\nassert solution(\"a\") == \"\"\nassert solution(\"b\") == \"a\"\nassert solution(\"codeforces\") == \"codes\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"west\") == \"east\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"b\") == \"a\"\nassert solution(\"test\") == \"test\"\nassert solution(\"yes\") == \"yes\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 7 11') == '2'\nassert solution('2 4') == '2'\nassert solution('1 10') == '1'\nassert solution('100 9') == '100'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n2 1') == '2'\nassert solution('2 10\\n1 9\\n2 9\\n3 10\\n4 10\\n5 10\\n6 10\\n7 10\\n8 10\\n9 10\\na 10\\nb 10\\nc 10\\nd 10\\ne 10') == '1'\nassert solution('1 3\\n2 3\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\na 2\\nb 2\\nc 2\\nd 2\\ne 2\\nf 2\\ng 2\\nh 2\\ni 2\\nj 2\\nk 2\\nl 2\\n') == '1'\nassert solution('10 10\\n5 9\\n4 9\\n3 9\\n2 9\\n1 9\\n1 8\\n2 8\\n3 8\\n4 8\\n5 8\\n6 8\\n7 8\\n8 8\\n9 8\\na 8\\nb 8\\nc 8\\nd 8\\ne 8\\nf 8\\ng 8\\nh 8\\ni 8\\nj 8\\nk 8\\nl 8\\n') == '1'\nassert solution('1 2\\n1 3\\n1 5\\n1 7\\n1 9\\n1 11\\n2 3\\n2 5\\n2 7\\n2 9\\n2 11\\n3 5\\n3 7\\n3 9\\n3 11\\n4 5\\n4 7\\n4 9\\n4 11\\n5 7\\n5 9\\n5 11\\n6 7\\n6 9\\n6 11\\n7 9\\n7 11\\n8 9\\n8 11\\n9 11') == '0'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 7 11''') == '2'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10''') == '6'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10''') == '6'\nassert solution('''10 10\n9 4 6 8 3 2 1 7 5 10''') == '5'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10''') == '6'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"2 5\") == \"1\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '4'\nassert solution('1 7 11') == '2'\nassert solution('2 2 1 1') == '1'\nassert solution('2 1 1 2') == '2'\nassert solution('2 1 1 1') == '1'\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == 2\nassert solution(\"1 7 11\") == 2\nassert solution(\"1\") == 0\nassert solution(\"1 1 1 1 1\") == 0\nassert solution(\"5 4\") == 0\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n[input]\n3 3\n1 7 11\n\n[output]\n2\n\n[input]\n5 3\n1 2 3 4 5\n\n[output]\n1\n\n\"\"\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 7 11\\n') == '2'\nassert solution('2 2\\n1 1\\n') == '1'\nassert solution('1 1\\n') == '0'\nassert solution('0 1\\n') == '0'\n\"\"\"\nfrom math import inf"
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n\"\"\""
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abcba') == 'No'\nassert solution('a') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('abcdefg') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'Yes'\nassert solution('aba') == 'Yes'\nassert solution('abac') == 'No'\nassert solution('abacd') == 'No'\nassert solution('abacad') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('asakasak') == 'Yes'\nassert solution('akasakaasakasak') == 'No'\nassert solution('a') == 'Yes'\nassert solution('aa') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('aba') == 'No'\nassert solution('a') == 'Yes'\nassert solution('aaaa') == 'No'\nassert solution('caat') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"a\") == \"Yes\"\nassert solution(\"aaaa\") == \"No\"\nassert solution(\"kaskasaka\") == \"Yes\"\nassert solution(\"akasakasaka\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('johkahjja') == 'Yes'\nassert solution('pppppppp') == 'Yes'\nassert solution('ppppppppppp') == 'No'\nassert solution('kskkskkss') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('sstee') == 'No'\nassert solution('ararfarsarf') == 'Yes'\nassert solution('qwertyu') == 'No'\nassert solution('sdfghjk') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abracadabra') == 'Yes'\nassert solution('qwerty') == 'No'\nassert solution('aaaa') == 'Yes'\nassert solution('abb') == 'No'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akaboh') == 'No'\nassert solution('abecba') == 'Yes'\nassert solution('abcab') == 'No'\nassert solution('abdba') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('a') == 'No'\nassert solution('aba') == 'Yes'\nassert solution('abaa') == 'Yes'\nassert solution('abab') == 'No'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"0.1 0.1\") == \"0\"\nassert solution(\"2.0 5.0\") == \"7\"\nassert solution(\"123 456.789\") == \"123456789\"\nassert solution(\"0.123 0.456.789\") == \"0.123456789\""
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0') == '0'\nassert solution('1 1') == '1'\nassert solution('0 1') == '0'\nassert solution('1 0.1') == '0'\nassert solution('1 0.100000000000001') == '0'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(f\"\\nPassed!\\n\")"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"15 10\") == \"15\"\nassert solution(\"15 11\") == \"16\"\nassert solution(\"25 11\") == \"26\"\nassert solution(\"4 9\") == \"5\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 20') == None\nassert solution('1.1') == None\nassert solution('1.1 2') == None\nassert solution('0 1') == None\nassert solution('10 10') == None\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0.1 10\") == \"217\"\nassert solution(\"1.1 10\") == \"217\"\nassert solution(\"0.01 10\") == \"217\"\nassert solution(\"0.1 10\") == \"217\"\nassert solution(\"1.1 10\") == \"217\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 3\nassert solution('9 1') == 9\nassert solution('5 1') == 5\nassert solution('3 4') == 1\nassert solution('0 1') == 0\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1.10') == '217'\nassert solution('3 1.10') == '3'\nassert solution('2 1.5') == '2'\nassert solution('3 1.5') == '3'\nassert solution('2 1.2') == '2'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == print(solution(input))\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == \"217\"\nassert solution(input(\"3 2\")) == \"6\"\nassert solution(input(\"5 2\")) == \"10\"\nassert solution(input(\"6 0\")) == \"0\"\nassert solution(input(\"10 0\")) == \"0\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n1') == '3'\nassert solution('9\\n9') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n3') == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''\n7\n5\n2\n3\n4\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('test') == 0\nassert solution('test') == 0\nassert solution('test') == 0\n\nassert solution('1') == 1\nassert solution('2') == 1\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n7\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\n\nassert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '0'\n\nassert solution('''\n6\n1\n2\n3\n2000000000\n763243547\n''') == '1'\n\nassert solution('''\n6\n3\n1\n2\n3\n2000000000\n763243547\n''') == '999999999'\n\nassert solution('''\n6\n1\n2\n3\n2000000000\n763243547\n''') == '381621773'"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('a') == 0\nassert solution('1') == 0\nassert solution('0') == 0\nassert solution('3') == 0\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_out\n\nFor test purposes only\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n1 2\\n1 3\\n2 3\\n3 1') == '1'\nassert solution('3 2 1\\n1 2\\n2 3\\n3 1') == '0'\nassert solution('3 2 1\\n1 2\\n2 3\\n3 1\\n3 2\\n1 3\\n2 3\\n3 1') == '2'\nassert solution('1 1 1\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('2 1 1\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''5 5 1\n1 2\n2 3\n3 4\n4 1\n''') == '0'\n'''\n\n'''\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''4 3 2\n1 2\n1 3\n2 3\n2 3\n''') == '0'\nassert solution('''2 1 2\n1 2\n2 3\n3 1\n1 4\n4 5\n5 1\n2 4\n3 5\n4 5\n1 2\n''') == '3'\nassert solution('''2 1 2\n2 1\n1 2\n1 2\n2 3\n1 2\n1 3\n2 3\n2 3\n1 2\n1 3\n1 2\n''') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('5 4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '0'\nassert solution('5 4 2\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('1 2\\n1 3\\n2 3\\n3 1') == '0'\nassert solution('1 2\\n1 3\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('1 2\\n2 3\\n1 3') == '2'\nassert solution('1 2\\n1 3\\n2 4') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''2 3 1\n1 2\n2 3''') == '0'\nassert solution('''4 4 4\n1 2\n2 3\n3 4\n4 1\n''') == '0'\nassert solution('''4 4 4\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('5\\n1') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('4\\n2\\n3\\n4\\n5') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"\nassert solution(\"7 9 1\") == \"1\"\nassert solution(\"9 8 9\") == \"0\"\nassert solution(\"5 6 1\") == \"0\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n2 3\\n3 1\\n4 7\\n5 4\\n6 3\\n6 1\\n8 1\\n7 1') == '3'\nassert solution('3 3 3\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n1 5\\n5 3\\n5 4\\n1 6\\n2 6\\n1 1') == '2'\nassert solution('2 2 1\\n1 2\\n1 3\\n2 3\\n1 1\\n2 1\\n1 2\\n2 3\\n1 3\\n1 2\\n2 1') == '0'\nassert solution('4 7\\n4 1\\n2 3\\n3 1\\n3 4\\n4 7\\n3 4\\n4 2\\n1 3\\n1 2\\n2 1') == '1'\nassert solution('5 4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n2 3\\n3 1\\n4 7\\n5 4\\n6 3\\n6 1\\n8 1\\n7 1') == '3'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 1') == 0\nassert solution('5 4 5') == 1\nassert solution('4 4 1') == 1\nassert solution('2 3 2') == 0"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('6\\n1 1 1 4 4 4\\n1') == '5'\nassert solution('6\\n1 1 1 4 4 4\\n1\\n1') == '5'\nassert solution('6\\n1 1 1 4 4 4\\n1\\n1\\n1') == '5'\n\n\"\"\"\n\nfrom itertools import groupby\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('2\\n1 1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\"\nassert solution(\"4\\n1 1 1 4 4 4\") == \"5\"\nassert solution(\"5\\n5 5 5 5 5 5\") == \"10\"\nassert solution(\"6\\n5 5 5 5 5 5\") == \"10\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('4\\n3 2 4 1\\n') == '4'\nassert solution('2\\n1 1\\n') == '1'\nassert solution('5\\n1 1 1 4 4 4\\n') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '2'\nassert solution('1 2 3 4') == '4'\nassert solution('1 1 1 4 4 4') == '5'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '2'\nassert solution('5\\n1') == '2'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 4\\n') == '4'\nassert solution('4\\n1 1 1 4 4\\n') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10'"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4') == '5'\nassert solution('1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3\\n1 32\\n2 63') == '000001000002\\n000002000001\\n000001000001'\nassert solution('2 3\\n1 32\\n2 63') == '000001000002\\n000002000001\\n000001000001'\nassert solution('2 2\\n1 32\\n2 63') == '000001000002\\n000001000002\\n000001000001'\nassert solution('2 4\\n1 32\\n2 63\\n1 12\\n2 63\\n1 12') == '000001000002\\n000001000002\\n000001000001\\n000001000001\\n000001000002\\n000001000002'\nassert solution('3 3\\n1 32\\n2 63\\n1 12\\n2 63\\n1 12') == '000001000002\\n000001000002\\n000001000001\\n000001000001\\n000001000002\\n000001000002'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12''') == '000001000002'\nassert solution('''2 3\n1 32\n2 63\n1 12\n1 12\n1 12\n1 12''') == '000001000001'\nassert solution('''2 3\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1 32\n1"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"1 2\") == \"000002000001\"\nassert solution(\"1 3\") == \"000001000001\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3\\n1 32\\n2 63') == '000001000002\\n000002000001\\n000001000001'\nassert solution('2 3\\n1 32\\n2 63') == '000002000001\\n000001000002'\nassert solution('3 4\\n1 32\\n2 63\\n3 4') == '000002000001\\n000001000002\\n0000010003'\nassert solution('2 3\\n1 32\\n2 63') == '000002000001\\n000001000002'\nassert solution('2 3\\n1 32\\n2 63\\n3 4') == '000002000001\\n000001000002\\n0000010003'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002'\nassert solution('''2 3\n1 32\n2 63''') == '000001000001'\nprint(solution('''2 3\n1 32\n2 63'''))"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 22\\n') == '000001000002\\n000002000001'\n\nimport sys\nassert solution(sys.stdin.read()) == '000001000002\\n000002000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == open(\"test_output.txt\", \"r\").read()\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002\nassert solution('''5 5\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '00000000000001'\nassert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002'\nassert solution('''1 1\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '00000000000001'\nassert solution('''5 5\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '00000000000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '000001000001'\nassert solution('2 3') == '000002000001'\nassert solution('2 3') == '000001000001'\nassert solution('2 3') == '000002000001'\nassert solution('1 4') == '000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 3\n1 32\n2 63\n1 12\n\"\"\"\n    ) == \"\"\"\n000001000002\n000002000001\n000001000001\n\"\"\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('6\\n2 10 8 40') == '2'\nassert solution('8\\n2 10 8 40') == '2'\nassert solution('10\\n2 10 8 40') == '2'\nassert solution('16\\n2 10 8 40') == '2'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 1 1 1') == '1'\nassert solution('4\\n2 10 8 40') == '1'\nassert solution('1\\n10') == '10'\nassert solution('7\\n2 2 1 2 2 1') == '1'\nassert solution('6\\n2 2 1 2 1 1') == '2'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 10 8 40''') == '2'\nassert solution('''4\n4 3 2 1''') == '1'\nassert solution('''5\n2 10 8 40 49''') == '2'\nassert solution('''5\n3 8 9 10 50''') == '2'\nassert solution('''6\n1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\"\"\""
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2 10 8 40''') == '2'\nassert solution('''1\n2 10 8 40''') == '2'\nassert solution('''2\n1 2 3''') == '1'\nassert solution('''5\n10 10 10 10 10''') == '0'\nassert solution('''6\n100 5 10 1 1 1''') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n2 10 8 40''') == '2'\nassert solution('''4\n2 10 8 40''') == '2'\nassert solution('''4\n2 10 8 40''') == '2'\nassert solution('''4\n2 10 8 40''') == '2'\nassert solution('''4\n2 10 8 40''') == '2'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[stdin.index('\\n')+1:][0]\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 10 8 40\") == \"2\"\nassert solution(\"2 10 8 40\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 10 8 40\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'false'\nassert solution('?') == 'false'\nassert solution('?') == 'false'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == '0250341'\nassert solution('?(__+___+__-___):-__>__. ') == '0101'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(?(__+___+__-___):-___>__) == \"0250341\"\nassert solution(?(______________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______) == \"0101\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('?(_-*__:-*__)-___>__') == '0101'\nassert solution('?(__-_+_/_____):-__>__,_____<__') == '0250341'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nprint(solution(stdin))\n\nassert solution('?(_-*__:-*__)-___>__') == '0101'\nassert solution('?(__-_+_/_____):-__>__,_____<__') == '0250341'\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nprint(\"All set? Click \\\"Check\\\" to earn cool rewards!\")\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\n\nassert solution(\"?(___________-_+_/____*____):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0101\"\n\nprint('All tests passed successfully!')"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"?(_-+_*__:_*_/-___>__)\") == \"0101\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"0250341\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\nassert solution(\"?(_-+_*__:_*_/-___>__,-_,_/_-__<___-<____,____<_____,_____<______,______<_______).\") == \"0250341\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______') == '0250341'"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''?(_-_/___*__):-___>__.\n''') == '0010', \"First Test\"\n\nassert solution(\n'''?(__-_+_/_____):-__>__,_____<__.\n''') == 'false', \"Second Test\"\n\nassert solution(\n'''?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0250341', \"Third Test\"\n\nassert solution(\n'''?(__+___+__-___):-___>__.\n''') == '0101', \"Fourth Test\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__. _<___,___<____,____<_____,_____<______,______<_______..<___,___<____,____<_____,_____<______,______<_______') == '0101'\nprint('All set! Click \"Check\" to earn cool rewards!')\n\n\"\"\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n\n'''\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\nassert solution('3 4 1000000000000000000') == '0'\nassert solution('2 2 1000000000000000000') == '0'\n\n\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0'\nassert solution('3 4 3\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '3'\nassert solution('3 4 3\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 2''') == '5'\nassert solution('''3 4 1000000000000000000''') == '0'\nassert solution('''3 4 2''') == '5'\nassert solution('''3 4 4''') == '6'\nassert solution('''4 4 4''') == '10'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\n2\\n1\\n3\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '3 3 11'\n) == '3'\n\nassert solution(\n    '3 4 2'\n) == '5'\n\nassert solution(\n    '3 4 1000000000000000000'\n) == '0'\n\nassert solution(\n    '3 4 1'\n) == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '5'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '5'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '0'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1''') == '8'\nassert solution('''3 4 4\n1 3 3 3\n0 3 3 2\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1''') == '24'\nprint(solution('''3 4 4\n1 3 3 3\n0 3 3 2\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1\n3 0 1 1'''))\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"\nassert solution(\"3 4 8\\n1 1 1 1\\n0 1 1 1\\n0 0 1 1\\n0 0 0 1\\n0 0 0 0\\n0 0 0 0\") == \"0\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\nrozesasfcoqdoh\n''') == 'codeforces'\n\nassert solution('''16\nplmaetwoxesisiht\n''') == 'thisisexampletwo'\n\nassert solution('''1\nz\n''') == 'z'\n'''\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\nassert solution(\"z\") == \"z\""
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('z') == 'z'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('rocesfedoc') == 'codeforces'\nassert solution('roesfedoc') == 'orcesfedoc'\nassert solution('roesfedoc') == 'orcesfedoc'\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''codeforces''') == 'codeforces'\nassert solution('''secrofedoc''') == 'orcesfedoc'\nassert solution('''thisisexampletwo''') == 'twoexamplet'\nassert solution('''rocesfedoc''') == 'rocesfedoc'\nassert solution('''z''') == 'z'\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n\n\n\"\"\"\n\nfrom fractions import Fraction\n\nn = int(input())\ns = input()\n\nr = ''\n\nfor i in range(n, 0, -1):\n    if Fraction(i, n) > Fraction(1, 2):\n        r = s[(n-i):n] + r\n        s = s[:n-i] + s[n:]\n\nprint(s)\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n\n\"\"\""
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ba'\nassert solution('abc') == 'cba'\nassert solution('abcd') == 'cdab'\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n\"\"\""
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('5 14') == '19'\nassert solution('41 24') == '65'\nassert solution('4 1') == '4'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('1 1') == '1'\nassert solution('-12 -8') == '0'\nassert solution('-4 4') == '0'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('1 9') == 10\nassert solution('1 2') == 3\nassert solution('2 2') == 4\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 50') == '94'\nassert solution('3 6') == '8'\nassert solution('5 0') == '5'\nassert solution('5 1') == '6'\nassert solution('8 8') == '24'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 14'''\n) == '19'\n\nassert solution(\n'''381 492'''\n) == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 2') == '3'\nassert solution('1 3') == '4'\nassert solution('1 4') == '5'\nassert solution('1 5') == '6'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4') == '5'\nassert solution('5 14') == '19'\nassert solution('381 492') == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873\nassert solution('1 1') == 1\nassert solution('100 2') == 100\nassert solution('0 0') == 0\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2+3''') == '++>'\nassert solution('''9-7''') == '+++++++++>'\nassert solution('''2+3''') == '++>'\nassert solution('''9-7''') == '+++++++++>'\nassert solution('''0+0''') == '++>++>'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('0') == '<[<+>-]<'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"1+1\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"3+4\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"3-4\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2+3') == '++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n'\nassert solution('9-7') == '+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n'\nassert solution('2+5*2-5') == '++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n'\nassert solution('30000+40') == '++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n'\nassert solution('150000+100000') == '++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9+7') == '+++++++++++++++++'\nassert solution('1+2+3+4+5+6+7+8+9+10') == '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"\nassert solution(\"\") == \"\"\n\n'''\n'''\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('9-7') == '+++++++++>'\n\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"12-8\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++>\\n++++++++++.\\n\"\nassert solution(\"11-8\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++>\\n++++++++++.\\n\"\nassert solution(\"5+5\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++>\\n++++++++++.\\n\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1+2') == '+>'\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('1-2') == '<[-]<'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == '''1\n2\n5\n2\n0\n'''\n\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000''') == '''8\n2\n4\n1\n'''\n\nassert solution('''1\n1\n2\n3\n4\n5''') == '''0\n1\n2\n3\n4\n5\n'''\n\nassert solution('''2\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0''') == '''8\n2\n4\n1\n'''\n\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000''') == '''8\n2\n4\n1\n'''"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n3\n20\n38\n56\n''') == '12345678901'\nassert solution('''2\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '0123456789'\n'''\n\n'''\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1234123123412345$\\dots$') == '2345678901'\nassert solution('11212312341234512345612345671234567812345678912345678910') == '0123456789'\nassert solution('123456789') == '6789'\nassert solution('11212312341234512345612345671234567812345678912345678910') == '987654321'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3\\n3') == '3'\nassert solution('4\\n2132\\n506\\n999999999999999999\\n1000000000000000000') == '8\\n2\\n4\\n1'\nassert solution('5\\n1\\n3\\n20\\n38\\n56') == '1\\n2\\n5\\n2\\n0'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == '''1\n2\n5\n2\n0\n'''\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000''') == '''8\n2\n4\n1\n0\n'''\n\n'''\nThe last line contains an integer $q$ \u2014 the number of queries, and $q$ lines follow. Each line contains one integer $k$ \u2014 the description of the corresponding query.\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 500$) \u2014 the number of queries.\n\nThe $i$-th of the following $q$ lines contains one integer $k$ $(1 \\le k \\le 10^{18})$ \u2014 the description of the corresponding query.\n\nOutput\n$q$ lines. In the $i$-th line print one digit $x_i$ ($0 \\le x_i \\le 9)$ \u2014 the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k$ of the sequence.\n\nThe first line contains one integer $q$ \u2014 the number of queries, and $q$ lines follow. Each line contains one integer $k$ \u2014 the description of the corresponding query.\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 500$) \u2014 the number of queries.\n\nThe $i$-th of the following $q$ lines contains one integer $k$ ($1 \\le k \\le 10^{18})$ \u2014 the description of the corresponding query.\n\nOutput\n$q$ lines. In the $i$-th line print one digit $x_i$ ($0 \\le x_i \\le 9)$ \u2014 the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k$ of the sequence.\n\nThe first line contains one integer $q$ \u2014 the number of queries, and $q$ lines follow. Each line contains one integer $k$ \u2014 the description of the corresponding query.\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 500$) \u2014 the number of queries.\n\nThe $i$-th of the following $q$ lines contains one integer $k$ ($1 \\le k \\le 10^{18})$ \u2014 the description of the corresponding query.\n\nOutput\n$q$ lines. In the $i$-th line print one digit $x_i$ ($0 \\le x_i \\le 9)$ \u2014 the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k$ of the sequence.\n\nThe first line contains one integer $q$ \u2014 the number of queries, and $q$ lines follow. Each line contains one integer $k$ \u2014 the description of the corresponding query.\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 500$) \u2014 the number of queries.\n\nThe $i$-th of the following $q$ lines contains one integer $k$ ($1 \\le k \\le 10^{18})$ \u2014 the description of the corresponding query.\n\nOutput\n$q$ lines. In the $i$-th line print one digit $x_i$ ($0 \\le x_i \\le 9)$ \u2014 the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k$ of the sequence.\n\nThe first line contains one integer $q$ \u2014 the number of queries, and $q$ lines follow. Each line contains one integer $k$ \u2014 the description of the corresponding query.\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 500$) \u2014 the number of queries.\n\nThe $i$-th of the following $q$ lines contains one integer $k$ ($1 \\le k \\le 10^{18})$ \u2014 the description of the corresponding query.\n\nOutput\n$q$ lines. In the $i$-th line print one digit $x_i$ ($0 \\le x_i \\le 9)$ \u2014 the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k$ of the sequence.\n\nThe first line contains one integer $q$ \u2014 the number of queries, and $q$ lines follow. Each line contains one integer $k$ \u2014 the description of the corresponding query.\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 500$) \u2014 the number of queries.\n\nThe $i$-th of the following $q$ lines contains one integer $k$ ($1 \\le k \\le 10^{18})$ \u2014 the description of the corresponding query.\n\nOutput\n$q$ lines. In the $i$-th line print one digit $x_i$ ($0 \\le x_i \\le 9)$ \u2014 the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k$ of the sequence.\n\nThe first line contains one integer $q$ \u2014 the number of queries, and $q$ lines follow. Each line contains one integer $k$ \u2014 the description of the corresponding query.\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 500$) \u2014 the number of queries.\n\nThe $i$-th of the following $q$ lines contains one integer $k$ ($1 \\le k \\le 10^{18})$ \u2014 the description of the corresponding query.\n\nOutput\n$q$ lines. In the $i$-th line print one digit $x_i$ ($0 \\le x_i \\le 9)$ \u2014 the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k$ of the sequence.\n\nThe first line contains one integer $q$ \u2014 the number of queries, and $q$ lines follow. Each line contains one integer $k$ \u2014 the description of the corresponding query.\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 500$) \u2014 the number of queries.\n\nThe $i$-th of the following $q$ lines contains one integer $k$ ($1 \\le k \\le 10^{18})$ \u2014 the description of the corresponding query.\n\nOutput\n$q$ lines. In the $i$-th line print one digit $x_i$ ($0 \\le x_i \\"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('1$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('12345$\\dots$') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('12345$\\dots$5') == '11212312341234512345612345671234567812345678912345678910'\nassert solution('12345$\\dots$567') == '11212312341234512345612345671234567812345678912345678910'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == input\n\n\"\"\"\n\nimport sys\nassert (sys.stdin.read()) == str(input())\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\"\"\") == \"\"\"\\\n1\n2\n5\n2\n0\n\"\"\"\n\n\n\"\"\"\n##Euler 51\n\nConsider the sequence of triangle numbers $\\triangle n = \\sum_{i=1}^n i^{3/2}$ for $n \\ge 0$.\n\nWe can see that the first 30 triangle numbers are:\n\n$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190, 210, 231, 276, 333, 396, 486, 595, 725, 1056, 1275, 1449, 1666, 1872, 2112, 2469, 2790, 3273, 3636, 4275, 4900, 5986, 6792, 7808, 8941, 10236, 12177, 13804, 15138, 16801, 18258, 20265, 23036, 26415, 28892, 32623, 35144, 38356, 43825, 47143, 54596, 57252, 61245, 71426, 82439, 92700, 107553, 116272, 124593, 139314, 154864, 174969, 187420, 209903, 230048, 259142, 291685, 326370, 364606, 386719, 440922, 470067, 531446, 577292, 633484, 694418, 759765, 821485, 894447, 1065174, 1162637, 1249138, 1418979, 1585638, 1716701, 1844595, 1966084, 2223969, 2484142, 2899452, 3288597, 3788005, 4311108, 4770082, 5157509, 5775694, 6288807, 7113852, 8288105, 935217, 10721566, 11695641, 12775144, 14078352, 15971419, 17452612, 18785049, 21110099, 23114839, 25964478, 29177136, 34158937, 39082374, 43817110, 47774003, 53395614, 58562835, 64454447, 71089525, 77940532, 85898144, 93955243, 103087193, 11333767, 123595182, 133671875, 14448978, 15478250, 1676414, 18694511, 19905863, 21784414, 23480532, 25791743, 28337779, 3099726, 32954580, 35651550, 38825837, 41695523, 47770921, 53480647, 57176426, 60904181, 67780802, 75581224, 81737807, 89859611, 107414058, 11595837, 12400331, 13551597, 14784703, 15987994, 17321566, 18756080, 19934264, 23357911, 26596465, 29236522, 33401641, 36580249, 38870175, 41968641, 47975262, 53648931, 56967121, 6120500, 67203399, 7131750, 79540402, 85905989, 94075319, 103516899, 114089973, 124935272, 135950112, 147439817, 157750763, 167944271, 179079799, 197452761, 233992587, 266432303, 291410539, 322154860, 352909234, 378249277, 409582898, 449448027, 477646417, 527097333, 572870666, 607975450, 672214167, 703267899, 779322064, 856128232, 943113560, 993074779, 104979260, 111147893, 118415119, 124032135, 130245999, 139518119, 147949128, 157524442, 168153720, 183969801, 191606623, 200947160, 21292339, 233291740, 264272926, 287965522, 329511792, 359506890, 386822043, 416901661, 477646410, 534804853, 57176427, 60904160, 672033699, 713175038, 795403948, 859059899, 9407531922, 103516899, 114089972, 1249352708, 135950112, 1474398047, 1577507629, 1679442700, 179079799, 197452760, 233992588, 2664323029, 291410539, 322154860, 3529092349, 3782492759, 4095828984, 4494480270, 47764641759, 52709733310, 57287066699, 6079754501, 6722141667, 70326789907, 77932206421, 8561282322, 94311356021, 99307477923, 10497926020, 11114789301, 11841511920, 12403213520, 13024599937, 13951811920, 14794912808, 15752444219, 16815372020, 18396980122, 191606623219,"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''573''') == '4'\nassert solution('''569''') == '0'\nassert solution('''1''') == '1'\nassert solution('''41''') == '3'\nassert solution('''10''') == '5'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('575') == '4'\nassert solution('575') == '4'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('100') == '3'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"16\") == \"6\"\nassert solution(\"10000\") == \"0\"\nassert solution(\"16\") == \"6\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('575') == '4'\nassert solution('28471') == '2'\nassert solution('23291671') == '1'\nassert solution('345357') == '0'\nassert solution('555555') == '0'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('100') == '0'\nassert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('100') == '0'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('575') == '4'\nassert solution('34') == '1'\nassert solution('12345') == '5'\nassert solution('1345') == '1'\nassert solution('343543') == '3'\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('00') == '1'\nassert solution('0101') == '1'\nassert solution('0111') == '1'\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('000') == 1\nassert solution('00') == 1\nassert solution('0') == 0\nassert solution('0') == 1\nassert solution('11111') == 1\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\n'''\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"000\") == \"1\"\nassert solution(\"000\") == \"1\"\nassert solution(\"0011\") == \"3\"\nassert solution(\"0011\") == \"3\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[len(stdin)//2]\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"0011\") == \"1\"\nassert solution(\"10100\") == \"2\"\nassert solution(\"1010011100\") == \"3\"\nassert solution(\"110100111101\") == \"2\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('000') == 1\nassert solution('111') == 2\nassert solution('1111') == 3\nassert solution('11111') == 4\nassert solution('01111') == 4\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('0111') == 1\nassert solution('11111') == 0\nassert solution('111000000') == 0\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"01000\") == 1\nassert solution(\"00010\") == 2\nassert solution(\"01110\") == 0\nassert solution(\"11000\") == 1\nassert solution(\"00100\") == 2\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.replace('1', '0').replace('0', '1')\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"APPROVED\"\nassert solution(sample_input_2) == \"DENIED\"\nassert solution(sample_input_3) == \"APPROVED\"\nassert solution(sample_input_4) == \"DENIED\"\nassert solution(sample_input_5) == \"APPROVED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 7 9 10 31') == \"APPROVED\"\nassert solution('1 2 3 4 5') == \"DENIED\"\nassert solution('12345 12345 12345 12345 12345') == \"DENIED\"\nassert solution('4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == \"APPROVED\"\n\"\"\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n') == \"DENIED\"\nassert solution('2\\n1 2\\n') == \"APPROVED\"\nassert solution('2\\n1 2\\n') == \"APPROVED\"\nassert solution('2\\n1 2\\n') == \"DENIED\"\nassert solution('2\\n1 2\\n') == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(sample_input0) == \"APPROVED\"\nassert solution(sample_input1) == \"DENIED\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\n6 7 9 10 31\n\"\"\") == \"APPROVED\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n1\n1\n\"\"\") == \"DENIED\"\n\nassert solution(\n\"\"\"\n1\n2\n1\n1\n1\n\"\"\") == \"DENIED\"\n\nassert solution(\n\"\"\"\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n\"\"\") == \"DENIED\"\n\nassert solution(\n\"\"\"\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"DENIED\""
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 7 9 10 31') == \"APPROVED\"\nassert solution('8 32 6 8 9 5 1 4') == \"DENIED\"\nassert solution('3 4 2 4 5 5 6 7 8 9') == \"APPROVED\"\nassert solution('3 4 2 5 4 5 6 7 8 9') == \"DENIED\"\nassert solution('4 3 2 4 5 4 6 7 8 9') == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''7\n9 10 31''') == 'DENIED'\nassert solution('''7\n10 31''') == 'APPROVED'\nassert solution('''5\n4 3 1 2''') == 'DENIED'\nassert solution('''7\n9 10 31''') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n6 7 9 10 30''') == 'DENIED'\nassert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n6 7 9 10 31''') == 'APPROVED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3 4') == 'DENIED'\nassert solution('2\\n1 2') == 'DENIED'\nassert solution('2\\n2 3') == 'APPROVED'\nassert solution('3\\n2 3 4') == 'DENIED'\nassert solution('3\\n2 3 4 5') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'APPROVED'\nassert solution('6 7 9 10 31') == 'DENIED'\n'''"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UDLR\") == \"Yes\"\nassert solution(\"DRRUULR\") == \"Yes\"\nassert solution(\"DRRUDLDR\") == \"No\"\nassert solution(\"RUDRUULUDLDRUDUD\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LDRU') == 'No'\nassert solution('RDL') == 'Yes'\nassert solution('LDR') == 'Yes'\nassert solution('R') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'Yes'\nassert solution('RUDLR') == 'Yes'\nassert solution('RDDDDDLLRLRR') == 'No'\nassert solution('LDRRLD') == 'Yes'\nassert solution('RUDDDDLRRDDUDDLLRUDRRLLURURUUDUDDDDRRLUDUUDUDDDDDRUUDUDUDUDUUDUDUDUDDUDUDUDUDUDUUDUDDDDLDRUDDUDDRRLRR') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RDRUDLDR\") == \"No\"\nassert solution(\"RDRUULDDRRULDUDDRUDUDDRRDRUDUDDDLDRRULUDRUULUDUDUDUDULURDLRLDUDUUUDDRRURDRUULURDDUDDRULRUDRLUDUDUDLR\") == \"Yes\"\nassert solution
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDR') == 'No'\nassert solution('LDR') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LDRULULUDRDL') == 'No'\nassert solution('RRRDDD') == 'No'\nassert solution('RDRR') == 'No'\nassert solution('RDRRR') == 'Yes'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(RUDLUDR) == \"Yes\"\nassert solution(RURDUDLRLRUULRULRDUDUDL) == \"No\"\nassert solution(RURDUDLRLRUULRULRDUDUDLRLRUULRULRULRDUDUDLRLRUULRULRULRURUDUDLRLRUULRULRULRUDUDLRLRUULRULRULRURUDUDLRLRUULRULRULRURUDUDLRLRUULRULRULRUUDLRLRUULRULRULRUUDLRLRUULRULRULRURUDUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUDUDLRLRUULRULRULRURUDUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUDUDLRLRUULRULRULRURUDUDLRLRUULRULRULRUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLRUULRULRULRURUUDLRLR"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RDRUDDR\") == \"Yes\"\nassert solution(\"DDLRRUULR\") == \"No\"\nassert solution(\"DDLRRUDDR\") == \"Yes\"\nassert solution(\"RDRUD\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('UDDDUDUU') == 'Yes'\nassert solution('LURDRUULD') == 'No'\nassert solution('UDDDUDUUUD') == 'Yes'\nassert solution('UDUDUDUDUDUDUDUD') == 'Yes'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\n'''"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''5\n3\n2\n3\n4\n3\n5''') == '7'\nassert solution('''5\n3\n2\n3\n3\n3\n5''') == '7'\nassert solution('''5\n3\n2\n3\n3\n3\n5''') == '7'\nassert solution('''5\n3\n2\n3\n3\n3\n5''') == '7'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n1\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n\\n') == '7'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '300'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '50000'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '70000'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '100000'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '2'\nassert solution('5\\n1') == '3'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('100\\n100\\n100\\n100\\n100\\n100') == '1000'\nassert solution('10\\n10\\n10\\n10\\n10\\n10') == '1'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n1\\n1\\n1\\n1') == '0'\nassert solution('5\\n2\\n2\\n2\\n2') == '0'\nassert solution('5\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5\\n7') == '7'\nassert solution('4\\n3\\n2\\n1') == '4'\nassert solution('3\\n3\\n3\\n3') == '8'\nassert solution('1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"5\\n2\\n3\\n4\\n5\") == \"12\"\nassert solution(\"5\\n2\\n4\\n3\\n5\") == \"11\"\nassert solution(\"5\\n3\\n2\\n4\\n5\") == \"13\"\nassert solution(\"5\\n3\\n4\\n2\\n5\") == \"12\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == ''\nassert solution('9') == ''\nassert solution('10') == ''\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '0'\nassert solution('10') == '9'\nassert solution('20') == '99'\nassert solution('100') == '999'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"10 1\") == \"\"\nassert solution(\"10 1 1\") == \"\"\nassert solution(\"10 1 1 1\") == \"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('2') == '9'\nassert solution('3') == '8'\nassert solution('4') == '7'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'') == 2\nassert solution(\n'''\n''') == 2\nassert solution(\n'''\n''') == 4\nassert solution(\n'''\n''') == 4\nassert solution(\n'''\n''') == 8\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == 2\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 3\nassert solution('4') == 4\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('8') == '1'\nassert solution('2') == '2'\nassert solution('10') == '5'\nassert solution('100') == '24'\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\n'''\n"
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"999\") == \"\"\nassert solution(\"9\") == \"\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('3') == None\nassert solution('2') == 2\nassert solution('1') == None\nassert solution('23') == 23\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20') == '23'\nassert solution('30') == '29'\nassert solution('40') == '39'\nassert solution('50') == '49'\nassert solution('60') == '59'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20') == '23'\nassert solution('10') == '11'\nassert solution('1') == '2'\nassert solution('100') == '103'\nassert solution('1000') == '1001'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == None\nassert solution(2) == 2\nassert solution(4) == 5\nassert solution(5) == 7\nassert solution(10) == 11\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('    ') == ''\nassert solution('  1  ') == '2'\nassert solution('  10  ') == '11'\nassert solution('  20  ') == '23'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"23\"\nassert solution(\"3\") == \"5\"\nassert solution(\"400\") == \"401\"\nassert solution(\"6\") == \"7\"\nassert solution(\"40\") == \"41\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20') == '23'\nassert solution('22') == '23'\nassert solution('10') == '11'\nassert solution('1') == '2'\nassert solution('10^5') == '23'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == 23\nassert solution('20') == 23\nassert solution('30') == 23\nassert solution('40') == 31\nassert solution('50') == 31\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20') == '23'\nassert solution('300') == '257'\nassert solution('300') == '257'\nassert solution('300') == '257'\nassert solution('300') == '257'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7\") == 7\nassert solution(\"27\") == 29\nassert solution(\"27\") == 29\nassert solution(\"9\") == 19\nassert solution(\"17\") == 29\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4\n3 1 3 2\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"6\n6 6 6 6 6 6\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"10\n11 9 8 7 6 5 4 3 2 1\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"16\n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"8\n1 4 6 3 2 5 8 7\"\"\"\n) == \"3\""
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3 2') == '1'\nassert solution('3\\n1 3 2\\n3 1 2') == '1'\nassert solution('3\\n1 3 2\\n3 1 2\\n3 1 2') == '1'\nassert solution('3\\n1 3 2\\n3 1 2\\n3 1 2\\n3 1 2') == '1'\nassert solution('4\\n1 3 2 3') == '2'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''5\n3 1 3 2 3''') == '2'\nassert solution('''6\n3 1 3 2 3 3''') == '3'\nassert solution('''7\n3 1 3 2 3 3 3''') == '4'\nassert solution('''8\n3 1 3 2 3 3 3 3''') == '5'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('3\\n1 2 3') == '2'\nassert solution('4\\n1 2 3 4') == '0'\nassert solution('4\\n1 1 1 1') == '0'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n5 5 5 5 5') == '5'\nassert solution('2\\n1 2') == '0'\nassert solution('5\\n1 1 1 1 1') == '5'\nassert solution('2\\n1 1') == '0'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('4\\n3 1 3 2') == '1'\nassert solution('4\\n3 1 2 3') == '2'\nassert solution('4\\n3 1 2 3') == '2'\nassert solution('4\\n3 1 3 2') == '2'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1 3 2') == '1'\nassert solution('3 1 3 2') == '1'\nassert solution('3 1 3 2') == '1'\nassert solution('3 1 3 2') == '1'\nassert solution('3 1 3 2') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''3\n3 1 3''') == '2'\nassert solution('''3\n3 1 3''') == '2'\nassert solution('''3\n3 1 3''') == '2'\nassert solution('''1\n5''') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n3 1 3 2 4') == '2'\nassert solution('5\\n3 1 3 2 4') == '1'\nassert solution('10\\n3 1 3 2 4 5 6 7 8 9 10') == '4'\nassert solution('10\\n3 1 3 2 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''3 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 100 90 80\n100\n100\n100\n100\n100''') == '8'\nassert solution('''5 100 90 80\n100\n100\n100\n100\n100''') == '16'\nassert solution('''5 100 90 80\n100\n100\n100\n100\n100''') == '16'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 100 90 80\n60\n50\n45\n40\n30\n25\n20\n15\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n-1\n-2\n-3\n-4\n-5\n-6\n-7\n-8\n-9\n-10\n-11\n-12\n-13\n-14\n-15\n-16\n-17\n-18\n-19\n-20\n-21\n-22\n-23\n-24\n-25\n-26\n-27\n-28\n-29\n-30\n-31\n-32\n-33\n-34\n-35\n-36\n-37\n-38\n-39\n-40\n-41\n-42\n-43\n-44\n-45\n-46\n-47\n-48\n-49\n-50\n-51\n-52\n-53\n-54\n-55\n-56\n-57\n-58\n-59\n-60\n-61\n-62\n-63\n-64\n-65\n-66\n-67\n-68\n-69\n-70\n-71\n-72\n-73\n-74\n-75\n-76\n-77\n-78\n-79\n-80\n-81\n-82\n-83\n-84\n-85\n-86\n-87\n-88\n-89\n-90\n-91\n-92\n-93\n-94\n-95\n-96\n-97\n-98\n-99\n-100\n-101\n-102\n-103\n-104\n-105\n-106\n-107\n-108\n-109\n-110\n-111\n-112\n-113\n-114\n-115\n-116\n-117\n-118\n-119\n-120\n-121\n-122\n-123\n-124\n-125\n-126\n-127\n-128\n-129\n-130\n-131\n-132\n-133\n-134\n-135\n-136\n-137\n-138\n-139\n-140\n-141\n-142\n-143\n-144\n-145\n-146\n-147\n-148\n-149\n-150\n-151\n-152\n-153\n-154\n-155\n-156\n-157\n-158\n-159\n-160\n-161\n-162\n-163\n-164\n-165\n-166\n-167\n-168\n-169\n-170\n-171\n-172\n-173\n-174\n-175\n-176\n-177\n-178\n-179\n-180\n-181\n-182\n-183\n-184\n-185\n-186\n-187\n-188\n-189\n-190\n-191\n-192\n-193\n-194\n-195\n-196\n-197\n-198\n-199\n-200\n-201\n-202\n-203\n-204\n-205\n-206\n-207\n-208\n-209\n-210\n-211\n-212\n-213\n-214\n-215\n-216\n-217\n-218\n-219\n-220\n-221\n-222\n-223\n-224\n-225\n-226\n-227\n-228\n-229\n-230\n-231\n-232\n-233\n-234\n-235\n-236\n-237\n-238\n-239\n-240\n-241\n-242\n-243\n-244\n-245\n-246\n-247\n-248\n-249\n-250\n-251\n-252\n-253\n-254\n-255\n-256\n-257\n-258\n-259\n-260\n-261\n-262\n-263\n-264\n-265\n-266\n-267\n-268\n-269\n-270\n-271\n-272\n-273\n-274\n-275\n-276\n-277\n-278\n-279\n-280\n-281\n-282\n-283\n-284\n-285\n-286\n-287\n-288\n-289\n-290\n-291\n-292\n-293\n-294\n-295\n-296\n-297\n-298\n-299\n-300\n-301\n-302\n-303\n-304\n-305\n-306\n-307\n-308\n-309\n-310\n-311\n-312\n-313\n-314\n-315\n-316\n-317\n-318\n-319\n-320\n-321\n-322\n-323\n-324\n-325\n-326\n-327\n-328\n-329\n-330\n-331\n-332\n-333\n-334\n-335\n-336\n-337\n-338\n-339\n-340\n-341\n-342\n-343\n-344\n-345\n-346\n-347\n-348\n-349\n-350\n-351\n-352\n-353\n-354\n-355\n-356\n-357\n-358\n-359\n-360\n-361\n-362\n-363\n-364\n-365\n-366\n-367\n-368\n-369\n-370\n-371\n-372\n-373\n-374\n-375\n-376\n-377\n-378\n-379\n-380\n-381\n-382\n-383\n-384\n-385\n-386\n-387\n-388\n-389\n-390\n-391\n-392\n-393\n-394\n-395\n-396\n-397\n-398\n-399\n-400\n-401\n-402\n-403\n-404\n-405\n-406\n-407\n-408\n-409\n-410\n-411\n-412\n-413\n-414\n-415\n-416\n-417\n-418\n-419\n-420\n-421\n-422\n-423\n-424\n-425\n-426\n-427\n-428\n-429\n-430\n-431\n-432\n-433\n-434\n-435\n-436\n-437\n-438\n-439\n-440\n-441\n-442\n-443\n-444\n-445\n-446\n-447\n-448\n-449\n-450\n-451\n-452\n-453\n-454\n-455\n-456\n-457\n-458\n-459\n-460\n-461\n-462\n-463\n-464\n-465\n-466\n-467\n-468\n-469\n-470\n-471\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '23'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 100 90 80''') == '23'\nassert solution('''98\n40\n30\n21\n80''') == '23'\nassert solution('''3\n100\n90\n80''') == '23'\nassert solution('''6\n100\n100\n100\n100\n100\n100''') == '50'\nassert solution('''7\n1000\n1000\n1000\n1000\n1000\n1000''') == '3500'\n'''\n\"\"\"\n\nn, a, b, c = list(map(int, stdin.readline().split(' ')))\nl = list(map(int, stdin.readline().split(' ')))"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 100 90 80''') == '23'\nassert solution('''5 100 90 40''') == '23'\nassert solution('''5 100 90 30''') == '24'\nassert solution('''5 100 90 21''') == '24'\nassert solution('''5 100 90 80 80''') == '25'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 100 90 80\n40\n30\n30\n21\n80''') == '26'\nassert solution('''5 100 90 80\n90\n40\n30\n30\n30\n30\n30\n21\n80''') == '34'\nassert solution('''5 100 90 80\n90\n40\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"2 100 90 80\") == \"23\"\nassert solution(\"3 1 3\") == \"3\"\nassert solution(\"8 4 1\") == \"8\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 10 3 4') == '6'\nassert solution('15 20 10 30') == '50'\nassert solution('10 10 10 10') == '40'\nassert solution('15 11 5 7') == '35'\nassert solution('10 22 32 25') == '30'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 2') == '2'\nassert solution('4 5 1 1') == '10'\nassert solution('1 4 2 1') == '7'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB' # Case sensitive\nassert solution('aZ') == 'AZ'\nassert solution('AZ') == 'aZ'\nassert solution('AbCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('A') == 'B'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('Z') == 'A'\nassert solution('ABCXYZDE') == 'EFGHIJKL'\nassert solution('ZY') == 'AB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCX') == 'BD'\nassert solution('Z') == 'Z'\nassert solution('ABC') == 'BC'\nassert solution('AB') == 'AB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"AB\") == \"C\"\nassert solution(\"Z\") == \"A\"\nassert solution(\"ABZ\") == \"Z\"\nassert solution(\"A\") == \"A\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"AB\") == \"CAB\"\nassert solution(\"XYZ\") == \"CAB\"\nassert solution(\"CAZ\") == \"CBA\"\nassert solution(\"ZA\") == \"ZA\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('123') == '456'\nassert solution('12345') == '12345'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('1234567') == '1234567'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('XYZABC') == 'DEZABC'\nassert solution('XYZABCXYZ') == 'DEZABCABC'\nassert solution('ABCXYZXYZXYZABCXYZXYZ') == 'DEZABCXYZABCXYZXYZXYZ'\nassert solution('ABCXYZXYZXYZXYZABCXYZABCXYZXYZXYZABCXYZXYZXYZABCXYZABCXYZXYZXYZXYZABCXYZXYZXYZABCXYZ') == 'DEZABCXYZABCXYZXYZXYZABCXYZXYZXYZABCXYZXYZXYZABCXYZXYZABCXYZABCXYZABCXYZXYZABCXYZ'\n\n'''"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZXYZ') == 'CEAZABXYZ'\nassert solution('HELLO WORLD') == 'EBOLH'\nassert solution('EBOIOWOEOI') == 'LEPOW'\nassert solution('POWEOGOEOEBO') == 'OWEPGE'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nprint('Test success!')\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''5\n4 4 4 4 4 4''') == '4 4 4 4 4'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 5 2 3 2 4') == '3 4 2'\nassert solution('1\\n2750131 199999') == '199999'\n\n\n\"\"\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2750131 199999') == '199999'\nassert solution('2\\n3 5 2 3 2 4') == '3 4 2'\nassert solution('2\\n6') == '6'"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n2750131 199999\n''') == '199999'\nassert solution('''\n1\n3 6\n''') == '6'\nassert solution('''\n3\n4\n3 2\n2 3\n1\n3\n2\n2\n3\n2\n4\n2\n2\n3\n1\n3\n2\n2\n2\n2\n1\n3\n1\n3\n2\n1\n3\n2\n2\n3\n2\n3\n3\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n2\n1\n1\n2\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\n\n'''\n\n'''\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n'\n
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n2750131 199999\n''') == '199999'\nassert solution('''3\n1 2 3 4\n''') == '2 3 4'\nassert solution('''5\n1 2 3 4 5 6 7\n''') == '1 2 3 4 5'\nassert solution('''2\n1 2\n''') == '1 2'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n\\n') == '22111'\nassert solution('5 1\\n2 4 5 3 1\\n\\n') == '1121122'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n\\n') == '11211222'\nassert solution('7 1\\n2 4 5 3 1\\n\\n') == '21112'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1\\n2 1 3 4') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 1') == '1121122'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1\\n2 2') == '22222'\nassert solution('2 1\\n2 1') == '22222'\nassert solution('5 1\\n2 4 5 3 1\\n') == '222222'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('4 1\\n2 1 3 5 4\\n') == '221122'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2 4 5 3 1') == '11111'\nassert solution('1 1\\n2 1 3 5 4') == '22111'\nassert solution('1 2\\n2 4 5 3 1') == '1121122'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '11211222'\nassert solution('5 1\\n2 1 3 5 4') == '21112'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111\\n'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111\\n'\nassert solution('5 1\\n2 4 5 3 1\\n') == '1121122\\n'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '112112222\\n'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '112112222\\n'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112'\nassert solution('5 1\\n2 1 3 5 4\\n') == '21211'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('input_1.txt') == '1111111'\nassert solution('input_2.txt') == '21111112'\nassert solution('input_3.txt') == '22211112'\nassert solution('input_4.txt') == '11211222'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''6\n9 8 3 4 7 6 5''') == '8'\nassert solution('''7\n4 3 1 4 7 6 2''') == '7'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('100 1') == '2'\nassert solution('1 3 3 7') == '4'\nassert solution('1 2 1 2 3') == '2'\nassert solution('1 3 1 2 3') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '4'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '5'\nassert solution('''10\n
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2 1 2 3') == '2'\nassert solution('2 3 2 3 1') == '2'\nassert solution('4 5 6 7 8') == '4'\nassert solution('4 5 6 7 8 9') == '1'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1\\n2\\n3') == '2\\n'\nassert solution('2\\n100\\n1\\n3\\n3\\n7') == '2\\n'\nassert solution('4\\n1 3 3 7\\n') == '4\\n'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('1\\n2\\n2') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n2\\n3') == '0'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'\nassert solution('''8\n1 2 3 4 5 6 7 8\n''') == '2'\nassert solution('''10\n2 3 3 4 5 6 7 8 9 10\n''') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''10\n26187427\n''') == '2'\nassert solution('''10\n74267\n''') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 1 2 3\n''') == '2'\n\nassert solution('''\n2\n100 1\n''') == '2'\n\nassert solution('''\n5\n1 3 3 7\n''') == '4'\n\nassert solution('''\n5\n1 2 1 2 3\n''') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\nassert solution('''4\n1 3 3 7''') == '4'\nassert solution('''10\n74143 45169 8727 8236 11380 9295 19991 17962 17548 9737 56943 90307 19616 34743 88076 25898 10635 45635 49901 32860 93852 57976 70134 57850''') == '854537'\nassert solution('''100\n77 44 34 62 60 59 60 61 60 62 61 65 70 71 68 72 74 75 76 77 79''') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n2') == '1'\nassert solution('4\\n3') == '1'\nassert solution('5\\n4') == '2'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n16\\n') == '1'\nassert solution('2\\n4 2\\n') == '0'\nassert solution('3\\n16 3\\n') == '1'\nassert solution('4\\n1 1 1 1023\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''6\n4 7 1 5 4 9''') == '1'\n\nassert solution(\n'''5\n1 2 3 4 5''') == '2'\n\nassert solution(\n'''1\n16\n''') == '1'\n\nassert solution(\n'''4\n1 1 1 1023''') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == \"1\"\nassert solution('''5\n1 2 3 4 5''') == \"2\"\nassert solution('''1\n16''') == \"1\"\nassert solution('''4\n1 1 1 1023''') == \"0\"\nassert solution('''16\n1 1 1 1023''') == \"1\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16\n''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\nassert solution('''2\n1 1 1 1023''') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"2\\n16\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"0\"\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5\\n1 2 3 4 6\") == \"2\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0011') == '4'\nassert solution('10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0011') == 4\nassert solution('00101000') == 4\nassert solution('0') == 0\nassert solution('0') == 0\nassert solution('111111') == 2\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0011') == 4\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0011') == '4'\nassert solution('011101111') == '3'\nassert solution
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0011') == 4\nassert solution('0011') == 4\nassert solution('000111011011011101100011') == 11\nassert solution('010110001001101001010101') == 9\nassert solution('0101101001101000110100111') == 10\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"0101\") == 4\nassert solution(\"001101\") == 4\nassert solution(\"00110011\") == 4\nassert solution(\"10111\") == 1\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0011\") == 4\nassert solution(\"0001\") == 4\nassert solution(\"1111\") == 1\nassert solution(\"00001\") == 2\nassert solution(\"011101\") == 3\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"00110\") == 2\nassert solution(\"01010\") == 2\nassert solution(\"00001\") == 3\nassert solution(\"00111\") == 4\nassert solution(\"01110\") == 2\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0011') == 4\nassert solution('0011') == 4\nassert solution('1111') == 1\nassert solution('1111') == 1\nassert solution('1111') == 1\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0011') == 4\nassert solution('101') == 1\nassert solution('1001') == 3\nassert solution('0000') == 0\nassert solution('1') == 1\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"2 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 3\\n2 4\\n\") == \"2\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 3\\n2 4\\n') == '2'\nassert solution('10 2\\n1 9\\n2 8\\n') == '0'\nassert solution('10 10\\n1 9\\n2 8\\n') == '1'\nassert solution('10 10\\n1 9\\n2 8\\n') == '2'\nassert solution('10 10\\n1 9\\n2 8\\n') == '3'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n1 3\n2 4''') == \"2\"\n\nassert solution('''1 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == \"0\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n2 4\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"10 10\\n1 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\") == \"0\"\nassert solution(\"10 10\\n1 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\") == \"1\"\nassert solution(\"10 10\\n1 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\") == \"1\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == '2'\n\"\"\"\n\nn, m = map(int, stdin.split())\nlst = []\nfor i in range(m):\n    l, r = map(int, stdin.split())\n    lst.append([l-1, r-1])\nlst.sort()\n\ncount = 0\nfor i in range(m):\n    if lst[i][0] > lst[i-1][1]:\n        count += 1\nprint(count)\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4') == '2'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n1 1\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4') == '4'\nassert solution('4 2\\n1 3\\n2 3') == '0'\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3\\n2 4\\n') == '2'\nassert solution('2 2\\n1 3\\n2 4\\n') == '1'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('2 1\\n1 1\\n') == '0'\nassert solution('3 4\\n2 1\\n3 2\\n') == '3'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 1\") == \"2\"\nassert solution(\"2 2 2 1\") == \"2\"\nassert solution(\"2 2 2 2\") == \"1\"\nassert solution(\"2 2 2 3\") == \"3\"\nassert solution(\"2 2 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 1') == 2\nassert solution('1 2 2 1') == 2\nassert solution('1 2 2 1') == 2\nassert solution('1 2 2 1') == 2\nassert solution('1 2 2 1') == 2\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2 1') == '2'\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('4\\n1 2 1 1') == '3'\nassert solution('4\\n1 1 1 1') == '0'\nassert solution('4\\n1 1 1 1\\n1 1 1 1') == '2'\nassert solution('4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '3'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('2 2 2 1') == '3'\nassert solution('3 4 4 3') == '2'\nassert solution('4 4 4 4') == '0'\nassert solution('1 2 2 1') == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"5\\n5 5 5 5 5\") == \"0\"\nassert solution(\"5\\n5 5 5 5 5\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4\n1 2 2 1\n''') == '2'\nassert solution(\n'''\n4\n1 1 1 1\n''') == '3'\nassert solution(\n'''\n1\n1\n''') == '0'\nassert solution(\n'''\n5\n5 5 5 5 5\n''') == '3'\nassert solution(\n'''\n6\n5 5 5 5 5 5\n''') == '4'\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 1') == 2\nassert solution('1 2 2 1') == 2\nassert solution('2 3 2 1') == 4\nassert solution('1 2 2 1') == 2\nassert solution('1 1 1 1') == 0\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\\\n3 5\n2 1 -3\n''') == '3'\n\nassert solution('''\\\n2 4\n-1 1\n''') == '4'\n\nassert solution('''\\\n4 10\n2 4 1 2\n''') == '2'\n\nassert solution('''\\\n4 10\n2 4 1 2\n''') == '2'\n\nassert solution('''\\\n4 10\n2 4 1 2\n''') == '2'"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == \"0\"\nassert solution('2 3') == \"2\"\nassert solution('4 5') == \"4\"\nassert solution('-1 1') == \"4\"\nassert solution('1 -1') == \"4\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5\\n2 1 -3') == '3'\nassert solution('2 4\\n-1 1\\n') == '4'\nassert solution('4 10\\n2 4 1 2') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n'''\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"3 10\n2 4 1 2\"\"\") == \"2\"\nassert solution(\n\"\"\"4 10\n2 4 1 2\"\"\") == \"0\"\nassert solution(\n\"\"\"4 10\n-1 1\n1 2 1 2\"\"\") == \"0\"\nassert solution(\n\"\"\"4 1\n2 4 1 2\"\"\") == \"4\"\nassert solution(\n\"\"\"4 10\n2 4 1 2\"\"\") == \"4\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5\\n2 1 -3') == '3'\nassert solution('2 4\\n-1 1') == '4'\nassert solution('4 10\\n2 4 1 2') == '2'\nassert solution('10 3\\n1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4\\n2 4 1 2\\n') == '4'\nassert solution('1 10\\n1 1\\n') == '1'\nassert solution('2 4\\n2 4 1 2\\n') == '2'\nassert solution('2 4\\n-1 1\\n') == '0'\nassert solution('4 10\\n2 4 1 2\\n') == '0'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n2 4 1 2\") == \"4\"\nassert solution(\"2 10\\n2 4 1 2\") == \"0\"\nassert solution(\"2 4\\n-1 1\") == \"0\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"\nassert solution(\"1 5\\n1 1 1 1 1 1\") == \"5\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4\\n-1 1') == '2'\nassert solution('2 4\\n1 1') == '4'\nassert solution('2 4\\n2 -1') == '4'\nassert solution('2 4\\n2 1') == '0'\nassert solution('4 10\\n2 4 1 2') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n\n'''\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n8\\n6\\n3\\n12\\n9') == '9 3 6 12 4 8'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\n\n\"\"\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n4 8 6 3 12 9''') == '9 3 6 12 4 8'\nassert solution('''4\n42 28 84 126\n''') == '126 42 84 28'\nassert solution('''2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'\nassert solution('''1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'\nassert solution('''6\n9 3 6 12 4 8\n''') == '9 3 6 12 4 8'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '3 3 6 12 4 8'\nassert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 3 6 12 4 8') == '9 3 6 12 4 8'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('3000000000000000000 1000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\nassert solution('42 28 84 126') == '126 42 84 28'\nassert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\nassert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\nassert solution('1000000000000000000 3000000000000000000') == '9 3 6 12 4 8'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n4 -1 5 7 10 12\\n') == '3'\nassert solution('6\\n3 -1 5 4 7 10 12\\n') == '3'\nassert solution('5\\n-1 2 5 8 11\\n') == '1'\nassert solution('5\\n-1 2 5 8 11\\n') == '1'\nassert solution('10\\n-10 10 10 10 -10 -10 10 10 10 10 -10 -10 10 10 10 10 -10 -10 -10 10 10 10 -10 -10 -10 10 10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n-1 2 5 8 11') == '3'\nassert solution('6\\n3 5 4 7 10 12\\n') == '3'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''1\n-1\n''') == '1'\nassert solution('''5\n8 2 4 6 1\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n''') == '5'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n3 5 4 7 10 12''') == '3'\nassert solution('''5\n-1 2 5 8 11''') == '1'\nassert solution('''3\n1 2 3 4 5''') == '1'\nassert solution('''4\n-7 -3 -5 -2 -1''') == '1'\nassert solution('''7\n1 2 3 4 5 6 7''') == '7'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1') == '2'\nassert solution('1\\n2\\n2') == '2'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n3\\n2') == '2'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n3 5 4 7 10 12''') == '3'\nassert solution('''-1 2 5 8 11''') == '1'\nassert solution('''5\n-1 2 5 8 11''') == '1'\nassert solution('''0''') == '0'\nassert solution('''1''') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n-1 2\\n3\\n5\\n8') == '3'\nassert solution('3\\n1 2 3\\n2 3\\n3\\n5') == '1'\nassert solution('5\\n1 2 3 4\\n2 3\\n3 4\\n4 5\\n5') == '3'\n\n\n-----Answer-----\n\"\"\"\nfrom math import log2\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    6\n    3 5 4 7 10 12\n    \"\"\") == \"\"\"\n    3\n    7 3 5\n    \"\"\".strip()\n\nassert solution(\n    \"\"\"\n    5\n    -1 2 5 8 11\n    \"\"\") == \"\"\"\n    1\n    8\n    \"\"\".strip()\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('6') == '3'\nassert solution('5') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('-1 2 5 8 11') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n3 5 4 7 10 12''') == '3'\nassert solution('''-1 2 5 8 11''') == '1'\n'''\n    assert solution('''5\n-1 2 5 8 11''') == '1'\n'''\n    assert solution('''3\n-1 2 5 8 11''') == '3'\n'''\n    assert solution('''3\n3 2 1 5 8 11''') == '3'\n'''\n    "
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('0 1 2') == '0 1'\nassert solution('1 0 2') == '0 1'\nassert solution('0 0 2') == '0 0'\nassert solution('0 0 0') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 2 3') == '0 2'\nassert solution('1 1 1') == '0 2'\nassert solution('0 2 3') == '0 2'\nassert solution('0 0 0') == '0 0'\nassert solution('1 2 2') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 1 1') == '0 2'\nassert solution('1 1 1') == '0 0'\nassert solution('0 0 0') == '0 0'\nassert solution('1 1 1') == '1 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 3 4') == '0 2'\nassert solution('2 3 1') == '0 2'\nassert solution('2 3 1') == '0 2'\nassert solution('1 1 1') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0') == '0 0'\nassert solution('0 1 0') == '1 1'\nassert solution('1 1 1') == '0 1'\nassert solution('0 0 1') == '1 1'\nassert solution('1 0 1') == '0 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('10 100 10') == '0 2'\nassert solution('1 2 3') == '0 2'\nassert solution('10 100 10') == '0 2'\nassert solution('10 100 10') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 2 3') == '0 2'\nassert solution('1 1 1') == '0 0'\nassert solution('1 1 1 1') == '0 0'\nassert solution('1 1 1 1 1') == '0 0'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 3''') == ''\nassert solution('''1 1 1''') == '0 0'\nassert solution('''5 1 1''') == '4 0'\nassert solution('''1 1 5''') == '4 1'\nassert solution('''3 1 2''') == '2 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('5 2 1') == '5 2'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100') == '3'\nassert solution('13') == '2'\nassert solution('27') == '3'\nassert solution('20') == '5'\nassert solution('25') == '6'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100') == '3'\nassert solution('150') == '6'\nassert solution('100') == '3'\nassert solution('3.5') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"10000\") == \"2\"\nassert solution(\"123456789\") == \"4\"\nassert solution(\"1234567890\") == \"2\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('103') == '3'\nassert solution('101') == '1'\nassert solution('15') == '1'\nassert solution('999') == '4'\n'''"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"3\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1000\") == \"4\"\n\nprint(\"all tests passed\")\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100') == \"1\"\nassert solution('300') == \"2\"\nassert solution('1100') == \"3\"\nassert solution('100000') == \"4\"\nassert solution('1000000') == \"5\"\n\"\"\""
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('101') == '3'\nassert solution('10') == '1'\nassert solution('100') == '1'\nassert solution('1001') == '2'\nassert solution('10001') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('103') == '3'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100') == '3'\nassert solution('1000') == '7'\nassert solution('2147483648') == '18'\nassert solution('7.5') == '4'\nassert solution('15000') == '10'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('2') == 9\nassert solution('3') == 18\nassert solution('4') == 36\nassert solution('5') == 55\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '9'\nassert solution('3') == '27'\nassert solution('4') == '36'\nassert solution('5') == '105'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '9'\nassert solution('''3''') == '27'\nassert solution('''4''') == '92'\nassert solution('''5''') == '135'\nassert solution('''6''') == '456'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == \"9\"\nassert solution('''1''') == \"1\"\nassert solution('''4''') == \"1\"\nassert solution('''3''') == \"1\"\nassert solution('''5''') == \"1\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n') == 1\nassert solution('2\\n') == 1\nassert solution('3\\n') == 2\nassert solution('4\\n') == 4\nassert solution('5\\n') == 1\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '5'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '1'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '18'\nassert solution('3') == '27'\nassert solution('4') == '36'\nassert solution('5') == '45'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"9\"\nassert solution(\"3\\n\") == \"27\"\nassert solution(\"4\\n\") == \"9\"\nassert solution(\"5\\n\") == \"1\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '9'\nassert solution('3') == '27'\nassert solution('4') == '20'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('3\\n1') == '3'\nassert solution('3\\n2') == '3'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4 6\") == 10\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('1\\n0') == '0'\nassert solution('1\\n0') == '0'\nassert solution('3\\n3 4 6') == '10'\nassert solution('1\\n0') == '0'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('2\\n2 2') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n2 2') == '0'\nassert solution('3\\n2 2 3') == '2'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('3\\n3 4 5') == '8'\nassert solution('3\\n3 4 4') == '6'\nassert solution('3\\n3 4 5 6') == '8'\nassert solution('3\\n3 4 5 5') == '5'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'\n\"\"\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2\\n3') == '4'\nassert solution('3\\n3\\n3\\n3') == '6'\nassert solution('3\\n4\\n6\\n4') == '10'\nassert solution('3\\n2\\n2\\n3') == '4'\nassert solution('2\\n2\\n2\\n2') == '4'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'\nassert solution('4\\n3 4 6\\n') == '14'\nassert solution('3\\n5 2 1\\n') == '2'\nassert solution('2\\n10 2\\n') == '0'\nassert solution('2\\n2 4\\n') == '2'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n'''"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == 'Yes'\nassert solution(sample_input_2) == 'No'\nassert solution(sample_input_3) == 'Yes'\nassert solution(sample_input_4) == 'Yes'\nassert solution(sample_input_5) == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"Yes\"\nassert solution(input(\"\")) == \"Yes\"\nassert solution(input(\"\")) == \"Yes\"\nassert solution(input(\"\")) == \"No\"\nassert solution(input(\"\")) == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n6 6\\n4 4') == \"Yes\"\nassert solution('1 2\\n6 6\\n3 3') == \"No\"\nassert solution('1 2\\n6 6\\n1 1') == \"Yes\"\nassert solution('1 2\\n6 6\\n1 3') == \"No\"\nassert solution('1 2\\n6 6\\n1 1\\n1 3') == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2''') == \"Yes\"\nassert solution('''6\n1 2\n4 4\n6 6\n3 3\n5 5\n3 2''') == \"Yes\"\nassert solution('''3\n1 2\n2 2\n3 3''') == \"No\"\nassert solution('''3\n2 2\n2 2\n2 2''') == \"No\"\nassert solution('''3\n1 2\n2 2\n2 2''') == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('6 6') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('3 2') == 'Yes'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n6 6') == 'Yes'\nassert solution('2 3\\n7 7') == 'No'\nassert solution('1 1\\n2 2') == 'Yes'\nassert solution('1 2\\n1 1') == 'No'\nassert solution('1 2\\n2 2') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'No'\nprint(solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2'))\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('1 2\\n6 6\\n4 4\\n5 5\\n5 5\\n5 5') == 'No'\nassert solution('2 2\\n2 2\\n2 2') == 'Yes'\nassert solution('1 1\\n1 2\\n2 1\\n2 1') == 'No'\nassert solution('1 2\\n1 2\\n1 2') == 'Yes'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4) == \"4\"\nassert solution(10) == \"10\"\nassert solution(2) == \"4\"\nassert solution(98) == \"10\"\nassert solution(5) == \"1\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('3') == '9'\nassert solution('101') == '100'\n\nprint(\"Input tests passed\")\n\"\"\""
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == 4\nassert solution(10) == 48\nassert solution(100) == 100\nassert solution(0) == 0\nassert solution(1000) == 4000000000000000000000000000\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"4\"\nassert solution(\"11\") == \"5\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 4\nassert solution('3') == 9\nassert solution('4') == 16\nassert solution('100') == 10000\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('5') == '10'\nassert solution('6') == '14'\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(2) == \"4\"\nassert solution(1) == \"1\"\nassert solution(3) == \"12\"\nassert solution(10) == \"249\"\nprint(\"All tests passed successfully.\")\n\n\"\"\""
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == \"4\"\nassert solution(100) == \"36\"\nassert solution(50) == \"26\"\nassert solution(42) == \"16\"\nassert solution(3) == \"2\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 4\nassert solution('1') == 1\nassert solution('8') == 16\nassert solution('1000') == 1000000\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8\\n3 8 5 1') == 'Yes'\nassert solution('2\\n1 2') == 'No'\nassert solution('1\\n1') == 'Yes'\nassert solution('1\\n1 1') == 'No'\nassert solution('1\\n1 1 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 8 5 1') == 'Yes'\nassert solution('3 8 5 1') == 'No'\nassert solution('1 1 1 1') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('1 1 1 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'\n\nassert solution('1 2 3') == 'No'\nassert solution('3 3 3') == 'Yes'\nassert solution('4 2 5 1') == 'Yes'\nassert solution('5 2 5 1') == 'No'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n3 8 5 1''') == \"Yes\"\nassert solution('''4\n2 4 2 3''') == \"Yes\"\nassert solution('''4\n5 1 4 3''') == \"No\"\nassert solution('''4\n3 1 3 1''') == \"No\"\nassert solution('''4\n2 2 3 3''') == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('3\\n8 5 1') == 'No'\nassert solution('2\\n1') == 'No'\nassert solution('2\\n1 1') == 'Yes'\nassert solution('2\\n1 1 1') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('4 3 6 1') == 'Yes'\nassert solution('1 1 1 1') == 'No'\nassert solution('3 2 3 4') == 'Yes'\nassert solution('4 3 6 1') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n8 5 1') == 'Yes'\nassert solution('1\\n1') == 'No'\nassert solution('4\\n3 8 5 1') == 'No'\nassert solution('4\\n3 1 8 4') == 'No'\nassert solution('4\\n4 4 4 4') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('1\\n1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(sample) == \"Yes\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7') == '702'\n\nassert solution('3 2') == '1'\n\nassert solution('1 7') == '702'\n\nassert solution('3 2') == '1'\n\nassert solution('1 7') == '702'"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 7') == '702'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(s = '1 7', c = '3 2') == '702'\nassert solution(s = '1 7', c = '3 2') == '702'\nassert solution(s = '1 7', c = '3 2') == '702'\nassert solution(s = '1 7', c = '3 2') == '702'\nassert solution(s = '1 7', c = '3 2') == '702'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3') == '702'\n\"\"\""
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:-1]\n\n\"\"\"\n\n\"\"\"\nSolution:\n\"\"\"\n\nn, m = map(int, stdin.split())\n\ns = list(map(int, stdin.split()))\nc = list(map(int, stdin.split()))\n\nnum = 0\n\nfor i in range(len(s)):\n    if s[i] >= 0 and s[i] < n and c[i] >= 0 and c[i] <= 9:\n        num = 10*num + s[i]"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 7\\n3 2\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7\\n3 2\\n1 7"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"\"\n\"\"\""
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('4 1\\n1 2\\n3 2\\n4 3') == '5'\nassert solution('4 5\\n1 2\\n3 2\\n4 3') == '-1'\nassert solution('3 2\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 2\"\"\") == \"9\"\n\"\"\"\nIf K = 1, the number of triples are 4.\nIf K = 2, the number of triples are 1.\nIf K = 3, the number of triples are 4.\nIf K = 4, the number of triples are 9.\n\"\"\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 3') == '9'\nassert solution('3 4') == '12'\nassert solution('3 5') == '45'\nassert solution('10 5') == '45'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"10 1\") == \"20\"\nassert solution(\"10 2\") == \"0\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '9'\nassert solution('2 2') == '0'\nassert solution('2 3') == '3'\nassert solution('3 3') == '6'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('5 1') == '0'\nassert solution('5 1') == '0'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '9'\nassert solution('3 2') == '12'\nassert solution('2 3') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '6'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2 2'''\n) == '9'\nassert solution(\n'''2 1'''\n) == '8'\nassert solution(\n'''10 10'''\n) == '25'\nassert solution(\n'''30 10'''\n) == '10'\nassert solution(\n'''2 1000'''\n) == '811'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 1') == '0'\nassert solution('3 1') == '0'\nassert solution('100 10') == '50'\nassert solution('100 100') == '0'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[::-1]\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('-9') == '1011'\n\n\"\"\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"-9\"\n\nprint('Accepted')\n'''"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1011'\n\nimport sys"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''-9''') == '1011'\n\n'''\nimport sys\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '1011'\n\"\"\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1011\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''-9') == '1011'\nassert solution('-5') == '1011'\nassert solution('-17') == '10101'\nassert solution('-4') == '1010'\nassert solution('-1') == '1'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('-9') == '1011'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"4 9\") == \"27\"\nassert solution(\"2 4\") == \"15\"\nassert solution(\"3 1\") == \"9\"\nassert solution(\"3 2\") == \"14\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10\\n2 9\\n1 8') == '20'\nassert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('3 7\\n1 2\\n3 4\\n5 7') == '44'\nassert solution('2 10\\n4 8\\n2 6') == '24'\nassert solution('1 10\\n3 9\\n2 7') == '20'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == ''\n\"\"\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 4') == '5'\nassert solution('1 2\\n2 4') == '12'\nassert solution('1 2\\n2 4\\n1 1') == '2'\nassert solution('2 2\\n1 1') == '0'\nassert solution('2 1\\n1 1') == '0'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 5\n4 9\n2 4''') == '12'\nassert solution('''4 5\n4 9\n2 4\n1 1\n2 2\n3 3''') == '23'\nassert solution('''4 3\n1 1\n1 1\n1 1\n1 1''') == '10'\nassert solution('''1 2\n1 1\n1 1''') == '3'\nassert solution('''2 3\n1 2\n2 1\n2 1''') == '2'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5') == '12'\nassert solution('4 9') == '12'\nassert solution('2 4') == '10'\nassert solution('2 4 3 5') == '13'\nassert solution('2 4 3 4 5') == '16'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 5') == '12'\nassert solution('2 5') == '12'\nassert solution('2 2') == '0'\nassert solution('2 1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('2 2\\n1 1') == '0'\nassert solution('2 2\\n1 1') == '0'\nassert solution('2 2\\n1 1') == '0'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"1 1 1 1 1\") == \"5\"\nassert solution(\"2 3 4 5 6\") == \"3\"\nassert solution(\"3 3 4 4 5 6\") == \"3\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 4 8 7 3') == '2'\nassert solution('5') == '1'\nassert solution('10 7 3') == '0'\nassert solution('10 4 9 7 8 3') == '3'\nassert solution('10 4 9 7 8 3 4') == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('10\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 4 8 7 3') == '2'\nassert solution('5') == '1'\nassert solution('10 7 9 11 9 10') == '3'\nassert solution('10 9 8 6 7') == '0'\nassert solution('10 10 9 10 9 10') == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n10 4 8 7 3''') == \"2\"\nassert solution('''5\n10 8 7 3 4''') == \"3\"\nassert solution('''5\n9 8 7 3 4''') == \"2\"\nassert solution('''5\n9 8 8 7 3''') == \"2\"\nassert solution('''5\n10 9 8 7 3''') == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n10 4 8 7 3') == 2\nassert solution('5\\n10 4 8 7 3') == 2\nassert solution('5\\n5 5 5 5 5') == 1\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10') == 10\nassert solution('20\\n20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20') == 1\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == \"\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"5\\n10 4 8 7 3\"\n) == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 4 2\") == \"3\"\nassert solution(\"10\\n10 9 8 7 7 5 5 4 4 4\") == \"0\"\nassert solution(\"20\\n
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 4 5''') == '2'"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''6 3\n1 2 1 3 2 4 3 5\n''') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1'\nassert solution('5 3\\n1 2 3 3 3\\n') == '2'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''5 3\n1 2 3 3 3\n''') == '0'\nassert solution('''5 3\n1 2 2 2 2\n''') == '3'\nassert solution('''5 4\n1 2 2 2 2\n''') == '3'\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn,k = [int(x) for x in stdin.split()]\na = [int(x) for x in stdin.split()]\n\ncount = 0\nfor i in range(len(a)):\n    while a[i] > 1:\n        a[i] = math.floor(a[i]/2)\n        count += 1\n        if a[i] == 1:\n            break\n    if a[i] == 1:\n        break\nprint(count)\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''6 3\n1 2 3 3 3 4 5''') == '2'\nassert solution('''8 5\n1 1 1 1 1 1 1 1 1''') == '0'\nassert solution('''12 3\n
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n3\\n4\\n5') == '5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '5'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '3'\nassert solution('2\\n1\\n') == '1'\nassert solution('5\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5') == '1'\nassert solution('5\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5') == '4'\nassert solution('10\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5') == '3'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 5\n1 2 2 4 2 3''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3''') == '4'\nassert solution('''6 3\n1 2 2 4 2 3''') == '3'\nassert solution('''2 10\n7 9 8 10 3 4 2 5 10 3''') == '6'\nassert solution('''6 10\n3 3 2 1 1 1 3''') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3''') == '4'\n\n\n\"\"\"\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n2') == '0'\nassert solution('1\\n3') == '1'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2 2\\n') == '3'\nassert solution('7 5\\n1 2 2 4 2 3\\n') == '4'\nassert solution('10 9\\n
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 5''') == '3'\nassert solution('''7 5''') == '4'\nassert solution('''1 2 2 4 2 3''') == '3'\nassert solution('''7 5''') == '4'\nassert solution('''3 3 2 1 1 1 3''') == '4'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"1\\n1000000000 42 88\") == \"1\"\nassert solution(\"1\\n1000000000000 42 88\") == \"1\"\nassert solution(\"2\\n10 1000000 1\\n100000000000 1000000 42 88\") == \"1000000000\"\nassert solution(\"3\\n10 1000000 1\\n100000000000 1000000 42 88\") == \"1000000000\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('3\\n10 1 3\\n7 3 2\\n1 1000 1') == '10\\n9\\n1000'\n\nassert solution('2\\n10 1 3\\n7 3 2') == '10\\n9'\n\nassert solution('1\\n10 1 3') == '10\\n9'\n\nassert solution('2\\n10 1 3\\n7 3 2\\n1 1000 1') == '10\\n9\\n1000\\n42000000000000'"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n42000000000000'\nassert solution('''1\n1\n1\n1''') == '1'\nassert solution('''10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''1000 1 0\n1 100000000000 42 88\n''') == '1000'\n\nassert solution('''0 0 0\n1 1 1\n10 2 3\n1000000000000000000000 42 88\n''') == '0'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\n\nassert solution('''1000 1 0\n1 100000000000 42 88\n''') == '1000'"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n1000000000000000000 1 1\n10000000000000000"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10\\n9\\n1000\\n42000000000000\\n'\n\n'''\nimport sys\nassert sys.stdin.read() == solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''')\n\n'''\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '1\\n'\nassert solution('10\\n1\\n') == '10\\n'\nassert solution('1000\\n1\\n') == '1000\\n'\nassert solution('1000000000000\\n42\\n88\\n') == '42000000000000\\n'\nassert solution('1\\n1\\n1\\n1\\n') == '0\\n'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3 6\n3 4 5\n\"\"\".strip()) == \"2\"\nassert solution(\n    \"\"\"\n10 7\n10 4 8 2 6 7 5 9 3 1 1\n\"\"\".strip()) == \"4\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '2'\nassert solution('2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '2'\nassert solution('2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6\\n3 4 5') == '2'\n\"\"\""
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6') == '2'\nassert solution('2 7') == '1'\nassert solution('5 6') == '2'\nassert solution('4 5') == '3'\nassert solution('5 6 9') == '3'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999\nn = int(stdin.readline().strip())\nli = [int(x) for x in stdin.readline().strip().split()]"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''30 1000\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n''') == '8'\nassert solution('''3 10\n3 4 5\n''') == '0'\nassert solution('''3 10\n3 4 5\n''') == '0'\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hoge\\nenglish\\nhoge\\nenigma\\n') == 'No'\nassert solution('fuga\\nenigma\\nfuga\\n') == 'Yes'\nassert solution('fuga\\nhoge\\nfuga\\n') == 'Yes'\nassert solution('hoge\\nfuga\\nhoge\\n') == 'Yes'\nassert solution('fuga\\nfuga\\nfuga\\n') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'No'\nassert solution('takahashi') == 'No'\nassert solution('takahashi,') == 'No'\nassert solution('takahashi,baz,') == 'No'\nassert solution('takahashi,enigma') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'No'\nassert solution('2\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'Yes'\nassert solution('10\\nhogehogehogehogehoge\\nenglish\\nhogehogehogehogehoge\\nenigma\\n') == 'Yes'\nassert solution('10\\nhogehogehogehogehoge\\nenglish\\nhogehogehogehogehoge\\nhogehogehogehoge\\n') == 'Yes'\nassert solution('10\\nhogehogehogehogehoge\\nenglish\\nhogehogehogehogehoge\\nhogehogehogehoge\\nhogehogehogehoge\\n') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hoge') == 'Yes'\nassert solution('english') == 'No'\nassert solution('hogehoge') == 'No'\nassert solution('fefe') == 'No'\nassert solution('fefe', 'fefe') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('test') == 'No'\nassert solution('hello') == 'Yes'\nassert solution('hello hoge') == 'Yes'\nassert solution('abcd') == 'No'\nassert solution('abcd hoge') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('hoge') == 'No'\nassert solution('enigma') == 'Yes'\nassert solution('hogehogehogehoge') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('ab') == 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hoge') == 'No'\nassert solution('hoge\\n') == 'No'\nassert solution('hoge\\neggggg\\n') == 'No'\nassert solution('hoge\\neggggg\\nhoge\\nhoge\\n') == 'Yes'\nassert solution('hoge\\neggggg\\nhoge\\nhoge\\n') == 'Yes'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 3') == '6'\nassert solution('5 10') == '30'\nassert solution('4 6') == '6'\n\"\"\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 2') == '6'\nassert solution('2 3') == '6'\nassert solution('5 4') == '10'\nassert solution('4 4') == '8'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n\") == \"6\"\nassert solution(\"2 1\\n\") == \"3\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"2 2\\n\") == \"4\"\nassert solution(\"3 2\\n\") == \"6\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 1') == '1'\nassert solution('1 10') == '1'\nassert solution('5 5') == '10'\nassert solution('10 10') == '100'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 5') == '10'\nassert solution('1 1') == '2'\nassert solution('2 2') == '4'\nassert solution('2 4') == '6'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\nassert solution('5 4') == '8'\nassert solution('1 1') == '1'\nassert solution('2 10') == '4'\nassert solution('4 6') == '9'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '6'\nassert solution('2 3') == '6'\nassert solution('1 2') == '6'\nassert solution('1 1') == '5'\nassert solution('2 2') == '6'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n') == '6'\nassert solution('4 5\\n') == '12'\nassert solution('4 7\\n') == '12'\nassert solution('8 9\\n') == '72'\nassert solution('8 9\\n') == '72'\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"2 10\") == \"10\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('a') == 'a'\nassert solution('r') == 'r'\nassert solution('s') =='s'\nassert solution('d') == 'd'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\ns = input()\nfor i in s:\n    print(i, end=\"\")\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\nassert solution('asd') == 'xxasd'\n\nassert solution('asdf') == 'xxasdf'\n\nassert solution('asdfasdf') == 'xxasdfasdf'\n\nassert solution('asdfasdfasd') == 'xxasdfasdfasd'"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('x') == 'x'\nassert solution('xx') == 'xx'\nassert solution('xaxx') == 'xaxx'\nassert solution('asd') == 'asd'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('sandeep') == 'xxxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sandeep') == 'xxxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"sampling\") == \"xmxxxxlx\"\nassert solution(\"e\") == \"ex\"\nassert solution(\"sardine\") == \"xxxxxxx\"\nprint(\"All test cases passed.\")\n\nprint(solution(input()))"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('nope') == 'nope'\nassert solution('noob') == 'noob'\nassert solution('noobish') == 'nooobish'\nassert solution('noobishness') == 'nooobishness'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('hello') == 'xxxxxxx'\nassert solution('some stuff') == 'xxxxxxxx'\nassert solution('tiger') == 'xxxxxxx'\nassert solution('wonderful') == 'xxxxxxx'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\"\"\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('dream') == 'xxxxxxxd'\nassert solution('hello') == 'xxxxxhell'\nassert solution('skateboard') == 'xxxxxxkeejttboar'\nassert solution('donkey') == 'xxxxxedoong'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"No\"\nassert solution(\"4\\n1 2 1 1\\n\") == \"Yes\"\nassert solution(\"1\\n1\\n\") == \"Yes\"\nassert solution(\"3\\n1 2 2\\n\") == \"No\"\nassert solution(\"3\\n1 2 3\\n\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n\n\"\"\"\n[Input]\n5\n1 2 1 1 3\n\n[Output]\nYes\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('2 2 3 1 1') == 'No'\nassert solution('1 2 1 2 3') == 'Yes'\nassert solution('1 2 1 2 3') == 'No'\nassert solution('1 2 1 2 3') == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'Yes'\nassert solution('2\\n1') == 'No'\nassert solution('1\\n2') == 'No'\nassert solution('1\\n2\\n2') == 'Yes'\nassert solution('1\\n1') == 'No'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 1 1 1 1') == 'Yes'\nassert solution('1 1 1 1 1') == 'No'\nassert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 1 1 1 1') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1 3') == 'Yes'\nassert solution('1 2 1 1 2') == 'No'\nassert solution('1 2 1 1 2 3') == 'Yes'\nassert solution('1 2 1 1 2 3 4') == 'Yes'\nassert solution('1 2 1 1 2 3 4 5') == 'Yes'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n3 2 1\") == \"1\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\") == \"1\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"2\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 1 1\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '2'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 1') == '0'\nassert solution('1 2 3\\n3 2 1\\n1 2 2\\n1 2 1') == '3'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '1'\nassert solution('2 2 1') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2') == '1'\nassert solution('1 2 2') == '2'\nassert solution('1 2 2') == '0'\nassert solution('3 2 1') == '2'\nassert solution('1 2 2') == '0'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '1'\nassert solution('3 2 1\\n1 2 2') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(None) is None\nassert solution(\"\") is None\nassert solution(\"1 2 3\") is None\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '0'\nassert solution('-2 -1 -1') == '2'\nassert solution('1 1 -1') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 0') == '1'\nassert solution('2 1 2') == '1'\nassert solution('3 1 1') == '0'\nassert solution('2 2 1') == '1'\nassert solution('3 2 2') == '0'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '1'\nassert solution('''3 4 -10\n1 2 3\n1 2 4\n1 2 2\n''') == '1'\nassert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '0'\nassert solution('''4 4 -10\n1 2 3\n1 2 4\n1 2 2\n1 2 3\n''') == '0'\nassert solution('''5 4 -10\n1 2 3\n1 2 4\n1 2 2\n1 2 3\n1 2 4\n''') == '2'\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n3 2 1') == '1'\nassert solution('1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3') == '2'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n1 2 3\\n1 2 3') == '2'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('50') == '0'\nassert solution('100') == '50'\nassert solution('50') == '50'\nassert solution('100') == '50'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10''') == '10'\nassert solution('''9''') == '9'\nassert solution('''99''') == '0'\nassert solution('''999''') == '0'\nassert solution('''50000''') == '0'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('17\\n') == '100'\nassert solution('10000\\n') == '10'\nassert solution('-50\\n') == '-10'\nassert solution('5\\n') == '5'\nassert solution('10\\n') == '5'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1900\") == \"100\"\nassert solution(\"10\") == \"5\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"9\") == \"5\"\n\"\"\"\n\nn = int(input())\n\nbills = n // 1000\n\nprint(bills)\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1100') == 1\nassert solution('1000') == 0\nassert solution('10000') == 10\nassert solution('100000') == 0\nassert solution('10001') == 1\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('10') == '5'\nassert solution('100') == '50'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 4\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '100'"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2000''') == '100'\nassert solution('''0''') == '0'\nassert solution('''1''') == '1'\nassert solution('''100''') == '100'\nassert solution('''5555555555555555''') == '225'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('19') == 100\nassert solution('123') == 3\nassert solution('100') == 1\nassert solution('12345678910') == 4\nassert solution('111111111111') == 5\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'\nassert solution('2\\n3 3\\n4 4') == '4'\nassert solution('2\\n3 9\\n4 2') == '6'\nassert solution('2\\n3 5\\n4 4') == '9'\nassert solution('2\\n3 9\\n4 5') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '9'\nassert solution('2 3 4 5') == '9'\nassert solution('1 2 3 4') == '9'\nassert solution('2 3 4') == '9'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''5\n1 2 2 1 3\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''4\n4 4 4 4 4\n4 1 3 2 3\n4 1 3 2 3\n4 1 3 2 3\n4 1 3 2 3''') == '2'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2\\n2 3 3\\n2 2 2\\n2 2 2\\n1 1 1\\n1 1 1') == '9'"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"9\"\n'''"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'\nassert solution('3\\n5 3 2\\n5 2') == '9'\nassert solution('2\\n2 2 2\\n2 2') == '0'\nassert solution('3\\n1 1 1\\n2 2') == '1'\nassert solution('3\\n2 2 2\\n1 1') == '2'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 10 2\n4 10''') == '21'\nassert solution('''5\n1 100\n3 3 1\n1 1 1\n2 1 2\n1 1 1''') == '6'\nassert solution('''1\n3 1\n2 1 2''') == '2'\nassert solution('''6\n3 5 2\n4 5\n1 100\n1 1 1\n1 1 1''') == '7'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"3\\n3 3\\n3 3\\n3 3\") == \"6\"\nassert solution(\"3\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"4\\n5 5 2 2\\n3 3\\n3 3\") == \"12\"\nassert solution(\"4\\n5 5 2 2\\n3 3\\n3 3\") == \"12\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"2\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 10 20') == \"War\"\nassert solution('3 2 10 20') == \"No War\"\nassert solution('2 3 4 6') == \"War\"\nassert solution('10 15 13') == \"War\"\nassert solution('10 16 22') == \"No War\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 19\n8 15 13\n16 22''') == 'War'\nassert solution('''4 4 -100 -100\n1 1 -100 -100\n-1 -1 -100 100\n2 2 -100 100\n-1 -1 -100 -100\n''') == 'War'\nassert solution('''4 4 -100 -100\n1 1 -100 -100\n-1 -1 -100 100\n2 2 -100 100\n-1 -1 -100 -100\n''') == 'War'\nassert solution('''8 8 4 -100 -100\n1 1 -100 -100\n-1 -1 -100 100\n2 2 -100 100\n-1 -1 -100 -100\n''') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"No War\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n4 12\") == \"No War\"\n\n\"\"\"\nN, M, X, Y = [int(n) for n in stdin.split()]"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('8 15 13') == 'War'\nassert solution('16 22') == 'War'\n\"\"\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('8 15 13') == 'No War'\nassert solution('16 22') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('8 15 13') == 'No War'\nassert solution('16 22') == 'War'\nassert solution('16 22 8 15 13') == 'War'\nassert solution('16 22 8 15 13 16 22') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 19\\n8 15 13\\n16 22') == 'War'\nassert solution('3 2 10 19\\n8 15 13\\n16 22\\n16 22') == 'War'\nassert solution('3 2 10 19\\n8 15 13\\n16 22\\n16 22\\n16 22') == 'War'\nassert solution('3 2 10 19\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(s = '3 2 10 20') == 'No War'\nassert solution(s = '8 15 13') == 'No War'\nassert solution(s = '16 22') == 'War'\nassert solution(s = '1 2 3 4') == 'War'\nassert solution(s = '1 2 3 4 5') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3 4 2\") == \"War\"\nassert solution(\"5 3 4 2\") == \"No War\"\nassert solution(\"4 2 1 1\") == \"War\"\nassert solution(\"6 2 3 4\") == \"War\"\nassert solution(\"6 2 3 4\") == \"No War\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('3\\n2\\n3') == '9'\nassert solution('2\\n5\\n2') == '8'\nassert solution('2\\n5\\n1') == '9'\nassert solution('5\\n2\\n2') == '10'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"6\"\nassert solution(\"2\\n3\") == \"6\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"3\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nN = int(input())\nA = list(map(int, input().split()))"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n1\\n1') == '3'\nassert solution('2\\n1\\n1') == '3'\nassert solution('2\\n2\\n1') == '6'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n3\\n') == '6'\nassert solution('1\\n1\\n3\\n') == '9'\nassert solution('1\\n3\\n1\\n') == '3'\nassert solution('3\\n1\\n1\\n') == '6'\nassert solution('3\\n3\\n3\\n') == '9'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2\n2\n3\n\"\"\"\n) == \"6\"\nassert solution(\n\"\"\"\n2\n2\n3\n\"\"\"\n) == \"6\"\nassert solution(\n\"\"\"\n2\n3\n4\n\"\"\"\n) == \"8\"\nassert solution(\n\"\"\"\n3\n2\n3\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n1\n1\n1\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"7\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('3') == '60'\nassert solution('5') == '300'\nassert solution('7') == '7200'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2\n2\n3\n\"\"\") == '6'\n\nassert solution(\n\"\"\"\n5\n3\n4\n5\n6\n\"\"\") == '26'\n\nassert solution(\n\"\"\"\n10\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\"\"\") == '89'\n\nassert solution(\n\"\"\"\n10\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\"\"\") == '190'\n\nassert solution(\n\"\"\"\n10\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\"\"\") == '210'"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == str(solution(input()))\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 2 4 3') == '3'\nassert solution('2 1 3 4') == '2'\nassert solution
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == 0\nassert solution('1 2 3 4 5 4 3') == 3\nassert solution('1 2 3 4 5 4 4 3') == 0\nassert solution('1 2 3 4 5 4 4 3 2') == 1\nassert solution('1 2 3 4 5 4 4 3 2 4') == 0\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 3') == '0'\nassert solution('3\\n1 2 3') == '0'\nassert solution('3\\n1 2 3\\n2 1 3') == '0'\nassert solution('3\\n1 2 3\\n3 2 1') == '1'\nassert solution('2\\n1 2') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n''') == '0'\n\nassert solution('''3\n2 1 3\n''') == '1'\n\nassert solution('''3\n4 4 1\n''') == '2'\n\nassert solution('''3\n1 5 1\n''') == '1'\n\nassert solution('''3\n1 1 1\n''') == '0'"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\n'''\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == 0\nassert solution(\"1 2 3 4\") == 1\nassert solution(\"1 2 3 4 5\") == 2\nassert solution(\"2 5 2 3 3 1\") == 2\nassert solution(\"2 3 3 4 5 5\") == 2\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 0\nassert solution('1 2 3 4 5') == 0\nassert solution('1 2 3 4 5 6') == 0\nassert solution('1 2 3 4 5 6 7') == 0\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\n\nassert solution(\n'''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '0'\n\nassert solution(\n'''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'\nassert solution('''8 8\n2 3 4 5 6 7 8\n9 10 11 12 13 14\n15 16 17 18 19 20\n21 22 23 24 25 26\n27 28 29 30 31 32\n33 34 35 36 37 38\n39 40 41 42 43 44\n45 46 47 48 49 50\n51 52 53 54 55 56\n57 58 59 60 61 62\n63 64 65 66 67 68 69\n70 71 72 73 74 75 76\n77 78 79 80 81 82 83\n84 85 86 87 88 89 90\n91 92 93 94 95 96 97 98\n99 100 101 102 103 104 105\n106 107 108 109 110 111 112\n113 114 115 116 117 118 119\n120 121 122 123 124 125 126\n127 128 129 130 131 132 133\n134 135 136 137 138 139 140\n141 142 143 144 145 146 147\n148 149 150 151 152 153 154\n155 156 157 158 159 160 161\n162 163 164 165 166 167 168\n169 170 171 172 173 174 175\n176 177 178 179 180 181 182\n183 184 185 186 187 188 189\n190 191 192 193 194 195 196 197\n198 199 200 201 202 203 204 205\n206 207 208 209 210 211 212 213\n214 215 216 217 218 219 220 221\n222 223 224 225 226 227 228 229\n230 231 232 233 234 235 236 237\n238 239 240 241 242 243 244 245\n246 247 248 249 250 251 252 253\n254 255 256 257 258 259 260 261\n262 263 264 265 266 267 268 269\n270 271 272 273 274 275 276 277\n278 279 280 281 282 283 284 285\n286 287 288 289 290 291 292 293\n294 295 296 297 298 299 300 301\n302 303 304 305 306 307 308 309\n310 311 312 313 314 315 316 317 318\n320 321 322 323 324 325 326 327\n328 329 330 331 332 333 334 335\n336 337 338 339 340 341 342 343\n344 345 346 347 348 349 350 351\n352 353 354 355 356 357 358 359\n360 361 362 363 364 365 366 367\n368 369 370 371 372 373 374 375\n376 377 378 379 380 381 382 383\n384 385 386 387 388 389 390 391\n392 393 394 395 396 397 398 399\n400 401 402 403 404 405 406 407\n408 409 410 411 412 413 414 415\n416 417 418 419 420 421 422 423\n424 425 426 427 428 429 430 431\n432 433 434 435 436 437 438 439\n440 441 442 443 444 445 446 447\n448 449 450 451 452 453 454 455\n456 457 458 459 460 461 462 463\n464 465 466 467 468 469 470 471\n472 473 474 475 476 477 478 479\n480 481 482 483 484 485 486 487\n488 489 490 491 492 493 494 495\n496 497 498 499 500 501 502 503\n504 505 506 507 508 509 510 511\n512 513 514 515 516 517 518 519\n520 521 522 523 524 525 526 527\n528 529 530 531 532 533 534 535\n536 537 538 539 540 541 542 543\n544 545 546 547 548 549 550 551\n552 553 554 555 556 557 558 559\n560 561 562 563 564 565 566 567\n568 569 570 571 572 573 574 575\n576 577 578 579 580 581 582 583\n584 585 586 587 588 589 590 591\n592 593 594 595 596 597 598 599\n600 601 602 603 604 605 606 607\n608 609 610 611 612 613 614 615\n616 617 618 619 620 621 622 623\n624 625 626 627 628 629 630 631\n632 633 634 635 636 637 638 639\n640 641 642 643 644 645 646 647\n648 649 650 651 652 653 654 655\n656 657 658 659 660 661 662 663\n664 665 666 667 668 669 670 671\n672 673 674 675 676 677 678 679\n680 681 682 683 684 685 686 687\n688 689 690 691 692 693 694 695\n696 697 698 699 700 701 702\n703 704 705 706 707 708 709\n710 711 712 713 714 715 716\n717 718 719 720 721 722 723\n724 725 726 727"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0'\nassert solution('1 3') == '0'\nassert solution('2 3') == '1'\nassert solution('3 3') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4') == '0'\nassert solution('3 3') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('4 4') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16\\n17 18 19 20') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == '6'\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == '0'\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == '2'\nassert solution(\"5 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n13 14 15 16\\n17 18 19 20\\n21 22 23 24\\n\") == '6'\n\n\n\n\n--- Other Examples ---\n\nInput\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n\nOutput\n2\n\nInput\n3 3\n1 2 3\n4 5 6\n7 8 9\n\nOutput\n0\n\nInput\n4 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n\nOutput\n0\n\nInput\n2 4\n1 1\n1 2\n1 3\n1 4\n\nOutput\n0\n\nInput\n4 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n\nOutput\n0\n\nInput\n2 4\n1 1\n1 1\n\nOutput\n0\n\nInput\n4 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n\nOutput\n0\n\"\"\"\n\nn, m = [int(i) for i in stdin.readline().split()]\na = [[int(j) for j in stdin.readline().split()] for i in range(n)]\na = [[0]*m] + a + [[0]*m]\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        a[i][j] = a[i][j-1] + a[i-1][j] - a[i-1][j-1] + a[i-1][j-1]\nfor i in a:\n    print(*i)\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3''') == '6'\nassert solution('''3 4''') == '0'\nassert solution('''4 3''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '0'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9''') == '6'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2 3\\n4 5 6') == '6'\nassert solution('3 3\\n1 2 3\\n4 5 6') == '0'\nassert solution('4 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'\nassert solution('4 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '0'\nassert solution('5 5\\n1 6 3 4 5\\n10 11 12 13 14\\n15 16 17 18 19\\n20 21 22 23 24') == '4'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == '6'\nassert solution('3 4') == '0'\nassert solution('3 4') == '2'\nassert solution('5 5') == '0'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\nsys.path.append(\"../../../\")\nfrom shared.solver import Solver"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('10\\n2 1 3 1 6 1 1 1') == '2'\nassert solution('100\\n
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n2 3') == '2'\nassert solution('3\\n10 2') == '1'\nassert solution('2\\n1 1') == '2'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n5 10 2 3 14 5''') == '5'\nassert solution('''2\n1 100''') == '99'\n'''\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\"\"\""
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('6\\n1 100\\n') == '99'\nassert solution('2\\n1 100\\n') == '99'\n\"\"\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 100') == '5'\nassert solution('6\\n5 10 2 3 14 5') == '5'\n\n\n'''\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('4\\n1 100\\n2 99\\n3 98\\n4 97') == '1'\nassert solution('10\\n
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input('')) == ''\n'''\n\nfrom sys import stdin\n\nn = int(stdin.readline().strip())\nskills = list(map(int, stdin.readline().split()))\n\nskills.sort(reverse=True)\n\nsol = 0\n\nfor i in range(n // 2):\n    if skills[i]!= skills[i + 1]:\n        sol += 1\n\nprint(sol)\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n\n\n\"\"\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'\nassert solution('1\\n0') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 0 1 0 1\n''') == '2'\n\nassert solution('''6\n0 1 0 1 1 0\n''') == '2'\n\nassert solution('''7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution('''3\n0 0 0\n''') == '0'\n\nassert solution('''7\n1 0 1 1 1 1\n''') == '0'"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\n\n\n\"\"\"\n\n\"\"\"\n\nCOMMENTS:\n\nnot sure what this question means...\n\nthis problem is interesting...\n\nthe maximum number of consecutive hours during which Polycarp rests is the maximum number of consecutive hours during which Polycarp is non-resting.\n\nso, for each hour, we can either work or rest. if we work, we can work for the entire hour, but if we rest, we can rest for the entire hour.\n\nthe max consecutive hours is the max of the rest periods in the day, i.e. the max number of consecutive hours during which Polycarp is non-resting.\n\nfor each hour, we can either work or rest. if we work, we can work for the entire hour, but if we rest, we can rest for the entire hour.\n\ntherefore, we can enumerate the hours to find the maximum consecutive hours\n\nn hours:\n\nwork: 0\nrest: 1"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('1\\n1') == '1'\nassert solution('1\\n0\\n1') == '2'\nassert solution('1\\n1\\n0\\n1') == '2'\nassert solution('2\\n1\\n0\\n1') == '1'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 0 1 0 1') == 2\nassert solution('6\\n0 1 0 1 1 0') == 2\nassert solution('7\\n1 0 1 1 1 0 1') == 3\nassert solution('3\\n0 0 0') == 0\nassert solution('7\\n1 0 1 1 1 0 1') == 0\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('7\\n0 0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5\n1 0 1 0 1\n''') == '2'\n\nassert solution(\n'''\n6\n0 1 0 1 1 0\n''') == '2'\n\nassert solution(\n'''\n7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution(\n'''\n3\n0 0 0\n''') == '0'\n\nassert solution(\n'''\n3\n0 0 1\n''') == '0'"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('4\\n0 0 0 0') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '1'\nassert solution('''\n3\n''') == '2'\nassert solution('''\n4\n''') == '3'\nassert solution('''\n5\n''') == '4'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('123') == ''\nassert solution('123321') == ''\nassert solution('12345678') == ''\nassert solution('123456789') == ''\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 0\nassert solution(3) == 2\nassert solution(4) == 0\nassert solution(5) == 5\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[0]\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\nassert solution(\"15\") == \"1\"\nassert solution(\"16\") == \"0\"\nassert solution(\"1000\") == \"0\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == 0\nassert solution(7) == 0\nassert solution(14) == 1\nassert solution(31) == 1\nassert solution(56) == 2\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 0\nassert solution(\"3\") == 2\nassert solution(\"4\") == 4\nassert solution(\"5\") == 8\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"9\") == \"0\"\nassert solution(\"16\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('11') == -1\nassert solution('11111') == -1\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\"\"\") == \"3\"\nassert solution(\"\"\"6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\"\"\") == \"4\"\nassert solution(\"\"\"4\ncantaloupe soft\ncamembert soft\ncandied hard\ngoat soft\"\"\") == \"2\"\nassert solution(\"\"\"1\nmandarin soft\"\"\") == \"1\"\nassert solution(\"\"\"2\nbrie soft\nbrie hard\"\"\") == \"0\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(4)\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3'\nassert solution('parmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == '4'\nassert solution('coral reef\\ncadbury reef\\nsam\\n') == '0'\nassert solution('coral reef\\ncadbury reef\\nsam\\n') == '0'\nassert solution('coral reef\\ncadbury reef\\nsam\\n') == '0'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '1'\nassert solution('5\\n') == '1'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n') == '3'\nassert solution('6\\n') == '4'\nassert solution('6\\n') == '4'\nassert solution('6\\n') == '4'\nassert solution('6\\n') == '4'\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 3\n\n\"\"\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n\"\"\") == 3\nassert solution(\"\"\"6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n\"\"\") == 4\nassert solution(\"\"\"1\nmozzarella soft\n\"\"\") == 1\nassert solution(\"\"\"2\nmozzarella soft\nmozzarella hard\n\"\"\") == 2\nassert solution(\"\"\"1\nmozzarella soft\nmozzarella hard\n\"\"\") == 2\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3'\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncollby hard\\ngruyere hard\\nasiago hard\\n') == '4'"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard''') == '3'\n\nassert solution('''4\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\nswiss hard''') == '4'\n\nassert solution('''10\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\ngiulio hard\ndulce hard''') == '9'\n\nassert solution('''4\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\nlucia hard\ngiulio hard\ndulce hard''') == '8'\n\nassert solution('''4\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\ngiulio hard\ndulce hard\n''') == '8'"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 3\nassert solution(stdin) == 4\nassert solution(stdin) == 5\nassert solution(stdin) == 6\nassert solution(stdin) == 7\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0 0 0 1 0 2 4'\n\n\n-----"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1 2 3 4 5') == '0 0 0 1 2 3'\nassert solution('2 4 3 5 6 5 1') == '0 0 0 1 0 2 4'\nassert solution('2 5 1 5 3 4 3') == '0 0 0 1 0 2 4'\nassert solution('2 4 3 5 6 5 1') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n0 1 2 1\n3 2 1 1\n\"\"\") == \"\"\"\n0 0 0 2\n\"\"\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4\n0 1 2 1\n3 2 1 1\n\"\"\") == \"\"\"1 0 0 2\n\"\"\"\n\nassert solution(\"\"\"7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n\"\"\") == \"\"\"0 0 0 1 0 2 4\n\"\"\"\n\nassert solution(\"\"\"1\n0\n\"\"\") == \"\"\"0\n\"\"\"\n\nassert solution(\"\"\"3\n0 1 2\n1 0 2\n2 1 0\n\"\"\") == \"\"\"1 0 2\n\"\"\"\n\nassert solution(\"\"\"10\n0 1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19\n\"\"\") == \"\"\"11 12 13 14 15 16 17 18 19\n\"\"\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1') == '0\\n0'\nassert solution('1\\n3\\n1') == '0\\n0'\nassert solution('1\\n1\\n1') == '0\\n0'\nassert solution('1\\n1\\n0') == '0\\n0'\nassert solution('1\\n1\\n1\\n1') == '0\\n0'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7') == '0 0 0 1 0 2 4'"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n3 2 1 1') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1') == '0 0 0 1 0 2 4'\nassert solution('1 2 1\\n3 2 1 1') == '0 0 0 2'\nassert solution('1 2 1\\n3 2 1 1') == '0 0 0 2'\n\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\\n0\\n\"\nassert solution(\"2\\n1\\n\") == \"0\\n0\\n\"\nassert solution(\"3\\n1\\n\") == \"0\\n0\\n\"\nassert solution(\"4\\n1\\n\") == \"0\\n0\\n\"\nassert solution(\"5\\n1\\n\") == \"0\\n0\\n\"\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''2\n0 1\n2\n''') == '1 0'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n1\\n0') == '1'\nassert solution('0\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('0\\n1\\n0\\n1') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 1\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(0) == 0\nassert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 0\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n1\\n1\\n0') == 0\nassert solution('1\\n1\\n1\\n0') == 1\nassert solution('1\\n1\\n1\\n1') == 1\nassert solution('0\\n0\\n1\\n0') == 0\n\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == 0\nassert solution('1') == 1\nassert solution('1') == 1\nassert solution('0') == 0\n\"\"\""
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\\n1\") == \"0\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"0\\n1\\n0\") == \"1\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\n\n-----My test-----\nThis submission won't be evaluated.\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"0\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('10000 1 1') == 'No'\nassert solution('1000 0 0') == 'Yes'\nassert solution('1000 100 100') == 'No'\nassert solution('1000 1 1') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1 1 1') == 'No'\n\"\"\""
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 16 10') == 'No'\n\"\"\""
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 80') == 'No'\nassert solution('1000 15 80') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 40') == 'No'\nassert solution('10000 10 100') == 'No'\nassert solution('10000 10 300') == 'Yes'\nassert solution('10000 10 300') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1000 15 80') == 'No'\nassert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 10') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4 3') == 'Yes'\nassert solution('5 4 3') == 'No'\nassert solution('1 2 3 4 5 6 7 8 9') == 'Yes'\nassert solution('1 2 3 4 5 6 7 8 9') == 'No'\nassert solution('1 2 3 4 5 6 7 8 9') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"Yes\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"No\\n\"\n\"\"\""
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n') == 'Yes'\nassert solution('99 90 22\\n99 22 31\\n19 22 37\\n19 22 39\\n16 22 41\\n16 22 39\\n14 22 35\\n14 22 30\\n12 22 24\\n12 22 22\\n12 22 21\\n12 22 19\\n12 22 17\\n12 22 15\\n12 22 13\\n12 22 11\\n12 22 9\\n12 22 7\\n12 22 5\\n12 22 3\\n12 22 1\\n') == 'No'\nassert solution('29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\n29 43 17\\"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\n    \"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\n    \"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45\\n46 47 48\\n49 50 51\\n52 53 54\\n55 56 57\\n58 59 60\\n61 62 63\\n64 65 66\") == \"Yes\"\nassert solution(\n    \"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45\\n46 47 48\\n49 50 51\\n52 53 54\\n55 56 57\\n58 59 60\\n61 62 63\\n64 65 66\") == \"No\"\nassert solution(\n    \"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45\\n46 47 48\\n49 50 51\\n52 53 54\\n55 56 57\\n58 59 60\\n61 62 63\\n64 65 66\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45\\n46 47 48\\n49 50 51\\n52 53 54\\n55 56 57\\n58 59 60\\n61 62 63\\n64 65 66\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'Yes'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n''') == 'Yes'\nassert solution('''4 3 4\n1 2 5\n6 7 8\n9 10 11\n12 13 14\n15 16 17\n18 19 20\n21 22 23\n24 25 26\n27 28 29\n30 31 32\n''') == 'Yes'\nassert solution('''4 3 4\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n13 14 15\n16 17 18\n19 20 21\n22 23 24\n25 26 27\n28 29 30\n''') == 'No'\nassert solution('''4 3 4\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n13 14 15\n16 17 18\n19 20 21\n22 23 24\n25 26 27\n28 29 30\n''') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"\n2 4 8\n9 1 4\n3 4 9\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"\n4 4 3\n1 1 5\n2 2 3\n3 3 4\n\"\"\") == \"No\"\n\nassert solution(\n\"\"\"\n2 2 1\n1 1 1\n1 1 1\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"\n5 5 3\n5 5 3\n5 5 3\n5 5 3\n5 5 3\n\"\"\") == \"Yes\""
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n') == 'Yes'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3 1') == 'Yes'\nassert solution('2 3 4') == 'No'\nassert solution('2 2 2') == 'Yes'\nassert solution('2 2 1') == 'No'\nassert solution('2 1 1') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 9 6\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'Yes'\nassert solution('8 9 6\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'No'\n\"\"\"\n\"\"\"\nSolution 2: More Pythonic solution\n\"\"\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\nNo, because we cannot include any other numbers, if we have a bingo.\n\n\"\"\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''41 2\n5 6''') == '30'\nassert solution('''41 2\n6 7''') == '-1'\nassert solution('''41 5\n8 9''') == '-1'\nassert solution('''41 5\n2 2''') == '-1'\nassert solution('''1000 1000''') == '1000'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''41 2\n5 6''') == 30\nassert solution('''41 2\n5 6''') == 30\nassert solution('''17 5\n1 2\n1 3\n1 4\n1 5\n2 3\n3 4\n3 5\n4 5\n5 6''') == -1\nassert solution('''17 1\n17 1\n17 1\n17 1\n17 1''') == -1\nassert solution('''17 1\n17 1\n17 1\n17 1\n17 1\n17 1''') == -1\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"41 2\") == 30\nassert solution(\"41 6\") == -1\nassert solution(\"5 6\") == 30\nassert solution(\"5 6\") == -1\nassert solution(\"1 2\") == 2\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('41 2\\n5 6\\n') == '30'"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '30'"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '-1'\nassert solution('10 2') == '30'\nassert solution('15 4') == '30'\nassert solution('100 15') == '-1'\nassert solution('10 11') == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"2 1\\n2\\n\") == \"1\"\nassert solution(\"2 1\\n3\\n\") == \"2\"\nassert solution(\"41 4\\n2 3 4 5\\n\") == \"4\"\nassert solution(\"11 13\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\\n\") == \"30\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('41 2') == '30'\nassert solution('10 3') == '-1'\nassert solution('40 10') == '30'\nassert solution('6 1') == '6'\nassert solution('41 2') == '30'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2') == '4'\nassert solution('0 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 3') == '1'\nassert solution('1 100') == '101'\nassert solution('10 100') == '101'\nassert solution('99 95') == '95'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"10 1\") == \"5\"\nassert solution(\"100 1\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1') == '1'\nassert solution('1 1') == '1'\nassert solution('0 2') == '2'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 2') == '3'\nassert solution('2 1') == '5'\nassert solution('3 0') == '10'\nassert solution('3 0') == '10'\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 5') == '5'"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"0\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"0\\n\") == \"1\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split()[1]\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('5\\n7 7 7 7 7') == '1'\nassert solution('2\\n1 2') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('10\\n2 4 5 9 12 13 14 21 22 27 28') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4\\n5\") == \"2\"\nassert solution(\"6\\n4\\n5\") == \"2\"\nassert solution(\"3\\n1\\n1\") == \"1\"\nassert solution(\"3\\n3\\n3\") == \"3\"\nassert solution(\"4\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n7 6 8\\n') == '2'\nassert solution('3\\n4 5 6\\n') == '5'\nassert solution('3\\n4 5 6\\n4 5 6\\n') == '6'\nassert solution('3\\n4 5 6\\n4 5 6\\n2 3 4\\n') == '2'\nassert solution('3\\n4 5 6\\n4 5 6\\n2 3 4\\n3 4\\n') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n7 6 8\n''') == '2'\nassert solution('''3\n1 1 1\n''') == '1'\nassert solution('''3\n3 1 1\n''') == '1'\nassert solution('''3\n7 9 19\n''') == '1'\nassert solution('''5\n47 2 3 4 5\n''') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3\n7 6 8\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5\n1 1 1 1 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n10\n10 9 8 7 6 5 4 3 2 1\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\"\nassert solution(\"3\\n4 5 6\\n\") == \"1\"\nassert solution(\"3\\n4 4 4\\n\") == \"4\"\nassert solution(\"2\\n2 1\\n\") == \"1\"\nassert solution(\"2\\n5 7\\n\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n1 3') == '1 3 2'\nassert solution('1\\n2') == '2 1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\nassert solution(\"10\\n2 3 6 1 4 9 5 3 8 7 10\") == \"2 3 4 5 3 8 7 10 9 6 10 1 3 2\"\nassert solution(\"10\\n2 3 6 1 4 9 5 3 8 7 10\\n3\\n1 3 4 5 6 7 8 9 10\") == \"1 3 2 4 5 6 7 8 9 10 10 3 9 8 7 6 5 4 3 10 1\"\nassert solution(\"10\\n2 3 6 1 4 9 5 3 8 7 10\\n3\\n2 3 1 4 5 6 7 8 9 10\") == \"2 3 4 5 6 7 8 9 10 10 3 9 8 7 6 5 4 3 10 1\"\nassert solution(\"10\\n2 3 6 1 4 9 5 3 8 7 10\\n3\\n1 3 2 4 5 6 7 8 9 10\") == \"1 3 2 4 5 6 7 8 9 10 10 3 9 8 7 6 5 4 3 10 1\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '3 1 2'\nassert solution('1\\n2\\n3\\n4') == '4 3 1 2'\nassert solution('1\\n2\\n3\\n4\\n5') == '5 4 3 1 2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6 5 4 3 1 2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '7 6 5 4 3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"3 1 2\"\nassert solution(\"2 2 3\") == \"3 1 2\"\nassert solution(\"3 2 3\") == \"3 1 2\"\nassert solution(\"3 3 3\") == \"3 1 2\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('2 3 1') == '3 1 2'\nassert solution('2 3 1') == '3 1 2'\nassert solution('2 2 2') == '2 2 1'\nassert solution('2 3 1 2') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '3 1 2'\nassert solution('2\\n2') == '2 2'\nassert solution('1\\n2\\n3\\n4') == '3 1 4 2'\nassert solution('1\\n2\\n2') == '2 1'\nassert solution('1\\n3\\n2') == '3 2 1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"3 1 2\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('2\\n2 3 1') == '2 3 1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 7 100''') == '9'\nassert solution('''10 10 1000''') == '9'\nassert solution('''10 10 100''') == '9'\nassert solution('''10 1 1000''') == '9'\nassert solution('''10 2 1000''') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"3 10 3\") == \"3\"\nassert solution(\"3 10 5\") == \"0\"\nassert solution(\"5 10 1\") == \"9\"\nassert solution(\"10 100 1\") == \"99\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"1 2 1\") == \"0\"\nassert solution(\"2 5 4\") == \"12\"\nassert solution(\"9 9 9\") == \"0\"\nassert solution(\"2 3 1\") == \"0\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 40') == '0'\nassert solution('10 7 12345') == '123485'\nassert solution('100 7 40') == '1021'\nassert solution('100 7 12345') == '123485'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10 100') == '9'\nassert solution('100 100 100') == '0'\nassert solution('1000000 100000 100000') == '0'\nassert solution('1000000 100000 100000 1000000000') == '9'\nassert solution('1000000 1000000000 1000000000 1000000000') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('20 100 1') == '20'\nassert solution('40 12345 10') == '123485'\nassert solution('1 2 1') == '0'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '9'"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == 0\nassert solution(\"10 7 100\") == 9\nassert solution(\"100 2 3\") == 12345\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1 2\") == \"2\"\nassert solution(\"1 2\\n1 2\") == \"2\"\nassert solution(\"5 150\\n150 140 100 200\\n300 50 50 30 50\") == \"2\"\nassert solution(\"5 150\\n150 140 100 200\\n300 50 50 30 50\") == \"2\"\nassert solution(\"6 40\\n40 50 40 60 50 60\") == \"0\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    stdin = \"4 150\\n150 140 100 200\"\n) == \"2\"\nassert solution(\n    stdin = \"4 5\\n3 5 4\\n1 5 3\\n2 5 1\\n4 5 2\\n1 2 1\"\n) == \"4\"\nassert solution(\n    stdin = \"6 5\\n5 2 4 3 1 5\\n2 4 2 4 1 5\\n3 4 4 3 2 5\\n4 5 5 4 3 1\\n2 1 2 1 2 2\"\n) == \"5\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 150') == '2'\nassert solution('4 150') == '2'\nassert solution('4 150') == '2'\nassert solution('4 150') == '2'\nassert solution('4 150') == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 150\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 150\") == 2\nassert solution(\"1 2\") == 0\nassert solution(\"1 2 3\") == 1\nassert solution(\"1 3\") == 1\nassert solution(\"2 2\") == 1\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 150''') == '2'\n'''\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 5\\n5 4 2 1\") == \"No\"\nassert solution(\"5 10\\n5 4 2 1\") == \"No\"\nassert solution(\"5 10\\n5 1 2 1\") == \"No\"\nassert solution(\"5 10\\n5 1 2 1\") == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution('4 1') == 'Yes'\nassert solution('4 1\\n4 3 2 1') == 'No'\nassert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('2 1\\n5 4 2 1') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 1\\n5 4 2 1\\n') == \"Yes\"\nassert solution('10 10\\n5 4 2 1\\n') == \"No\"\nassert solution('10 1\\n5 4 2 1\\n') == \"No\"\nassert solution('10 1\\n5 4 2 1\\n') == \"No\"\nassert solution('10 100\\n5 4 2 1\\n') == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 1''') == 'Yes'\nassert solution('''4 1''') == 'Yes'\nassert solution('''4 1''') == 'Yes'\nassert solution('''4 1''') == 'Yes'\nassert solution('''1 1''') == 'No'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"4 1\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('10 3') == 'No'\nassert solution('2 3') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 1') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4 1\n5 4 2 1\n\"\"\"\n) == \"Yes\"\nassert solution(\n\"\"\"\n3 3\n5 4 2\n\"\"\"\n) == \"No\"\nassert solution(\n\"\"\"\n6 4\n5 4 2 1 3 2\n\"\"\"\n) == \"Yes\"\nassert solution(\n\"\"\"\n6 4\n5 4 2 1 3 2\n\"\"\"\n) == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 1''') == 'Yes'\nassert solution('''4 1''') == 'Yes'\nassert solution('''1 1''') == 'Yes'\nassert solution('''10 2''') == 'No'\nassert solution('''5 3''') == 'Yes'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''1 1 1\n.#\n.#''') == '0'\nassert solution('''1 1 1\n.#\n.#''') == '0'\nassert solution('''2 3 3\n..#\n###\n##''') == '8'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\".#.\") == \"10\"\nassert solution(\"....#\") == \"3\"\nassert solution(\"#.#\") == \"1\"\nassert solution(\"#.#\") == \"1\"\nassert solution(\"#..\") == \"3\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3'\n'..#'\n'###') == '5'\n\nassert solution('3 3 2'\n'..#'\n'###') == '5'\n\nassert solution('1 1 1'\n'..#'\n'###') == '0'\n\nassert solution('2 3 2'\n'..#'\n'###') == '5'\n\nassert solution('1 1 1'\n'..#'\n'###') == '0'"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('..#\\n###') == '5'\nassert solution('...\\n...') == '6'\nassert solution('..#\\n#.#\\n...') == '3'\nassert solution('...\\n...\\n...') == '3'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''2 3 2\n..#\n###'''\n    ) == '5'\n\nassert solution(\n    '''2 3 3\n..#\n##.\n.#.\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 4 4\n.##\n###\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 1\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('2 3 2\\n.###\\n#.##') == '5'\nassert solution('2 3 2\\n.#.\\n.#.\\n') == '5'\nassert solution('2 3 2\\n..#\\n.###\\n#.##') == '5'\nassert solution('1 1 1\\n#\\n#') == '1'\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''2 3 2\n..#\n###\n\n.###\n.#.#''') == '5'\nassert solution('''2 3 2\n..#\n###\n\n.###\n.#.#''') == '5'\nassert solution('''2 3 2\n..#\n###\n\n.###\n.#.#''') == '5'\nassert solution('''2 3 2\n..#\n###\n\n.###\n.#.#''') == '5'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2050 2060') == '6'\nassert solution('2050 5030') == '18'\nassert solution('2050 5040') == '18'\nassert solution('2050 5060') == '18'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nL, R = map(int, stdin.split())\n\nfor i in range(L, R + 1):\n    for j in range(L, R + 1):\n        if (i * j) % 2019 == 0:\n            print(i * j)\n            break\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\"\"\""
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2020 40\") == \"1\"\nassert solution(\"2020 40\") == \"1\"\nassert solution(\"2020 40\") == \"1\"\nassert solution(\"2020 40\") == \"1\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n\") == \"0\"\nassert solution(\"2020 2040\\n\") == \"2\"\nassert solution(\"2020 2040\\n\") == \"2\"\nassert solution(\"2020 2040\\n\") == \"2\"\nassert solution(\"2020 2040\\n\") == \"2\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AatCoder') == 'AC'\nassert solution('AtCoder') == 'WA'\nassert solution('ATCoder') == 'WA'\nassert solution('cAiNDER') == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"AC\"\nassert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtC\") == \"WA\"\nassert solution(\"atc\") == \"WA\"\nassert solution(\"atcoder\") == \"AC\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('abc') == 'WA'\nassert solution('aCd') == 'WA'\nassert solution('aCdE') == 'WA'\nassert solution('abcDE') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AtCoder2') == 'WA'\nassert solution('AtCoder3') == 'WA'\nassert solution('AtCoder4') == 'WA'\nassert solution('AtCoder5') == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"a\") == \"WA\"\nassert solution(\"TeST\") == \"WA\"\nassert solution(\"\") == \"WA\"\n\n\"\"\""
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoder!\") == \"WA\"\nassert solution(\"AtCoder.\") == \"WA\"\nassert solution(\"AtCoder,!\") == \"WA\"\nassert solution(\"AtCoder,!\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoder\") == \"WA\"\nassert solution(\"t\") == \"WA\"\nassert solution(\"T\") == \"WA\"\nassert solution(\"tC\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"AC\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AC') == 'AC'\nassert solution('ACAd') == 'AC'\nassert solution('a') == 'WA'\nassert solution('A') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('atcoder') == 'AC'\nassert solution('a') == 'WA'\nassert solution('a1') == 'WA'\nassert solution('1') == 'WA'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1214', 4) == \"2\"\nassert solution('1214', 5) == \"2\"\nassert solution('1214', 10) == \"2\"\nassert solution('1214', 11) == \"2\"\nassert solution('1214', 100) == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('12214444', 4) == '2'\nassert solution('1222214444444444444444', 4) == '2'\nassert solution('12222222214444444444444444444444444444444444444444444444444444444444444444', 4) == '2'\nassert solution('12222222222144444444444444444444444444444444444444444444444444444444444444', 4) == '2'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1214', 4) == \"2\"\nassert solution('1222214444444444444444', 4) == \"2\"\nassert solution('122222222144444444444444444444444444444444444444444444444444444444444444444444', 4) == \"2\"\nassert solution('1222222221444444444444444444444444444444444444444444444444444444444444444444', 4) == \"2\"\nassert solution('1222222221444444444444444444444444444444444444444444444444444444444444444444', 4) == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1234', 3) == '3'\nassert solution('12345', 3) == '4'\nassert solution('1234567', 4) == '5'\nassert solution('123456789', 10) == '8'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1214') == '2'\nassert solution('1214') == '2'\nassert solution('1214') == '2'\nassert solution('1214') == '2'\nassert solution('1214') == '2'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1324\") == \"133333333322224444444444444444\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1324\") == \"133333333322224444444444444444\"\nassert solution(\"1214\") == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[4]\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 5) == '2'\nassert solution('1214', 6) == '2'\nassert solution('1214', 7) == '2'\nassert solution('1214', 8) == '2'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1214\", 4) == \"2\"\nassert solution(\"1214\", 5) == \"22\"\nassert solution(\"1214\", 10) == \"2\"\nassert solution(\"123456789\", 10) == \"2\"\nassert solution(\"1214\", 8) == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 1) == '1'\nassert solution('1214', 5) == '22'\nassert solution('1214', 11) == '22'\nassert solution('1214', 12) == '22'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 2 3 4 1''') == 'YES'\nassert solution('''5\n5 4 3 2 1''') == 'NO'\nassert solution('''1\n1''') == 'YES'\nassert solution('''2\n2''') == 'YES'\nassert solution('''5\n3 4 2 1 5''') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"\nassert solution(\"5\\n5 1 3 4 2\") == \"NO\\n\"\nassert solution(\"6\\n2 4 3 1 5 6\") == \"YES\\n\"\nassert solution(\"6\\n2 3 1 4 5 6\") == \"NO\\n\"\nassert solution(\"7\\n2 4 3 1 5 6 7\") == \"NO\\n\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('7\\n1 2 3 4 5 6 7') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'YES'\nassert solution('4\\n1 2 3 4') == 'NO'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n5 3 4 2 1\") == \"NO\"\nassert solution(\"5\\n3 1 2 4 5\") == \"YES\"\nassert solution(\"5\\n3 4 1 2 5\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\") == \"YES\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('1') is None\nassert solution('1 1') is None\nassert solution('1 1 1') is None\nassert solution('5') is None\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 3 4 1') == 'NO'\nassert solution('6\\n5 3 1 4 2 6') == 'NO'\nassert solution('6\\n5 1 4 3 2 6') == 'YES'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n5 3 4 2 1\") == \"NO\"\nassert solution(\"5\\n3 2 4 1 5\") == \"YES\"\nassert solution(\"1\\n2 3 4\") == \"NO\"\nassert solution(\"2\\n2 2\") == \"YES\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 2 3 4 1') == 'NO'\nassert solution('5\\n5 3 4 1 2') == 'NO'\nassert solution('5\\n5 1 3 4 2') == 'YES'\nassert solution('10\\n5 1 3 4 2 6 7 8 9 10') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"1\\n1\") == \"NO\"\nassert solution(\"5\\n5 3 4 1 2\") == \"YES\"\nassert solution(\"5\\n5 3 4 1\") == \"NO\"\nassert solution(\"5\\n5 4 3 1 2\") == \"NO\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3121'''\n) == '2'\n\nassert solution(\n'''6'''\n) == '1'\n\nassert solution(\n'''201920181'''\n) == '4'\n\nassert solution(\n'''1000000000000000000000000000000000'''\n) == '33'\n\nassert solution(\n'''99999999999999999999999999999999999999999'''\n) == '0'"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"201920181\") == \"4\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"9\") == \"1\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('3') == '0'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\nassert solution('1235') == '1235'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('123') == '3'\nassert solution('1234567890') == '36'\nassert solution('567') == '1'\nassert solution('1012') == '3'\nassert solution('000112') == '6'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''1000000000000000000000000000000000''') == '33'\nassert solution('''201920181''') == '4'\nassert solution
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('12345678901234567890123456789012345678901234567890') == '9'\n\n\n'''\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(201920181) == 4\nassert solution(1000000000000000000000000000000000) == 33\nassert solution(1000000000000000000000000000000000) == 33\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('0') == '0'\nassert solution('001') == '1'\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == '0'\nassert solution('123') == '3'\nassert solution('6') == '1'\nassert solution('5') == '2'\nassert solution('12345') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == ''\nassert solution('''1 2 3 4 5''') == ''\nassert solution('''2 4 7 11 3''') == ''\nassert solution('''1 2 3 4''') == ''\nassert solution('''1 -1 2 -1''') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n-1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n-1') == '1'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('2\\n1 2 -1\\n-1 -1\\n') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('2 4 7 11 3') == '2'\nassert solution('13 37 39') == '0'\nassert solution('1 2 -1') == '3'\nassert solution('-6 -12 6') == '3'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '2'\nassert solution('''3''') == '0'\nassert solution('''4''') == '0'\nassert solution('''133739''') == '3'\nassert solution('''1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input('')) == output('')\nprint(solution(input('')))\n\n'''\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n'\nassert solution('''9\nbambarbia\nhellocode\n''') == '0\\n6 5\\n1 6\\n3 5\\n4 8\\n5 7\\n2 4\\n10 9\\n8 10\\n'\nassert solution('''10\ncode??????\n??????test\n''') == '10\\n6 2\\n1 6\\n3 5\\n4 8\\n5 7\\n2 4\\n10 9\\n8 10\\n'\nassert solution('''20\nabracadabra\nfakrzsjqm\n''') == '10\\n7 11\\n2 2\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''9\nbambarbia\nhellocode''') == '0'\nassert solution('''10\ncode??????\n??????test\n''') == '10'\nassert solution('''1\na''') == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''10\nbambarbia\nhellocode''') == '0'\nassert solution('''10\ncode??????\n??????test''') == '10'\nassert solution('''10\ncode???\n??????test''') == '10'\nassert solution('''10\ncodeforces\ncodeforces''') == '5'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc''') == '5'\nassert solution('''9\nbambarbia\nhellocode''') == '0'\nassert solution('''10\ncode??????\n??????test''') == '10'\nassert solution('''7\nbambarbia\nhellocode''') == '5'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('abca') == '5'\nassert solution('bamBarbia') == '5'\nassert solution('bambarbia') == '5'\nassert solution('bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('code?code') == '1'\nassert solution('b?b') == '1'\nassert solution('codeforces') == '5'\nassert solution('abcde') == '1'\nassert solution('aabca?b') == '5'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '5'\nassert solution('bambarbia') == '5'\nassert solution('hellocode') == '5'\nassert solution('code??????') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\\ncodeforces\\ndodivthree\") == '5'\nassert solution(\"7\\nabaca?b\\nzabbbcc\") == '5'\nassert solution(\"9\\nbambarbia\\hellocode\") == '0'\nassert solution(\"10\\ncode??????\\??????test\") == '10'"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''9\nbambarbia\nhellocode\n''') == '0'"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2'\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n9\n-1 -1 -1 -1 -1 -1 1 1 1\n''') == '4'\nassert solution('''\n9\n-1 -1 -1 -1 -1 -1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''1\n1 1 1 1''') == '1'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\") == \"2\\n4 4\\n1 1\\n1 1\\n1 1\"\nassert solution(\"7 7\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\\n1 1\"\nassert solution(\"4\\n1 1\\n1 1\\n1 1\") == \"1\\n1 1\\n1 1\\n1 1\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 1 1 1''') == '3'\nassert solution('''7\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9''') == '4'\nassert solution('''2\n1 1 1 1''') == '4'\nassert solution('''3\n1 1 1''') == '4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n-1 2\\n2 1') == '3'\nassert solution('3\\n2 1\\n1 1\\n1 2\\n1 1') == '2 2'\nassert solution('4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '1 1'\nassert solution('5\\n5 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '1 1'\nassert solution('6\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == '1 1'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3\n''') == '''3\n7 7\n2 3\n4 5\n'''\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '''2\n3 4\n1 1\n'''\nassert solution('''4\n1 1 1 1\n''') == '''4\n4 4\n1 1\n2 2\n3 3\n'''"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '1'\nassert solution('''\n2\n3 4\n3 4\n''') == '3'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 2 1 5 3\n''') == '3'\nassert solution('''6\n1 2 2 1 5 3 4\n''') == '2'\nassert solution('''7\n1 2 2 1 5 3 4 5\n''') == '2'\nassert solution('''8\n-4 -3 -2 -1 0 1 2 3 4 5 6\n''') == '5'\nassert solution('''10\n-9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9\n''') == '2'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 1 1 1''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''5\n-5 -4 -3 -2 -1 0''') == '4'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\nassert solution('''8 2\n2 9 4 10 7 5 8 3''') == '24'\nassert solution('''9 2\n2 9 4 10 7 5 8 3''') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\nassert solution('''10 9\n1 2 3 4 5 6 7 8 9 10''') == '20'\n'''"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2 78 4 10') == '7'\nassert solution('3 2\\n2 78 4 10') == '12'\nassert solution('4 2\\n2 78 4 10') == '0'\nassert solution('5 2\\n3 7 19 3 3') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 78 4 10\\n') == '7'\nassert solution('5 2\\n3 7 19 3 3\\n') == '12'\nassert solution('4 2\\n2 78 4 10\\n') == '0'\n\"\"\"\nimport sys"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4') == '0'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n3 7 19 3 3') == '12'\nassert solution('5 3\\n2 78 4 10\\n3 7 19 3 3') == '0'\nassert solution('6 2\\n45 1 10 12 11 7\\n3 7 19 3 3') == '7'\nassert solution('6 2\\n45 1 10 12 11 7\\n3 7 19 3 3') == '7'\nassert solution('4 2\\n2 78 4 10\\n3 7 19 3 3') == '12'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3 4') == '7'\nassert solution('2 1\\n3 4') == '12'\nassert solution('2 2\\n3 4') == '0'\nassert solution('2 2\\n3 4') == '0'\nassert solution('2 1\\n2 3') == '3'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3') == '3'\nassert solution('2 2\\n2 3') == '2'\nassert solution('1 1\\n1 1') == '0'\nassert solution('1 2\\n1 2') == '0'\nassert solution('1 3\\n2 3') == '3'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1\\n1 1') == '1'\nassert solution('2 1\\n2 1') == '0'\nassert solution('2 1\\n1 2') == '1'\nassert solution('1 1\\n1 1') == '0'\nassert solution('2 2\\n1 2') == '1'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 5') == '9'\nassert solution('1\\n5') == '5'\nassert solution('1\\n5 3') == '6'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n2 5'''\n) == '9'\nassert solution(\n'''3\n-1 -2 -3'''\n) == '-3'\nassert solution(\n'''8\n20 19 10 8 9 7 6 5 4 3 2 1'''\n) == '50'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"9\"\nassert solution(\"2 5 2\") == \"9\"\nassert solution(\"2 5 2 4\") == \"10\"\nassert solution(\"2 5 2 4 3\") == \"11\"\nassert solution(\"2 5 2 4 3 2\") == \"13\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0\") == 0\nassert solution(\"3\\n1 3 5\") == 10\nassert solution(\"3\\n-1 -2 -3\") == -6\nassert solution(\"2\\n1 2\") == 3\nassert solution(\"2\\n1 -2\") == -1\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '9'\nassert solution('2 5') == '9'\nassert solution('2 5 4') == '11'\nassert solution('2 5 4 7') == '15'\nassert solution('2 5 4 7 8') == '17'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n2') == '9'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n5\\n2') == '9'\nassert solution('2\\n5\\n1') == '4'\nassert solution('2\\n5\\n1') == '4'\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 2 10\") == \"1 2 2 10\"\nassert solution(\"2 3 2 10\") == \"1 2 2 10\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\nassert solution(\"1 1 1 1 1\") == \"1 1 1 1 1\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\"\"\") == \"110\"\nassert solution(\n\"\"\"1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\"\"\") == \"1\"\nassert solution(\n\"\"\"5 3 1\n4 1 1 100\n2 3 1 100\n1 1 3 10\n1 1 1 1\n3 1 1 100\n1 1 1 1\n1 1 1 1\"\"\") == \"100\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\n\"\"\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 3 100\\n1 2 2 10\\n2 3 2 10') == 110"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 4') == 110\nassert solution('1 2 2 10') == 110\nassert solution('2 3 2 10') == 110\nassert solution('1 2 2 1') == 111\nassert solution('2 3 2 1') == 111\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4 3\") == \"110\"\nassert solution(\"1 3 3 100\") == \"110\"\nassert solution(\"1 2 2 10\") == \"110\"\nassert solution(\"2 3 2 10\") == \"110\"\n\"\"\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[1]"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 110\n'''\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\nprint('Passed')\n\"\"\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 10') == 110\nassert solution('1 2 2 10\\n1 2 2 10') == 110\n\"\"\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 4 6 3''') == '5'\nassert solution('''1 4 6 3''') == '5'\nassert solution('''1 1 1''') == '0'\nassert solution('''1 1''') == '0'\nassert solution('''1 1 1''') == '0'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('2 1') == '1'\nassert solution('2 1 4 4') == '3'\nassert solution('2 1 4 4 3') == '2'\nassert solution('2 1 4 4 3 3') == '1'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4 6 3') == 5\nassert solution('1 4 6 3\\n') == 5\n\"\"\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 5\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"4\\n1 4 6 3\\n\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"1 3 1 2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2 4 5 6\") == \"3\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 4 6 3\") == \"5\"\nassert solution(\"1 4 6 5\") == \"0\"\nassert solution(\"1 4 6 6\") == \"0\"\nassert solution(\"1 4 6 1\") == \"2\"\nassert solution(\"1 4 6 10\") == \"2\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 4 6 3''') == '5'\nassert solution('''5\n5 5 5 5 5''') == '0'\nassert solution('''8\n1 1 1 1 1 1 1 1 1''') == '0'\nassert solution('''5\n1 5 5 5 5 5''') == '4'\nassert solution('''4\n1 1 1 1''') == '0'\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"0 0\n1 0\n0 1\"\"\") == \"2.2761423749\"\nassert solution(\"\"\"0 0\n1 0\n0 1\n1 0\n1 1\"\"\") == \"3.4641016151377544\"\nassert solution(\"\"\"0 0\n1 1\n0 1\n1 0\n1 1\"\"\") == \"0.5\"\nassert solution(\"\"\"0 0\n0 0\"\"\") == \"0\"\nassert solution(\"\"\"0 0\n1 1\n1 0\n1 1\"\"\") == \"0.7071067690849304\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0\\n1 0') == '2.276142'\n\"\"\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(2.276142)\n'''"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('0 0\\n-1 0\\n0 -1') == '2.273818181818'\nassert solution('0 0\\n1 1\\n0 -1') == '1.414214141414'\nassert solution('2 2\\n2 2\\n2 2\\n2 2') == '4.792079207921'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"0 0\n1 0\n0 1\n\"\"\") == \"2.2761423749\"\nassert solution(\"\"\"3\n0 0\n1 0\n0 1\n\"\"\") == \"2.2761423749\"\nassert solution(\"\"\"6\n0 0\n1 0\n0 1\n0 0\n1 1\n1 0\n\"\"\") == \"4.02798263977\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"0.707116663291\"\nassert solution(\"\"\"1\n1\n1\n1\n1\n1\n\"\"\") == \"2.828427124746\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"0 0\\n\"\n    \"1 0\\n\"\n) == \"2.276142\"\n\nassert solution(\n    \"3\\n\"\n    \"0 0\\n\"\n    \"1 0\\n\"\n    \"0 1\\n\"\n) == \"2.276142\"\n\nassert solution(\n    \"5\\n\"\n    \"0 0\\n\"\n    \"1 0\\n\"\n    \"2 0\\n\"\n    \"3 0\\n\"\n    \"4 0\\n\"\n) == \"5.000000000000\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0') == '0'\nassert solution('0 0') == '0'\nassert solution('1 0') == '1'\nassert solution('1 0') == '1'\nassert solution('0 1') == '2'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\") == \"2.2761423749\"\nassert solution(\"1 0\") == \"3.4821427559\"\nassert solution(\"0 1\") == \"4.6514285714\"\nassert solution(\"1 1\") == \"5.9399424316\"\nassert solution(\"0 1 1 1\") == \"6.8591459286\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('1 0\\n0 1') == '2.2761423749'\nassert solution('2 0\\n0 1') == '2.2761423749'\nassert solution('3 0\\n0 1') == '2.2761423749'\nassert solution('4 0\\n0 1') == '2.2761423749'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"10 6\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"7 9\") == \"9\"\nassert solution(\"17 9\") == \"9\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"9 3\") == \"4\"\nassert solution(\"9 9\") == \"4\"\nassert solution(\"50 100\") == \"25\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12 4') == '4'\nassert solution('8 5') == '5'\nassert solution('4 1') == '5'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[10:-1]\n\"\"\""
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 4\n\"\"\"\n\n\"\"\"\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n-----\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12 4') == '4'\nassert solution('9 8') == '8'\nassert solution('24 4') == '12'\nassert solution('24 4') == '12'\nassert solution('24 4') == '12'\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n'''\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('1 2') == 0\nassert solution('12 4') == 4\nassert solution('10 3') == 10\nassert solution('12 14') == 12\n"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(10000) == 3\n\nprint(solution(input()))"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10000') == '3'\nassert solution('3') == '3'\nassert solution('23452345') == '3'\nassert solution('111111111') == '7'\nassert solution('100000000') == '10'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10000') == '3'"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\\n\\n\\n\")) == output(input(\"\\n\\n\\n\"))\nprint(solution(input(\"\\n\\n\\n\")))\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '10000') == '3'\nassert solution(\n    '1000') == '4'\nassert solution(\n    '100') == '1'\nassert solution(\n    '10') == '2'\nassert solution(\n    '1') == '1'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"3\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"10000\") == \"3\"\nassert solution(\"100000000\") == \"4\"\nassert solution(\"1000000000\") == \"5\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12345\") == \"12\"\nassert solution(\"123456789\") == \"12\"\nassert solution(\"100\") == \"1\"\nassert solution(\"12\") == \"1\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin\n\nN, M = map(int, stdin.readline().strip().split())\nK = [int(x) for x in stdin.readline().strip().split()]\nA = []\n\nfor _ in range(N):\n    A.append([int(x) for x in stdin.readline().strip().split()])"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[:4]"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n1\") == \"1\"\nassert solution(\"3\\n2\\n3\") == \"0\"\nassert solution(\"3\\n3\\n3\") == \"3\"\nassert solution(\"3\\n2\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n---\n\"\"\"\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n\"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n3 4\n3 1 2 3\n2 3 2\n2 3 2\n\"\"\"\n) == '3'\n\nassert solution(\n    \"\"\"\n4 3\n1 1 2 2\n3 3 1 1\n4 3 2 1\n2 3 2 1\n\"\"\"\n) == '3'\n\nassert solution(\n    \"\"\"\n10 10\n1 3 3 4 5 6 7 8 9 10\n5 3 1 2 2 3 3 4 4\n4 4 1 1 1 1 1 1 1 1\n1 3 1 2 3 3 4 4 5\n3 4 2 2 2 1 2 1 1\n3 4 2 2 1 2 1 2 1\n3 4 2 2 1 2 1 2 1\n3 4 2 2 1 2 1 2 1\n1 3 1 2 3 4 4 5 6\n\"\"\"\n) == '2'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"Katsusando loves omelette rice.\") == '1'\nassert solution(\"Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\") == '1'\nassert solution(\"To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n\") == '1'\nassert solution(\"\") == '1'\nassert solution(\"2 1 3\\n3 1 2 3\\n2 3 2\\n\") == '1'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"Katsusando loves omelette rice.\\n\"\n\"Besides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\\n\"\n\"To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\\n\"\n\"The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th,..., A_{iK_i}-th food.\\n\"\n\"Find the number of the foods liked by all the N people.\") == \"1\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0.0'\nassert solution('1') == '0.25'\nassert solution('4') == '0.5'\nassert solution('9') == '0.5'\nassert solution('13') == '0.25'\n'''\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\n\"\"\"\n\n\"\"\"\n-- skip test case --\nimport random\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '0.25'\nassert solution('2\\n') == '0.125'\nassert solution('3\\n') == '0.0625'\nassert solution('4\\n') == '0.03125'\nassert solution('5\\n') == '0.015625'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"0.5000000000\"\nassert solution(\"8\\n\") == \"0.25000000\"\nassert solution(\"10\\n\") == \"0.05000001\"\nassert solution(\"12\\n\") == \"0.0\"\nassert solution(\"15\\n\") == \"0\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '0.5'\nassert solution('1000') == '0.5'\nassert solution('100') == '0'\nassert solution('10000') == '1'\nassert solution('100000') == '0'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('2') == '0.5'\nassert solution('1') == '0.5'\nassert solution('8') == '0.125'\nassert solution('9') == '0.0'\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '0.500000'\nassert solution('2\\n') == '0.500000'\nassert solution('3\\n') == '0.500000'\nassert solution('4\\n') == '0.500000'\nassert solution('5\\n') == '0.500000'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('10\\n2\\n1 1\\n2 1\\n1 2\\n1 2\\n2 1\\n1 1\\n2 1\\n1 1\\n1 1\\n2 1\\n1 1\\n2 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"2\\n1\\n1\\n\") == \"0\"\nassert solution(\"2\\n1\\n0\\n\") == \"1\"\nassert solution(\"2\\n1\\n0\\n1\\n0\\n\") == \"0\"\nassert solution(\"2\\n1\\n0\\n1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n4\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3\n1\n2 3\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n2\n1\n1\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n2\n1\n1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n7\n1\n2 4\n1\n1 2\n1\n2 3\n1\n3 2\n1\n2 2\n\"\"\"\n) == \"4\""
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n2\n1\n1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n3\n1\n2 1\n1\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n4\n1\n1 1\n1 1\n1\n1 1\n\"\"\"\n) == \"1\""
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('2\\n1\\n1\\n') == '0'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('4\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('2\\n1\\n1\\n') == '2'\nassert solution('2\\n1\\n1\\n2\\n1 0\\n1 0\\n') == '2'\nassert solution('2\\n1\\n1\\n1\\n1 0\\n1 0\\n2 1\\n1 0\\n') == '2'\nassert solution('2\\n1\\n1\\n1\\n1 0\\n1 0\\n2 1\\n1 0\\n2 1\\n1 0\\n') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('2\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n4\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"3\""
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"lhhaibhsbxr\"\nassert solution(\"5\") == \"nsx\"\nassert solution(\"6\") == \"nsx\"\nassert solution(\"7\") == \"nsx\"\nassert solution(\"4\") == \"nsx\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('abcd') == 'abcd'\nassert solution('abcde') == 'abcde'\nassert solution('abcd') == 'abcd'\nassert solution('abcde') == 'abcd'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\nnikoandsolstice\\n') == 'nikoand...'\nassert solution('2\\nabacaba\\n') == 'abacabaabacaba'\nassert solution('15\\nabacaba\\n') == 'abacabaabacaba'\nassert solution('1\\nabc\\n') == 'abc'\nassert solution('3\\nabc\\n') == 'abcabc'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\nnikoandsolstice') == \"nikoand...\\nnikoand...\\nnikoand...\\nnikoand...\\nnikoand...\\nnikoand...\\nnikoand...\"\nassert solution('7\\n') == \"nikoand...\\nnikoand...\\nnikoand...\\nnikoand...\\nnikoand...\"\nassert solution('6\\nnikoandsolstice') == \"nikoandsolstice\"\nassert solution('11\\nnikoandsolstice') == \"nikoandsolstice\"\nassert solution('11\\n') == \"nikoandsolstice\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('2\\nnikoandsolstice') == 'nikoand'\n\"\"\""
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\nkkkkkkkkkkkk') == 'kkkkkkkkkkkkkkk'\nassert solution('6\\njjjjjjjjjjjjjjjjjjjjjjjjj') == 'jjjjjjjjjjjjjjjjjjjjjjjjj'\nassert solution('8\\nvvvvvvvvvvvvvvvvvvvvvvvvvv') == 'vvvvvvvvvvvvvvvvvvvvvvvvvv'\nassert solution('9\\nhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh') == 'hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh'\nassert solution('6\\nxxxxxx') == 'xxxxxx'\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\nhydcbwcfog'\n    'abcd'\n    '\\n'\n    '5\\n'\n    'hjgfcd'\n    'gdsghj'\n    '\\n'\n    '7'\n    'abc'\n    '\\n'\n    '3'\n    ) == 'abc'\nprint(solution('5\\nhydcbwcfog'\n    'abcd'\n    '\\n'\n    '5\\n'\n    'hjgfcd'\n    'gdsghj'\n    '\\n'\n    '7'\n    'abc'\n    '\\n'\n    '3'\n    ))"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\nnikoandsolstice''') == 'nikoand...'\n\nassert solution('''7\nabcdefghijklmnopqrstuvwxyz''') == 'abcdefghijklmnopqrstuvwxyz'\n\nassert solution('''2\nab''') == 'ab'\n\nassert solution('''4\nabcd''') == 'abcd'\n\nassert solution('''0\nabc''') == 'abc'"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\nnikoandsolstice\\n') == 'nikoand...'\nassert solution('7\\nnikoandsolstice\\n') == 'nikoand...'\n\"\"\"\nfrom __future__ import annotations\n\nK: int = int(input())\nS: str = input()\nprint(S[:K] +...)\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apple') == 'apples'\nassert solution('potato') == 'potatoes'\nassert solution('tack') == 'tacks'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:-1] + 'es'\nprint(solution(stdin))\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"apple\") == \"apples\"\n\"\"\"\n\n\"\"\"\nDefinition of the solution:\n\n\"\"\""
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('apple') == 'apples'\nassert solution('a') == 'a'\nassert solution('app') == 'app'\nassert solution('camel') == 'camel'\nassert solution('ab') == 'ab'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples'\nassert solution('pizza') == 'pizzas'\nassert solution('cabbage') == 'cabbages'\nassert solution('water') == 'waters'\nassert solution('bicycle') == 'bicycles'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('bed') == 'beds'\nassert solution('dog') == 'dogs'\nassert solution('robot') == 'robots'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"apples\") == \"appleses\"\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'\nassert solution('hopp') == 'hoppes'\nassert solution('Eagle') == 'Eagles'\nassert solution('infinity') == 'infinities'\nassert solution('bell') == 'bells'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('cabbage') == 'cabbages'\nassert solution('carp') == 'cars'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'\nassert solution('''3 2\n2\n1 3\n1\n3\n''') == '1'\nassert solution('''6 3\n3\n1 3\n2 5\n3 6\n1 4\n2\n3\n''') == '3'\nassert solution('''2 3\n3\n1 2\n1\n2\n''') == '0'\nassert solution('''1 2\n1\n1\n''') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'\nassert solution('5 2\\n2\\n2 4 1 3\\n1\\n2 3 1\\n3\\n2\\n3 4 1 4\\n1\\n3') == '2'\nassert solution('5 2\\n2\\n2 4 1 3\\n1\\n2 3 1\\n3\\n2\\n3 4 1 4\\n1\\n3') == '3'\nassert solution('5 2\\n2\\n2 4 1 3\\n1\\n2 3 1\\n3\\n2\\n3 4 1 4\\n1\\n3') == '4'\nassert solution('5 2\\n2\\n2 4 1 3\\n1\\n2 3 1\\n3\\n2\\n3 4 1 4\\n1\\n3') == '5'\n\"\"\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 1') == '0'\nassert solution('2 1 1') == '1'\nassert solution('2 3') == '1'\nassert solution('2 3 2') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n1\") == \"1\\n\"\nassert solution(\"10 4\\n1 3\\n2 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\") == \"0\\n\"\nassert solution(\"7 8\\n3 3\\n1 4\\n2 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\") == \"2\\n\"\nassert solution(\"30 10\\n5 5\\n1 1\\n3 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('4 2') == '1'\nassert solution('100 5') == '100'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('1 3') == '0'\nassert solution('3 2') == '1'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '2'\nassert solution('3 1') == '1'\nassert solution('3 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('3\\n3') == '0'\nassert solution('2\\n2\\n1') == '1'\nassert solution('3\\n2') == '0'\nassert solution('3\\n3') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabbbbaaca') == '5'\n\nassert solution('aaabbbbaaaa') == '6'\n\nassert solution('bbbbbbaaa') == '2'\n\nassert solution('a') == '1'\n\nassert solution('aaaaa') == '0'"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('baabab') == '0'\nassert solution('aababbbbaa') == '6'\nassert solution('aaababaaba') == '2'\nassert solution('baababbbba') == '3'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"aabbbbaaca\") == \"5\"\nassert solution(\"ababa\") == \"2\"\nassert solution(\"ababac\") == \"2\"\nassert solution(\"abacaba\") == \"1\"\nassert solution(\"abacaba\") == \"1\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    10\n    aabbbbaaca\n''') == '5'\nassert solution('''\n    5\n    aabbbbaa\n''') == '1'\nassert solution('''\n    10\n    bbbbbbaaaaa\n''') == '3'\nassert solution('''\n    10\n    bababa\n''') == '0'\nassert solution('''\n    10\n    aabaaa\n''') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"abca\"\nassert solution(\"aabbbbaaca\") == \"abca\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabbbbaaca') == '5'\nprint(solution('aabbbbaaca'))\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aaaaaa') == 1\nassert solution('aabbbbaaca') == 5\nassert solution('aaabaaaaa') == 2\nassert solution('aabbbbbaaa') == 3\nassert solution('aaabaaaaaabbbaaa') == 4\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\naabbbbaaca''') == '5'\nassert solution('''10\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aabbbbaaca') == '5'\nassert solution('aabbbbaaaaa') == '10'\nassert solution('aabbbbaaaaa') == '10'\nassert solution('aabbbbaaaaaaa') == '15'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 2 4\\n') == '3'\nassert solution('3\\n2 1\\n') == '2'\nassert solution('2\\n2\\n') == '2'\nassert solution('4\\n3 1 2 3\\n') == '3'\nassert solution('5\\n5 2 4\\n') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n5 2 4\\n') == '3'\nassert solution('1\\n1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '3'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('2\\n7 2 7') == '1'\nassert solution('6\\n1 1 1 1 1 1 1') == '6'\nassert solution('6\\n1 2 2 2 2 2 2') == '5'\nassert solution('4\\n1 1 1 1 1') == '4'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''2\n1 1''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''10\n12345678987654321''') == '37'\nassert solution('''10\n12345678987654321''') == '37'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''4\n1 2 3 4\n''') == '3'\nassert solution('''5\n2 2 3 3 3\n''') == '3'\nassert solution('''6\n2 3 5 4 3 3\n''') == '3'\nassert solution('''7\n2 3 5 4 3 3 4\n''') == '4'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 2 4') == '3'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('5\\n2 4') == '3'\nassert solution('3\\n1 2 3') == '2'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''3\n5 2 4''') == '3'\nassert solution('''3\n3 2 3''') == '3'\nassert solution('''3\n6 2 1''') == '2'\nassert solution('''3\n1 1 1''') == '1'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"3\\n5 2 4\\n1 1 1\") == \"3\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"5\\n5 3 5 4 2\") == \"3\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('1 1 1 1') == '0'\nassert solution('2 2 2 2') == '0'\nassert solution('1 0 1 1') == '0'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 1 2 2\") == \"5\"\nassert solution(\"1 2 1 3\") == \"5\"\nassert solution(\"1 1 1 3\") == \"2\"\nassert solution(\"1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"0 1 1 3\") == \"2\"\nassert solution(\"2 1 0 3\") == \"2\"\nassert solution(\"0 1 0 3\") == \"2\"\nassert solution(\"2 1 -1 3\") == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 3') == '2'\nassert solution('0 1 0 3') == '2'\nassert solution('2 3 2 1') == '5'\nassert solution('1 2 1 1') == '3'\nassert solution('1 1 1 1') == '4'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 3''') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1 1 3''') == '2'\nassert solution('''2 1 1 5''') == '6'\nassert solution('''2 1 1 7''') == '6'\nassert solution('''2 1 1 9''') == '12'\nassert solution('''2 1 1 11''') == '12'\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n'''\n\nfrom sys import stdin"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 1 3''') == \"2\"\nassert solution('''2 1 2 3''') == \"2\"\nassert solution('''2 1 2 2''') == \"2\"\nassert solution('''1 1 1 2''') == \"2\"\nassert solution('''2 1 -1 1''') == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3\") == 2\nassert solution(\"1 1 1 1\") == 8\nassert solution(\"1 1 1 1\") == 8\nassert solution(\"2 1 1 2\") == 5\nassert solution(\"2 1 1 1\") == 8\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"2 1 1 2\") == \"1\"\nassert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 4\") == \"2\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('1 4') == 'No'\nassert solution('4 1') == 'No'\nassert solution('1 1') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 10') == 'No'\nassert solution('0 0') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('3 1') == 'No'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 1') == 'No'\nassert solution('1 1') == 'No'\nassert solution('1 1') == 'No'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('4 5') == 'No'\nassert solution('1 1') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('0 0') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 0') == 'No'\nassert solution('3 1') == 'No'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 5\") == \"No\"\nassert solution(\"2 4\") == \"Yes\"\nassert solution(\"7 5\") == \"Yes\"\nassert solution(\"1 0\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"2 3\") == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 8') == \"Yes\"\nassert solution('1 1') == \"Yes\"\nassert solution('2 1') == \"No\"\nassert solution('2 2') == \"Yes\"\nassert solution('3 3') == \"Yes\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"7 3\") == \"No\"\nassert solution(\"100 10\") == \"Yes\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3 3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution(\n'''\n4 4\n1 2\n1 3\n2 4\n1 4\n''') == '2'\nassert solution(\n'''\n5 5\n1 2\n1 3\n2 4\n1 4\n2 5\n3 4\n4 5\n''') == '3'\nassert solution(\n'''\n6 6\n1 2\n1 3\n2 4\n1 4\n2 5\n1 5\n2 6\n''') == '2'\nassert solution(\n'''\n7 7\n1 2\n1 3\n2 4\n1 4\n2 5\n1 5\n2 6\n1 6\n2 7\n3 4\n4 5\n5 6\n6 7\n''') == '3'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n----- Explanation -----\nFor the first query, the graph is given as follows.\nFigure 1: the graph in Figure 1\nThe two paths shown in Figure 2 satisfy the condition.\nFigure 2: the graph in Figure 2\nThe two paths shown in Figure 3 do not satisfy the condition.\nFigure 3: the graph in Figure 3\nThe two paths shown in Figure 4 do not satisfy the condition.\nFigure 4: the graph in Figure 4\nNo paths satisfy the condition.\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"1 1\\n2 1\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"1\"\nassert solution(\"3 2\\n1 2\\n1 3\") == \"2\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"2\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''5 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n3 5\n4 5\n''') == '6'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''4 4\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n''') == '8'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == '2'\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == '3'\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\") == '6'\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n1 5\") == '2'\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n5 4\") == '1'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 2\\n1 2\\n2 3\\n3 4\\n\") == \"1\"\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 5\\n\") == \"1\"\nassert solution(\"6 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n1 6\\n\") == \"0\"\nassert solution(\"7 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n1 7\\n\") == \"1\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\nassert solution('3 3\\n1 2\\n2 3') == '1'\nassert solution('1 2\\n2 3') == '1'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 4\\n1 2\\n1 3\\n2 3\\n3 4\") == \"1\"\nassert solution(\"1 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"2 1\\n1 2\") == \"0\"\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '2'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"18\""
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"4 -3\") == \"2\"\nassert solution(\"-5 -4\") == \"1\"\nassert solution(\"1 -5 -1 -5\") == \"0\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '6'\nassert solution('3 1') == '3'\nassert solution('3 3') == '10'\nassert solution('2 10') == '10'\nassert solution('5 1') == '10'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == input()\n'''\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"18\"\n\"\"\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '18'"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2') == '18'\nassert solution('4 0') == '4'\nassert solution('3 5') == '-15'\nassert solution('1 10') == '10'\nassert solution('7 3') == '9'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    stdin) == '18'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('abcd') == None\nassert solution('1') == None\nassert solution('1 2 3 4') == None\nassert solution('2') == None\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n') == '60'\nassert solution('15\\n') == '60'\nassert solution('1\\n') == '1'\nassert solution('3\\n') == 'Fizz'\nassert solution('2\\n') == '2'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"2\"\nassert solution(\"2\\n1\") == \"4\"\nassert solution(\"1\\n2\") == \"Fizz\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"15\") == \"60\"\nassert solution(\"6\") == \"Fizz\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('15') == '60'\nassert solution('100') == '5050'\nassert solution('10000') == '500500500'\nprint('Passed')\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"15\") == \"60\"\nassert solution(\"1\\n1\") == \"2\"\nassert solution(\"1\\n2\") == \"3\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('15') == 60\n\"\"\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''15''') == '60'\nassert solution('''35''') == '120'\nassert solution('''10''') == '45'\nassert solution('''100''') == '75025'\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"10\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5''') == '8'\nassert solution('''4 7 10 6 5''') == '8'\nassert solution('''10 10''') == '0'\nassert solution('''1 2''') == '1'\nassert solution('''3 5''') == '1'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_to_string(\"6 5\")) == \"8\"\nassert solution(input_to_string(\"7 5\")) == \"8\"\nassert solution(input_to_string(\"9 5\")) == \"7\"\nassert solution(input_to_string(\"8 5\")) == \"8\"\nassert solution(input_to_string(\"8 4\")) == \"8\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''2 1\n1 2 3 4 5 6 7 8 9 10''') == '8'\nassert solution('''2 1\n-2 -1''') == '1'\nassert solution('''2 2\n1 2''') == '1'\nassert solution('''7 9\n1 2 3 4 5 6 7 8 9''') == '7'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\n\n'''\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''6 5\n5 5 5 5 5''') == '5'\nassert solution('''6 5\n1 3 5 5 5''') == '5'\nassert solution('''6 5\n1 1 1 1 1''') == '1'\nassert solution('''6 5\n2 4 2 4 2''') == '4'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 5\") == \"8\"\nassert solution(\"6 4\") == \"8\"\nassert solution(\"100 5\") == \"8\"\nassert solution(\"6 9\") == \"8\"\nassert solution(\"100 9\") == \"8\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 7 10 6 5') == '8'\nassert solution('6 5') == '8'\nassert solution('7 5') == '8'\nassert solution('7 4') == '8'\nassert solution('1 5') == '5'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\""
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '1'\nassert solution('2 1') == '1'\nassert solution('3 2') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"1 3\") == \"2\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 1') == '1'\nassert solution('2 1\\n2 1') == '1'\nassert solution('3 1\\n2 1') == '1'\nassert solution('3 2\\n2 1') == '1'\nassert solution('3 2\\n2 2') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 3') == '2'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 1') == '1'\nassert solution('3 3') == '0'\nassert solution('10 10') == '9'\nassert solution('100 10') == '99'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2 3') == '1'\nassert solution('1 3') == '1'\nassert solution('2 3') == '0'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n2 1''') == '1'\nassert solution('''1 1\n1 1''') == '0'\nassert solution('''20 21\n20 21''') == '18'\nassert solution('''2 21\n2 21''') == '0'\nassert solution('''2 21\n2 21''') == '0'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10\\n0 1 2 3 4 5 6 7 8 9') == '6'\nassert solution('1 10\\n0 1 2 3 4 5 6 7 8 9') == '-1'\nassert solution('1 10\\n3 7 5 1 10 3 20') == '6'\nassert solution('1 10\\n3 7 5 1 10 3 20') == '-1'\nassert solution('1 10\\n1 2 3 4 5 6 7 8 9') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(6)\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\n'''"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 4') == '4'\nassert solution('7 2\\n3 7 5 1 10 3 3') == '3'\nassert solution('7 2\\n3 7 5 1 10 3 2') == '2'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"6\"\nassert solution(\"7 2\") == \"-1\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\nassert solution('''2 2\n2 2 2 2 2 2 2''') == '2'\nassert solution('''1 1\n0''') == '-1'\nassert solution('''7 2\n2 2 2 2 2 2 2''') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1'\nassert solution('7 3\\n3 7 5 1 10 3 20\\n') == '-1'\nassert solution('7 4\\n3 7 5 1 10 3 19\\n') == '-1'\nassert solution('7 2\\n3 7 5 1 10 3 19\\n') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6'\n\n'''\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n*.*\\n.*.\\n.*.\") == \"2 2 1\"\nassert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\"\nassert solution(\"5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\") == \"-1\"\nassert solution(\"5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\") == \"3\"\nassert solution(\"4 4\\n*...\\n**..\\n.*.*\\n***.\") == \"3\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '3'\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '-1'"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == \"3\"\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == \"3\"\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == \"-1\"\nassert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == \"3\"\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == \"-1\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3\\n3 4 1\\n3 5 2'\n\n\n-----\n\n\"\"\""
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '3'\nassert solution('3 3\\n.*..\\n.*.\\n.*.') == '3'\nassert solution('5 5\\n.*...\\n.*..\\n.*..\\n.*..\\n.*...') == '3'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n.*...\\n.*...\\n.*...\\n.*...\\n.....') == '3\\n3 2 1\\n'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3\\n3 3 1\\n'\nassert solution('3 3\\n.*...\\n.*...\\n.*...\\n.*...\\n.....') == '-1\\n'\nassert solution('3 3\\n.*...\\n.*...\\n.*...\\n.*...\\n.....') == '-1\\n'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '3\\n3 3 1\\n'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3'\nassert solution('3 4\\n.*...\\n.*..\\n.*..\\n.*..\\n.*..\\n.*..') == '3'\nassert solution('5 5\\n.*...\\n.*..\\n.*..\\n.*..\\n.*..\\n.*..') == '3'\nassert solution('3 3\\n.*...\\n.*..\\n.*..\\n.*..\\n.*..\\n.*..') == '-1'\nassert solution('5 5\\n.*...\\n.*..\\n.*..\\n.*..\\n.*..\\n.*..') == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\n-----Solution-----\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 4\n*.*\n.*.\n*.*\n\"\"\"\n) == \"2 2 1\"\n\nassert solution(\n\"\"\"\n3 4\n.*.\n.*.\n.*.\n\"\"\"\n) == \"-1\"\n\nassert solution(\n\"\"\"\n5 5\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n\"\"\"\n) == \"3 3 1\"\n\nassert solution(\n\"\"\"\n6 7\n..*.\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n\"\"\"\n) == \"3 3 1\"\n\nassert solution(\n\"\"\"\n7 8\n....*...\n....*...\n....*...\n....*...\n....*...\n.*****.\n.*.*.*.*\n.*.*.*.*\n\"\"\"\n) == \"3 3 1\""
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('good') == 0\nassert solution('aabc') == 2\nassert solution('aaa') == 0\nassert solution('aaaa') == 0\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\ngood\n''') == '0'\nassert solution('''\n3\naaa\n''') == '0'\nassert solution('''\n3\naaab\n''') == '2'\nassert solution('''\n4\nabcd\n''') == '1'\nassert solution('''\n7\nabcdefgh\n''') == '4'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('good') == 'good'\nassert solution('aa') == ''\nassert solution('aabc') == 'ab'\nassert solution('ab') == 'ab'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabc') == \"ab\"\nassert solution('abc') == \"\"\nassert solution('abcc') == \"\"\nassert solution('abcab') == \"\"\nassert solution('abcabab') == \"\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"good\") == \"\"\nassert solution(\"aaaaaa\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"ab\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('good') == ''\nassert solution('aa') == ''\nassert solution('aaa') == ''\nassert solution('aaabbb') == 'ab'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''good''') == '0'\nassert solution('''good''') == ''\nassert solution('''good''') == ''\nassert solution('''aaa''') == ''\nassert solution('''aabc''') == '2'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('good') == 'good'\nassert solution('aabc') == 'ab'\nassert solution('aaa') == 'def'\nassert solution('aaaaa') == ''\nassert solution('aaaaaa') == 'aaaaaa'\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 5\") == \"YES\\n10100\"\n\n'''\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'YES', 'NO'\nassert solution(\n'''6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n2 2''') == 'YES', '010000'\nassert solution(\n'''6 5\n1 5\n2 1\n1 4\n3 1\n5 1\n2 2''') == 'YES', '010000'\nassert solution(\n'''6 5\n1 5\n2 1\n1 4\n3 1\n5 1\n2 2\n2 3''') == 'YES', '10100'\nassert solution(\n'''6 5\n1 5\n2 1\n1 4\n3 1\n5 1\n2 2\n2 3\n2 4''') == 'YES', '10100'\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 2 3 4 5 6') == 'NO'\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(read_input('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''')) == 'YES'\nassert solution(read_input('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''')) == 'NO'\nassert solution(read_input('''6 5\n1 4\n2 1\n1 3\n2 3\n4 3\n6 1''')) == 'NO'\nassert solution(read_input('''6 5\n2 1\n1 4\n3 1\n6 1''')) == 'NO'\nassert solution(read_input('''6 5\n2 3\n4 5\n5 3\n6 2\n6 3\n3 1''')) == 'NO'\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES\\n10100'\n\n\"\"\"\nfrom typing import List, Tuple"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 5') == 'YES\\n10100'\n\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\n10100\"\n\n\"\"\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 5') == 'YES\\n10100'\n\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == 'YES'\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\nassert solution(input()) == '10100'\n\n'''\n\nfrom collections import defaultdict"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5''') == '2'\nassert solution('''2 2''') == '0'\nassert solution('''1 2''') == '3 4'\nassert solution('''5 5''') == '0'\nassert solution('''1 2\n1 2\n2 3\n3 3\n3 4''') == ''\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4'\nassert solution('''1 7\n1 7''') == '0'\nassert solution('''1 7\n1 7\n1 7\n1 7\n1 7''') == ''\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('1 2\\n1 2\\n') == '0\\n'\nassert solution('1 2\\n5 5\\n') == '0\\n'\nassert solution('1 2\\n1 3\\n') == '3\\n'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4') == '2\\n4'\nassert solution('1 7\\n1 7') == '0'\nassert solution('2 2\\n1 2\\n5 5') == '0'\nassert solution('2 2\\n1 1\\n1 1') == '0'\nassert solution('1 7\\n1 7\\n1 7') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3\\n2 5\\n3 4') == '0'\nassert solution('1 7\\n1 7\\n3 4') == '0'\nassert solution('3 4\\n2 2\\n1 2\\n3 4') == '2'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4'\nassert solution('''1 7\n1 7''') == '0'\nassert solution('''1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1 7\n1"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('1 3\\n1 3\\n') == '0\\n'\nassert solution('2 3\\n1 2\\n2 3\\n') == '0\\n'\nassert solution('1 2\\n1 2\\n') == '0\\n'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(2)\n\n\"\"\""
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == '2'\nassert solution(\"1 2 2 2\") == '4'\nassert solution(\"1 2 3 4 5\") == '1'\nassert solution(\"1 1 1 1\") == '10'\nassert solution(\"2 2 1 1\") == '5'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 9 2 3''') == '2'\nassert solution('''4 9 2 4''') == '4'\nassert solution('''1 1 1 1''') == '1'\nassert solution('''9 9 9 9''') == '9'\nassert solution('''1 1 1 1''') == '1'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('3 6 3 3') == '1'\nassert solution('1 1 1 1') == '4'\nassert solution('10 9 2 3') == '4'\nassert solution('3 6 3 3') == '1'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[2:-3]\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"2 2 2 2\") == \"8\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('100') == 'No'\nassert solution('19') == 'Yes'\nassert solution('99') == 'No'\nassert solution('999') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('123456789') == \"Yes\"\nassert solution('7123456789') == \"No\"\nassert solution('999') == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(1234569) == \"No\"\nassert solution(1234578) == \"No\"\nassert solution(1234579) == \"No\"\nassert solution(12345800) == \"No\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('12345678') == 'No'\nassert solution('1234569') == 'Yes'\nassert solution('123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890') == 'No'\nassert solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1000000\") == \"No\"\nassert solution(\"0\") == \"Yes\"\nassert solution(\"999999999\") == \"Yes\"\nassert solution(\"9999999999\") == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('934') == 'Yes'\nassert solution('9') == 'Yes'\nassert solution('123456789') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('0') == 'No'\nassert solution('123456789') == 'Yes'\nassert solution('0000000000') == 'No'\nassert solution('11111') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(1832) == 'Yes'\nassert solution(12) == 'No'\nassert solution(100) == 'No'\nassert solution(1234) == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(9) == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''123456789''') == 'Yes'\nassert solution('''12''') == 'No'\nassert solution('''0''') == 'Yes'\nassert solution('''123456789''') == 'Yes'\nassert solution('''1234567890''') == 'No'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"123456789012345678901234567890\") == \"10\"\nassert solution(\"\") == \"\"\nassert solution(\"-1\") == \"\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('127') == '4'\nassert solution('100000') == '19'\nassert solution('5') == '1'\nassert solution('54') == '5'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100000') == '8'\nassert solution('1000000000') == '4'\nassert solution('12') == '3'\nassert solution('1234') == '3'\nassert solution('12345') == '4'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('129') == '4'\nassert solution('128') == '4'\nassert solution('127') == '4'\nassert solution('96') == '4'\nassert solution('82') == '4'\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(123456) == 4\nassert solution(1234) == 3\nassert solution(123) == 2\nassert solution(12) == 1\nassert solution(111) == 2\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''127''') == '4'\n\nassert solution('127') == '4'\n\nassert solution('''') == '4'\n\nassert solution('10') == '4'\n\nassert solution('123456789') == '1234'"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\")\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"3\"\nassert solution(\"64\") == \"6\"\nassert solution(\"1000\") == \"61\"\nassert solution(\"12000\") == \"100\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('koto') == 'No'\nassert solution('tokyo') == 'No'\nprint(\"Test cases passed!\")"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"ABCD\") == \"No\"\nassert solution(\"abcd\") == \"No\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('koto') == 'No'\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\nprint('Testcases passed')\n\"\"\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('o') == 'No'\nassert solution('o') == 'No'\n\n'''"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('o') == 'Yes'\nassert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo1') == 'No'\nassert solution('tokyo2') == 'No'\nassert solution('kyoto1') == 'No'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'Yes'\n\nprint('All test cases passed successfully.')\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('okay') == 'Yes'\nassert solution('okayy') == 'No'\nassert solution('okayyy') == 'Yes'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\n\n\"\"\"\n\n\"\"\"\nS = S_1 S_2... S_{|S|}\nS_1 = S_2 S_3... S_|S|-1\n\nSo, S_1 = S_2 S_3... S_|S|-1\n\n\"\"\""
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 1\nassert solution('abcabc') == 0\nassert solution('a') == 0\nassert solution('aa') == 1\nassert solution('ba') == 1\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abracadabra\") == \"5\"\nassert solution(\"acbac\") == \"2\"\nassert solution(\"abac\") == \"2\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('cabacc', 'abc') == 1\nassert solution('ccc', 'cbc') == 0\nassert solution('a', 'b') == 2\nassert solution('abc', 'abcd') == 2\nassert solution('abac', 'bcad') == 3\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('aaaaa') == '0'\nassert solution('xyx') == '0'\nassert solution('abcc') == '2'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('abcabcabcabc') == '5'\nassert solution('abcc') == '3'\nassert solution('abcabcc') == '1'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abc', 'acb') == 1\nassert solution('cabacc', 'abc') == 0\nassert solution('abac', 'abc') == 2\nassert solution('abc', 'abcd') == 1\nassert solution('abc', 'cab') == 1\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('abcabc') == '2'\nassert solution('abcabcabc') == '4'\nassert solution('abcabcabcabc') == '6'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abca\") == \"1\"\nassert solution(\"abcab\") == \"2\"\nassert solution(\"abcabc\") == \"0\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 12 2') == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"8 4 12\") == \"2\"\nassert solution(\"8 12 2\") == \"2\"\nassert solution(\"8 4 12\") == \"2\"\nassert solution(\"8 12 2\") == \"2\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2') == '2'\nassert solution('2 3 3') == '2'\nassert solution('3 5 3') == '2'\nassert solution('2 3 4') == '2'\nassert solution('3 2 3') == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 3 1\") == \"1\"\nassert solution(\"1 4 1\") == \"1\"\nassert solution(\"2 3 2\") == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 2 1\") == \"2\"\nassert solution(\"2 1 2\") == \"2\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('1 1 2') == '1'\nassert solution('1 1 3') == '1'\nassert solution('2 3 4') == '1'\nassert solution('1 1 2') == '1'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 9 2') == '4'\nassert solution('8 9 3') == '8'\nassert solution('8 10 3') == '8'\nassert solution('8 11 3') == '8'\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 12 2') == '2'\nassert solution('8 12 2') == '2'\nassert solution('9 19 3') == '3'\nassert solution('5 10 5') == '5'\nassert solution('15 20 15') == '15'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1024') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"9\") == \"20\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"30\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == \"2020\"\n'''\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"12345\") == \"1212\"\nassert solution(\"1000000000\") == \"123456789012\"\nassert solution(\"1025\") == \"1212\"\nassert solution(\"1000000\") == \"12123\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1024''') == '2020'\nassert solution('''1''') == '1000'\nassert solution('''15''') == '2000'\nassert solution('''29''') == '5000'\nassert solution('''36''') == '10000'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('1024') == '2020'\nassert solution('4666') == '4666'\nassert solution('10999') == '10999'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1024\") == \"2020\"\n'''\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1024''') == '2020'\nassert solution('''499''') == '2020'\nassert solution('''499''') == '2020'\nassert solution('''499''') == '2020'\nassert solution('''499''') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1024') == '2020'\nassert solution('5') == '4'\nassert solution('12345') == '9'\nassert solution('100000') == '109'\nassert solution('1000') == '10'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 0 1') == '1'\nassert solution('2') == '1'\nassert solution('2 0') == '1'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('2\\n1 4\\n4 3') == '2'\nassert solution('2\\n1 4\\n5 1') == '8'\nassert solution('2\\n1 4\\n5 10') == '1'\nassert solution('2\\n1 4\\n5 10\\n10 20') == '1'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"2\\n1 4\") == \"5\"\n\nTest case:\n2\n1 2\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 4\") == \"5\"\nassert solution(\"2\") == \"5\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 4 5\") == \"3\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\"\nassert solution(\"3\\n1 4 2\\n\") == \"8\"\nassert solution(\"3\\n1 2 3\\n\") == \"6\"\nassert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 4') == '5'\nassert solution('1 5') == '6'\nassert solution('1 6') == '7'\nassert solution('1 7') == '8'\nassert solution('1 8') == '9'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 4''') == '5'\nassert solution('''3\n1 4 4 5''') == '8'\nassert solution('''4\n1 2 3 4''') == '14'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == '32'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == '32'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\n\"\"\"\nYour friend will come to you with a list of numbers and will pass you a number. He will return the\nsmallest number in the list that is bigger than the number you passed in.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5], then he will return 5.\n\nYou will receive an array of numbers N, the number of items in the list.\n\nYour friend will also pass you a number X.\n\nYour task is to find the smallest number that is bigger than X.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 5,\nthen your friend will pass you 6.\n\nYour task is to find the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\nYour friend will return the smallest number that is bigger than X in the list.\n\nFor example, if the list of numbers is [1, 2, 3, 4, 5] and the number you passed in is 4,\nthen your friend will pass you 5.\n\"\"\""
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2\n1 4\"\"\") == \"5\"\nassert solution(\"\"\"2\n1 4\"\"\") == \"5\"\nassert solution(\"\"\"3\n2 3 4\"\"\") == \"6\"\nassert solution(\"\"\"3\n2 3 4\"\"\") == \"6\"\nassert solution(\"\"\"4\n1 2 3 4\"\"\") == \"6\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"5 10\") == \"4\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"4 1\") == \"3\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"20 20\") == \"1\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 2 2\") == \"2\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 10''') == 3\nassert solution('''6 10''') == 3\nassert solution('''8 10''') == 3\nassert solution('''6 5''') == 2\nassert solution('''10 11''') == 2\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 10') == '3'\nassert solution('4 4') == '0'\nassert solution('4 8') == '2'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 10') == 3\nassert solution('4 10') == 3\nassert solution('2 10') == 3\nassert solution('20 15') == 2\nassert solution('20 15') == 2\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 10\") == 3\nassert solution(\"2 1\") == 1\nassert solution(\"15 10\") == 3\nassert solution(\"1 1\") == 0\nassert solution(\"2 3\") == 0\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSR') == '2'\nassert solution('CSRS') == '2'\nassert solution('CSRSS') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSSC') == '1'\nassert solution('CSR') == '2'\nassert solution('CSRS') == '0'\n\"\"\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('CSR') == '1'\nassert solution('CSS') == '2'\nassert solution('CSC') == '2'\nassert solution('CSRR') == '2'\nassert solution('CSS') == '2'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"CS\", \"CS\") == \"3\"\nassert solution(\"CS\", \"CSR\") == \"2\"\nassert solution(\"CS\", \"CSRRS\") == \"2\"\nassert solution(\"CS\", \"CSRRSRS\") == \"1\"\nassert solution(\"CSR\", \"CS\") == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('RSS') == '0'\nassert solution('RRS') == '1'\nassert solution('CSRS') == '3'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSSS\") == \"2\"\nassert solution(\"CSSAC\") == \"0\"\nassert solution(\"CCSR\") == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('CSS') == \"2\"\nassert solution('CSR') == \"2\"\nassert solution('CSSS') == \"0\"\nassert solution('CSRSS') == \"0\"\nassert solution('CSSR') == \"1\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('CSS') == 2\nassert solution('CSR') == 2\nassert solution('SCC') == 1\nassert solution('SCS') == 2\nassert solution('SCS') == 2\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('CS') == '2'\nassert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSC') == '0'\nassert solution('CSR') == '1'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[0] + stdin[2] + stdin[3]\nassert solution(\"CSS\") == \"CCS\"\nassert solution(\"CSR\") == \"CSR\"\n\nassert solution(\"SCC\") == \"SCC\"\nassert solution(\"SCC\") == \"SCC\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4') == '2'\nassert solution('5 4 3 2 1') == '2'\nassert solution('2 3 1') == '2'\nassert solution('3 1 2') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 5 4 2') == 2\nassert solution('2 3 4 1') == 2\nassert solution('2 3 1 4') == 2\nassert solution('2 3 4 5') == 3\nassert solution('2 3 1 4 5') == 3\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 5 4 2') == 2\nassert solution('1 3 2 4 5') == 1\nassert solution('1 2 2 2 2') == 0\nassert solution('5 2 1 3 4') == 2\nassert solution('3 2 1 4 4') == 1\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"1 3 5 4 2\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '1\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '1\\n'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 3') == '1'\nassert solution('1 1 1') == '0'\nassert solution('1') == '0'\nassert solution('1 2 2') == '0'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('4 3 2 1') == '2'\nassert solution('1 2 3 4 5') == '2'\nassert solution('3 2 1 4 5') == '2'\nassert solution('2 1 3 4 5') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('2 3 4 1') == '2'\nassert solution('1 3 3 1') == '3'\nassert solution('2 2 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\") == 2\nassert solution(\"1 3 5 4 2\") == 2\nassert solution(\"1 2 4 3 5\") == 2\nassert solution(\"1 4 3 2 5\") == 1\nassert solution(\"1 3 4 2 5\") == 1\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == '5.410'\nassert solution('2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('5.62 2.06\\n5.78 1.12\\n6.48 0.24\\n6.70 -0.60\\n7.12 0.30\\n7.84 1.24\\n8.34 0.24\\n8.74 -0.76') == '6.040'\nassert solution('10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n') == '6.040'\nassert solution('16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n\\n\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-1.14 2.04\") == 5.620\nassert solution(\"-2.16 1.46\") == 5.480\nassert solution(\"-2.14 0.70\") == 6.040\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2.15 2.06') == '5.410'\nassert solution('1.14 2.04') == '5.620'\nassert solution('2.16 1.46') == '5.480'\nassert solution('2.14 0.70') == '6.040'\nassert solution('-1.42 0.40') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n2.16 -1.62\\n1.11 -1.05\\n3.10 -0.23') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n2.64 -0.62') == '6.040'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n2.11 -0.18') == '6.720'\n\n\n\"\"\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\") == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1.0\"\nassert solution(\"4\") == \"1.5\"\nassert solution(\"5\") == \"2.0\"\nassert solution(\"6\") == \"2.5\"\nassert solution(\"7\") == \"3.0\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\\n\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\\n\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 8\"\"\") == \"4\"\nassert solution(\"\"\"7 10\"\"\") == \"2\"\nassert solution(\"\"\"5 15\"\"\") == \"-1\"\nassert solution(\"\"\"5 26\"\"\") == \"-1\"\nassert solution(\"\"\"5 26\"\"\") == \"-1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '2'\nassert solution('4\\n4\\n') == '2'\nassert solution('5\\n5\\n') == '1'\nassert solution('6\\n6\\n') == '3'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 9\\n1 3 4 2 1 4 2') == '4'\nassert solution('5 10\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5') == '-1'\nassert solution('10 15\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5\\n5 5 5 5 5 5') == '2'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input/g_3_0') == '4'\nassert solution('input/g_3_1') == '-1'\nassert solution('input/g_3_2') == '2'\nassert solution('input/g_3_3') == '1'\nassert solution('input/g_3_4') == '2'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5 6 7') == '-1'\nassert solution('1 2 3 4 5 6 7 8') == '-1'\nassert solution('1 2 3 4 5 6 7 8 9') == '-1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 32\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n1\\n2') == '4'\nassert solution('2\\n1\\n2\\n3') == '2'\nassert solution('2\\n1\\n2\\n3\\n4') == '-1'\nassert solution('2\\n1\\n2\\n3\\n4\\n5') == '-1'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('7 16\\n5 5 5 5 5 5\\n') == '2'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 30\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3''') == '1 2 3'\nassert solution('''10 4''') == '7 3 1 3'\nassert solution('''15 2''') == '7 3 1 3'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n\n-----Testcases-----\n4 3\n1 2 3 2\n3\n1 2 1 1\n4\n1 2 1 1 1\n0\n2\n1 1\n1\n3\n1 2 1\n1 2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1') == '1 2 3'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3') == '7 3 1 3'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 1 1 1') == '1 1'\nassert solution('15 2\\n1 3 1 1 3 10 3 7 7 12 3') == '7 3 1 3'\nassert solution('15 2\\n1 3 1 1 3 10 3 7 7 12 3') == '7 3 1 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4\\n') == '1 3 2'\nassert solution('5 7\\n') == '7 3 1'\nassert solution('6 7\\n') == '1 3 5 7'\nassert solution('3 3\\n') == '1 1'\nassert solution('3 4\\n') == '1 2'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n4 5 6') == '1 2 3'\nassert solution('1 3 1 3 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 3''') == '1 2 3'\nassert solution('''10 4''') == '7 3 1 3'\nassert solution('''15 2''') == '1 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == ''\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\n9 9\\n10 8\\n5 3\\n4 3\\n'[1:-1].split('\\n')) == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n'[1:-1].split('\\n')) == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n'[1:-1].split('\\n')) == '3'\nassert solution('9 1\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n'[1:-1].split('\\n')) == '0'\nassert solution('10 1\\n1\\n10\\n1\\n10\\n1\\n10\\n1\\n10'[1:-1].split('\\n')) == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '5'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2''') == '0'\nassert solution('''6 1''') == '3'\nassert solution('''7 1''') == '0'\nassert solution('''7 2''') == '1'\nassert solution('''4 2''') == '5'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'\nassert solution('6 2\\n3 2 3 4\\n1 2 3 4\\n') == '0'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\nassert solution('''7 2\n1000 9999\n1000 9999\n1000 9999\n1000 9999\n1000 9999\n1000 9999''') == '0'\nassert solution('''6 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\n\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\n\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '0'\n'''\n\nassert solution('''8 1\n4\n2\n5\n1\n7\n3\n9\n6\n8\n''') == '0'\n'''"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"xxxiii\") == 1\nassert solution(\"xxoxx\") == 0\nassert solution(\"xxxxxxx\") == 8\nassert solution(\"xxxxxxxxxx\") == 0\nassert solution(\"xxxxii\") == 2\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('x') == 0\nassert solution('xxx') == 1\nassert solution('xxoxx') == 1\nassert solution('xxxiii') == 1\nassert solution('xxxxiiii') == 0\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('abcdefg') == '7'\nassert solution('abcdefg12345') == '6'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"xxxx\") == 0\nassert solution(\"xxoxx\") == 1\nassert solution(\"xxxxx\") == 2\nassert solution(\"xxxxxx\") == 3\nassert solution(\"xxxxxii\") == 4\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('x') == 0\nassert solution('xx') == 1\nassert solution('xxx') == 1\nassert solution('xxxx') == 1\nassert solution('xxxxx') == 2\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxxxxx') == '3'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(\"xxxxxxx\") == \"0\"\n\nassert solution(\"xxxxx\") == \"1\"\n\nassert solution(\"x\") == \"1\"\n\nassert solution(\"xx\") == \"1\""
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxxxxxii') == '7'\nassert solution('xx') == '1'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"xxxxxxii\") == 0\nassert solution(\"xxxxx\") == 1\nassert solution(\"xxxxi\") == 1\nassert solution(\"xxxxxx\") == 1\nassert solution(\"xxxxxxx\") == 3\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"xxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxxxx\") == \"0\"\nassert solution(\"xxxxxxxxxx\") == \"8\"\nassert solution(\"xxxxxxxxxxxxxx\") == \"2\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '48'\nassert solution('''3''') == '12'\nassert solution('''2''') == '6'\nassert solution('''1''') == '1'\nassert solution('''1000''') == '49'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4''') == '48'\nassert solution('''0''') == '0'\nassert solution('''10''') == '648'\nassert solution('''99''') == '6648'\nassert solution('''99999''') == '97648'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == 48\nassert solution('4') == 48\nassert solution('-5') == 0\nassert solution('-4') == 0\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(4) == 48\nassert solution(1) == 1\nassert solution(2) == 10\nassert solution(3) == 9\nassert solution(4) == 16\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6') == '27'\nassert solution('5') == '12'\nassert solution('4') == '3'\nassert solution('3') == '4'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == 48\nassert solution('5') == 72\nassert solution('10') == 1296\nassert solution('100') == 98400\nassert solution('1000') == 133052800\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == \"48\"\nassert solution('5') == \"85\"\nassert solution('10') == \"343\"\nassert solution('20') == \"904\"\nassert solution('30') == \"2924\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"safe\"\nassert solution(\"0 0\") == \"unsafe\"\nassert solution(\"1 0\") == \"safe\"\nassert solution(\"10 50\") == \"unsafe\"\nassert solution(\"10 0\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 4\") == \"unsafe\"\nassert solution(\"99 0\") == \"safe\"\n\"\"\""
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('4 3') == 'unsafe'\nassert solution('1 10') == 'unsafe'\nassert solution('0 0') =='safe'\nassert solution('2 2') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input('Enter your array: ')) == 'unsafe'\nassert solution(input('Enter your array: ')) =='safe'\n\nprint(solution(input('Enter your array: ')))\n\"\"\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"unsafe\"\nassert solution(\"5 4\") == \"unsafe\"\nassert solution(\"5 4\") == \"safe\"\nassert solution(\"4 5\") == \"safe\"\nassert solution(\"5 5\") == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"unsafe\"\nassert solution(\"4 5\") == \"safe\"\nassert solution(\"7 8\") == \"safe\"\nassert solution(\"10 8\") == \"safe\"\nassert solution(\"1 2\") == \"unsafe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('4 5') == 'unsafe'\nassert solution('10 1') =='safe'\nassert solution('10 1') =='safe'\nassert solution('1 1') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"3 5\") == \"safe\"\nassert solution(\"100 10\") == \"unsafe\"\n\"\"\""
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('4 1') =='safe'\nassert solution('99 1') == 'unsafe'\nassert solution('1 99') =='safe'\nassert solution('10 0') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('4 5') =='safe'\nassert solution('2 4') == 'unsafe'\nassert solution('2 4') =='safe'\nassert solution('5 4') == 'unsafe'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == 6\nassert solution(\"2 2 2\") == 2\nassert solution(\"3 4 3\") == 9\nassert solution(\"1 1 1\") == 1\nassert solution(\"4 5 9\") == 25\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''1 1 1''') == '1'\nassert solution('''1 1 1''') == '1'\nassert solution('''10 10 10''') == '36'\nassert solution('''6 7 8''') == '36'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('10 2 10') == '20'\nassert solution('1 2 1') == '2'\nassert solution('2 3 3') == '6'\nassert solution('3 4 5') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('3 4 5') == '6'\nassert solution('1 1 1') == '1'\nassert solution('1 1 100') == '100'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 4 5\"\n) == \"6\"\n\nassert solution(\n    \"3 4 5\"\n) == \"6\"\n\nassert solution(\n    \"4 3 5\"\n) == \"6\"\n\nassert solution(\n    \"7 2 3\"\n) == \"0\"\n\nassert solution(\n    \"7 2 3\"\n) == \"0\""
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"3 4 5\") == \"6\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"10 10 10\") == \"1000\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 6\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 10 10\") == \"4\"\nassert solution(\"2 11 4\") == \"4\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"2 10 3\") == \"3\"\nassert solution(\"3 1 4\") == \"6\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == output(4)\n\"\"\""
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 21 10') == '4'\nassert solution('1 3 3') == '0'\nassert solution('1 9 1') == '3'\nassert solution('1 5 5') == '3'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"1 100 1\") == \"1\"\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4 2') == '4'\nassert solution('2 11 4') == '4'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('3 3 3') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 11 4') == '4'\n\"\"\"\n\nA, B, C = map(int, stdin.split())"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 11 4''') == '4'\nassert solution('''2 11 4''') == '4'\nassert solution('''2 11 4''') == '4'\nassert solution('''0 0 0''') == '0'\nassert solution('''0 0 0''') == '0'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\n\"\"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5\\n') == '10'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5') == 10\nassert solution('1 5') == 5\nassert solution('100 10') == 500\nassert solution('100 100') == 10000\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '12'\nassert solution('1 4') == '1'\nassert solution('3 4') == '12'\nassert solution('2 4') == '4'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '10'\n\"\"\""
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5') == '10'\n\"\"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5\\n') == '10'\nassert solution('1 2\\n') == '2'\nassert solution('1 1\\n') == '1'\nassert solution('1 5\\n') == '5'\nassert solution('1 3\\n') == '3'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == 10\n'''\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 5') == '10'\nassert solution('2 5') == '10'\nassert solution('3 1') == '3'\nassert solution('5 3') == '15'\nassert solution('5 11') == '55'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('10 9') == '10'\nassert solution('10000000 99999999') == '10000000'\nassert solution('1000000 99999999') == '1000000'\nassert solution('99999999 99999999') == '99999999'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('5 5 7') == '10'\nassert solution('10 9 7') == '25'\nassert solution('15 18 22') == '50'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\"\n'''\n\n'''\n- The total number of biscuits produced within T + 0.5 seconds after activation.\n- The moment a biscuit is produced is exactly T seconds after activation, not T.5.\n- If T is odd, the resulting number of biscuits is T + 1.\n- If T is even, the resulting number of biscuits is T.\n\n- Number of minutes to wait after activation:\n  - T - 1\n  - T - 1 / 2\n  - T - 1 / 4\n  - T / 2\n  - T / 4\n  - T / 8\n  -...\n  - T / k\n'''\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 4 10') == '10'\nassert solution('5 2 8') == '8'\nassert solution('1 4 4') == '4'\nassert solution('1 1 5') == '5'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"10\"\nassert solution(\"2 4 8\") == \"16\"\nassert solution(\"7 3 5\") == \"23\"\nassert solution(\"4 6 9\") == \"32\"\nassert solution(\"1 1 2\") == \"5\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"2 1 1\") == \"3\"\nassert solution(\"2 1 2\") == \"6\"\nassert solution(\"3 2 3\") == \"9\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 7') == '10'\n'''\n\nA, B, T = map(int, stdin.split())"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '10'\nassert solution('2 4 6') == '20'\nassert solution('3 4 7') == '10'\nassert solution('3 4 5') == '10'\nassert solution('5 8 6') == '5'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 5 7\") == \"10\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 3 4\") == \"1\"\nassert solution(\"1 1 2\") == \"5\"\nassert solution(\"2 1 3\") == \"5\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"OK\"\n\"\"\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('3\\n10 15') == 'OK'\nassert solution('10\\n1 1') == 'NG'\nassert solution('1\\n1000 1001') == 'OK'\nassert solution('50\\n100 50') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"OK\"\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 2') == \"OK\"\nassert solution('5 1') == \"OK\"\nassert solution('8 8') == \"OK\"\nassert solution('10 4') == \"OK\"\nassert solution('3 4') == \"NG\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('7\\n1000 2') == 'OK'\nassert solution('7\\n1020 1') == 'OK'\nassert solution('7\\n1024 25') == 'OK'\nassert solution('7\\n2000 40') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7', '500 600') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('7\\n999 999') == 'NG'\nassert solution('7\\n1 1') == 'OK'\n\"\"\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"500 600\") == \"OK\"\nassert solution(\"4 7\") == \"NG\"\nassert solution(\"100 200\") == \"OK\"\nassert solution(\"7 100\") == \"OK\"\nassert solution(\"15 40\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n500 600\") == \"OK\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == 'OK'\nassert solution('500 600') == 'OK'\nassert solution('1000 1001') == 'OK'\nassert solution('500 600') == 'NG'\nassert solution('100 101') == 'OK'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3') == '2.6666666667'\nprint(solution('8 3'))\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('3 5') == '0.5'\nassert solution('991 41') == '40'\nassert solution('1001 41') == '40'\nassert solution('1011 41') == '40'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 3') == '2.6666666667'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8') == '2.6666666667'\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2.6666666667\"\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3') == '2.6666667'\nassert solution('1 1') == '1.0'\nassert solution('1 100') == '0.0'\nassert solution('10 10') == '2.0'\nassert solution('20 100') == '1.0'\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 3''') == '2.6666666667'\nassert solution('''1 4\n''') == '0.5'\nassert solution('''1 1\n''') == '1.0'\nassert solution('''1 10\n''') == '9.0'\nassert solution('''99999 99999\n''') == '99999.0'\n'''\n'''\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.6666666667\"\n\"\"\""
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n8 3\n'''\n) == '2.6666666667'\n\nassert solution(\n'''\n7 10\n'''\n) == '6.2167'\n\nassert solution(\n'''\n100 100\n'''\n) == '1.4286'\n\nassert solution(\n'''\n1 2\n'''\n) == '1.4286'\n\nassert solution(\n'''\n1000 2\n'''\n) == '49.9999'"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('6 4 3\\n10 5 3\\n5 3 2\\n2 3 1\\n1 1 1') == '0'\nassert solution('6 4 3\\n10 5 3\\n5 3 2\\n2 3 1\\n1 1 1\\n1 1 1') == '1'\nassert solution('1 1 1\\n1 1 1') == '0'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('0 0 0') == '0'\nassert solution('-2 3 -3') == '-1'\nassert solution('20 6 10') == '1'\nprint(\"Passed all tests.\")\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('4 1 3') == '1'\nassert solution('10 2 2') == '0'\nassert solution('1 2 2') == '1'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('10 4 7') == '0'\nassert solution('1000 4 7') == '1'\nassert solution('1000 10 0') == '9'\nassert solution('10 2 3') == '-1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('3 9 6') == '0'\nassert solution('8 14 9') == '2'\nassert solution('1 5 3') == '1'\nassert solution('1 5 2') == '1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"8 9 2\") == \"1\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"3 2 1\") == \"0\"\nassert solution(\"6 4 3\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''6 4 3'''\n) == '1'\n\nassert solution(\n'''3 4 2'''\n) == '1'\n\nassert solution(\n'''10 5 7'''\n) == '0'\n\nassert solution(\n'''30 5 4'''\n) == '5'\n\nassert solution(\n'''16 13 17'''\n) == '9'"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 10 10') == '10'\nassert solution('8 2 3') == '2'\nassert solution('10 10 10') == '0'\nassert solution('8 3 2') == '-1'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"1 3 4\") == \"1\"\nassert solution(\"20 1 20\") == \"10\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('2 3') == '1'\nassert solution('2 4') == '2'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n3 4\") == \"2\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1 2\\n1 3\") == \"0\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\\n\") == \"3\"\nassert solution(\"3\\n1 3 2\\n1 1 2\\n\") == \"2\"\nassert solution(\"3\\n1 3 2\\n1 2 3\\n\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2 1 3\\n\") == \"2\"\nassert solution(\"3\\n2 3 1\\n1 2 3\\n\") == \"2\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 2\\n3 1 2') == '3'\nassert solution('3 1 2\\n3 1 2') == '0'\nassert solution('3 1 2\\n3 1 2\\n3 1 2') == '0'\nassert solution('3 1 2\\n3 1 2\\n3 1 2') == '0'\nassert solution('4 2 5\\n5 4 2') == '1'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3 2\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '0'\n\"\"\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('3 1 2') == '0'\nassert solution('1 3 2') == '1'\nassert solution('3 1 2') == '1'\nassert solution('1 3 2') == '1'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3'\nassert solution('''2\n2 1''') == '1'\nassert solution('''3\n1 3 2\n2 1''') == '2'\nassert solution('''8\n8 7 6 5 4 3 2 1\n1 2 3 4 5 6 7 8''') == '8'\nassert solution('''2\n2 1\n2 1''') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('1 2 3') == '2'\nassert solution('1 3 2 4') == '3'\nassert solution('1 3 2 4 5') == '2'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATTCCGTAA') == 'ATTCCGT'\nassert solution('AATTCCGTAA') == 'AATTCCGT'\nassert solution('AAACGTTT') == 'AAACGTT'\nassert solution('AAAAACGT') == 'AAAAACGT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATTACKATDAWN') == 'ATT'\nassert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ATCODER') == 3\nassert solution('ATC') == 3\nassert solution('AT') == 2\nassert solution('CODER') == 4\nassert solution('CODER') == 4\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('GATTACA') == 'GATT'\nassert solution('AACGATA') == 'AACG'\nassert solution('TTTAGACCA') == 'TTTAG'\nassert solution('ATTAATAACCT') == 'ATT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ACGT') == 'ACGT'\nassert solution('ATCODER') == 'ATC'\nassert solution('A') == 'A'\nassert solution('TTC') == 'TC'\nassert solution('TTCCA') == 'TCC'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"GATTACA\") == \"TTT\"\nassert solution(\"GATTACAACTTT\") == \"TTTTTTT\"\nassert solution(\"TTTGACTAACGTT\") == \"TTTTTTT\"\nassert solution(\"GATGTTCAGAAGTCTAAGATTGTACACGCGTGATTTTGAGGACGTTAC\") == \"ATTGTACACGT\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"ATCODER\") == \"ATC\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('GGTTAGGAT') == 'GTT'\nassert solution('GATATATC') == 'ATC'\nassert solution('ATTCTGGA') == 'TGT'\nassert solution('GATTACA') == 'ATA'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 'AT'\nassert solution('CODE') == 'C'\nassert solution('ATCODER') == 'AT'\nassert solution('ATCODER') == 'AT'\nassert solution('ATCODER') == 'AT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ATCODER') == 3\nassert solution('AC') == 1\nassert solution('TTT') == 0\nassert solution('AAC') == 1\nassert solution('ATC') == 2\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('11') == ''\nassert solution('12') == '1'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\nassert solution('111') == '9'\nassert solution('12') == '10'\nassert solution('123') == '11'\nassert solution('1234') == '16'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('2') == 1\nassert solution('3') == 0\nassert solution('4') == 1\nassert solution('5') == 1\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11') == 9\n\"\"\""
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11') == '9'"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11') == '9'\nassert solution('22') == '6'\nassert solution('33') == '3'\nassert solution('0') == '0'\nassert solution('0999') == '0'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cupofcoffee') == 4\nassert solution('cupofhottea') == 4\n\"\"\""
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('cuppffftc') == '4'\nassert solution('cuppf') == '4'\nassert solution('cupffftc') == '4'\nassert solution('cupfffta') == '5'\nassert solution('cuppftc') == '4'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofcoffee\") == \"cupofhottea\"\n\n'''\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hippopotamus') == 'hitpotaton'\nassert solution('agglutinin') == 'agglutinins'\nassert solution('cabbage') == 'cabbages'\nassert solution('a') == 'b'\nassert solution('b') == 'a'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cupidofcoffee') == 'hotteahottea'\nassert solution('abcd') == 'abcd'\nassert solution('cabcd') == 'abcd'\nassert solution('ab') == 'ba'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('bottleofsoda') == 'bottlensodabottlensodabottlensodabottlensod'\nassert solution('cupofcoffee') == 'cupofhottea'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"1 10\") == \"\"\nassert solution(\"10 9\") == \"\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 7\n''') == '5 6 7 8 9'\nassert solution('''4 3\n''') == '5 6 7 8 9'\nassert solution('''4 2\n''') == '1 2 3 4'\nassert solution('''6 4\n''') == '1 2 3 4 5 6 7'\nassert solution('''7 4\n''') == '1 2 3 4 5 6 7 8'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\"\nassert solution(\"3 2\\n\") == \"1 2 3 4 5\"\nassert solution(\"4 6\\n\") == \"1 2 3 4 5 6\"\nassert solution(\"4 1\\n\") == \"1 2 3 4 5\"\nassert solution(\"4 1\\n\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 7''') == '5 6 7 8 9'\nassert solution('''1 2''') == '1 2'\nassert solution('''2 3''') == '1 2'\nassert solution('''2 4''') == '1 2'\nassert solution('''3 1''') == '1 2'\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 7''') == '5 6 7 8 9'\n'''\n\n3 7\n\n-1000000 1000000 1000000\n\n'''"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('3 3') == '5'\nassert solution('1 1') == '2'\n\"\"\"\n\n\"\"\"\n    Let the (K, X) be the coordinates of the K-th stone painted black in the line.\n\n    The following diagram shows the numbering of the stones in the line:\n\n        (0, 0), (1, 1), (2, 2),..., (99, 99), (100, 100)\n\n    The following are the five ways of numbering the stones:\n\n        1, 2, 3, 4, 5\n        6, 7, 8, 9, 10\n        11, 12, 13, 14, 15\n        16, 17, 18, 19, 20\n        21, 22, 23, 24, 25\n\n    The rule is the following:\n\n        The first K stones are numbered from 1 to K.\n        The K + 1st stone is numbered from K + 1 to 2*K.\n        The 2*K + 1st stone is numbered from 2*K + 1 to 3*K.\n        The 3*K + 1st stone is numbered from 3*K + 1 to 4*K.\n        The 4*K + 1st stone is numbered from 4*K + 1 to 5*K.\n\n    There are 3 possible ways to number the K + 1st stone.\n    The first way is to number it from 1 to K (which leads to the first K stones being numbered from 1 to K).\n    The second way is to number it from K + 1 to 2*K (which leads to the second K stones being numbered from K + 1 to 2*K).\n    The third way is to number it from 2*K + 1 to 3*K (which leads to the third K stones being numbered from 2*K + 1 to 3*K).\n\n    Finally, it's enough to add 1 to the maximum of the numberings of the first K stones and the numberings of the second K stones.\n\n    The result is the maximum of the numberings of the first K stones and the numberings of the second K stones.\n\n    Time - O(1)\n    Space - O(1)\n\"\"\"\n\nfrom math import log"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"4 3\") == \"2 3 4\"\nassert solution(\"5 3\") == \"2 3 4 5\"\nassert solution(\"10 2\") == \"2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 7''') == \"5 6 7 8 9\"\nassert solution('''3 2''') == \"2\"\nassert solution('''1 100000''') == \"\"\nassert solution('''10 100000''') == \"\"\nassert solution('''10 9''') == \"\"\n'''"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('25') == 'No'\nassert solution('100') == 'No'\nassert solution('100.0') == 'No'\nassert solution('-1') == 'No'\nassert solution('-1.0') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"32\") == \"Yes\"\nassert solution(\"50\") == \"Yes\"\n\nassert solution(\"25\") == \"No\"\nassert solution(\"32\") == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('25') == 'No'\nassert solution('70') == 'Yes'\nassert solution('27') == 'No'\nassert solution('12') == 'Yes'\nassert solution('7') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('25') == 'Yes'\nassert solution('29') == 'No'\nassert solution('16') == 'Yes'\nassert solution('-40') == 'No'\nassert solution('-49') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('25') == 'No'\nassert solution('3') == 'Yes'\nassert solution('300') == 'Yes'\nassert solution('30') == 'No'\nassert solution('30.5') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'No'\nassert solution('100') == 'Yes'\nassert solution('45') == 'Yes'\nassert solution('120') == 'Yes'\nassert solution('32') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('25') == 'Yes'\nassert solution('20') == 'No'\nassert solution('0') == 'Yes'\nassert solution('-5') == 'Yes'\nassert solution('-40') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('25') == 'No'\nassert solution('30') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('0') == 'Yes'\nassert solution('40') == 'Yes'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n5 6') == '1\\n'\nassert solution('-1 -2\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '1\\n'\nassert solution('1 2\\n1 2\\n3 4\\n3 4\\n5 6\\n5 6') == '0\\n'\nassert solution('1 2\\n1 2\\n3 4\\n3 4\\n5 6\\n5 7\\n5 8') == '1\\n'\nassert solution('1 2\\n1 2\\n3 4\\n5 6') == '0\\n'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n5 5''') == '1'\nassert solution('''1 2\n5 5\n-2 8''') == '1'\nassert solution('''1 2\n5 5\n-1 -5''') == '1'\nassert solution('''1 2\n5 5\n-2 -5''') == '1'\nassert solution('''1 2\n-2 -4\n4 -1''') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == '1'\n\"\"\""
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n5 5') == '1'\nassert solution('1 2\\n5 5\\n-2 8') == '1\\n'\nassert solution('2 2\\n-1 -1') == '0\\n'\nassert solution('5 2\\n1 2') == '1\\n'\nassert solution('-3 3\\n1 0\\n0 1') == '1\\n'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\"\n    ) == \"1\"\n\nassert solution(\n\"\"\"\n3 3\n-1 1\n3 -1\n2 2\n\"\"\"\n    ) == \"2\"\n\nassert solution(\n\"\"\"\n2 2\n1 1\n1 1\n\"\"\"\n    ) == \"0\"\n\nassert solution(\n\"\"\"\n5 2\n1 2\n5 1\n2 3\n5 -1\n\"\"\"\n    ) == \"3\"\n\nassert solution(\n\"\"\"\n5 5\n-1 -1\n-1 -1\n1 1\n1 1\n1 1\n\"\"\"\n    ) == \"4\""
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n2 1\\n3 4') == '1\\n'\nassert solution('2 2\\n1 1\\n3 3') == '0\\n'\nassert solution('-2 8\\n-1 1\\n1 3') == '1\\n'\nassert solution('1 1\\n1 1\\n1 1') == '0\\n'\nassert solution('2 2\\n1 2\\n2 1') == '1\\n'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '0'\nassert solution('''3 2\n1 2\n3 4\n-1 -1''') == '0'\nassert solution('''3 2\n1 2\n3 4\n-1 -1\n5 5\n-2 8''') == '2'\nassert solution('''3 2\n1 2\n3 4\n-1 -1\n5 -1''') == '2'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''2 2\n1 2\n3 4\n1 4''') == '0'\nassert solution('''4 4\n3 4\n3 3\n1 1\n2 2''') == '3'\nassert solution('''4 4\n2 2\n-1 -1\n1 1''') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"(2, 2), (5, 5), (-2, 8), (1, 2), (3, 1), (-5, -3), (4, 2), (-2, -1), (-1, -2), (1, -1), (4, 3), (-4, -2), (4, -1), (-1, 1), (1, -4), (-2, -3), (2, -3), (2, -4), (2, -2), (5, -1), (3, -4), (2, -2), (-1, 3), (-4, -1), (3, -4), (-1, -1), (2, -2), (3, -1), (-3, 1), (-5, -1), (2, 1), (-2, -2), (-5, -3), (1, -1), (2, 2), (1, -4), (5, -2), (3, -3), (-3, -1), (-2, 3), (-1, -3), (3, -2), (2, -3), (1, -1), (5, -2), (4, -3), (3, -1), (2, 1), (-4, 2), (5, -1), (3, -4), (5, -3), (2, -3), (-3, -1), (-4, 2), (2, -1), (2, 4), (1, -2), (3, -1), (-3, 1), (-2, 4), (2, 1), (2, 3), (1, -1), (1, 3), (2, 1), (1, -2), (4, -2), (2, 2), (2, -1), (3, -1), (1, -4), (5, -2), (3, -3), (-3, -1), (-3, 1), (-1, 4), (5, -2), (-1, -1), (4, -2), (2, 2), (5, -1), (4, -1), (2, 4), (5, -1), (5, 3), (2, -1), (1, -3), (-3, -1), (-2, 3), (-1, -3), (5, -2), (5, 3), (2, -1), (2, 1), (2, -1), (-4, 2), (4, -2), (5, -2), (3, -1), (2, 4), (-4, 2), (5, -2), (5, 1), (3, -1), (-1, -4), (-5, -1), (3, -4), (2, -1), (2, 1), (5, -1), (3, -4), (2, -1), (2, -1), (5, -2), (-5, -3), (-3, -1), (-2, 3), (-1, -3), (5, -1), (5, 1), (3, -1), (2, 4), (4, -2), (5, -2), (4, -1), (2, 2), (4, -2), (2, -1), (2, 1), (2, -1), (5, -1), (3, -4), (5, -2), (2, -1), (3, -1), (-1, -4), (-5, -1), (3, -4), (5, -1), (3, -4), (-5, -1), (-2, 3), (1, -3), (4, -1), (2, -1), (2, 1), (5, -1), (3, -4), (5, -1), (3, -4), (1, -3), (5, -1), (5, 1), (3, -1), (-5, -1), (-1, -2), (5, -1), (3, -4), (-5, -1), (-2, 3), (1, -3), (4, -1), (2, -1), (2, 1), (5, -1), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 4), (4, -2), (5, -2), (4, -1), (2, 2), (4, -2), (2, -1), (2, 1), (5, -1), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 4), (4, -2), (5, -2), (4, -1), (2, 2), (4, -2), (2, -1), (2, 1), (5, -1), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 4), (4, -2), (5, -2), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 2), (4, -2), (2, -1), (2, 1), (5, -1), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 2), (4, -2), (2, -1), (2, 1), (5, -1), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 2), (4, -2), (2, -1), (2, 1), (5, -1), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 2), (4, -2), (2, -1), (2, 1), (5, -1), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 2), (4, -2), (2, -1), (2, 1), (5, -1), (5, 1), (3, -1), (-5, -1), (-5, 1), (3, -1), (2, 2), (4, -2), (2,"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1234') == 'Good'\nassert solution('12345') == 'Good'\nassert solution('9123') == 'Good'\nassert solution('9900') == 'Bad'\nassert solution('10000') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3444') == 'Bad'\nassert solution('3876') == 'Good'\nassert solution('3444') == 'Bad'\nassert solution('974') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Good\"\nassert solution(\"2\") == \"Good\"\nassert solution(\"3\") == \"Good\"\nassert solution(\"4\") == \"Good\"\nassert solution(\"5\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"3999\") == \"Good\"\nassert solution(\"2709\") == \"Good\"\nassert solution(\"3170\") == \"Good\"\nassert solution(\"5566\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1123\") == \"Good\"\nassert solution(\"1111\") == \"Good\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"1123\") == \"Good\"\nassert solution(\"1235\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3709') == 'Good'\nassert solution('3769') == 'Bad'\nassert solution('3775') == 'Good'\nassert solution('3777') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"2852\") == \"Good\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"2357\") == \"Good\"\nassert solution(\"7337\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Good'\nassert solution('9348') == 'Good'\nassert solution('2430') == 'Good'\nassert solution('9876') == 'Bad'\nassert solution('4665') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3310\") == \"Good\"\nassert solution(\"3487\") == \"Bad\"\nassert solution(\"3776\") == \"Good\"\nassert solution(\"3210\") == \"Good\"\nassert solution(\"8796\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2123\") == \"Good\"\nassert solution(\"2222\") == \"Good\"\nassert solution(\"22222222\") == \"Bad\"\nassert solution(\"2345\") == \"Good\"\nassert solution(\"1223\") == \"Good\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3.50001'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n3 4''') == '3.5'\nassert solution('''5\n5 5 5 5 5''') == '10.0'\nassert solution('''100\n4 4 4 4 4 4''') == '10.0'\nassert solution('''100\n3 1 3 1 3 1''') == '10.0'\nassert solution('''10\n1 1 1 1 1 1 1 1 1''') == '10.0'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''2\n1 2\n1 2\n2\n3\n4''') == '3.5'\nassert solution('''100\n100\n10\n1\n2\n3\n4\n5''') == '1.5'\n'''\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('3 4') == '3.5'\nassert solution('5 7') == '5.6'\nassert solution('1 2 3 4 5') == '5.6'\nassert solution('9 16') == '6.25'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1.00000'\nassert solution('1 2 3 4') == '1.25000'\nassert solution('1 2 3 4 5') == '1.56250'\nassert solution('1 2 3 4 5 6') == '1.81250'\nassert solution('1 2 3 4 5 6 7') == '2.00000'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4') == '3.5'\nassert solution('1 2 3 4') == '3.5'\nassert solution('1000 1001 2 2') == '3.5'\nassert solution('2') == '1'\nassert solution('4 5 6 8') == '4.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 2') == '0.5'\nassert solution('2 3') == '0.75'\nassert solution('3 4') == '0.875'\nassert solution('5 6') == '0.9375'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('2\\n3 3') == '2'\nassert solution('2\\n3 5') == '4'\nassert solution('2\\n3 5\\n4 3') == '3.5'\nassert solution('2\\n3 3\\n5 4') == '3.5'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '3.5'\nassert solution('2 3 4') == '2.5'\nassert solution('1 2 3 4 5') == '2.75'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2.84'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '3.19'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == str(14)"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('4\\n3 1 2\\n2 5 4\\n3 6\\n3 7') == '21'\nassert solution('5\\n5 1 2\\n2 5 4\\n3 6\\n3 7\\n3 8') == '21'\nassert solution('5\\n5 1 2\\n2 5 4\\n3 6\\n3 7\\n3 8\\n3 9') == '21'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\nassert solution('1\\n1 1\\n1 1\\n1 1\\n') == '1'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n') == '14'\nassert solution('5\\n4 2 5 3 6\\n5 4 5 5 7\\n5 4 2 1\\n5 4 5 3\\n5 4 5 6\\n5 4 3 1\\n5 4 4 1\\n5 4 5\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4 1\\n5 4 5\\n5 4 3\\n5 4 2\\n5 4\\n5 4 5\\n5 4 2\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 5\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n5 4 1\\n5 4 4\\n5 4 3\\n5 4 2\\n5 4\\n5 4 1\\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 2') == '14'\nassert solution('1\\n1 1 1') == '1'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n5 5 5\\n4 4 4') == '25'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6\\n5 5 5\\n4 4 4\\n6 7 8 9\\n5 4 5\\n5 5 5') == '41'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''5\n3 1 2\n2 5 4\n3 6\n1 7\n4 8\n2 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n2 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1 501\n1 502\n1 503\n1 504\n1 505\n1 506\n1 507\n1"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 2\") == \"14\"\nassert solution(\"3\\n2 5 4\\n3 6\\n\") == \"14\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''4\n3 1 2 3 4\n2 5 4 5 6\n3 6 7 8''') == '34'\nassert solution('''5\n5 1 2 3 4 5\n2 5 4 5 6 5\n3 6 7 8 9 10''') == '74'\nassert solution('''6\n6 1 2 3 4 5 6\n2 5 4 5 6 5 6\n3 6 7 8 9 10 11 12''') == '106'\nassert solution('''7\n7 1 2 3 4 5 6 7\n2 5 4 5 6 5 6 6\n3 6 7 8 9 10 11 12 13\n4 7 8 9 10 11 12 13 14''') == '208'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"14\"\nassert solution(\"2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"17\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"32\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"92\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\") == \"162\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''5\n5 6 7 9 10\n10 11 12 13 14\n15 16 17 18 19\n20 21 22 23 24\n25 26 27 28 29''') == '280'\nassert solution('''2\n1 1\n1 1''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '480'\nassert solution('''6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '480'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"2\\n2 5 4\\n2 5 4\") == \"14\"\nassert solution(\"3\\n3 1 2\\n2 4 5\\n3 6\") == \"14\"\nassert solution(\"4\\n3 1 2\\n2 4 5\\n3 6\\n3 4\") == \"14\"\nassert solution(\"2\\n2 4 5\\n2 4 5\") == \"14\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    10\n    ZABCDBABCQ\n    '''\n) == '2'\n\nassert solution(\n    '''\n    6\n    IWLMIOTW\n    '''\n) == '0'\n\nassert solution(\n    '''\n    11\n    GJABBOPHWZ\n    '''\n) == '0'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('CZB') == '0'\nassert solution('CAB') == '1'\nassert solution('CABC') == '2'\nassert solution('CABCB') == '3'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('ABABAC') == '2'\nassert solution('ABCDBABCQ') == '2'\n\nassert solution('A') == '0'\nassert solution('AB') == '1'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ZABCDBABCQ') == '2'\n\n'''\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('ABC') == '3'\nassert solution('A') == '1'\nassert solution('B') == '1'\nassert solution('C') == '1'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ZABCDBABCQ\") == \"2\"\nassert solution(\"ZABCDBABCQ\") == \"2\"\nassert solution(\"ABABC\") == \"2\"\nassert solution(\"AABB\") == \"0\"\nassert solution(\"AAA\") == \"1\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\nZABCDBABCQ''') == \"2\"\nassert solution('''10\nYAAABBABQBBHGJHKHG''') == \"1\"\nassert solution('''20\n
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('ABCDBABCQ') == '2'\n'''"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ZABCDBABCQ\") == \"2\"\nassert solution(\"ABBCDBABCQ\") == \"2\"\nassert solution(\"ABABCDBABCQ\") == \"2\"\nassert solution(\"ABBCDBABCQ\") == \"2\"\nassert solution(\"ABABCDBABCQ\") == \"2\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"MASHIKE\") == \"MASHIKE\"\nassert solution(\"MASHIKE:\") == \"MASHIKE\"\nassert solution(\"MASHIKE:RUMOI\") == \"MASHIKE\"\nassert solution(\"MASHIKE:HABORO\") == \"MASHIKE\"\nassert solution(\"MASHIKE:HOROKANAI\") == \"MASHIKE\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == ''\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ'*3) == ''\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ'*3) == ''\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ'*3) == ''\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ'*3) == ''\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('MASHIKE') == '2'\nassert solution('RUMOI') == '1'\nassert solution('OBIRA') == '2'\nassert solution('HABORO') == '1'\nassert solution('HOROKANAI') == '2'\nprint('All test cases passed!')\n\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == '2'\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == '2'\nassert solution(\"MASHIKE\\nOBIRA\\nHABORO\\nRUMOI\\nHOROKANAI\") == '2'\nassert solution(\"MASHIKE\\nHABORO\\nRUMOI\\nOBIRA\\nHOROKANAI\") == '2'\nassert solution(\"MASHIKE\\nHABORO\\nRUMOI\\nOBIRA\\nHOROKANAI\") == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == 2\n\"\"\""
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\"\"\"\n\nN = int(input())\ns = input()\np = 'MRAC'\nc = 0\nfor i in range(1,N):\n    if s[i] in p:\n        c+=1\nprint(c)\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom collections import Counter\nfrom math import comb\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == \"Yes\"\nassert solution('''3 1''') == \"No\"\nassert solution('''3 3''') == \"Yes\"\nassert solution('''4 4''') == \"No\"\nassert solution('''4 6''') == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('0 5') == 'No'\nassert solution('10 5') == 'No'\nassert solution('1 5') == 'Yes'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'\n\n'''\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 5\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"\nassert solution(\"99 2\") == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(3,3) == 'Yes'\nassert solution(1,1) == 'No'\nassert solution(3,3) == 'Yes'\nassert solution(1,2) == 'No'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"2 5\") == \"No\"\nassert solution(\"1 2\") == \"No\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('0 0') == 'No'\nassert solution('3 5') == 'No'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('1 1') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('4 2') == 'Yes'\nassert solution('3 3') == 'No'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuue') == 'No'\nassert solution('sippuuue') == 'No'\nassert solution('sippuues') == 'No'\nassert solution('sippuus') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('si') == 'Yes'\nassert solution('Sippu') == 'No'\nassert solution('sippu') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sippuu') == \"Yes\"\nassert solution('sippub') == \"No\"\nassert solution('coffe') == \"Yes\"\nassert solution('coffe') == \"No\"\nassert solution('coffee') == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"Sippuu\") == \"Yes\"\nassert solution(\"sippu\") == \"No\"\nassert solution(\"Sippu\") == \"No\"\nassert solution(\"Sipp\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sssspp\") == \"No\"\nassert solution(\"sippuv\") == \"Yes\"\nassert solution(\"ssss\") == \"No\"\nassert solution(\"ssspp\") == \"Yes\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"shshsh\") == \"No\"\nassert solution(\"mqkmq\") == \"No\"\nassert solution(\"pwpwp\") == \"Yes\"\nassert solution(\"rrhrr\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('zwzczxa') == 'Yes'\nassert solution('wxpwzc') == 'Yes'\nassert solution('zwzczxa') == 'No'\nassert solution('sippuu') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('qwer') == 'No'\nassert solution('abcdefgh') == 'No'\nassert solution('abcdefghi') == 'No'\nassert solution('sippuui') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sssss') == 'No'\nassert solution('sippu') == 'Yes'\nassert solution('ssssss') == 'No'\nassert solution('sippu') == 'Yes'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\") == '3'\nassert solution(\"1\\n3\\n1 2\\n3 2\") == '3'\nassert solution(\"1\\n5\\n1 4\\n1 3\\n1 2\\n1 2\\n2 3\\n2 3\\n2 4\") == '1'\nassert solution(\"1\\n3\\n1 4\\n1 3\\n1 2\\n1 2\\n2 3\\n2 3\\n2 4\") == '1'\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == '1'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 2 4 4 3 3 1') == '4'\nassert solution('2 3 1 4 3 1 2') == '4'\nassert solution('3 3 2 3 1 1 1 1') == 'TLE'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"TLE\"\nassert solution(\"1 2\") == \"TLE\"\nassert solution(\"1 2 3\") == \"TLE\"\nassert solution(\"1 2 4\") == \"TLE\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50''') == '4'\nassert solution('''2 2\n1 2\n1 2\n''') == 'TLE'\n'''\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1\\n1 1\\n2 2\\n3 4') == '1'\nassert solution('1 1\\n2 2\\n3 3') == '3'\nassert solution('2 3\\n1 2\\n3 4') == '3'\nassert solution('3 4\\n1 2\\n2 3') == '2'\nassert solution('4 4\\n1 2\\n2 3\\n3 4') == '2'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"7 60\") == \"TLE\"\nassert solution(\"1 80\") == \"7\"\nassert solution(\"4 50\") == \"TLE\"\nassert solution(\"\") == \"TLE\"\n\"\"\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"1 1000\") == \"TLE\"\nassert solution(\"1 1000\\n1 1000\\n1 1000\\n1 1000\") == \"TLE\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n100 100\\n100 100\\n100 100\\n100 100\") == \"TLE\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 70') == '4'\nassert solution('3 70\\n7 60\\n1 80\\n4 50') == '4'\nassert solution('3 70\\n7 60\\n1 80\\n4 50\\n10 90') == 'TLE'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50''') == '4'\nassert solution('''3 70\n7 60\n1 80\n4 50''') == 'TLE'\nassert solution('''3 70\n7 60\n1 80\n4 50''') == '4'\nassert solution('''3 70\n7 60\n1 80\n4 50''') == 'TLE'\nassert solution('''3 70\n7 60\n1 80\n4 50''') == 'TLE'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 10 3\") == 8\nassert solution(\"3 2 3\") == 10\nassert solution(\"1 10 2\") == 9\nassert solution(\"2 8 5\") == 9\nassert solution(\"7 14 10\") == 21\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('2 3 7') == '9'\nassert solution('1 2 4') == '4'\nassert solution('5 3 1') == '10'\nassert solution('7 19 3') == '23'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('0 1 3') == '1'\nassert solution('2 10 11') == '20'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2 9''') == '8'\nassert solution('''10 3 5''') == '18'\nassert solution('''5 3 7''') == '9'\nassert solution('''6 1 2''') == '8'\nassert solution('''7 4 6''') == '14'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('1 2 1') == '1'\nassert solution('1 1 3') == '4'\nassert solution('3 7 2') == '10'\nassert solution('3 4 4') == '12'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 2 1') == '0'\nassert solution('7 3 4') == '14'\nassert solution('5 0 2') == '0'\nassert solution('5 4 2') == '14'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2 9''') == '8'\nassert solution('''2 7 10''') == '34'\nassert solution('''3 4 1''') == '10'\nassert solution('''2 4 5''') == '8'\nassert solution('''4 1 1''') == '2'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\") == \"8\"\nassert solution(\"2 4 2\") == \"4\"\nassert solution(\"5 3 4\") == \"11\"\nassert solution(\"4 2 9\") == \"8\"\nassert solution(\"1 0 9\") == \"0\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2 9''') == '8'\nassert solution('''5 2 15''') == '30'\nassert solution('''10 1 21''') == '31'\nassert solution('''1 1 21''') == '21'\nassert solution('''5 1 21''') == '21'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('a') is None\nassert solution('acornistnt') == '1'\nassert solution('peanutbomb') == '1'\nassert solution('constraint') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nconstraint') == '2'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nconstraint\\nconstraint') == '2'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\nconstraint\\nconstraint\\nconstraint') == '2'\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('peanutbomb\\nacornistnt\\nconstraint') == '1'\nassert solution('acornistnt\\nconstraint\\npeanutbomb') == '2'\nassert solution('peanutbomb\\nacornistnt\\nconstraint') == '2'\nassert solution('acornistnt\\nconstraint\\npeanutbomb') == '2'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''acornistnt\npeanutbomb\nconstraint''') == '1'\nassert solution('''acornistnt\npeanutbomb\nrobotarm\npinkerton\njenny''') == '0'\nassert solution('''acornistnt\npeanutbomb\nrobotarm\npinkerton\njenny''') == '1'\nassert solution('''acornistnt\npeanutbomb\nrobotarm\npinkerton\njenny''') == '0'\nassert solution('''acornistnt\npeanutbomb\nrobotarm\npinkerton\njenny''') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"1\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('toothbrush\\npencils\\nspoils\\n') == '3'\nassert solution('tosser\\nspoils\\n') == '0'\nassert solution('carls\\npoirot\\n') == '2'\nassert solution('peanutbomb\\nconstraint\\n') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abracadabra') == 1\nassert solution('abcdefghijklmnopqrstuvwxyz') == 0\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz') == 0\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz') == 0\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmn"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcdef') == 'defabc'\nassert solution('abcd') == 'bacd'\nassert solution('abcdeba') == 'bdcdeab'\nassert solution('abcdea') == 'aecdba'\n\n\"\"\""
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('112123123412345$\\dots$') == '11212312341234512345$\\dots$'\nassert solution('112123123412345$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$123412345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$654321$\\dots$12345$\\dots$"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('112123123412345$\\dots$') == '112123123412345123451234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567123456712345671234567"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\n'''"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''123456789123456789\n1121231234123456789123456789\n1123456789123456789123456789\n1123456789123456789123456789\n1123456789123456789123456789\n1123456789123456789123456789\n1123456789123456789123456789\n1123456789123456789123456789\n1123456789123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234123456789123456789\n1121231234"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == '''0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n\n1\n\n''') == '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '8'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('112123123412345$\\dots$') == '1'\nassert solution('112123123412345$\\dots$') == '2'\nassert solution('112123123412345$\\dots$') == '5'\nassert solution('112123123412345$\\dots$') == '2'\nassert solution('112123123412345$\\dots$') == '0'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n4 5\n4 6\n4 7\n''') == '4'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n') == '1'\nassert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '1\\n1'\nassert solution('1\\n1\\n1\\n') == '1\\n1\\n1'\nassert solution('3\\n2\\n1\\n') == '2\\n1'\nassert solution('5\\n6\\n2\\n3\\n4\\n5\\n6') == '1'\nassert solution('2\\n1\\n1\\n') == '1\\n1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1\\n1 4\\n1 2') == '2'\nassert solution('3 2\\n1 4\\n1 2\\n2 3\\n2 4\\n2 5\\n3 6') == '3'\nassert solution('3 2\\n1 4\\n1 2\\n2 3\\n2 4\\n3 4') == '1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n4 10\\n5 6\\n5 7') == '1'\nassert solution('4 2\\n3 1\\n1 4\\n1 2\\n2 3\\n2 4') == '2'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('3\\n2') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2'\n\nassert solution(\n'''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\n4 4\n5 9\n6 7\n7 8\n8 9\n\n9 9\n9 10\n10 1\n''') == '1'\n\nassert solution(\n'''1 1\n1 2\n''') == '1'\n\nassert solution(\n'''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n1 3\n4 5\n3 6\n''') == '2'\n\nassert solution(\n'''9 4\n1 1\n1 2\n1 3\n1 4\n2 3\n3 4\n3 5\n3 6\n4 5\n4 6\n''') == '3'"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 4 4\n\n''') == '2 4'\nassert solution('''9\n1 1 8 8 8 4 4 4 4\n\n''') == '3 8'\nassert solution('''7\n4 3 7 1 4 3 3\n\n''') == '3 6'\nassert solution('''7\n4 3 7 1 4 3 3\n\n''') == '3 6'\n'''\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"2 2 4 4\") == \"\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\nN = int(input())\nhouses = [int(x) for x in input().split()]\n\ntotal = houses[0]\n\nfor i in range(1, N):\n    total += max(0, min(houses[i] - houses[i - 1], houses[i] + houses[i - 1]))\nprint(total, total)\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 4 4\n\n''') == '2 4'\nassert solution('''\n9\n1 1 8 8 8 4 4 4 4\n\n''') == '3 8'\nassert solution('''\n7\n4 3 7 1 4 3 3\n\n''') == '3 6'\nassert solution('''\n8\n4 3 7 1 4 4 4 4\n\n''') == '3 6'\nassert solution('''\n9\n4 3 7 1 4 4 4 4 4\n\n''') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '''2 4'''\nassert solution('''9''') == '''3 8'''\nassert solution('''7''') == '''3 6'''\nassert solution('''1 1 8 8 8 4 4 4 4''') == '''2 4'''\nassert solution('''4''') == '''2 4'''\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8\\n4 2 4 4') == '2 4'\nassert solution('8\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('8\\n1 1 4 4 4 4 4 4') == '3 6'\nassert solution('8\\n1 1 4 4 4 4 4') == '3 6'\nassert solution('8\\n1 1 4 4 4 4') == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n4\\n4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 4 4\n\"\"\") == \"2 4\"\n\nassert solution(\n\"\"\"\n9\n1 1 8 8 8 4 4 4 4\n\"\"\") == \"3 8\"\n\nassert solution(\n\"\"\"\n7\n4 3 7 1 4 3 3\n\"\"\") == \"3 6\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == result, solution(stdin)\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2''') == '3 1 2'\nassert solution('''3\n2 3\n3 1\n1 2''') == '3 1 2'\nassert solution('''3\n2 3\n3 1\n1 5\n2 4\n''') == '3 1 2'\nassert solution('''3\n2 3\n3 1\n1 5\n2 4\n''') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3\\n3\\n3') == '3 3 3'\nassert solution('3\\n3\\n3\\n3') == '3 1 2'\nassert solution('3\\n3\\n3\\n3') == '3 1 2'\nassert solution('3\\n3\\n3\\n3') == '3 1 2'\nassert solution('3\\n3\\n3\\n3') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2''') == '3 1 2'\nassert solution('''9\n4 5\n5 7\n6 8\n7 8\n8 9\n9 1\n1 4\n4 2\n2 3''') == '7 8 9 1 4 2 3'\nassert solution('''9\n3 3\n5 7\n1 4\n3 1\n1 2\n2 4\n4 5\n5 1\n1 5\n2 6''') == '3 1 2 4 5 7 8 9'\nassert solution('''9\n3 4\n5 7\n6 8\n7 8\n8 9\n9 1\n1 5\n2 4\n4 3''') == '3 1 2 4 5 7 8 9'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"1234567\") == \"12345\"\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2''') == '3 1 2'\nassert solution('''15\n17\n15\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10\n11\n12\n10\n14\n16\n11\n12\n13\n13\n14\n14\n15\n11\n12\n15\n12\n11\n14\n15\n13\n14\n14\n17\n10"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 1 2 4 5'\nassert solution('''3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''7\n6\n1 2\n3 1\n1 3\n2 4\n3 2\n4 1\n3 1\n5 1\n6 1\n''') == '5 1 2 3 4 1 3 6 4 5 1 2 6 1 3 3 5 6 4'\nassert solution('''7\n7\n1 2\n2 1\n3 1\n3 4\n4 3\n5 3\n6 3\n7 3\n7 3\n''') == '1 2 3 4 1 3 6 4 5 1 2 6 1 3 3 5 6 4'\nassert solution('''3\n3\n3 3\n1 1\n2 1\n2 1\n''') == '1 3 1'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3\\n3 1\\n') == '3 1 2'\nassert solution('1 1\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 4\n2 4\n1 5\n2 3\n''') == '3 1 2'\nassert solution('''\n5\n1 4\n2 4\n1 5\n2 3\n''') == '3 1 2'\nassert solution('''\n5\n3 1\n1 4\n2 4\n1 5\n2 3\n''') == '3 1 2'\nassert solution('''\n3\n2 3\n1 2\n3 1\n''') == '3 1 2'\nassert solution('''\n6\n1 3\n4 2\n5 4\n6 3\n2 6\n3 4\n''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3\\n1 2\\n1 2') == '3 1 2'\nassert solution('3\\n3\\n1 4\\n1 5\\n2 4\\n2 3\\n3 1\\n1 2') == '3 1 2'\nassert solution('3\\n3\\n3 1\\n1 2\\n2 3') == '3 1 2'\nassert solution('3\\n3\\n3 1\\n3 2\\n1 2\\n2 3') == '3 1 2'\nassert solution('3\\n3\\n3 1\\n3 2\\n1 2\\n2 3\\n3 1\\n1 2') == '3 1 2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n3 5\n1 4\n2 4\n1 5\n2 3\n\"\"\") == \"3 2 4 1 5\"\nassert solution(\"\"\"3\n2 3\n3 1\n1 2\n\"\"\") == \"3 1 2\"\nassert solution(\"\"\"11\n11\n11\n\"\"\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"\"\"11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n\"\"\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"\"\"13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n13\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1000') == '1'\nassert solution('1\\n10000') == '1'\nassert solution('1\\n100\\n1000') == '1'\nassert solution('1\\n1000\\n10000') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6''') == '''3'''\nassert solution('''10''') == '''1'''\nassert solution('''6''') == '''1'''\nassert solution('''1337 1337 1337 1337 1337 1337 1337 1337 1337 1337''') == '''10'''\nassert solution('''1337 1337 1337 1337 1337 1337 1337 1337 1337 1337''') == '''1'''\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\n\"\"\""
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3\\n'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10\\n'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1\\n'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10\\n'\nassert solution('6\\n1 1002 2 1 4 3 3 5\\n') == '2\\n'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('inputs/small/00-test-case') == '1\\n'\nassert solution('inputs/small/01-test-case') == '0\\n'\nassert solution('inputs/small/02-test-case') == '0\\n'\nassert solution('inputs/small/03-test-case') == '0\\n'\nassert solution('inputs/small/04-test-case') == '0\\n'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('10\\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 10 17 12 15 2') == '3'\nassert solution('3\\n1 1000 10000 10 100000000') == '1'\nassert solution('3\\n1 1000 10000 10 100000000') == '1'\nassert solution('10\\n
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('15 5 3 2') == '4'\nassert solution('15 5 4 3') == '-1'\nassert solution('15 5 2 1') == '5'\nassert solution('15 5 5 1') == '0'\nassert solution('16 7 5 2') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"15 5 3 2\") == \"4\"\nassert solution(\"15 5 4 3\") == \"-1\"\nassert solution(\"15 5 2 1\") == \"5\"\nassert solution(\"15 5 5 1\") == \"0\"\nassert solution(\"16 7 5 2\") == \"1\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''15 5 3 2''') == '4'\nassert solution('''15 5 4 3''') == '-1'\nassert solution('''15 5 2 1''') == '5'\nassert solution('''15 5 5 1''') == '0'\nassert solution('''16 7 5 2''') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''15 5 3 2''') == '4'\nassert solution('''15 5 4 3''') == '-1'\nassert solution('''15 5 2 1''') == '5'\nassert solution('''15 5 5 1''') == '0'\nassert solution('''16 7 5 2''') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"\n\n'''"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '5'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '0'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"15 5 3 2\") == \"4\"\nassert solution(\"15 5 4 3\") == \"-1\"\nassert solution(\"15 5 2 1\") == \"5\"\nassert solution(\"15 5 5 1\") == \"0\"\nassert solution(\"16 7 5 2\") == \"1\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''15 5 3 2''') == '4'\nassert solution('''15 5 4 3''') == '-1'\nassert solution('''15 5 2 1''') == '5'\nassert solution('''15 5 5 1''') == '0'\nassert solution('''16 7 5 2''') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 1 1\\n') == '2'\nassert solution('7 7 3 3\\n') == '-1'\nassert solution('20 7 7 3\\n') == '4'\nassert solution('15 7 5 3\\n') == '2'\nassert solution('15 7 5 3\\n') == '-1'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"????????\") == 2835\nassert solution(\"cbbbaaa\") == 0\nassert solution(\"a???c\") == 46\nassert solution(\"cccbbbaaa\") == 0\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ac?b?c') == 24\nassert solution('cccbbbaaa') == 0\nassert solution('???????') == 2835\nassert solution('a???c') == 46\nassert solution('ac?b?c') == 24\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\nac?b?c\n''') == '24'\nassert solution('''7\n???????\n''') == '2835'\nassert solution('''9\ncccbbbaaa\n''') == '0'\nassert solution('''5\na???c\n''') == '46'\nassert solution('''10\nabc?def?ghi?jkl?m?n?\n''') == '0'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"????????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46\n\n\n\"\"\""
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''ac?b?c''') == 24\nassert solution('''???????''') == 2835\nassert solution('''cccbbbaaa''') == 0\nassert solution('''a??cc''') == 46\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc?abc') == 0\nassert solution('ac?b?c') == 24\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == 0\nassert solution('a?b?c?b?c?') == 46\nassert solution('a?b?c?b?c?b?c?') == 46\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\nab?cd?''') == '6'\nassert solution('''2\nab?cd?''') == '1'\nassert solution('''3\nc?d?ef?g?h?i?j?k?''') == '10'\nassert solution('''4\na?b?c?d?e?f?g?h?i?j?k?l?m?n?''') == '20'\nassert solution('''5\na?b?c?d?e?f?g?h?i?j?k?l?m?n?''') == '1'\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('a?') == 1\nassert solution('aa?') == 3\nassert solution('aab?') == 3\nassert solution('aaba?') == 6\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 3 5') == '1'\nassert solution('2 1 1') == '5'\nassert solution('1 3 3 7') == '15'\nassert solution('4 0') == '16'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1\\n0\\n0') == 0\nassert solution('1\\n0\\n0\\n0\\n0') == 0\nassert solution('1\\n3\\n1\\n2\\n1') == 5\nassert solution('1\\n3\\n1\\n2\\n1\\n1\\n1\\n1\\n1') == 10\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\nassert solution('5 4') == '18'\nassert solution('1 2 3 4 5') == '18'\n\n\n-----Plan-----\n1. Find the all the all connected components\n2. Check if there's an edge between two components\n3. Update the answer when possible\n4. Repeat the process for all the edges\n\n\n-----Algorithm-----\n\nCreate the graph with all the edges from the input\nCalculate all the connected components\nFor every two connected components, check if there's an edge between them\nUpdate the answer when possible\n\n\n-----Alternate Solution-----\nfrom math import inf"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input('')) == output('')\n'''\n'''\n---A---\n---B---\n---C---\n\n'''\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n') == '5'\nassert solution('3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n') == '16'\nassert solution('4 0\\n1 3 3 7\\n2 3 5\\n2 1 1\\n') == '18'\nassert solution('5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n') == '18'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 0') == '16'\nassert solution('3 2') == '5'\nassert solution('5 4') == '18'\nassert solution('1 0') == '1'\nassert solution('1 3 3 7') == '5'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2''') == '5'\nassert solution('''4 0''') == '16'\nassert solution('''5 4''') == '18'\nassert solution('''4 2''') == '5'\nassert solution('''4 2''') == '5'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2''') == '5'\nassert solution('''4 0''') == '16'\nassert solution('''5 4''') == '18'\n\n\n-----"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == '5'\nassert solution('5 0') == '16'\nassert solution('4 0') == '18'\nassert solution('5 4') == '18'\nassert solution('1 2 3 4 5') == '18'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input('')) == expect(input(''))\n\n'''\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == expected_output\n\"\"\""
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 1 1') == '45'\nassert solution('10 2 4') == '14'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1\\n0 9\\n0 5') == '-1'\nassert solution('10 1 1\\n0 9\\n1 5') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    input(\n        \"\"\"\n10 1 1\n0 9\n0 5\n    \"\"\"\n    )\n) == \"-1\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"5 6 5\") == \"No\"\nassert solution(\"7 5 5\") == \"Yes\"\nassert solution(\"8 7 7\") == \"No\"\nassert solution(\"5 5 5\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == \"Yes\"\nassert solution('5 3 7') == \"No\"\nassert solution('5 9 9') == \"No\"\nassert solution('8 8 8') == \"No\"\nassert solution('3 3 3') == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 6') == 'No'\nassert solution('7 5 7') == 'Yes'\nassert solution('7 5 4') == 'No'\nassert solution('5 7 6') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 5 5') == 'No'\nassert solution('2 1 5') == 'Yes'\nassert solution('4 5 4') == 'No'\nassert solution('6 6 6') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('3 2 1') == 'Yes'\nassert solution('5 9 9') == 'Yes'\nassert solution('5 7 5') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 7 7') == 'No'\nassert solution('5 7 8') == 'No'\nassert solution('5 9 5') == 'No'\nassert solution('5 9 6') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\na,b,c = map(int, stdin.strip().split())\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(5, 7, 5) == \"Yes\"\nassert solution(5, 3, 5) == \"No\"\nassert solution(1, 2, 3) == \"Yes\"\nassert solution(1, 1, 3) == \"No\"\nassert solution(1, 1, 1) == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 1') == 'No'\n\"\"\""
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1'\nassert solution('2\\n12 5\\n1000 2000\\n2000 3000') == '1'\nassert solution('2\\n12 5\\n1000 2000\\n2000 3000\\n3000 4000') == '2'\nassert solution('2\\n12 5\\n1000 2000\\n2000 3000\\n3000 4000\\n4000 5000') == '3'\nprint('All tests passed successfully')\n\"\"\""
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.splitlines()[-1]\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0') == ''\nassert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('5\\n5') == '0'\nassert solution('5\\n3') == '2'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('2\\n2\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1\\n2\\n1') == '2'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1'\nassert solution('2\\n12 5\\n1000 2000\\n100 1000') == '2'\nassert solution('2\\n12 5\\n1000 2000\\n100 1000\\n10 1000') == '1'\nassert solution('1\\n1 1') == '0'\nassert solution('1\\n1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"2\\n5 2\\n2 1\\n1 1\\n\") == \"2\\n\"\nassert solution(\"1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n12 5\n1000 2000\n''') == '1'\n'''\n\nn, T, A = map(int, stdin.readline().split())\nH = list(map(int, stdin.readline().split()))\nH.sort()\nmin_dist = abs(H[0]-A*0.006)\nfor i in range(1, n):\n    dist = abs(H[i]-A*0.006)\n    if dist < min_dist:\n        min_dist = dist\n        place = i\nprint(place)\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\\n0\\n\") == \"1\"\nassert solution(\"0\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\n2\\n0\\"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data\n\n\"\"\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == 1\nassert solution(\"2 2\") == 1\nassert solution(\"2 1\") == 0\nassert solution(\"0 0\") == 0\nassert solution(\"1 1\") == 1\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == 1\nassert solution(\"2 1\") == 1\nassert solution(\"4 1\") == 1\nassert solution(\"10 3\") == 5\nassert solution(\"1 3\") == 1\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '0'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('3 4') == '2'\nassert solution('2 3') == '2'\nassert solution('4 2') == '4'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 4\") == \"0\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 4') == '2'\nassert solution('3 5') == '1'\nassert solution('1 2') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''3 2''') == '1'\nassert solution('''1 2''') == '1'\nassert solution('''4 2''') == '0'\nassert solution('''1 2 3 4''') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"5 4\") == \"2\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3'\n\nprint(solution('''ACACTACG\n3 7\n2 3\n1 8\n'''))"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''ACACTACG''') == '''2\n0\n3'''\nassert solution('''ACACTACG''') == '''2\n0\n3'''\nassert solution('''ACACTACG''') == '''2\n0\n3'''\nassert solution('''ACACTACG''') == '''2\n0\n3'''\nassert solution('''ACACTACG''') == '''2\n0\n3'''\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ACACTACG') == '2\\n0\\n3'\nassert solution('ACACTACG\\n3 7\\n2 3\\n1 8') == '2\\n0\\n3'\nassert solution('ACACTACG\\n3 7\\n2 3\\n1 8\\n2 6') == '2\\n0\\n3'"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''ACACTACG''') == '''ACACTACG'''\nassert solution('''A''') == '''A'''\nassert solution('''A''') == '''A'''\nassert solution('''GGGTGGGTTTGGCGGTGGTGGCGGTGGTGGGAGG''') == '''GGGTGGGTTTGGCGGTGGTGGCGGTGGTGGGAGG'''\nassert solution('''AAGCGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCTCGATGTTATCTTAAATCCGGCTGCGGCT"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n'''\nACACTACG\n3 7\n2 3\n1 8\n'''\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ACACTACG') == '2'\nassert solution('CTTTCAGAGAC') == '3'\nassert solution('ACTCTTTAGACCTAGCT') == '2'\nassert solution('CCCTTTAGAGACCTAGCT') == '0'\nassert solution('CTTCAGAGACCTAGCT') == '3'\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ACACTACG\") == \"ACAC\"\nassert solution(\"ACACTACG\") == \"ACAC\"\nassert solution(\"ACACTACG\") == \"ACAC\"\nassert solution(\"ACACTACGTACG\") == \"ACACGTACG\"\nassert solution(\"ACACTACGTACG\") == \"ACACGTACG\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\n'''\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ACACTACG') == '2'\nassert solution('ACACTACGA') == '0'\nassert solution('ACACTACGG') == '3'\nprint(solution(input()))\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 3') == '210'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[1].strip()\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 2\") == \"100\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"10 10\") == \"200\"\nassert solution(\"2 3\") == \"10\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10\\n10 10\\n10 10\\n10 10') == '0'\nassert solution('5 4\\n50 100 100 100 100') == '270'\nassert solution('5 4\\n50 100 100 100 100\\n10 10 10 10 10') == '280'\nassert solution('7 7\\n
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n50 100 80 120 80''') == '210'\nassert solution('''5 4\n50 100 80 120 80''') == '280'\nassert solution('''5 5\n50 100 80 120 80''') == '370'\nassert solution('''1 2\n10 20 30 40''') == '10'\nassert solution('''7 4\n2 5 8 9 10 17''') == '31'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 1') == '50'\nassert solution('5 1') == '50'\nassert solution('5 100') == '100'\nassert solution('50 0 100 0 100') == '0'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 5\") == \"60\"\nassert solution(\"50 3\") == \"210\"\nassert solution(\"5 3\") == \"60\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '3'\nassert solution('4 2') == '7'\nassert solution('3 10') == '30'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n50 100 80 120\\n') == '210'\nassert solution('3 1\\n50 100 80 120\\n') == '110'\nassert solution('2 2\\n2 2\\n1 1\\n') == '0'\nassert solution('3 3\\n1 2 3\\n5 4 5\\n') == '9'\nassert solution('4 3\\n1 2 3 4\\n2 2 2 2\\n1 1 2 3\\n') == '7'\n"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 2') == '1'\nassert solution('1 2\\n2 2') == '2'\nassert solution('1 2\\n2 2') == '2'\nassert solution('1 2\\n2 2') == '4'\nassert solution('1 2\\n2 2') == '8'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('2 3 2') == '5'\nassert solution('4 2 3') == '7'\nassert solution('20 10 5') == '20'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(4)\n\"\"\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 3 5') == '4'\nassert solution('2 1 3') == '3'\nassert solution('1 2 3') == '3'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '6'\nassert solution('1 2 3 4 5') == '10'\nassert solution('1 2 3 4 5 6') == '12'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\n\"\"\"\n\n\"\"\"\nBelow is the code that we were given for this question.\nWe just need to use the helper method below to find the minimum time for all combinations of flights.\n\"\"\"\n\nfrom typing import Tuple"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('2 2 2') == '2'\nassert solution('1000 100000 1000') == '4000000'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('2 2 2') == '3'\nassert solution('100 200 300') == '123'\nassert solution('1 10 1') == '2'\nassert solution('1 10 1') == '2'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '4'\nassert solution('1 3 4') == '4'\nassert solution('1 4 3') == '4'\nassert solution('1 4 4') == '4'\nassert solution('1 3 1') == '3'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(3, 5) == 0\nassert solution(3, 1) == 10\nassert solution(0, 1) == 10\nassert solution(2, 3) == 0\nassert solution(3, 3) == 0\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"0\"\nassert solution(\"4 2\") == \"10\"\nassert solution(\"0 9\") == \"0\"\nassert solution(\"0 9\") == \"10\"\nassert solution(\"9 9\") == \"10\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"0\"\nassert solution(\"5 6\") == \"10\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"10 5\") == \"10\"\nassert solution(\"8 7\") == \"10\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"9 10\") == \"10\"\nassert solution(\"10 9\") == \"0\"\nassert solution(\"8 10\") == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '0'\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '10'\nassert solution(input()) == '0'\nassert solution(input()) == '10'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"0\"\nassert solution(\"1 2\") == \"10\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"7 8\") == \"10\"\nassert solution(\"9 7\") == \"10\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1') == '0'\nassert solution('1 3') == '10'\nassert solution('4 5') == '10'\nassert solution('5 9') == '0'\nassert solution('9 7') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 5') == '0'\nassert solution('3 8') == '10'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n7 4\n''') == '1'\nassert solution('''\n1000000000000 1\n''') == '1'\nassert solution('''\n5 1000000000\n''') == '10'\nassert solution('''\n1 1000000000\n''') == '1'\nassert solution('''\n1 1\n''') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 4') == '1'\nassert solution('5 2') == '3'\nassert solution('10 4') == '1'\nassert solution('10 4') == '1'\nassert solution('100 5') == '3'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 4') == '1'\nassert solution('9 5') == '2'\nassert solution('10 1') == '1'\nassert solution('100000 100000') == '1'\nassert solution('100001 100000') == '2'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == '1'\nassert solution('100 100') == '0'\nassert solution('10 10000000') == '900000000'\nassert solution('8 4') == '1'\nassert solution('7 4') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\n\"\"\"\nimport sys"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[:-1]"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"7 7\") == \"1\"\nassert solution(\"10000000 9999\") == \"9999998\"\nassert solution(\"100000000 99999\") == \"9999999\"\nassert solution(\"10001001 1000\") == \"10001000\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'win'\n\nassert solution(stdin) == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\nassert solution(\"3 1 2\") == \"win\"\nassert solution(\"10 22 19\") == \"bust\"\nassert solution(\"19 19 19\") == \"bust\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'win'\n\n\"\"\""
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 7\") == \"bust\""
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('9 7 5') == 'bust'\nassert solution('1 2 3') == 'win'\nassert solution('3 2 1') == 'bust'\nassert solution('7 4 2') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"win\"\nassert solution(\"1 2 5\") == \"bust\"\nassert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 7 10\") == \"bust\"\nassert solution(\"1 3 4\") == \"win\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"win\"\n\"\"\"\n\nA,B,C = [int(x) for x in stdin.split()]\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'bust'\nassert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 7 9''') == 'win'\nassert solution('''5 6 7''') == 'bust'\nassert solution('''5 6 7''') == 'bust'\nassert solution('''5 6 7''') == 'bust'\nassert solution('''5 6 7''') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'win'\n'''\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('1000000') == '1000000'\nassert solution('310010') == '6'\nassert solution('6') == '6'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"999\") == \"1\"\nassert solution(\"100000000\") == \"100000000\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(3) == 6\nassert solution(7) == 26\nassert solution(8) == 32\nassert solution(9) == 42\nassert solution(10) == 52\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\"\n\"\"\""
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '6'\n\n\"\"\"\n\"\"\"\nIDEA:\n\nHINT:\n\n1. If N = 2k, then 2k divides N - 1, so we know that 2k divides N - 2k - 1, 2k divides N - 3k - 1,..., 2k divides N - (k-1) - 1.\n\"\"\""
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 6\nassert solution('4') == 4\nassert solution('5') == 10\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('6') == '6'\nassert solution('9') == '3'\nassert solution('10') == '2'\nassert solution('11') == '3'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1') == '2'\nassert solution('2 2') == '1'\nassert solution('6 4') == '2'\n\"\"\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"20 5\") == \"11\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2') == '2'\nassert solution('6 2') == '2'\nassert solution('6 2') == '2'\nassert solution('6 2') == '2'\nassert solution('6 2') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\""
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 5') == '2'\nassert solution('4 1') == '3'\nassert solution('10 4') == '2'\nassert solution('3 5') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 2''') == \"2\"\nassert solution('''1 1''') == \"1\"\nassert solution('''20 1''') == \"2\"\nassert solution('''10 2''') == \"2\"\nassert solution('''2 10''') == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == 2\nassert solution(\"2 1\") == 2\nassert solution(\"1 1\") == 1\nassert solution(\"10 1\") == 1\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == 2\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"5 6\") == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"7 2\") == \"3\"\nassert solution(\"8 2\") == \"4\"\nassert solution(\"9 2\") == \"5\"\nassert solution(\"10 2\") == \"6\"\n\"\"\"\n\"\"\"\nSolution:\nIn this question, we know that, for a given tree, it will have N/2 apples and N/2 non-apples, the tree will be initially empty.\n\nWhen we need to deploy an inspector, the tree will have N/2 apples and N/2 non-apples, the tree will initially be filled with the apples.\n\nWe can deploy one inspector at a time, and after that, we can deploy another one, or more.\n\nWe can iterate through the array, and keep a count of the apples and non-apples.\nIf the current number of apples is greater than the number of non-apples, we will add an inspector.\n\"\"\"\nN, D = [int(n) for n in stdin.split(' ')]\ncount = 0\nfor i in range(1, N):\n    if (i > D):\n        count += 1\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"6\") == \"bon\"\nassert solution(\"789\") == \"hon\"\nassert solution(\"56\") == \"bon\"\nassert solution(\"12\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('16') == 'pon'\nassert solution('9') == 'bon'\nassert solution('11') == 'hon'\nassert solution('902') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"1000\") == \"hon\"\nassert solution(\"1001\") == \"hon\"\nassert solution(\"5\") == \"bon\"\nassert solution(\"999\") == \"hon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('16') == 'pon'\nassert solution('1234567') == 'bon'\nassert solution('12345678') == 'hon'\nassert solution('123456789') == 'hon'\nassert solution('1234567890') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"500\") == \"bon\"\nassert solution(\"20\") == \"hon\"\nassert solution(\"891\") == \"pon\"\nassert solution(\"23\") == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('11') == 'pon'\nassert solution('10') == 'bon'\nassert solution('12') == 'pon'\nassert solution('99') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('16') == 'pon'\nassert solution('1') == 'pon'\nassert solution('2') == 'hon'\nassert solution('3') == 'bon'\nassert solution('4') == 'pon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\n\"\"\"\nPunctuality\n\"\"\"\n\nimport unittest\n\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        pass\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('16') == 'pon'\nassert solution('101') == 'hon'\nassert solution('12') == 'pon'\nassert solution('1234') == 'hon'\nassert solution('9999') == 'hon'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2') == '11'\n\"\"\""
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2\\n') == '11'\nassert solution('3\\n3 2 1\\n') == '6'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n2 1\\n') == '1'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"55\"\nassert solution(\"20\\n
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n3 1 2\n\"\"\") == \"11\"\nassert solution(\"\"\"3\n4 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"7\n8 9 10\n\"\"\") == \"28\"\nassert solution(\"\"\"7\n11 12 13\n\"\"\") == \"11\"\nassert solution(\"\"\"50\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n\"\"\") == \"443984\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 1 2''') == \"11\"\nassert solution('''10\n1 1 2 2 3 3 4 4 5 5''') == \"34\"\nassert solution('''100\n
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2\\n') == '11'\nassert solution('3\\n1 2 3\\n') == '6'\nassert solution('3\\n1 2\\n3 4 5\\n') == '15'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"1 1 2\") == \"3\"\nassert solution(\"2 3 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"3 4 3\") == \"10\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '11'\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('3') == ''\nassert solution('3 1 2') == ''\nassert solution('3 1 2\\n2 1 3') == ''\nassert solution('3\\n3 1 2\\n2 1 3') == ''\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2') == \"11\"\nassert solution('3\\n3 1 2\\n2 1 3') == \"10\"\nassert solution('3\\n3 1 2\\n2 1 3\\n3 1 2') == \"15\"\nassert solution('2\\n2 1') == \"1\"\nassert solution('2\\n2 1\\n1 1') == \"2\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3 1 4 3\") == \"4\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n3\n''') == '3\\n1\\n'\nassert solution('''2\n2\n1\n2\n''') == '2\\n2\\n'\nassert solution('''3\n1\n2\n3\n''') == '4\\n3\\n2\\n'\nassert solution('''4\n1\n2\n3\n4\n''') == '4\\n3\\n4\\n'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '5\\n4\\n3\\n2\\n1\\n'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n4') == '4\\n3\\n4'\nassert solution('3\\n1\\n4') == '4\\n3\\n4'\nassert solution('3\\n4\\n1') == '4\\n3\\n4'\nassert solution('3\\n4\\n3') == '4\\n3\\n4'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '5\\n4\\n5\\n5\\n5'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n2\n3\n3''') == '3\\n3\\n3'\nassert solution('''3\n2\n3\n4''') == '3\\n4\\n4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n4\n3''') == '4\\n3\\n4'\nassert solution('''2\n2\n2''') == '2\\n2\\n2'\nassert solution('''5\n1\n4\n3\n2\n5''') == '4\\n3\\n4\\n2\\n5'\nassert solution('''6\n1\n4\n3\n2\n5\n6''') == '4\\n3\\n4\\n2\\n5\\n6'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n3\\n') == '4\\n3\\n4'\nassert solution('2\\n1\\n4\\n3\\n') == '3\\n4\\n3'\nassert solution('4\\n1\\n2\\n3\\n') == '3\\n2\\n3'\nassert solution('3\\n1\\n2\\n3\\n') == '2\\n3\\n3'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n') == '5\\n4\\n5'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\n\nassert solution('''3\n1\n4\n2''') == '4\\n2\\n3'\n\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '10\\n9\\n10'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n1\\n4\\n3') == '3\\n4\\n3'\nassert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\nassert solution('4\\n1\\n4\\n3') == '3\\n4\\n3'\nassert solution('5\\n1\\n4\\n3') == '4\\n3\\n4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3\n1\n4\n3''') == '4\\n3\\n4','should return 4\\n3\\n4'\nassert solution(\n'''1\n4\n3''') == '4','should return 4'\nassert solution(\n'''2\n1\n2''') == '2','should return 2'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '1\\n'\n    '1'\n) == '2'\nassert solution(\n    '3\\n'\n    '1\\n'\n    '4'\n) == '4'\nassert solution(\n    '4\\n'\n    '1\\n'\n    '4\\n'\n    '3'\n) == '4'\nassert solution(\n    '4\\n'\n    '2\\n'\n    '4\\n'\n    '3'\n) == '4'\nassert solution(\n    '5\\n'\n    '1\\n'\n    '1\\n'\n    '1\\n'\n    '3'\n) == '3'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3''') == '9'\nassert solution('''4 7''') == '16'\nassert solution('''6 4''') == '22'\nassert solution('''12 10''') == '36'\nassert solution('''12 1''') == '11'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"7 10\") == \"21\"\nassert solution(\"10 4\") == \"18\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"7 2\") == \"10\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3\\n5 1\\n6 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2') == '16'\nassert solution('5 4\\n5 1\\n6 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2\\n5 2') == '15'\nassert solution('5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n5 1\\"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A 2') == '0'\nassert solution('B 3') == '2'\nassert solution('3 5') == '8'\nassert solution('5 3') == '8'\nassert solution('10 4') == '15'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_f_7_2) == input_f_7_2_expected\nprint(solution(input_f_7_2))\n\"\"\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 10') == '29'\nassert solution('5 9') == '29'\nassert solution('5 9') == '29'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 1') == '5'\nassert solution('5 3') == '9'\nassert solution('2 7') == '7'\nassert solution('2 0') == '0'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '3'\nassert solution('5 5') == '3'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"5 7\") == \"14\"\nassert solution(\"6 7\") == \"19\"\nassert solution(\"7 7\") == \"22\"\nassert solution(\"8 7\") == \"25\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3''') == '9'\nassert solution('''10 15''') == '18'\nassert solution('''100 1000''') == '10000'\nassert solution('''1 1''') == '2'\nassert solution('''1000 1000''') == '10000'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '40'\n\n\"\"\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '8'\nassert solution('1 3') == '5'\nassert solution('5 3') == '8'\nassert solution('3 5') == '8'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '40'\nassert solution('6 5') == '24'\nassert solution('2 10') == '16'\nassert solution('20 5') == '8'\n\"\"\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('-30 -10 10 20 50') == '40'\nassert solution('5 3') == '40'\nassert solution('0 0') == '0'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"-30 -10 10 20 50\") == \"40\"\n\"\"\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 3\n-30 -10 10 20 50\n\"\"\"\n) == \"40\"\nassert solution(\n\"\"\"\n6 4\n-30 -10 10 20 50 60 90\n\"\"\"\n) == \"48\"\nassert solution(\n\"\"\"\n6 5\n-30 -10 10 20 50 60 90\n\"\"\"\n) == \"48\"\nassert solution(\n\"\"\"\n10 4\n-30 -10 10 20 50 60 90 100 110 130 150 160 180 190\n\"\"\"\n) == \"48\"\nassert solution(\n\"\"\"\n9 2\n-30 -10 10 20 50 60 90 100 110 130 150 160 180 190\n\"\"\"\n) == \"28\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"40\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n-30 -10 10 20 50''') == '40'\n'''\n    N, K = list(map(int, stdin.split()))\n    x = list(map(int, stdin.split()))\n    y = [0] * N\n\n    for i in range(0, K):\n        y[i] = abs(x[i] - x[0])\n\n    for i in range(1, N):\n        for j in range(0, N - i):\n            y[j] = min(y[j], abs(x[j + i] - x[j]))\n\n    return str(y[0])\n\nassert solution('''5 3\n-30 -10 10 20 50''') == '40'\nassert solution('''5 3\n-30 -10 10 20 50''') == '40'\nassert solution('''5 1\n1''') == '1'\nassert solution('''10 4\n-3 -5 1 4 6 10 13 15 18 19''') == '5'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"8 13\") == \"2\"\nassert solution(\"8 17\") == \"0\"\nassert solution(\"8 27\") == \"3\"\nassert solution(\"8 35\") == \"1\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 13') == '2'\nassert solution('9 13') == '3'\nassert solution('13 13') == '4'\nassert solution('13 9') == '5'\nassert solution('13 2') == '7'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 5') == '4'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"20 22\") == \"1\"\nassert solution(\"10 11\") == \"2\"\nassert solution(\"21 22\") == \"3\"\nassert solution(\"11 22\") == \"4\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 2') == '0'\nassert solution('1 2 3') == '1'\nassert solution('2 2') == '1'\nassert solution('1 2 3 4 5') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 13''') == '2'\nassert solution('''4 5''') == '4'\nassert solution('''13 15''') == '2'\nassert solution('''1 2''') == '1'\nassert solution('''3 4''') == '3'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 13') == '2'\nassert solution('10 15') == '2'\nassert solution('15 16') == '4'\nassert solution('20 25') == '3'\nassert solution('500 500') == '0'\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"8 13\") == \"2\"\nassert solution(\"8 15\") == \"0\"\nassert solution(\"8 9\") == \"1\"\nassert solution(\"8 1\") == \"1\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\""
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"100 5\") == \"0\"\nassert solution(\"10 6\") == \"2\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n\n\"\"\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 4') == '3'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 10') == '8'\nassert solution('100 1000') == '100'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'\nassert solution('5 2') == '1'\nassert solution('10 5') == '3'\nassert solution('4 5') == '3'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(10, 4) == '3'\nassert solution(9, 3) == '2'\nassert solution(1, 1) == '0'\nassert solution(10, 3) == '3'\nassert solution(10, 4) == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 4''') == '3'\nassert solution('''1 1''') == '2'\nassert solution('''10 5''') == '5'\nassert solution('''100 1''') == '10'\nassert solution('''100 0''') == '99'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 4') == '3'\n\"\"\""
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 4') == '3'\nassert solution('1 1') == '0'\nassert solution('10 1') == '1'\nassert solution('10 10') == '0'\nassert solution('1000 1') == '1000'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split(' ')[-1]\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"0 75 25 100\"\"\") == \"50\"\nassert solution(\n    \"\"\"0 10 15 50\"\"\") == \"25\"\nassert solution(\n    \"\"\"0 10 15 50\"\"\") == \"15\"\nassert solution(\n    \"\"\"0 30 40 100\"\"\") == \"50\"\nassert solution(\n    \"\"\"0 50 30 100\"\"\") == \"25\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '50'"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 75 25 100') == '50'"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '50'"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(0, 25, 100) == 50\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 25 100') == '50'"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '8'\nassert solution('''100''') == '25'\nassert solution('''1000''') == '1497'\n'''\nfor test_input, expected in [('', '0'),\n('3', '0'),\n('10', '2'),\n('25', '1'),\n('100', '25'),\n('1000', '1497'),\n('17', '0'),\n('29', '0'),\n('1000', '4441'),\n('1000', '4439'),\n('10000', '103937'),\n('200', '1168329')]:\n    actual = solution(test_input)\n    if actual == expected:\n        print('Passed: {0} --> {1}'.format(test_input, actual))\n    else:\n        print('Failed: {0} --> {1}'.format(test_input, actual))"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''105\n''') == '1'\nassert solution('''100\n''') == '0'\nassert solution('''105\n''') == '1'\nassert solution('''110\n''') == '0'\nassert solution('''200\n''') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"100\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"200\") == \"\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('105') == '1'\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1' * 10000) == '1'\nassert solution('2' * 10000) == '2'\nassert solution('3' * 10000) == '3'\nassert solution('4' * 10000) == '4'\nassert solution('5' * 10000) == '5'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('105\\n') == '1'\nassert solution('100\\n') == '0'\nassert solution('1000\\n') == '30'\nassert solution('200\\n') == '1'\nassert solution('3\\n') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6''') == '1'\nassert solution('''105''') == '1'\nassert solution('''1000''') == '0'\nassert solution('''300''') == '2'\nassert solution('''500''') == '0'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n105\n''') == '1'\n\nassert solution(\n'''\n101\n''') == '0'\n\nassert solution(\n'''\n10110001\n''') == '10'\n\nassert solution(\n'''\n10\n''') == '1'\n\nassert solution(\n'''\n1000\n''') == '9'\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''105''') == '1'\nassert solution('''1055''') == '0'\nassert solution('''912''') == '5'\nassert solution('''100''') == '0'\nassert solution('''1000''') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n7 3\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n9 8\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n10 1\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n10 3\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n100 9\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:3]\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"7 8\") == \"1\"\nassert solution(\"6 4\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"7 7\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input('')) == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3') == '1'\nassert solution('8 3') == '2'\nassert solution('3 2') == '1'\nassert solution('4 1') == '0'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3') == '1'\nassert solution('1 1') == '0'\nassert solution('2 4') == '0'\nassert solution('4 3') == '1'\nassert solution('12 12') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2') == '1'\nassert solution('7\\n3') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1'\nassert solution('7 3') == '1'\nassert solution('5 3') == '0'\nassert solution('1 1') == '0'\nassert solution('100000 100000') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3') == 1\nassert solution('3 10') == 0\nassert solution('8 2') == 1\nassert solution('2 3') == 0\nassert solution('3 4') == 1\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1111') == '1111'\nassert solution('1110') == '1111'\nassert solution('1011') == '1011'\nassert solution('100') == '100'\nassert solution('12') == '100'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('111') == 111\n\"\"\"\nfrom math import log10"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('111') == '111'\nassert solution('2') == '01'\nassert solution('123') == '012'\nassert solution('1234') == '0123'\nassert solution('12345') == '01234'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == '11'\nassert solution('1') == '1'\nassert solution('011') == '1'\nassert solution('001') == '1'\nassert solution('101') == '11'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"11111\") == \"111\"\nassert solution(\"11111111\") == \"111\"\nassert solution(\"100\") == \"111\"\nassert solution(\"12345\") == \"1234\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"111\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"111\") == \"111\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1234567\") == \"1234567\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(sample_input) == '111'\n'''\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('111') == '111'\nassert solution('12') == '12'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\nassert solution('123434') == '123434'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"100\") == \"100\"\nassert solution(\"999\") == \"999\"\nassert solution(\"11\") == \"11\"\nassert solution(\"1111\") == \"1111\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 1 1') == '0'\nassert solution('1 2 1') == '2'\nassert solution('3 1 1') == '4'\nassert solution('4 5 1') == '6'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 -3\") == \"5\"\nassert solution(\"2 4 -1\") == \"2\"\nassert solution(\"2 4 -1\") == \"2\"\nassert solution(\"2 -1 4\") == \"2\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5'\n\"\"\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 4\") == \"6\"\nassert solution(\"1 6 5\") == \"1\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 3 6') == '5'\nassert solution('1 3 2') == '5'\nassert solution('1 2 3') == '5'\nassert solution('1 2 1') == '5'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"2 10 3\") == \"7\"\nassert solution(\"10 15 16\") == \"10\"\nassert solution(\"15 22 17\") == \"7\"\nassert solution(\"100 100 100\") == \"0\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('3 1 2') == '0'\nassert solution('1 2 3') == '5'\nassert solution('1 2 3 4') == '7'\nassert solution('1 2 3 4 5') == '10'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 6 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 3') == '4'\nassert solution('2 3 4') == '2'\nassert solution('2 3 4 5') == '2'\nassert solution('3 4 5 6') == '2'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"8\") == \"5\"\nassert solution(\"10\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"100\") == \"7\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('8') == '5'\nassert solution('1') == '1'\nassert solution('100') == '1'\nassert solution('1000000') == '1'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('6') == '4'\nassert solution('8') == '5'\nassert solution('14') == '7'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8''') == '5'\nassert solution('''4''') == '5'\nassert solution('''2''') == '5'\nassert solution('''1''') == '5'\nassert solution('''4''') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '5'\nassert solution('2') == '5'\nassert solution('1') == '5'\nassert solution('14') == '10'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '5'\nassert solution('2') == '5'\nassert solution('1') == '5'\nassert solution('16') == '15'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"99\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('7') == '4'\nassert solution('45') == '9'\nassert solution('1') == '1'\nassert solution('4567') == '23'\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\nassert solution('1') == '1'\nassert solution('10') == '5'\nassert solution('100') == '25'\nassert solution('1000') == '125'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 8 7 9\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 1 10\") == \"Yes\"\nassert solution(\"10 9 1 10\") == \"Yes\"\nassert solution(\"10 9 1 9\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('9 9 9 9 9') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('4 3 2 1') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('9 9 10 10') == 'No'\nassert solution('9 10 10 10') == 'No'\nassert solution('10 9 9 10') == 'Yes'\nassert solution('1 1 1 1') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'No'\n\n\"\"\"\n\n\"\"\"\nNote:\n\nYou can assume that A\u2264B\u2264D is guaranteed, and B\u2264D.\n\"\"\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Takahashi\\nAoki\\n') == 'No'\nassert solution('10 10 10 10\\n') == 'Yes'\nassert solution('10 9 10 10\\n') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 9 10 10''') == 'No'\nassert solution('''10 9 10 10''') == 'Yes'\nassert solution('''10 9 10 10''') == 'No'\nassert solution('''10 9 10 10''') == 'Yes'\nassert solution('''10 9 10 10''') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 9 10 10') == \"No\"\nassert solution('10 9 11 10') == \"Yes\"\nassert solution('10 9 10 10') == \"No\"\nassert solution('10 9 10 11') == \"Yes\"\nassert solution('10 9 10 11') == \"No\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n2\\n3\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\\n1 1 2 2 3\") == \"7\"\nassert solution(\"5\\n1 2 3 4 5\\n1 1 1 1 1\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"5\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('3\\n10 2 5\\n6 7') == '6'\nassert solution('4\\n10 4 2 5 4\\n2 1 3 4') == '6'\nassert solution('5\\n10 1 1 1 1\\n2 1 2 3 4') == '10'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''10\n2 5\n6 3 4''') == '5', 'error'\n'''\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3') == '3'\nassert solution('3\\n1 3\\n2 3') == '3'\nassert solution('2\\n1 2\\n1 1') == '2'\nassert solution('10\\n10 2 5\\n10 3 4') == '5'\nassert solution('10\\n10 2 5\\n10 3 4\\n1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('3\\n3 4 4\\n5 5 6') == '5'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 1') == '0'\nassert solution('3\\n10 2 5\\n6 3 4') == '5'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n10 2 5\n6 3 4''') == '5'\nassert solution('''2\n4\n2\n4\n4''') == '0'\nassert solution('''6\n1 1 1 1 1 1 1\n8\n8''') == '1'\nassert solution('''10\n4 2 3 4 5 6 7 8 9 10\n3\n3 2 3''') == '4'\nassert solution('''15\n5\n3 3 4 4 5 5 6 6 7 7 8 8 9 10 11 12 13 14 15\n3\n3 2 3''') == '10'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"1\\n100 1\") == \"100\"\nassert solution(\"10\\n1 1\\n1 1\") == \"1\"\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\nassert solution('''\n1 1\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''H 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\nassert solution(\n'''3 3\n##\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('##.#') == '###'\nassert solution('##..') == '##'\nassert solution('#.#') == '#'\nassert solution('#.###') == '###'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''10 10\n..#....#.#..\n.##..#.#...\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###'\nassert solution('''10 10\n##.#.#.#\n#####\n.#.###\n.#.#.##\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#\\n') == '###\\n###\\n.##\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('\\n'.join([\n    '4 4',\n    '##.#',\n    '....',\n    '##.#',\n    '.#.#',\n])) == '###\\n###\\n.##\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\nprint(solution(INPUT))\n\"\"\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###'\n\nassert solution('''1 1\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 6.28318530717958623200\nassert solution('2') == 10.0\nassert solution('3') == 12.566370614359172\nassert solution('4') == 14.66\nassert solution('5') == 16.61512265639308\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '6.28318530717958623'\nassert solution('3') == '28.274333882308138'\nassert solution('4') == '45.849056603773585'\nassert solution('5') == '66.94829715053776'\nassert solution('6') == '91.44186493657329'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '6.28318530717958623200'\nassert solution('3') == '6.28318530717958623200'\nassert solution('4') == '6.28318530717958623200'\nassert solution('5') == '6.28318530717958623200'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '6.3710938742979572736'\nassert solution('3') == '9.4247779607693797154'\nassert solution('4') == '12.566370614359179864'\nassert solution('5') == '16.066370614359179864'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == 6.28318530717958623200\nassert solution(\"2\") == 8.54448584081697755\nassert solution(\"3\") == 10.633206723156776\nassert solution(\"4\") == 12.5731159336575478\nassert solution(\"5\") == 14.43638739996487\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"1\") == \"6.28318530717958623200\"\n\nprint(solution(\"1\"))"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '6.28318530717958623200'\nassert solution('1') == '6.28318530717958623200'\nassert solution('2') == '6.28318530717958623200'\nassert solution('3') == '6.28318530717958623200'\nassert solution('4') == '6.28318530717958623200'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '10.82123964111473493'\nassert solution('5') == '26.633507936507936'\nassert solution('7') == '49.27593537106543'\nassert solution('10') == '83.84577709901'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('0') == '0.0'\nassert solution('0.001') == '6.28318530717958623200'\nassert solution('1.00000001') == '6.28318530717958623200'\nassert solution('1.00000002') == '6.28318530717958623200'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == '6.28318530717958623200'\nassert solution(2) == '12.566370614359172'\nassert solution(3) == '1.0471975511965976'\nassert solution(4) == '1.38629436111989'\nassert solution(5) == '3.8461538461538462'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('SSAA') == 'No'\nassert solution('AAAA') == 'Yes'\nassert solution('AAAS') == 'Yes'\nassert solution('AAASSS') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    stdin\n) == 'Yes'\n\nassert solution(\n    'ASSS'\n) == 'Yes'\n\nassert solution(\n    'ASSA'\n) == 'No'\n\nassert solution(\n    'SSAS'\n) == 'No'\n\nassert solution(\n    'SSAS'\n) == 'Yes'"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"BBBBBBBBBB\") == \"No\"\nassert solution(\"SSSS\") == \"Yes\"\nassert solution(\"AAABBCDD\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('aaa') == 'No'\nassert solution('aaaa') == 'No'\nassert solution('ASASA') == 'Yes'\nassert solution('ASASASA') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ASAB\") == \"Yes\"\nassert solution(\"ASAB\") == \"No\"\nassert solution(\"SASS\") == \"Yes\"\nassert solution(\"ASFF\") == \"No\"\nassert solution(\"ASAS\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASSB') == 'No'\nassert solution('ASSAAS') == 'Yes'\nassert solution('ASSBA') == 'No'"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAS\") == \"No\"\nassert solution(\"ASAS\") == \"Yes\"\nassert solution(\"AASA\") == \"No\"\nassert solution(\"AASA\") == \"No\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('x') == 'No'\nassert solution('ABCD') == 'No'\nassert solution('AAA') == 'Yes'\nassert solution('ABAB') == 'Yes'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"SASS\") == \"No\"\nassert solution(\"SASSA\") == \"Yes\"\nassert solution(\"SASSS\") == \"No\"\nassert solution(\"ASSAS\") == \"Yes\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ASAS') == 'Yes'\nassert solution('AAAB') == 'No'\nassert solution('AAABBCD') == 'Yes'\nassert solution('ASB') == 'No'\nassert solution('BBBC') == 'Yes'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('10 10') == '0'\nassert solution('1 1') == '2'\nassert solution('5 6') == '11'\nassert solution('-1 -1') == '-2'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''-13 3''') == '-10'\nassert solution('''-14 3''') == '-7'\nassert solution('''-2 3''') == '-1'\nassert solution('''-100 6''') == '-99'\nassert solution('''-100 0''') == '-100'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''-13 3''') == '-10'\nassert solution('''-5 -5''') == '0'\nassert solution('''-0 -0''') == '0'\nassert solution('''-21 -2''') == '0'\nassert solution('''100 21''') == '21'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('9 10') == '-16'\nassert solution('123 345') == '456'\nassert solution('-123 345') == '-345'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 0') == '0'\nassert solution('100 200') == '200'\nassert solution('-55 -45') == '45'\nassert solution('5 8') == '13'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-13 3') == '-10'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    stdin + '\\n') == '-10'"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('4\\n6 5 6 8') == '3'\nassert solution('2\\n1') == '0'\nassert solution('4\\n1 2 3 4') == '0'\nassert solution('5\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == '1'\nassert solution(\"4\\n6 5 6 8\") == '3'\n\"\"\""
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 1') == '0'\nassert solution('1\\n1') == '1'\nassert solution('3\\n3 2 1') == '2'\nassert solution('10\\n4 3 2 1 5 6 8 7 6 9') == '3'\nassert solution('3\\n2 2 1') == '1'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 5 6 8') == '3'\nassert solution('1 2 3 4') == '1'\nassert solution('3 4 2 1') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('3 4 2 1') == '1'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('4 3 2 1') == '3'\nassert solution('1 5 4 3') == '3'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 1 2') == '2'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\nassert solution('''2\n2 1 2 3''') == '1'\nassert solution('''5\n3 4 4 6 8 9''') == '3'\nassert solution('''4\n3 4 4 6''') == '2'\nassert solution('''7\n1 2 3 4 5 6 7''') == '2'\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6 5 6 8\") == \"3\"\nassert solution(\"5\\n1 1 1 1 1\") == \"5\"\nassert solution(\"2\\n1 1\") == \"2\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '1'\nassert solution('2\\n3\\n4\\n5') == '2'\nassert solution('3\\n1\\n2\\n3') == '3'\nassert solution('4\\n1\\n2\\n3\\n4') == '3'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('2\\n1\\n1\\n1') == '2\\n1\\n1\\n1'\nassert solution('2\\n3\\n1\\n1') == '2\\n3\\n1\\n1'\nassert solution('3\\n3\\n3\\n3') == '3\\n3\\n3\\n3'\nassert solution('3\\n1\\n3\\n3') == '3\\n1\\n3\\n3'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '3\\n2\\n1\\n1\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '3\\n2\\n1\\n1\\n1\\n6'\nassert solution('3\\n3\\n3\\n3') == '6\\n3\\n3\\n3'\nassert solution('2\\n2\\n2\\n2') == '8\\n2\\n2\\n2'\nassert solution('4\\n4\\n4\\n4') == '16\\n4\\n4\\n4'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('7\\n1 2 3 1 2 3 4') == '2\\n3 4'\nassert solution('4\\n1 1 1 1') == '4\\n1 1 1 1'\nassert solution('5\\n1 2 1 2 1') == '1\\n5'\nassert solution('5\\n1 2 1 2 1') == '1\\n5'"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4 \\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1 \\n'\nassert solution('''5\n1 2 3 4 5\n''') == '1\\n5 \\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\nassert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4 \\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '1\\n5\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3''') == '3'\nassert solution('''5\n1\n1\n1\n1\n1''') == '3'\nassert solution('''5\n1\n2\n3\n4\n5''') == '2'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11''') == '5'\nassert solution('''12\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12''') == '4'\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '4'\nassert solution('''5\n1 2 1 2 1\n''') == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2,3\") == \"\"\nassert solution(\"2,3,4,5,6,7,8,9,10\") == \"\"\nassert solution(\"1,2,3,4,5,6,7,8,9,10\") == \"\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"3\\n1\") == \"1\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '7'\nassert solution('5\\n1') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '7'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n\") == \"1\"\nassert solution(\"28\\n\") == \"7\"\nassert solution(\"999999999\\n\") == \"333333333\"\nassert solution(\"999999984\\n\") == \"333333328\"\nassert solution(\"3\\n\") == \"1\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"7\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'\n\"\"\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3') == '1'\nassert solution('3\\n6') == '2'\nassert solution('3\\n7') == '1'\nassert solution('3\\n21') == '7'\nassert solution('3\\n28') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == 4\nassert solution('4') == 4\nassert solution('999999999') == 8589934592\nassert solution('999999984') == 9223372036854775808\nassert solution('7') == 7\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984''') == '1\\n2\\n1\\n7\\n4\\n33333333\\n333333328'\nassert solution('''1\n1\n1''') == '1\\n1\\n1'\nassert solution('''1\n1\n1\n1\n1\n1\n1''') == '1\\n1\\n1\\n1\\n1\\n1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('512 9') == '50'\nassert solution('10 9') == '0'\nassert solution('20 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1234') == '5'\nassert solution('12345') == '124'\nassert solution('1234567') == '123456'\nassert solution('12345678') == '1234567'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"100251065 0\") == \"1011\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"100251065 0\") == \"1011\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('200000000 100000000') == '100000000'\nassert solution('1000 100000000') == '100100000000'\n\n\n\"\"\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n'''\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('100000000099') == '1'\nassert solution('10000000009') == '0'\nassert solution('1000000000999') == '10'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\n\n-----"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('123456789 9') == '1234566'\nassert solution('99923456789 9') == '99992346'\nassert solution('987654321 9') == '987654'\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('51214 53 4') == '503'\nassert solution('1214142 1345 11') == '121345'\nassert solution('914142 13744 11') == '914141'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n5 2 3 1 2''') == '3'\nassert solution('''3\n7 5 4''') == '2'\nassert solution('''7\n2 2 3 2 1 2 2''') == '7'\nassert solution('''1\n1 1 1 1 1 1''') == '1'\nassert solution('''5\n4 3 1 5 4 3''') == '2'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1\n''') == '5\\n2 1 1 2 3\\n'\nassert solution('''5\n3 7 5 1 5\n''') == '2\\n5 5\\n'\nassert solution('''3\n5 1 4\n''') == '2\\n5 5\\n'\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '7\\n1 2 2 2 2 3 2\\n'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '5'\nassert solution('''5\n3 7 5 1 5\n''') == '2'\nassert solution('''3\n5 1 4\n''') == '2'\nassert solution('''10\n6 13 14 15 16 17 19\n''') == '7'\nassert solution('''10\n6 13 14 15 16 17 19\n''') == '7'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '5\\n2 1 1 2 3'\nassert solution('''7\n2 2 3 2 1 2 2''') == '7\\n1 2 2 2 2 3 2'\nassert solution('''5\n3 7 5 1 5''') == '2\\n5 5'\nassert solution('''5\n3 7 5 1 5''') == '2\\n5 5'\nassert solution('''5\n3 1 4''') == '2\\n4 5'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '5'\nassert solution('''5\n3 7 5 1 5''') == '2'\nassert solution('''3\n5 1 4''') == '2'\nassert solution('''7\n2 2 3 2 1 2 2''') == '7'\nassert solution('''5\n2 3 5 1 2 2''') == '2'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3 5 1 2 2 1''') == '5'\nassert solution('''7\n4 3 5 1 2 2 1''') == '2'\nassert solution('''5\n3 7 5 1 5''') == '2'\nassert solution('''2\n2 2 3 2 1 2 2''') == '7'\nassert solution('''7\n2 2 3 2 1 2 2''') == '1'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '5\\n2 1 1 2 3'\nassert solution('''5\n3 7 5 1 5''') == '2\\n5 5'\nassert solution('''3\n5 1 4''') == '2\\n5 5'\nassert solution('''7\n2 2 3 2 1 2 2''') == '7\\n1 2 2 2 2 3 2'\nassert solution('''7\n2 4 4 4 4 2 2''') == '7\\n2 2 2 2 2 4 4'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '2'\nassert solution('3\\n3\\n') == '3'\nassert solution('4\\n4\\n') == '2'\nassert solution('5\\n5\\n') == '5'\n"
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'\nassert solution('4 7\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'\n\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'\nassert solution('4 4\\n10 9\\n7 1\\n3 1') == '-1'\nassert solution('5 4\\n10 11\\n7 3\\n3 1') == '2'\nassert solution('6 4\\n10 9\\n7 1\\n3 1') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\n\nassert solution(\n'''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n8 7\\n2 5\\n10 5\\n9 5') == '4'\nassert solution('2 4\\n1 3\\n3 4\\n5 2\\n2 2') == '-1'\nassert solution('3 2\\n1 1\\n2 3') == '-1'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input('')) == input('')\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n'''"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n5 4\") == \"1\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n5 4\\n5 4\") == \"0\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n5 4\\n5 4\\n5 4\") == \"3\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'\nassert solution('4 10\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n\n\"\"\"\nApproach:\n\n1. We have to create the string that we're looking for.\n2. We know that the length of the string is at most 2000, so we can generate all the strings of length at most 2000.\n3. We use a visited set to prevent duplicates.\n4. We check for uniqueness using the visited set.\n5. We return the string if it's length is <= 2000.\n6. We use a subroutine that tests all the lengths up to 2000.\n7. We create a list of length-2000 strings.\n8. We sort the strings.\n9. We return the first string in the list.\n\nThis is O(nk2), where n is the length of the string, and k is the length of the string (2000), so we can do this in O(nk log(nk)) time.\n\nFor the first test case, we do this twice:\n\n1. Check for uniqueness using the visited set.\n2. Check for uniqueness using the visited set.\n\nThis is O(nk) time.\n\"\"\""
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('tleelte') == 'tleelte'\nassert solution('qwerty') == 'vvvvvv'\nassert solution('abcde') == 'abcde'\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10000)\nfrom itertools import combinations\nfrom collections import Counter"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'tleelte'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'qwerty'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'vvvvvv'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'abcde'\nassert solution('''7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'tleelte'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n'''\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\n\"\"\"\n---LINK: https://www.hackerrank.com/challenges/ctci-making-anagrams/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=strings&h_r=next-challenge&h_v=zen\n\nGiven two strings, a and b, determine the number of ways you can choose a subset of characters from a to form b.\n\nThe number of ways could be 0, 1 or many.\n\nFor example, for a = 'b' and b = 'bb', the answer is 3.\n\nNote that the order of characters is unimportant.\n\n\"\"\"\n\"\"\"\n---LINK: https://www.hackerrank.com/challenges/ctci-making-anagrams/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=strings&h_r=next-challenge&h_v=zen\n\nGiven two strings, a and b, determine the number of ways you can choose a subset of characters from a to form b.\n\nThe number of ways could be 0, 1 or many.\n\nFor example, for a = 'b' and b = 'bb', the answer is 3.\n\nNote that the order of characters is unimportant.\n\n\"\"\""
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"cba\""
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('asdasd') == ''\nassert solution('aaaa') == ''\nassert solution('abcdef') == 'qwerty'\nassert solution('aabbccddeeffggh') == 'qwerty'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('tleelte\\neelte\\nleelt\\n') == 'qwerty\\nvvvvvv\\nabcde'\nassert solution('tleelte\\neelte\\nleelt\\n') == 'qwerty\\nvvvvvv\\nabcde'\nassert solution('tleelte\\neelte\\nleelt\\n') == 'qwerty\\nvvvvvv\\nabcde'\nassert solution('tleelte\\neelte\\nleelt\\n') == 'qwerty\\nvvvvvv\\nabcde'\nassert solution('tleelte\\neelte\\nleelt\\n') == 'qwerty\\nvvvvvv\\nabcde'\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"tgeeksforgeeks\") == \"teeeeeeee\"\nassert solution(\"tleelteel\") == \"qwerty\"\nassert solution(\"leelteelteelteelteelteelteelteelteelteelteel\") == \"abcde\"\nassert solution(\"tgeeksforgeeksg\") == \"teeeeeeee\"\nassert solution(\"wetweeetwee\") == \"eeeetwee\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20 12 6') == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '12'"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 21 0\") == \"21\"\nassert solution(\"2 2 6\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1000000000 1000000000 0\") == \"0\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('5 1 0') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('100 1 1 1 1') == '1'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 6') == '4'\nassert solution('9 4 12') == '12'\nassert solution('10 4 6') == '4'\nassert solution('3 1 1') == '4'\nassert solution('1 1 1') == '4'\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('2 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('20 12 6') == '12'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\nassert solution('4') == '0'\nassert solution('12') == '3'\nassert solution('14') == '4'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8''') == '2'\nassert solution('''9''') == '1'\nassert solution('''13''') == '4'\nassert solution('''1024''') == '4'\nassert solution('''20''') == '6'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('12') == ''\nassert solution('1') == '1'\nassert solution('1000000000') == '1'"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"9\") == \"3\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '2'\n\"\"\"\n\nN = int(stdin.readline())\ngroups = 0"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9') == '2'\nassert solution('15') == '4'\nassert solution('30') == '6'\nassert solution('70') == '10'\nassert solution('110') == '12'\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '2'\nassert solution('10 3') == '2'\nassert solution('10 4') == '3'\nassert solution('1 100') == '100'\n\n\"\"\"\n\na, p = [int(x) for x in stdin.split()]"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n\n\"\"\"\nProblem 4.8\nhttps://leetcode.com/explore/challenge/card/july-leetcoding-challenge/545/week-2-july-8th-july-14th/3345/\n\nGiven two integers A and B, return any string of length 3 having A as prefix, B as suffix, and the middle character (if any) as the middle character of the string.\n\nExample 1:\n\nInput: A = 1, B = 2\nOutput: \"cba\"\nExplanation: \"abc\" = \"cba\"\n\nExample 2:\n\nInput: A = 3, B = 1\nOutput: \"bca\"\nExplanation: \"bac\" = \"bca\"\n\nExample 3:\n\nInput: A = 1, B = 3\nOutput: \"cab\"\nExplanation: \"abc\" = \"cab\"\n\nExample 4:\n\nInput: A = 3, B = 3\nOutput: \"aaa\"\nExplanation: It's not possible to make a string of length 3 with A = 3, B = 3, and middle character in the middle.\n\nNote:\n\n0 <= A <= 100\n0 <= B <= 100\n\"\"\"\n\n\"\"\"\nWrite 5 lines of code to test the correctness of solution:\nWe have A apples and P pieces of apple.\nWe can cut an apple into three pieces of apple, and make one apple pie by simmering two pieces of apple in a pan.\nFind the maximum number of apple pies we can make with what we have now.\n\n-----Constraints-----\n - All values in input are integers.\n - 0 \\leq A, P \\leq 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA P\n\n-----Output-----\nPrint the maximum number of apple pies we can make with what we have now.\n\n-----Sample Input-----\n1 3\n\n-----Sample Output-----\n3\n\nWe can first make one apple pie by simmering two of the three pieces of apple. Then, we can make two more by simmering the remaining piece and three more pieces obtained by cutting the whole apple.\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == 3\nassert solution(\"1 3\") == 2\nassert solution(\"20 3\") == 4\nassert solution(\"30 3\") == 6\nassert solution(\"10 10\") == 0\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 3') == '3'\nassert solution('1 3') == '3'\n\"\"\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == 3\nassert solution('2 5') == 2\nassert solution('5 12') == 0\nassert solution('0 0') == 0\nassert solution('1 2') == 2\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '3'\nassert solution('0 3') == '0'\nassert solution('2 2') == '1'\nassert solution('1 5') == '0'\nassert solution('1 5') == '0'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == 3\nassert solution('1 1') == 1\nassert solution('1 1 2') == 3\nassert solution('2 4') == 3\nassert solution('10 5') == 3\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == '3'\nassert solution('0 3') == '-1'\nassert solution('2 3') == '4'\nassert solution('2 3') == '4'\nassert solution('4 6') == '2'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[1]\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4') == '4'\nassert solution('4 2') == '2'\nassert solution('5 9') == '6'\nassert solution('10 17') == '15'\nassert solution('100 99') == '99'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 4') == '4'\nassert solution('8 1') == '9'\nassert solution('2 5') == '3'\nassert solution('12 5') == '7'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"4 12\") == \"16\"\nassert solution(\"10 5\") == \"5\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 12') == '16'\nassert solution('2 3') == '5'\nassert solution('3 4') == '-1'\nassert solution('1 1') == '0'\nassert solution('10 6') == '4'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"16\"\n\n\"\"\"\n\n\"\"\"\nCopyright (c) 2014 - 2016, Richard Hopkins\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\nNeither the name of the copyright holder nor the names of its contributors may\nbe used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\"\"\"\n\n\"\"\"\nSolution using a set.\n\"\"\"\nfrom sys import stdin, stdout\nfrom collections import deque"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 12') == '16'\nassert solution('1 4') == '5'\nassert solution('4 3') == '5'\nassert solution('5 6') == '9'\nassert solution('1 9') == '8'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\", \"chokudaiz\") == \"Yes\"\nassert solution(\"nishad\", \"chokudaiz\") == \"No\"\nassert solution(\"test\", \"test2\") == \"No\"\nassert solution(\"chokudaiz\", \"chokudaiz\") == \"Yes\"\nassert solution(\"nishad\", \"nishad\") == \"No\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'Yes'\nassert solution('chokudai') == 'No'\nassert solution('chokudaiz') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('abcabcz') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('fade') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:len(stdin)-1]\nprint(solution(stdin))\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"dabash\") == \"No\"\nassert solution(\"dabash\") == \"No\"\nassert solution(\"chokudai\") == \"Yes\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n\"\"\""
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('chokudai', 'chokudaiz') == \"Yes\"\nassert solution('chokudi', 'chokudiz') == \"No\"\nassert solution('chokudai', 'chokudai') == \"Yes\"\nassert solution('chokudai', 'chokudaiz') == \"Yes\"\nassert solution('chokudai', 'chokudai') == \"Yes\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 5') == 'IMPOSSIBLE'\nassert solution('2 1') == 'IMPOSSIBLE'\nassert solution('2 5') == 'IMPOSSIBLE'\nassert solution('2 10') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 16''') == '9'\nassert solution('''2 3''') == 'IMPOSSIBLE'\nassert solution('''2 1''') == 'IMPOSSIBLE'\nassert solution('''1000000000 1000000000''') == 'IMPOSSIBLE'\nassert solution('''5 16''') == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 4') == 'IMPOSSIBLE'\nassert solution('1 4') == 'IMPOSSIBLE'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('1 0') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 2') == 'IMPOSSIBLE'\nassert solution('3 4') == 'IMPOSSIBLE'\nassert solution('1 100') == 'IMPOSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 16''') == '9'\nassert solution('''2 4''') == 'IMPOSSIBLE'\nassert solution('''1 2''') == 'IMPOSSIBLE'\nassert solution('''1 10''') == 'IMPOSSIBLE'\nassert solution('''10 10''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 8') == 'IMPOSSIBLE'\nassert solution('2 7') == '9'\nassert solution('3 3') == 'IMPOSSIBLE'\nassert solution('3 10') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 16') == '9'\nassert solution('-15 63') == 'IMPOSSIBLE'\nassert solution('0 3') == 'IMPOSSIBLE'\nassert solution('10 4') == 'IMPOSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 16') == '9'\n\"\"\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 16') == '9'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('1 1') == '9'\nassert solution('2 16') == '9'\nassert solution('2 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('117') == 'Yes'\nassert solution('117') == 'Yes'\nassert solution('723') == 'No'\nassert solution('57') == 'No'\nassert solution('1011') == 'Yes'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[-1]"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(121) == 'Yes'\nassert solution(7) == 'Yes'\nassert solution(100) == 'No'\nassert solution(1999) == 'Yes'\nassert solution(191) == 'No'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(100) == \"No\"\nassert solution(1) == \"Yes\"\nassert solution(10) == \"No\"\nassert solution(11) == \"Yes\"\nassert solution(99) == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(123) == \"Yes\"\nassert solution(6) == \"No\"\nassert solution(7) == \"Yes\"\nassert solution(222) == \"No\"\nassert solution(12345) == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"Yes\"\nassert solution(\"711\") == \"Yes\"\nassert solution(\"717\") == \"No\"\nassert solution(\"101\") == \"No\"\nassert solution(\"102\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"711\") == \"No\"\nassert solution(\"999\") == \"Yes\"\nassert solution(\"101\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('117') == 'Yes'\nassert solution('118') == 'No'\nassert solution('1000') == 'No'\nassert solution('25') == 'Yes'\nassert solution('54') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"24\") == \"No\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"400\") == \"Yes\"\nassert solution(\"1000\") == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == \"Yes\"\nassert solution('2\\n') == \"No\"\nassert solution('3\\n') == \"Yes\"\nassert solution('4\\n') == \"No\"\nassert solution('5\\n') == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''12''') == 'Yes'\nassert solution('''101''') == 'No'\nassert solution('''1234''') == 'Yes'\nassert solution('''10001''') == 'No'\nassert solution('''12345''') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('12345') == 'Yes'\nassert solution('123456') == 'No'\nassert solution('123456789') == 'Yes'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'Yes'\nassert solution('11') == 'No'\nassert solution('12') == 'Yes'\nassert solution('121') == 'Yes'\nassert solution('13') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(12345) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(123456789) == \"Yes\"\nassert solution(12) == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'\nassert solution('15') == 'Yes'\nassert solution('100') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(\"13\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 0') == '-1 -1 -1 -1'\nassert solution('0 0 0 1 0') == '-1 -1 -1 1'\nassert solution('1 0 0 0 1') == '-1 -1 -1 1'\nassert solution('0 0 0 1 0') == '-1 -1 -1 1'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\""
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(0,0,0,1) == \"-1 1 -1 0\"\nassert solution(0,0,0,0) == \"-1 -1 -1 -1\"\nassert solution(0,0,0,1) == \"-1 -1 -1 0\"\nassert solution(0,0,0,0) == \"-1 -1 -1 -1\"\nassert solution(0,0,0,1) == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(0,0,0,1) == '-1 1 -1 0'\nassert solution(0,0,0,2) == '-1 1 -1 0'\nassert solution(0,0,1,2) == '-1 1 -1 0'\nassert solution(1,1,1,2) == '-1 1 -1 0'\nassert solution(1,1,2,2) == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 0') == '-1 -1 -1 -1'\nassert solution('0 0 0 1 1') == '-1 -1 -1 1'\nassert solution('0 0 0 1 1 2') == '-1 -1 -1 1 2'\nassert solution('0 0 0 1 1 2 3') == '-1 -1 -1 1 2 3'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 1 0 1') == '0 0 -1 0'\nassert solution('1 1 0 1') == '0 0 -1 0'\nassert solution('1 0 0 1') == '0 0 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 1\") == \"1 1 -1 0\"\nassert solution(\"0 0 1 0\") == \"-1 -1 1 0\"\nassert solution(\"0 0 1 1\") == \"1 1 -1 0\"\nassert solution(\"0 0 1 1\") == \"1 1 -1 0\"\nassert solution(\"0 0 1 1\") == \"1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 1 1 2') == '1 1 1 1'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 0') == '0 0 0 0'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.split()\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[0]\nprint(solution(stdin))\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red') == '2 2'\nassert solution('blue') == '1 1'\nassert solution('blue') == '1 1'\nassert solution('red blue') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\""
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red blue\\n3 4\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred\\nred\\nred') == '2 4'\nassert solution('red blue\\n3 4\\nred\\nred\\nred\\nred') == '2 4'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abcab') == 'No'\nassert solution('abcabc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabc') == 'Yes'\nassert solution('abcabcabcabc') == 'Yes'\nassert solution('abcd') == 'No'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcabc') == \"Yes\"\nassert solution('abcdef') == \"No\"\nassert solution('abcd') == \"Yes\"\nassert solution('abcda') == \"Yes\"\nassert solution('abcddc') == \"Yes\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abc') == \"Yes\"\nassert solution('a') == \"No\"\nassert solution('ab') == \"No\"\nassert solution('abcdef') == \"Yes\"\nassert solution('aab') == \"No\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcabc') == \"Yes\"\nassert solution('abcccc') == \"No\"\nassert solution('abcccbc') == \"Yes\"\nassert solution('ac') == \"No\"\nassert solution('abccccc') == \"No\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('defghijklmnopqrstuvwxyz') == 'No'\nassert solution('zabc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('aabcabc') == 'No'\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abcdef') == 'No'\nassert solution('abcdefgh') == 'No'\nassert solution('abcdabc') == 'Yes'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n\n\"\"\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\n\"\"\""
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 4 5') == '0.0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 3') == '3.333333 1'\nassert solution('2 3 1 4') == '4.0'\nassert solution('2 3 1 5') == '4.333333 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\nG W Y P Y W\n''') == 'Four'\nassert solution('''\n10\nP G W P P W P P\n''') == 'Three'\n'''"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('G W Y P Y W\\n') == 'Four'\nassert solution('G W Y P Y P\\n') == 'Three'\nassert solution('G W Y P Y P G\\n') == 'Three'\nassert solution('G W Y P Y P G R\\n') == 'Three'\nassert solution('G W Y P Y P G R G\\n') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"P\") == \"Three\"\nassert solution(\"W\") == \"Four\"\nassert solution(\"G\") == \"Three\"\nassert solution(\"Y\") == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"Three\") == \"Three\"\nassert solution(\"Four\") == \"Four\"\nassert solution(\"pinkW\") == \"Three\"\nassert solution(\"PW\") == \"Four\"\nassert solution(\"WG\") == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('Three' == solution(stdin))\n\n\"\"\"\n\n\"\"\"\n  if len(input()) == 0:\n    return stdout.write(\"Empty\\n\")\n    \n  for i in range(len(input())):\n    if input()[i] in \"GP\":\n        stdout.write(\"P\\n\")\n    elif input()[i] in \"WY\":\n        stdout.write(\"W\\n\")\n    else:\n        stdout.write(\"G\\n\")\n\"\"\""
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\nG W Y P Y W\n''') == 'Four'\nassert solution('''2\nP W\n''') == 'Three'\nassert solution('''2\nP G\n''') == 'Three'\nassert solution('''3\nY W G\n''') == 'Three'\nassert solution('''2\nP Y\n''') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P W G Y P') == 'Three'\nassert solution('P P P P P') == 'Four'\nassert solution('P P P P G') == 'Four'\nassert solution('P P G P P') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\nG W\\nY P') == 'Four'\nassert solution('3\\nW W W') == 'Three'\nassert solution('1\\nW') == 'One'\nassert solution('2\\nW W') == 'One'\nassert solution('1\\nW W') == 'One'\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"G W Y P Y W\") == \"Four\"\nassert solution(\"G W Y P Y W\") == \"Three\"\nassert solution(\"P W G Y P P W\") == \"Four\"\nassert solution(\"P W G Y P P W\") == \"Three\"\nassert solution(\"P W G Y P P P W\") == \"Four\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"2\"\n\"\"\""
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"6\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"5\\n2 4 1 3 9\") == \"3\"\nassert solution(\"5\\n1 4 3 5 7\") == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 3\\n2 3 1 3 4 2\\n') == '3'\nassert solution('5 3 3\\n1 2 4 2 3\\n') == '2'\nassert solution('5 5 6\\n1 2 6 10 3\\n') == '2'\nassert solution('5 5 6\\n1 2 6 10 3\\n') == '2'\nassert solution('5 5 6\\n1 2 6 10 3\\n') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n6 3 2\n2 3 1 3 4 2\n'''\n    ) == '6'\nassert solution(\n    '''\n5 3 3\n1 2 4 2 3\n'''\n    ) == '2'\nassert solution(\n    '''\n5 5 6\n1 2 6 10 3\n'''\n    ) == '2'\nassert solution(\n    '''\n5 5 6\n1 2 6 10 3\n'''\n    ) == '2'\nassert solution(\n    '''\n10 10 10 10 10 10\n1 2 2 2 2 2 2\n3 3 3 3 3 3 3\n5 5 5 5 5 5 5\n7 7 7 7 7 7 7\n9 9 9 9 9 9 9\n'''\n    ) == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3 2\n2 3 1 3 4 2''') == '6'\nassert solution('''5 5 6\n1 2 6 10 3\n''') == '2'\n'''\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('inputs/5_3_2') == '6'\nassert solution('inputs/5_3_3') == '2'\nassert solution('inputs/5_5_6') == '2'\nassert solution('inputs/5_5_3') == '2'\nassert solution('inputs/5_1_3') == '6'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == str(expected_output)\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '0'\nassert solution('1 2 2 3 4') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 8 2 6 2\\n4 5 4 1 3\\n') == '7'\nassert solution('1 3 2 4\\n1 3 2 4\\n') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\n\nassert solution('''1\n1\n1\n1\n1\n''') == '1'\n\nassert solution('''10\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n\nassert solution('''10\n1 2 1 1 1\n1 2 1 1 1\n''') == '0'"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4 5 4 1 3\\n4 5 4 1 3\") == \"7\"\nassert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n4 5 4 1 3\") == \"0\"\nassert solution(\"7\\n5 3 2 4 1 6\\n5 3 2 4 1 6\") == \"4\"\nassert solution(\"10\\n1 3 2 4 9 5 4 1 3 6 2 6\\n1 3 2 4 9 5 4 1 3 6 2 6\") == \"0\"\nassert solution(\"10\\n1 3 2 4 9 5 4 1 3 6 2 6\\n1 3 2 4 9 5 4 1 3 6 2 6\") == \"4\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 2 4\\n1 3 2 4\\n') == '7'\nassert solution('4\\n4 5 4 1 3\\n4 5 4 1 3\\n') == '0'\nassert solution('4\\n1 3 2 4\\n1 3 2 4\\n') == '0'\nassert solution('4\\n1 3 2 4\\n1 3 2 4\\n') == '0'\nassert solution('4\\n4 5 4 1 3\\n4 5 4 1 3\\n') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\n\nassert solution('''15\n4 8 2 6 2\n4 5 4 1 3\n''') == '5'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 4 5 10') == '1 1 3 5 9'\nassert solution('10') == '9999 99 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('10000 10 50605065 1 5 89 5 999999999 60506056 1000000000') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 4 5 10\") == \"1 1 3 5 9\"\nassert solution(\"1 2 4 5 10\") == \"1 1 3 5 9\"\n\n\n\"\"\""
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abab') == 'aabaa'\nassert solution('abab') == 'abab'\nassert solution('abbb') == 'baaab'\nassert solution('baaab') == 'baab'\nassert solution('aaaa') == 'bbbb'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\\n\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\\n\") == \"a\\n\"\nassert solution(\"a\\na\") == \"a\\na\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n\"\"\"\n\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '1 1 3 5 9'\nassert solution('''10''') == '1 1 3 5 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\".join(input().split())) == \"\".join(input().split())\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 4 5 10\") == \"1 1 3 5 9\"\nassert solution(\"5\") == \"1 2 4 5 10\"\nassert solution(\"10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == input()\n\"\"\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n3 4\\n5 4\\n3 5\\n4 5\\n1 2\\n3 4\\n5 4\\n3 5\\n5 3\\n5 1\\n3 5\\n1 3\\n3 1\\n1 4\\n3 1\\n4 1\\n1 3\\n2 3\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n1 10\\n2 11\\n3 11\\n4 12\\n5 13\\n6 13\\n7 13\\n8 14\\n9 14\\n10 15\\n11 15\\n12 15\\n13 14\\n14 15\\n15 15') == '2'\n\n'''\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6''') == '2'\nassert solution('''20 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20''') == '2'\nassert solution('''20 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20''') == '3'\nassert solution('''20 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 22\n1 24\n1 25''') == '4'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n'''\n'''"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n1 2\\n5 3\\n5 4\\n5 5\\n1 4\\n1 3\\n2 3\\n1 2\\n3 4\\n1 4\\n1 5\\n5 2\\n5 4\\n1 3\\n5 4\\n2 3\\n4 3\\n5 4\\n3 1\\n3 2\\n1 4\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n1 4\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n1 3\\n1 4\\n1 5\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3 2\\n5 2\\n5 4\\n3 1\\n3"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''5 4\n1 2\n3 4\n5 4\n3 5\n'''\n) == '1'\n\nassert solution(\n'''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n'''\n) == '2'\n\nassert solution(\n'''15 17\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n'''\n) == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3 4\") == \"1\"\nassert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"2\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"\n\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n\nassert solution(\n'''5 3\n1 2\n1 3\n2 3\n3 1\n''') == '2'\n\nassert solution(\n'''5 4\n1 2\n1 3\n2 3\n1 4\n''') == '2'\n\nassert solution(\n'''5 4\n1 2\n1 3\n2 3\n3 4\n1 4\n''') == '2'\n\nassert solution(\n'''5 4\n1 2\n1 3\n2 3\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n''') == '1'"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nassert solution('''5 3\n1 2\n1 3\n2 3\n3 4\n4 5\n4 2\n3 1\n''') == '0'\nassert solution('''10 10\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n6 7\n7 8\n8 9\n9 10\n''') == '0'\nassert solution('''5 5\n1 2\n1 3\n2 3\n3 4\n4 5\n4 2\n3 1\n''') == '1'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\"\"\") == \"1\"\nassert solution(\"\"\"3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"6\n1 0 0 0 0 0\n1 2\n2 3\n2 4\n3 5\n4 5\n2 5\n\"\"\") == \"4\"\nassert solution(\"\"\"7\n1 0 0 0 0 0 0\n1 2\n2 3\n2 4\n3 5\n3 6\n5 6\n3 6\n\"\"\") == \"0\"\nassert solution(\"\"\"9\n1 0 0 0 0 0 0 0\n1 2\n2 3\n2 4\n3 5\n3 6\n3 7\n5 6\n5 7\n5 8\n8 9\n\"\"\") == \"8\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(solution(fileinput.input()[0]))\n\"\"\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n') == '0'\nassert solution('2\\n2\\n1\\n') == '1'\nassert solution('1\\n2\\n2\\n') == '4'\nassert solution('2\\n2\\n1\\n1\\n') == '3'\nassert solution('2\\n2\\n1\\n2\\n') == '1'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0 0 2 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('4\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '1'\nassert solution('7\\n1 0 0 0 2 2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '4'\nassert solution('7\\n1 0 0 0 2 2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5'''\n) == '1'\n\nassert solution(\n'''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5'''\n) == '4'\n\nassert solution(\n'''3\n1 1 2\n2 3\n1 3\n'''\n) == '0'\n\nassert solution(\n'''2\n1 1 0\n2 3\n1 3\n'''\n) == '1'\n\nassert solution(\n'''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n'''\n) == '1'"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5') == '0'\nassert solution('4\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5\\n3 5') == '4'\nassert solution('6\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n4 5\\n4 6\\n5 6') == '4'\nassert solution('7\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '0'\nassert solution('8\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n4 5\\n4 6\\n4 7\\n5 6\\n6 7') == '4'\n"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '0'\n\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''3\n1 1 2\n2 3\n2 3\n''') == '1'\n\nassert solution('''6\n1 0 0 0 2 0\n1 2\n2 3\n3 4\n4 5\n5 6\n5 7\n''') == '4'"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"qoztvz\"\n\n\"\"\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abc\", \"abc\", \"abc\") == \"abc\"\nassert solution(\"az\", \"bf\", \"abc\") == \"bc\"\nassert solution(\"az\", \"az\", \"az\") == \"az\"\nassert solution(\"az\", \"ba\", \"az\") == \"ba\"\nassert solution(\"az\", \"az\", \"az\") == \"az\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\naz\\nbf\\n\") == \"bc\"\nassert solution(\"5\\nafogk\\nasdji\\n\") == \"alvuw\"\nassert solution(\"6\\nnijfvj\\ntvqhwp\\n\") == \"qoztvz\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nprint(solution('''3\nkf\nkk\n'''))\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\naz\nbf''') == 'bc'\nassert solution('''2\naz\nbf''') == 'bc'\nassert solution('''3\nafogk\nasdji''') == 'alvuw'\nassert solution('''4\nnijfvj\ntvqhwp''') == 'qoztvz'\nassert solution('''5\nnijfvj\ntvqhwp''') == 'qoztvz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == 'bc'\nassert solution('5') == 'alvuw'\nassert solution('6') == 'qoztvz'\nassert solution('7') == 'qxsw'\nassert solution('8') == 'rjz'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'bc'\n\n\n\n\n\n##\n\n##\n\n##\n\n##\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\naz\nbf\n''') == 'bc'\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\nabc\\nxyz') == 'abc'\nassert solution('1\\nabc\\nbc\\nxyz') == 'bc'\nassert solution('1\\nabc\\nac\\nxyz') == 'ac'\nassert solution('1\\nabc\\nab\\nxyz') == 'ab'\nassert solution('1\\nabc\\na\\nxyz') == 'a'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom collections import Counter\nfrom collections import OrderedDict"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n15 13 15 15 12''') == 'YES'\nassert solution('''5 4\n20 10 40 30''') == 'NO'\nassert solution('''4 4\n20 10 40 30''') == 'YES'\nassert solution('''10 4\n20 10 40 30''') == 'NO'\nassert solution('''1 5\n1 2 3 4 5''') == 'YES'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4\\n15 13 15 15 12') == 'YES\\n1 2 3 4'\nassert solution('4 4\\n20 10 40 30') == 'NO'\nassert solution('4 4\\n20 10 40 30') == 'NO'\nassert solution('1\\n1') == 'YES\\n1'\nassert solution('2\\n1') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'YES\\n1 2 5'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES\\n1 2 3 4'\nassert solution('4 10 40 30') == 'NO'\nassert solution('4 10 30 15 12') == 'YES\\n1 2 4'\n\n\"\"\""
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"6 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"\nassert solution(\"6 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"6 4\\n10 4 3 10 10 3\\n\") == \"YES\\n1 2 3 4\\n\"\nassert solution(\"6 4\\n20 10 40 30\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"5 4\") == \"NO\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('1 2 3 4\\n1 2 3 4\\n') == 'YES\\n1 2 3 4'\nassert solution('1 2 3 4\\n1 2 3 4\\n') == 'YES\\n1 2 3 4'\nassert solution('2 3 4 5 6 7 8\\n9 10 11 12 13 14 15 16 17 18 19 20\\n') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('5 3\\n15 13 15 15 12\\n') == 'NO'\nassert solution('5 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('5 5\\n20 10 40 30\\n') == 'NO'\nassert solution('5 6\\n20 10 40 30\\n') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2 3') == 'YES\\n1 2'\nassert solution('3 4\\n20 10 40 30\\n1 2 3 4') == 'YES\\n1 2 3'\nassert solution('5 4\\n20 10 40 30\\n1 2 3 4') == 'NO'\nassert solution('1 5\\n1 2 3 4 5') == 'NO'\nassert solution('2 2\\n1 1') == 'YES\\n1'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''3\n1 2 3''') == 'NO'\nassert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''10\n5 1 3 4 7 2 9 10 5''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 4 0 2\n''') == 'NO'\nassert solution('''9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''10\n
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'NO'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 4 0 2\\n\") == \"NO\"\nassert solution(\"5\\n1 2 4 0 2\\n\") == \"NO\"\nassert solution(\"5\\n1 2 4 0 2\\n\") == \"YES\"\nassert solution(\"5\\n1 2 4 0 2\\n\") == \"YES\"\nassert solution(\"5\\n1 2 4 0 2\\n\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n5 1 3 6 8 2 9 0 10') == 'YES\\n1 0 0 0 0 1 0 1 0'\nassert solution('5\\n5 1 3 6 8 2 9 0 10') == 'NO'\nassert solution('7\\n7 2 4 0 2') == 'NO'\nassert solution('3\\n0 0 0') == 'NO'\nassert solution('3\\n1 0 0') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n5 1 3 6 8 2 9 0 10''') == 'NO'\nassert solution('''1\n1 2 4 0 2''') == 'YES'\nassert solution('''2\n2 1 0 1''') == 'NO'\nassert solution('''2\n0 2 0 2''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 4 0 2\") == \"NO\"\nassert solution(\"5 1 3 6 8 2 9 0 10\") == \"YES\"\nassert solution(\"1 2 4 0 2 3 4 1\") == \"NO\"\nassert solution(\"1 2 4 0 2 3 4 1 2\") == \"YES\"\nassert solution(\"1 2 4 0 2 3 4 1 2 3 4 1\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n4 2 1 1\n1 2 1 0\n\"\"\") == \"NO\"\nassert solution(\"\"\"3\n1 2 3 4\n1 2 3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"5\n3 4 2 0 1\n1 2 1 0 0\n\"\"\") == \"NO\"\nassert solution(\"\"\"5\n1 2 0 0 1\n1 2 0 0 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"5\n1 1 1 1 1\n1 1 1 1 1\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''7\n1 2 4 0 2\n''') == 'NO'\nassert solution('''8\n1 2 4 0 2\n''') == 'YES'\nassert solution('''5\n2 3 4 2\n''') == 'NO'\nassert solution('''4\n1 2 4 0\n''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 2 4\") == \"YES\"\nassert solution(\"5\\n2 1 2 4 0 2\") == \"NO\"\nassert solution(\"6\\n1 2 3 4 5 6 7\") == \"NO\"\nassert solution(\"6\\n3 1 2 4 0 2\") == \"NO\"\nassert solution(\"4\\n1 2 3 4\") == \"YES\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('input/a') == '3\\n0\\n1134\\n0'\nassert solution('input/b') == '2\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3\\n0\\n1134\\n0'\n\nassert solution('''5\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '2\\n0\\n1134\\n0'\n\nassert solution('''6\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3\\n0\\n1134\\n0'\n\nassert solution('''7\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '4\\n0\\n1134\\n0'\n\nassert solution('''8\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '5\\n0\\n1134\\n0'"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0\\n0\\n1134\\n0'\n'''\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n100515051\\n12341\\n1000000000\\n') == '3'\nassert solution('2\\n0\\n0\\n0\\n') == '0'\nassert solution('3\\n0\\n0\\n0\\n') == '0'\nassert solution('4\\n0\\n0\\n0\\n') == '0'\nassert solution('5\\n0\\n0\\n0\\n') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"\"\n\"\"\""
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''10\n4 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3\\n0\\n1134\\n0'\nassert solution(\n'''10\n2 1 1 2\n100 101 101\n101 101 101\n101 101 101\n101 101 101\n101 101 101\n101 101 101\n101 101 101''') == '2\\n0\\n1134\\n0'\nassert solution(\n'''10\n3 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2''') == '3\\n0\\n1134\\n0'\nassert solution(\n'''10\n3 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2''') == '3\\n0\\n1134\\n0'\nassert solution(\n'''10\n3 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2''') == '3\\n0\\n1134\\n0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\") == \"\"\"3\n0\n1134\n0\n\"\"\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3\\n0\\n1134\\n0'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n') == 1\nassert solution('4\\n') == 3\nassert solution('8\\n') == 1260\nassert solution('20\\n') == 12164510040883200\nassert solution('100\\n') == 598266774384909454428844377641568"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == 1\nassert solution('''4''') == 3\nassert solution('''8''') == 1260\nassert solution('''20''') == 12164510040883200\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nassert solution('''40''') == '10016050073248012048009600000'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n') == '1'\nassert solution('8\\n') == '1260'\nassert solution('20\\n') == '12164510040883200'\nprint(solution('\\n'))"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n''') == '3'\nassert solution('''6\n''') == '15'\nassert solution('''2\n''') == '1'\nassert solution('''8\n''') == '1260'\nassert solution('''20\n''') == '12164510040883200'\n\nprint(solution('''1000\n'''))\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nassert solution('8') == '12164510040883200'"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nprint(solution(input()))\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccaabababaccbc') == 'cccccc'\nassert solution('cccaabababaccbc') == ''\nassert solution('cccaabababaccbc') == ''\nassert solution('cccaabababaccbc') == ''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''cccaabababaccbc''') == '''cccbbabaccbc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\nassert solution('''cccaabababaccbc''') == '''cccccc'''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('ab') == None\nassert solution('abcdefg') == None\nassert solution('abcccdcbbbbbc') == 'abccdcdcbbb'\nassert solution('abccccbbbbbccddd') == 'abccccd'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''15 3\ncccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''15 9\ncccaabababaccbc''') == 'cccccc'\nassert solution('''1 1\nu''') == ''\nassert solution('''3 10\nabcdefghijklmnopqrstuvwxyz''') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('''9 15\naabbbbbccccccccccccccccccccccc''') == 'aabbbbbccccccccccccccccccccccc'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"cccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"cccccc\") == \"\"\nassert solution(\"u\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('u') == 'u'\n\n\n-----\n\n######\n\n\n\n\n\n\"\"\""
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('u') == ''\n\n\n'''\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cccaabababaccbc') == 'cccbbabaccbc'\nassert solution('cccccc') == ''\nassert solution('u') == ''\nassert solution('vnfgbvwfgjkebqy') == 'vnfgbvwfgjkebqy'\nassert solution('zxcvbnm') == 'zxcvbnm'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('c') == ''\nassert solution('cc') == 'cc'\nassert solution('ccc') == 'cc'\nassert solution('cccc') == 'cc'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 4\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '12'\nassert solution('''7 2\n3 1 2 1 2 1\n4 2\n2 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '7'\nassert solution('''4 2\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"1\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0 2 0\") == \"8\"\nassert solution(\"5 6\") == \"20\"\nassert solution(\"1 2 0 2 0\") == \"8\"\nassert solution(\"3 3\") == \"15\"\nassert solution(\"1 5\") == \"20\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '8'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '20'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n') == '20'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n') == '20'\nassert solution('1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5\\n1\\n1\\n1\\n1\\n1') == '8'\nassert solution('5\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '20'\nassert solution('5\\n5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n'''\n) == '8'\nassert solution(\n'''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n'''\n) == '20'\nprint('Tests passed successfully')\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 0 2 0\") == \"8\"\nassert solution(\"2 4\") == \"20\"\nassert solution(\"3 3\") == \"20\"\nassert solution(\"1 5\") == \"20\"\nassert solution(\"2 3\") == \"20\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 6\n5 1 0 1 1\n4 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '10'\nassert solution('''5 6\n3 4 0 2 0\n3 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''4 5\n3 3\n1 4\n2 2\n3 2\n''') == '20'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3') == '3 2 1'\nassert solution('3 8') == '3 5 2'\nassert solution('4 6') == '-1'\nassert solution('5 5') == '3 3 1'\nassert solution('5 5') == '3 3 1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 6\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '3'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '-1'\nassert solution('3 3\\n*.*\\n.*.\\n*.*') == '-1'\nassert solution('6 6\\n.****\\n.*...\\n.*...\\n.*...\\n.*...') == '3'\n\n\n\"\"\""
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....') == '-1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == \"3\"\nassert solution(\n'''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == \"-1\"\nassert solution(\n'''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == \"3\"\nassert solution(\n'''\n3 3\n*.*\n.*.\n*.*\n''') == \"3\"\nassert solution(\n'''\n3 3\n*.*\n.*.\n*.*\n''') == \"-1\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n'''\n) == '3'\n\nassert solution(\n'''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n'''\n) == '-1'\n\nassert solution(\n'''\n6 5\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n'''\n) == '3'\n\nassert solution(\n'''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n'''\n) == '-1'\n\nassert solution(\n'''\n7 4\n....*...\n...*....\n..*****.\n...**...\n....*...\n........\n'''\n) == '3'"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"-1\"\nassert solution(\"6 8\") == \"3\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n.....\") == \"3\"\nassert solution(\"5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n.....\\n.....\\n.....\\n.....\\n\") == \"-1\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '-1'\n\nassert solution('''8 8\n.**...\n*.*.*\n...**.\n*.**..\n*.**..\n..**.*\n.*.*.*\n.*.*.*\n''') == '3'"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('575') == 'Yes'\nassert solution('575') == 'Yes'\nassert solution('567') == 'No'\nassert solution('1234567') == 'No'\nassert solution('1234') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(575) == \"Yes\"\nassert solution(578) == \"No\"\nassert solution(571) == \"Yes\"\nassert solution(575) == \"Yes\"\nassert solution(578) == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(575) == \"Yes\"\nassert solution(938) == \"No\"\nassert solution(2096) == \"Yes\"\nassert solution(9800) == \"Yes\"\nassert solution(9120) == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('575') == 'Yes'\nassert solution('12345') == 'No'\nassert solution('80') == 'Yes'\nassert solution('560') == 'Yes'\nassert solution('120') == 'Yes'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(575) == 'Yes'\nassert solution(873) == 'No'\nassert solution(2343) == 'Yes'\nassert solution(9087) == 'Yes'\nassert solution(874) == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('575') == 'Yes'\nassert solution('1') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('0') == 'No'\nassert solution('1111') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"567\") == \"Yes\"\nassert solution(\"565\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"575\") == \"Yes\"\nassert solution(\"16\") == \"Yes\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('4 5') == 'Bob'\nassert solution('2 3') == 'Draw'\nassert solution('5 3') == 'Alice'\nassert solution('7 5') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('1 3') == 'Draw'\nassert solution('1 1') == 'Bob'\nassert solution('4 6') == 'Bob'\nassert solution('5 2') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('6 5') == 'Bob'\nassert solution('6 4') == 'Draw'\nassert solution('6 1') == 'Alice'\nassert solution('9 4') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('7 2') == 'Bob'\nassert solution('1 2') == 'Draw'\nassert solution('1 2') == 'Draw'\nassert solution('3 2') == 'Draw'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('7 6') == 'Bob'\nassert solution('1 2') == 'Draw'\nassert solution('1 1') == 'Draw'\nassert solution('13 4') == 'Alice'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('5 6') == 'Bob'\nassert solution('8 4') == 'Draw'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('1 3') == 'Bob'\nassert solution('9 6') == 'Draw'\nassert solution('7 10') == 'Alice'\nassert solution('1 11') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'Alice'\nassert solution('8 6') == 'Alice'\nassert solution('4 6') == 'Draw'\nassert solution('8 6') == 'Alice'\nassert solution('3 2') == 'Bob'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"h,ey,ny,e,y,u,n,d,i,e,p,r,o,,n,e,g,h,i,n,y,e,t,e,m,o,v,e,x,e,n,n,i,e,n,t,y,o,u,s,i,r,t,i,e,n,a,y,o,p,k,e,t,e,a,g,r,a,n,d,o,u,e,n,t,s,e,f,i,a,i,n,g,r,a,l,e,r,t,i,o,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,t,y,i,n,a,n,e,t,h,e,y,s,t,e,m,n,a,t,a,i,n,n,i,e,n,n,g,r,a,y,n,o,a,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,e,y,s,t,e,m,n,a,t,a,i,n,g,r,a,y,o,p,e,g,r,a,n,g,o,g,i,r,y,o,u,r,e,t,t,y,i,n,o,v,e,e,n,t,e,n,g,s,o,p,a,y,u,r,t,r,a,n,a,g,e,n,t,h,"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"s,p,u,e,o,s,a,n,e,g,a,n,n,i,t,y,a,t,h,e,e,p,i,t,y,d,o,n,y,t,h,e,a,t,e,r,t,e,t,t,u,i,o,p,r,e,r,e,d,o,u,n,i,t,y,u,e,r,a,t,e,n,n,i,t,y,o,r,t,s,h,a,t,e,n,t,h,a,n,n,o,t,h,e,p,i,t,e,r,t,o,u,i,r,i,t,h,o,n,t,t,i,n,y,o,n,r,e,t,e,n,t,r,e,t,r,a,t,e,n,n,o,p,r,e,t,t,o,i,n,t,e,r,t,o,r,s,t,y,u,e,t,t,i,n,y,o,n,t,t,i,n,y,o,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,h,e,t,t,e,t,a,t,u,e,r,a,t,e,n,t,r,i,n,o,r,i,t,e,n,t,e,n,t,r,e,t,r,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,t,a,t,u,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,e,t,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,t,a,t,u,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,t,a,t,u,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,t,a,t,u,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n,t,h,e,t,t,e,r,a,t,e,n,t,r,a,n,r,a,t,e,n,t,o,r,t,s,h,a,t,e,n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('   ') == ''\nassert solution('e') == 'e'\nassert solution('a,b,c') == 'a b c'\nassert solution('a,b,c,d,e,f,g,h') == 'a b c d e f g h'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('a,b,c,d,e,f') == 'a b c d e f'\nassert solution('a,b,c,d,e,f,g,h') == 'a b c d e f g h'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o') == 'a b c d e f g h i j k l m n o'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('good') == 'good'\nassert solution('a') == 'a'\nassert solution('moo') =='moo'\nassert solution('oh') == 'oh'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.replace(',',' ')\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"deadbeef,badcafe,abcdefg\") == \"dead bad cafe defg\"\nassert solution(\"a,b,c,d,e\") == \"a b c d e\"\nassert solution(\"h,a,p,p,a,,e,w,o,r,r,a,,d,,g,e,,r,,s,o,u,r,a\") == \"h a p p a, e w o r r a d g e, r s o u r a\"\nassert solution(\"s,,,s,t
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('j,e,u,m,a,n,d,o,o,i,t,y,o,u,n,o,u,a,t,e,h,a,p,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,e,t,r,i,n,g,e,l,a,r,e,t,y,o,u,r,u,n,o,t,t,i,e,n,t,a,y,o,u,r,e,d,o,u,n,o,u,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,e,t,r,i,n,g,e,l,a,r,e,t,y,o,u,r,u,n,o,t,t,i,e,n,t,a,y,o,u,r,e,d,o,u,n,o,u,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y,ow,m,o,n,d,o,r,a,t,h,a,p,o,u,s,e,t,r,i,p,n,a,l,e,y"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('chocolate,sandwich,milk') == 'chocolate sandwich milk'\nassert solution('caramel,candy,cake') == 'caramel candy cake'\nassert solution('chocolate,caramel,cake,candy,cake,candy') == 'chocolate caramel cake candy candy'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"9,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2\\n1\\n'\nassert solution('2 2\\n2 0\\n0 0\\n1 0\\n2 1\\n0 1\\n2 1\\n1 1\\n') == '2\\n1\\n'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n1 0\\n0 0\\n0 0\\n-1 0\\n1 0\\n1 0\\n0 0\\n0 0\\n') == '2\\n1\\n'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n1 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '2\\n1\\n'\nassert solution('5 1\\n-1 0\\n-1 0\\n-1 0\\n-1 0\\n0 0\\n1 0\\n2 0\\n-1 0\\n-1 0\\n0 0\\n0 0\\n0 0\\n0 0\\n1 0\\n-1 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\nassert solution('''\n2 2\n2 0\n0 0\n-1 0\n1 0\n''') == '2\\n1'\nassert solution('''\n6 2\n1 1\n3 1\n5 1\n4 2\n4 3\n''') == '1\\n2'\nassert solution('''\n6 3\n1 1\n3 1\n5 1\n4 2\n4 3\n''') == '1\\n2\\n3'\nassert solution('''\n10 10\n-1 -1\n1 -1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '5\\n1\\n3\\n5\\n8\\n11\\n15\\n19\\n23\\n26\\n29'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n2 1\n-1 2\n1 2''') == '1\\n2'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n2 1\n-1 2\n1 2''') == '2\\n1'\n'''\nassert solution('''8 8\n-1 -1\n1 1\n1 -1\n1 -1\n1 1\n1 1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n2 0\n-1 -1\n1 1\n2 1''') == '1\\n2'\n'''\n\"\"\"\nfrom functools import reduce"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 2'''\n) == '''2\n1\n'''\nassert solution(\n'''2 1'''\n) == '''1\n1\n'''\nassert solution(\n'''4 2'''\n) == '''2\n1\n3\n'''\nassert solution(\n'''4 2'''\n) == '''2\n1\n2\n'''\nassert solution(\n'''5 1'''\n) == '''1\n1\n2\n3\n4\n'''\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1\\n1'\nassert solution('''3 3\n2 0\n-1 0\n0 0\n0 0\n-1 0\n-1 0\n0 0\n2 0\n0 0\n0 0''') == '2\\n2\\n3'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n''') == '2\\n1'\n'''"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution(\n'''10 10\n-1 -2\n-5 0\n4 5\n-1 5\n7 7\n-1 5\n2 3\n2 -5\n-4 1\n-2 -3''') == '2\\n4'\nassert solution(\n'''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2'\nassert solution(\n'''1 1\n-1 -1\n-1 -1\n-1 -1\n1 1''') == '1'\nassert solution(\n'''5 1\n1 1\n-2 -2\n-2 -2\n-2 -2\n2 1\n0 0\n-3 -3\n-3 -3\n-3 -3\n-2 -2\n-2 -2''') == '2\\n4'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"1\\n1\"\nassert solution(\"2 1\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"1\\n1\"\nassert solution(\"4 4\\n-8 -9 -10 -9\\n4 0 -10 -1 0\\n-5 -6 -6 -7 -3\\n-7 -8 -8 -9 -8\\n-7 -9 -9 -9 -9\\n-9 -9 -9 -9 -7\\n-9 -8 -9 -9 -6\\n-9 -9 -8 -9 -5\\n-9 -9 -8 -9 -3\\n-9 -9 -8 -9 -2\\n-9 -9 -8 -9 -1\\n-8 -9 -8 -9 -1\\n-9 -8 -9 -9 -1\\n-8 -9 -8 -9 -1\\n-8 -9 -8 -9 -1\\n-9 -8 -9 -9 -1\\n-8 -9 -8 -9 -1\\n-9 -8 -9 -9 -1\\n-8 -9 -8 -9 -1\\n-9 -8 -9 -9 -1\\n-8 -9 -8 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -1\\n-9 -8 -9 -9 -"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '14'\nassert solution('0') == '0'\nassert solution('11') == '77'\nassert solution('12') == '144'\nassert solution('14') == '294'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(2) == 14\nassert solution(3) == 27\nassert solution(4) == 50\nassert solution(5) == 55\nassert solution(10) == 630\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(123) == 321\nassert solution(2) == 4\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 14\nassert solution(3) == 28\nassert solution(4) == 36\nassert solution(5) == 49\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('2') == None\nassert solution('1') == None\nassert solution('3') == None\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(2) == 14\n'''\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == 14\n'''\n\nimport sys"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 2\nassert solution('3') == 6\nassert solution('4') == 10\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '14'\nassert solution('10') == '836'\nassert solution('14') == '2'\nassert solution('8') == '88'\nassert solution('123') == '384'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 7\nassert solution(5) == 9\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.#\\n#.#\\n#.\\n#.#\\n#.#\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.#\\n#.#\\n#.\\n#.#\\n#.#\") == \"No\"\nassert solution(\"3 2\\n.#.\\n.#.\\n.#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\") == \"No\"\nassert solution(\"3 2\\n.#.\\n.#.\\n.#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\") == \"Yes\"\nassert solution(\"3 4\\n.###.\\n#..#.\\n#..#.\\n.#.##.\\n.#.##.\\n.#.##.\\n.#.##.\\n.#.##.\\n.#.##.\\n.#.##.\\n.#.##.\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n#.#.#.\\n#.#.#.\") == \"No\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.#\\n#.\\n#.#') == 'Yes'\nassert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.#\\n#.\\n#.#') == 'No'\nassert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.#\\n#.\\n#.#') == 'Yes'\nassert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#\\n#.#\\n#.\\n#.#') == 'No'\nassert solution('5 5\\n.....\\n.##..\\n..#.#\\n##.##.\\n....#\\n.##..\\n#.#.#\\n#...#\\n.....') == 'Yes'\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#') == 'Yes'\nassert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n.#\\n#.#') == 'No'\nassert solution('2 1\\n#\\n#') == 'Yes'\nassert solution('2 1\\n#\\n#') == 'No'\nassert solution('2 3\\n.\\n#\\n#\\n#\\n#\\n#') == 'Yes'\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('4 5 6') == '13'\nassert solution('2 1 1') == '3'\nassert solution('3 4 2') == '12'\nassert solution('2 7 2') == '3'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 8 4') == '14'\nassert solution('1 7 2') == '32'\nassert solution('2 4 4') == '16'\nassert solution('1 2 7') == '10'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 0 0') == '0'\nassert solution('0 0 0') == '0'\nassert solution('1 2 1') == '3'\nassert solution('5 2 4') == '23'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '53'\nassert solution(stdin) == '53'\nassert solution(stdin) == '53'\nassert solution(stdin) == '53'\nassert solution(stdin) == '53'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 6 3') == '18'\nassert solution('-9 -3 -9') == '-27'\nassert solution('4 3 9') == '45'\nassert solution('9 8 6') == '89'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('5 6 7') == '107'\nassert solution('6 2 3') == '19'\nassert solution('7 4 5') == '29'\nassert solution('2 2 2') == '4'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '53'\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"5 3 4\") == \"13\"\nassert solution(\"8 2 1\") == \"14\"\nassert solution(\"2 1 2\") == \"6\"\nassert solution(\"1 1 1\") == \"4\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"2 5 2\") == \"59\"\nassert solution(\"2 3 3\") == \"18\"\nassert solution(\"3 2 1\") == \"10\"\nassert solution(\"5 4 5\") == \"125\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n        '''3\n4980\n7980\n6980'''\n    ) == '15950'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"12\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"12\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"6\\n\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n') == '5'\nassert solution('1\\n2\\n3\\n4\\n5') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n') == '36'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36') == '78'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n3') == '0'\nassert solution('4\\n4') == '0'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n4980\n7980\n6980\n\"\"\"\n) == \"15950\"\n\nassert solution(\n\"\"\"\n3\n109\n120\n142\n\"\"\"\n) == \"11850\"\n\nassert solution(\n\"\"\"\n6\n1590\n2360\n2540\n3290\n3430\n3970\n\"\"\"\n) == \"50950\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n4980\\n7980\\n6980\\n') == '15950'\nassert solution('5\\n4980\\n7980\\n6980\\n5980') == '15990'\nassert solution('5\\n4980\\n7980\\n6980\\n2980') == '15990'\nassert solution('5\\n4980\\n7980\\n6980\\n2980\\n5980') == '15990'\nassert solution('5\\n4980\\n7980\\n6980\\n2980\\n5980\\n4980') == '15950'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4980\n7980\n6980''') == '15950'\nassert solution('''4\n4791\n9797\n7979\n6979''') == '19604'\nassert solution('''5\n4791\n9797\n7979\n6979\n5879''') == '19604'\nassert solution('''6\n4791\n9797\n7979\n6979\n5879\n4979''') == '19604'\nassert solution('''7\n4791\n9797\n7979\n6979\n5879\n4979\n3979''') == '19604'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '15950'"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120\\n') == '215'\nassert solution('10\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('E869120') == 215\n\"\"\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABACA') == 215\nassert solution('ABACAC') == 50\nassert solution
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n60\") == \"210\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n60\") == \"210\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n20\\n7\\n35\\n120') == '215'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\n\"\"\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABC Don') == '29'\nassert solution('ARC Curry') == '30'\nassert solution('AGC Pasta') == '50'\nassert solution('APC Ramen') == '180'\nassert solution('ATC Hanbagu') == '60'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n10 30') == '7.5'\nassert solution('3\\n10 30 40 50') == '8.333333'\nassert solution('4\\n10 30 40 50 60 70') == '8.333333'\nassert solution('5\\n10 30 40 50 60 70 80 90 100') == '9.444444'\nassert solution('6\\n10 30 40 50 60 70 80 90 100 110 120 130') == '9.777778'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('1 1') == '0'\nassert solution('2 3') == '0.5'\nassert solution('100 0') == '1'\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '8.1'\n\"\"\""
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''2\n10 30''') == '7.5'\nassert solution('''4\n6 4 2 3 1''') == '4.41666667'\nassert solution('''6\n3 4 5 2 6 1''') == '1.96296296296'\nassert solution('''8\n1 1 1 1 1 1 1''') == '3.9375'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 30') == '7.5'\nprint(solution('10 30'))\nassert solution
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''3\n10 30 40''') == '27.0'\nassert solution('''4\n10 30 40 50''') == '76.8333333333333'\nassert solution('''5\n10 30 40 50 60''') == '7916666666.66666'\nassert solution('''6\n10 30 40 50 60 70''') == '8191666667.8191666667'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''3\n1 100 100\n1 100 100\n1 100 100''') == '7.5'\nassert solution('''4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == '8'\nassert solution('''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '7.5'\nassert solution('''6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '7.5'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''2\n6 27''') == '6.333333333333333'\nassert solution('''2\n10 30''') == '7.5'\nassert solution('''1\n4''') == '0.25'\nassert solution('''2\n1 1''') == '1.0'\n"
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10 30\") == '7.5'\n\n\"\"\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\n'''\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13') == '1'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n14') == '0'\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n14\\n15') == '-1'\n\"\"\"\n\nfrom itertools import product\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('10 1\\n10') == '0'\n\"\"\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\n\nassert solution('''5 3\n1000000\n999999\n1000000\n999999\n1000000''') == '0'\n\nassert solution('''5 3\n100000000\n100000000\n100000000\n100000000\n100000000''') == '0'\n\nassert solution('''5 3\n100000000\n100000000\n100000000\n100000000\n100000000''') == '1'\n\nassert solution('''5 3\n10000000000\n10000000000\n10000000000\n10000000000\n10000000000''') == '0'"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''10 3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '2'\nassert solution('''3 2\n1\n2\n3''') == '1'\nassert solution('''3 2\n1\n2\n3''') == '1'\nassert solution('''10 2\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n1\\n1') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''2 2\n1\n1''') == '0'\nassert solution('''5 2\n10\n15\n11\n14\n12''') == '-1'\nassert solution('''5 3\n10\n15\n11\n14\n12''') == '-1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == 2\nassert solution('10 15') == '4'\nassert solution('10 11 14') == '-1'\nassert solution('10 9 14') == '1'\nassert solution('10 7 14') == '-1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 1\") == \"0\"\nassert solution(\"2 3\\n2 2\\n1 2\") == \"2\"\nassert solution(\"4 6\\n3 4\\n5 6\\n4 5\") == \"1\"\nassert solution(\"4 6\\n3 4\\n5 6\\n4 5\") == \"1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'A'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('a') == 'a'\nassert solution('b') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('Aa') == 'Aa'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('B') == 'A'\nassert solution('Bb') == 'b'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('B') == \"A\"\nassert solution('b') == \"a\"\nassert solution('B') == \"A\"\nassert solution('b') == \"a\"\nassert solution('A') == \"A\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'a'\nassert solution('B') == 'a'\nassert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('bA') == 'bA'\nassert solution('Ba') == 'a'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('a') == 'a'\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"Z\") == \"a\"\nassert solution(\"z\") == \"a\"\nassert solution(\"A\") == \"A\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"C\") == \"C\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 2''') == '0'\nassert solution('''1 2''') == '0'\nassert solution('''2 1''') == '0'\nassert solution('''2 2''') == '6'\nassert solution('''3 2''') == '0'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2') == '6'\nassert solution('2 2') == '6'\nassert solution('1 1') == '1'\nassert solution('2 5') == '2'\nassert solution('5 10') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''2 3''') == '2'\nassert solution('''1 1''') == '1'\nassert solution('''1 2''') == '0'\nassert solution('''1 4''') == '2'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1 2') == '0'\nassert solution('2 2') == '0'\nassert solution('2 3') == '0'\nassert solution('2 4') == '1'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 2''') == '6'\nassert solution('''2 3''') == '1'\nassert solution('''10 2''') == '3'\nassert solution('''1000 3''') == '5'\nassert solution('''3 100000''') == '500000'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 3') == '10'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0112') == 'MMYY'\nassert solution('0901') == 'AMBIGUOUS'\nassert solution('0810') == 'NA'\nassert solution('2310') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\nassert solution('190519') == 'AMBIGUOUS'\nassert solution('99999') == 'NA'\nassert solution('20891') == 'AMBIGUOUS'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1905') == 'YYMM'\nassert solution('1905') == 'AMBIGUOUS'\nassert solution('1905') == 'NA'\nassert solution('1905') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\nassert solution('1712') == 'AMBIGUOUS'\nassert solution('1713') == 'NA'\nassert solution('1905') == 'YYMM'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"MMYY\") == \"AMBIGUOUS\"\nassert solution(\"1213\") == \"NA\"\nassert solution(\"12\") == \"NA\"\nassert solution(\"001\") == \"NA\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1905') == '1905'\nassert solution('0519') == '1905'\nassert solution('0519') == '1905'\nassert solution('0519') == '1905'\nassert solution('1231') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('190519') == 'YYMM'\nassert solution('19051919') == 'AMBIGUOUS'\nassert solution('1905191919') == 'NA'\nassert solution('20020409') == 'AMBIGUOUS'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('201105') == 'MMYY'\nassert solution('201105') == 'AMBIGUOUS'\nassert solution('201105') == 'NA'\nassert solution('02') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1905') == 'YYMM'\nassert solution('19951') == 'YYMM'\nassert solution('19051') == 'AMBIGUOUS'\nassert solution('09051') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1909') == 'NA'\nassert solution('0909') == 'NA'\nassert solution('2909') == 'NA'\nassert solution('0909') == 'NA'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == \"2\"\nassert solution('2') == \"1\"\nassert solution('1') == \"1\"\nassert solution('0') == \"0\"\nassert solution('5') == \"2\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('7') == '6'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\n\nassert solution('5') == '6'\nassert solution('8') == '9'\nassert solution('10') == '11'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '5'\nassert solution('5') == '8'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('3') == 0\nassert solution('10') == 0\nassert solution('2') == 1\nassert solution('5') == 2\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 12') == '21'\nassert solution('1 2') == '3'\nassert solution('11 11') == '23'\nassert solution('11 10') == '22'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 7\") == \"21\"\nassert solution(\"7 19\") == \"14\"\nassert solution(\"7 19\") == \"14\"\nassert solution(\"0 1\") == \"24\"\nassert solution(\"12 22\") == \"12\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9 12') == '21'\nassert solution('10 22') == '11'\nassert solution('10 22') == '11'\nassert solution('5 22') == '6'\nassert solution('8 22') == '9'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9 12') == '21'\nassert solution('10 22') == '23'\nassert solution('5 19') == '18'\nassert solution('5 22') == '23'\nassert solution('5 19') == '18'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 12') == '21'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9 12') == '21'\n\n'''"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 12') == '21'\nassert solution('0 1') == '23'\nassert solution('3 4') == '9'\nassert solution('3 4') == '9'\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9 12''') == \"21\"\nassert solution('''10 10''') == \"21\"\nassert solution('''2 4''') == \"23\"\nassert solution('''20 15''') == \"22\"\nassert solution('''20 22''') == \"23\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '9 12'\n) == '21'\n\nassert solution(\n    '9 10'\n) == '9'\n\nassert solution(\n    '9 19'\n) == '19'\n\nassert solution(\n    '5 1'\n) == '6'\n\nassert solution(\n    '15 22'\n) == '17'"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2919''') == '3719'\n'''\nTakahashi is a member of a programming competition site, ButCoder.\nEach member of ButCoder is assigned two values: Inner Rating and Displayed Rating.\nThe Displayed Rating of a member is equal to their Inner Rating if the member has participated in 10 or more contests. Otherwise, the Displayed Rating will be their Inner Rating minus 100 \\times (10 - K) when the member has participated in K contests.\nTakahashi has participated in N contests, and his Displayed Rating is R. Find his Inner Rating.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN R\n\n-----Output-----\nPrint his Inner Rating.\n\n-----Sample Input-----\n2 2919\n\n-----Sample Output-----\n3719\n\nTakahashi has participated in 2 contests, which is less than 10, so his Displayed Rating is his Inner Rating minus 100 \\times (10 - 2) = 800.\nThus, Takahashi's Inner Rating is 2919 + 800 = 3719.\n'''\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2919') == '3719'"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 3333') == '3333'\nassert solution('10 6') == '3'\nassert solution('1000 1') == '1000'\nassert solution('1000 1') == '1000'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3719\""
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 3099') == '3999'\nassert solution('2 4999') == '5999'\nassert solution('2 4950') == '5000'\nassert solution('2 5012') == '5010'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 2') == '0'\nassert solution('1 2') == '-1'\nassert solution('3 3') == '0'\nassert solution('4 4') == '100'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('3 8921') == '30000'\nassert solution('2 3849') == '3698'\nassert solution('2 1434') == '2000'\nassert solution('1 7653') == '2903'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 10') == '800'\nassert solution('2 100') == '1000'\nassert solution('2 101') == '900'\nassert solution('2 1001') == '0'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(11, 2) == 4\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 2') == '4'"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11 10') == '4'\nassert solution('100 101') == '5'\nassert solution('10101') == '5'\nassert solution('1010') == '4'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"10000000000 100\") == \"10\"\nassert solution(\"8 5\") == \"4\"\nassert solution(\"5 15\") == \"3\"\nassert solution(\"999 999\") == \"7\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"4\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(11, 2) == \"4\"\nassert solution(100, 8) == \"1\"\nassert solution(125, 6) == \"5\"\nassert solution(1485, 37) == \"10\"\nassert solution(6554, 100) == \"12\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(11, 2) == 4\nassert solution(24, 2) == 3\nassert solution(98, 2) == 3\nassert solution(129, 2) == 5\nassert solution(999, 2) == 8\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(11,2) == \"4\"\nassert solution(9,2) == \"1\"\nassert solution(110,2) == \"4\"\nassert solution(255,16) == \"1\"\nassert solution(45,3) == \"2\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(str(11) + \" \" + str(2)) == '4'\nassert solution(str(100) + \" \" + str(3)) == '1'\nassert solution(str(11) + \" \" + str(8)) == '2'\nassert solution(str(1000) + \" \" + str(4)) == '3'\nassert solution(str(100) + \" \" + str(0)) == '0'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\n\"\"\""
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\n'''\n) == '3'\nassert solution(\n'''\n10\n'''\n) == '5'\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '3'"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == 3\nassert solution('3 1') == 3\nassert solution('3 4') == 3\nassert solution('2 4 5') == 3\nassert solution('2 5') == 2\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '2'\nassert solution('100') == '1'\nassert solution('1000') == '0'\n\nprint(solution(stdin))"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('2 3') == 'Yay!'\nassert solution('3 2') == 'Yay!'\nassert solution('2 2') == 'Yay!'\nassert solution('1 1') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\"\"\""
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('4 4') == 'Yay!'\nassert solution('1 2') == 'Yay!'\nassert solution('0 0') == 'Yay!'\nassert solution('0 0') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"Yay!\"\nassert solution(\"4 5\") == \"Yay!\"\nassert solution(\"1 3\") == \"Yay!\"\nassert solution(\"2 2\") == \"Yay!\"\nassert solution(\"5 5\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"4 1\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\nassert solution(\"3 3\") == \"Yay!\"\nassert solution(\"4 5\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('1 1') == 'Yay!'\nassert solution('2 2') == 'Yay!'\nassert solution('10 15') == 'Yay!'\nassert solution('4 3') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yay!\"\n\nThe solution function returns \"Yay!\" to indicate that both E869120 and square1001 can obey the instruction in the note and take desired number of pieces of cake.\n\n\"\"\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yay!\"\n\"\"\"\n\nA, B = map(int, input().split())"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('6 4') == 'Yay!'\nassert solution('2 4') == 'Yay!'\nassert solution('3 6') == 'Yay!'\nassert solution('10 4') == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yay!\"\n\n\"\"\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456787') == '34'\nassert solution('123456789') == '34'\nassert solution('123456778') == '34'\nassert solution('123456775') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"0123456789\") == \"34\"\nassert solution(\"987654321\") == \"34\"\nassert solution(\"897654321\") == \"34\"\nassert solution(\"89765432101234567899\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678') == '34'\nassert solution('12345678') == '34'\nassert solution('123456789') == '34'\nassert solution('1234567') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1234567876) == \"34\"\nassert solution(987654321) == \"34\"\nassert solution(901234) == \"34\"\nassert solution(689) == \"34\"\n\"\"\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567789') == '34'\nassert solution('12345678789') == '34'\nassert solution('12345678901') == '34'\nassert solution('123456789012345678') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"987654321\") == \"34\"\nassert solution(\"987654321\") == \"34\"\nassert solution(\"987654321\") == \"34\"\nassert solution(\"987654321\") == \"34\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\n\"\"\"\n\n\"\"\"\n------100/100----------\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\nassert solution('979367876') == '34'\nassert solution('79367876') == '34'\nassert solution('789462876') == '34'\nassert solution('788462876') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1234567876) == \"34\"\nassert solution(\"1234567876\") == \"34\"\nassert solution(\"889999977\") == \"714\"\nassert solution(\"11111122222\") == \"112\"\nassert solution(\"1111111122222\") == \"1122\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('123456789') == '34'\nassert solution('1123456789') == '34'\nassert solution('99') == '34'\nassert solution('9') == '34'\nassert solution('123') == '34'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('3\\n3') == '1 1'\nassert solution('2\\n1') == '0 1'\nassert solution('3\\n2') == '1 0'\nassert solution('4\\n3') == '1 1'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3\\n'\n\nassert solution('''2\n2 9\n''') == '1 7\\n'\n\nassert solution('''7\n2 1000000000 4 6 8 4 2\n''') == '12 13\\n'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3\\n'\nassert solution('2\\n2 9\\n') == '1 7\\n'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '12 13\\n'\n\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 2') == '1 2'\nassert solution('2 1\\n1 2') == '2 1'\nassert solution('2 3\\n2 3') == '2 3'\nassert solution('2 3\\n1 3') == '2 3'\nassert solution('2 3\\n1 2') == '2 3'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''8\n3731 13 29 24 -6 57 9 7 24 3''') == '6 7'"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 12 6\\n') == '5 3'\nassert solution('2\\n2 9\\n') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '12 13'\nassert solution('6\\n13 52 0 13 26 52\\n') == '12 13'\n\n\"\"\"\n\n\"\"\"\n\n-----Solution-----\n\nThis is a famous problem from back to front.\nYou have two integers $n$ and $a_1, a_2, \\dots, a_n$. Now you need to find the minimum value of $y$ which equals to $n$ people.\n\nOne of the possible situations is $x=a_1$, $y=a_2$ and $z=a_n$. Then the first three people took swords of the first type and the other two people took swords of the last type.\n\nThe number of swords of each type you have remained is $a_i-1$ and $a_i-2$ respectively. Hence, it is sufficient to count how many people we have left and how many swords each of them has taken.\n\nThere are three possible situations:\n\nIf $a_1=0$, then $n=a_2$ people have broken into the theater, and each of them has taken $a_n$ swords of the first type. So we have $y=n$ and $z=a_n$.\n\nIf $a_2=0$, then $n=a_1$ people have broken into the theater, and each of them has taken $a_n$ swords of the second type. So we have $y=a_1$ and $z=a_n$.\n\nIf $a_n=0$, then $n=a_1$ people have broken into the theater, and each of them has taken $a_n$ swords of the last type. So we have $y=a_1$ and $z=a_2$.\n\nThus, $y=max(a_1, a_2)$, and $z=a_n$.\n\nIn the second example, $y=a_1=1$, and $z=a_2=7$.\n\nIn the third example, $y=a_1=1$, and $z=a_2=12$.\n\nIn the fourth example, $y=a_1=2$, and $z=a_2=9$.\n\nIn the fifth example, $y=a_1=2$, and $z=a_2=6$.\n\nIn the sixth example, $y=a_1=3$, and $z=a_2=5$.\n\nIn the seventh example, $y=a_1=3$, and $z=a_2=4$.\n\nIn the eighth example, $y=a_1=4$, and $z=a_2=2$.\n\nIn the ninth example, $y=a_1=4$, and $z=a_2=1$.\n\nThus, $y=max(a_1, a_2)$, and $z=a_n-1$.\n\nIn the tenth example, $y=a_1=5$, and $z=a_2=3$.\n\nThus, $y=a_1=5$, and $z=a_n-1=2$.\n\nIn the eleventh example, $y=a_1=5$, and $z=a_2=1$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nIn the twelveth example, $y=a_1=5$, and $z=a_2=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nIn the thirteenth example, $y=a_1=5$, and $z=a_2=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nIn the fourteenth example, $y=a_1=5$, and $z=a_2=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nIn the fifteenth example, $y=a_1=5$, and $z=a_2=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nIn the sixteenth example, $y=a_1=5$, and $z=a_2=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nIn the seventeenth example, $y=a_1=5$, and $z=a_2=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nIn the eighteenth example, $y=a_1=5$, and $z=a_2=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nThus, $y=a_1=5$, and $z=a_n-1=0$.\n\nIn the nineteenth example, $y=a_1=5$, and $z=a_2=0"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 12 6') == '5 3\\n'\nassert solution('2\\n2 9\\n') == '1 7\\n'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n') == '12 13\\n'\nassert solution('6\\n13 52 0 13 26 52\\n') == '12 13\\n'\nassert solution('1\\n4\\n1 1 1 1\\n') == '2 2\\n'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '5 3'\nassert solution('''2''') == '1 7'\nassert solution('''7''') == '12 13'\nassert solution('''13''') == '2999999987 2'\nassert solution('''7''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '5 3'\nassert solution('''2''') == '1 7'\nassert solution('''7''') == '12 13'\nassert solution('''6''') == '12 13'\nassert solution('''13 52 0 13 26 52''') == '2999999987 2'\n"
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n\"\"\""
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n5\\n7') == 3\nassert solution('2\\n1\\n3\\n5') == 1\nassert solution('5\\n1\\n1\\n1\\n1') == 1\nassert solution('1\\n1\\n1\\n1\\n1') == 1\nassert solution('3\\n1\\n1\\n1\\n1') == 1\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 4 1\\n\") == \"3\"\nassert solution(\"1\\n1 1 4 1\\n\") == \"1\"\nassert solution(\"1\\n1 1 1\\n\") == \"1\"\nassert solution(\"1\\n1 1 1\\n\") == \"1\"\nassert solution(\"1\\n1 1 1\\n\") == \"1\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 4 1\") == \"3\"\nassert solution(\"2\\n3 1 4 1\") == \"1\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3 1 4 1\\n') == '3'\nassert solution('3\\n1 1 1\\n') == '1'\nassert solution('3\\n1 1 1\\n') == '1'\nassert solution('5\\n1 1 1 2 2\\n') == '2'\nassert solution('5\\n1 1 1 2 2\\n') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n3 1 4 1') == '3'\nassert solution('3\\n1 1 1') == '1'\nassert solution('5\\n1 1 1 2 2') == '2'\nassert solution('3\\n1 1 1') == '1'\nassert solution('5\\n1 1 1 2 2') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('2 0') == '1'\nassert solution('3 2') == '2'\nassert solution('1 3') == '1'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''4 2\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''3 2\n1 2\n2 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n1 2\n2 3\n''') == '2'\nassert solution('''\n3 2\n1 2\n2 3\n''') == '2'\nassert solution('''\n3 2\n1 2\n2 3\n''') == '2'\nassert solution('''\n1 1\n1 2\n''') == '1'\nassert solution('''\n1 1\n1 2\n2 3\n''') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2\\n4 2\\n'\nassert solution('2 0\\n') == '1\\n1 2\\n'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2\\n4 2\\n'\nassert solution('1 1\\n') == '1\\n'\nassert solution('3 3\\n1 2\\n2 3\\n') == '1\\n1 2\\n'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1\\n2 1\\n3 1\\n4 1') == '1'\nassert solution('0 2\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1') == '2'\nassert solution('0 1\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1') == '3'\nassert solution('0 1\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1') == '2'\nassert solution('0 1\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 2\\n2 3') == '2\\n4 2\\n'\nassert solution('2 0\\n') == '1\\n1 2\\n'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2\\n4 2\\n'\n\n\n\"\"\"\nfrom typing import List\n\nimport sys\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n1 2\n2 3\n\n''') == '2'\n\nassert solution('''2 0\n\n''') == '1'\n\nassert solution('''3 2\n1 3\n2 3\n\n''') == '2'\n\nassert solution('''6 2\n1 2\n1 5\n2 3\n3 4\n4 5\n\n''') == '3'\n\nassert solution('''5 2\n1 2\n1 3\n1 4\n1 5\n\n''') == '3'"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''2 2\n1 2\n2 3\n2 4\n''') == '2'\nassert solution('''5 2\n1 2\n2 3\n2 4\n3 4\n2 4\n''') == '1'\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('2 0\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n') == '2\\n4 2\\n'\nassert solution('2 0\\n') == '1\\n1 2\\n'\nassert solution('1 2\\n') == '1\\n'\nassert solution('4 2\\n1 2\\n2 3\\n') == '2\\n4 2\\n'\nassert solution('2 0\\n') == '1\\n1 2\\n'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nassert solution('''5 3\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n1 4\n1 5\n4 5\n4 5\n''') == '8'\nassert solution('''4 2\n1 2 3 4\n1 2\n2 3\n3 4\n4 2\n''') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == 2\nassert solution('1\\n2\\n1\\n3') == 4\nassert solution('1\\n2\\n1\\n3\\n1\\n2') == 3\nassert solution('1\\n2\\n1\\n3\\n1\\n2\\n1\\n3') == 4\nassert solution('2\\n3\\n4\\n5\\n6') == 6\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5', '1 2', '2 3', '3 4', '3 5') == '11'\nassert solution('1 2 3 4 5', '1 2', '2 3', '3 4', '3 5', '4', '5', '6') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '1'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '2'\nassert solution('2 1 2 1 2 1 1') == '4'\nassert solution('2 3') == '2'\nassert solution('2 1 2 1 2 1 1') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(\"2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"\nassert solution(\"5 3\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\") == \"3\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == '4'\nassert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == '11'\nassert solution('''7 3\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == '9'\nassert solution('''8 4\n1 2 3 4 5 6 7 8\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n3 8\n5 4\n5 6\n5 7\n5 8''') == '11'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6\\n10 15 12\\n1 9 12 23 26 37') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999\\n') == '1 5\\n2 1\\n2 9999999994\\n'\nprint(solution(stdin))\n\n\"\"\"\n\n\"\"\"\nThe correct answer:"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6\\n10 15 12\\n1 9 12 23 26 37') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('3 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '1 5\\n2 1\\n2 9999999994'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'\nassert solution('''1 2\n2\n2\n''') == '1 1'\nassert solution('''1 2\n2\n2\n''') == '1 1'\nassert solution('''1 1\n1\n1\n''') == '1 1'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom typing import List\n\nn, m = map(int, input().split())\nA: List[int] = list(map(int, input().split()))\nB: List[int] = list(map(int, input().split()))\n\nD: List[int] = [0] * (n + 1)\n\nfor i in range(m):\n    D[B[i]] += 1\n\nfor i in range(1, n + 1):\n    print(D[i], i)"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == ''\n\n\n-----\n\nFirst line: int n, m;\nSecond line: int[n] a, b;\nThird line: int[m] c;\n\"\"\"\n\nn, m = map(int, stdin.split())\na = list(map(int, stdin.split()[1:]))\nb = list(map(int, stdin.split()[2:]))\n\nfor i in range(m):\n    print(b[i] - 1, a[i] - 1)"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 2''') == '1 1'\nassert solution('''1 2 3''') == '1 1'\nassert solution('''1 2 3 4''') == '1 1'\nassert solution('''1 2 3 4 5''') == '1 1'\nassert solution('''1 2 3 4 5 6''') == '2 1'\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\n\nassert solution(\n'''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994'''\n\nassert solution(\n'''2 3\n10 13 17 19 22 25\n2 1 10 11 12 13 14\n''') == '''1 11\n1 10\n2 1\n2 9999999994'''\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('0 0 0 0') == '1 1 1'\nassert solution('0 0 0 0') == '1 1 1'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6 5 4''') == '2 1 3'\nassert solution('''40 40 40 60''') == '20 20 20'\nassert solution('''201 101 101 200''') == '1 100 100'\nassert solution('''3 6 5 4''') == '2 1 3'\nassert solution('''3 6 5 4''') == '2 1 3'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n\nprint('Test success!')\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('30 30 30 30') == '0 0 0'\nassert solution('30 30 30 30') == '0 0 0'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\""
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n\n\n\"\"\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 6 5 4''') == '2 1 3'\nassert solution('''40 40 40 60''') == '20 20 20'\nassert solution('''201 101 101 200''') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"RBGRRBRGG\") == \"RBGRGBRGR\"\nassert solution(\"BBBGBRRR\") == \"BRBGBRGR\"\nassert solution(\"BBRRRRGGGGGRR\") == \"BGRBRBGBGBGRG\"\nassert solution(\"BBRRRRGGGGGRRRR\") == \"BRGBGBBRBGBGRG\"\nassert solution(\"BBRRRRGGGGGRRRR\") == \"BRGBGBBRBGBGRG\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"RBGRRBRGG\\nBBBGBRRR\") == \"RBGRGBRGR\\nBGRBRBGBGBGRG\"\nassert solution(\"BBBGBRRR\\nRBRRRRGGGGGRR\") == \"BRBGBRGRG\\nBGRBRBGBGBGRG\"\nassert solution(\"BBBGBRRR\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n9\nRBGRRBRGG\n''') == '''\n2\nRBGRGBRGR\n'''\n\nassert solution('''\n8\nBBBGBRRR\n''') == '''\n2\nBRBGBRGR\n'''\n\nassert solution('''\n13\nBBRRRRGGGGGRR\n''') == '''\n6\nBGRBRBGBGBGRG\n'''\n\nassert solution('''\n1\nR\n''') == '''\n1\nR\n'''\n\nassert solution('''\n2\nR\n''') == '''\n2\nR\n'''"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\nRBGRRBRGG''') == '2\\nRBGRGBRGR'\nassert solution('''8\nBBBGBRRR''') == '2\\nBRBGBRGR'\nassert solution('''13\nBBRRRRGGGGGRR''') == '6\\nBGRBRBGBGBGRG'\n\n\n\"\"\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9\nRBGRRBRGG''') == '2'\nassert solution('''8\nBBBGBRRR''') == '2'\nassert solution('''13\nBBRRRRGGGGGRR''') == '6'\n\nprint(\"All set? Click 'Check' to earn sweet rewards!\")\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('inputs/solution_1.txt') == '2\\nRBGRGBRGR'\nassert solution('inputs/solution_2.txt') == '2\\nBRBGBRGR'\nassert solution('inputs/solution_3.txt') == '6\\nBGRBRBGBGBGRG'\nassert solution('inputs/solution_4.txt') == '6\\nBGRBRBGBGRG'\nassert solution('inputs/solution_5.txt') == '6\\nBGRBRBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"\n\n\"\"\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7''') == '''4'''\nassert solution('''6''') == '''1 2 3 7 8 9'''\nassert solution('''4''') == '''1 4'''\nassert solution('''9''') == '''1 2 3 7 8 9'''\nassert solution('''10''') == '''1 2 3 7 8 9 10'''\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8''') == '4', 'Basic tests'\nassert solution('''6\n1 3 5 2 4 6''') == '2', 'First example'\nassert solution('''4\n10 9 8 7''') == '1', 'Second example'\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '6', 'Third example'\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '6', 'Fourth example'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9\\n6 7 8 3 4 5 9 10 11') == '6\\n1 2 3 7 8 9'\nassert solution('7\\n3 3 4 7 5 6 8') == '4\\n1 2 3 5 6'\nassert solution('4\\n10 9 8 7') == '1\\n1'\nassert solution('6\\n6 7 8 3 4 5 9 10 11') == '2\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11') == '6\\n1 2 3 7 8 9'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8''') == '4\\n2 3 5 6'\nassert solution('''6\n1 3 5 2 4 6''') == '2\\n1 4'\nassert solution('''4\n10 9 8 7''') == '1\\n1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '6\\n1 2 3 7 8 9'\n\n\n-----"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"2\"\nassert solution(\"7\\n1\") == \"7\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"3\\n3\") == \"3\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('3 3') == 'Yes'"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1''') == 'Yes'\nassert solution('''1 1''') == 'No'\nassert solution('''1 3''') == 'No'\nassert solution('''3 2''') == 'Yes'\nassert solution('''3 4''') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1''') == 'Yes'\nassert solution('''2 2''') == 'No'\nassert solution('''4 4''') == 'Yes'\nassert solution('''6 3''') == 'No'\n'''\n    pass\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(4 1) == \"No\"\nassert solution(5 3) == \"Yes\"\nassert solution(6 5) == \"Yes\"\nassert solution(6 6) == \"No\"\nassert solution(5 1) == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'Yes'\n\n'''\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('3 1') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('3 3') == 'Yes'"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3') == \"No\"\nassert solution('1 1') == \"No\"\nassert solution('1 2') == \"Yes\"\nassert solution('2 1') == \"Yes\"\nassert solution('1 3') == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == \"Yes\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 1\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_s) == output_s\n\n\"\"\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('81 58') == '110'\nassert solution('100 200') == '200'\nassert solution('17 26') == '10'\nassert solution('108 179') == '106'\nassert solution('144 132') == '58'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('81 58') == '110'\nassert solution('8 19') == '106'\nassert solution('1 100') == '100'\n\nprint('all tests passed')\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"81 58\") == \"110\"\n\"\"\""
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('81 58') == 110\nassert solution('88 44') == 150\nassert solution('0 0') == 0\nassert solution('100 100') == 200\nassert solution('4 4') == 16\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('81 58') == '110'\n\nprint('Test1: Passed')"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('80 50') == '110'\n\nassert solution('40 10') == '20'\n\nassert solution('40 50') == '90'\n\"\"\"\nimport sys"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"13 1\") == \"90\"\nassert solution(\"19 2\") == \"105\"\nassert solution(\"81 58\") == \"110\"\n\nprint(solution(\"input\"))\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('81 58') == '110'\nassert solution('5 4') == '5'\nassert solution('5 20') == '8'\nassert solution('5 15') == '7'\nassert solution('5 14') == '7'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"81 58\") == \"110\"\n\n\"\"\"\n\nX, Y = map(int, stdin.split())\n\nf = (X / 2) + (Y / 2)\n\nprint(f)\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5') == '6'\nassert solution('1 1') == '1'\nassert solution('99 99') == '100'\nassert solution('7 5') == '15'\nassert solution('10 1') == '11'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '10'\nassert solution('4') == '20'\nassert solution('5') == '25'\nassert solution('6') == '40'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"27\"\nassert solution(\"5\") == \"54\"\nassert solution(\"10\") == \"442\"\nassert solution(\"11\") == \"4223\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '', \"Test 1\"\nassert solution('1') == '', \"Test 2\"\nassert solution('2') == '', \"Test 3\"\nassert solution('3') == '', \"Test 4\"\nassert solution('4') == '', \"Test 5\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2\n\"\"\"\n) == \"8\"\nassert solution(\n\"\"\"\n6\n\"\"\"\n) == \"24\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('3') == ''\nassert solution('5') == ''\nassert solution('6') == ''\nassert solution('8') == ''\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '8'\nassert solution('5') == '40'\nassert solution('2') == '4'\nassert solution('5') == '40'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n') == 'YES'\nassert solution('8\\n') == 'NO'\nassert solution('7\\n') == 'YES'\nassert solution('6\\n') == 'NO'\nassert solution('2\\n') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"10\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('6') == 'YES'\nassert solution('7') == 'NO'\nassert solution('8') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5'''\n) == 'YES'\n\nassert solution(\n'''3'''\n) == 'NO'\n\nassert solution(\n'''5'''\n) == 'NO'\n\nassert solution(\n'''7'''\n) == 'YES'\n\nassert solution(\n'''7'''\n) == 'NO'"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('7') == 'NO'\nassert solution('5') == 'NO'\nassert solution('3') == 'NO'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('7') == 'YES'\nassert solution('9') == 'NO'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABC999\") == \"ABC\"\nassert solution(\"999\") == \"ABC\"\nassert solution(\"ABC001\") == \"ABD\"\nassert solution(\"ABC002\") == \"ABD\"\nassert solution(\"ABC003\") == \"ABD\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'ABC'\nassert solution('2') == 'ABC'\nassert solution('3') == 'ABC'\nassert solution('4') == 'ABC'\nassert solution('5') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '999'\n) == 'ABC'\n\"\"\"\n\nn = input()\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ABC999\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"999\") == \"ABC999\"\n\"\"\"\n\nfrom sys import stdin\nstdin: str = stdin.read()\n\nn: int = int(stdin)\n\nr: int = 1\nwhile r < n:\n    r *= 10\n    r += 1"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == input()[:3]\nassert solution(input()) == input()[:3]\nassert solution(input()) == input()[:3]\nassert solution(input()) == input()[:3]\nassert solution(input()) == input()[:3]\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"999\") == \"ABC999\"\nassert solution(\"12345\") == \"ABC123\"\nassert solution(\"1\") == \"ABC1\"\nassert solution(\"1234\") == \"ABC1234\"\nassert solution(\"123\") == \"ABC123\"\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('999') == 'ABC'\nassert solution('988') == 'ABD'\nassert solution('1') == 'ABC'\nassert solution('10') == 'ABD'\nassert solution('1998') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"999\") == \"ABC999\"\nassert solution(\"10\") == \"A\"\nassert solution(\"101\") == \"AB\"\nassert solution(\"010\") == \"A\"\nassert solution(\"001\") == \"A\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n14\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n14\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n14\\n15\\n16\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n14\\n15\\n16\\n17\\n\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n9') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n10') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n10\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n10\\n17\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n10\\n18\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n1\n2\n4\n8\n9\n15\n\"\"\".strip()\n) == \"Yay!\"\n\nassert solution(\n    \"\"\"\n1\n2\n4\n8\n9\n15\n\"\"\".strip()\n) == \"Yay!\"\n\nassert solution(\n    \"\"\"\n1\n2\n4\n8\n9\n15\n\"\"\".strip()\n) == \"Yay!\"\n\nassert solution(\n    \"\"\"\n1\n2\n4\n8\n9\n15\n\"\"\".strip()\n) == \"Yay!\"\n\nassert solution(\n    \"\"\"\n1\n2\n4\n8\n9\n15\n\"\"\".strip()\n) == \"Yay!\""
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n14\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n17\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Yay!'\n'''"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n9\\n5\\n1') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n9\\n5\\n1\\n5\\n5\\n1') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n9\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n9\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5\\n1\\n5\\n5"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!','should equal'\n\"\"\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"pink\") == \"pink\"\nassert solution(\"red\") == \"red\"\nassert solution(\"3200\") == \"pink\"\nassert solution(\"3200r\") == \"red\"\nassert solution(\"3200p\") == \"pink\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('pink') == 'pink'\nassert solution('blue') == 'blue'\nassert solution('green') =='red'\nassert solution('white') =='red'\nassert solution('black') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('1000\\nred') =='red'\nassert solution('1200\\nwhite') == 'white'\nassert solution('200\\nwhite') == 'white'\nassert solution('2000\\nwhite') == 'white'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"pink\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('pink') == 'pink'\nassert solution('green') =='red'\nassert solution('blue') =='red'\nassert solution('black') =='red'\nassert solution('yellow') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('3200\\nred') =='red'\nassert solution('2') =='red'\nassert solution('3200') == 'pink'\nassert solution('3') =='red'"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3200\npink''') == 'pink'\nassert solution('''2800\nred''') =='red'\nassert solution('''5000\npink''') == 'pink'\nassert solution('''3200\nred''') =='red'\nassert solution('''3200\nred''') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2\\nred\") == \"red\"\nassert solution(\"1000\\ngreen\\nred\") == \"red\"\nassert solution(\"-1\\nred\") == \"red\"\nassert solution(\"1\\nred\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\n\n## Solution\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1210') == 'ARC'\nassert solution('1199') == 'ABC'\nassert solution('1211') == 'AGC'\nassert solution('1212') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1399') == 'ARC'\nassert solution('0') == 'AGC'\nassert solution('1159') == 'ARC'\nassert solution('1200') == 'ABC'\nassert solution('1399') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1199) == 'ABC'\nassert solution(1200) == 'ARC'\nassert solution(2800) == 'AGC'\nassert solution(4209) == 'AGC'\nassert solution(4208) == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1199\") == \"ABC\"\nassert solution(\"1120\") == \"ARC\"\nassert solution(\"1299\") == \"AGC\"\nassert solution(\"1299\") == \"AGC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('10000') == 'ARC'\nassert solution('2800') == 'AGC'\nassert solution('3321') == 'AGC'\nassert solution('3320') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"12345\") == \"ARC\"\nassert solution(\"-1\") == \"AGC\"\nassert solution(\"1100\") == \"AGC\"\nassert solution(\"0\") == \"AGC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1199') == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"\"\nassert solution(\"1234\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1234\") == \"\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'ABC'\nassert solution('0') == 'ABC'\nassert solution('1549') == 'ARC'\nassert solution('1600') == 'AGC'\nassert solution('1200') == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0) == \"ARC\"\nassert solution(1200) == \"AGC\"\nassert solution(1201) == \"ABC\"\nassert solution(4321) == \"AGC\"\nassert solution(4208) == \"ABC\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('119') == '991'\nassert solution('101') == '1101'\nassert solution('1010') == '1111'\nassert solution('1001') == '1011'\nassert solution('101001') == '111001'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"999\"\nassert solution(\"11\") == \"111\"\nassert solution(\"9\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"99\") == \"999\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('119') == '991'\nassert solution('111') == '9'\nassert solution('109') == '9'\nassert solution('900') == '99'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"219\") == \"1099\"\nassert solution(\"809\") == \"9899\"\nassert solution(\"959\") == \"989\"\nassert solution(\"991\") == \"999\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '991'\nassert solution(input()) == '979'\nassert solution(input()) == '1099'\nassert solution(input()) == '1191'\nassert solution(input()) == '1299'\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"111\") == \"11\"\nassert solution(\"1000000\") == \"900001\"\nassert solution(\"999\") == \"999\"\nassert solution(\"991\") == \"11\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(119) == \"991\"\n\nassert solution(\"111\") == \"999\"\n\nassert solution(\"119\") == \"991\"\n\nassert solution(\"9\") == \"9\"\n\nassert solution(\"19\") == \"1\""
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '991'\nprint(solution(stdin))\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"921\"\nassert solution(\"119\") == \"991\"\nassert solution(\"999\") == \"999\"\nassert solution(\"1020\") == \"1020\"\nassert solution(\"1110\") == \"1111\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(119) == \"991\""
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\n\nassert solution('''\n4\nabac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\n\nassert solution('''\n2\naaaa\nbbaa\n''') == 'abb'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bcdaf\"\nassert solution(\"zzzzzzzzzz\") == \"zzzzzzzzzz\"\nprint(\"All set?\")\n\"\"\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz''') == \"abac\"\nassert solution(\n'''4\nabac\nac\nbccddaaf\nzzzzzzzzzz''') == \"abac\"\nassert solution(\n'''3\nbbb\nbbb\nbbb''') == \"bbb\"\nassert solution(\n'''3\nbbb\nbbb\nbbb''') == \"bbb\"\nassert solution(\n'''4\nabaab\nba\nbababb\nbababbb''') == \"abaab\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''abbaac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\nassert solution('''aaaa\na\nbbbb\n''') == 'aaaa'\nassert solution('''aabb\nbba\n''') == 'aabb'\n'''\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzz') == 'abac\\nac\\nbcdaf\\nzzzzz'\nassert solution('3\\naaaaa\\naaaa\\naaaa') == 'aaaaa\\naaaa\\naaaa'\nassert solution('1\\nab') == 'ab'\nassert solution('2\\na') == 'a'\nassert solution('3\\na') == 'a'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ac') == 'ac'\nassert solution('bccddaaf') == 'bcdaf'\nassert solution('abbaac') == 'abac'\nassert solution('zzzzzzzzzz') == 'zzzzzzzzzz'\nassert solution('aaaaaaaaaaaaaa') == 'aaaaaaaaaaaaaa'\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abbcdddab\") == \"abbcddd\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"bbbacbb\") == \"bbbacbb\"\nassert solution(\"aaaa\") == \"aaaa\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''abbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''abab\na\nab\naa\naba\nabb\naab\naaa\nabaa\nbaaa\n''') == \"abab\"\nassert solution('''\nbabb\nbbbbbbbbbbbbbbbbbbbabbbbbbbbbababbbbbabababababababababababababab\nbbabb\nbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbababbbbbabababababababababababab\n''') == \"bbabb\"\n'''"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abbaac') == 'abac'\nassert solution('ac') == 'ac'\nassert solution('bccddaaf') == 'bcdaf'"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n10 4\n13 9\n100 13\n123 456\n92 46\"\"\") == \"\"\"2\n5\n4\n333\n0\n\"\"\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n10 4\n13 9\n100 13\n123 456\n92 46'''\n) == '''2\n5\n5\n333\n0\n0'''\n\nassert solution(\n'''7\n3 4\n12 1\n1023 12\n100101 12\n1000012 12\n1001001 12\n10000012 12\n'''\n) == '''6\n7\n7\n7\n7\n7\n7'''\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '''2\n5\n5\n333\n0\n'''\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\nassert solution('''1000 100\n500 500\n1000 1000\n500 1000\n''') == '4\\n0'\n'''\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin, stdout\nt = int(stdin.readline())\n\nwhile t > 0:\n    a, b = map(int, stdin.readline().split())\n    if a % b == 0:\n        stdout.write(str(0))\n        stdout.write(\"\\n\")\n    else:\n        count = 0\n        while a % b!= 0:\n            a += 1\n            count += 1\n        stdout.write(str(count))\n        stdout.write(\"\\n\")\n    t -= 1\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2\\n') == '1\\n0\\n0\\n1\\n2\\n'\nassert solution('2\\n2\\n') == '0\\n0\\n1\\n1\\n'\nassert solution('1\\n1\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('3\\n3\\n') == '2\\n0\\n0\\n0\\n'\nassert solution('2\\n4\\n') == '3\\n0\\n1\\n1\\n'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2\\n5\\n4\\n333\\n0'\n'''"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 4''') == '2'\nassert solution('''13 9''') == '5'\nassert solution('''100 13''') == '333'\nassert solution('''123 456''') == '0'\n'''"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1\\n2 3\\n3 2') == '2\\n0\\n0\\n0\\n0\\n'\nassert solution('2 2\\n3 2\\n1 1') == '2\\n2\\n0\\n0\\n'\nassert solution('2 2\\n3 2\\n1 1\\n1 1') == '2\\n0\\n0\\n0\\n0\\n'\nassert solution('2 2\\n3 2\\n1 1\\n1 1\\n1 1') == '2\\n0\\n0\\n0\\n0\\n'\nassert solution('2 2\\n3 2\\n1 1\\n1 1\\n1 1\\n1 1') == '2\\n0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\n\"\"\"\nfrom sys import stdin,stdout\nfrom collections import deque\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\n'''\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\nInput\n6 5\n4 4 4 4 4 4\n\nOutput\n1.333333333333333\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n3 4 1 2''') == '2.666666666666667'\n\nassert solution('''4 3\n3 1 2 4''') == '2.666666666666667'\n\nassert solution('''4 3\n3 1 4 5''') == '2.333333333333333'\n\nassert solution('''2 2\n-10 -9 -7 -6 -4 -3 -2 -1\n2 3 4''') == '-1.5'\n\nassert solution('''2 2\n5 4 -1''') == '-1.5'"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\nInput\n10 5\n1 2 3 4 5 6 7 8 9 10\n\nOutput\n9.333333333333334\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 1 2\\n') == '2.666666666666667'\nassert solution('3 4 1 2\\n') == '2.666666666666667'\nassert solution('3 4 1 2\\n') == '2.666666666666667'\nassert solution('2 4 1 2\\n') == '2.666666666666667'\nassert solution('2 4 1 2\\n') == '2.666666666666667'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.666666666666667\"\n\nInput\n6 7\n1 2 1 3 2 4 1\n\nOutput\n2.5\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4\\n2 3 4 1') == '2.666666666666667'\nassert solution('3 4 1 2\\n2 3 4 1') == '2.666666666666667'\nassert solution('1 2 3 4\\n1 2 3 4 1') == '1.58496535'\nassert solution('5 6 8 9 10\\n3 4 6 7 9') == '2.28'\nassert solution('1 2 3 4\\n2 3 4 1\\n2 3 4 1') == '2.666666666666667'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 2 1\\n2 1') == 2.666666666666667\nassert solution('2 2\\n1 2 1') == 2.5\nassert solution('1 1\\n1 1') == 1\nassert solution('2 2\\n1 2 1') == 2.5\nassert solution('2 3\\n1 2 1 3') == 2.666666666666667\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4 1 2''') == '2.666666666666667'"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n1 2\") == \"YES\"\nassert solution(\"3\\n1 2\\n1 3\") == \"NO\"\nassert solution(\"3\\n1 2\\n1 3\\n1 4\") == \"NO\"\nassert solution(\"3\\n1 2\\n1 3\\n1 4\\n1 5\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''6\n4 2\n4 1 2 3\n1 3\n5 2\n2 1 2 3\n1 4\n''') == 'NO'\nassert solution('''6\n4 2\n4 1 2 3\n1 3\n5 2\n2 1 2 3\n1 4\n''') == 'YES'\nassert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3\n1 4\n''') == 'NO'\nassert solution('''6\n3 2\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"t\") == \"\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2 1\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\") == \"YES\"\nassert solution(\"4\\n1\\n2\\n1\\n2\\n1\") == \"NO\"\nassert solution(\"4\\n1\\n2\\n2\\n2\\n1\") == \"NO\"\nassert solution(\"2\\n1\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO\\nYES\\nNO\\nYES\\nNO\\nYES\\n'\n\nassert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES\\nNO\\nYES\\nYES\\nNO\\nYES\\n'\n\nassert solution('''3\n2 3\n1 2\n3 3\n2 2\n2 2\n2 2\n''') == 'NO\\n'\n\nassert solution('''3\n2 3\n1 2\n3 3\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n''') == 'YES\\n'\n\nassert solution('''7\n2 2\n1 2\n3 3\n4 2\n1 1 2 3\n2 2\n2 2\n2 2\n1 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n1 1 3 3\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"\"\"\nYES\nNO\nYES\nYES\nNO\nYES\nYES\n\"\"\"\nassert solution(\n\"\"\"\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"\"\"\nYES\nNO\nYES\nYES\nNO\nYES\nYES\n\"\"\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES\\nNO\\nYES\\nYES\\nNO\\nYES\\n'"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\n\nprint(\"Testcase 1 Passed\")\n\n\n---\n\n## Submitting\n\n\n\n*Click here to submit your solution*\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\nbaabbb\n''') == 'bab'\nassert solution('''\n10\nooopppssss\n''') == 'oops'\nassert solution('''\n1\nz\n''') == 'z'\nprint(solution('''\n6\nbaabbb\n'''))\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"Hello, World!\") == \"olleH\"\nassert solution(\"aaaaa\") == \"aaaaa\"\nassert solution(\"baabbb\") == \"baabbb\"\nassert solution(\"bab\") == \"bab\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bab') == 'bab'\nassert solution('baab') == 'baab'\nassert solution('o') == 'o'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"bab\"\nassert solution(\"baa\") == \"baabbb\"\nassert solution(\"baabbb\") == \"baa\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('baab') == 'baab'\nassert solution('baabbb') == 'baabbb'\nassert solution('bab') == 'bab'\nassert solution('baabbb') == 'baabbb'\nassert solution('ooopppssss') == 'oops'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\n\n\n\"\"\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('baa') == 'bab'\nassert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('o') == 'o'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '0'\n\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3''') == '2'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3''') == '1'"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 10') == '1'\nassert solution('3 3') == '0'\nassert solution('4 3') == '0'\nassert solution('3 3') == '0'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 0') == '0'\nassert solution('3 3') == '1'\nassert solution('3 0') == '0'\nassert solution('8 9') == '1'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 3\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '1'\nassert solution('''1 0\n''') == '0'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0\\n') == '0'\nassert solution('5 6\\n') == '2'\nassert solution('2 4\\n1 4 2\\n1 5 3\\n') == '0'\nassert solution('5 7\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '1'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '0'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"1 3 3\") == \"0\"\nassert solution(\"2 1 3\") == \"1\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\n') == '1'\nassert solution('1 0\\n\\n') == '0'\nassert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\n') == '1'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n') == '0'\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n') == '2'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\nBRB\n''') == '1\\nGRB\\n'\nassert solution('''\n7\nRGBGRBB\n''') == '3\\nRGBRGBR\\n'\nassert solution('''\n1\nR\n''') == '1\\nR\\n'\nassert solution('''\n3\nRGR\n''') == '1\\nRGR\\n'\nassert solution('''\n7\nRRGRRBGRBGRGRBGB\n''') == '3\\nRRGRRBGRBGRGRBGB\\n'"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2\nRGBGRB\n''') == '1'\nassert solution('''\n3\nRGRBGB\n''') == '1'\nassert solution('''\n7\nRGRGBRGRBGGRGRGB\n''') == '3'\nassert solution('''\n5\nRGRG\n''') == '3'\nassert solution('''\n7\nRGRGBRGRBGGRGRGBGB\n''') == '3'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\nRGBRB''') == '3'\nassert solution('''7\nGRBBGRBRBR''') == '3'\nassert solution('''7\nBRBGRBBBRB''') == '1'\nassert solution('''7\nBRBGRBBBRB''') == '1'\nassert solution('''7\nRBRGRGBRBGR''') == '2'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('BRB') == 1\nassert solution('RGBGRBB') == 3\nassert solution('GRB') == 2\nassert solution('RGBGRBB') == 3\nassert solution('GB') == 1\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('brb') == '1'\nassert solution('RGBGRBB') == '3'\nassert solution('RBRGBB') == '2'\nassert solution('GB') == '1'\nassert solution('RB') == '0'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RR\") == \"RR\"\nassert solution(\"RRRR\") == \"RRR\"\nassert solution(\"RGBRGB\") == \"RGBRGB\"\nassert solution(\"GB\") == \"GB\"\nassert solution(\"BB\") == \"BB\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(\"test_data/e.test\").read()) == \"BRB\"\n\"\"\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('BRB') == '1'\nassert solution('GB') == '1'\nassert solution('RGBGRBB') == '3'\nassert solution('RGBRGBR') == '3'\nassert solution('RRBRRRBRRR') == '1'\n"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"BRB\") == \"1\"\nassert solution(\"RGBGRBB\") == \"3\"\nassert solution(\"RGBRGBR\") == \"3\"\nassert solution(\"GRBGRBB\") == \"1\"\nassert solution(\"BGRBRGB\") == \"3\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 10000 JPY\\n5 0.10000000 BTC\\n5 2.4 1000000 JPY\\n5 0.10000000 BTC') == '48000.0'\nassert solution('5\\n5 10000 JPY\\n5 0.10000000 BTC\\n5 2.4 1000000 JPY\\n5 0.10000000 BTC') == '48000.0'\nassert solution('5\\n5 10000 JPY\\n5 0.10000000 BTC\\n5 2.4 1000000 JPY\\n5 0.10000000 BTC') == '48000.0'\nassert solution('5\\n5 10000 JPY\\n5 0.10000000 BTC\\n5 2.4 1000000 JPY\\n5 0.10000000 BTC') == '48000.0'\nassert solution('5\\n5 10000 JPY\\n5 0.10000000 BTC\\n5 2.4 1000000 JPY\\n5 0.10000000 BTC') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\\\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\n\nassert solution(\n'''\\\n3\n10 JPY\n0.10000000 BTC\n10 USD\n''') == '48000.0'\n\nassert solution(\n'''\\\n4\n15.8 JPY\n0.10000000 BTC\n3.2 USD\n3.7 EUR\n''') == '60000.0'\n\nassert solution(\n'''\\\n5\n5000 JPY\n10 USD\n1500 JPY\n500 EUR\n250 USD\n''') == '30750.0'\n\nassert solution(\n'''\\\n7\n70000 JPY\n12 USD\n80000 JPY\n15000 JPY\n18000 EUR\n18000 USD\n''') == '1215000.0'"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 JPY\\n2 BTC\") == \"2\"\nassert solution(\"1 JPY\\n0.10000000 BTC\") == \"0.48000\"\nassert solution(\"1 JPY\\n1 BTC\") == \"2\"\nassert solution(\"1 JPY\\n1.1 BTC\") == \"2.48\"\nassert solution(\"1 JPY\\n9.1 BTC\") == \"42.48\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('1000000 JPY\\n100000 BTC') == '48000.0'\nassert solution('1000000 JPY\\n1000000.0 BTC') == '48000.0'\nassert solution('1000000 JPY\\n10000000.0 BTC') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.1'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48001.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48001.1'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48001.2'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''3\n10000 JPY\n0.10000000 BTC\n50000 JPY\n50000.1 BTC''') == '64000.0'\nassert solution('''3\n30000 JPY\n0.0100000 BTC\n1000000 JPY\n0.9900000 BTC''') == '108000.0'\nassert solution('''3\n30000 JPY\n0.0100000 BTC\n1000000 JPY\n0.9900000 BTC''') == '108000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0.10000000 BTC') == '48000.0'\nassert solution('10000 JPY') == '48000.0'\nassert solution('0.10000000 BTC') == '48000.0'\nassert solution('10000 JPY') == '48000.0'\nassert solution('1000000 JPY') == '48000.0'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n10000 JPY\n0.10000000 BTC\n\"\"\") == '48000.0'\n\nassert solution(\n\"\"\"\n3\n1000000 JPY\n2.10000000 BTC\n5.10000000 JPY\n\"\"\") == '106000.0'\n\nassert solution(\n\"\"\"\n10\n0.50000000 BTC\n1.00000000 BTC\n2.50000000 JPY\n5.00000000 JPY\n6.00000000 JPY\n7.00000000 JPY\n8.00000000 JPY\n9.00000000 JPY\n10.00000000 JPY\n\"\"\") == '2.75000000000004'\n\nassert solution(\n\"\"\"\n10\n0.00000000 BTC\n1.00000000 BTC\n2.00000000 BTC\n3.00000000 BTC\n4.00000000 BTC\n5.00000000 BTC\n6.00000000 BTC\n7.00000000 BTC\n8.00000000 BTC\n9.00000000 BTC\n10.00000000 BTC\n\"\"\") == '4.00000000'\n\nassert solution(\n\"\"\"\n10\n0.00000000 BTC\n1.00000000 BTC\n2.00000000 BTC\n3.00000000 BTC\n4.00000000 BTC\n5.00000000 BTC\n6.00000000 BTC\n7.00000000 BTC\n8.00000000 BTC\n9.00000000 BTC\n10.00000000 BTC\n\"\"\") == '5.00000000'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('1\\n100000000 BTC') == '8.399999999999999e+19'\nassert solution('10\\n100000000 JPY') == '8.399999999999999e+19'\nassert solution('10\\n100000000 BTC') == '8.399999999999999e+19'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('3\\n1000000 JPY\\n10000000 BTC\\n10001 JPY\\n1000000 BTC\\n10001 BTC') == '2509.68375'\nassert solution('3\\n1000000 JPY\\n0.10000000 BTC\\n1000000 JPY\\n1000000 BTC\\n0.10000000 BTC') == '2509.68375'\nassert solution('4\\n1000000 JPY\\n0.10000000 BTC\\n0.10000000 BTC\\n0.10000000 BTC\\n1000000 JPY\\n1000000 BTC') == '2509.68375'\nassert solution('4\\n1000000 JPY\\n0.10000000 BTC\\n0.10000000 BTC\\n0.10000000 BTC\\n0.10000000 BTC') == '2509.68375'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"5 2\") == \"1\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3\n\"\"\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '3'\nassert solution('5 3') == '3'\nassert solution('5 3') == '3'\nassert solution('5 3') == '3'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '3'\nassert solution('1 5') == '4'\nassert solution('3 2') == '1'\nassert solution('9 9') == '8'\nassert solution('10 7') == '9'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 2') == '3'\nassert solution('4 1') == '3'\nassert solution('4 3') == '2'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[stdin.find('\\n')+1:][:-1]"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == '3'\nassert solution('1 2') == '0'\nassert solution('2 1') == '1'\nassert solution('1 2 3 4') == '2'\nassert solution('2 2') == '-1'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('3 1') == '2'\nassert solution('2 1') == '1'\nassert solution('3') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"100 99\") == \"1\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ip cc''') == 'icpc'\nassert solution('''ip cc''') == 'icpc'\nassert solution('''ip cc''') == 'icpc'\nassert solution('''ip cc''') == 'icpc'\nassert solution('''ip cc''') == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"hi\") == \"hihi\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[::2]\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('a cc') == 'acac'\nassert solution('aa cc') == 'accac'\nassert solution('cc a') == 'cccac'\nassert solution('cc aa') == 'cccacac'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"llbzt\") == \"bbztl\"\nassert solution(\"xyzw\") == \"zxyw\"\nassert solution(\"xyzw\") == \"zxyw\"\nassert solution(\"zxyw\") == \"zxyw\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ip cc') == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('ipcc') == 'icpc'\nassert solution('ibcc') == 'ibc'\nassert solution('iecc') == 'ec'\nassert solution('iccc') == 'cc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ip cc') == 'icpc'\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ip cc') == 'icpc'\nassert solution('mq xw wxz') == 'wxz mq'\nassert solution('hq yxz hq') == 'hq yxz hq'\nassert solution('bzz zxxz') == 'zxxz bzz'\nassert solution('zqc hqzqc') == 'hqzqc zqc'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(ABA) == 'Yes'\nassert solution(ABCD) == 'No'\nassert solution(ABB) == 'Yes'\nassert solution(ACBCAB) == 'Yes'\nassert solution(ABCD) == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == \"Yes\"\nassert solution(input(\"ABA\")) == \"Yes\"\nassert solution(input(\"ABC\")) == \"No\"\nassert solution(input(\"AB\")) == \"No\"\nassert solution(input(\"BA\")) == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABB\") == \"Yes\"\nassert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('BAB') == 'Yes'\nassert solution('ABC') == 'No'\n\n\"\"\""
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"A\") == \"No\"\nassert solution(\"AB\") == \"Yes\"\nassert solution(\"BBA\") == \"Yes\"\nassert solution(\"BB\") == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'\nassert solution('ABCD') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('BAA') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"BAB\") == \"Yes\"\nassert solution(\"AAA\") == \"No\"\nassert solution(\"ABB\") == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(ABA) == \"Yes\"\nassert solution(BBA) == \"No\"\nassert solution(BBB) == \"Yes\"\nassert solution(CAB) == \"No\"\nassert solution(ABC) == \"Yes\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('BAA') == 'No'\nassert solution('BAB') == 'Yes'\nassert solution('BBA') == 'Yes'\nassert solution('ABB') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\nassert solution('ABBA') == 'Yes'\nassert solution('ABBB') == 'No'\nassert solution('AAAB') == 'Yes'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\nassert solution('RRSRS') == '2'\nassert solution('RSRSRS') == '2'\nassert solution('RSRSRSRS') == '3'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RRS') == 2\nassert solution('RRR') == 0\nassert solution('RRSRRS') == 3\nassert solution('RRRRR') == 1\nassert solution('RRSRRR') == 1\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('RRR') == 2\nassert solution('RRS') == 2\nassert solution('RSRS') == 1\nassert solution('RRRRS') == 1\nassert solution('RRRRSRS') == 2\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '3'\nassert solution('RRRR') == '0'\nassert solution('RRRRS') == '2'\nassert solution('RRSRS') == '2'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('RRR') == 1\nassert solution('RRRR') == 0\nassert solution('RRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRS') == 4\nassert solution('RSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRS') == 0\nassert solution('RRRRSRRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRSRS') == 6\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRSRSRS') == '1'\nassert solution('RRRR') == '0'\nassert solution('RSRRSRSR') == '3'\nassert solution('RRSRSRSRSRSRRSRRSRSRSRSRSRSRSRSR') == '10'\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"R\") == 1\nassert solution(\"RR\") == 1\nassert solution(\"RS\") == 2\nassert solution(\"RRR\") == 2\nassert solution(\"RRS\") == 2\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('RRR') == '2'\nassert solution('RRS') == '2'\nassert solution('RRSRS') == '2'\nassert solution('RRRS') == '2'\nassert solution('RRRSS') == '2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:-1]\n\n\"\"\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"2 1 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 1 2\"\nassert solution(\"2 3 1\") == \"1 2 3\"\nassert solution(\"3 2 1\") == \"1 2 3\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"4 1 2 3\"\nassert solution(\"1 3 2 4\") == \"1 2 3 4\"\nassert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"1 1 2\") == \"2 1 1\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('2 4 3') == '3 4 2'\nassert solution('2 4 3') == '3 4 2'\nassert solution('1 1 1') == '1 1 1'\nassert solution('1 1 2') == '1 2 1'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\n\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\n\nassert solution('3 1 2') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('5 6 7') == '3 1 2'\nassert solution('10 11 12') == '3 1 2'\nassert solution('100 101 102') == '3 1 2'\nassert solution('1000 1001 1002') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('2 1 3') == '3 1 2'\nassert solution('3 1 2') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 2 3\") == \"3 1 2\"\nassert solution(\"12 15 17\") == \"17 12 15\"\nassert solution(\"25 32 17\") == \"17 12 15\"\nassert solution(\"35 25 32\") == \"17 12 15\"\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n1 2 3\n''') == '3 1 2'\nassert solution(\n'''\n1 2 3\n''') == '3 1 2'\n\nassert solution(\n'''\n1\n''') == '1'\nassert solution(\n'''\n3\n''') == '3'\nassert solution(\n'''\n999\n''') == '999'\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n\n\"\"\""
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('30 100') == '100'\nassert solution('90 100') == '90'\nassert solution('10 1000') == '100'\nassert solution('10 10000') == '10000'\nassert solution('50 100') == '50'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"30 1\") == \"30\"\nassert solution(\"20 35\") == \"20\"\nassert solution(\"20 1\") == \"30\"\nassert solution(\"30 1\") == \"30\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('30 100') == '100'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 100') == '100'\nassert solution('30 100') == '100'\nassert solution('1 100') == '100'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('30 100') == '100'\nassert solution('20 30') == '30'\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"100\"\nassert solution(\"2 1\") == \"100\"\nassert solution(\"3 5\") == \"150\"\nassert solution(\"10 1000\") == \"5000\"\nassert solution(\"30 1000\") == \"10000\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30 100') == '100'\nassert solution('6 100') == '100'\nassert solution('32 50') == '150'\nassert solution('6 100') == '100'\nassert solution('5 100') == '50'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('+-++') == \"2\"\n\"\"\""
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('++') == '2'\nassert solution('-+') == '1'\nassert solution('+-++') == '2'\nassert solution('+--++') == '3'\nassert solution('+-++-++') == '4'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('++-++') == '2'\nassert solution('++-++') == '2'\nassert solution('--++-') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('+-++') == '2'\nassert solution('++-') == '-1'\nassert solution('++--') == '-2'\nassert solution('+---') == '-1'\nassert solution('++---') == '-3'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++-++-++-++-++') == '6'\nassert solution
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-+-++\") == \"0\"\nassert solution(\"+++-++\") == \"2\"\nassert solution(\"++-++-++\") == \"0\"\nassert solution(\"++--++-++\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"+-++\") == 2\nassert solution(\"-++-\") == 0\nassert solution(\"+-++-++\") == 1\nassert solution(\"++-++-++\") == -1\nassert solution(\"-++-++-++-\") == -2\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-+-+++') == '2'\nassert solution('+--+++') == '2'\nassert solution('+--+++') == '2'\nassert solution('-++-++') == '-2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"-++-\") == \"-2\"\nassert solution(\"-+++\") == \"0\"\nassert solution(\"+++-\") == \"2\"\nassert solution(\"++-++\") == \"0\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Heisei'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/02/29') == 'Heisei'\nassert solution('2019/01/28') == 'TBD'\nassert solution('2019/12/31') == 'Heisei'\nassert solution('2019/06/30') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'Heisei'\nassert solution('2019/04/29') == 'Heisei'\nassert solution('2019/04/30') == 'TBD'\nassert solution('2019/04/31') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'Heisei'\nassert solution('2019/05/01') == 'TBD'\nassert solution('2019/05/22') == 'TBD'\nassert solution('2019/05/28') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/31') == 'TBD'\nassert solution('2019/05/01') == 'TBD'\nassert solution('2019/05/32') == 'Heisei'\nassert solution('2019/06/01') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/01/01') == 'TBD'\nassert solution('2019/03/31') == 'Heisei'\nassert solution('2019/02/28') == 'Heisei'\nassert solution('2019/02/29') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Heisei\"\nassert solution(input()) == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/05/30\") == \"TBD\"\nassert solution(\"2019/06/30\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/03/30') == 'TBD'\nassert solution('2019/02/30') == 'TBD'\nassert solution('2019/01/30') == 'TBD'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\nassert solution('''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n\nfrom collections import Counter\nfrom math import ceil, log10\n\nn = int(input())\na = [int(x) for x in input().split()]\na_count = Counter(a)"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''3\n1337 1337 1337\n''') == '3'\n'''\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '9'\nassert solution(stdin) == '3'\nassert solution(stdin) == '5'\nassert solution(stdin) == '4'\nassert solution(stdin) == '7'\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6''') == '9'\nassert solution('''3\n1337 1337 1337''') == '3'\n'''\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6''') == '9'\nassert solution('''3\n1337 1337 1337''') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\n\n'''\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 2''') == '''2'''\nassert solution('''10 4''') == '''3'''\nassert solution('''7 2''') == '''2'''\nassert solution('''10 4''') == '''3'''\nassert solution('''5 7''') == '''0'''\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 2 1 3 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\n\n\n\"\"\""
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''2 4\n2 3 3 1 1 2 1 2 3 3''') == '2'\nassert solution('''1 4\n1 2 3 2 1 3 2''') == '2'\nassert solution('''1 5\n1 2 3 2 1 3 2''') == '2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"1 3 2\"\nassert solution(\"10 4\") == \"2 1\"\nassert solution(\"10 7\") == \"2 1 2 3\"\n\n\n\n\"\"\""
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 2') == '1 3 2'\nassert solution('1 2 3 2 1 3 2') == '2 1'\nassert solution('2 3 3 1 1 2 1 2 3 3') == '3 1 2'\nassert solution('5 4') == '3'\nassert solution('1 2 3 2 1 3 2') == '2 1'\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2\\n3') == '1\\n2\\n3'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2\\n3') == '3\\n2'\nassert solution('2\\n2\\n4') == '-1'\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n\nassert solution('''10\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '3\\n2\\n'\n\nassert solution('''3 1\n1\n2\n3\n''') == '-1\\n'\n\nassert solution('''10\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '5\\n7\\n8\\n9\\n20\\n'\n\nassert solution('''7 8\n7\n8\n7\n8\n7\n8\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n''') == '5\\n5\\n10\\n7\\n8\\n'"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n'''\n    n, q = map(int, stdin.readline().strip().split(' '))\n    a = list(map(int, stdin.readline().strip().split(' ')))\n    a.sort()\n    b = list(map(int, stdin.readline().strip().split(' ')))\n    print(solution(stdin))\n'''"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1\\n-1\\n3\\n2\\n'\n'''1\n4\n7\n8\n10\n'''\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n'''\n) == '21'\nassert solution(\n'''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n'''\n) == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''3 3\n9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n1 1 2\n''') == '6'\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\n\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\nassert solution('1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1') == '0'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '0'\nassert solution('6 5\\n1 2 3 4 5 6\\n2 3 4 5 6\\n3 4 5 6\\n4 5 6\\n5 6') == '21'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n2 4 6 6 6\n\"\"\"\n) == \"\"\"\n2\n1 2 3\n1 1 2\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n2 8 10\n\"\"\"\n) == \"\"\"\n2\n2 2 1\n2 3 2\n\"\"\"\n\nassert solution(\n\"\"\"\n4\n1 1 1 1\n\"\"\"\n) == \"\"\"\n0\n\"\"\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\n\nassert solution('''3\n2 8 10\n''') == '2'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '0'\n\nassert solution('''8\n1 1 1 1 1 1 1 1\n''') == '0'"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 1 1 1') == '2'\nassert solution('5\\n2 4 6 6 6') == '2'\nassert solution('4\\n2 8 10') == '2'\nassert solution('3\\n2 8 10') == '2'\nassert solution('3\\n1 1 1 1') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '2'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\nassert solution('''2 2 1''') == '2'\nassert solution('''10''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 1 1') == '2\\n1 2 3'\nassert solution('5\\n2 4 6 6 6') == '2\\n1 2 3'\nassert solution('3\\n2 8 10') == '2\\n2 2 1'\n\n\n\"\"\"\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ni = 0\nj = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if abs(a[i] - a[j]) == 1:\n            break\n    if abs(a[i] - a[j]) == 1:\n        break\n\ncount = i + j\n\nfor i in range(n):\n    if abs(a[i] - a[j]) == 1:\n        count += 1\n        if a[i] - a[j] < 0:\n            print(1, i + 1, j + 1)\n        else:\n            print(2, i + 1, j + 1)\n\nprint(count)\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '''2'''\nassert solution('''3''') == '''2\n2 2 1'''\nassert solution('''4''') == '''2\n2 2 1\n2 3 2'''\nassert solution('''4\n2 3 4''') == '''2\n2 2 1\n2 3 2'''\nassert solution('''6''') == '''2\n1 2 3 \n1 1 2 \n1 3 2 \n1 4 2 \n1 5 2 \n1 6 2'''\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n2 4 6 6 6''') == '2'\nassert solution(\n'''3\n2 8 10''') == '2'\nassert solution(\n'''4\n1 1 1 1''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''1\n2 2 2 2''') == '0'\nassert solution('''2\n1 1 1 1''') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100010') == 1\nassert solution('000000') == 0\nassert solution('10101') == 2\nassert solution('001') == 1\nassert solution('00') == 0\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n0\\n') == '1'\nassert solution('101\\n2\\n0000\\n') == '0'\nassert solution('00010\\n1\\n01010\\n') == '0'\nassert solution('00010\\n1\\n11011\\n') == '0'\nassert solution('00010\\n1\\n11111\\n') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"solution.py\").read()) == \"1\"\n\"\"\""
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 1 0 0 0 1 0 1 0 1 0\") == \"2\"\nassert solution(\"1 0 0 1 0 0 1 0 1 0 1\") == \"1\"\nassert solution(\"1 0 1 0 1 0 0 1 0 1 1\") == \"0\"\nassert solution(\"1 0 1 0 1 0 1 0 1 1 1\") == \"1\"\nassert solution(\"1 0 1 0 1 0 1 0 1 1 1\") == \"2\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('input.txt') == '1\\n1'\nassert solution('2.in') == '1\\n1'\nassert solution('1.in') == '1\\n0'\nassert solution('7.in') == '4\\n0'\nassert solution('20.in') == '17\\n0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\"\"\") == \"1\"\nassert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '2'\nassert solution(\n'''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n01''') == '0'\nassert solution(\n'''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution(\n'''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n01\n1 1\n0''') == '1'\nassert solution(\n'''6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n1''') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\\n\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"3\\n3 1\\n101\") == \"0\"\nassert solution(\"1\\n1 1\\n1\") == \"1\"\nassert solution(\"5\\n5 1\\n10101\") == \"1\"\nassert solution(\"0\\n0 1\\n11\") == \"0\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''1 1\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23 4\n23"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 11\\n11 9\\n8 9\\n7 9\\n9 11\\n7 9\\n') == '3'\nassert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3'\n\n\n-----\n\nimport sys"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"3\\n4 6 7\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"3\\n1 4 5\"\nassert solution(\"2 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\") == \"0\"\nassert solution(\"7 1\\n7 1\\n7 1\\n7 1\\n7 1\\n7 1\\n7 1\") == \"0\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''7 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n2 3\n''') == '5'\nassert solution('''7 1\n9 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6'\nassert solution('7 1\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7'\n\n-----Template------"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n'\n    '2 1\\n'\n    '1 2\\n'\n    '2 2\\n'\n) == '3'\n\nassert solution('2 2\\n'\n    '2 1\\n'\n    '1 2\\n'\n    '2 2\\n'\n) == '3'\n\nassert solution('1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n) == '0'\n\nassert solution('1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n) == '0'\n\nassert solution('1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n    '1 1\\n'\n) == '0'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30\\n31\\n10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30\\n31\\n10\\n'\nassert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 4\n''') == '30\\n31\\n10\\n'\nassert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n2 3 4\n''') == '30\\n31\\n10\\n'\nassert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 2 3\n''') == '30\\n31\\n10\\n'\nassert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n1 3 4\n''') == '30\\n31\\n10\\n'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n2\n1 2 3\n''') == '4'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n2\n1 2 3\n''') == '3'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n2\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\n\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\n\nassert solution('''3\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nq = int(stdin.readline())\nfor _ in range(q):\n    s = int(stdin.readline())\n    if s == 0:\n        print(0)\n    else:\n        s = a[0]\n        for i in range(1, n):\n            if i < n - 1:\n                s += max(a[i], a[i + 1])\n            else:\n                s += a[i]\n        print(s)\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == 30\nassert solution('1\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == 31\nassert solution('1\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == 10\nassert solution('1\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == 31\nassert solution('1\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == 31\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30\\n31\\n10\\n'\n\nassert solution('''3\n3\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '0\\n0\\n0\\n'\n\nassert solution('''3\n3\n5 6 15 30\n4\n10 6 30 15\n1\n3 4 6\n''') == '0\\n0\\n3\\n'\n\nassert solution('''3\n3\n5 6 15 30\n4\n10 6 30 15\n1\n3 4 6\n''') == '0\\n0\\n3\\n'\n\nassert solution('''3\n3\n5 6 15 30\n4\n10 6 30 15\n1\n3 4 6\n''') == '0\\n0\\n3\\n'"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\nassert solution('''4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10'\nassert solution('''4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10'\nassert solution('''4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4') == '0'\nassert solution('2\\n1') == '2'\nassert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('3\\n2') == '2'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2'\nassert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '1'\nassert solution('''2\n3\n2 1\n2\n2\n2''') == '2'\nassert solution('''2\n1\n2\n2\n2\n2''') == '2'\nassert solution('''2\n3\n4\n1\n2\n3\n2\n1\n2\n2\n2\n1\n3\n2\n3\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '1'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n40\n''') == '1'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n40\n''') == '2'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2\\n1\\n2\\n1'\nassert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n43\n''') == '1\\n1\\n2\\n1'\nassert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n2\n''') == '2\\n1\\n2\\n1'\nassert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n3\n''') == '2\\n1\\n2\\n1'\nassert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n3\n''') == '2\\n1\\n2\\n1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\n\nassert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '1'\n\nassert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n2\n4 5 6 7\n1\n''') == '2'\n'''\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n4''') == '2'\nassert solution('''2\n2\n1 4\n2 3''') == '1'\nassert solution('''2\n2\n1 4\n2 3''') == '2'\nassert solution('''3\n3\n1 2 3\n2 1 3\n1 3 2''') == '3'\nassert solution('''3\n3\n1 2 3\n2 1 3\n1 3 2''') == '2'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == answer_expected\n\"\"\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\n\n\"\"\"\nThe maximum possible number of teams is the total number of students minus 1, since every student is in a team.\nWe now have to find the minimum possible number of teams using the number of students, so that:  the number of teams is the minimum possible;  the number of teams is the maximum possible if the number of students is n - 1, since no two students can be in the same team; and the number of teams is the maximum possible if the number of students is n, since at least one student is in the team and the other student is not in the team.\n\"\"\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10 1 20') == '2'\nassert solution('2') == '1'\nassert solution('3 6') == '1'\nassert solution('5') == '2'\nassert solution('2 3 4 99 100') == '1'\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES\\n'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO\\n'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n4 2 6 27\n4 2 6 27''') == 'NO\\n'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18''') == 'NO\\n'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18\n3 3 5 18''') == 'NO\\n'\n\n\n-----Note-----\nThe first line contains integer $q$ indicating the number of test cases.\n\nFor each test case:\n\n1st line contains two integers $a$, $b$, $n$ and $S$\n\n2nd line contains a list of integers, each integer is a coin of value $n$\n\n3rd line contains a list of integers, each integer is a coin of value $1$\n\n4th line contains an integer, the value of $n$\n\n5th line contains an integer, the value of $S$\n\n6th line contains a list of integers, each integer is a coin of value $1$\n\n7th line contains a list of integers, each integer is a coin of value $n$\n\n8th line contains an integer, the value of $S$\n\n9th line contains a list of integers, each integer is a coin of value $1$\n\n10th line contains a list of integers, each integer is a coin of value $n$\n\n11th line contains an integer, the value of $S$\n\n12th line contains a list of integers, each integer is a coin of value $1$\n\n13th line contains a list of integers, each integer is a coin of value $n$\n\n14th line contains an integer, the value of $S$\n\n15th line contains a list of integers, each integer is a coin of value $1$\n\n16th line contains a list of integers, each integer is a coin of value $n$\n\n17th line contains an integer, the value of $S$\n\n18th line contains a list of integers, each integer is a coin of value $1$\n\n19th line contains a list of integers, each integer is a coin of value $n$\n\n20th line contains an integer, the value of $S$\n\n21th line contains a list of integers, each integer is a coin of value $1$\n\n22th line contains a list of integers, each integer is a coin of value $n$\n\n23th line contains an integer, the value of $S$\n\n24th line contains a list of integers, each integer is a coin of value $1$\n\n25th line contains a list of integers, each integer is a coin of value $n$\n\n26th line contains an integer, the value of $S$\n\n27th line contains a list of integers, each integer is a coin of value $1$\n\n28th line contains a list of integers, each integer is a coin of value $n$\n\n29th line contains an integer, the value of $S$\n\n30th line contains a list of integers, each integer is a coin of value $1$\n\n31th line contains a list of integers, each integer is a coin of value $n$\n\n32th line contains an integer, the value of $S$\n\n33th line contains a list of integers, each integer is a coin of value $1$\n\n34th line contains a list of integers, each integer is a coin of value $n$\n\n35th line contains an integer, the value of $S$\n\n36th line contains a list of integers, each integer is a coin of value $1$\n\n37th line contains a list of integers, each integer is a coin of value $n$\n\n38th line contains an integer, the value of $S$\n\n39th line contains a list of integers, each integer is a coin of value $1$\n\n40th line contains a list of integers, each integer is a coin of value $n$\n\n41th line contains an integer, the value of $S$\n\n42th line contains a list of integers, each integer is a coin of value $1$\n\n43th line contains a list of integers, each integer is a coin of value $n$\n\n44th line contains an integer, the value of $S$\n\n45th line contains a list of integers, each integer is a coin of value $1$\n\n46th line contains a list of integers, each integer is a coin of value $n$\n\n47th line contains an integer, the value of $S$\n\n48th line contains a list of integers, each integer is a coin of value $1$\n\n49th line contains a list of integers, each integer is a coin of value $n$\n\n50th line contains an integer, the value of $S$\n\n51th line contains a list of integers, each integer is a coin of value $1$\n\n52th line contains a list of integers, each integer is a coin of value $n$\n\n53th line contains an integer, the value of $S$\n\n54th line contains a list of integers, each integer is a coin of value $1$\n\n55th line contains a list of integers, each integer is a coin of value $n$\n\n56th line contains an integer, the value of $S$\n\n57th line contains a list of integers, each integer is a coin of value $1$\n\n58th line contains a list of integers, each integer is a coin of value $n$\n\n59th line contains an integer, the value of $S$\n\n60th line contains a list of integers, each integer is a coin of value $1$\n\n61th line contains a list of integers, each integer is a coin of value $n$\n\n62th line contains an integer, the value of $S$\n\n63th line contains a list of integers, each integer is a coin of value $1$\n\n64th line contains a list of integers, each integer is a coin of value $n$\n\n65th line contains an integer, the value of $S$\n\n66th line contains a list of integers, each integer is a coin of value $1$\n\n67th line contains a list of integers, each integer is a coin of value $n$\n\n68th line contains an integer, the value of $S$\n\n69th line contains a list of integers, each integer is a coin of value $1$\n\n70th line contains a list of integers, each integer is a coin of value $n$\n\n71th line contains an integer, the value of $S$\n\n72th line contains a list of integers, each integer is a coin of value $1"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n--------------------------------------------------------------------------------\nMy Plan:\nThis is a very straightforward problem to solve in a more explicit way.\nI have 2 values, a and b.\nI need to know if there exist two integers x and y where 0<x<a and 0<y<b that satisfy the following condition:\nx+y=n\nx+y<=b\nx+y>=a\n\nThis can be modeled with the following 2 variables, initialized with values 0 and 1:\n\na = 0\nb = 1\nn = 2\n\nThe condition can be reduced to:\n\nx+y=n\nx+y<=b\nx+y>=a\nx<y\n\nSince x and y are integers, x must be greater than 0 and y must be greater than 0.\n\nWe have a and b, so we can restrict ourselves to only integers.\nWe can take a and b each in turn in order to ensure that\nwe are doing the following:\n\na+b=n\na+b<=b\na+b>=a\na<b\n\nI can take any value of a and b and see if it satisfies the condition, so we can iterate a and b in order to solve the problem, but there are probably a lot more ways to do it.\n\nI can also use the binary search approach to solve this problem.\n\n\"\"\""
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n5 1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n\"\"\""
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 3 4''') == 'NO'\nassert solution('''1 2 3 6''') == 'NO'\nassert solution('''5 2 6 27''') == 'NO'\nassert solution('''3 3 5 18''') == 'YES'\n'''"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"\"\nassert solution(\"abcdefghijklmnopqrstuvwxy\") == \"\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\") == \"\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO\\nYES\\nNO\\nNO'\n\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES\\nNO\\nNO\\nYES'\n\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES\\nYES\\nNO\\nNO'\n\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES\\nYES\\nNO\\nYES'\n\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES\\nYES\\nNO\\nNO'"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'NO\\nYES\\nNO\\nNO'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n0 0 0 0') == 'NO\\nYES\\nNO\\nYES'\n\n'''"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline().strip())\nfor i in range(T):\n    a, b, n, s = map(int, sys.stdin.readline().strip().split())\n    if n < s:\n        print('NO')\n    else:\n        #a <= x <= a+b\n        #x <= n\n        #x == n\n        #n == s\n        #n == b\n        #a+b == s\n        #n == s - b\n        #n == s + a\n        #n - b == s + a\n        if n == s + a:\n            print('YES')\n        elif n == s + a - b:\n            print('YES')\n        else:\n            print('NO')"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 2 3 4 5 6') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\\n\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n\"\nassert solution(\"5\\n4 3 1 5 3\\n\") == \"YES\\n1\\n3\\n4\\n5 4 3 1\\n\"\nassert solution(\"5\\n1 1 2 1 2\\n\") == \"NO\\n\"\nassert solution(\"5\\n0 1 2 1 2\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 1 2 1 2\\n\") == \"YES\\n1\\n3\\n4\\n5 4 3 1\\n\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n''') == 'NO'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n1 1 2 3 4\n''') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n''') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n2\\n2\\n2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''7\n7 2 7 3 3 1 4\n''') == 'YES'\n\nassert solution(\n'''5\n4 3 1 5 3\n''') == 'YES'\n\nassert solution(\n'''5\n1 1 2 1 2\n''') == 'NO'\n\nassert solution(\n'''5\n0 1 2 3 4\n''') == 'YES'\n\nassert solution(\n'''5\n4 3 1 5 3\n''') == 'NO'"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n7 2 7 3 3 1 4\\n') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n'\nassert solution('5\\n4 3 1 5 3\\n') == 'YES\\n1\\n3\\n4\\n5 4 3 2 1\\n'\nassert solution('5\\n1 1 2 1 2\\n') == 'NO\\n'\nassert solution('5\\n0 1 2 1 2\\n') == 'NO\\n'\nassert solution('5\\n0 1 2 1 2\\n') == 'NO\\n'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0') == 'NO'\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n'\n\nassert solution('''5\n4 3 1 5 3\n''') == 'YES\\n1\\n3\\n4\\n5 4 3 2 1\\n'\n\nassert solution('''5\n1 1 2 1 2\n''') == 'NO\\n'\n\nassert solution('''7\n0 1 2 3 3 1 4\n''') == 'YES\\n1\\n3\\n4\\n5 4 3 2 1\\n'\n\nassert solution('''5\n0 1 2 1 2\n''') == 'NO\\n'"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\\n\") == \"YES\"\nassert solution(\"5\\n4 3 1 5 3\\n\") == \"YES\"\nassert solution(\"5\\n4 3 1 5 3\\n\") == \"NO\"\nassert solution(\"5\\n1 1 2 1 2\\n\") == \"YES\"\nassert solution(\"5\\n0 1 2 1 2\\n\") == \"NO\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('8 2\\n7 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == str(solution(test1)) # == '25'"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('8 7\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('4 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == \"18\"\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == \"8\"\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == \"-1\"\nassert solution('''5 3\n4 2 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == \"-1\"\nassert solution('''6 1 0\n6 0 0\n1 0 1\n2 1 1\n3 0 1\n5 0 1\n6 0 0\n''') == \"5\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\nassert solution('''8 5\n7 0 0\n2 1 0\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''8 3\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '8'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"18\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"7\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\") == \"17\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"100\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18'\n\nassert solution(\n'''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\n\nassert solution(\n'''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 2') == '18'\nassert solution('5 2') == '8'\nassert solution('8 3') == '-1'\nassert solution('5 3') == '8'\nassert solution('5 1') == '8'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2\\n6\\n-1\\n7'\n\n'''\n\n'''"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n1\\n2\\n2\\n3') == '2\\n2\\n2'\nassert solution('1\\n1\\n2\\n3\\n4') == '2\\n2\\n2'\nassert solution('2\\n2\\n1\\n2\\n3\\n4') == '1\\n1\\n1'\nassert solution('2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == '1\\n1\\n1'\nassert solution('5\\n1\\n1\\n2\\n3\\n4') == '2\\n2\\n2'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n2\\n2') == '2'\nassert solution('1\\n2\\n2\\n2') == '2'\nassert solution('1\\n2\\n2\\n2') == '2'\nassert solution('1\\n2\\n2\\n2') == '2'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:-1]"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '6'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5 2 1\n4 2\n1 6\n3 5\n5 2 5\n5"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"1\"\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom math import ceil, floor\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'\nassert solution('5\\n4 4\\n4 4 4 4 4\\n2 2 2\\n1 1 1 1 1 1\\n2 2 2 2 2 2\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == '-1'\nassert solution('5\\n4 4\\n4 4 4 4\\n2 2 2\\n1 1 1 1 1\\n2 2 2 2 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '-1'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 19 19 25 26 25\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\nassert solution('''8\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n4 8 4 15 16 8 16 23 15 16 4 42 23 42') == '0'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42') == '3'\nassert solution('12\\n4 8 4 4 15 16 8 16 23 15 16 4 42 23 42') == '5'\nassert solution('10\\n4 8 4 4 15 16 8 16 23 15 16 4 42 23 42') == '7'\nassert solution('15\\n4 8 4 4 8 15 16 8 16 23 15 16 4 42 23 42') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n4 8 15 16 23''') == \"5\"\nassert solution('''12\n4 8 4 15 16 8 19 23 15 16 4 42 23 42''') == \"0\"\nassert solution('''15\n4 8 4 8 15 16 8 19 23 15 16 4 42 23 42''') == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 8 15 16 23\") == \"5\"\nassert solution(\"4 8 4 15 16 8 23 15 16 4 42 23 42\") == \"0\"\nassert solution(\"12\") == \"5\"\nassert solution(\"4 8 4 15 16 8 16 23 15 16 4 42 23 42\") == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8 15 16 23') == '5'\nassert solution('4 8 4 15 16 8 23 15 16 4 42 23 42') == '0'\nassert solution('12') == '5'\nassert solution('1234') == '0'\nassert solution('12345') == '3'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8 15 16 23') == '5'\nassert solution('4 8 4 15 16 8 23 15 16 4 42 23 42') == '0'\nassert solution('12') == '0'\nassert solution('4 8 4 15 16 8 16 23 15 16 4 42 23 42') == '3'\nassert solution('15') == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n' + '4 8 15 16 23\\n') == '5'\nassert solution('15\\n' + '4 8 4 15 16 8 16 19 22 23 24 26 27 28 30 31 32 34 35 36 37 39\\n') == '3'\nassert solution('1\\n' + '1 2 3 4 5\\n') == '0'\nassert solution('1\\n' + '1 2 3 4 5\\n') == '0'\nassert solution('9\\n' + '1 2 3 4 5 6 7 8 9\\n') == '9'\n"
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('input/01') == '0'\nassert solution('input/02') == '3'\nassert solution('input/03') == '2'\nassert solution('input/04') == '1'\nassert solution('input/05') == '0'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('test') == '2'\nassert solution('2 3') == '3'\nassert solution('5 5') == '0'\nassert solution('13 42') == '3'\nassert solution('18 4') == '2'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13 42\\n18 4') == '0'\nassert solution('1337 420\\n123456789 1000000000\\n100500 9000\\n') == '9150'\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n10\\n') == '3'\nassert solution('2\\n100\\n') == '91'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13 4') == '0'\nassert solution('3 3') == '0'\nassert solution('2 2') == '1'\nassert solution('18 4') == '3'\nassert solution('1337 420') == '92'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10') == '0'\nassert solution('10 1') == '9'\nassert solution('1 1000000000') == '9990000000'\nassert solution('1000000000000000') == '1000000000000000'\nassert solution('9 8') == '5'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n1\\n2\\n3\\n4') == '0\\n1\\n2\\n3\\n4'\nassert solution('0\\n1\\n2\\n3\\n4') == '1\\n2\\n3\\n4'\nassert solution('0\\n5\\n5\\n5') == '0'\nassert solution('0\\n1\\n2\\n3\\n4') == '3'\nassert solution('5\\n5\\n5\\n5') == '0'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339'\nassert solution('7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n0 0 999999999') == '0'\nassert solution('7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n0 0 9999999991') == '15'\nassert solution('7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n0 0 9999999991\\n9\\n9 9999999991') == '999999995'\nassert solution('7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n0 0 9999999991\\n9\\n9 9999999991\\n9\\n9 9999999991\\n9\\n9 9999999991') == '185'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339'\nassert solution('''5\n0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '0'\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n0 0 499999993''') == '54306'\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n0 0 499999999''') == '999999995'\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n0 0 499999999999999''') == '185'\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"7\") == \"\"\nassert solution(\"7 5 12345\") == \"\"\nassert solution(\"5 0 4\") == \"\"\nassert solution(\"10 5 15\") == \"\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7\\n7 5 12345\") == \"12339\"\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom math import ceil\n\nt = int(stdin.readline().strip())\n\nfor i in range(t):\n    x, y, n = map(int, stdin.readline().strip().split(' '))\n    print(ceil(y/x)*x)\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339'\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n4\n1 1 1 1''') == '0'\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n5\n1 1 1 1''') == '15'\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n6\n1 1 1 1 1''') == '54306'\n\nassert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n8\n1 1 1 1 1 1''') == '999999995'"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 2 3 4') == None\nassert solution('1 2 3') == None\nassert solution('1 2 3 4') == None\nassert solution('1 2') == None\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\n'''\n7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n'''\n\nassert solution('''10\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '15\\n54306\\n999999995\\n185\\n999999998'\n'''\n10\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n'''\n\nassert solution('''5\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '15\\n54306\\n999999995\\n185\\n999999998'\n'''\n5\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n'''\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"test\") == \"test\"\nassert solution(\"test\\ntest\") == \"test\\ntest\"\nassert solution(\"\") == \"\"\n\nassert solution(\"7 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\"\n\n\n\"\"\"\n\nfrom itertools import combinations\nn,k = map(int,stdin.readline().split())\nd = list(map(int,stdin.readline().split()))\n\nmin_rem = (k-1)//2\n\nfor i in range(n):\n    if d[i]%k == 0:\n        min_rem -= 1\n    else:\n        break\n\ncombos = [c for c in combinations(range(n),2) if d[c[0]]+d[c[1]]%k == 0]\n\nprint(min_rem+len(combos))\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('7 3\\n1 2 2 3 2 4 6 10\\n') == '4'\n\n\n\n'''\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6\\n'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8\\n'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4\\n'\nassert solution('7 1\\n1\\n') == '1\\n'\nassert solution('7 2\\n1 2\\n') == '2\\n'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n7 2\n1 2 2 3 2 4 10\n\"\"\"\n    ) == '6'\n\nassert solution(\n\"\"\"\n8 2\n1 2 2 3 2 4 6 10\n\"\"\"\n    ) == '8'\n\nassert solution(\n\"\"\"\n7 3\n1 2 2 3 2 4 5\n\"\"\"\n    ) == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 2''') == '6'\nassert solution('''8 2''') == '8'\nassert solution('''7 3''') == '4'\nassert solution('''1 2 2 3 2 4 10''') == '6'\nassert solution('''1 2 2 3 2 4 6 10''') == '8'\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('8 3\\n1 2 2 3 2 4 6 10\\n') == '8'\n\n\"\"\""
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2 2 3\\n') == '6'\nassert solution('10 3\\n1 2 2 3 2 4 5\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 6\\n') == '4'"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('A') == 'a'\nassert solution('AB') == 'ab'\nassert solution('ABC') == 'abc'\nassert solution('aBc') == 'abc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('ABC') == 'aBC'\nassert solution('AB_CD') == 'aBCD'\nassert solution('A_BC_DEF') == 'aBCDef'\nassert solution('A_BC_DEF_G_H') == 'aBCDefGH'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'aBC'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hello') == 'hello'\nassert solution('ABC') == 'abC'\nassert solution('ABc') == 'abC'\nassert solution('abC') == 'abC'\nassert solution('abCd') == 'abCd'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"aBC\""
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"ABc\") == \"Abc\"\nassert solution(\"AbC\") == \"AbC\"\nassert solution(\"ABC\") == \"AbC\"\nassert solution(\"abc\") == \"Abc\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"aBC\"\nassert solution(\"2 1\") == \"ABc\"\nassert solution(\"3 1\") == \"Abc\"\nassert solution(\"4 1\") == \"Abc\"\nassert solution(\"5 1\") == \"Abc\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'aBC'\nassert solution('A a') == 'A a'\nassert solution('AA') == 'A a'\nassert solution('AAB') == 'A a'\nassert solution('AAABB') == 'A a'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''khabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3 4 6 1 5 2'\n'''\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3 4 6 1 5 2'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkulich 15\\nmoscow 22\\nkhabarovsk 30\\nkulich 35\\nmoscow 26\\nkhabarovsk 16\\n') == '3 4 6 1 5 2 5 6 8'\nassert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\nkulich 15\\nmoscow 22\\nkhabarovsk 30\\nkulich 35\\nmoscow 26\\nkhabarovsk 16\\nkulich 12\\nmoscow 22\\nkulich 11\\n') == '3 4 6 1 5 2 5 6 8 4 1 7'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\nkhabarovsk 10\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('2\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n5\\n1\\n2'\nassert solution('3\\nkazan 50\\nkhabarovsk 40\\nmoscow 10\\nkhabarovsk 20\\nkazan 35\\nmoscow 30\\nkzachinsk 40') == '3\\n4\\n5\\n6\\n1\\n2'\nassert solution('4\\nmoscow 50\\nkazan 35\\nkhabarovsk 40\\nkzachinsk 30\\nmoscow 30\\nkzachinsk 40\\nkhabarovsk 40') == '3\\n4\\n5\\n6\\n1\\n2'\nassert solution('5\\nkazan 35\\nmoscow 30\\nkzachinsk 30\\nmoscow 40\\nkhabarovsk 40\\nkzachinsk 40\\nkhabarovsk 40') == '3\\n4\\n5\\n6\\n1\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\n\"\"\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 10\\nmoscow 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('kazan 50\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5'\nassert solution('kazan 50\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5'\nassert solution('moscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\\\n''') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('''\\\n5\nmoscow 50\nkhabarovsk 10\nkazan 50\nmoscow 35\nkazan 35\\\n''') == '4\\n3\\n5\\n1\\n2'\nassert solution('''\\\n4\nmoscow 50\nkhabarovsk 10\nkazan 40\nkazan 35\\\n''') == '3\\n2\\n4\\n1'\nassert solution('''\\\n6\nkhabarovsk 30\nmoscow 15\nkazan 35\nkazan 20\nmoscow 30\nkhabarovsk 35\\\n''') == '3\\n4\\n6\\n1\\n5'\nassert solution('''\\\n6\nmoscow 15\nkazan 35\nkazan 35\nmoscow 30\nkhabarovsk 35\nkhabarovsk 30\\\n''') == '4\\n3\\n6\\n1\\n5'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '4\\n3\\n6\\n1\\n5\\n2'\nassert solution('kazan 35\\nmoscow 60\\nkhabarovsk 20\\nkazan 50\\nmoscow 10') == '3\\n6\\n4\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '4\\n3\\n6\\n1\\n5\\n2'\nassert solution('moscow 35\\nkhabarovsk 45\\nkazan 65\\nkazan 65\\nkhabarovsk 45\\nmoscow 50\\nkhabarovsk 45') == '3\\n6\\n4\\n5\\n2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('moscow 10\\nkhabarovsk 20\\nmoscow 60\\nkazan 35\\nkazan 60\\nmoscow 50\\nkhabarovsk 40') == '4\\n6\\n1\\n5\\n2\\n3'\nassert solution('moscow 60\\nkhabarovsk 40\\nmoscow 50\\nkazan 35\\nkazan 60\\nmoscow 10\\nkhabarovsk 20') == '5\\n6\\n1\\n2\\n3\\n4'\nassert solution('moscow 10\\nkhabarovsk 20\\nmoscow 60\\nkazan 35\\nkazan 60\\nmoscow 50\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('khabarovsk 40\\nmoscow 10\\nkazan 35\\nkazan 60\\nmoscow 50\\nkhabarovsk 20') == '6\\n5\\n4\\n3\\n2\\n1'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 900') == 'No'\nassert solution('1 0') == 'No'\nassert solution('3 3') == 'No'\nassert solution('1 0') == 'Yes'\nassert solution('2 0') == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == 'No'\nassert solution('2 4') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('10 10') == 'Yes'\nassert solution('2 2') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1000') == 'Yes'\nassert solution('5 100') == 'No'\nassert solution('1 1000') == 'Yes'\nassert solution('3 1') == 'Yes'\nassert solution('2 10') == 'No'\n\nprint('Testcase: 0 passed.')\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin=\"2 900\") == \"Yes\"\nassert solution(\n    stdin=\"2 700\") == \"No\"\nassert solution(\n    stdin=\"1 1\") == \"Yes\"\nassert solution(\n    stdin=\"0 0\") == \"Yes\"\nassert solution(\n    stdin=\"3 10\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 7\") == \"No\"\nassert solution(\"2 9\") == \"No\"\nassert solution(\"2 100\") == \"Yes\"\nassert solution(\"2 1000\") == \"Yes\"\nassert solution(\"1 9\") == \"No\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 100\") == \"No\"\nassert solution(\"5 22\") == \"No\"\nassert solution(\"1 5\") == \"Yes\"\nassert solution(\"1 1000\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 10') == 'No'\nassert solution('1 5') == 'No'\nassert solution('1 10') == 'Yes'\nassert solution('10 2') == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 543') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('2 2') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 3') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 5') == 'Yes'\nassert solution('1 6') == 'No'\nassert solution('3 4') == 'No'\nassert solution('2 5') == 'Yes'\nassert solution('7 4') == 'No'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 10\") == \"0.145833333333\"\nassert solution(\"2 1\") == \"0.5\"\nassert solution(\"5 5\") == \"0.25\"\nassert solution(\"5 10\") == \"0.1458333333\"\nassert solution(\"7 2\") == \"0.00285714285714\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.145833333333'\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 10') == '0'\nassert solution('1 100') == '0'\nassert solution('1 1000') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n\"\"\"\n\nimport sys\nfrom fractions import Fraction\nfrom itertools import product\nfrom math import factorial"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 10''') == '0.145833333333'\nassert solution('''2 10''') == '0.145833333333'\nassert solution('''3 10''') == '0.145833333333'\nassert solution('''4 10''') == '0.145833333333'\nassert solution('''5 10''') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 10') == '0.145833333333'\nassert solution('100 1000') == '0.266666666667'\nassert solution('1 1000') == '0.266666666667'\nassert solution('0 0') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('3 4') == '0.5'\nassert solution('3 9') == '1/3'\nassert solution('3 7') == '1/3'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.145833333333'"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('SUN') == '1'\nassert solution('SAT') == '1'\nassert solution('SUN') == '2'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"7\"\nassert solution(\"MON\") == \"31\"\nassert solution(\"TUE\") == \"28\"\nassert solution(\"WED\") == \"31\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('SUN') == 1\nassert solution('MON') == 1\nassert solution('TUE') == 2\nassert solution('WED') == 4\nassert solution('THU') == 4\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('SUN') == 1\nassert solution('WED') == 2\nassert solution('FRI') == 4\nassert solution('SAT') == 0\nassert solution('SUN') == 7\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"SUN\") == '0'\nassert solution(\"SAT\") == '1'\nassert solution(\"MON\") == '31'\nassert solution(\"TUE\") == '28'\nassert solution(\"WED\") == '31'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('SAT') == 1\nassert solution('MON') == 0\nassert solution('SUN') == 0\nassert solution('FRI') == 4\nassert solution('TUE') == 1\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '2'\nassert solution('THU') == '3'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(solution) == 1\nprint(solution(solution))\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 10 20''') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n\n'''\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('3 4 4') == '2\\n2\\n2\\n2\\n2\\n2\\n2\\n2'\n\"\"\""
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('1 1 1') == '1'\nassert solution('10 1 10') == '10'\nassert solution('2 5 50') == '30'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2, 10, 20) == \"30 50 90 170 330 650 1290 2570 5130 10250\"\nassert solution(3, 3, 5) == \"9 9 9 9 9 9 9 9 9\"\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('1 1 1') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('1 1 100') == '99\\n99\\n99\\n99\\n99\\n99\\n99\\n99\\n99'\nassert solution('1 100 100') == '99\\n99\\n99\\n99\\n99\\n99\\n99\\n99\\n99'\nassert solution('2 100 100') == '50\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n50'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n'''\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"1 2 3\") == \"3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"2 3 4\") == \"4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"3 4 5\") == \"5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"4 5 6\") == \"6\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4 1 2') == '0'\nassert solution('5\\n1 3 1 1 4') == '5'\nassert solution('5\\n1 3 2 1 4') == '4'\nassert solution('5\\n1 3 2 1 4') == '0'\nassert solution('5\\n1 3 2 1 4') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 1 1 4') == '5'\nassert solution('1 3 2 1 4') == '4'\nassert solution('3 2 1') == '0'\nassert solution('4 1 2') == '0'\nassert solution('100') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn = int(input())\nd = [int(x) for x in input().split()]"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"5\n1 3 1 1 4\n\"\"\") == \"5\"\n\nassert solution(\n    \"\"\"5\n1 3 2 1 4\n\"\"\") == \"4\"\n\nassert solution(\n    \"\"\"3\n4 1 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\"\nassert solution(\"5\\n4 1 2\\n\") == \"0\"\nassert solution(\"5\\n4 1 2 3\\n\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''5\n1 3 2 1 4\n''') == '4'\n\nassert solution('''3\n4 1 2\n''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('5\\n1 3 2 1 4\\n') == '4'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('2\\n1 2\\n') == '0'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == 'YES\\n1 1 1'\nassert solution('1\\n1\\n1') == 'YES\\n1 1 1'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('1\\n2\\n3') == 'YES\\n1 1 3'\nassert solution('1\\n2\\n3') == 'YES\\n3 2 1'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1') == 'YES\\n1 1 1'\nassert solution('2\\n1\\n1\\n2\\n2\\n2') == 'YES\\n1 1 1\\n2 2 2'\nassert solution('3\\n2\\n3\\n2\\n3\\n2') == 'YES\\n2 2 3\\n3 3 3'\nassert solution('4\\n1\\n2\\n3\\n4\\n4\\n4') == 'YES\\n4 4 4\\n4 4 4\\n1 1 4'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n5') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n') == 'NO'\nassert solution('1\\n1\\n1\\n') == 'YES\\n1 1 1'\nassert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n3 2 1\\n100 100 100\\n'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == 'YES\\n1 1 1000000000'\nassert solution('2\\n') == 'NO'\nassert solution('2\\n') == 'NO'\nassert solution('1\\n') == 'YES\\n3 2 1'\nassert solution('1\\n') == 'YES\\n3 2 1'\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\") == \"YES\\n3 2 1\"\nassert solution(\"100 100 100\") == \"NO\\n100 100 100\"\nassert solution(\"50 49 49\") == \"NO\\n50 49 49\"\nassert solution(\"10 30 20\") == \"YES\\n10 30 20\"\nassert solution(\"1 1000000000 1000000000\") == \"YES\\n1 1 1000000000\"\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\nassert solution(\"1 2 3 1 1\") == \"1\"\nassert solution(\"5 1 4\") == \"1\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3\\n1 2 3 1 1\\n\") == \"1\"\nassert solution(\"2 2 1\\n4 2 1 4 2\\n\") == \"5\"\nassert solution(\"2 1 1\\n1 1 1\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\"\nassert solution(\"5 1 4\\n1 2 3 4 1\\n\") == \"4\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'\nassert solution('5 2 5\\n5 2 3 5 2\\n') == '5'\nassert solution('5 2 5\\n5 2 3 1 5\\n') == '5'\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'\n\n\n\"\"\"\nfrom math import floor\n\nn, m, k = map(int, stdin.strip().split())\na = list(map(int, stdin.strip().split()))"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 5 6\\n3 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"\nassert solution(\"5 2 6\\n1 1 2 2 1\") == \"4\"\nassert solution(\"5 2 6\\n1 2 1 4 2\") == \"1\"\n\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.strip().split(' ')]\nboxes = [int(x) for x in stdin.strip().split(' ')]\n\ni = 0\nj = 0\nboxes_used = 0\n\nwhile i < n and j < m:\n    if boxes[j] >= boxes[i]:\n        boxes[j] -= boxes[i]\n        i += 1\n        boxes_used += 1\n    else:\n        j += 1\n        boxes[j] -= boxes[i]\n\nprint(boxes_used)"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, m, k = map(int, stdin.split())\na = list(map(int, stdin.split()))\na.sort()\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n7 2\nabacaba\na b\n''') == \"12\"\n\nassert solution(\n'''\n10 3\nsadfaasdda\nf a d\n''') == \"21\"\n\nassert solution(\n'''\n7 1\naaaaaaa\nb\n''') == \"0\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7 2\") == \"12\"\nassert solution(\"10 3\") == \"21\"\nassert solution(\"7 1\") == \"0\"\nassert solution(\"abacaba\") == \"12\"\nassert solution(\"f a d\") == \"21\"\n\"\"\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 1') == '0'\nassert solution('7 2') == '12'\nassert solution('7 3') == '21'\nassert solution('7 4') == '0'\nassert solution('7 5') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\n\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\n\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'\n\nassert solution('''3 2\naa\naa\naa\n''') == '5'\n\nassert solution('''3 2\na\na\na\n''') == '3'"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 1') == '0'\nassert solution('7 2') == '12'\nassert solution('10 3') == '21'\nassert solution('7 1') == '0'\nassert solution('5 2') == '5'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 1\\naaaaaaa\\nb\\n') == '0'\nassert solution('7 2\\nabacaba\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d\\n') == '21'\nassert solution('7 1\\nbaaaaaa\\nb\\n') == '0'\nassert solution('10 3\\nbaaaaaa\\nb\\n') == '20'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1') == '3'\nassert solution('4 2') == '4'\nassert solution('8 1') == '0'\nassert solution('8 2') == '0'\nassert solution('10 3') == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 2\nabacaba\na b''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\nassert solution('''7 1\naaaaaaa\nb''') == '0'\n'''\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\nassert solution('''2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\nassert solution('''3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6'\nassert solution('''3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-2999999997'\nassert solution('''3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1000000000'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 -1 -2') == '2'\nassert solution('4') == '-1'\nassert solution('-1 -2 -1 -3') == '6'\nassert solution('10') == '-2999999997'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('0') is None\nassert solution('1') == '1'\nassert solution('-2') == '-2'\nassert solution('1 2 3 -1 -2') == '2'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution(\n'''5\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution(\n'''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution(\n'''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution(\n'''10\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '-1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcd') == 'cdab'\nassert solution('cd') == 'abcd'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'hgfedcbajlm'\nassert solution('abcd') == 'cdab'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'hgfedcbajlm'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n-1') == '-1'\nassert solution('4\\n-1 -2 -3 -4') == '-1'\nassert solution('3\\n1 2 -1 -2') == '-1'\nassert solution('3\\n-1 -2 -1 -3') == '-1'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '6'\nassert solution('4') == '-2999999997'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2\\n-1\\n6\\n-2999999997'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"5 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n2 5\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\nprint(solution(stdin))"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\nassert solution('''7 8\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n7 9\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n\n\n-----Binary Search-----\n\nThis problem is about computing the maximum degree over all vertices in a graph.\n\nIf we look at the degrees of all vertices of a graph, we can see that the maximum degree is the maximum among all the vertices. Since we can find the maximum degree by computing the powers of the graph, the solution is a binary search over the powers of the graph.\n\nWrite a function solution(graph) which takes an undirected graph in the form of a string consisting of lines with the format $v1 v2$ and returns the maximum degree of the graph. The graph can contain multiple edges, but each edge is specified once, i.e. the graph can have multiple edges between two vertices.\n\nAn example of graph is the one given in the first example of the problem description.\n\n\n-----Input-----\n\nThe first line contains the number of test cases, T. T test cases follow. Each test case contains a graph as a string with lines of the form $v1 v2$ separated by spaces.\n\nThe graph contains no self-loops and is connected.\n\n2\n5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n\n4\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\n6\n7 8\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n7 9\n\n6\n2 5\n1 4\n2 3\n1 5\n3 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 7\n5 8\n7 9\n\n3\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n7 9\n\n7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n6\n2 5\n1 4\n2 3\n1 5\n3 4\n1 5\n1 2\n2 3\n2 4\n2 5\n2 7\n5 8\n7 9\n\n3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5\") == \"3\\n2\\n1\"\nassert solution(\"4\\n4\") == \"3\\n2\\n1\"\nassert solution(\"4\\n2\\n3\\n4\") == \"1\\n2\\n3\"\nassert solution(\"5\\n5\") == \"3\\n2\\n1\"\nassert solution(\"3\\n2\\n1\") == \"3\\n2\\n1\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '3 2'\nassert solution('8 9') == '4 1'\nassert solution('1 2') == '1 2'\nassert solution('2 3') == '1 3'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\nassert solution(\"4 8\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"3 2\\n2 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\n\n\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\n2 5\n1 5\n\n3 4\n1 5\n\n1 2\n2 3\n2 4\n3 4\n3 5\n4 5\n''') == '3 2'\n\nassert solution('''5 3\n1 2\n2 3\n3 5\n4 3\n1 5\n\n3 4\n1 5\n\n1 2\n2 3\n2 4\n3 4\n3 5\n4 5\n\n''') == '3 2'\n\nassert solution('''7 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n\n2 7\n1 2\n3 4\n6 5\n4 5\n7 8\n5 8\n\n''') == '3 2'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\nassert solution(\"4 6\") == \"4 1\\n1 2\\n1 3\\n2 3\\n3 4\"\nassert solution(\"8 9\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\n\"\"\"\nAdd edges to the graph\n\nCompute the degree of each vertex\n\nFind a minimum spanning tree using Kruskal's algorithm\n\nReturn the maximum degree of each vertex\n\n\"\"\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output_solution\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 0\nassert solution('5') == 40\nassert solution('499993') == 41664916690999888\n\n\"\"\""
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('5') == '40'\nassert solution('499993') == '41664916690999888'\nassert solution('5' * 4999 + '1') == '40'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('') == ''\nassert solution('') == ''\nassert solution('499993') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n499993''') == '0'\nassert solution('''2\n1\n499993''') == '40'\nassert solution('''3\n1\n499993''') == '41664916690999888'\n'''\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('5') == ''\nassert solution('499993') == ''\nassert solution('10') == ''\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '40'\nassert solution('499993') == '41664916690999888'\n\n\n\n'''\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0''') == '0'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '6'\nassert solution('''4''') == '16'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"tests/3.txt\")) == \"0\"\nassert solution(open(\"tests/1.txt\")) == \"40\"\nassert solution(open(\"tests/5.txt\")) == \"41664916690999888\"\nassert solution(open(\"tests/499993.txt\")) == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('4\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('6\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('2\\n2') == '-1'\nassert solution('4\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 4 6 5 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1 4 6 5 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1 4 6 5 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1 4 6 5 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('1 4 6 5 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"0 1 1 1 1 1 1 1 1 1\") == \"0 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"5 6 7 8 9 1 1 2 1 1\") == \"5 6 7 8 9 1 1 2 1 1\"\nassert solution(\"9 9 9 9 1 1 1 1 1 1\") == \"9 9 9 9 1 1 1 2 1 1\"\nassert solution(\"3 5 5 1 6 7 7 3 5 5\") == \"1 1 1 2 -1 1 1 3 1 1\"\n\n\n-----Note-----\n\nThis is the same challenge as [Problem 74](https://projecteuler.net/problem=74).\n\"\"\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n' + '4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('2\\n' + '5 3 2 1 1 2 4') == '-1 -1 -1 -1 -1'\nassert solution('1\\n' + '1') == '1'\nassert solution('1\\n' + '10') == '-1'\nassert solution('1\\n' + '1000000') == '-1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\n4 5 7 6 7 5 4 4 6 4''') == '''1 1 1 2 -1 1 1 3 1 1'''\n\nassert solution('''1\n1''') == '''-1'''\n\nassert solution('''4\n1 2 3 4''') == '''-1'''\n\nassert solution('''5\n1 2 3 4 5''') == '''2'''\n\nassert solution('''6\n1 2 3 4 5 6''') == '''2'''"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"3 5 1 7 3 2 2\") == \"2 -1 1 1 1 -1 -1\"\nassert solution(\"2 2 1 3 2 2\") == \"-1 -1 -1\"\n\n\n-----Benchmark-----\n\nThere are $1 \\cdot 10^6$ random tests, and each test will have random values for $a$.\n\nThe time limit should be 10 seconds.\n\nThe memory limit should be 256 megabytes.\n\nYour solution should be faster than 97.32% of the solutions on World Judge.\n\n-----\n\n\u89e3\u9898\u601d\u8def\uff1a\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u53ef\u80fd\u8df3\u8dc3\u5230\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f46\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u4e0d\u80fd\u76f4\u63a5\u8df3\u8dc3\u5230\u7684\u4f4d\u7f6e\uff0c\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u80fd\u8df3\u5230\u7684\u4f4d\u7f6e\u3002\n\n\u5177\u4f53\u89e3\u9898\u601d\u8def\uff1a\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u53ef\u80fd\u8df3\u8dc3\u5230\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f46\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u4e0d\u80fd\u76f4\u63a5\u8df3\u8dc3\u5230\u7684\u4f4d\u7f6e\uff0c\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u80fd\u8df3\u5230\u7684\u4f4d\u7f6e\u3002\n\n\u8bbe\u8ba1\u6709$n$\u4e2a\u6570\u5b57\uff0c\u56e0\u6b64\u6709$n^2$\u4e2a\u72b6\u6001\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e$i$\uff0c\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\n\n\u5f53$i$\u65e2\u53ef\u4ee5\u8df3\u8dc3\u5230$i + a_i$\uff08\u56e0\u4e3a\u662f\u9012\u589e\uff09\uff0c\u5219\u5f53$i + a_i$\u65e2\u53ef\u4ee5\u8df3\u8dc3\u5230$i$\uff0c\u5219$a_i$\u7684\u5947\u5076\u6027\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff1b\n\u5f53$i$\u65e2\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u5230$i + a_i$\uff0c\u4f46$a_i$\u53ef\u4ee5\u8df3\u8dc3\u5230$i$\uff0c\u5219$a_i$\u7684\u5947\u5076\u6027\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff1b\n\u5f53$i$\u65e2\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u5230$i + a_i$\uff0c\u4f46$a_i$\u65e2\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u5230$i$\uff0c\u5219$a_i$\u7684\u5947\u5076\u6027\u662f\u4e0d\u53ef\u4ee5\u6539\u53d8\u7684\uff1b\n\u5f53$i$\u65e2\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u5230$i + a_i$\uff0c\u5219\u8df3\u8dc3\u4e0d\u53ef\u80fd\u8df3\u5230\u5176\u4ed6\u4f4d\u7f6e\uff0c\u6b64\u65f6\u503c\u4e3a$-1$\u3002\n\n\u6240\u4ee5\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$d_i = min(d_{i - a_i} + 1, d_{i - a_i - 1} + 1, d_{i - a_i - 2} + 1)$\n\n\u6211\u4eec\u5c06 $d_i$ \u8bb0\u4e3a $d_{n - i}$\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$d_i = d_{n - i}$\n\n\u5728\u8be5\u72b6\u6001\u4e0b\uff0c\u5f53$i$\u65e2\u53ef\u4ee5\u8df3\u8dc3\u5230$i + a_i$\uff0c\u5219\u5f53$a_i$\u7684\u5947\u5076\u6027\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u5219$d_i$\u53ef\u4ee5\u53d8\u4e3a$d_{n - i - 1} + 1$\uff0c\u5219$d_i$\u7684\u503c\u4e3a$d_{n - i - 1} + 1$\uff1b\n\u5f53$i$\u65e2\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u5230$i + a_i$\uff0c\u4f46$a_i$\u53ef\u4ee5\u8df3\u8dc3\u5230$i$\uff0c\u5219$d_i$\u53ef\u4ee5\u53d8\u4e3a$d_{n - i - 2} + 1$\uff0c\u5219$d_i$\u7684\u503c\u4e3a$d_{n - i - 2} + 1$\uff1b\n\u5f53$i$\u65e2\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u5230$i + a_i$\uff0c\u4f46$a_i$\u65e2\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u5230$i$\uff0c\u5219$d_i$\u53ef\u4ee5\u53d8\u4e3a$d_{n - i - 2} + 1$\uff0c\u5219$d_i$\u7684\u503c\u4e3a$d_{n - i - 2} + 1$\uff1b\n\u5f53$i$\u65e2\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u5230$i + a_i$\uff0c\u5219\u8df3\u8dc3\u4e0d\u53ef\u80fd\u8df3\u5230\u5176\u4ed6\u4f4d\u7f6e\uff0c\u6b64\u65f6\u503c\u4e3a$-1$\u3002\n\n\u603b\u7ed3\u6700\u7ec8\u7684\u7b54\u6848\u4e3a$d_{n - 1}$\u7684\u503c\uff0c\u5373\u662f\u6211\u4eec\u9700\u8981\u7684\u7b54\u6848\u3002\n\n\"\"\""
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''64\n32\n97\n2\n12345\n''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\n\nassert solution('''64\n32\n97\n2\n12345\n''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\n\nassert solution('''64\n32\n97\n2\n12345\n''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\n\nassert solution('''64\n32\n97\n2\n12345\n''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\n\nassert solution('''64\n32\n97\n2\n12345\n''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n') == 'YES\\n2 4 8'\nassert solution('1\\n64\\n32\\n97\\n2\\n12345\\n') == 'NO\\nNO\\nNO'\nassert solution('1\\n12345\\n') == 'NO\\nNO\\nNO'\nassert solution('1\\n98765\\n') == 'NO\\nNO\\nNO'\nassert solution('1\\n12345\\n12345\\n') == 'NO\\nNO\\nNO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1\\n') == 'YES'\nassert solution('1\\n2\\n') == 'YES'\nassert solution('1\\n2\\n3\\n') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n64\n32\n97\n2\n12345''') == 'NO\\nNO\\nYES\\nNO\\nYES'\nassert solution('''2\n64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''2\n1\n1''') == 'NO\\nYES'\nassert solution('''3\n1\n2\n3''') == 'NO\\nNO\\nYES'\nassert solution('''3\n2\n3\n4''') == 'NO\\nNO\\nYES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == 'NO'\nassert solution('2\\n') == 'NO'\nassert solution('3\\n') == 'NO'\nassert solution('4\\n') == 'NO'\nassert solution('5\\n') == 'NO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('64\\n32\\n97\\n2\\n12345') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('64\\n32\\n97\\n2\\n12345\\n12345') == 'NO\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('64\\n32\\n97\\n2\\n12345\\n12345\\n12345') == 'NO\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('64\\n32\\n97\\n2\\n12345\\n12345\\n12345\\n12345') == 'NO\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\n\n\n-----My submission-----"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\n\nassert solution('''64\n32\n97\n2\n12345''') == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\n\nassert solution('''64\n32\n97\n2\n12345''') == \"NO\"\n\nassert solution('''64\n32\n97\n2\n12345''') == \"NO\"\n\nassert solution('''64\n32\n97\n2\n12345''') == \"NO\""
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == 'NO'\nassert solution('''1000''') == 'NO'\nassert solution('''1''') == 'NO'\nassert solution('''27''') == 'NO'\nassert solution('''4''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n4\\n2') == 'YES\\n2 4 8'\nassert solution('2\\n4\\n1') == 'NO'\nassert solution('2\\n4\\n2\\n2') == 'NO'\nassert solution('2\\n4\\n2\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2\n3\n3\n4\n''') == \"NO\\nNO\\nNO\\nYES\"\nassert solution('''3\n3\n3\n2\n4\n''') == \"YES\\n3 4 8\"\nassert solution('''10\n2\n3\n3\n4\n5\n6\n7\n8\n9\n10\n''') == \"NO\\nNO\\nNO\\nYES\"\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == \"YES\\n10 10 10 10 10 10 10 10 10\"\nassert solution('''2\n2\n3\n3\n3\n3\n3\n''') == \"NO\\nNO\\nNO\\nNO\\nYES\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abbbb') == '2'\nassert solution('bbbb') == '0'\nassert solution('ababab') == '0'\nassert solution('aa') == '1'\nassert solution('ababab') == '0'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bbbb') == '2'\nassert solution('ababab') == '0'\nassert solution('aa') == '1'\nassert solution('ababab') == '0'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbbb') == 2\nassert solution('abba') == 0\nassert solution('ababab') == 1\nassert solution('aa') == 1\nassert solution('ba') == 1\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\nbbbb''') == '2'\nassert solution('''6\nababab''') == '0'\nassert solution('''2\naa''') == '1'\nassert solution('''4\nbbbaa''') == '1'\nassert solution('''6\nabba''') == '2'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('aba') == 'ab'\nassert solution('bbaa') == 'ab'\nassert solution('abab') == 'ab'\nassert solution('abba') == 'ba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n\nn = int(input())\ns = input()\ns = s.replace(\"a\", \"b\")\ns = s.replace(\"b\", \"a\")\nprint(len(s))\nprint(s)\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('bbbb') == 2\nassert solution('ababab') == 0\nassert solution('aa') == 1\n\n\n\n\"\"\""
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\nbbbb\n''') == '2'\n\nassert solution('''6\nababab\n''') == '0'\n\nassert solution('''2\naa\n''') == '1'\nassert solution('''2\nab\n''') == 'ba'\nassert solution('''6\nbbbbbbbb\n''') == '8'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bbbb') == \"2\"\nassert solution('abba') == \"0\"\nassert solution('ababab') == \"1\"\nassert solution('aa') == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n\n'''"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n2 1\\n0 0\\n1 1\\n2 0\\n3 2') == '15'\nassert solution('2\\n1 1\\n0 0\\n2 0\\n3 2') == '9'\nassert solution('1\\n1 1\\n0 0') == '0'\nassert solution('1\\n1 1\\n1 1') == '0'\nassert solution('1\\n0 0\\n0 0') == '0'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '15'\nassert solution('1 4') == '9'\nassert solution('2 3\\n1 1') == '9'\nassert solution('3 1\\n3 4\\n1 2') == '9'\nassert solution('3 2\\n1 0\\n2 0\\n3 2\\n0 3\\n1 1') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == '15'\n\n'''\n\n###############################################################################\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''1\n2\n2\n2\n2\n''') == '0'\n'''\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('inputs/8') == '15'\nassert solution('inputs/5') == '9'\nassert solution('inputs/15') == '15'\nassert solution('inputs/15_1') == '9'\nassert solution('inputs/15_2') == '15'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''\n3\n1 1\n0 0\n2 0\n1 2\n''') == '2'\nassert solution('''\n3\n2 1\n1 0\n2 0\n1 2\n''') == '1'\nassert solution('''\n3\n1 1\n1 0\n2 0\n1 2\n''') == '0'\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n'''\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('3\\n3') == '3'\nassert solution('3\\n1\\n1') == '1'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('2\\n3') == '2'\nassert solution('2\\n3') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n') == '2'\nassert solution('3\\n3\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('2\\n2\\n') == '1'\nassert solution('3\\n1\\n') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('1\\n1') == '2'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n') == '2'\nassert solution('3\\n3\\n') == '3'\nassert solution('3\\n3\\n') == '3'\nassert solution('3\\n2\\n') == '2'\nassert solution('3\\n2\\n') == '2'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"3\\n2\") == \"1\"\nassert solution(\"3\\n3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"3\\n3\") == \"3\"\nassert solution(\"3\\n4\") == \"3\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"A\\nB\\n\") == \"2\"\nassert solution(\"1\\n2\\n\") == \"2\"\nassert solution(\"3\\n1\\n\") == \"2\"\nassert solution(\"3\\n3\\n\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n') == '0.40000'\nassert solution('1\\n') == '1'\nassert solution('3\\n') == '0.20000'\nassert solution('4\\n') == '0.080000'\nassert solution('5\\n') == '0.040000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(3) == '1.000000000000'\nassert solution(0) == '1.000000000000'\nassert solution(1) == '1.000000000000'\nassert solution(5) == '2.000000000000'\nassert solution(100) == '33.333333333333'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0') == '0.0'\nassert solution('1') == '1.0'\nassert solution('2') == '2.0'\nassert solution('3') == '6.0'\nassert solution('4') == '12.0'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2.5'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4') == '1.000000000000'\nassert solution('6') == '2.000000000000'\nassert solution('9') == '3.000000000000'\nassert solution('11') == '4.000000000000'\nassert solution('12') == '5.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(1) == \"1.000000000000\"\nassert solution(5) == \"1.000000000000\"\nassert solution(0) == \"0.000000000000\"\nassert solution(10) == \"1.000000000000\"\nassert solution(11) == \"1.000000000000\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\nprint(solution(stdin))\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('0') == '1.000000000000'\nassert solution('1') == '1.000000000000'\nassert solution('5') == '5.000000000000'\nassert solution('10') == '5.000000000000'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == 'Hello World'\nassert solution('1\\n1') == 'Hello World'\nassert solution('1\\n2\\n2') == '4'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"8\"\nassert solution(\"1\\n5\") == \"Hello World\"\nassert solution(\"2\\n5\") == \"8\"\nassert solution(\"2\\n2\\n5\") == \"8\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'Hello World'\nassert solution('1') == 'Hello World'\nassert solution('2') == '3'\nassert solution('1\\n2') == 'Hello World'\nassert solution('1\\n2\\n3') == '6'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Hello World\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Hello World\") == \"Hello World\"\nassert solution(\"Hello World\") == \"Hello World\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"A+B\"\nassert solution(\"3\") == \"Wrong Input\"\n\nprint('ok')\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '7'\nassert solution('1\\n2') == 'Hello World'\nassert solution('2\\n2\\n') == '7'\n\n\"\"\""
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == 'Hello World'\nassert solution(2) == '2'\nassert solution(3) == 'A'\nassert solution(4) == 'AB'\nassert solution(5) == 'Hello World'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n''') == '2'\nassert solution('''1\n''') == 'Hello World'\nassert solution('''2\n1\n1\n''') == '1'\nassert solution('''2\n2\n2\n''') == '4'\nassert solution('''2\n2\n3\n''') == '5'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '1+1'\nassert solution('1\\n2') == 'Hello World'\nassert solution('2\\n1') == '1+1'\nassert solution('2\\n2\\n2') == '1+1+1'\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == \"Hello World\"\nassert solution('2\\n') == '5'\nassert solution('3\\n') == '7'\nassert solution('4\\n') == '8'\nassert solution('5\\n') == '9'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3333'"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3333\"\n\"\"\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '3333'"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3333\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"7 5\") == \"55555\"\nassert solution(\"1 1\") == \"11111\"\nassert solution(\"8 8\") == \"8888\"\nassert solution(\"1 5\") == \"555\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a b') == '33333'\nassert solution('4 3') == '3333'\nassert solution('1 2') == '12'\nassert solution('9 7') == '7777'\nassert solution('7 7') == '7777'\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"3333\"\nassert solution(\"1 2\") == \"3333\"\nassert solution(\"9 7\") == \"3333\"\nassert solution(\"8 7\") == \"3333\"\nassert solution(\"7 8\") == \"3333\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[0]*3 + stdin[2]*3\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[:2]\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3333'\n\"\"\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('z') == 'a'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'b'\nassert solution('a' * 200) == 'b' * 200\nassert solution('z') == 'z'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == None\nassert solution('b') == 'c'\nassert solution('a') == 'b'\nassert solution('c') == 'd'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('c') == 'b'\nassert solution('v') == 'w'\nassert solution('k') == 'l'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"b\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('kerdsgkfghjk') == 'kerdsgkfghjk'\nassert solution('dffsdfdsfssdfd') == 'dffsdfdsfssdfd'\nprint(solution(stdin))"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"morphed\") == \"morphed\"\nassert solution(\"racecar\") == \"racecar\"\nassert solution(\"the racecar\") == \"racecar\"\nassert solution(\"morphed\") == \"morphed\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[2:8]\n\"\"\""
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('oder atcoder') == 'atcoderoder'\nassert solution('atcoder') == 'atcoder'\nassert solution('atc') == 'atc'\nassert solution('atc') == 'atc'\nassert solution('atcoder') == 'atcoder'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"potat\") == \"potat\"\nassert solution(\"odert\") == \"odert\"\nassert solution(\"potato\") == \"potato\"\nassert solution(\"odertpo\") == \"odertpo\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('er odr') == 'erotdr'\nassert solution('atcoder') == 'atcoder'\nassert solution('atcoderer') == 'atcoderer'\nassert solution('atcodero') == 'atcodero'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '0'\nassert solution('''2\n1000000 1000000''') == '1000000'\nprint(solution('''6\n5 1 2 4 6 3'''))\nprint(solution('''5\n5 1 2 4 6 3'''))\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1000000\"\n\n\"\"\"\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '0'\nassert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6''') == '1000000'\nassert solution('''6\n5 1 2 4 6 3''') == '1000000'\nassert solution('''6\n1000000 1000000 1000000 1000000 1000000''') == '0'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '0'\nassert solution('''6''') == '1000000'\nassert solution('''2''') == '1000000'\nassert solution('''3''') == '6'\nassert solution('''4''') == '10'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '5'\n) == '0'\n\nassert solution(\n    '6'\n) == '0'\n\nassert solution(\n    '5'\n) == '0'\n\nassert solution(\n    '2'\n) == '1'\n\nassert solution(\n    '1000000 1000000'\n) == '1000000'"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 5 7 8 2\\n') == '0'\nassert solution('6\\n5 1 2 4 6 3\\n') == '0'\nassert solution('2\\n1000000 1000000\\n') == '1000000'\n\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '1000000'\nassert solution('''7\n1 1000000 1 1000000 1 1000000 1 1000000 1''') == '1000000'\nassert solution('''8\n1 1000000 1 1000000 1 1000000 1 1000000 1 1000000''') == '1000000'\nassert solution('''9\n1 1000000 1 1000000 1 1000000 1 1000000 1 1000000 1''') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '0'\nassert solution('''2\n1000000 1000000''') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\n3\") == \"1\"\nassert solution(\"3\\n1\") == \"1\"\nassert solution(\"3\\n2\") == \"2\"\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1\\n1 1 1 1 1\\n') == '5'\nassert solution('2 1 2 1 2\\n2 1 2 1 2\\n') == '0'\nassert solution('4 1 4 1 4\\n4 1 4 1 4\\n') == '0'\nassert solution('5 2 5 2 5\\n5 2 5 2 5\\n') == '10'\nassert solution('6 4 6 4 6\\n4 4 6 4 6\\n') == '0'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3 3\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"\nassert solution(\"7 4 2 1\") == \"6\"\nassert solution(\"6 2 3 3\") == \"5\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 100 99') == '1'\nassert solution('7 4 2 1') == '6'\nassert solution('7 10 50 12 1 8') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('100') == '1'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '5'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4 2 1') == '1'\nassert solution('7 10 50 12 1 8') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('100') == '1'\nassert solution('7 4 2 1') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 100 99\\n100') == '5'\nassert solution('6 2 3 3\\n7 10 50 12 1 8\\n') == '5'\nassert solution('6 4 1 2\\n1 3 5 4 2 7 6\\n') == '6'\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6\\n') == '6'\nassert solution('8 4 2 1\\n1 3 5 4 2 7 6\\n') == '7'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"6 3\n3 2 0 6 10 12\n\"\"\") == \"\"\"3\n3 2 0 7 10 14 \n\"\"\".strip()\nassert solution(\"\"\"4 2\n0 1 2 3\n\"\"\") == \"\"\"0\n0 1 2 3\n\"\"\".strip()\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    stdin\n) == '0'\n\nassert solution(\n    '2 2'\n    '0 1'\n    '1 2'\n    '2 3'\n) == '0'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 0 6 10 12') == '3'\nassert solution('4 2') == '0 1 2 3'\nassert solution('2 2 2 1') == '0 1 2 3'\nassert solution('2 2 1') == '0 1 2 3'\nassert solution('1 1 1 1') == '0 1 2 3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == '3 0 0 4'\nassert solution('6 4') == '0 0 0 1 1'\nassert solution('7 2') == '0 1 1 2 2'\nassert solution('10 7') == '3 3 4 4 5 5 6 6'\nassert solution('8 2') == '0 0 1 2 2 4 4'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0 0'\nassert solution('3\\n3') == '0 0 0'\nassert solution('4\\n4') == '0 0 0 0'\nassert solution('5\\n5') == '0 0 0 0 0'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n3 2 0 6 10 12') == '3\\n3 2 0 7 10 14'"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 0 2 0\") == \"8\"\nassert solution(\"5 6\") == \"8\"\nassert solution(\"3 3\") == \"20\"\nassert solution(\"1 2 0 2 0\") == \"8\"\nassert solution(\"5 3\") == \"20\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 0 2 0') == 8\nassert solution('2 4') == 20\nassert solution('3 3') == 4\nassert solution('1 5\\n1 2\\n1 5') == 20\nassert solution('1 2\\n2 5') == 4\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"8\"\n\nassert solution(\n    '''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == \"20\"\nassert solution(\n    '''4 2\n1 2\n1 3\n2 3\n3 4\n''') == \"2\"\nassert solution(\n    '''5 4\n5 4\n1 4\n2 3\n3 4\n4 5\n''') == \"4\"\nassert solution(\n    '''5 4\n4 3\n1 3\n2 3\n3 4\n4 5\n''') == \"2\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''7 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n3 4\n''') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1 1 1 2 1 2\") == \"4\"\nassert solution(\"2 1 1 1 2 1 2\") == \"4\"\nassert solution(\"1 2 1 2 1 2\") == \"4\"\nassert solution(\"1 2 1 2 1 2\") == \"4\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 0 2 0') == '8'\nassert solution('2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '20'\nassert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3\\n1 5\\n1 2') == '20'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n2 3\\n1 5\\n1 2') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''3 1\n3\n1\n2\n''') == '4'\nassert solution('''2 1\n3\n1\n2\n''') == '4'\nassert solution('''2 2\n1\n2\n3\n3\n1\n1\n2\n2\n1\n2\n''') == '6'\nassert solution('''1 2\n1\n1\n2\n3\n2\n''') == '2'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''6 6\n1 2 3 4 5 6\n5 4\n4 3\n3 2\n3 1\n1 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '20'\nassert solution('''5 5\n4 2 1 3 2\n3 5\n4 2\n2 5\n1 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '20'\nassert solution('''3 3\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''6 3\n1 2 3 4 5 6\n5 4\n4 3\n3 2\n2 5\n''') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == '8'\nassert solution('''2 2\n3 2\n1 3\n3 2''') == '4'\nassert solution('''1 1\n2 1''') == '2'\nassert solution('''1 1\n2 1''') == '2'\nassert solution('''7 9\n1 2\n2 2\n3 3\n3 4\n5 6\n7 8\n8 7\n7 9\n9 7\n9 8\n9 9\n''') == '8'\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nprint('tests passed')\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''3\n1\n1 1 1\n2\n1 1 1\n1\n1 1 1 1 1 1 1 1 1''') == 'NO'\nassert solution('''3\n1\n1 1 1\n2\n1 1 1\n1\n1 1 1 1 1 1 1 1 1''') == 'YES'\nassert solution('''3\n1\n1 1 1\n2\n1 1 1\n1\n1 1 1 1 1 1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n1\\n1\\n1') == 'YES'\nassert solution('2\\n1\\n1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\n''') == 'NO'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n2 2 2 2 2 2 2 2\n\n''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n2 2 2 2 2 2 2 2\n\n''') == 'NO'\n\nassert solution('''4\n2\n10 2 10 10\n1\n1 2 1 2\n3\n1 2 3 2 1\n\n''') == 'NO'\n'''\n'''\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output\nprint(solution(input_data))\n\"\"\"\n\nfrom typing import Tuple, List\n\nSticks = List[int]"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n100 100') == 'YES'\nassert solution('1\\n1\\n2\\n2\\n100 100') == 'YES'\nassert solution('1\\n2\\n1 1 2 2') == 'YES'\nassert solution('1\\n1\\n2 1 2 1 2') == 'YES'\nassert solution('1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n1 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"2\\n1\\n1 1\\n1 1 1\") == \"NO\"\nassert solution(\"1\\n1\\n1 1\\n1 1 1\") == \"NO\"\nassert solution(\"2\\n1\\n1 1\\n1 1 1\") == \"NO\"\nassert solution(\"1\\n1\\n1 1\\n1 1 1\") == \"YES\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == \"YES\"\n\nassert solution('''1\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == \"YES\"\n\nassert solution('''1\n1\n1 1 1 1 1 1 1 1\n1\n100 100 100 100 100 100\n''') == \"NO\"\n\nassert solution('''1\n1\n1 1 1 1 1 1 1 1\n1\n100 100 100 100 100 100\n''') == \"NO\"\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 10 5''') == '3'\nassert solution('''2 5 1''') == '3'\nassert solution('''5 3 9''') == '3'\nassert solution('''6 2 2''') == '3'\nassert solution('''1 3 1''') == '1'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5') == '3'\nassert solution('3 6 10\\n3 2 3\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5') == '9'\nassert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n1') == '1'\nassert solution('3\\n2\\n1') == '2'\nassert solution('3\\n2\\n2') == '1'\nassert solution('3\\n2\\n3') == '2'\nassert solution('3\\n2\\n4') == '2'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\n\n\"\"\""
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2 1\") == \"2\"\nassert solution(\"5 9 8\") == \"7\"\nassert solution(\"5 2 3\") == \"3\"\nassert solution(\"3 6 2\") == \"1\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nassert solution('''9 10 30\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '30'\nassert solution('''6 10 19\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n3 6 19\n5 5 5\n3 3 19''') == '19'\nassert solution('''5 3 12\n1 2 4\n2 3 2\n3 4 5\n1 4 2\n4 5 6\n3 5 4''') == '4'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 10 5''') == '3'\nassert solution('''7 15 18''') == '9'\nassert solution('''2 6 3''') == '3'\nassert solution('''5 7 4''') == '3'\nassert solution('''6 5 4''') == '3'\n"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"2\\n3\\n\") == \"1\\n\"\nassert solution(\"3\\n4\\n\") == \"4\\n\"\nassert solution(\"3\\n5\\n\") == \"1\\n\"\nassert solution(\"3\\n6\\n\") == \"2\\n\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3'\nassert solution('10\\n1 2 5 12 13 2 15\\n') == '7486 3'\nassert solution('10\\n1 2 5 12 13 2 15\\n') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\nassert solution('1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3'\nassert solution('1 5 12 13 2 15') == '7486 3'\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''1 1 3 4 2''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''1 2 5 129 185 581 1041 1909 1580 8150''') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5\n1 1 3 4 2\n''') == '3 1'\nassert solution(\n'''\n6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution(\n'''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\nassert solution(\n'''\n10\n1 5 12 13 2 15\n''') == '7486 3'\nassert solution(\n'''\n10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3'\nassert solution('13\\n1 2 5 12 13 2 15\\n') == '11 15'\nassert solution('15\\n1 2 5 12 13 2 15\\n') == '13 15'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''1 1 3 4 2''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''1 5 12 13 2 15''') == '7486 3'\nassert solution('''10''') == '7486 3'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '3 1'\nassert solution('''6''') == '7 2'\nassert solution('''10''') == '7486 3'\nassert solution('''1 1 3 4 2''') == '3 1'\nassert solution('''1 5 12 13 2 15''') == '7486 3'\n'''\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1 3 4 2\") == \"3 1\"\nassert solution(\"5\\n1 1 3 4 2\") == \"7 2\"\nassert solution(\"6\\n1 5 12 13 2 15\") == \"7 2\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\nprint('test success!')\n\"\"\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\nassert solution('''30\n73 40 100 130 85 79 18 93 80 83 25 68 42 22 18 91 49 18 84 29 76 80 48 32 14 87 87 46 26 81 41 83 45 33 44 37 86 46 99 50 82 87 59 43 32 82 39 48 40 77 48 22 29 48 17 71 34 16 85 94 24 71 39 63 76 34 62 46 44 19\n''') == '9628 69'\nprint(solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n'''))"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('\\n') is None\nassert solution('\\n\\n') is None\nassert solution('\\n\\n\\n\\n\\n') is None\nassert solution('1\\n') == '1\\n'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100\\n') == '1'\nassert solution('0\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('200\\n') == '200'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100\\n5009\\n7\\n9876\\n10000\\n10') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nassert solution('10000\\n10') == '1\\n10'\nassert solution('100\\n10000') == '1'\nassert solution('1\\n10000') == '1'\nassert solution('1000\\n1000') == '1'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1009\n5009\n7\n9876\n10000\n10\n''') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nprint('assertions passed')'''\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('0') == '1'\nassert solution('0') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"1 2 3\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n') == 2\nassert solution('2\\n') == 2\nassert solution('1\\n') == 1\nassert solution('1\\n') == 1\nassert solution('1\\n') == 1\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1000''') == '1'\nassert solution('''1''') == '1'\nassert solution('''10''') == '1'\nassert solution('''1010101010''') == '6'\nassert solution('''1001''') == '1'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '1 1 1 1 1'\n\nassert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n2\n2 2 2 2\n4 4 4 1 4\n2\n2 2 2 2''') == '1 1 1 1 1 3 3 3'\n\nassert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n1\n1\n1\n1\n1\n2\n2\n2\n2\n4\n4 4 1 4\n2\n2 2 2 2\n2\n2 2 2 2''') == '1 1 1 1 1 3 3 3 4 1 1 3 3 1 2 1'\n\nassert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''10\n10\n3 2 1\n4 3 3 4 5 6 7 8 9 10\n3\n5 4 3 2 1\n10 9 8 7 6 5 4 3 2 1\n6\n3 4 1 2 4 5 6 7 8 9\n3\n5 4 3 2 1\n10 9 8 7 6 5 4 3 2 1\n''') == '''0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3\n2 3 3 3 3 3 3 3 3 3 3\n1 \n1 \n1 1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n1''') == '1 1 1 1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('''1\n2\n1\n2\n2\n1\n2\n1\n2\n1\n2\n1\n2''') == '2 2 2 2'\nassert solution('''1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == '2 2 2 2'\nassert solution('''3\n2\n1\n2\n1\n3\n1\n3\n2\n2\n2\n2\n2\n2\n2''') == '2 2 2 2'\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"3 3 3 1 1 1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"3 3 3 2 2 2 2\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\") == \"1 1 1 1 1 1\"\nassert solution(\"2\\n3\\n4\\n5\\n6\") == \"2 2 2 2 2 2\"\nassert solution(\"2\\n3\\n4\\n5\\n6\") == \"1 1 1 1 1 1\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == \"3 3 3 3 3\"\n\n'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''6\n4\n5 6 1 2 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''7\n5\n1 2 3 4 5 6\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n2 2 2 2\\n4 4 4 1 4\\n'\n\nassert solution('''7\n6\n5 6 1 2 3 4\n4\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n2 2 2 2\\n4 4 4 1 4\\n'"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n6\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1 \n2 2 2 2\n4 4 4 1 4'''\n\nprint(solution('''\n2\n3\n1 2 3\n5\n1 2 3 4 5\n2\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''')) == '''1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1 \n2 2 2 2\n4 4 4 1 4'''\n"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\nassert solution('''9\n5\n1 3 2 4 5 6 7 8\n3\n4 5 1\n6 7\n8 9 2\n9 7 4\n1 3 8\n1 2 4\n1 5 7\n1 4 3\n1 1 6\n5\n5 1 4 3 2\n''') == '''1 1 1 1 1 \n1 1 1 \n1 1 1 2 2 \n2 2 2 2 2 \n1 \n1 2 \n1 1 1 \n1 \n2 1 2 1 1 \n1 \n1 1 1 \n'''\n\nassert solution('''15\n15\n1 2 4 5 6 7 8 9 10 11 12 13 14 15\n4\n2 8 3 5 4 1 6 7 10 9 11\n3\n8 12 4 9 1 3 5 6 10 7 11\n1\n10 2 6 7 9 3 5 11 4 12\n9\n8 4 10 7 12 11 2 1 6 13\n5\n8 9 10 8 4 11 8 1 7 12\n2\n9 12 11 9 2 8 4 7 13 14\n6\n8 13 11 12 7 9 2 4 8 14\n3\n12 3 9 2 4 5 8 13 11 10\n1\n13 4 9 3 8 12 4 7 10 9\n8\n12 1 11 13 1 9 6 4 5 8\n2\n8 9 13 3 11 4 1 5 9 10\n7\n8 4 8 7 10 5 9 1 6 3\n1\n9 13 8 11 5 12 3 4 8 10\n5\n13 9 8 12 3 11 4 8 1 5\n3\n8 8 5 11 3 9 1 6 4 8\n1\n1 1 1 1 1 1 1 1 1 1 1\n''') == '''1 1 1 1 1 1 1 1 1 1 \n1 1 1 1 1 \n1 1 1 1 2 2 \n2 2 2 2 2 2 \n1 \n1 2 \n1 1 1 \n1 \n2 1 2 1 1 \n1 \n1 1 1 \n'''\n\nassert solution('''30\n30\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n12\n14 19 12 17 16 15 14 10 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '''1 1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1 \n2 2 2 2\n4 4 4 1 4'''\n\n'''\n\n1,\n\n'''"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3\\n2\\n1'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n2\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\nassert solution('''\n2\n4\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == \"3\"\nassert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == \"2\"\nassert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == \"1\"\nassert solution('''1\n2\n2''') == \"2\"\n'''\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n1 1 2') == '2'\nassert solution('2\\n2 2 1') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"3\\n2\\n1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == '3'\nassert solution('''\n2\n2\n2\n1\n1\n''') == '2'\nassert solution('''\n2\n2\n2\n2\n2\n2\n2\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n4\n1 1 1 1\n''') == '2'\nassert solution('''\n2\n2\n2\n2\n2\n2\n2\n2\n''') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '3\\n2\\n1'\nassert solution('''3\n3\n1 2 3\n4\n1 1 1''') == '3'\nassert solution('''3\n3\n1 2 3\n4\n1 1 1''') == '3'\nassert solution('''3\n1\n1\n1''') == '1'\nassert solution('''3\n1\n1\n1''') == '1'\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n2\\n1\\n\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('5 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('5 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('5 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\n\n\n-----\n\nMore examples:\n\n>>> solution('5 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n')\n'5 4 0 5 3 3 9 0 2 5\\n'\n>>> solution('2 2\\n4 4\\n2 2\\n4 4\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n\n\n-----Best Practice-----\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('4 3\\n1 2\\n4 3\\n1 2\\n') == '0 0 1 2\\n'\nassert solution('4 3\\n1 2\\n4 3\\n1 2\\n4 3\\n1 2\\n4 3\\n1 2\\n4 3\\n1 2\\n') == '0 0 1 2\\n'\nassert solution('4 4\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\\n') == '5 4 0 5 3 3 9 0 2 5'"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n2 2\n4 7\n1 1\n2 2\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''7 5\n3 2\n4 1 2\n1 2\n5 4\n2 6\n3 4\n1 5\n4 5\n''') == '4 0 1 4 2 3'\n\n\n\n-----\n\n'''\n\n'''\nThe idea of this solution is the same as the second solution, the only difference is, that we need to find the number of programmers whose skill is higher than the skill of their mentor.\n'''\n\n'''\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n'''\nOther cases\n\n'''\n\nassert solution('''20 10\n7 1 1 3 2 4 5 5 6 6 8 7 9 8 8 9 9 10 10 10 10 10 11 11 11 11 11 11 12 12 12 12 12 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 16 16 16 16 16 17 17 17 17 17 18 18 18 18 18 19 19 19 19 19 19\n''') == '2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19'\nassert solution('''20 10\n5 1 1 2 2 4 5 5 6 6 8 7 9 8 8 9 9 10 10 10 10 10 11 11 11 11 11 11 12 12 12 12 12 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 16 16 16 16 16 17 17 17 17 17 18 18 18 18 18 19 19 19 19 19 19 19\n''') == '2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19'\nassert solution('''20 10\n5 1 1 2 2 4 5 5 6 6 8 7 9 8 8 9 9 10 10 10 10 10 11 11 11 11 11 11 12 12 12 12 12 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 16 16 16 16 16 17 17 17 17 17 18 18 18 18 18 19 19 19 19 19 19 19\n''') == '2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19'\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('7 3\\n6 7 3 1\\n7 6 3\\n1 7 3\\n3 7 3\\n1 6 7\\n1 3\\n3 7\\n4 6\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('7 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\nabb\"\n\n'''\n\n\nimport sys\n\nstdin = sys.stdin.read()\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 2 3''') == \"NO\"\nassert solution('''3 2\n1 3 2''') == \"NO\"\nassert solution('''3 2\n1 3 2''') == \"NO\"\n\nassert solution('''3 2\n1 2 3''') == \"YES\"\nassert solution('''3 2\n1 3 2''') == \"YES\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"def\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ab') == 'YES\\naabb'\nassert solution('ac') == 'NO'\nassert solution('bc') == 'NO'\nassert solution('ca') == 'NO'\nassert solution('a') == 'YES\\nabc'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2''') == \"YES\"\nassert solution('''3 2\n1 3 2\n2 1 3''') == \"NO\"\nassert solution('''3 2\n1 3 2\n2 3 1''') == \"YES\"\nassert solution('''3 2\n3 1 2\n1 3 2''') == \"YES\"\nassert solution('''3 2\n2 1 3\n2 3 1''') == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 2 3\n1 3 2''') == 'YES'\nassert solution('''3 2\n1 3 2\n1 2 3''') == 'NO'\nassert solution('''10 5\n2 3 1 4 5 6 7 8 9 10\n2 3 1 4 5 6 7 8 9 10''') == 'NO'\nassert solution('''7 7\n1 2 3 4 5 6 7\n2 3 4 5 6 7''') == 'YES'\nassert solution('''5 1\n2 3 4 5''') == 'YES'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"YES\\nabb\"\nassert solution(\"3 2\") == \"NO\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"YES\\nabb\""
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n20 10 20\\n') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10\\n') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 5 5\\n') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4\\n') == '3\\n2 1'\nassert solution('2\\n2\\n') == '3\\n1 2'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n20 10 20\\n') == '43'\nassert solution('4\\n10 10 10 10\\n') == '64'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69'\nassert solution('2\\n1 4\\n') == '3'\nassert solution('1000\\n999 999 999 999\\n') == '108801'\n\n-----\n\nEnglish:\n\nWrite a function:"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n20 10 20\\n') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10\\n') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4\\n') == '3\\n2 1'\n\"\"\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n20 10 20') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4') == '3\\n2 1'\n\"\"\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n20 10 20') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10') == '64\\n2 1 4 3'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4') == '3\\n2 1'\nassert solution('5\\n1 1 1 1 1 1') == '69\\n1 2 3 4 5'\n\n\n\n\"\"\"\n\nN = int(input())\nA = [int(x) for x in input().split()]\nM = sum(A)\n\nMinShots = M\nbest_shooting_order = []\n\nfor i in range(N):\n    MinShots = MinShots - A[i] + 1\n    if MinShots < M:\n        best_shooting_order.append(i+1)\n        M = MinShots\n\nprint(M)\nprint(*best_shooting_order)\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 10 10 10') == '64'\nassert solution('3') == '43'\nassert solution('1 2 3') == '69'\nassert solution('1 10 1') == '69'\nassert solution('1 10 1 10') == '64'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n4 5\") == \"3\"\nassert solution(\"3 4\\n1 2 3 4\") == \"27\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"2 4\\n1 2 3 4\") == \"22\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n20 10 20\n''') == '43'\nassert solution('''\n4\n10 10 10 10\n''') == '64'\nassert solution('''\n6\n5 4 5 4 5 5\n''') == '69'\nassert solution('''\n2\n1 4\n''') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 4\\n') == '3\\n2 1 '\nassert solution('3\\n10 10 10 10\\n') == '64\\n2 1 4 3 '\nassert solution('4\\n10 10 10 10\\n') == '69\\n6 1 3 5 2 4 '\nassert solution('6\\n5 4 5 4 4 5\\n') == '69\\n6 1 3 5 2 4 '\nassert solution('7\\n1 4\\n') == '43\\n2 1 4 3 '\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 5 1 3') == '3'\nassert solution('4 2 5 1 3') == '3'\nassert solution('2 2 1 1 2') == '3'\nassert solution('2 2 1 1 2') == '3'\nassert solution('4 2 5 1 3') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n2 1 5 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 1 5 3') == '3'\nassert solution('5\\n4 3 1 5') == '3'\nassert solution('5\\n5 3 1 4') == '4'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '5'\nassert solution('5\\n1 2 3 4 5') == '5'\nassert solution('3\\n3 2 1') == '1'\nassert solution('3\\n3 1 2') == '2'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\") == \"3\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2 2\") == \"1\"\nassert solution(\"2\\n1 1\") == \"1\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 3\nassert solution('3 2 1') == 3\nassert solution('2 3 1') == 3\nassert solution('1 3 2') == 3\nassert solution('2 1 3') == 3\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n4 2 5 1 3\\n') == '3'\nassert solution('4\\n2 5 4 1\\n') == '3'\nassert solution('3\\n5 4 3 2\\n') == '2'\nassert solution('5\\n4 3 2 5\\n') == '3'\nassert solution('5\\n4 3 5 2\\n') == '1'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\nassert solution(\"4\\n3 4 2 1\\n\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"5\\n4 3 2 1\\n\") == \"1\"\nassert solution(\"2\\n2 1\\n\") == \"2\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('4\\n4 2 5 1 3') == '3'\nassert solution('4\\n4 2 4 1 3') == '3'\nassert solution('4\\n4 2 4 3 1') == '3'\nassert solution('4\\n4 2 4 3 5 1') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4 2 5 1 3\") == \"3\"\nassert solution(\"5\\n4 2 5 1 3\") == \"4\"\nassert solution(\"5\\n2 4 5 1 3\") == \"4\"\nassert solution(\"5\\n4 5 1 2 3\") == \"2\"\nassert solution(\"5\\n2 4 3 5 1\") == \"4\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 3 4') == '3'\nassert solution('4\\n4 2 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3') == '2'\nassert solution('1\\n3') == '0'\nassert solution('1\\n4') == '0'\nassert solution('1\\n4\\n4') == '0'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == \"1\"\nassert solution('3 3 3 3') == \"1\"\nassert solution('3 3 3 3') == \"1\"\nassert solution('3 3 3 3') == \"1\"\nassert solution('3 3 3 3') == \"1\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 0\nassert solution('1\\n2') == 1\nassert solution('1\\n3') == 0\nassert solution('1\\n4') == 1\nassert solution('1\\n5') == 0\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 3 3 3') == 1\nassert solution('4\\n3 3 3 3') == 1\nassert solution('4\\n4 4 4 4') == 0\nassert solution('4\\n3 3 3 3') == 0\nassert solution('4\\n4 4 4 4') == 0\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3') == '1'\nassert solution('10\\n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7') == '0'\nassert solution('5\\n5 5 5 5 5') == '0'\nassert solution('5\\n3 3 3 3 3') == '3'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n3 3 3 3''') == '1'\nassert solution('''4\n3 3 3 3''') == '1'\nassert solution('''4\n3 3 3 3''') == '1'\nassert solution('''4\n3 3 3 3''') == '1'\nassert solution('''4\n4 3 3 3''') == '0'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 1 3 2 3 1 2 3') == 1\nassert solution('2 3 1 3 2 3 1 2 3') == 0\nassert solution('3 1 2 3 4 5 3 4 2 3 1 1 1 4 4 1 2 3 4 3 3 1') == 1\nassert solution('2 1 2 3 4 1 2 3') == 2\nassert solution('1') == 0\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3') == '2'\nassert solution('3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3') == '1'\nassert solution('2\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3') == '0'\nassert solution('5\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3') == '2'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2 3 4 5') == '1'\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"-1 -2 -3 -4 -5\") == \"-1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\nprint(\"Passed\")\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 1 3 4 5') == '0'\nassert solution('2 2 3 4 5') == '1'\nassert solution('1 1 1 3 4 5') == '2'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 3 2 0 1') == '1'\nassert solution('0 3 2 0 1') == '1'\nassert solution('0 1 2 3 4 5') == '1'\nassert solution('0 1 2 3 4 0') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 0 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"2 0 3 4 5\") == \"1\"\nassert solution(\"3 0 4 5 2\") == \"2\"\nassert solution(\"4 0 3 5 2\") == \"2\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"5 4 3 2 1\") == \"2\"\nassert solution(\"5 4 3 2\") == \"4\"\nassert solution(\"5 4 3\") == \"3\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 2 3 4 5''') == '1'\nassert solution('''-10 2 3 4 5''') == '1'\nassert solution('''1 3 -5 -7 3''') == '-1'\nassert solution('''0 -2 3 4 5''') == '1'\nassert solution('''1 -2 3 4 5''') == '-1'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'\nassert solution('4 4') == '0'\nassert solution('1 1') == '0'\nassert solution('0 0') == '0'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5') == '0'\n\"\"\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == 0\n\"\"\"\n\nH, W = map(int, stdin.split())"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"0\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 6\") == \"0\"\nassert solution(\"5 4\") == \"0\"\nassert solution(\"6 5\") == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('10 10') == '5'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(0)\n\"\"\"\n\nH, W = [int(x) for x in stdin.split()]\nprint(abs(H*W-H-W))\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\n\"\"\""
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('3 5') == '0'\nassert solution('3 4') == '0'\nassert solution('2 1') == '1'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5''') == ''\nassert solution('''1 10''') == '0'\nassert solution('''7 5''') == '2'\nassert solution('''4 2''') == '2'\nassert solution('''3 5''') == '0'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 10 100\n''') == 'Yes'\nassert solution('''\n2\n1 2\n''') == 'No'\nassert solution('''\n2\n1 1\n''') == 'Yes'\nassert solution('''\n3\n1 2 3\n''') == 'No'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_a) == output_a\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\n\"\"\"\n\n-----Solution-----\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"2 10 3\") == \"No\"\nassert solution(\"2 10 3\") == \"No\"\nassert solution(\"5 10 5\") == \"Yes\"\nassert solution(\"1 10 100\") == \"Yes\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 10 100') == 'Yes'\nassert solution('5\\n1 10 100 1000 10000') == 'Yes'\nassert solution('4\\n1 10 100 1000') == 'No'\nassert solution('4\\n1 10 100 1000 10') == 'No'\nassert solution('1\\n1') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 10 100''') == \"Yes\"\nassert solution('''2\n1 2''') == \"No\"\nassert solution('''3\n1 10 100''') == \"Yes\"\nassert solution('''3\n1 2 3''') == \"No\"\nassert solution('''3\n1 2 3''') == \"Yes\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\\n1 100 10\"\nassert solution(\"1\\n1\") == \"Yes\\n1 1\"\nassert solution(\"2\\n2\") == \"Yes\\n2 1\"\nassert solution(\"2\\n1\") == \"No\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"Yes\\n1 5 1\\n1 2 4 3\\n1 3 2 4 5\\n1 4 3 2 5\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 10 100''') == 'Yes'\nassert solution('''3\n1 10 100''') == 'Yes'\nassert solution('''3\n1 10 100''') == 'Yes'\nassert solution('''3\n2 100 100''') == 'No'\nassert solution('''3\n2 5 10''') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Yes'\nassert solution('xy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('abcde') == 'Yes'\nassert solution('abcdef') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abcdef') == 'No'\nassert solution('dafdf') == 'Yes'\nassert solution('xzyx') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcd') == 'Yes'\nassert solution('abcd') == 'No'\nassert solution('aabc') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('axc') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('xy') == 'Yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'\nassert solution('aabcd') == 'No'\nassert solution('xxyx') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atlas') == 'Yes'\nassert solution('ab') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'Yes'\nassert solution('x') == 'No'\nassert solution('xab') == 'Yes'\nassert solution('xaa') == 'Yes'\nassert solution('xaz') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('xy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atlas') == 'Yes'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Yes'\nassert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'\nassert solution('zabcdefghijklmnopqrstuvwxy') == 'Yes'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atlas') == 'Yes'\nassert solution('gtcoder') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('yx', 'axy') == 'Yes'\nassert solution('atcoder', 'atlas') == 'No'\nassert solution('apple', 'apple') == 'Yes'\nassert solution('xxx', 'yyy') == 'No'\nassert solution('atcoder', 'atlas') == 'No'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 8 2') == 'NO'\nassert solution('7 1 1') == 'YES'\nassert solution('10 1 2') == 'NO'\nassert solution('10 7 2') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2') == 'NO'\nassert solution('7 14 1') == 'YES'\nassert solution('2 2 2') == 'YES'\nassert solution('7 2 2') == 'YES'\nassert solution('2 2 1') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 14 1') == 'YES'\nassert solution('7 15 1') == 'NO'\nassert solution('10 19 1') == 'YES'\nassert solution('10 21 1') == 'NO'\nassert solution('10 22 1') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0\") == \"\"\nassert solution(\"0 0 1\") == \"NO\"\nassert solution(\"0 0 2\") == \"NO\"\nassert solution(\"0 0 3\") == \"NO\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n7 5 1') == 'YES'\nassert solution('1 2 3\\n9 5 3') == 'YES'\nassert solution('1 2 3\\n7 5 3') == 'NO'\nassert solution('1 2 3\\n1 1 3') == 'YES'\nassert solution('1 2 3\\n7 5 3') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('10 5 2') == 'NO'\nassert solution('7 1 3') == 'YES'\nassert solution('0 0 0') == 'NO'\nassert solution('20 19 2') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('12 15 15') == 'YES'\nassert solution('10 15 15') == 'NO'\nassert solution('10 15 15') == 'NO'\nassert solution('1 2 3') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 8 3\") == \"NO\"\nassert solution(\"7 9 3\") == \"YES\"\nassert solution(\"7 10 3\") == \"NO\"\nassert solution(\"7 12 3\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('1 4 1') == 'NO'\nassert solution('2 2 1') == 'YES'\nassert solution('2 2 2') == 'NO'\nassert solution('1 1 1') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4 2''') == 'YES'\nassert solution('''2 2 1''') == 'YES'\nassert solution('''5 4 1''') == 'YES'\nassert solution('''1 2 1''') == 'YES'\nassert solution('''5 2 3''') == 'NO'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1 2'''\n) == 1\nassert solution(\n'''1 1'''\n) == 0\nassert solution(\n'''2 1'''\n) == 0\nassert solution(\n'''100000 100000'''\n) == 1000000\nassert solution(\n'''10000 10000'''\n) == 0\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\nassert solution('100 100') == '101'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1') == '0'\nassert solution('1 1') == '0'\nassert solution('100 100') == '50'"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\n\n'''\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"10 10\") == \"50\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 4\") == \"0\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == 1\nassert solution('3 4') == 9\nassert solution('10 4') == 49\nassert solution('9 10') == 49\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\n\nprint(solution('4 4'))\nassert solution('4 4') == '2'\n\nprint(solution('10 10'))\nassert solution('10 10') == '2'\n\nprint(solution('5 4'))\nassert solution('5 4') == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n\"\"\""
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"10 1 10\") == \"3\"\nassert solution(\"7 4 6\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 1 1\") == \"1\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\") == \"3\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"2 2 1\") == \"0\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"3 1 1\") == \"1\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('10 2 2') == '1'\nassert solution('9 2 1') == '2'\nassert solution('5 2 3') == '2'\nassert solution('10 4 1') == '3'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"6 3 2\") == \"2\"\nassert solution(\"7 3 2\") == \"2\"\nassert solution(\"4 7 2\") == \"4\"\nassert solution(\"13 5 2\") == \"5\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('5 3 2') == '3'\nassert solution('5 3 1') == '2'\nassert solution('13 2 2') == '3'\nassert solution('5 4 2') == '1'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\nprint('Test 1 passed')\n\nassert solution(input()) == expected\nprint('Test 2 passed')\n'''\n\n'''\nimport sys"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('13 3 1') == '3'\n\"\"\"\nimport sys"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.rstrip().split(\" \")\n\"\"\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('13 3 2') == '3'\nassert solution('13 3 3') == '3'\nassert solution('13 3 4') == '3'\nassert solution('13 3 5') == '3'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n1 1\\n2 0\\n3 1\\n4 2\\n5 5\") == \"2\"\nassert solution(\"0 0\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n6 1\\n7 1\\n8 0\\n9 0\\n10 1\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n0 0\") == \"1\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 0\") == \"0\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"0\"\nassert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n0 0\") == \"0\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n\") == \"2\\n\"\n\"\"\"\n\nfrom itertools import combinations\n\nn = int(input())\nL = []\nfor _ in range(n):\n    a, b = [int(x) for x in input().split()]\n    L.append((a, b))\n\nL.sort()\n\nout = 0\nfor i, j in combinations(L, 2):\n    if i[0] < j[0] and i[1] < j[1]:\n        out += 1\n\nprint(out)\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 0') == '2'\nassert solution('3 1') == '1'\nassert solution('1 3') == '0'\nassert solution('4 2') == '0'\nassert solution('0 4') == '1'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n2 1') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n4 3') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n2 3') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5''') == '2'\nassert solution('''2\n1 0\n2 2\n1 2\n1 2\n1 1\n2 1\n2 1\n2 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('10 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10\\n0 0\\n0 0\\n10 10\\n0 0\\n0 10\\n0 10"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 3') == '7'\nassert solution('1 2') == '5'\nassert solution('1 2 3') == '5'\nassert solution('1 2 3 4') == '7'\nassert solution('1 2 3 4 5') == '10'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '4'\nassert solution('1 2 3') == '5'\nassert solution('2 3 5') == '7'\nassert solution('2 5 6 7') == '8'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4\\n0 3\\n') == '7'\nassert solution('10 4\\n5 2 3 4 1 3 3 4 5\\n') == '16'\nassert solution('10 4\\n5 2 3 4 1 3 3 4 5\\n') == '16'\nassert solution('10 4\\n5 2 3 4 1 3 3 4 5\\n') == '16'\nassert solution('10 4\\n5 2 3 4 1 3 3 4 5\\n') == '16'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 3\\n0 2\\n\") == \"2\"\nassert solution(\"1 3\\n1 2\\n\") == \"4\"\nassert solution(\"1 3\\n0 2\\n\") == \"4\"\nassert solution(\"1 3\\n0 1\\n\") == \"4\"\nassert solution(\"1 3\\n0 0\\n\") == \"4\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n0 3\\n') == '7\\n'\nassert solution('5 7\\n5 7\\n0 3\\n') == '10\\n'\nassert solution('1 5\\n0 3\\n') == '4\\n'\n\"\"\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[8]\n\"\"\""
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4\n0 3''') == '7'\n'''\nassert solution('''10 7\n4 7 5 9 9 8 9 9 8 9 7''') == '29'\n'''\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n0 3\\n0 4\\n0 2\\n\") == \"7\"\nassert solution(\"2 2\\n0 1\\n1 2\\n\") == \"8\"\nassert solution(\"2 4\\n0 3\\n0 4\\n0 2\\n\") == \"7\"\nassert solution(\"2 4\\n0 3\\n0 4\\n0 2\\n\") == \"7\"\nassert solution(\"2 4\\n0 3\\n0 4\\n0 2\\n\") == \"7\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[3]\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 4\n0 3\n''') == '7'\nassert solution('''3 4\n1 2 3\n''') == '2'\nassert solution('''3 2\n2 1 3\n''') == '5'\nassert solution('''10 4\n1 2 3 4 5 6 7 8 9 10\n''') == '6'\nassert solution('''10 9\n1 2 3 4 5 6 7 8 9 10\n''') == '9'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\\n1\\n2\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"0\\n2\\n1\"\n\n\n'''\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"L 1\") == \"1\"\nassert solution(\"R 2\") == \"2\"\nassert solution(\"R 3\") == \"3\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\nL 2\\nR 3\\nR 4\\nL 3\\nL 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"4\\nL 2\\nR 3\\nR 4\\nL 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '1'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1\\n1\\n2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0\\n2\\n1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 110\n? 110''') == '0\\n2\\n1'\n\n\n\n-----Binary Search-----\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n2\\n1\\n1\\n3\\n1\\n2\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n2\\n1\\n3\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('2\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115') == '2'\nassert solution('4\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115') == '1'\nassert solution('3\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115') == '2'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n') == '0'\nassert solution('2\\n') == '-1'\nassert solution('3\\n') == '1'\nassert solution('2\\n1\\n') == '1'\nassert solution('3\\n1\\n') == '2'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\n\n------Alternate solution: using dictionary--------"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1\\n4\\n1\\n2\\n') == '1\\n1\\n1\\n1\\n-1\\n-1\\n-1'\nassert solution('4\\n1\\n4\\n1\\n2\\n') == '4\\n1\\n1\\n1\\n-1\\n-1'\nassert solution('4\\n1\\n4\\n1\\n2\\n') == '1\\n1\\n1\\n1\\n-1\\n-1'\nassert solution('4\\n1\\n4\\n1\\n2\\n') == '4\\n1\\n1\\n1\\n-1\\n-1'\nassert solution('4\\n1\\n4\\n1\\n2\\n') == '4\\n1\\n1\\n1\\n-1\\n-1'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0 \") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2''') == 'YES'\nassert solution('''3\n4\n1 1 2 1\n2\n11 11\n1''') == 'NO'\nassert solution('''3\n2\n1 1 1\n2\n1 1''') == 'YES'\nassert solution('''3\n2\n2\n1 1''') == 'NO'\nassert solution('''3\n2\n2\n2\n1 1''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n100''') == 'YES'\nassert solution('''1\n2''') == 'YES'\nassert solution('''1\n3''') == 'YES'\nassert solution('''2\n3''') == 'YES'\nassert solution('''2\n2''') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('1\\n1\\n100') == 'NO'\nassert solution('1\\n100\\n1') == 'YES'\nassert solution('1\\n100\\n1\\n100') == 'YES'\nassert solution('2\\n1\\n2\\n2\\n1\\n2\\n2') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n4\\n1 1 3\\n2\\n11 11\\n1') == 'NO'\nassert solution('1\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('1\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('1\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('1\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n101\n''') == 'NO'\nassert solution('''4\n4\n1 1 3 1\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''6\n4\n1 1 3 1 1 1\n4\n1 1 2 1 1 1\n2\n11 11\n1\n101\n''') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1 1 3\") == \"YES\"\nassert solution(\"1 1 2 1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3\\n3\\n3') == 'YES'\nassert solution('3\\n2\\n2\\n1') == 'YES'\nassert solution('2\\n1\\n1\\n1') == 'YES'\nassert solution('3\\n2\\n1\\n1') == 'NO'\nassert solution('4\\n2\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7''') == '4'\nassert solution('''5''') == '0'\nassert solution('''abcdefghi''') == '0'\nassert solution('''bcdefghi''') == '0'\nassert solution('''cccdefghi''') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacaba') == '4'\nassert solution('bacabaa') == '0'\nassert solution('zcabd') == '0'\nassert solution('dbacz') == '0'\nassert solution('abcdddda') == '8'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"\nassert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\n\n\n-----"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ababab\") == \"ba\"\nassert solution(\"bbbaa\") == \"aab\"\nassert solution(\"abababa\") == \"baa\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"abab\") == \"\"\nassert solution(\"bbaa\") == \"aab\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\ndbacz') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\nbacz') == '0'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7''') == ''\nassert solution('''abacaba''') == ''\nassert solution('''bacabaa''') == '''''\n\nfrom sys import stdin\n"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\nabacaba\\nbacabaa\\n') == '4'\nassert solution('5\\nzcabd\\ndbacz\\n') == '0'\n\"\"\"\n\nn = int(input())\na = input()\nb = input()\n\na, b = list(a), list(b)\n\nfor i in range(1, n):\n    if a[i]!= b[i]:\n        a[i], b[i] = b[i], a[i]\n\nprint(len(a))\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3''') == '8'\nassert solution('''100 1 4''') == '198'\nassert solution('''1 10 5''') == '-17'\nassert solution('''1000000000 1 6''') == '2999999997'\nassert solution('''1 1 1000000000''') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\nassert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\nassert solution('6\\n10 10 10\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n') == '9\\n9\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\nassert solution('6\\n10 10 10\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n') == '9\\n9\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\nassert solution('6\\n10 10 10\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n') == '9\\n9\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('5 3\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999''') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n3 4 5\n1 1 1\n2 2 2''') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n0'\nassert solution('''6\n4 4 4\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n1 1 1''') == '8\\n0\\n0\\n0\\n0\\n0'\nassert solution('''6\n3 3 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n1 1 1''') == '8\\n0\\n0\\n0\\n0\\n0'\nassert solution('''6\n5 5 5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n1 1 1''') == '8\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n') == '1'\nassert solution('10\\n') == '9'\nassert solution('5\\n') == '8'\nassert solution('100\\n') == '98'\nassert solution('1000000000\\n') == '99'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n\n'''"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''1\n100\n10000\n1000000000000000000''') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nprint('Passed:'+ str(testCount))\n\nprint(solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n'''))\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '3'\nassert solution('1\\n6') == '9'\nassert solution('1\\n13') == '27'\nassert solution('1\\n14') == '3620'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n'''\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n2\n9\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n3\n9\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n4\n9\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '3'\nassert solution('1\\n3') == '4'\nassert solution('1\\n4') == '5'\nassert solution('1\\n5') == '6'\n"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '10'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '10'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '10'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '10'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '10'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 10 8 5 3') == '70'\nassert solution('12 8 8 7 2') == '77'\nassert solution('12343 43 4543 39 123212') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1') == '999999999'\nassert solution('1000000000 1000000000 1 1 1000000000') == '55'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '120'\nassert solution('1 2 3 4 5') == '120'\nassert solution('1 2 3 4 5') == '120'\nassert solution('1 2 3 4 5') == '120'\nassert solution('1 2 3 4 5') == '120'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 10 8 5 3''') == '70'\nassert solution('''12 8 8 7 2''') == '77'\nassert solution('''12343 43 4543 39 123212''') == '77'\nassert solution('''1000000000 1000000000 1 1 1''') == '999999999000000000'\nassert solution('''1000000000 1000000000 1 1 1000000000''') == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == '1'\nassert solution('1 1 2 2') == '2'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('2 2 2') == '2'\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n8 8 8 7 2\") == \"70\"\nassert solution(\"5\\n12 8 8 7 2\") == \"77\"\nassert solution(\"1000000000\\n1000000000 1 1 1\") == \"999999999000000000\"\nassert solution(\"1000000000\\n1000000000 1 1 1000000000\") == \"999999999\"\nassert solution(\"10 11 2 1 5\") == \"10\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 10 8 5 3') == '70'\nassert solution('12 8 8 7 2') == '77'\nassert solution('12343 43 4543 39 123212') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1') == '999999999'\nassert solution('1000000000 1000000000 1 1 1000000000') == '55'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\"\nassert solution(\"3 5\\n3 4\\n3 1\\n2 1\\n1 1\\n1 2\\n2 3\\n3 5\\n3 4\") == \"2\\n3\\n3\\n3\\n1\"\nassert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(''.join(input().split(' '))) == '1'\n\nassert solution(''.join(input().split(' '))) == '0'\n\nassert solution(''.join(input().split(' '))) == '2'\n\nassert solution(''.join(input().split(' '))) == '2'\n\nassert solution(''.join(input().split(' '))) == '1'"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == '1\\n0\\n2\\n2\\n1'\nassert solution('''2\n5 4\n3 3\n''') == '0\\n2\\n1'\nassert solution('''7\n3 2\n''') == '2\\n1'\nassert solution('''4\n3 2\n''') == '2\\n1'\nassert solution('''1\n2\n''') == '0\\n'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input.txt') == '0'\nassert solution('input2.txt') == '0'\nassert solution('input3.txt') == '2'\nassert solution('input4.txt') == '2'\nassert solution('input5.txt') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == answer_test\n"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '0'\nassert solution('1 2') == '2'\nassert solution('1 10') == '2'\nassert solution('2 4') == '2'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n22\n9999\n1\n777\n''') == '13'\nassert solution('''\n2\n22\n9999\n''') == '90'\nassert solution('''\n2\n1\n''') == '1'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n3\n1\n2\n3\n''') == '4'"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('5') == '4'\nassert solution('100') == '4'\nassert solution('999') == '6'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''22\n9999\n1\n777\n''') == '13'\nassert solution('''4\n22\n9999\n1\n777\n''') == '90'\nassert solution('''5\n1\n22\n9999\n1\n777\n''') == '66'\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    '4',\n    '22',\n    '9999',\n    '1',\n    '777',\n])) == '13', \"1\\n90\\n1\\n66\""
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n22\n9999\n1\n777\n\n''') == '13\\n90\\n1\\n66\\n'\n\nassert solution('''\n2\n1\n3\n\n''') == '2\\n3\\n'\n\nassert solution('''\n2\n1111\n\n''') == '13\\n'\n\nassert solution('''\n1\n2\n3\n\n''') == '1\\n2\\n3\\n'\n\nassert solution('''\n1\n1\n3\n\n''') == '3\\n'"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n22\n9999\n1\n777\n''') == '13\\n90\\n1\\n66'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n1\n1\n''') == '1'\n\nassert solution('''2\n3\n2\n1\n''') == '4'\n\nassert solution('''5\n4\n7\n1\n5\n8\n''') == '6'\n\nassert solution('''10\n19\n999\n''') == '7'\n\nassert solution('''100\n10\n10\n10\n100\n''') == '4'"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''4\n22\n9999\n1\n777''') == '90'\nassert solution('''4\n22\n9999\n1\n777''') == '1'\nassert solution('''4\n22\n9999\n1\n777''') == '66'\n'''\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\n'''\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\") == \"42\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\") == \"109\"\nassert solution(\"1\\n11\\n1111\\n1111111\\n2222222\\n
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('2') == 'NO'\nassert solution('5') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n2 6\\n1 2\"\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'YES'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'NO'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'NO'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'YES'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 3 1 3 2''') == 'YES'\nassert solution('''6\n1 1 2 2 2 1''') == 'YES'\nassert solution('''2\n5\n2 3 1 3 2''') == 'NO'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == 'YES'\nassert solution('''3\n2\n2 3\n2 2 2''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''5\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''6\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2 3 1 3 2\n6\n1 1 2 2 2 1''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2''') == 'YES'\nassert solution('''2\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2''') == 'NO'\nassert solution('''2\n2\n5\n5\n1 1 1 1 1\n2\n2 3''') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"\n\n\"\"\"\n\nn = int(input())\n\nL = [int(x) for x in input().split()]\n\nfor i in range(n):\n    for j in range(i, n):\n        s = sum(L[:i] + L[j + 1:])\n        if s == sum(L[i + 1:j + 1]):\n            print('YES', i + 1, j + 1)\n            exit(0)\nprint('NO')\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n2\\n2\\n2') == 'NO'\nassert solution('2\\n2\\n2\\n2\\n2') == 'NO'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''5\n6\n2 2 2 2 2\n5\n2 2 2 2\n3\n2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''6\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n5\\n2 3 1 3 2') == 'YES\\n2 6\\n1 2'\nassert solution('2\\n6\\n1 1 2 2 2 1') == 'NO\\n'\nassert solution('2\\n6\\n2 2 2 2 2\\n2 2 2 2 2') == 'YES\\n2 2\\n4 1'\nassert solution('2\\n6\\n2 2 2 2 2\\n2 2 2 2 2') == 'NO\\n'\nassert solution('2\\n5\\n2 3 1 3 2') == 'YES\\n2 6\\n1 2'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([4, 2, 3], 1) == 5\nassert solution([3, -1, 0, 2], 3) == 6\nassert solution([2, -3, -1, 5, -4], 2) == 13\nassert solution([-3, 3, -1, 5, -4], 2) == 13\nassert solution([-5, -7, -3, -1, -2, 1], 2) == 7\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\nassert solution([-2,1,2,-2,1,-2], 5) == 6\nassert solution([-1,1,-1], 3) == 0"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 -1 0 2') == '6'\nassert solution('4 2 3') == '5'\nassert solution('3 -1 0 2') == '6'\nassert solution('2 -3 -1 5 -4') == '13'\nassert solution('2 -3 -1 5 -4') == '13'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3,4,1,2\") == 5\nassert solution(\"3,-1,0,2\") == 6\nassert solution(\"2,-3,-1,5,-4\") == 13"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 1 1 1\") == \"4\"\nassert solution(\"-1 -1 -1 -1\") == \"-1\"\nassert solution(\"-1 -1 -1 -1 2\") == \"0\"\nassert solution(\"1 2 3 4\") == \"10\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6,6,6,4,6,3') == '8'\nassert solution('2,2,2,1') == '6'\nassert solution('5,5,5,5,5,5,5,5,5,5,5,5') == '55'\nassert solution('5,5,5,5,5,5,5,5,5,5,5,5') == '55'\nassert solution('1,2,3') == '6'\n"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\nassert solution([-2,1,-3,4,-1,2,1,-5,4], 4) == 6\n\n\n'''"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2 3') == '5'\nassert solution('3 -1 0 2') == '6'\nassert solution('2 -3 -1 5 -4') == '13'\nassert solution('2 -3 -1 5 -4') == '13'\n'''\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == 'true'\nassert solution(\"0 2 1 -6 6 -7 9 -1 2 0 1\") == 'false'\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == 'true'\nassert solution(\"3 3 6 5 -2 2 5 1 -9 -4\") == 'false'\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4 1 2 0 1\") == 'true'\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 2 1 -6 6 -7 9 1 2 0 1''') == True\nassert solution('''0 2 1 -6 6 -7 9 -1 2 0 1''') == False\nassert solution('''3 3 6 5 -2 2 5 1 -9 4''') == True\nassert solution('''3 3 6 5 -2 2 5 1 -9 4''') == True\nassert solution('''3 3 6 5 -2 2 5 1 -9 4''') == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == True\nassert solution('0 2 1 -6 6 -7 9 -1 2 0 1') == False\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == True\nassert solution('3 3 6 5 -2 2 5 1 -9 -4') == False\nassert solution('3 3 6 5 -2 -2 5 1 -9 4') == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\n'''\nfrom typing import List\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([]) == False\nassert solution([0]) == True\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([0,2,1,-6,6,7,9,1,2,0,1]) == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"\nassert solution([-1,0,1]) == \"false\"\n\"\"\"\nfrom typing import List\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        N = len(A)\n        if N < 3:\n            return False\n        A = [0] + A\n        acc = 0\n        for i in range(1, N+1):\n            acc += A[i]\n            if acc == 0:\n                return True\n        return False"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) is True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) is False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) is True\nassert solution([0,0,0,0,0]) is True\nassert solution([0]) is True\n\"\"\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet'\nassert solution('1\\nbeat\\n') == 'beat'\nassert solution('5\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'bet'\nassert solution('10\\nbet\\n') == 'bet'\nassert solution('5\\nbet\\n') == 'bet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'beet'\nassert solution('bet') == 'bet'\nassert solution('bed') == 'bed'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\nassert solution('''2\nabc\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'beet'\nassert solution('bet') == 'bet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1'\nassert solution('3\\n') == ''\nassert solution('6\\n') == ''\nassert solution('8\\n') == ''\nassert solution('10\\n') == ''\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\nassert solution('''7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\nassert solution('''7\nbeat\nbeat\nbet\nbet\nbet\nbet\nbeet\nbeet\n''') == 'beet'\nassert solution('''7\nbeat\nbet\nbet\nbet\nbet\nbet\nbet\nbeet\n''') == 'bet'\nassert solution('''7\nbeat\nbet\nbet\nbet\nbet\nbet\nbet\nbeet\n''') == 'bet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('beat') == 'beet'\nassert solution('vet') =='vet'\nassert solution('beet') == 'beet'\nassert solution('bed') == 'bed'\nassert solution('bet') == 'bet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\nassert solution(\"8\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"8\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 8\") == \"8\"\nassert solution(\"2 4 8\") == \"8\"\nassert solution(\"3 4 8\") == \"8\"\nassert solution(\"10 4 8\") == \"8\"\nassert solution(\"12 14 8\") == \"8\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n4 8') == '8'\nassert solution('2\\n-4 8') == '-16'\nassert solution('2\\n4 8\\n-4 8') == '8'\nassert solution('2\\n-4 8\\n-4 8') == '-16'\nassert solution('2\\n4 8\\n8 8') == '8'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n-15 11 -1 -8 -9') == '8'\nassert solution('2\\n6 10') == '0'\nassert solution('2\\n-5 11') == '0'\nassert solution('5\\n-3 8 4 7 8') == '2'\nassert solution('5\\n1 5 5 5 5') == '0'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n4 8''') == '8'\nassert solution('''1\n1''') == '0'\nassert solution('''3\n1 3 4''') == '1'\nprint('Tests passed')\n\n'''"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n4 8''') == '8'\nassert solution('''3\n1 2 3''') == '2'\nassert solution('''3\n-4 5 6''') == '12'\nassert solution('''3\n3 -6 -5''') == '9'\nassert solution('''3\n5 -6 5''') == '5'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n8''') == '8'\nassert solution('''6\n8''') == '12'\nassert solution('''5\n7''') == '25'\nassert solution('''1\n1''') == '1'\nassert solution('''3\n2''') == '4'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n8\n''') == \"8\"\nassert solution('''4\n1\n''') == \"4\"\nassert solution('''6\n2\n3\n4\n5\n6\n7\n8\n''') == \"10\"\nassert solution('''10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8') == '8'\nassert solution('4 8 4') == '1'\nassert solution('-8 -6 -4 -2') == '1'\nassert solution('-3 -2 -1') == '0'\nassert solution('-3 -2 -1 -1') == '0'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == input(\"\")\nprint(\"Test 1 OK\")\n\nassert solution(input(\"\")) == input(\"\")\nprint(\"Test 2 OK\")\n\nassert solution(input(\"\")) == input(\"\")\nprint(\"Test 3 OK\")\n\nassert solution(input(\"\")) == input(\"\")\nprint(\"Test 4 OK\")\n\nassert solution(input(\"\")) == input(\"\")\nprint(\"Test 5 OK\")\n\nprint(\"All Tests Passed\")\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n    2\n    4 8\n''') == \"8\"\nassert solution('''\n    5\n    1 2 3 4 5\n''') == \"0\"\nassert solution('''\n    100\n    99 99 98 98 97 96 95 94 93 92 91 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\n''') == \"0\"\nassert solution('''\n    100\n    5 2 1 2 3 2 5 2 3 3 2 3 2 4 2 4 1 2 1 3 2 2 4 1 1 3 3 2 2 4 4 2 3 2 2 3 2 2 3 1 1 2 1 3 2 1 3 2 1 1 2 1 3 1 2 1 3 1 2 1 3 1 1 2 1 3\n''') == \"0\"\nassert solution('''\n    5\n    1 2 3 4 5\n''') == \"0\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1234 150 100') == '84'"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1234 150 100') == '84'\nassert solution('1234 150 80') == '12'\nassert solution('10') == '10'\n\nprint(solution('1234 150 100'))\nprint(solution('1234 150 80'))\nprint(solution('10'))\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1234 150 100') == '84'"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nassert solution(\"1234\\n150\\n100\") == \"84\""
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"123\\n2\\n1\") == \"2\"\nassert solution(\"1234\\n0\\n1\") == \"2\"\nassert solution(\"1234\\n1\\n100\") == \"83\"\nassert solution(\"123456789\\n1\\n1\") == \"56789\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2\\n3\") == \"8\"\nassert solution(\"1\\n2\\n3\") == \"0\"\nassert solution(\"6\\n3\\n3\") == \"9\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n4\\n5') == '7'\nassert solution('2\\n3\\n5') == '2'\nassert solution('2\\n3\\n4') == '0'\nassert solution('10\\n10\\n10') == '0'\nassert solution('10\\n10\\n5') == '5'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1234\\n150\\n100') == '84'\nassert solution('1234567\\n1234567\\n1234567') == '1234567'\nassert solution('1000000\\n1000000\\n1000000') == '1000000'\nassert solution('1000000\\n1000000\\n1000000') == '1000000'\nassert solution('1234567\\n1234567\\n1234567') == '1234567'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"100 100\\n150 150\") == \"1084\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"1 1\\n1 100\") == \"100\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\") == \"0\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '27'\nassert solution('1 1') == '1'\nassert solution('2 3') == '26'\nassert solution('4 4') == '1270'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"8\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"2 1\") == \"5\"\nassert solution(\"2 0\") == \"5\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data\n\"\"\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '8'\nassert solution('4 5') == '8'\nassert solution('2 4') == '10'\nassert solution('5 6') == '18'\nassert solution('8 9') == '256'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2 2\"\"\") == \"8\"\n\"\"\"\nInput:\n5 3\n\nOutput:\n20\n\nInput:\n5 4\n\nOutput:\n60\n\"\"\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nACCEPTED\n\n\"\"\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 4') == '6'\nassert solution('5 5') == '14'\nassert solution('1 10') == '0'\nassert solution('2 11') == '0'\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"2 3\") == \"60\"\nassert solution(\"3 3\") == \"1260\"\nassert solution(\"5 3\") == \"60\"\nassert solution(\"5 10\") == \"0\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('4 1') == 'POSSIBLE'\nassert solution('6 2') == 'POSSIBLE'\nassert solution('8 3') == 'POSSIBLE'\nassert solution('9 1') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 4\n1 2\n2 3\n3 4\n\n''') == 'POSSIBLE'\nassert solution('''7 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n\n''') == 'POSSIBLE'\nassert solution('''7 4\n1 4\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == 'POSSIBLE'\nassert solution('''1 2\n3 4\n5 6\n\n''') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == 'POSSIBLE'\nassert solution('2') == 'POSSIBLE'\nassert solution('3') == 'POSSIBLE'\nassert solution('4') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\nimport sys\nsys.setrecursionlimit(200000)"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 3') == 'POSSIBLE'\nassert solution('2 3\\n1 2\\n2 3') == 'IMPOSSIBLE'\nassert solution('1 1\\n1 2') == 'IMPOSSIBLE'\nassert solution('2 4\\n1 2\\n2 4\\n3 4\\n4 5') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 4\n1 2\n2 3\n3 4''') == 'POSSIBLE'\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n5 1''') == 'POSSIBLE'\nassert solution('''6 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 1''') == 'IMPOSSIBLE'\nassert solution('''6 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 1''') == 'POSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n1 3\\n\") == \"POSSIBLE\"\nassert solution(\"2 3\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n1 4\\n\") == \"POSSIBLE\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"abcde\") == \"acde\"\nassert solution(\"abcdefg\") == \"acdefg\"\nassert solution(\"bccdd\") == \"bcd\"\nassert solution(\"ba\") == \"a\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"acdr\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('algorithm') == 'algo'\nassert solution('edabit') == 'ed'\nassert solution('hacker') == 'ha'\nassert solution('javascript') == 'a'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdefghijklmnopqrstuvwxyz') == 'acdabgkhmnr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('the quick brown fox jumped over the lazy dog') == 'acdfjhjmrervxw'\nprint(\"Testcase 1 Passed\")\nprint(\"Testcase 2 Passed\")\nprint(\"Testcase 3 Passed\")\nprint(\"Testcase 4 Passed\")\nprint(\"Testcase 5 Passed\")\nprint(\"Testcase 6 Passed\")\nprint(\"Testcase 7 Passed\")\nprint(\"Testcase 8 Passed\")\nprint(\"Testcase 9 Passed\")\nprint(\"Testcase 10 Passed\")\n\"\"\""
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcdefg') == 'adg'\nassert solution('abcdefgh') == 'abdefgh'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"acdr\"\n\n\"\"\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('abcd') == 'ac'\nassert solution('abc') == 'ac'\nassert solution('abcdefghi') == 'ace'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'adgjmptwxyz'\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"acdr\") == \"atcdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"acdr\") == \"atcdr\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('gogol gorilla') == 'NO'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('gogol ogor') == 'NO'\nassert solution('gogol ogor') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('dog cat cat') == 'NO'\nassert solution('to be or not to be') == 'YES'\nassert solution('d o g o r g a p l e') == 'NO'\nassert solution('dog dog dog') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng ggorp apple') == 'NO'\nassert solution('g gorilla apple') == 'NO'\nassert solution('rng grgorp apple') == 'NO'\nassert solution('rng ggorp apple') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"dog cat wolf\") == \"NO\"\nassert solution(\"hello world\") == \"NO\"\nassert solution(\"rng gorilla\") == \"YES\"\nassert solution(\"dog cat\") == \"NO\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('x y z') == 'NO'\nassert solution('a a a') == 'NO'\nassert solution('a a b') == 'NO'\nassert solution('a b c') == 'NO'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng\") == \"NO\"\nassert solution(\"rng\") == \"NO\"\nassert solution(\"rng\") == \"NO\"\nassert solution(\"rng\") == \"NO\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('36'=='24') is True\nassert solution('24'=='36') is True\nassert solution('0'=='0') is True\nassert solution('2'=='2') is True\nassert solution('1'=='1') is True\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"LESS\"\nassert solution(\"6\") == \"LESS\"\nassert solution(\"24\") == \"LESS\"\nassert solution(\"37\") == \"GREATER\"\nassert solution(\"6\") == \"LESS\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == 'LESS'\n'''\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3') == \"LESS\"\nassert solution('3\\n4') == \"LESS\"\nassert solution('3\\n5') == \"GREATER\"\nassert solution('3\\n3') == \"EQUAL\"\nassert solution('8\\n8') == \"EQUAL\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"GREATER\"\n\nassert solution(input()) == \"GREATER\"\n\n\"\"\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('36\\n24') == 'GREATER'\nassert solution('1\\n1') == 'EQUAL'\nassert solution('1\\n2') == 'LESS'\nassert solution('2\\n2') == 'LESS'\nassert solution('2\\n3') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('36\\n24') == 'GREATER'\nassert solution('0\\n0') == 'EQUAL'\nassert solution('1\\n1') == 'EQUAL'\nassert solution('17\\n17') == 'EQUAL'\nassert solution('-17\\n17') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n8\") == \"GREATER\"\nassert solution(\"3\\n10\") == \"LESS\"\nassert solution(\"10\\n10\") == \"EQUAL\"\nassert solution(\"1\\n2\") == \"LESS\"\nassert solution(\"1\\n1\") == \"EQUAL\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('0') == 'EQUAL'\nassert solution('1') == 'GREATER'\nassert solution('3') == 'LESS'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[2]\n\"\"\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\napple\norange\napple\n2\ngrape''') == '2'\nassert solution('''3\na\na\n2\nb\n''') == '-1'\nassert solution('''2\na\nb\n2\nb\n''') == '-1'\nassert solution('''3\na\na\na\n1\nb\n''') == '0'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape\n1''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape\n1''') == '2'\nassert solution('''3\napple\norange\napple\n1\ngrape\n1\n''') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape''') == '2'\nassert solution('''3\na\nb\nc\n1\nabc''') == '1'\nassert solution('''3\nred\nblue\ngreen\n1\nabc''') == '-1'\nassert solution('''3\ngrap\npap\nlop\n1\nabc''') == '-1'\nassert solution('''3\na\na\na\n1\na\na\na\na\na\n1\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\napple\norange\napple\n1\ngrape\n\n''') == '2'\nassert solution('''\n4\na\nb\nc\nd\n\n''') == '1'\nassert solution('''\n2\nab\nba\n\n''') == '0'\nassert solution('''\n10\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n\n''') == '1'\nassert solution('''\n3\nA\nB\nC\n\n''') == '1'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('Takahashi') == ''\nassert solution('TaKaHashi') == ''\nassert solution('TaKahashi') == ''\nassert solution('TaKahA') == '2'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'\n\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nprint(\"All tests have passed!\")\n\n\"\"\""
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\nprint('Testcase 1 passed.')\n\nprint('Testcase 2 passed.')\n\nprint('Testcase 3 passed.')\n\nprint('Testcase 4 passed.')\n\nprint('Testcase 5 passed.')\n\nprint('Testcase 6 passed.')\n\nprint('Testcase 7 passed.')\n\nprint('Testcase 8 passed.')\n\nprint('Testcase 9 passed.')\n\nprint('Testcase 10 passed.')\n\nprint('Testcase 11 passed.')\n\nprint('Testcase 12 passed.')\n\nprint('Testcase 13 passed.')\n\nprint('Testcase 14 passed.')\n\nprint('Testcase 15 passed.')\n\nprint('Testcase 16 passed.')\n\nprint('Testcase 17 passed.')\n\nprint('Testcase 18 passed.')\n\nprint('Testcase 19 passed.')\n\nprint('Testcase 20 passed.')\n\nprint('Testcase 21 passed.')\n\nprint('Testcase 22 passed.')\n\nprint('Testcase 23 passed.')\n\nprint('Testcase 24 passed.')\n\nprint('Testcase 25 passed.')\n\nprint('Testcase 26 passed.')\n\nprint('Testcase 27 passed.')\n\nprint('Testcase 28 passed.')\n\nprint('Testcase 29 passed.')\n\nprint('Testcase 30 passed.')\n\nprint('Testcase 31 passed.')\n\nprint('Testcase 32 passed.')\n\nprint('Testcase 33 passed.')\n\nprint('Testcase 34 passed.')\n\nprint('Testcase 35 passed.')\n\nprint('Testcase 36 passed.')\n\nprint('Testcase 37 passed.')\n\nprint('Testcase 38 passed.')\n\nprint('Testcase 39 passed.')\n\nprint('Testcase 40 passed.')\n\nprint('Testcase 41 passed.')\n\nprint('Testcase 42 passed.')\n\nprint('Testcase 43 passed.')\n\nprint('Testcase 44 passed.')\n\nprint('Testcase 45 passed.')\n\nprint('Testcase 46 passed.')\n\nprint('Testcase 47 passed.')\n\nprint('Testcase 48 passed.')\n\nprint('Testcase 49 passed.')\n\nprint('Testcase 50 passed.')\n\nprint('Testcase 51 passed.')\n\nprint('Testcase 52 passed.')\n\nprint('Testcase 53 passed.')\n\nprint('Testcase 54 passed.')\n\nprint('Testcase 55 passed.')\n\nprint('Testcase 56 passed.')\n\nprint('Testcase 57 passed.')\n\nprint('Testcase 58 passed.')\n\nprint('Testcase 59 passed.')\n\nprint('Testcase 60 passed.')\n\nprint('Testcase 61 passed.')\n\nprint('Testcase 62 passed.')\n\nprint('Testcase 63 passed.')\n\nprint('Testcase 64 passed.')\n\nprint('Testcase 65 passed.')\n\nprint('Testcase 66 passed.')\n\nprint('Testcase 67 passed.')\n\nprint('Testcase 68 passed.')\n\nprint('Testcase 69 passed.')\n\nprint('Testcase 70 passed.')\n\nprint('Testcase 71 passed.')\n\nprint('Testcase 72 passed.')\n\nprint('Testcase 73 passed.')\n\nprint('Testcase 74 passed.')\n\nprint('Testcase 75 passed.')\n\nprint('Testcase 76 passed.')\n\nprint('Testcase 77 passed.')\n\nprint('Testcase 78 passed.')\n\nprint('Testcase 79 passed.')\n\nprint('Testcase 80 passed.')\n\nprint('Testcase 81 passed.')\n\nprint('Testcase 82 passed.')\n\nprint('Testcase 83 passed.')\n\nprint('Testcase 84 passed.')\n\nprint('Testcase 85 passed.')\n\nprint('Testcase 86 passed.')\n\nprint('Testcase 87 passed.')\n\nprint('Testcase 88 passed.')\n\nprint('Testcase 89 passed.')\n\nprint('Testcase 90 passed.')\n\nprint('Testcase 91 passed.')\n\nprint('Testcase 92 passed.')\n\nprint('Testcase 93 passed.')\n\nprint('Testcase 94 passed.')\n\nprint('Testcase 95 passed.')\n\nprint('Testcase 96 passed.')\n\nprint('Testcase 97 passed.')\n\nprint('Testcase 98 passed.')\n\nprint('Testcase 99 passed.')\n\nprint('Testcase 100 passed.')\n\nprint('Testcase 101 passed.')\n\nprint('Testcase 102 passed.')\n\nprint('Testcase 103 passed.')\n\nprint('Testcase 104 passed.')\n\nprint('Testcase 105 passed.')\n\nprint('Testcase 106 passed.')\n\nprint('Testcase 107 passed.')\n\nprint('Testcase 108 passed.')\n\nprint('Testcase 109 passed.')\n\nprint('Testcase 110 passed.')\n\nprint('Testcase 111 passed.')\n\nprint('Testcase 112 passed.')\n\nprint('Testcase 113 passed.')\n\nprint('Testcase 114 passed.')\n\nprint('Testcase 115 passed.')\n\nprint('Testcase 116 passed.')\n\nprint('Testcase 117 passed.')\n\nprint('Testcase 118 passed.')\n\nprint('Testcase 119 passed.')\n\nprint('Testcase 120 passed.')\n\nprint('Testcase 121 passed.')\n\nprint('Testcase 122 passed.')\n\nprint('Testcase 123 passed.')\n\nprint('Testcase 124 passed.')\n\nprint('Testcase 125 passed.')\n\nprint('Testcase 126 passed.')\n\nprint('Testcase 127 passed.')\n\nprint('Testcase 128 passed.')\n\nprint('Testcase 129 passed.')\n\nprint('Testcase 130 passed.')\n\nprint('Testcase 131 passed.')\n\nprint('Testcase 132 passed.')\n\nprint('Testcase 133 passed.')\n\nprint('Testcase 134 passed.')\n\nprint('Testcase 135 passed.')\n\nprint('Testcase 136 passed.')\n\nprint('Testcase 137 passed.')\n\nprint('Testcase 138 passed.')\n\nprint('Testcase 139 passed.')\n\nprint('Testcase 140 passed.')\n\nprint('Testcase 141 passed.')\n\nprint('Testcase 142 passed.')\n\nprint('Testcase 143 passed.')\n\nprint('Testcase 144 passed.')\n\nprint('Testcase 145 passed.')\n\nprint('Testcase 146 passed.')\n\nprint('Testcase 147 passed.')\n\nprint('Testcase 148 passed.')\n\nprint('Testcase 149 passed.')\n\nprint('Testcase 150 passed.')\n\nprint('Testcase 151 passed.')\n\nprint('Testcase 152 passed.')\n\nprint('Testcase 153 passed.')\n\nprint('Testcase 154 passed.')\n\nprint('Testcase 155 passed.')\n\nprint('Testcase 156 passed.')\n\nprint('Testcase 157 passed.')\n\nprint('Testcase 158 passed.')\n\nprint('Testcase 159 passed.')\n\nprint('Testcase 160 passed.')\n\nprint('Testcase 161 passed.')\n\nprint('Testcase 162 passed.')\n\nprint('Testcase 163 passed.')\n\nprint('Testcase 164 passed.')\n\nprint('Testcase 165 passed.')\n\nprint('Testcase 166 passed.')\n\nprint('Testcase 167 passed.')\n\nprint('Testcase 168 passed.')\n\nprint('Testcase 169 passed.')\n\nprint('Testcase 170 passed.')\n\nprint('Testcase 171 passed.')\n\nprint('Testcase 172 passed.')\n\nprint('Testcase 173 passed.')\n\nprint('Testcase 174 passed.')\n\nprint('Testcase 175 passed.')\n\nprint('Testcase 176 passed.')\n\nprint('Testcase 177 passed.')\n\nprint('Testcase 178 passed.')\n\nprint('Testcase 179 passed.')\n\nprint('Testcase 180 passed.')\n\nprint('Testcase 181 passed.')\n\nprint('Testcase 182 passed.')\n\nprint('Testcase 183 passed.')"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nassert solution(\"W\") == \"-\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\""
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"T\") == \"G\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\n\nprint(\"All the tests passed\")\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\nassert solution(\"A\") == \"A\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'A'\nassert solution('b') == 'A'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n'\n    '3 2 2 4 1\\n'\n    '1 2 2 2 1\\n') == '14'\n\nassert solution(\n    '1\\n'\n    '5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n') == '1'\n\nassert solution(\n    '5\\n'\n    '5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n'\n    '5 5 5 5 5\\n') == '1'\n\nassert solution(\n    '100\\n'\n
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3 2 2 4 1') == 14\nassert solution('1\\n3 2 2 4 1\\n1 2 2 2 1') == 16\nassert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == 18\nassert solution('5\\n3 2 2 4 1\\n1 2 2 2 1\\n1 2 2 2 1') == 22\nassert solution('5\\n3 2 2 4 1\\n1 2 2 2 1\\n1 2 2 2 1\\n1 2 2 2 1') == 28\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2 2 4 1\\n1 2 2 2 1\\n\") == \"14\"\nassert solution(\"4\\n3 2 2 4 1\\n1 2 2 2 1\\n2 2 1 2 1\\n2 1 1 1 1\\n\") == \"13\"\nassert solution(\"7\\n15 14 3 2 4 10 6\\n16 15 4 3 2 4 11 6\\n13 14 3 2 4 9 6\\n14 15 4 3 2 4 8 6\\n10 15 4 3 2 4 7 6\") == \"92\"\nassert solution(\"10\\n16 15 4 3 2 4 10 6\\n17 15 4 3 2 4 11 6\\n18 15 4 3 2 4 12 6\\n16 15 4 3 2 4 9 6\\n15 14 3 2 4 8 6\\n14 15 4 3 2 4 7 6\\n12 14 3 2 4 6 6\\n10 15 4 3 2 4 5 6\\n9 15 4 3 2 4 4 6\\n8 15 4 3 2 4 3 6\\n7 15 4 3 2 4 2 6\\n6 15 4 3 2 4 1 6\\n5 15 4 3 2 4 0 6\\n\") == \"134\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"10636963534\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''2\n3 2\n1 1''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n2''') == '2'\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\n'''\n\n'''\n\nimport sys"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 2 2\\n1 2 2 2 1\\n') == '14'\n'''"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 2 4 1\\n1 2 2 2 1\\n') == '14'\n'''\n\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '2'\nassert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14'\nassert solution('8\\n2 1 2 2 2 1 2 1 2\\n1 2 2 2 2 1 2 1 2') == '27'\n\n\"\"\""
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''6\n3 2 2 4 1\n1 2 2 2 1\n3 2 2 2\n1 2 2 1''') == '37'\nassert solution('''10\n1 1 2 2 3 2 3 4 2 4 4 5 2 4 5 5 6 1 1 6 6 7 2 2 7 7 8 3 3 8 9 4 4 9 5 5 6 6 7\n2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3 2 2 4 1\\n1 2 2 2 1') == 14\n\"\"\""
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\n'''\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == 1\nassert solution(\"3 1 2\") == 2\nassert solution(\"3 2 2\") == 2\nassert solution(\"2 3 1\") == 1\nassert solution(\"2 2 1\") == 1\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"1\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"1 0 1\") == \"1\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n2 2 2') == '1'\nassert solution('3 3\\n2 2 2') == '1'\nassert solution('3 3\\n2 2 2') == '1'\nassert solution('3 3\\n2 2 2') == '1'\nassert solution('3 3\\n2 2 2') == '1'\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"3 4 5 2 1 2 4 1 3 4\") == \"2\"\nassert solution(\"10 5 5 10 10 10 10 5 5 10 5 10 5 5 5 10 5\") == \"1\"\nassert solution(\"10 5 5 10 5 5 10 10 5 5 5 10 5 5 5 10 5\") == \"1\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '1'\nassert solution('3 3') == '0'\nassert solution('2 2 2') == '1'\nassert solution('2 2 2 2') == '1'\nassert solution('3 3 3') == '2'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 0 1') == 'Yes'\nassert solution('2 1 2') == 'Yes'\nassert solution('1 0 1') == 'No'\nassert solution('1 1 1') == 'No'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 1 1\\n2 2 2\\n1 1 1') == 'No'\nassert solution('1 0 1\\n2 1 2\\n1 1 1') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"1 2 1\") == \"Yes\"\nassert solution(\"2 2 2\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 1') == 'Yes'\nassert solution('2 1 2') == 'Yes'\nassert solution('1 0 1') == 'No'\nassert solution('1 0 1') == 'Yes'\nassert solution('1 0 1') == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"2 1 2\") == \"No\"\nassert solution(\"1 0 1\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"2 2 2\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 0 1\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"2 0 0\\n1 0 1\\n1 1 1\") == \"No\"\nassert solution(\"1 1 1\\n2 0 0\\n1 1 1\") == \"No\"\nassert solution(\"1 0 1\\n0 0 0\\n1 1 1\") == \"No\"\nassert solution(\"1 1 1\\n1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"2 1 2\") == \"No\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\n\n\"\"\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ARC') == 'ARC'\nassert solution('ABC') == 'ARC'\n\"\"\"\n\nfrom atcoder.contests.abc083 import solution"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nprint('Test success.')\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ARC\") == \"ARC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\nassert solution('ABC') == 'ABC'\nassert solution('ABC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ARC\"\nassert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ARC\") == \"ARC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ARC\") == \"ARC\"\n\n\"\"\""
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABCD') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABCDE') == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\nassert solution('ARC') == 'ARC'\nassert solution('ABC') == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8 2') == '3'"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 5 10') == '2'\nassert solution('4 8 2') == '3'\nassert solution('1 10 100') == '0'\nassert solution('-1 -1 -1') == '-1'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4 2') == '3'\nassert solution('4 8 2') == '3'\nassert solution('4 4 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('7 1 3') == '2'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8 2') == '3'"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 8 2''') == '3'\n'''\nTo test your code, call check_solution() on some inputs, or call process_test() to do the whole 10 problems.\n'''"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 8 2') == '3'\n\"\"\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 3') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 2') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"-5 -10 -25 -1\") == \"2\"\nassert solution(\"15 24 4\") == \"1\"\nassert solution(\"2 4 0\") == \"3\"\nassert solution(\"14 16 2\") == \"3\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"24\") == \"Christmas Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('25') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\"\n\n\"\"\"\nD = int(input())"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == \"\"\nassert solution('4') == 'Christmas'\nassert solution('3') == 'Christmas Eve'\nassert solution('26') == 'Christmas Eve Eve'\nassert solution('26.5') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''25''') == 'Christmas'\nassert solution('''23''') == 'Christmas Eve Eve'\nassert solution('''24''') == 'Christmas Eve'\nassert solution('''25''') == 'Christmas'\nassert solution('''26''') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\nassert solution('25') == 'Christmas'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Christmas\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Christmas'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Christmas Eve Eve Eve\"\nassert solution(\"24\") == \"Christmas Eve Eve Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve Eve\"\nassert solution(\"25\") == \"Christmas\"\nassert solution(\"26\") == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '''Christmas'''\nassert solution('''21''') == '''Christmas Eve'''\nassert solution('''22''') == '''Christmas Eve Eve'''\nassert solution('''25''') == '''Christmas'''\nassert solution('''24''') == '''Christmas Eve Eve'''\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"12\") == \"0\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('8') == '4'\nassert solution('7') == '3'\nassert solution('7') == '3'\nassert solution('9') == '5'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == '4'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == '4'"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1\\n') == None\nassert solution('1234567') == None\nassert solution('123456\\n') == None\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[3]\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a b c d') == 'Yes'\nassert solution('4 7 9 3') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('1 2 3 4 5') == 'No'\nassert solution('1 2 3 4 5 6') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('7 6 5 3') == 'Yes'\nassert solution('7 6 5 2') == 'No'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('1 1 1 0') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution('4 7 9 3') == 'Yes'\nassert solution('10 10 10 1') == 'Yes'\nassert solution('10 10 10 1') == 'No'\nassert solution('10 10 10 1') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 7 9 3''') == 'Yes'\nassert solution('''4 7 9 3''') == 'Yes'\nassert solution('''9 3 7 4''') == 'Yes'\nassert solution('''9 3 7 4''') == 'Yes'\nassert solution('''9 3 7 4''') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 7 9 3''') == 'Yes'\nassert solution('''4 7 9 3''') == 'Yes'\nassert solution('''8 14 5 22''') == 'No'\nassert solution('''8 14 5 22''') == 'No'\nassert solution('''3 5 4 8''') == 'No'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 6') == 'No'\nassert solution('4 7 9 6') == 'Yes'\nassert solution('4 7 9 6') == 'Yes'\nassert solution('4 7 9 6') == 'Yes'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('3 5 8 3') == 'No'\nassert solution('4 5 9 3') == 'Yes'\nassert solution('4 5 8 3') == 'No'\nassert solution('1 2 1 3') == 'Yes'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n'''\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('peter parker') == 'PKR'\nassert solution('tutorials') == 'TUT'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder') == 'ATC'\nassert solution('beginner') == 'BNE'\nassert solution('contest') == 'CNT'\n\n'''\n\n'''\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('pythontest') == ''\nassert solution('atcoder') == 'A'\nassert solution('pythontest') == ''\nassert solution('python') == 'P'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\"\"\"\n\ns1, s2, s3 = stdin.split()\nprint(s1[0] + s2[0] + s3[0], end=\"\")\nprint(s1[1] + s2[1] + s3[1], end=\"\")\nprint(s1[2] + s2[2] + s3[2])\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"a b c\") == \"aBc\"\nassert solution(\"aBc\") == \"ABC\"\nassert solution(\"\") == \"\"\nassert solution(\"atcoder\") == \"A\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('ta coder tst') == 'TAC'\nassert solution('to be or not to be') == 'TBO'\nassert solution('t o be or not to be') == 'TOB'\nassert solution('t o be or not to be') == 'TOB'\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('ab cd ef gh') == 'ACDE'\nassert solution('a ab abc abcd abef abgh abij abcdef abefg abhij abijh abcdij abcdefgh abefghij abefgh') == 'ABCDEFGHI'\nassert solution('a b b c') == 'ABC'"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('50 10 120') == 'No'\nassert solution('100 200 120') == 'No'\nassert solution('50 120 120') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"No\"\n\"\"\"\n\n\"\"\"\n---Best Soltuion---\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('50 100 120') == \"Yes\"\nassert solution('50 100 120') == \"No\"\nassert solution('50 120 10') == \"Yes\"\nassert solution('50 10 1') == \"No\"\nassert solution('50 100 1') == \"No\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\nfrom collections import namedtuple\n\nTakahashi = namedtuple('Takahashi', ['A', 'B', 'C'])"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('50 100 120') == 'Yes'\n\"\"\"\n\nA, B, C = [int(x) for x in input().split()]"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\") == \"Yes\"\nassert solution(\"1 5 3\") == \"No\"\nassert solution(\"5 2 4\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"2 3 1\") == \"Yes\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\nassert solution('50 100 120') == 'Yes'\nassert solution('50 10 20') == 'No'\nassert solution('50 100 50') == 'No'\nassert solution('50 100 110') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('50 100 120') == \"Yes\"\nassert solution('50 100 120') == \"No\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('a') == 'No'\nassert solution('1 1 1') == 'No'\nassert solution('10 15 100') == 'No'\nassert solution('10 15 1') == 'Yes'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4 8\n7 9 8 9\n'''\n) == '5'\n\nassert solution(\n'''\n8 3\n2 7 5 1 6\n'''\n) == '10'\n\nassert solution(\n'''\n16 19\n
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\n\n\"\"\"\n\nN, A = map(int, stdin.split())\n\nfrom collections import Counter"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 8\\n7 9 8 9') == '5'\nassert solution('4 10\\n7 9 8 9') == '7'\nassert solution('4 11\\n7 9 8 9') == '8'\nassert solution('4 12\\n7 9 8 9') == '9'\nassert solution('4 13\\n7 9 8 9') == '9'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 8\n7 9 8 9''') == '5'\nassert solution('''3 2\n1 2 3''') == '1'\nassert solution('''3 1\n1''') == '1'\nassert solution('''1 4\n1''') == '1'\nassert solution('''4 4\n1 2 3 4''') == '3'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == 10\nassert solution('1 2 3 4') == 4\nassert solution('1 2 3') == 1\nassert solution('1 2') == 1\nassert solution('1') == 1\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8\\n7 9 8 9\\n') == '5'\nassert solution('2 1\\n1\\n') == '2'\nassert solution('4 1\\n5\\n') == '1'\nassert solution('4 2\\n1\\n') == '0'\nassert solution('4 3\\n1\\n') == '0'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 8') == '5'\nassert solution('2 2') == '0'\nassert solution('2 4') == '1'\nassert solution('2 4 2 2') == '0'\nassert solution('2 4 2 2 3') == '1'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 8\\n7 9 8 9\\n') == '5'\nassert solution('4 8\\n7 9 8 9\\n') == '5'\nassert solution('4 4\\n7 9 8 9\\n') == '4'\nassert solution('1 3\\n1 3\\n1 3\\n1 3\\n') == '0'\nassert solution('2 2\\n1 3\\n1 3\\n') == '1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('4 1 3 2') == '4 2 1 3'\nassert solution('5 1 3 2 4') == '4 2 1 3'\nassert solution('7 1 3 2 4 5 6 7') == '4 2 1 3'\nassert solution('8 1 3 2 4 5 6 7 8') == '4 2 1 3'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2 3 4''') == '4 2 1 3'\nassert solution('''3\n1 2 3''') == '2 1 3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '9 8 7 6 5 4 3 2 1'\nassert solution('''6\n1 2 3 4 5 6''') == '6 5 4 3 2 1'\nassert solution('''5\n1 2 3 4 5''') == '5 4 3 2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\nassert solution('4\\n3 2 1 4') == '3 2 1 4'\nassert solution('2\\n1') == '1'\nassert solution('5\\n1 2 3 4 5') == '5 4 3 2 1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10 9 8 7 6 5 4 3 2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2 3 4''') == '4 2 1 3'"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 3 4''') == '4 2 1 3'\nassert solution('''4\n1 2 3 4''') == '4 2 1 3'\nassert solution('''4\n4\n4\n4\n4''') == '4 4 4 4'\nassert solution('''4\n5\n5\n5\n5''') == '5 5 5 5'\nassert solution('''4\n1\n1\n1\n1''') == '1 1 1 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('2 1 3 4') == '4 2 1 3'\nassert solution('2 1 3 4 5') == '4 2 1 3 5'\nassert solution('2 1 3 4 5 6') == '4 2 1 3 5 6'\nassert solution('2 1 3 4 5 6 7') == '4 2 1 3 5 6 7'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('1 2 3 4 5') == '4 3 2 1 5'\nassert solution('1 2 3 4 5 6') == '6 3 2 1 4 5'\nassert solution('1 2 3 4 5 6 7') == '7 6 3 2 1 4 5'\nassert solution('1 2 3 4 5 6 7 8') == '8 7 6 3 2 1 4'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '4 2 1 3'\nassert solution('1 2 3') == '3 2 1'\nassert solution('1 2 3 4 5') == '4 3 2 1'\nassert solution('1 2 3 4 5 6 7 8 9') == '8 7 6 5 4 3 2 1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '11 10 15 14 13 12 11 8 7 6 5 4 3 2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2\\n') == 'Yes'\nassert solution('4 3\\n2 1\\n1 1\\n') == 'No'\nassert solution('6 6\\n3 1\\n1 1\\n3 1\\n3 1\\n3 1\\n') == 'No'\nassert solution('10 10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == 'Yes'\nassert solution('5 4\\n4 1\\n4 2\\n3 2\\n2 1\\n1 3\\n') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'Yes'\nassert solution('10 1') == 'Yes'\nassert solution('10 4') == 'No'\nassert solution('9 1') == 'No'\nassert solution('0 1') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('100 3') == 'Yes'\nassert solution('10 4') == 'No'\nassert solution('100 5') == 'Yes'\nassert solution('100 10') == 'No'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''20 15\n
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('3 1') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('10 3') == 'Yes'\nassert solution('10 2') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 3\n4 5 6''') == 'No'\n'''\n\nfrom math import floor\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"1\"\nassert solution(\"abaababa\") == \"6\"\nassert solution(\"abaabab\") == \"4\"\nassert solution(\"abaaba\") == \"3\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '5'\nassert solution('abaababa') == '4'\nassert solution('abaabab') == '3'\nassert solution('abaab') == '2'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 6\nassert solution('abaababa') == 7\nassert solution('abaabab') == 5\nassert solution('abaababaa') == 5\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '0'\nassert solution('abaababa') == '6'\nassert solution('abaabab') == '6'\nassert solution('abaabab') == '6'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abc') == '3'\nassert solution('ababab') == '4'\nassert solution('xyx') == '2'\nassert solution('aaaaa') == '2'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abcabccba') == '4'\nassert solution('abcabc') == '3'\nassert solution('abcabcab') == '3'\nassert solution('abcabcabc') == '3'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ababab') == 'ababab'\nassert solution('xyzxyzxyz') == 'xyzxyz'\nassert solution('aaaab') == 'abaab'\nassert solution('xyzxyz') == 'xyzxyz'\nassert solution('abaab') == 'abaab'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abcabc') == '6'\nassert solution('abcab') == '2'\nassert solution('aaaaa') == '5'\nassert solution('ababab') == '4'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[::2]\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abcabcabc') == '3'\nassert solution('abcdefghijklmnop') == '0'\nassert solution('a' * 100) == '100'\nassert solution('a' * 101) == '99'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abcd') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('bbc') == 'Yes'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('cab') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('bca') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"bca\") == \"No\"\nassert solution(\"bcc\") == \"Yes\"\nassert solution(\"bcc\") == \"Yes\"\nassert solution(\"bcc\") == \"Yes\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abcb') == 'Yes'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bac') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('cac') == 'Yes'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('abac') == 'Yes'\nassert solution('abca') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('bacb') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('bac') == 'Yes'\nassert solution('bacb') == 'No'\n'''\n\nimport sys"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('cab') == 'No'\nassert solution('cba') == 'Yes'\nassert solution('ab') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('bca') == 'Yes'\nassert solution('bbb') == 'No'\nassert solution('bac') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\nassert solution('abc') == 'Yes'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '20'\n\"\"\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3''') == \"646\"\nassert solution('''1\n1000000\n1000000\n''') == \"757402647\"\nassert solution('''2\n1 3\n4 2''') == \"20\"\nassert solution('''10\n81664 74154 28555 16348 2166 24136 3190 85837 29824 20896 30834 69993 61829 38270 67464 44977 38779 42953 20809 96593 58461 40965\n98381 97386 97703 30863 57864 54385 78125 59473 57367 56065 63497 48179 48707 54364 22567 18253 48911 84361 58364 54910\n110569 56918 50863 92591 62639 17758 96853 30562 63798 93302 51186 113413 178189 66547 36839 48047 42113 63419 86099\n131218 130541 60369 20429 142791 143539 82214 48359 39076 39190 40459 19192 37388 29268 86935 52498 57937 91436\n81830 94796 114269 90801 92924 96462 52905 56194 133734 72319 66511 110282 88247 78863 68853 72725 74593 83579\n104337 86983 85904 32641 144228 29058 63778 57079 50995 60314 57742 28662 97501 87292 74929 53903 54085 90970\n29388 129701 95857 58617 48997 71641 66103 39461 47800 30290 45249 28152 89039 80292 39799 67801 66870 59979\n99499 131154 25888 54385 137052 86897 62517 97205 90929 59674 51824 28390 52389 84432 83354 95477 87949 62995\n22672 92899 25286 56795 18016 45147 73095 42103 94989 80941 58899 63777 53854 48997 37514 52900 60300 86501\n78125 59473 25896 55086 96593 62361 96646 94202 87043 75970 94437 61829 94160 39125 49476 81797 17758 96853\n30562 63798 94302 75461 90801 97386 97703 91436 82214 113413 178189 60369 58461 133734 66103 92591 97386\n97703 96853 18253 48911 63419 110282 86983 92924 92899 81664 74154 10656 54385 22855 16348 2166 24136 28555\n99824 18069 85394 69993 57864 131218 130541 72319 17758 39076 39190 50863 133734 40039 82214 74593 69793\n55463 46760 30834 73399 66852 85394 75970 94437 61829 133734 82214 30863 85837 96593 72319 23019 17758 24136\n62995 86099 25286 57079 114269 81830 92924 92924 97861 90801 92924 96462 94553 88247 69312 92899 62639 36753\n78125 60369 95479 98381 97386 97703 142791 65913 49175 113413 17758 129701 58617 58461 63919 51824 94553 57864\n23019 109142 65912 92476 110282 92224 72319 81664 75074 74593 150863 56918 26390 50863 47800 32641 45787 29058\n53903 54385 116241 47701 39190 19192 45680 93302 64379 18253 16348 40459 91436 76379 129701 58617 109142 70681\n81585 33287 142791 21421 76385 29268 93802 10656 65913 46760 24136 65837 90398 99499 25887 130541 65913 46760\n30290 71727 92591 99479 98381 94202 78125 92899 18069 117398 91436 87292 75074 92224 81664 68755 97501 26390\n129701 95857 30562 24136 72319 70377 110282 92224 55086 18016 85904 33287 23019 10656 119398 27152 39190\n19192 33301 93802 129701 95479 98381 95857 142791 143539 74593 132113 56918 94553 57864 59474 22672 86897\n25286 49175 50995 27518 92591 96593 91436 82214 57367 54385 133734 88247 65837 94553 142791 16348 55664\n82214 30863 125701 74593 16348 150863 46760 92224 50863 26390 95479 98381 96593 133734 82214 75074 81664\n57367 74593 65837 110282 99479 94553 17758 133734 27037 44143 81830 90801 93302 133734 133734 65837 3188\n19192 69793 65837 113413 110282 97425 74593 109142 85034 65837 55845 129701 53805 96646 94202 81830 92924\n78125 29268 94553 129701 142791 44143 16348 29058 65837 55845 17908 113413 17758 129701 53805 20429 97386\n94553 106561 17758 26390 65837 109142 74593 49175 115429 10656 30290 16348 74593 27037 82214 30863 65837\n23019 130541 106561 142791 19421 30863 57864 92224 16348 80292 62803 94553 54385 133734 40039 91436 85837\n75074 26390 120361 72319 65837 74593 133734 90039 94553 85837 96593 72319 23019 17758 82214 94553 58461\n89277 74593 54385 94553 129701 30562 109142 81830 142791 74593 151634 49175 129701 64379 18253 129701 58617\n92224 110282 94553 17758 91436 17758 24136 55845 58461 44143 30290 120361 85904 106561 97501 142791 65837\n18016 94553 106561 57367 17758 17758 48999 39076 91436 17758 151634 10656 81830 142791 18016 88247\n92591"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\nassert solution('''1\n1\n2\n3\n4\n5\n''') == '0'\nassert solution('''10\n3 1 5 2 4 6 8 9 7 10\n1 2 3 4 5 6 7 8 9 10\n''') == '4'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '646'\nassert solution(stdin) == '757402647'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"646\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\nprint(solution('''3\n4\n2\n1\n3\n2\n'''))\nprint(solution('''3\n4\n2\n1\n3\n2\n'''))\nprint(solution('''3\n4\n2\n1\n3\n2\n'''))\nprint(solution('''4\n1\n2\n2\n1\n'''))\nprint(solution('''7\n3\n1\n1\n1\n1\n1\n1\n1\n1\n'''))\nprint(solution('''5\n7\n3\n3\n1\n2\n2\n2\n2\n1\n'''))\nprint(solution('''1\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n'''))"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5\n1 8 7 2 4\n9 7 2 9 3\n\"\"\") == \"646\"\n\nassert solution(\n\"\"\"1\n1000000\n1000000\n\"\"\") == \"757402647\"\n\nassert solution(\n\"\"\"2\n1 3\n4 2\n\"\"\") == \"20\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"646\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"20\"\nassert solution(\"9 7 2 9 3\") == \"646\"\nassert solution(\"1000000 7 2 9 3\") == \"757402647\"\nassert solution(\"1000000 9 7 2 9 3\") == \"5\"\nassert solution(\"1000000 9 7 2 9 3\") == \"5\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\"\"\".strip()) == \"7\"\n\nassert solution(\n\"\"\"\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\"\"\".strip()) == \"17\"\n\nassert solution(\n\"\"\"\n5 1 4\n2 5 7 4 6\n5 4\n\"\"\".strip()) == \"17\""
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\"\"\") == \"7\"\nassert solution(\"\"\"9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\"\"\") == \"17\"\nassert solution(\"\"\"5 1 4\n2 5 7 4 6\n5 4\n\"\"\") == \"17\"\n\n\n-----Binary Search-----\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '7'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''1 1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 4 5''') == '7'\nassert solution('''2 5 4 2 6 3 1''') == '7'\nassert solution('''2 1''') == '17'\nassert solution('''6 5''') == '17'\nassert solution('''2 1''') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\"\n\n\n\"\"\""
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n2 3\\n1 2') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n1 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n4 7') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n1 7\\n3 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n1 7\\n3 7') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n3 7\\n') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1'\nassert solution('9\\n1 2\\n1 3\\n2 4\\n2 5\\n2 6\\n3 7\\n3 8\\n3 9\\n') == '2'\nassert solution('9\\n1 2\\n1 3\\n2 4\\n2 5\\n2 6\\n3 7\\n3 8\\n3 9\\n') == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == \"2\"\n\nassert solution(\"\"\"7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == \"0\"\n\nassert solution(\"\"\"7\n1 2\n1 3\n3 4\n3 5\n3 6\n3 7\n\"\"\") == \"1\"\n\nassert solution(\"\"\"7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n1 6\n\"\"\") == \"0\"\n\nassert solution(\"\"\"7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n1 6\n\"\"\") == \"1\"\n\"\"\"\nNote that in the fourth and fifth case, adding the edge (2, 4) would be too expensive, so the answer is $1$ and the vertices can be reached from any other vertex with at most two edges.\n\n\"\"\""
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n1 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '0'\n\n\n-----Time limit-----\n\n1 second(s) for each input file.\n\n-----Memory limit-----\n\n64 megabytes\n\n-----Note 2-----\n\nYou can assume that the input is always correct and the answer will be the shortest distance from the first node to any other node. If there is no solution, return $0$.\n\n\"\"\""
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '2'\nassert solution(\n'''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '0'\nassert solution(\n'''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7''') == '1'\nassert solution(\n'''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n1 6''') == '1'\nassert solution(\n'''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n1 7''') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n1 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n1 7\") == \"1\"\n\n\n\n\"\"\"\n\nn = int(input())\ngraph = []\nfor i in range(n):\n    for j in range(i,n):\n        if i == j:\n            continue\n        graph.append([i,j])"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == ''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\n1\n1 2\n2 3\n3 4\n4 5\n4\n5\n6\n7\n\"\"\""
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''10000000000 7\n2 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''4 4\n1 1\n2 2\n1 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '1\\n1\\n1\\n1'\nassert solution('''2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('3 7') == '4'\nassert solution('4 12') == '5'\nassert solution('7 97') == '100'\nassert solution('1000000000 1000000000') == '101'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n7') == '10'\nassert solution('2\\n1000000000') == '1000000001'\nassert solution('1\\n1000000000') == '1'\nassert solution('7\\n1000000000') == '1999999999'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"7\") == \"\"\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001'\nassert solution('''1 1\n1 1''') == '1'\nassert solution('''2 1\n1 1''') == '1'\nassert solution('''1 2\n2 1''') == '1'\nassert solution('''2 2\n1 1''') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001'\n\nassert solution('''5 6\n3 2\n4 5\n2 5\n7 7\n1000000000 1000000000\n2 1''') == '15\\n10\\n1999999999\\n113\\n1000000001'\n\n'''\n\n\n'''\n"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\n\nassert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '15'\n\nassert solution('''\n4 7\n2 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\n\nassert solution('''\n4 8\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '113'\n\nassert solution('''\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n''') == '1'"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2''') == '''2'''\nassert solution('''10 4''') == '''3'''\nassert solution('''2 3 3 1 1 2 1 2 3 3''') == '''2 1 3'''\nassert solution('''9 1 2 1 2 1 2 1 2 1 1''') == '''1 3 2'''\nassert solution('''20 5 4 2 3 3 3 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 3\\n') == '2\\n1 3 2'\nassert solution('3 4\\n1 2 3 4\\n') == '3\\n1 2 4 3'\nassert solution('4 5\\n1 2 3 4 5\\n') == '3\\n1 2 4 5 3'\nassert solution('8 9\\n1 2 3 4 5 6 7 8 9\\n') == '3\\n1 2 4 5 6 7 8'\nassert solution('10 11\\n1 2 3 4 5 6 7 8 9 10 11\\n') == '3\\n1 2 4 5 6 7 8 9 10'\n\n\n\n---\n\nThe number of elements in a set is defined as the number of elements in a list.\n\nSet:\n\nA set is a collection of elements in which every element appears at most once. \nThe order of elements in a set is undefined.\n\nExample:\n\nIn the set $s$ of numbers\n\n
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\"\n) == \"\"\"\n2\n2 1\n\"\"\"\n\nassert solution(\n\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\"\n) == \"\"\"\n3\n1 3 2 \n\"\"\"\n\nassert solution(\n\"\"\"\n10 4\n2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '2 1'\nassert solution('7 2') == '2'\nassert solution('10 4') == '3 2 1'\nassert solution('9 2') == '3 2 1'\nassert solution('1 2 3 2 1 3 2') == '3 2 1'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2\\n'\nassert solution('6 2\\n1 1 2 2 2 1') == '3\\n2 2 1\\n'\nassert solution('1000000000 2\\n1000000000 3') == '1\\n1000000000 3\\n'\nassert solution('1000000000 3\\n1000000000 3') == '2\\n1000000000 3\\n'\n\"\"\"\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('1 2 3 2 1 3 2') == '2'\nassert solution('2 3 3 1 1 2 1 2 3 3') == '3'\nassert solution('2 3 3 1 1 2 1 2 3 3') == '3'\nassert solution('2 3 3 1 1 2 1 2 3 3') == '3'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n2 3') == '1\\n2 3'\nassert solution('5 4\\n1 3 4 1 3 2\\n3 1') == '2\\n3 1 2'\nassert solution('5 4\\n2 3 4 1 3 2\\n3 1') == '2\\n3 1'\nassert solution('4 3\\n1 2 3 4\\n2 1') == '1\\n2 3'"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '263'\nassert solution('''3''') == '131'\nassert solution('''1 6''') == '163'\nassert solution('''1 7''') == '167'\nassert solution('''1 5''') == '169'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string\n\"\"\"\n\nfrom functools import reduce\nimport sys\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n'''\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3') == '263'\n\"\"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '263'\nassert solution('''3''') == '263'\nassert solution('''1 6''') == '263'\nassert solution('''1 7''') == '263'\nassert solution('''1 5''') == '263'\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\".strip()) == '263'\n\nassert solution(\n\"\"\"\n1\n1\n1\n1\n1\n1\n\"\"\".strip()) == '3'\n\nassert solution(\n\"\"\"\n10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\"\"\".strip()) == '1'\n\nassert solution(\n\"\"\"\n3\n1 3\n2\n1 3\n\"\"\".strip()) == '3'\n\nassert solution(\n\"\"\"\n3\n1 10\n2\n1 10\n\"\"\".strip()) == '10'"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '266'\n\"\"\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n2\\n1\\n1\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\n1\\n3\\n2\\"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''abacaba''') == '3'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''abacaba''') == '''3'''\nassert solution('''abacaba''') == '''3'''\nassert solution('''dfcbbcfeeedbaea''') == '''5'''\nassert solution('''dfcbbcfeeedbaea''') == '''5'''\nassert solution('''aaaaaaaaaa''') == '''26'''\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('codeforces') == 'code'\nassert solution('abcdefghi') == 'abcde'\nassert solution('abc') == 'abc'\nassert solution('ab') == 'ab'\nassert solution('aa') == 'a'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == result\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''abacaba''') == 'a'\nassert solution('''abacaba''') == 'a'\nassert solution('abcde') == 'a'\nassert solution('aa') == 'a'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"codeforces\") == \"cdfeo\"\nassert solution(\"coding\") == \"coding\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"aba\") == \"bab\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n234729653''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n663893234''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n413519501''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n1198181347''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"154873296\") == \"154873396\"\nassert solution(\"386592714\") == \"336592714\"\nassert solution(\"729641835\") == \"729645835\"\nassert solution(\"863725149\") == \"863725145\"\nassert solution(\"975314628\") == \"979314628\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution(\n'''\n49722497\n132999592\n214611376\n786345372\n455701264\n593750373\n834970305\n739851826\n259539293\n154712241\n''') == '49722497\\n132999592\\n214611376\\n786345372\\n455701264\\n593750373\\n834970305\\n739851826\\n259539293'\n\nassert solution(\n'''\n5\n112233445566778899\n412987654321123\n1234567891234\n98765432112345\n65432109876543\n''') == '123569321567894565432109876'\n'''\nassert solution(\n'''\n2\n1\n2\n3\n4\n6\n''') == '1\\n2\\n3\\n4\\n6'\nassert solution(\n'''\n4\n8\n7\n6\n5\n''') == '8\\n7\\n6\\n5'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n567957499\n907135948\n993495280\n532969171\n456081285\n890052515\n862518597\n238313185\n733350030\n398392816\n164476530\n''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n907135948\\n993495280\\n532969171\\n456081285\\n890052515\\n862518597\\n238313185\\n733350030\\n398392816\\n164476530'\n\nassert solution('''614599939\n129685986\n926572372\n555912587\n133039549\n681372340\n938276782\n879370610\n071097168\n084538665\n077674043\n184525362\n097491045\n742387426\n604918662\n486748663\n262327564\n143336660\n''') == '129685986\\n926572372\\n555912587\\n133039549\\n681372340\\n938276782\\n879370610\\n071097168\\n077674043\\n184525362\\n097491045\\n742387426\\n604918662\\n486748663\\n262327564\\n143336660'\n\nassert solution('''614599939\n129685986\n926572372\n555912587\n133039549\n681372340\n938276782\n879370610\n071097168\n084538665\n077674043\n184525362\n097491045\n742387426\n604918662\n486748663\n262327564\n143336660\n723737230\n389516229\n''') == '129685986\\n926572372\\n555912587\\n133039549\\n681372340\\n938276782\\n879370610\\n071097168\\n077674043\\n184525362\\n097491045\\n742387426\\n604918662\\n486748663\\n262327564\\n143336660\\n723737230\\n389516229'\n\nassert solution('''614599939\n129685986\n926572372\n555912587\n133039549\n681372340\n938276782\n879370610\n071097168\n084538665\n077674043\n184525362\n097491045\n742387426\n604918662\n486748663\n262327564\n143336660\n723737230\n389516229\n967296782\n185039477\n''') == '129685986\\n926572372\\n555912587\\n133039549\\n681372340\\n938276782\\n879370610\\n071097168\\n077674043\\n184525362\\n097491045\\n742387426\\n604918662\\n486748663\\n262327564\\n143336660\\n723737230\\n389516229\\n967296782\\n185039477'"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n9 7 4 2\n2 8 1 5\n3 6 5 8\n8 7 6 9\n''') == '''979332468\n76541256\n562632129\n356855273\n'''\nassert solution('''\n3 1 6 4\n6 5 2 4\n4 3 8 2\n8 7 5 3\n''') == '''324560782\n543153703\n21604783\n289296732\n'''\nassert solution('''\n8 2 6 1\n3 9 1 4\n5 4 3 2\n7 1 9 6\n''') == '''925233678\n58393964\n965166329\n265150377\n'''\nassert solution('''\n6 6 6\n6 5 6\n6 7 6\n''') == '''96252336\n58393964\n965166329\n26515037\n'''\nassert solution('''\n7 7 7\n7 5 7\n7 7 7\n''') == '''96252336\n58393964\n965166329\n26515037\n'''\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''8214379\n309479009\n538231000\n915090804\n165326309\n957130079\n971899188\n871116210\n946733142\n360297554\n''') == '135791579\\n823990138\\n997700797\\n974671379\\n360297553\\n360297554\\n957130079\\n946733142\\n971899188\\n871116210'\nassert solution('''78153400\n226560630\n673689932\n206929864\n381689993\n813690044\n513901120\n258083261\n338214949\n357979334\n''') == '258083261\\n338214949\\n357979334\\n513901120\\n813690044\\n381689993\\n673689932\\n813690044\\n513901120\\n381689993\\n673689932'\nassert solution('''83491\n929765365\n985818688\n253783299\n252716791\n197238813\n304090328\n394752775\n269726995\n323350343\n''') == '83491\\n929765365\\n985818688\\n253783299\\n252716791\\n197238813\\n304090328\\n394752775\\n323350343'\nassert solution('''915090804\n929758900\n973139758\n748597906\n448609064\n323798450\n695797329\n890029309\n979208362\n157173293\n''') == '929758900\\n973139758\\n748597906\\n748597906\\n979208362\\n979208362\\n323798450\\n157173293'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n3\\n5\\n3\\n5\\n7\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\"\nassert solution(\"4\\n1\\n1\\n1\\n3\\n5\\n3\\n5\\n7\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\"\nassert solution(\"4\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"\n\"\"\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3 6 8 -1 9 4'\nassert solution('''5 7\n1 1 1 1 1\n2 1\n1 2\n2 3\n3 3\n4 2\n4 1\n4 4\n''') == '2 1 1 1 2 1 2 3 3 4 2'\n\n'''\n\nBeat 95.99%\n'''\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 1 3 5 3 5 7') == '3\\n6\\n8\\n-1\\n9\\n4'\nassert solution('1 1 1 3 5 3 5 7') == '3\\n6\\n8\\n-1\\n9\\n4'\nassert solution('1 1 1 3 5 3 5 7') == '3\\n6\\n8\\n-1\\n9\\n4'\nassert solution('1 1 1 3 5 3 5 7') == '3\\n6\\n8\\n-1\\n9\\n4'\nassert solution('1 1 1 3 5 3 5 7') == '3\\n6\\n8\\n-1\\n9\\n4'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n3\\n5\\n3\\n5\\n7\\n9\\n1\\n5\\n3\\n4\\n7\\n3\\n1\\n8\\n1\\n9\\n') == '3\\n6\\n8\\n-1\\n9\\n4\\n'\nassert solution('2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    input='''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n'''\n) == ''.join(map(str, [3, 6, 8, -1, 9, 4]))\n\nassert solution(\n    input='''2 10\n1 2 1\n2 1 2\n'''\n) == ''.join(map(str, [2, -1]))\n\nassert solution(\n    input='''3 10\n1 2 2\n2 1 2\n2 2 1\n'''\n) == ''.join(map(str, [2, 2, -1]))\n\nassert solution(\n    input='''4 8\n1 3 2 4 3\n1 2 3\n1 3\n2 4\n1 5\n2 6\n2 7\n2 8\n'''\n) == ''.join(map(str, [3, 5, 6, 7, 8, -1]))\n\nassert solution(\n    input='''5 10\n1 2 3 4 5\n1 2 3\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n'''\n) == ''.join(map(str, [3, 5, 6, 7, 8, -1]))"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3') == '3\\n6\\n8\\n'\nassert solution('7\\n3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3') == '3\\n3\\n6\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n'\nassert solution('5\\n1 1 2 3 4\\n1 2\\n3 1\\n2 3\\n3 2\\n4 2\\n3\\n4') == '-1\\n1\\n3\\n-1\\n4\\n'\nassert solution('4\\n3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3') == '3\\n3\\n6\\n'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '6 3 8'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3 1'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9''') == '8'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\n\nassert solution('''4\n1 2 3 4\n2 4 3 1\n3 4 2 1\n4 1 2 1''') == 'NO'\n'''"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('2 3 2 1') == 'YES'\nassert solution('2 3 2 2') == 'NO'\nassert solution('2 3 2 3') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES\\nYES\\nNO\\nNO\\nYES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n7\n7 3 2 8\n50 51 52 53\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n1\n5 2 1 100000000\n50 51 52 53\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES\\nNO\\nNO\\nYES\\nYES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n7\n7 3 2 8\n50 51 52 53\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n1\n5 2 1 100000000\n50 51 52 53\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES\\nYES\\nNO\\nNO\\nYES\\nNO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n7\n7 3 2 8\n50 51 52 53\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n1\n5 2 1 100000000\n50 51 52 53\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES\\nYES\\nNO\\nNO\\nYES\\nNO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n7\n7 3 2 8\n50 51 52 53\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n1\n5 2 1 100000000\n50 51 52 53\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES\\nYES\\nNO\\nNO\\nYES\\nNO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n'''\n    ) == 'YES'\n\nassert solution(\n'''10\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n'''\n    ) == 'NO'\n\nassert solution(\n'''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n'''\n    ) == 'YES'\n\nassert solution(\n'''10\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n'''\n    ) == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES\\nYES\\nNO\\nNO\\nYES\\n'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'NO\\nNO\\nNO\\nNO\\nYES\\n'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n1 1 1 1 1''') == 'YES\\nYES\\nNO\\nNO\\nNO\\n'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n1 1 1 1 1''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n3 2 1 100000000\n10 20 15 14\n1 1 1 1 1''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n2\\n1') == 'NO'\nassert solution('1\\n2\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n2\\n1') == 'NO'\nassert solution('1\\n2\\n2\\n1') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\nassert solution(\"3 2 1 100000000\\n5 2 1 100000000\\n5 2 1 100000000\\n5 2 1 100000000\") == \"YES\"\nassert solution(\"5 2 1 100000000\\n5 2 1 100000000\\n3 2 1 100000000\\n3 2 1 100000000\\n5 2 1 100000000\\n5 2 1 100000000\\n3 2 1 100000000\\n3 2 1 100000000\\n5 2 1 100000000\\n5 2 1 100000000\\n5 2 1 100000000\") == \"YES\"\nassert solution(\"1 2 1 100000000\\n1 2 1 100000000\\n3 2 1 100000000\\n3 2 1 100000000\\n5 2 1 100000000\\n5 2 1 100000000\\n5 2 1 100000000\\n5 2 1 100000000\") == \"NO\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4 4\n1 2 3 4\n'''\n    ) == '3 4 6 5'\n\nassert solution(\n'''\n5 5\n2 1 5 3 5\n'''\n    ) == '9 8 12 6 8'\n\nassert solution(\n'''\n2 10\n1 2 1 1 2 2 2 2 2 2\n'''\n    ) == '3 3'\n\nassert solution(\n'''\n5 10\n2 1 5 3 5\n'''\n    ) == '9 8 12 6 8'\n\nassert solution(\n'''\n3 5\n2 1 3 4 5\n'''\n    ) == '3 3'"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5') == '3 3'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2') == '3 3'\nassert solution('5 6\\n2 1 5 3 5') == '9 8 12 6 8'\nassert solution('3 3\\n1 2 3 1') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3 4 6 5'\n\n\n\"\"\""
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\nassert solution('3 4\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\nassert solution('3 3\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\n\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2 3 4\n\"\"\"\n) == '3 4 6 5'\nassert solution(\n\"\"\"\n5 5\n2 1 5 3 5\n\"\"\"\n) == '9 8 12 6 8'\nassert solution(\n\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\"\n) == '3 3'\nassert solution(\n\"\"\"\n1 1\n1 1\n\"\"\"\n) == '0'\n\n\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"3 4 6 5\"\nassert solution(\"2 1 5 3 5\") == \"3 3\"\nassert solution(\"2 1 1 1 2 2 2 2 2 2\") == \"3 3\"\nassert solution(\"2 10\") == \"3 3\"\nassert solution(\"2 10\") == \"3 3\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 3 4\n\n3 4 6 5\n\n2 1 5 3 5\n\n''') == '3 4 6 5'\n\nassert solution('''5 5\n2 1 5 3 5\n\n2 1 5 3 5\n\n2 1 5 3 5\n\n2 1 5 3 5\n\n''') == '9 8 12 6 8'\n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n\n1 2 1 1 2 2 2 2 2 2\n\n1 2 1 1 2 2 2 2 2 2\n\n1 2 1 1 2 2 2 2 2 2\n\n''') == '3 3'\n\nassert solution('''4 4\n1 2 3 4\n\n1 2 3 4\n\n1 2 3 4\n\n1 2 3 4\n\n''') == '3 3'\n\nassert solution('''5 5\n2 1 5 3 5\n\n2 1 5 3 5\n\n2 1 5 3 5\n\n2 1 5 3 5\n\n2 1 5 3 5\n\n''') == '9 8 12 6 8'"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4\\n4 3 2 1') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n2 1 5 3 5') == '9 8 12 6 8'\n\n\n\"\"\""
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('2 2\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('2 1\\n1 2\\n2 3\\n1 4\\n1 5\\n2 6\\n2 7\\n3 8\\n4 9\\n5 10\\n1 3 4 5 10\\n1 2 3 6\\n2 4 5 7\\n1 2 3 4\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('2 1\\n1 2\\n2 3\\n1 4\\n1 5\\n2 6\\n2 7\\n3 8\\n4 9\\n5 10\\n1 3 4 5 10\\n1 2 3 6\\n2 4 5 7\\n1 2 3 4\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('3 1\\n1 2\\n2 3\\n1 4\\n1 5\\n1 6\\n2 7\\n2 8\\n3 9\\n4 10\\n5 11\\n1 6 7\\n2 8 9\\n2 10 11\\n2 11 3\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('8 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'NO\\nNO\\nNO\\nNO\\nYES\\nYES'\n\nassert solution('8 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES'\n\nassert solution('8 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES'\n\nassert solution('8 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'NO\\nNO\\nNO\\nNO\\nYES\\nYES'"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\n'''\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\n\"\"\"\n\nInput\n\n6 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\nOutput\n\nYES\nYES\nYES\nYES\nNO\nNO\n\n\nInput\n\n5 5\n1 2\n1 3\n1 4\n1 5\n2 4\n2 3\n3 4\n\nOutput\n\nNO\nYES\nYES\nNO\nYES\n\nInput\n\n5 3\n1 2\n1 3\n1 4\n2 4\n2 3\n3 4\n\nOutput\n\nYES\nNO\nNO\nYES\nYES\n\nInput\n\n5 2\n1 2\n1 3\n1 4\n1 5\n2 4\n2 3\n3 4\n\nOutput\n\nNO\nYES\n\nInput\n\n5 3\n1 2\n1 3\n1 4\n1 5\n2 4\n2 3\n3 4\n\nOutput\n\nNO\nYES\n\nInput\n\n6 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nNO\nYES\nYES\nNO\nYES\n\nInput\n\n4 3\n1 2\n1 3\n1 4\n2 4\n2 3\n3 4\n\nOutput\n\nNO\nYES\nNO\nYES\n\nInput\n\n6 2\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nYES\nYES\nYES\nNO\nNO\nNO\n\nInput\n\n4 3\n1 2\n1 3\n1 4\n2 4\n2 3\n3 4\n\nOutput\n\nNO\nYES\nNO\nYES\n\nInput\n\n5 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nYES\nYES\nYES\nYES\nNO\nNO\n\nInput\n\n5 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nYES\nYES\nYES\nNO\nNO\nNO\n\nInput\n\n3 3\n1 2\n1 3\n1 4\n1 5\n2 4\n2 3\n3 4\n\nOutput\n\nNO\nNO\nNO\n\nInput\n\n5 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nNO\nYES\nYES\nNO\nNO\nNO\n\nInput\n\n5 4\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nNO\nNO\nNO\nYES\nYES\nYES\n\nInput\n\n5 4\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nNO\nNO\nNO\nYES\nYES\nYES\n\nInput\n\n5 5\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nNO\nNO\nNO\nNO\nNO\nYES\n\nInput\n\n5 2\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nNO\nYES\nNO\nNO\nNO\nNO\n\nInput\n\n5 2\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4 5\n\nOutput\n\nNO\nYES\nNO\nNO\nNO\nNO\n\nInput\n\n5 2\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 3\n3 4\n3 5\n4"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"YES\"\nassert solution(\"10 2\") == \"YES\"\nassert solution(\"10 3\") == \"NO\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"8 7\") == \"YES\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution(\n'''\n2 1\n1 2\n2 1\n2 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO\\nNO'\n\nassert solution(\n'''\n4 1\n1 2\n1 3\n1 4\n2 3\n3 1\n3 4\n3 1\n3 4\n4 1\n''') == 'NO\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == \"\"\"\nYES\nYES\nYES\nYES\nNO\nNO\n\"\"\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\nassert solution('''10 3\n1 2\n1 3\n1 4\n1 5\n1 6\n2 7\n2 8\n2 9\n3 10\n3 4\n4 5\n5 6\n5 7\n5 9\n5 10\n6 7\n6 8\n7 9\n7 10\n7 11\n8 9\n9 10\n9 11\n10 11\n''') == 'YES\\nYES\\nNO\\n'\n'''\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2 3\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 2\") == \"YES\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4') == 'NO\\nYES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nassert solution('1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nassert solution('1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n'\n\nassert solution('''\\\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n'\n\nassert solution('''\\\n1\n1\n1\n1\n1\n''') == 'NO\\n'"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n'''"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n1') == 'YES\\n'\nassert solution('3\\n1 2 3') == 'YES\\n1 3\\n'\nassert solution('4\\n1 1000 101 1000') == 'YES\\n1 3\\n1 4\\n'\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == 'YES'\nassert solution('3') == 'YES'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('2\\n1') == 'YES'\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"01011110\"\n\n'''\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11011010') == '011110'\nassert solution('1101100') == '11100'\nassert solution('1110110') == '11100'\nassert solution('1111100') == '11100'\nassert solution('1111101') == '11101'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11011010') == '01011110'\nassert solution('1111100') == '0011111'\nassert solution('1111100') == '0011111'\nassert solution('11011010') == '01011110'\nassert solution('11011010') == '01011110'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"01011110\") == \"01011110\"\nassert solution(\"11011010\") == \"0101110\"\nassert solution(\"1101111\") == \"011111\"\nassert solution(\"0011111\") == \"0011111\"\nassert solution(\"1111100\") == \"1111100\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"11011010\") == \"01011110\"\nassert solution(\"1111100\") == \"0011111\"\nassert solution(\"1110111\") == \"01101100\"\nassert solution(\"1110111\") == \"01101100\"\nassert solution(\"1111100\") == \"0011111\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('01011') == '0001101'\nassert solution('1010101') == '10011001'\nassert solution('1111001') == '00001101'\nassert solution('1111001') == '00001101'\nassert solution('01011110') == '01011101'\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100'''\n) == '01011110'\n\nassert solution(\n    '''3\n7 9\n1111100\n7 11\n1111100'''\n) == '0101111'\n\nassert solution(\n    '''3\n5 6\n1 0 0 1\n2 2 0\n2 1 2\n2 1 0\n2 0 2\n2 0 0\n2 2 2\n0 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 0 2\n2 2 1\n2 1 0\n2 0 2\n2 2 1\n0 2 1\n2 1 2\n2 0 1\n2 0 2\n2 2 2\n2 2 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 2 1\n2 1 0\n2 0 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 1\n2 0 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n2 2 2\n2 2 2\n2 2 1\n2 1 0\n2 0 1\n2 0 2\n2 1 2\n2 1 2\n2 1 1\n2 1 0\n2 0 2\n0 0 2\n1 2 2\n2 2 1\n1 1 0\n0 2 0\n2 1 1\n0 2 1\n2 1 0\n2 0 2\n0 2 2\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize = 100)\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_stdout\n\n\"\"\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11011010') == '01111010'\nassert solution('1111100') == '0011100'\nassert solution('1111100') == '0011100'\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4'\nassert solution('13 3\\n1 4\\n1 7\\n1 6\\n1 3\\n2 5\\n3 10\\n4 13\\n5 8\\n7 11\\n8 12\\n9 13\\n10 14\\n11 15\\n12 16\\n13 17\\n14 19\\n15 18\\n16 19\\n') == '1 4 7\\n'\nassert solution('2 2\\n1 2\\n1 1\\n') == '0'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''11 10\n5 4\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4 5\n6 7\n4"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"6 1\") == \"3\"\nassert solution(\"7 1\") == \"4\"\nassert solution(\"7 2\") == \"1\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''7 1\n29 30\n30 30\n29 29\n28 30\n30 30\n29 29\n29 29\n''') == '5'\nassert solution('''7 1\n18 19\n19 19\n18 19\n18 19\n19 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18 19\n18"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''7 3\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10\n5 10"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''7 1\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''8 1\n29 30\n30 30\n29 29\n28 30\n30 30\n29 30\n29 29\n28 30\n30 30\n''') == '5'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''5 1\n3 5\n2 5\n1 5\n0 5\n4 5\n''') == '3'\n\n'''\n        >>> solution('''7 2\n        ... 11 11\n        ... 9 11\n        ... 7 8\n        ... 8 9\n        ... 7 8\n        ... 9 11\n        ... 7 9\n        ... ''')\n        '3'\n        >>> solution('''5 1\n        ... 29 30\n        ... 30 30\n        ... 29 29\n        ... 28 30\n        ... 30 30\n        ... ''')\n        '3'\n        >>> solution('''5 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''5 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n        ... 2 2\n        ... 2 3\n        ... 2 3\n        ... ''')\n        '4'\n        >>> solution('''6 1\n        ... 2 3\n        ... 3 3\n        ... 2 3\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3\\n1 3 5 6'\nassert solution('''4 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 2 3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\nassert solution('''10 2\n13 34\n37 45\n2 3\n2 3\n2 2\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n''') == '5\\n2 3'\nassert solution('''11 2\n22 39\n43 58\n46 62\n46 62\n46 62\n46 62\n46 62\n46 62\n46 62\n46 62\n46 62\n46 62\n46 62\n''') == '6\\n1 2 4'\n"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8') == '3'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4'\nassert solution('6 2\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '5'\nassert solution('8 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''3\n1 3 2\n-3 -2 -1''') == '0'\n\nprint('Test is done')"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''6\n7 2 4 5 1 3\n-2 -1 -1 -2 -3''') == '10'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''3\n2 1 4 3\n2 2 2 3''') == '19'\nassert solution('''1\n2\n-3 0''') == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1\n3 2 2\n2 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"2\n2 1\n-3 0\n\"\"\") == \"0\"\nassert solution(\"\"\"3\n2 1 4 3 5\n2 2 2 3 4\n\"\"\") == \"19\"\nassert solution(\"\"\"4\n2 1 4 3 5\n2 2 2 3 4\n\"\"\") == \"19\"\nassert solution(\"\"\"5\n2 1 4 3 5\n2 2 2 3 4\n\"\"\") == \"25\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n-3') == '0'\nassert solution('2\\n1\\n2\\n2\\n2') == '6'\nassert solution('2\\n3\\n1') == '3'\nassert solution('2\\n2\\n3') == '2'\nassert solution('1\\n2\\n1') == '1'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2\\n2 3') == '3'\nassert solution('3\\n2 1 3\\n1 2 2') == '3'\nassert solution('5\\n2 1 4 3 5\\n2 2 2 3 4') == '19'\nassert solution('2\\n2 1\\n-3 0') == '0'\n\"\"\""
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''2\n2 1\n-3 0\n''') == '0'\nassert solution('''4\n2 1 3 4\n1 2 1 4\n''') == '2'\nassert solution('''2\n3 1\n-1 2\n''') == '2'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\") == \"3\\n\"\nassert solution(\"3\\n2 1 4 3 5\\n2 2 2 3 4\") == \"19\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\\n\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\\n\""
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\n'''\n'''\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\n\"\"\"\nYou are given a weighted tree consisting of $n$ vertices. Recall that a tree is a connected graph without cycles. Vertices $u_i$ and $v_i$ are connected by an edge with weight $w_i$.\n\nYou are given a query, which is an integer $q$ representing a query. In this query you need to calculate the number of pairs of vertices $(u, v)$ ($u < v$) such that the maximum weight of an edge on a simple path between $u$ and $v$ doesn't exceed $q$.\n\nYou can assume that $q$ is always a positive integer.\n\nNote: For a given query, you need to answer $m$ such queries.\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $q$ \u2014 the number of vertices in the tree and the number of queries.\n\nNext $n - 1$ lines describe an edge of the tree. Edge $i$ is denoted by three integers $u_i$, $v_i$ and $w_i$ \u2014 the labels of vertices it connects ($1 \\le u_i, v_i \\le n$, $u_i \\ne v_i$) and the weight of the edge ($1 \\le w_i \\le 2 \\cdot 10^5$). It is guaranteed that the given edges form a tree.\n\nThe last line of the input contains $q$ integers $q_1, q_2, \\dots, q_m$ ($1 \\le q_i \\le 2 \\cdot 10^5$) \u2014 the maximum weight of an edge in the $i$-th query.\n\n\n-----Output-----\n\nPrint $m$ integers \u2014 the answers to the queries. The $i$-th value should be equal to the number of pairs of vertices $(u, v)$ ($u < v$) such that the maximum weight of an edge on a simple path between $u$ and $v$ doesn't exceed $q_i$.\n\nQueries are numbered from $1$ to $m$ in the order of the input.\n\n\n-----Examples-----\nInput\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\nOutput\n21 7 15 21 3 \n\nInput\n1 2\n1 2\n\nOutput\n0 0 \n\nInput\n3 3\n1 2 1\n2 3 2\n1 3 2\n\nOutput\n1 3 3 \n\n\n\n-----Note-----\n\nThe picture shows the tree from the first example: [Image]\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\nTwo points are connected if their weight is less than or equal to the maximum weight of an edge on a simple path between them.\n\nTime - O(n^2)\nSpace - O(n)\n\"\"\"\n\nfrom collections import defaultdict\n\nclass Graph:\n    def __init__(self):\n        self.graph = defaultdict(list)\n\n    def addEdge(self, u, v, w):\n        self.graph[u].append((v, w))\n\n    def find_max_edge_weight(self, start, end, max_edge_weight):\n        self.visited = set()\n        self.max_edge_weight = max_edge_weight\n        self.path = self.findPath(start, end)\n        if self.path:\n            return self.max_edge_weight\n        else:\n            return 0\n\n    def findPath(self, start, end):\n        for v, w in self.graph[start]:\n            if v not in self.visited:\n                self.visited.add(v)\n                if v == end:\n                    return True\n                else:\n                    if self.findPath(v, end):\n                        return True\n        return False\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n') == '21 7 15 21 3'\nassert solution('1 2\\n1 2\\n') == '0 0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3'\nassert solution('2 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3'\nassert solution('7 3\\n1 2 1\\n2 3 2\\n1 3 2\\n1 3 2\\n1 3 2\\n1 3 2\\n') == '21 7 15 21 3'\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == '21 7 15 21 3'\nassert solution(\"1 2\\n1 2\\n\") == '0 0'\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == '1 3 3'\n\n\n\n-----Note-----\n\nThe first line of the input contains two integers $n$ and $m$ \u2014 the number of vertices in the tree and the number of queries.\nThe next line contains $n - 1$ lines describing an edge of the tree.\nEach line describes an edge of the tree. Edge $i$ is denoted by three integers $u_i$, $v_i$ and $w_i$ \u2014 the labels of vertices it connects ($1 \\le u_i, v_i \\le n$, $u_i \\ne v_i$) and the weight of the edge ($1 \\le w_i \\le 2 \\cdot 10^5$). It is guaranteed that the given edges form a tree.\nThe last line of the input contains $m$ integers $q_1, q_2, \\dots, q_m$ \u2014 the maximum weight of an edge in the $i$-th query.\n\"\"\"\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\n'''\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3') == \"NO\"\nassert solution('1\\n2') == \"NO\"\nassert solution('2\\n2') == \"YES\"\nassert solution('2\\n2\\n2') == \"YES\"\nassert solution('3\\n3\\n3') == \"NO\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n2''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n2''') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100\\n100') == 'NO'\nassert solution('100\\n100\\n100\\n100') == 'NO'\nassert solution('100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100') == 'NO'\nassert solution('100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100') == 'NO'\nassert solution('100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is None\nassert solution(\"abc\") is None\nassert solution(\"a\") == \"YES\"\nassert solution(\"aab\") == \"YES\"\nassert solution(\"aabccc\") == \"NO\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''1 2 2''') == 'YES'\nassert solution('''4''') == 'NO'\nassert solution('''5''') == 'NO'\nassert solution('''1 3 4 4''') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"NO\"\n\"\"\"\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100\\n') == \"YES\"\nassert solution('3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n') == \"NO\"\nassert solution('3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\\n') == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 2\") == \"YES\"\nassert solution(\"1 2 2\\n4\\n5 5 5 5\") == \"YES\"\nassert solution(\"1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\") == \"NO\"\nassert solution(\"1 2 2\\n4\\n5 5 5 5\\n3\\n1 3 4 4\") == \"NO\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '0'\nassert solution('101') == '1'\nassert solution('1001') == '11'\nassert solution('1010') == '12'\nassert solution('1001_2') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\nassert solution(\"4 4\\n1010\\n1010\\n\") == \"8\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\nassert solution(\"4 5\\n1010\\n10101\\n\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10001') == 11\nassert solution('10011') == 11\nassert solution('10001101') == 12\nassert solution('100011101') == 12\nassert solution('100011011') == 11\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 4\n1010\n1101\n''') == '12'\n\nassert solution('''4 5\n1001\n10101\n''') == '11'\n\nassert solution('''7 10\n111000000\n1\n''') == '1'\n\nassert solution('''8 10\n11111111\n1\n''') == '1'\n'''\nNote:\n\nThe first test is consistent with the example, but the second is not (numbers can be bigger than 10^5, especially for this problem).\n\nThe last two tests use the same example, but the first one is correct (for the second one, the numbers are smaller).\n\nThis problem can be solved with a single instruction (with the limit on the number of digits of the answer), not using built-in algorithms.\n'''\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\nassert solution(\"4 4\\n1010\\n10101\\n\") == \"12\"\nassert solution(\"5 5\\n10000\\n101011101\\n\") == \"13\"\nassert solution(\"5 5\\n10000\\n11011010101\\n\") == \"14\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1\\n0') == '1'\nassert solution('2 5\\n1001\\n10101') == '11'\nassert solution('1 1\\n1\\n1') == '0'\nassert solution('2 5\\n0\\n1') == '0'\nassert solution('2 4\\n1010\\n1101') == '8'\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\nassert solution('4 5\\n1010\\n1101\\n') == '11'\nassert solution('6 5\\n1111111111111101\\n
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\t\\n\") == \"\"\nassert solution(\"A\") == \"NO\"\nassert solution(\"B\") == \"NO\"\nassert solution(\"A\\n\") == \"NO\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n1\\n1') == 'YES'\nassert solution('1\\n2\\n1\\n1') == 'NO'\nassert solution('1\\n2\\n1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n2\\n1\\n1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == 'NO'\nassert solution('''3''') == 'NO'\nassert solution('''4''') == 'YES'\nassert solution('''5''') == 'YES'\nassert solution('''6''') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'NO'\nassert solution('2 2') == 'YES'\nassert solution('2 2') == 'NO'\nassert solution('4 4') == 'YES'\nassert solution('5 5') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10''') == 'NO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''5\n2\n4\n6\n8\n12''') == 'NO\\nNO\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''5\n2\n4\n8\n12\n16''') == 'NO\\nNO\\n2 4 1 5\\nNO\\nNO\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''5\n8\n16\n32\n40\n48\n''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''5\n8\n16\n32\n40\n48\n''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n2 4 6 8 1 3 5 11\\nNO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('a') == 'NO'\nassert solution('ab') == 'NO'\nassert solution('abc') == 'NO'\nassert solution('abcab') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2') == 'NO'\nassert solution('2\\n2') == 'YES'\nassert solution('6\\n2') == 'YES'\nassert solution('8\\n2') == 'YES'\nassert solution('10\\n2') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n2''') == 'NO'\nassert solution('''4\n2''') == 'YES'\nassert solution('''6\n4''') == 'NO'\nassert solution('''8\n4''') == 'YES'\nassert solution('''10\n4''') == 'NO'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '5\\n1\\n0\\n4\\n0'\n\nassert solution(\n'''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n'''[1:-1]) == '5\\n0\\n0\\n4\\n0'\n\nassert solution(\n'''\n1\n1\n2\n'''[1:-1]) == '0'\n\nassert solution(\n'''\n100\n1 1 2 3\n'''[1:-1]) == '5'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3\n1 1 2''') == '0'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '5'\nassert solution('''4\n4\n1 1 2 3\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '4'\nassert solution('''6\n6\n1 1 2 3 4 5 6\n7\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1''') == '6'\nassert solution('''7\n7\n1 1 2 3 4 5 6 7\n8\n1 1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1''') == '7'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n'''\n    pass"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('1 1 2\\n3\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '0\\n1\\n0\\n4\\n0'\nassert solution('1 1 2\\n3\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('1 1 2\\n3\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('1 1 2\\n3\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n1 1 2\n5''') == '1'\nassert solution('''8\n8 7 6 5 4 3 2 1\n1\n1''') == '0'"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n9\n3 1 4 1 5 9 2 6 5''') == '5'\nassert solution('''3\n3\n1 1 2''') == '1'\nassert solution('''5\n5\n1 1 1 1 1''') == '0'\nassert solution('''8\n8 7 6 5 4 3 2 1''') == '4'\nassert solution('''1\n1\n1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0\\n'\nprint(solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n'''))"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('3\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('3\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('3\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('3\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5\\n1\\n0\\n4\\n0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '5\\n1\\n0\\n4\\n0'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n2\n1 1\n5\n1"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3\\n4\\n2\\n7'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3\\n4\\n2\\n7'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3\\n4\\n2\\n7'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3\\n4\\n2\\n7'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3\\n4\\n2\\n7'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n2\\n3') == '2'\nassert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n\"\"\") == \"4\"\nassert solution(\"\"\"4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n\"\"\") == \"4\"\nassert solution(\"\"\"4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3\\n4\\n2\\n7'\n\nassert solution('''1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3\\n4\\n2\\n7'\nassert solution('''3\n3\n1 3\n2 4\n2 3\n''') == '1\\n2\\n3'\nassert solution('''3\n1 2\n3 4\n5 6\n7 8\n''') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8'\nassert solution('''2\n1 2\n2 2\n''') == '1\\n2'\nassert solution('''1\n1\n2\n2\n''') == '1\\n2'\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3'\n\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '4'\n\nassert solution('''3\n2\n2\n2\n2\n''') == '1'\n\nassert solution('''3\n3\n1 3\n2 4\n2 3\n''') == '2'\n\nassert solution('''4\n3\n1 3\n2 4\n2 3\n''') == '2'"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3'\nassert solution('''5\n5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n4 5\n1 2"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '4'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n''') == '''3\n4\n2\n7\n'''\n\nassert solution('''2\n3\n1 2\n2 3\n1 3\n''') == '''2\n'''\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''23 55''') == '5'\nassert solution('''23 0''') == '60'\nassert solution('''0 1''') == '1439'\nassert solution('''4 20''') == '1180'\nassert solution('''23 59''') == '1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 59\n0 1\n23 59\n0 1\n0 1\n23 59\n0 1''') == '60\\n1\\n1439\\n1180\\n1'\n'''\n'''\n\n'''\nimport sys\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('23 59') == '1'\nassert solution('23 0') == '1439'\nassert solution('0 1') == '1180'\nassert solution('4 20') == '1'\nassert solution('23 59') == '1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n'''\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n5 0''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n5 59''') == '5\\n60\\n1439\\n1180\\n60'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n0 0''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0''') == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('23 55\\n23 0\\n0 1\\n4 20\\n23 59') == '5\\n60\\n1439\\n1180\\n1\\n'"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('23') == '55'\nassert solution('24') == '60'\nassert solution('13') == '12'\nassert solution('2359') == '1180'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(io.StringIO(\"\"\"4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n\"\"\")) == [1, 2]\nassert solution(io.StringIO(\"\"\"4\n3\nRRUD\n3\nLURD\n\"\"\")) == [1, 3]\nassert solution(io.StringIO(\"\"\"4\n3\nLRUD\n4\nLURD\n\"\"\")) == [1, 3]\nassert solution(io.StringIO(\"\"\"4\n3\nRRUD\n4\nLURD\n\"\"\")) == [-1]\nassert solution(io.StringIO(\"\"\"4\n5\nRRUDU\n5\nLLDDR\n\"\"\")) == [3, 4]\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('LL') == (1, 0)\nassert solution('LLDR') == (1, 3)\nassert solution('UD') == (-1, 0)\nassert solution('RL') == (0, 1)\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 2\\n1 4\\n3 4\\n'\nassert solution('''10\n4\nLRRRLLLURRRRUUUUURRRRRRRLLLUUUUUURRRRRRRRRLLLRRRRUUUUUUUUUUUUUUUURRRRRRRRLLLLLLLLUUUUUUUUUUUUUUUURRRRRRRRLLLLLLLLUUUUUUUUUUUUUUUUUUUURRRRRRRRRLLLLLLLLUUUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRLLLLLLLLUUUUUUUUUUUURRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('LLDDR') == (1, 3)\nassert solution('LRUD') == (1, 2)\nassert solution('LURU') == (1, 4)\nassert solution('RUD') == (-1, -1)\nassert solution('ULDR') == (1, 2)\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 4\\n3 4\\n-1'\nassert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 4\\n-1\\n-1'\nassert solution('''6\n1\nRDDDDUDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU''') == '2 4\\n1 1\\n4 4\\n2 2\\n1 1'\nassert solution('''6\n1\nRDDDDUDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU\n6\nRDDUDDU''') == '2 4\\n1 1\\n4 4\\n2 2\\n1 1'\nassert solution('''8\n1\n
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n'''"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(expected_output)\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"LURDRLRULRUDLULRUUDULRDRUDUDRLRRDDRLDRDLUURRUURULUDDRDRDLUURUULDLRUDDRLRUDUULULULURRRRUDRUDUDRDRLDDLRUULDRULRUDDRLUUDUDULRRRRDLLDRDLLDLUUDDLLRURUUDLLLDRRURDLDRUDDLUDUULDRURUURUDDRLRURDRDUDDUDUDUDUUURULRRUDLULUDDLURDDRURUULDUDUDULDRUDLDRDUDURUUDUDDLURURDDUDRUDUULURDRRULRDLDLDRULDRULUDDRRURDUDDULDRUUDULDRURUULDUDUDRDRUDRRDRULRRDDRURDRULDRDUURUDUDULDRURDUDRUDUDRURDULUDUDURULDRULRRUDDRRUDULUDURDLDDLUULURRRUURDDUDDUDUDUDDLDRUDDRUDRUDUDURUDUDUDUDUUDDLURULRDRRULDDRDDRUDRULRDRDRLDRDLUULDLUDRDRRUDDRULURDDRDRUDRDUDRRULURRRRRDDRDRULDRRRDDDRDDRRUDUDUDUULULDUDDLULDDLRUUDDUDDRULURDUDUDUDULUUDUUDUDULDLRUDDRULDRUDDLUURDULUDRDUDUDDRDRLRUURDDRRUDLURDRDLDRULDDRDLDRRURDUDUDDULUDUDUDLRULDRDDRDUDUURURDLDRRDRUUDLDRDRDLUUDDURDLRRRULDDUDDRUDUDDRULURURUDRDRURUDLRRULUDRLDRRUDRULDRLDURDULDRDDRULDRDULDRULDDUDULUDUDRULUDDURUDULDULDRUUDDRULDDRUDDRULDUDULDRRDLRURDLUDUDUDRRURDRRUDLRUUDLDRRDRRDRDDRUDRUDRDRULDRRRUDDRDUDUDDRULUDRLUDUDDRULURDDRLRUDLUDURDUDULUUDURUDUDRUDRRUDLULDRUULDRDURDLUURDUULDRDLURDULDDDLUDRRDRRUDULRUDURUDDRLRURDRDUDRULUDLRURDRDULRUDLRUDDUDDUDRULDURDRULDLULULDDRDUDUDRULUDURDRDUDULDRULDURDUDRULDDRUDRDUDRUDRULUDURDDDRULDDRULDRDUDRULDRULRDLDDLUDRLDRUDLDULUDRDLURUUDUDLDLRULDURULDRLDRDUDDURUDDRDRUDLULDDRDURDLURDLUDRUULDLDLRUDULUULDULDRUDRLDRULUDUDDLULUDLDRLUDLDUDRLDDLUULDRDLULULDDRUDULULUDRULUDLDLDRDRULDLDRRUDUDLDDUDRUDRDRULDRDRDDRURDLULDUDDRDLULUDDRULDRDUDUDDDRUDRULUDLDRDDRULULRURDDRUDURURULUULDLDRUDDURDUDDULUDLDLDRRLULULURDUDURUDURUDDLUUDULDLRUDULURDDRULRULDUDUDRULDLUDRLDRDUDDUDRULULULDRUDUDULDRUDLDRRURULDUDDRDLUDDLDULUDUDDRURULULULULULUDDLULURDDLDRUULRULDDRDULULRDRDRULUDUUDULDDRULRULDLULDRDLURUDURUUDDURDLULULUDULDLRDLRUDRLDRULDURULDLULDDULDRRDRULDRDDLDDLULDRDULULUDDRDUDULRUDULDUDRLDDDLULUDLRDRULDRDLULRDULURULDLDDLUDUDDLULDDRULDDDDRULDULUDDRURDRULDUDULDRRDLULULDRDUDRULDRRUDULULUDULRDLDUDUDURDLUDURDLULUDRULRULDRULRDUDUDULDRULDDULULRDRLULURDLUDDRDUUDULDRDLUDRDDRUULUDRDDRULULUDUDRULDULDLRULUULUDLURURDLRDUDUDULDRULULDUDRULDLURULUDRUDLDLRUURDUDDRUDLRUDUDULDRULDRUUDULDLRULDUDUDUDULDULULUUDULULDRULDLUULUUDDULULRULUDUDULURDLDRLDRUDLULDDRULRULUDRLDRULUDULDLRD"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('LURD') == [1, 4]\nassert solution('LLDDR') == [-1]\nassert solution('R') == [1]\nassert solution('U') == [1]\nassert solution('RDD') == [1, 2]\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n__author__ = '__L1n__w@tch'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6\\n9\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\") == \"3\"\nassert solution(\"4\\n6\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"5\\n6\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\") == \"1\"\nassert solution(\"5\\n6\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\") == \"0\"\nassert solution(\"5\\n6\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\") == \"2\"\n\n-----\n\nWe can try to solve this problem using a dynamic programming approach. We can consider the nth student to be part of a team of size x or not. We can use the data from the n-1th student to compute the size of the nth team. We will store the answer for the previous student n-1 in the data structure. We can use the data stored in the data structure to store the current student n in a team of size x.\n\nTime complexity: O(n2)\nSpace complexity: O(n2)\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '3'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '1'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '0'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '2'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '3'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '1'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '0'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '2'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1') == '0'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 2 4') == '3'\nassert solution('1 1 4') == '3'\nassert solution('4 2 4 1 4 3 4') == '3'\nassert solution('2 1 5 4 3') == '1'\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys\n\nDEBUG = False\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1''') == '3'\nassert solution('''4\n5\n2 1 5 4 3\n1\n1''') == '1'\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n5\n1 1 1 3''') == '2'\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n5\n1 1 1 3\n4\n1 1 1 3\n2\n1 1 1 3\n3\n1 1 1 3\n4\n1 1 1 3\n5\n1 1 1 3\n6\n1 1 1 3\n7\n1 1 1 3\n8\n1 1 1 3\n9\n1 1 1 3\n10\n1 1 1 3\n11\n1 1 1 3\n12\n1 1 1 3\n13\n1 1 1 3\n14\n1 1 1 3\n15\n1 1 1 3\n16\n1 1 1 3\n17\n1 1 1 3\n18\n1 1 1 3\n19\n1 1 1 3\n20\n1 1 1 3\n21\n1 1 1 3\n22\n1 1 1 3\n23\n1 1 1 3\n24\n1 1 1 3\n25\n1 1 1 3\n26\n1 1 1 3\n27\n1 1 1 3\n28\n1 1 1 3\n29\n1 1 1 3\n30\n1 1 1 3\n31\n1 1 1 3\n32\n1 1 1 3\n33\n1 1 1 3\n34\n1 1 1 3\n35\n1 1 1 3\n36\n1 1 1 3\n37\n1 1 1 3\n38\n1 1 1 3\n39\n1 1 1 3\n40\n1 1 1 3\n41\n1 1 1 3\n42\n1 1 1 3\n43\n1 1 1 3\n44\n1 1 1 3\n45\n1 1 1 3\n46\n1 1 1 3\n47\n1 1 1 3\n48\n1 1 1 3\n49\n1 1 1 3\n50\n1 1 1 3\n51\n1 1 1 3\n52\n1 1 1 3\n53\n1 1 1 3\n54\n1 1 1 3\n55\n1 1 1 3\n56\n1 1 1 3\n57\n1 1 1 3\n58\n1 1 1 3\n59\n1 1 1 3\n60\n1 1 1 3\n61\n1 1 1 3\n62\n1 1 1 3\n63\n1 1 1 3\n64\n1 1 1 3\n65\n1 1 1 3\n66\n1 1 1 3\n67\n1 1 1 3\n68\n1 1 1 3\n69\n1 1 1 3\n70\n1 1 1 3\n71\n1 1 1 3\n72\n1 1 1 3\n73\n1 1 1 3\n74\n1 1 1 3\n75\n1 1 1 3\n76\n1 1 1 3\n77\n1 1 1 3\n78\n1 1 1 3\n79\n1 1 1 3\n80\n1 1 1 3\n81\n1 1 1 3\n82\n1 1 1 3\n83\n1 1 1 3\n84\n1 1 1 3\n85\n1 1 1 3\n86\n1 1 1 3\n87\n1 1 1 3\n88\n1 1 1 3\n89\n1 1 1 3\n90\n1 1 1 3\n91\n1 1 1 3\n92\n1 1 1 3\n93\n1 1 1 3\n94\n1 1 1 3\n95\n1 1 1 3\n96\n1 1 1 3\n97\n1 1 1 3\n98\n1 1 1 3\n99\n1 1 1 3\n100\n1 1 1 3\n101\n1 1 1 3\n102\n1 1 1 3\n103\n1 1 1 3\n104\n1 1 1 3\n105\n1 1 1 3\n106\n1 1 1 3\n107\n1 1 1 3\n108\n1 1 1 3\n109\n1 1 1 3\n110\n1 1 1 3\n111\n1 1 1 3\n112\n1 1 1 3\n113\n1 1 1 3\n114\n1 1 1 3\n115\n1 1 1 3\n116\n1 1 1 3\n117\n1 1 1 3\n118\n1 1 1 3\n119\n1 1 1 3\n120\n1 1 1 3\n121\n1 1 1 3\n122\n1 1 1 3\n123\n1 1 1 3\n124\n1 1 1 3\n125\n1 1 1 3\n126\n1 1 1 3\n127\n1 1 1 3\n128\n1 1 1 3\n129\n1 1 1 3\n130\n1 1 1 3\n131\n1 1 1 3\n132\n1 1 1 3\n133\n1 1 1 3\n134\n1 1 1 3\n135\n1 1 1 3\n136\n1 1 1 3\n137\n1 1 1 3\n138\n1 1 1 3\n139\n1 1 1 3\n140\n1 1 1 3\n141\n1 1 1 3\n142\n1 1 1 3\n143\n1 1 1 3\n144\n1 1 1 3\n145\n1 1 1 3\n146\n1 1 1 3\n147\n1 1 1 3\n148\n1 1 1 3\n149\n1 1 1 3\n150\n1 1 1 3\n151\n1 1 1 3\n152\n1 1 1 3\n153\n1 1 1 3\n154\n1 1 1 3\n155\n1 1 1 3\n156\n1 1 1 3\n157\n1 1 1 3\n158\n1 1 1 3\n159\n1 1 1 3\n160\n1 1 1 3"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"121\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1337\") == \"0\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('8\\n1\\n2\\n1 3\\n2 4\\n1 4\\n2 5\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '0'\nassert solution('1\\n1337\\n') == '0'\nassert solution('9\\n4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('8') == 0\nassert solution('1 2') == 0\nassert solution('1 2 3') == 0\nassert solution('1 2 4') == 0\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n9 4 1 7 10 1 6 5') == '121'\nassert solution('1\\n1337') == '0'\nassert solution('3\\n9 4 1 7 10 1 6 5') == '18'\n\"\"\"\n\nfrom sys import stdin\nfrom math import factorial"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\n\nassert solution('''1\n1337\n''') == '0'\nassert solution('''1\n7\n''') == '0'\nassert solution('''1\n1\n''') == '0'\nassert solution('''1\n1\n''') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5') == '121'\nassert solution('1\\n1337') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == '121'\nassert solution(\"1\\n1337\\n\") == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\n'''\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n1517\\n') == '0'\nassert solution('1\\n1697\\n') == '0'\nassert solution('1\\n3727\\n') == '0'\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\n\nassert solution(\n'''\n2\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n') == '6\\n18\\n0\\n227\\n8'\nassert solution('4\\n2 2 1 1\\n10 2\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n1 2 3 4 5 6 7 8\\n') == '0\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 4\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25') == '6\\n18\\n0\\n227\\n8'\n\nassert solution('2 3\\n1 2\\n1 1\\n1 1\\n1 1') == '0\\n2'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\"\"\"\n) == \"\"\"\n6\n18\n0\n227\n8\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n2 3\n1 2\n10\n8 7\n1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\"\"\"\n) == \"\"\"\n6\n18\n0\n227\n8\n\"\"\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '6'\nassert solution('2\\n5 4\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '12'\nassert solution('3\\n5 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '6'\nassert solution('4\\n5 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '8'\nassert solution('5\\n5 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n1\\n1\\n2\\n3\") == \"3\"\nassert solution(\"1\\n1\\n2\\n3\") == \"3\"\nassert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"2\\n3\\n4\\n5\\n6\\n7\") == \"7\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\n\n\n-----Best Speed & Memory & Time\nRuntime: 14 seconds\nMemory: 17 MB\nTime: 11 ms\n\n\"\"\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '0\\n'\nassert solution('1\\n2\\n') == '1\\n'\nassert solution('1\\n2\\n') == '2\\n'\nassert solution('1\\n3\\n') == '3\\n'\nassert solution('2\\n1\\n') == '0\\n'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('[1,2,3]\\n[1,1]') == '1'\nassert solution('[1,2]\\n[1,2,3]') == '2'\nassert solution('[1,2,3]\\n[1,1]') == '1'\nassert solution('[1,2]\\n[1,2,3]') == '2'\nassert solution('[1,2,3]\\n[1,1]') == '1'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1,2,3') == '1'\nassert solution('1,2') == '2'\nassert solution('1,2,3,4') == '2'\nassert solution('1,2,3,4,5') == '3'\nassert solution('1,2,3,4,5,6') == '4'"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 1\") == \"1\"\nassert solution(\"2\\n1 3\\n2\\n3\") == \"2\"\nassert solution(\"4\\n2 3 1\\n3 2\\n3 1\\n2 1\\n1\") == \"3\"\nassert solution(\"3\\n1 2\\n2 3\\n3\\n1\") == \"2\"\nassert solution(\"3\\n1 2\\n2 3\\n3\\n1\\n2\\n3\") == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1,2,3') == '1'\nassert solution('1,2,3,4,5') == '2'\nassert solution('1,2,3,4,5,6') == '2'\nassert solution('1,2,3,4,5,6,7') == '4'\nassert solution('1,2,3,4,5,6,7,8') == '4'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"5\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"5\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"5\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"2 3 4 5\") == \"2\"\nassert solution(\"1 2 1 3 2 4\") == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3\n1 1''') == \"2\"\nassert solution('''1 2 3\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"2\"\nassert solution('''1 2 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''1 2 3''') == '2'\nassert solution('''1 1 1''') == '2'\nassert solution('''1 1 1 2''') == '2'\n"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == \"1\"\nassert solution('3 2') == \"2\"\nassert solution('1 2') == \"1\"\nassert solution('2 1') == \"1\"\nassert solution('2 1 2') == \"1\"\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == []\nassert solution('0') == [[]]\nassert solution('1') == [[1]]\nassert solution('2') == [[1], [1, 1]]\nassert solution('3') == [[1], [1, 1], [1, 2, 1]]"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([1, 2, 3, 4]) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\nassert solution([4, 5, 6, 7]) == [[1], [1, 4], [1, 5, 4], [1, 5, 10, 5, 1]]\nassert solution([8, 9, 10, 11]) == [[1], [1, 8], [1, 9, 8, 1], [1, 10, 10, 5, 6, 9, 8, 9, 1]]\nassert solution([12, 13, 14, 15]) == [[1], [1, 12], [1, 13, 12, 1], [1, 14, 14, 10, 10, 15, 14, 13, 12, 11, 10, 5, 6, 15, 14, 13, 12, 11, 10, 5, 6, 15, 15, 15], [1, 15, 15, 15, 15, 15, 10, 10, 10, 10, 10, 15, 15, 15, 15, 15, 15, 15, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    stdin='3') == [1,3,3,1]\n\nassert solution(\n    stdin='30') == [1,3,3,1,2,4,6,4,3,1]\n\nassert solution(\n    stdin='6') == [1,3,3,1,2,4,6,4,3,1,0,0]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('12') == '1'\nassert solution('123') == '1'\nassert solution('1234') == '1'\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == [1]\nassert solution('2') == [1,1]\nassert solution('3') == [1,2,1]\nassert solution('4') == [1,3,3,1]\nassert solution('5') == [1,4,6,4,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == [1]\nassert solution(\"2\") == [1,1]\nassert solution(\"3\") == [1,3,3,1]\nassert solution(\"4\") == [1,4,6,4,1]\nassert solution(\"5\") == [1,5,10,10,5,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('01100') == [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n''') == '''[1,3,3,1]\n'''\nassert solution('''1\n''') == '''[1]\n'''\nassert solution('''0\n''') == '''[]\n'''\nassert solution('''4\n''') == '''[1,4,6,4,1]\n'''"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3) == [1,3,3,1]\nassert solution(4) == [1,4,6,4,1]\nassert solution(0) == [1]\nassert solution(1) == [1,1]\nassert solution(2) == [1,2,1]\n"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\n\"\"\"\n\nfrom typing import List\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        res = 0\n        while n > 0:\n            n &= (n - 1)\n            res += 1\n        return res\n        \n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n\"\"\""
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\nassert solution('1' * 32) == 32\nassert solution('0' * 32) == 0\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"0\") == 0\nassert solution(\"1\") == 1\nassert solution(\"10\") == 1\nassert solution(\"11\") == 2\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\nassert solution('0') == 0\nassert solution('1') == 1\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n\n\"\"\""
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(00000000000000000000000000001011) == 3\nassert solution(00000000000000000000000010000000) == 1\nassert solution(11111111111111111111111111111101) == 31\n'''\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        ans, n = 0, abs(n)\n        while n:\n            ans += n & 1\n            n >>= 1\n        return ans\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('10') == 2\nassert solution('11') == 3\n'''"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(111) == 1\nassert solution(11111111111111111111111111111101) == 31\nassert solution(11111111111111111111111111111101) == 31\nassert solution(11111111111111111111111111111101) == 31\nassert solution(111) == 1\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\".join(input())) == \"\".join(map(str, list(int(input())+1)))\nassert solution(\"\".join(input())) == \"\".join(map(str, list(int(input())+1)))\nassert solution(\"\".join(input())) == \"\".join(map(str, list(int(input())+1)))\nassert solution(\"\".join(input())) == \"\".join(map(str, list(int(input())+1)))\nassert solution(\"\".join(input())) == \"\".join(map(str, list(int(input())+1)))\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([5,2,6,7,9,3,9,1,1,3]) == [5,2,6,7,9,3,9,2,2,4]\nassert solution([0]) == [1]\nassert solution([0,0]) == [1,0]\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution([\"1\",\"2\",\"3\"]) == \"1,2,4\"\nassert solution([\"4\",\"3\",\"2\",\"1\"]) == \"4,3,2,2\"\nassert solution([\"9\",\"9\",\"9\"]) == \"9,9,0\"\nassert solution([\"0\",\"0\",\"0\",\"0\"]) == \"0,0,0,0\"\nassert solution([\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"]) == \"0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([1]) == [2]\nassert solution([]) == []\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(['1','2','3']) == ['1','2','4']\nassert solution(['9','9']) == ['1','0','0']\nassert solution(['0']) == ['1']\nassert solution(['0','0']) == ['1','0']\nassert solution(['9','9','9']) == ['1','0','0','0']\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"124\"\nassert solution(\"456\") == \"457\"\nassert solution(\"1\") == \"2\"\nassert solution(\"0\") == \"1\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([1]) == [2]\nassert solution([]) == []\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1 2 4'\nassert solution('4 3 2 1') == '4 3 2 2'\nassert solution('1') == '2'\nassert solution('0') == '1'\nassert solution('123456789') == '123456789'\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1234') == '1235'\nassert solution('9876') == '9877'\nassert solution('89') == '90'\nassert solution('99999') == '1000000'\nassert solution('2') == '3'\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"[1,2,3]\") == \"0102\"\nassert solution(\"[4,3,2,1]\") == \"0432\"\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('3 1') == '4'\nassert solution('3 -1') == '2'\nassert solution('3 1') == '4'\nassert solution('4 1') == '0'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == '4'"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 2\") == \"2\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 -1\") == \"11\"\nassert solution(\"10 3\") == \"23\"\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 2') == '3'\nassert solution('2 1') == '3'\nassert solution('0 0') == '0'\nassert solution('-1 -1') == '-2'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-4 -1') == '-4'\nassert solution('-3 -1') == '-1'\nassert solution('2 3') == '5'\nassert solution('2 -3') == '-1'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '4'\nassert solution('3 2') == '1'\nassert solution('3 -2') == '-1'\nassert solution('3 2 5') == '8'\nassert solution('3 4') == '12'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''6 8\n0 0\n-2 1\n3 4\n4 -4\n-1 1\n-3 3\n-4 4\n-4 -4''') == '2'\nassert solution('''9 9\n0 0\n-2 1\n3 4\n4 -4\n-1 1\n-3 3\n-4 4\n-4 -4\n-3 -3\n-1 -1\n''') == '1'\nassert solution('''3 3\n1 1\n0 0\n3 0\n''') == '0'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"0 5\") == \"3\"\nassert solution(\"-2 4\") == \"3\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 -4\") == \"3\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '4'\nassert solution('1 2 3 4 5 6') == '5'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5') == '3'\nassert solution('0 5') == '1'\nassert solution('-2 4') == '2'\nassert solution('3 4') == '1'\nassert solution('4 -4') == '2'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 5') == '3'\nassert solution('-2 4') == '3'\nassert solution('3 4') == '3'\nassert solution('4 -4') == '3'\nassert solution('100 -0.0') == '0'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''4 10\n-3 2\n5 -1\n-3 -3\n1 0\n-1 -3''') == '4'\nassert solution('''4 10\n-3 2\n3 -1\n-3 -3\n1 0\n-1 -3''') == '0'\nassert solution('''1 2\n1 1''') == '1'\nassert solution('''1 1\n-2 2''') == '0'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('0 5\\n1 1\\n2 1\\n3 1\\n4 1') == '0'\nassert solution('0 5\\n-1 1\\n1 1\\n-1 1\\n-1 1') == '3'\nassert solution('1 2\\n1 -2\\n-1 -2') == '2'\nassert solution('1 1\\n1 1\\n1 1') == '2'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(solution(input()))\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(read()) == \"Yes\"\nassert solution(read()) == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(3) == \"No\"\nassert solution(12345) == \"Yes\"\nassert solution(123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890) == \"Yes\"\n\n\"\"\"\n\n\"\"\"\nSOLUTION 1: O(n) runtime, O(1) space\n\n-----Binary search-----\nWe can use binary search to solve the problem.\nThe reason for using binary search is because the maximum Harshad number is less than 10^8\nIf we try to find the maximum Harshad number, we have to loop from 10^8 to 1 (the maximum Harshad number)\nThus we can find the minimum Harshad number by looping from 1 to 10^8.\nIn the worst case, the binary search will run n times, but the runtime is O(n).\n\n-----Function Description-----\n - The input to the function is an integer N.\n - The function should return a string, either \"Yes\" or \"No\".\n\n-----Algorithm-----\n - If N = 1, then return \"No\"\n - If N = 2, then return \"Yes\"\n - If N = 3, then return \"Yes\"\n - If N = 4, then return \"Yes\"\n - If N = 5, then return \"Yes\"\n - If N = 6, then return \"Yes\"\n - If N = 7, then return \"Yes\"\n - If N = 8, then return \"Yes\"\n - If N = 9, then return \"Yes\"\n - If N = 10, then return \"Yes\"\n - Else we loop from 10^8 to 1, find the minimum Harshad number and compare it to N\n - If N < minimum Harshad number, then return \"No\"\n - Else return \"Yes\"\n - If the loop finishes, then N > 10^8 and return \"No\".\n - If the loop finishes, then N < 10^8 and return \"No\".\n - If the loop finishes, then N is the maximum Harshad number, return \"Yes\"\n\n-----Code-----\n\"\"\""
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('1235') == 'Yes'\nassert solution('1256') == 'No'\nassert solution('1257') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('123') == 'Yes'\nassert solution('100') == 'No'\nassert solution('1234') == 'No'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(None) is None\nassert solution('') is None\nassert solution('1') == 'No'\nassert solution('11') == 'Yes'\nassert solution('21') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == \"Yes\"\nassert solution('8') == \"No\"\nassert solution('10') == \"Yes\"\nassert solution('12') == \"Yes\"\nassert solution('16') == \"No\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('100') == 'No'\nassert solution('120') == 'Yes'\nassert solution('11') == 'No'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 1 3 4 3 2 4 1 3 2 1\") == \"12\"\nassert solution(\"1 2 2 1 3 3 4 3 2 4 1 3 2 1\") == \"12\"\nassert solution
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"0 6\"\nassert solution(\"3 5 -1\") == \"12 8 10\"\nassert solution(\"3 5 -1 6\") == \"12 8 10\"\nassert solution(\"5 5 5 5\") == \"0 0 0 0\"\nassert solution(\"5 5 5 5 6\") == \"0 0 0 0\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n3 5 -1\n\"\"\") == \"\"\"\n12\n8\n10\n\"\"\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n3 4 -2') == '12\\n8\\n10\\n10'\nassert solution('6\\n8 -8 -7 -9 -10 2') == '12\\n14\\n14\\n14\\n14\\n14'\nassert solution('4\\n1 -1 -2 -3') == '4\\n4\\n4\\n4'\nassert solution('6\\n3 2 1 4 3 -3') == '6\\n8\\n8\\n8\\n8\\n8'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n3 5 -1\\n') == '12'\nassert solution('1\\n1 1 1 1 1 1\\n') == '1'\nassert solution('1\\n1 1 1 1 1 1\\n') == '1'\nassert solution('1\\n-1 1 1 1 1 1\\n') == '1'\nassert solution('1\\n-1 1 1 1 1 1\\n') == '1'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3\n3 5 -1\n\"\"\") == \"12\\n8\\n10\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"12\\n8\\n10\\n3\\n2\"\n\nassert solution(\n\"\"\"\n4\n1 2 -1 -1\n\"\"\") == \"8\\n6\\n5\\n4\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"12\"\nassert solution(\"3 5 -1\") == \"12\"\nassert solution(\"10 5 -1\") == \"10\"\nassert solution(\"10 11 2\") == \"10\"\nassert solution(\"100 100 100\") == \"0\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 5 -1') == '12'\nassert solution('3\\n3 5 -1\\n3 1 -1') == '12'\nassert solution('3\\n3 5 -1\\n3 1 -1\\n2 1 -1') == '20'\nassert solution('3\\n3 5 -1\\n3 1 -1\\n2 1 -1\\n1 1 -1') == '22'\nassert solution('3\\n3 5 -1\\n3 1 -1\\n2 1 -1\\n1 1 -1\\n0 0 -1') == '24'\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"12\"\nassert solution(\"3 5 -1\") == \"12\"\nassert solution(\"5 4 3 2 1\") == \"12\"\nassert solution(\"5 3 2 1\") == \"12\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\""
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(STDIN_SAMPLE_0) == STDOUT_SAMPLE_0\nassert solution(STDIN_SAMPLE_1) == STDOUT_SAMPLE_1\nassert solution(STDIN_SAMPLE_2) == STDOUT_SAMPLE_2\nassert solution(STDIN_SAMPLE_3) == STDOUT_SAMPLE_3\nassert solution(STDIN_SAMPLE_4) == STDOUT_SAMPLE_4\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBWWB') == '2'\nassert solution('WWWWWW') == '0'\nassert solution('WWWWBBWWWW') == '6'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == 1\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('BBBWW') == 1\nassert solution('BBBB') == 2\nassert solution('BBWW') == 1\nassert solution('WWWW') == 0\nassert solution('BBW') == 1\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBWWB\") == \"2\"\nassert solution(\"WWWWBBWWWWWWWWWWWWWWWW\") == \"10\"\nassert solution(\"WWWWBBWWWWWWWWWWWWWWWW\") == \"2\"\nassert solution(\"WWWWBBWWWWWWWWWWWWWWWWW\") == \"5\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBWWW') == '1'\nassert solution('WWBBWW') == '2'\nassert solution('WWWWWW') == '3'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BBBWW') == 1\nassert solution('WWWWBBWWWWBBW') == 2\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('B') == 0\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBBWWWWWW') == '1'\nassert solution('BBBWWWWWWWW') == '2'\nassert solution('WWBBWWWWWWWWWWWWWWWWWWW') == '2'\nassert solution
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"BBBWW\") == \"1\"\nassert solution(\n
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"No\"\nassert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 10\") == \"No\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 13') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('1 21') == 'Yes'\nassert solution('2 21') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 21\") == \"No\"\nassert solution(\"1 21\") == \"No\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"3 5\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 21\\n') == 'Yes'\nassert solution('1 21\\n') == 'Yes'\nassert solution('1 21\\n') == 'Yes'\nassert solution('1 21\\n') == 'Yes'\nassert solution('1 21\\n') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 10') == 'No'\nassert solution('1 2') == 'No'\nassert solution('10 5') == 'Yes'\nassert solution('7 3') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\nassert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\nassert solution('1 21') == 'Yes'\n"
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 22\") == \"No\"\nassert solution(\"2 22\") == \"No\"\nassert solution(\"2 21\") == \"Yes\"\nassert solution(\"10 5\") == \"No\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8') == '5'\nassert solution('1 2 3 4 5 6 7 8 9') == '4'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '7'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '9'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '11'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 1 4 1 5 9 2') == '4'\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10 10 10') == '10'\nassert solution('100\\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1010 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1010 10    \n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4'\nassert solution('7\\n5 2 1 4 9 2') == '2'\nassert solution('7\\n5 2 1 4 9 2') == '2'\nassert solution('7\\n5 2 1 4 9 2') == '2'\nassert solution('7\\n5 2 1 4 9 2') == '2'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2''') == '4'\n\nassert solution('''7\n3 1 4 1 5 9 2''') == '4'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '5'\n\nassert solution('''10\n2 3 4 5 6 7 8 9 10''') == '5'\n\nassert solution('''10\n10 9 8 7 6 5 4 3 2 1''') == '5'"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"2 1 2 3\") == \"1\"\nassert solution(\"2 1 2 3 4\") == \"1\"\nassert solution(\"2 1 2 3 4 5\") == \"2\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5') == '4'\nassert solution('5\\n1 2 3 4 5') == '4'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('4\\n5 1 2 3') == '0'\nassert solution('5\\n5 1 2 3 4') == '1'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n7\n3 1 4 1 5 9 2\n''') == '4'\n\nassert solution(\n'''\n4\n4 1 4 1\n''') == '3'\n\nassert solution(\n'''\n5\n1 4 1 1 6\n''') == '2'\n\nassert solution(\n'''\n10\n1 1 1 1 1 1 1 1 1 1\n''') == '3'\n\nassert solution(\n'''\n7\n1 1 1 1 1 1 1\n''') == '4'"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 4 1 5 9 2') == '4'\nassert solution
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn = int(input())\na = int(input())"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4\") == \"5\"\nassert solution(\"2\\n1\") == \"9\"\nassert solution(\"2\\n3\") == \"13\"\nassert solution(\"2\\n5\") == \"17\"\nassert solution(\"2\\n7\") == \"25\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n\"\"\""
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == '0'\nassert solution(\"2\\n1\") == '0'\nassert solution(\"2\\n4\") == '4'\nassert solution(\"3\\n0\") == '0'\nassert solution(\"3\\n4\") == '4'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4') == '5'\nassert solution('3\\n4') == '9'\nassert solution('3\\n0') == '0'\nassert solution('3\\n-4') == '0'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4\n''') == '5'\nassert solution('''\n3\n5\n''') == '10'\nassert solution('''\n10\n10\n''') == '0'\nassert solution('''\n10\n25\n''') == '25'\nassert solution('''\n100\n10000\n''') == '10000'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('2\\n5') == '9'\nassert solution('10\\n100') == '1010'\nassert solution('5\\n0') == '0'\nassert solution('5\\n5') == '10'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4') == '5'\nassert solution('3\\n4') == '9'\nassert solution('5\\n10') == '10'\nassert solution('5\\n5') == '0'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('3\\n4') == '5'\nassert solution('2\\n5') == '3'\nassert solution('3\\n1') == '1'\nassert solution('2\\n2') == '0'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 5') == 'NO'\nassert solution('2 5 4') == 'NO'\nassert solution('2 6 5') == 'NO'\nassert solution('2 6 6') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 2 3') == 'YES'\nassert solution('1 3 3') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('2 4 6') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 1') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('0 0 0') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 6') == 'NO'\nprint('Testcases passed')\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 8') == 'NO'\nassert solution('2 4 6') == 'NO'\nassert solution('2 4 8') == 'NO'\nassert solution('2 4 8') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 5') == 'NO'\nassert solution('2 4 5 3') == 'YES'\nassert solution('2 4 5 3 1') == 'NO'\nassert solution('2 4 5 3 1 6') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES'"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 6''') == \"YES\"\nassert solution('''1 2 3''') == \"NO\"\nassert solution('''2 2 3''') == \"NO\"\nassert solution('''2 2 4''') == \"NO\"\nassert solution('''1 3 1''') == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 3 6') == 'NO'\nassert solution('2 3 4') == 'NO'\nassert solution('2 3 4') == 'NO'\nassert solution('2 2 4') == 'NO'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 3 4') == 'NO'\nassert solution('2 4 7') == 'YES'\nassert solution('1 2 3') == 'YES'\nassert solution('1 2 4') == 'NO'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(29) == 'Yes'\nassert solution(9) == 'No'\nassert solution(98) == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(29) == \"Yes\"\nassert solution(39) == \"No\"\nassert solution(40) == \"No\"\nassert solution(9) == \"Yes\"\nprint(solution(9))\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\""
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(29) == \"Yes\"\nassert solution(19) == \"No\"\nassert solution(9) == \"Yes\"\nassert solution(9) == \"No\"\nassert solution(10) == \"Yes\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"9\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(293) == \"Yes\"\nassert solution(293) == \"No\"\n\nprint(solution(293))\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('29') == 'Yes'\nassert solution('11') == 'No'\nassert solution('2') == 'Yes'\nassert solution('11') == 'No'\nassert solution('7') == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'No'\nassert solution('9') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('9s') == 'No'\nassert solution('0') == 'No'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('3 2 3') == '0'\nassert solution('1 1 2') == '1'\nassert solution('3 2 3') == '0'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3 3\\n1 2 4\\n') == '1'\nassert solution('5 2 2\\n1 2 3\\n') == '1'\nassert solution('5 3 1\\n1 2 3\\n') == '1'\nassert solution('10 7 1\\n1 2 3 4 5 6 7 8 9 10\\n') == '9'\nassert solution('5 3 3\\n2 1 4\\n') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"5 3 4\") == \"1\"\nassert solution(\"5 3 4 2\") == \"1\"\nassert solution(\"5 4 3 4\") == \"1\"\nassert solution(\"5 4 3 4 1\") == \"0\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3 3''') == '1'\nassert solution('''5 3 4''') == '1'\nassert solution('''5 3 4\n1 2 4''') == '1'\nassert solution('''10 4 6\n1 2 4''') == '4'\nassert solution('''100 30 29''') == '29'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3 3') == 1\nassert solution('10 1 10') == 1\nassert solution('1 1 10') == 1\nassert solution('9 11 10') == 2\nassert solution('9 8 9') == 1\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n- Explanation:\nFor each M, the cost to reach Square N is the sum of the tolls at every Square N - M.\nThe goal is to reach the Square 0, so the cost to reach it is 0.\n\n- Details\n- Time Complexity: O(MN)\n- Space Complexity: O(1)\n\"\"\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '5 3 3' + '\\n' +\n    '1 2 4' + '\\n' +\n    ''\n) == '1'\n\nassert solution(\n    '5 4 5' + '\\n' +\n    '1 2 4' + '\\n' +\n    '3 4 5' + '\\n' +\n    '3 4 3' + '\\n' +\n    '3 4 1' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\n' +\n    '2 3' + '\\n' +\n    '1 2' + '\\n' +\n    '3 4' + '\\n' +\n    '3 4' + '\\n' +\n    '1 1' + '\\n' +\n    '2 2' + '\\"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('1 2 4 3 1') == '1'\nassert solution('1 2 4 3 2') == '1'\nassert solution('1 2 4 3 3') == '2'\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3 3''') == \"1\"\nassert solution('''1 2 4''') == \"1\"\nassert solution('''1 2 4''') == \"1\"\nassert solution('''5 3 3''') == \"1\"\nassert solution('''4 5 3''') == \"1\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''3 3\n.#.\n###\n.#.\n''') == 'No'\nassert solution('''3 4\n.#.\n###\n.#.\n.#.\n''') == 'Yes'\nassert solution('''10 5\n..*.\n..*.\n*.**\n*.**\n.*..\n.*..\n*.*.\n*.**\n.*..\n.*..\n''') == 'No'\n'''"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == \"Yes\"\nassert solution('''3 3\n.#.\n###\n.#.\n''') == \"Yes\"\nassert solution('''3 3\n.#.\n.#.\n.#.\n''') == \"Yes\"\nassert solution('''3 3\n.#.\n.#.\n.#.\n''') == \"Yes\"\nassert solution('''3 3\n.##\n.#.\n.#.\n''') == \"Yes\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n\n----\n'''"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n.#\\n###\\n.#.\") == \"Yes\"\nassert solution(\"3 3\\n.#.\\n.#.\\n.#.\") == \"Yes\"\nassert solution(\"3 3\\n.#.\\n.#.\\n.#.\") == \"No\"\nassert solution(\"3 3\\n.#.\\n.#.\\n.#.\") == \"Yes\"\nassert solution(\"3 3\\n.##\\n.#.\\n.#.\") == \"No\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6') == 'Yes'\nassert solution('2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == 'Yes'\nassert solution('1 1\\n2 2\\n3 3') == 'No'\nassert solution('1 2\\n2 3\\n3 4') == 'No'\nassert solution('2 3\\n3 4\\n4 5') == 'No'\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n------\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n Note: The program uses a stack data structure to find the valid solution.\n\"\"\"\n\n\nimport sys\n\nfrom typing import List, Tuple"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\n\nassert solution('''1 1\n##\n''') == 'Yes'\n\nassert solution('''4 5\n.#.#\n....\n.#...\n.#...\n''') == 'Yes'\n\nassert solution('''4 5\n.#.#\n....\n...#.\n...#.\n''') == 'No'\n\nassert solution('''3 3\n.#.\n.#.\n.#.\n''') == 'Yes'"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\"\n\n\"\"\"\nH W\ns_{1, 1} s_{1, 2} s_{1, 3}... s_{1, W}\ns_{2, 1} s_{2, 2} s_{2, 3}... s_{2, W}\n  :   :\ns_{H, 1} s_{H, 2} s_{H, 3}... s_{H, W}\n\n\"\"\""
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n10 30 20\n\"\"\".strip()) == \"Yes\"\nassert solution(\n\"\"\"\n10 10 10\n\"\"\".strip()) == \"No\"\n\nprint(\"solution successfully ran\")\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 30 10\") == \"No\"\nassert solution(\"10 10 10\") == \"No\"\nassert solution(\"10 30 10 10\") == \"No\"\nassert solution(\"10 30 10 10 10\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 30 20''') == 'Yes'\nassert solution('''30 30 30''') == 'Yes'\nassert solution('''10 30 30''') == 'No'\nassert solution('''10 30 10''') == 'No'\n'''"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('20 30 10') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 30 20') == 'Yes'\n\"\"\""
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"100 110 120\") == \"No\"\nassert solution(\"10 30 30\") == \"Yes\"\nassert solution(\"40 40 40\") == \"Yes\"\nassert solution(\"10 30 30\") == \"Yes\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('30 10 10') == 'No'\nassert solution('100 100 100') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('10 30 30') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 30') == 'No'\nassert solution('10 10 10') == 'Yes'\n\"\"\""
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 15') == 'No'\nassert solution('10 30 10') == 'Yes'\nassert solution('10 30 30') == 'No'\nassert solution('10 30 30') == 'No'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('5 10 15') == 'No'\nassert solution('5 5 5') == 'Yes'\nassert solution('10 30 0') == 'No'\nassert solution('50 10 0') == 'Yes'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Left\"\nassert solution(\"4 5 6 7\") == \"Balanced\"\nassert solution(\"4 5 3 7\") == \"Right\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8 7 1') == \"Left\"\nassert solution('3 8 7 11') == \"Right\"\nassert solution('3 8 7 1') == \"Left\"\nassert solution('3 8 7 11') == \"Right\"\nassert solution('3 8 7 11') == \"Right\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Left\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 1 1 1') == 'Right'\nassert solution('1 1 1 1') == 'Balanced'\nassert solution('1 1 2 1') == 'Right'\nassert solution('2 2 2 2') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 9 7 1') == 'Balanced'\nassert solution('3 5 7 1') == 'Right'\n\"\"\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 8 7 1''') == 'Left'\nassert solution('''3 8 4 1''') == 'Left'\nassert solution('''3 3 1 1''') == 'Balanced'\nassert solution('''3 1 1 1''') == 'Right'\nassert solution('''2 2 1 1''') == 'Balanced'\n"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"Left\"\nassert solution(\"5 6 7 8\") == \"Left\"\nassert solution(\"1 2 4 3\") == \"Left\"\nassert solution(\"1 2 4 5\") == \"Right\"\nassert solution(\"1 2 4 7\") == \"Right\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\") == \"0\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''\n2\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''\n3\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''\n4\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''\n5\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 1 1 1 1 1 1 1 1 1 1\") == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\"\n\"\"\""
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"test\").read()) == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1') == '8'\nassert solution('3\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\nassert solution('2\\n1 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\nassert solution('10\\n1 1 0 1 0 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2 -2 -2 -2 -2 -2 -2 -2 -2\\n') == '8'\nassert solution('10\\n1 1 0 1 0 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2 -2 -2 -2 -2 -2 -2 -2 -2\\n') == '8'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0 1 0 0 1 1 0 0 0 1 1\\n1 0 0 0 1 0 0 1 0 0\\n0 1 0 0 1 0 0 1 0 0\") == \"18\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0 1 0 0 1 0 0 1 0 1 1\\n1 0 0 0 1 0 0 1 0 0\\n0 1 0 0 1 0 0 1 0 0\") == \"9\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0 1 0 0 1 0 0 1 0 1 1\\n1 0 0 0 1 0 0 1 0 0\\n0 1 0 0 1 0 0 1 0 0\") == \"9\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0 1 0 0 1 0 0 1 0 1 1\\n1 0 0 0 1 0 0 1 0 0\\n0 1 0 0 1 0 0 1 0 0\") == \"9\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('1\\n1 1 0 1 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1 1 -1 1 -1 1 -1 1 1 1 1 1 1 1 1 1 1 1') == '0'\n\"\"\""
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"269-6650\") == \"Yes\"\nassert solution(\"0-5\") == \"No\"\nassert solution(\"2-4\") == \"No\"\nassert solution(\"2-\") == \"No\"\nassert solution(\"\") == \"No\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'No'\nassert solution('0 1 2') == 'Yes'\nassert solution('-1 -1') == 'Yes'\nassert solution('0-0') == 'Yes'\nassert solution('0-0-0-0-0') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('12 4') == 'No'\nassert solution('23 15') == 'Yes'\nassert solution('23 45') == 'No'\nassert solution('23 17') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('269-6650') == 'Yes'\nassert solution('a-b') == 'No'\nassert solution('ab+') == 'No'\nassert solution('aba-b') == 'Yes'\nassert solution('1-9-') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('269-6650') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('3 4') == 'Yes'\nassert solution('A B') == 'No'\nassert solution('A1 B') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('269-6650') == 'Yes'\nassert solution('A1') == 'No'\nassert solution('A3') == 'No'\nassert solution('A2') == 'No'\nassert solution('A-1') == 'No'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a b\\na-b-c-d-e-f-g-h') == 'Yes'\nassert solution('a b\\na-b-c-d-e-f-g-h') == 'No'\nassert solution('a b\\na-b-c-d-e-f-g-h') == 'Yes'\nassert solution('a b\\na-b-c-d-e-f-g-h') == 'No'\nassert solution('a b\\na-b-c-d-e-f-g-h') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"A1\") == \"Yes\"\nassert solution(\"A23\") == \"Yes\"\nassert solution(\"A0\") == \"Yes\"\nassert solution(\"A20\") == \"Yes\"\nassert solution(\"A9\") == \"No\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n269-6650''') == 'Yes'\nassert solution('''1 2\nabcdefg''') == 'No'\nassert solution('''8 9\n8809''') == 'No'\nassert solution('''4 2\nab1''') == 'No'\nassert solution('''6 8\nabcdefgh''') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"3 2 6\") == \"1\" # Explanation: The first rectangle is completely above the second one.\nassert solution(\"3 2 1\") == \"3\" # Explanation: The second rectangle is completely above the first one.\nassert solution(\"3 2 1\") == \"3\" # Explanation: The first rectangle is completely above the second one.\nassert solution(\"3 2 1\") == \"3\" # Explanation: The second rectangle is completely above the first one.\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"> \")) == 1\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('7 1 6') == '2'\nassert solution('1 1 1') == '0'\nassert solution('1 2 1') == '1'\nassert solution('1 2 2') == '0'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('5 1 2') == '0'\nassert solution('2 4 6') == '3'\nassert solution('1 1 2') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('5 6 4') == '5'\nassert solution('3 4 6') == '4'\nassert solution('7 6 5') == '7'\nassert solution('2 4 3') == '2'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 2 3') == '3'\nassert solution('3 3 2') == '1'\nassert solution('4 2 3') == '2'\nassert solution('5 2 4') == '3'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"3 2 6\") == \"1\" # comment out the check to run on Codeforces\n\"\"\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == 1\nassert solution(\"1 5 2\") == 0\nassert solution(\"4 6 2\") == 2\nassert solution(\"3 4 6\") == 2\nassert solution(\"1 2 1\") == 0\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 6') == 1\n\"\"\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('4 3 2') == '3'\nassert solution('2 3 1') == '3'\nassert solution('2 3 3') == '3'\nassert solution('1 2 1') == '3'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n\n\"\"\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 8 2''') == '''3\n4\n7\n8'''\n\nassert solution('''10 6 3''') == '''3\n4\n5\n6\n7\n8\n9\n10'''\n\nassert solution('''10 100 100''') == '''3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n'''.strip())\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('1 2 3') == '1'\nassert solution('10 1 10') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9'\nassert solution('1 1 10') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8 2') == \"3\\n4\\n7\\n8\"\nassert solution('8 5 1') == \"3\\n4\\n5\\n6\\n7\\n8\"\nassert solution('2 4 3') == \"3\\n4\\n5\\n6\\n7\\n8\"\nassert solution('7 4 3') == \"3\\n4\\n5\\n6\\n7\\n8\"\nassert solution('1 2 3') == \"3\\n4\\n5\\n6\\n7\\n8\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"1 5 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"1 10 3\") == \"3\\n4\\n7\\n8\"\nassert solution(\"2 8 4\") == \"3\\n4\\n7\\n8\"\nassert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 2 2') == '2'\nassert solution('1 2 3 4') == '3'\nassert solution('10 100 2') == '2'\nassert solution('1 3 2') == '2'\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 100\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"1 100 1000\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"1 1 1000\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"2 1 1000\") == \"2\"\nassert solution(\"1 1 1000\") == \"1 2 3 4 5 6 7 8 9 10\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''3\n4\n7\n8'''"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('beginner contest') == 'ABC'\nassert solution('xAtCoder Beginner Contest') == 'ABC'\nassert solution('1Cd') == 'Cd'\nassert solution('1aBc') == 'Ab'\nassert solution('xAt') == 'A'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'ABC'\n\nprint(solution(stdin))\n\n'''\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('ABC') == 'ABC'\nassert solution('abc') == 'abc'\nassert solution('AtCoder') == 'AC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('Tower01') == 'T1'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('HiHiHi') == 'HHHH'\nassert solution('The') == 'TH'\nassert solution('This') == 'T'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.replace(' ', '')\n\"\"\""
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('ACG2S') == 'ACG2S'\nassert solution('ACG1') == 'ACG1'\nassert solution('A') == 'A'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5 4''') == 'YES'\nassert solution('''3 1 3''') == 'YES'\nassert solution('''5 6 10''') == 'YES'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''1 1 1''') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4 4') == 'YES'\nassert solution('1 1 5') == 'YES'\nassert solution('2 2 4') == 'NO'"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('2 1 1') == 'NO'\nassert solution('1 1 1') == 'NO'\nassert solution('2 2 4') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 7 4') == 'NO'\nassert solution('3 9 4') == 'NO'\nassert solution('1 0 2') == 'YES'\nassert solution('0 0 2') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == 'YES'\nassert solution('1 1 2') == 'NO'\nassert solution('2 2 5') == 'NO'\nassert solution('2 2 4') == 'YES'\nassert solution('2 2 3') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\nfrom sys import setrecursionlimit\nsetrecursionlimit(10000)\n\nstdin = None\nwith open('test.txt') as stdin:\n    stdin = stdin.read()\n\nprint(solution(stdin))"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 4') == \"YES\"\nassert solution('5 2 3') == \"NO\"\nassert solution('1 3 3') == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 3') == 'YES'\nassert solution('3 1 3') == 'YES'\nassert solution('2 1 2') == 'NO'\nassert solution('2 2 1') == 'NO'\nassert solution('1 5 6') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5 4\\n') == 'YES'\nassert solution('10 2 4\\n') == 'NO'\nassert solution('1 0 4\\n') == 'YES'\nassert solution('3 1 2\\n') == 'NO'\nassert solution('3 2 1\\n') == 'YES'\n"
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"2 3 4\") == \"NO\"\nassert solution(\"5 3 4\") == \"YES\"\nassert solution(\"2 4 3\") == \"NO\"\nassert solution(\"6 7 4\") == \"YES\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100 17\") == \"83\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input(\"\")) == output(input(\"\"))\nprint('Test 1 passed')\nassert solution(input(\"1 17\\n\")) == output(input(\"1 17\\n\"))\nprint('Test 2 passed')\n\nassert solution(input(\"1 123\\n\")) == output(input(\"1 123\\n\"))\nprint('Test 3 passed')\n\nassert solution(input(\"1 125\\n\")) == output(input(\"1 125\\n\"))\nprint('Test 4 passed')\n\nassert solution(input(\"1 1200\\n\")) == output(input(\"1 1200\\n\"))\nprint('Test 5 passed')"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100 17') == '83'\nassert solution('50 1') == '50'\nassert solution('100 1') == '50'\nassert solution('100 100') == '50'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 17') == '83'\nassert solution('100 17') == '83'\nassert solution('10 100') == '10'\nassert solution('10 100') == '10'\nassert solution('1 100') == '0'\n\n'''\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '83'"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100 17') == '83'\n\"\"\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''100 17''') == '83'\n'''\nfrom typing import Tuple"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100 17') == '83'"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 17') == '83'\n\"\"\"\n\nfrom sys import stdin\nfrom math import floor, ceil\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '1'\nassert solution('1\\n2') == '4'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789') == '100000000000000000000'\nassert solution
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 -1000000000') == '-1000000000000000000'\nassert solution('10000001 -1000000000') == '-1000000000000000000'\nassert solution('1000000001 1000000000') == '1000000000000000001'\nassert solution('1000000001 -1000000000') == '-1000000000000000001'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '-1'\nassert solution('1000000000 100000000000') == '-1'\nassert solution('1000000000000000 1000000000000000000') == '-1'\nassert solution('100000000000000000000000000000000') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '1000000000 1000000000'\n) == '1000000000000000000'\n\nassert solution(\n    '1000000000 1000000000'\n) == -1\n\nassert solution(\n    '10000000'\n) == -1\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1000000000 * 1000000000) == 1000000000000000000\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"10 1000000000000000000000000000\") == \"1000000000000000000\"\nassert solution(\"10000000000 1000000000000000000000000000\") == \"1000000000000000000\"\nassert solution(\"10000000000 1000000000000000000000000000\") == \"1000000000000000000\"\nassert solution(\"10000000000 1000000000000000000000000000\") == \"1000000000000000000\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000007 1000000000') == '-1'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('0 1000000000') == '0'\nassert solution('1000000000 1000000000') == '1000000000000000000'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'No'\nassert solution('4 1') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('5 1') == 'Yes'\nassert solution('5 2') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2018\\n218') == \"Yes\"\nassert solution('100\\n100') == \"No\"\nassert solution('100000\\n2000000') == \"No\"\nassert solution('10000\\n10000') == \"No\"\nassert solution('10000\\n1000000') == \"No\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('6\\n3') == 'No'\nassert solution('201\\n101') == 'No'\nassert solution('91\\n42') == 'Yes'\nprint(solution(stdin))\n\"\"\"\n\nN = int(input())\nA = int(input())\n\na = (N - 1) // 500\n\nb = (N - 1) // 100\n\nc = (N - 1) // 25\n\nd = (N - 1) // 10\n\ne = (N - 1) // 5\n\nf = (N - 1) // 1"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"2018\\n218\"\n) == \"Yes\\n\"\n\"\"\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2018\n218''') == 'Yes'\nassert solution('''10000\n1000''') == 'No'\nassert solution('''10000\n1000\n4''') == 'Yes'\nassert solution('''1000\n1000000000\n1000000000''') == 'Yes'\nassert solution('''1000\n2\n1000000000''') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1\\n') == 'No'\nassert solution('10\\n20\\n') == 'Yes'\nassert solution('10\\n20\\n') == 'Yes'\nassert solution('10\\n10\\n') == 'Yes'\nassert solution('10\\n10\\n') == 'Yes'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('0') == 'No'\nassert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2018') == 'Yes'\nassert solution('2018') == 'Yes'\nassert solution('10000') == 'No'\nassert solution('100') == 'No'\nassert solution('0') == 'No'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 6') =='safe'\nassert solution('5 3 4') =='safe'\nassert solution('4 3 6') == 'dangerous'\nassert solution('1 1 1') =='safe'\nassert solution('1 1 0') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('4 3 6') =='safe'\nassert solution('4 1 6') =='safe'\nassert solution('4 1 6') =='safe'\nassert solution('4 1 6') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) =='safe'\n'''\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 2') =='safe'\nassert solution('4 3 6') == 'dangerous'\nassert solution('1 0 0') =='safe'\nassert solution('-1 0 0') == 'dangerous'\nassert solution('1 -1 0') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('123 43 45') == 'dangerous'\nassert solution('1 2 3') =='safe'\nassert solution('1 3 2') == 'dangerous'\nassert solution('3 4 2') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3 6''') =='safe'\nassert solution('''3 3 7''') == 'dangerous'\nassert solution('''2 5 7''') == 'dangerous'\nassert solution('''1 2 7''') =='safe'\nassert solution('''2 7 1''') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1 2 3') is None\nassert solution('1 2 4') =='safe'\nassert solution('1 4 2') =='safe'\nassert solution('1 2 3') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"5 3 8\") == \"safe\"\nassert solution(\"4 5 6\") == \"dangerous\"\nassert solution(\"2 3 4\") == \"dangerous\"\nassert solution(\"10 6 2\") == \"dangerous\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '9'\nassert solution('''999''') == '999'\nassert solution('''100''') == '100'\nassert solution('''1000''') == '1000'\nassert solution('''1000000''') == '99999'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('\\t') == ''\nassert solution('\\n') == ''\nassert solution('\\r') == ''\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n        '10') == '9'\nassert solution(\n        '5') == '1'\nassert solution(\n        '20') == '4'\nassert solution(\n        '21') == '9'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10\\n') == \"9\"\nassert solution('6\\n') == \"3\"\nassert solution('9\\n') == \"9\"\nassert solution('10\\n') == \"9\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(123456789) == 123456789\nassert solution(12345) == 9\nassert solution(999) == 999\nassert solution(1) == 1\nassert solution(0) == 0\n\"\"\"\nN = int(input())"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == '9'\nassert solution('15') == '13'\nassert solution('1000') == '999'\nassert solution('9999') == '9999'\nassert solution('100000') == '999999'\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(10) == 9\nassert solution(10) == 9\nassert solution(100) == 99\nassert solution(1000) == 999\nassert solution(10000) == 9999\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10\") == 9\nassert solution(\"1\") == 1\nassert solution(\"15\") == 9\nassert solution(\"25\") == 9\nassert solution(\"50\") == 9\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == \"9\"\nassert solution('100') == \"99\"\nassert solution('1000') == \"999\"\nassert solution('1001') == \"1000\"\nassert solution('5000') == \"9999\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '10'\nassert solution('1 1') == '1'\nassert solution('3 2') == '10'\nassert solution('1 1 3 2') == '4'\nassert solution('1 1 3 2 3 2 3 2 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 1\\n3 2\\n') == '10'\nassert solution('5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '28'\nassert solution('100\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n') == '496'\nassert solution('100\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n') == '1000'\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 1\\n3 2\\n\") == 10\nassert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == 10\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3\n2 3\n1 1\n3 2'''\n) == '10'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1\\n3 2\\n') == '10'\nassert solution('1000000000 1\\n1000000000 1\\n1000000000 1\\n') == '1000000000'\nassert solution('1000 0\\n999 999999999999\\n1000 1\\n') == '1000000000'\nassert solution('1000 0\\n999 999999999999\\n1000 1\\n') == '1000000000'\nassert solution('1000 0\\n999 999999999999\\n1000 1\\n') == '1000000000'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 2') == '4'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''2\n3 4\n1 1\n3 2''') == '4'\nassert solution('''2\n3 4\n1 1\n3 2''') == '4'\nassert solution('''2\n3 4\n1 1\n4 1''') == '2'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 3\n2 3''') == '7'\nassert solution('''10\n9 1\n9 1\n9 1\n9 1\n9 1\n9 1\n9 1\n9 1\n9 1\n9 1''') == '1'\nassert solution('''10\n100 1\n100 1\n100 1\n100 1\n100 1\n100 1\n100 1\n100 1\n100 1\n100 1''') == '1'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == '10'\nassert solution('3\\n1 1\\n3 2') == '10'\nassert solution('3\\n1 1\\n3 2\\n1 1') == '10'\nassert solution('3\\n1 1\\n3 2\\n1 1\\n1 1\\n1 1') == '8'\nassert solution('3\\n1 1\\n3 2\\n1 1\\n1 1\\n1 1\\n1 1') == '10'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"a\") == \"no\"\nassert solution(\"\") == \"yes\"\nassert solution(\"a\") == \"no\"\nassert solution(\"abcde\") == \"yes\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"uvwxyz\") == \"no\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"no\"\nassert solution(\"xyzabcdefghijklmnopqrstuvwxyz\") == \"yes\"\nassert solution(\"xyzabcdefghijklmnopqrstuvwxyz0123456789\") == \"yes\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"yes\""
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightable') == 'no'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'no'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'yes'\nassert solution('ktyfafhvwzqxrtsu') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(solution) == 'no'"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'yes'\nassert solution('abc') == 'no'\nassert solution('aab') == 'yes'\nassert solution('aabb') == 'no'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'yes'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'no'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'no'\nassert solution('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'no'\nassert solution('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') == 'yes'\nassert solution('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890123456789') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'yes'\nassert solution('uncopyrightable') == 'no'\nassert solution('a') == 'yes'\nassert solution('aa') == 'no'\nassert solution('abc') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightable') == 'no'"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('E') == 1\nassert solution('WE') == 1\nassert solution('WEW') == 1\nassert solution('EWEW') == 0\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\nWEEWW''') == '0'\nassert solution('''4\nWEWWE''') == '1'\nassert solution('''5\nEEWWE''') == '1'\nassert solution('''6\nWEWWEW''') == '2'\nassert solution('''7\nWEWWEEW''') == '2'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEWE') == '0'\nassert solution('WEEWWE') == '2'\nassert solution('WEEWWEE') == '1'\nassert solution('WEEWWEEW') == '0'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('W') == '1'\nassert solution('WWEEWEWEWEWE') == '4'\nassert solution
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEW') == '0'\nassert solution('WEEEEW') == '0'\nassert solution('WEEEEWEEEW') == '1'\nassert solution('EEWE') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 1\nassert solution('WEEWW') == 1\nassert solution('WEEWEEEWEE') == 2\nassert solution('WEEWEEWEE') == 3\nassert solution('WEEWEEEWEE') == 4\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEEWW') == '0'\nassert solution('W') == '1'\nassert solution('E') == '1'\nassert solution('EEWWEE') == '0'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\nWEEWW''') == '1'\nassert solution('''2\nEEW''') == '1'\nassert solution('''10\n
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('WEEW') == 0\nassert solution('WEEW') == 0\nassert solution('WEEWWE') == 2\nassert solution('WEEWEW') == 1\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\nWEEWW''') == '1'\nassert solution('''5\nWEEEW''') == '0'\nassert solution('''5\nWEEWW''') == '1'\nassert solution('''5\nWEEWW''') == '1'\nassert solution('''5\nWEEEW''') == '0'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\\n\"\nassert solution(\"5 2\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n1\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n3 4\\n5 6\\n5 4\\n1 2\\n3 4\\n\") == \"2\\n2\\n2\\n1\\n\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2\\n2 3') == '2'\nassert solution('3 4\\n1 2\\n2 3\\n1 4') == '2'\nassert solution('6 4\\n1 2\\n2 3\\n1 4\\n2 5\\n5 6') == '4'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1\\n1 2\\n2 1') == '2'\nassert solution('2 2\\n1 2\\n2 1') == '1'\nassert solution('2 3\\n1 2\\n2 3\\n1 3') == '1'\nassert solution('2 3\\n1 2\\n2 3\\n1 3') == '2'\nassert solution('3 1\\n1 2\\n1 3') == '3'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"2\\n2\\n1\"\n\nprint(solution(\"3 2\"))\n\"\"\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"\n\"\"\"\n\nfrom sys import stdin\nfrom collections import defaultdict"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"1 2\\n1 4\") == \"2\\n1\\n1\"\nassert solution(\"1 2\\n2 1\") == \"2\\n2\\n1\"\nassert solution(\"2 3\\n1 2\\n2 1\") == \"2\\n1\\n1\"\nassert solution(\"2 3\\n2 1\\n1 2\") == \"2\\n1\\n1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\n\"\"\""
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3') == '2\\n1\\n1'\nassert solution('2 3\\n1 2') == '2\\n1\\n1'\nassert solution('2 3\\n2 1') == '2\\n2\\n1'\nassert solution('2 2\\n2 1') == '2\\n1\\n2'\nassert solution('2 3\\n1 2\\n2 3') == '2\\n2\\n2\\n1'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '3\\n5\\n10\\n15\\n'\n) == '25'\n\"\"\""
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n15\\n5') == 30\nassert solution('7\\n10\\n15\\n5') == 25\nassert solution('1\\n5\\n5') == 10\nassert solution('3\\n5\\n10') == 25\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"25\"\nassert solution(stdin) == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"25\"\nassert solution(\"15\") == \"30\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"3\\n2\") == \"2\"\nassert solution(\"3\\n3\") == \"3\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n5\\n10\\n15') == 25\nassert solution('5\\n10\\n15\\n20\\n25') == 30\nassert solution('1\\n1\\n1\\n1\\n1') == 1\nassert solution('2\\n1\\n1\\n1\\n1') == 0\nassert solution('2\\n1\\n1\\n1\\n1') == 0\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('1\\n2\\n') == '0'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '0'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '30'\nassert solution(stdin) == '0'\nassert solution(stdin) == '25'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n5\n10\n15\n\"\"\") == \"25\"\nassert solution(\"\"\"\n3\n15\n10\n5\n\"\"\") == \"30\"\nassert solution(\"\"\"\n3\n5\n10\n15\n\"\"\") == \"25\"\nassert solution(\"\"\"\n3\n15\n10\n5\n\"\"\") == \"30\"\nassert solution(\"\"\"\n3\n10\n10\n15\n\"\"\") == \"25\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n5\\n5\\n5\\n5\\n') == '0'\nassert solution('10\\n10\\n10\\n10\\n10\\n') == '25'\nassert solution('5\\n10\\n15\\n') == '30'\nassert solution('10\\n5\\n10\\n15\\n') == '25'\nassert solution('5\\n5\\n5\\n5\\n5\\n') == '0'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"aabbca\") == 2\nassert solution(\"aaab\") == 1\nassert solution(\"aaac\") == 2\nassert solution(\"aaab\") == 1\nassert solution(\"aabbca\") == 2\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"aabbca\") == \"2\"\nassert solution(\"abbca\") == \"2\"\nassert solution(\"abca\") == \"2\"\nassert solution(\"bb\") == \"2\"\nassert solution(\"abababab\") == \"3\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    6\n    aabbca\n    ''') == '2'\n\nassert solution(\n    '''\n    7\n    aabbca\n    ''') == '2'\n\nassert solution(\n    '''\n    8\n    aabbca\n    ''') == '3'\n\nassert solution(\n    '''\n    6\n    aaabbca\n    ''') == '1'\n\nassert solution(\n    '''\n    7\n    aaabbca\n    ''') == '2'"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabbca') == 2\nassert solution('aaaaaaaaaaaaaaaaaabbbaaaaaaaaaaaaaaaaaaaaaaaaaaabcaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aabbca') == 2\nassert solution('ababcd') == 4\nassert solution('aaaaaa') == 2\nassert solution('bba') == 1\nassert solution('ba') == 1\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabbca') == 2\nassert solution('abcabc') == 0\nassert solution('ababc') == 1\nassert solution('aabc') == 2\nassert solution('ab') == 2\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'a'\nassert solution('ab') == 'a'\nassert solution('abc') == 'a'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('aa') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abcaa') == 'a'\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aabbca') == 2\nassert solution('bbbbb') == 1\nassert solution('abccc') == 0\nassert solution('aab') == 2\nassert solution('aa') == 1\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('SunnySunnySunny') == 'Rainy'\nassert solution('SunnySunnySunnySunny') == 'Rainy'\nassert solution('SunnySunnySunnySunnySunny') == 'Rainy'\nassert solution('SunnySunnySunnySunnySunnySunnySunny') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"\nassert solution(\"Cloudy\") == \"Sunny\"\n\n\"\"\""
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    'Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Cloudy') == 'Cloudy'\nassert solution('Rainy') == 'Rainy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[1:] + stdin[0]\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunshine') == 'Sunshine'\nprint('Passed!')\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('SunnY') == 'CluDy'\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Sunny, Cloudy, Rainy') == 'Rainy'\nassert solution('Sunny, Cloudy, Rainy, Cloudy, Rainy, Sunny') == 'Sunny'\nassert solution('Sunny, Cloudy, Rainy, Sunny, Cloudy, Rainy, Sunny, Cloudy, Rainy, Sunny, Cloudy, Rainy, Sunny') == 'Sunny'\n\n'''"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[0]\n\"\"\"\n\n\"\"\"\n- TLE\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Sunny\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('3 6 7') == '35'\nprint(solution(stdin))\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 17 120') == '119'\n'''"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 60') == '60'\nassert solution('5 10 4') == '10'\nassert solution('5 100 25') == '100'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('1 10 100') == '100'\nassert solution('10 0 0') == '10'\nassert solution('1 10 120') == '119'\nassert solution('1 0 0') == '1'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 17 120') == '119'\n\n\"\"\"\n\nfrom functools import lru_cache\nfrom sys import stdin\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"7 15 120\") == \"119\"\nassert solution(\"5 5 100\") == \"99\"\nassert solution(\"5 19 100\") == \"100\"\nassert solution(\"10 10 20\") == \"20\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin[0]\nassert stdin[1] == stdin[2]\nassert stdin[3] == stdin[4]\nassert stdin[5] == stdin[6]\nprint(solution(stdin))\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('1 5 2') == '2'\nassert solution('4 50 100') == '100'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 17 120''') == '119'\n'''\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"3800\"\nassert solution(\"1 1\") == \"3800\"\nassert solution(\"5 1\") == \"3800\"\nassert solution(\"5 5\") == \"15900\"\nassert solution(\"1 5\") == \"3800\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 100\") == \"3800\"\nassert solution(\"100 100\") == \"3800\"\nassert solution(\"100 500\") == \"7600\"\nassert solution(\"10 1000\") == \"7800\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '3800'\nassert solution('1 1') == '1900'\nassert solution('0 1') == '1900'\nassert solution('2 2') == '3800'\nassert solution('3 1') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '6000'\nassert solution('3 3') == '9000'\nassert solution('4 4') == '12800'\nassert solution('5 5') == '19200'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"10 10\") == \"6100\"\nassert solution(\"2 1\") == \"3800\"\nassert solution(\"5 10\") == \"5800\"\nassert solution(\"10 9\") == \"6500\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 1') == '3800'\nassert solution('3 1') == '3800'\nassert solution('4 1') == '3800'\nassert solution('5 1') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3800'"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '7200'\nassert solution('3 2') == '10800'\nassert solution('10 2') == '7200'\nassert solution('100 2') == '10800'\n\n\"\"\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 1\"\n) == \"3800\"\nassert solution(\n    \"2 5\"\n) == \"12000\"\nassert solution(\n    \"10 4\"\n) == \"9200\"\nassert solution(\n    \"10 30\"\n) == \"36000\"\nassert solution(\n    \"100 30\"\n) == \"10200\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest\") == None\nassert solution(\"atcoderregularcontest\") == None\nassert solution(\"atcoderregularcontest\") == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == None\nassert solution('atcoderregularcontest') == None\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('a') == 'a'\nassert solution('a'*2) == None\nassert solution('a'*100) == None\nassert solution('a'*1000) == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"b\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest\") == \"None\"\nassert solution(\"aabcbc\") == \"c\"\nassert solution(\"aabcbc\") == \"None\"\nassert solution(\"aabc\") == \"b\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'b'\nprint('solution check passed')"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('a') == 'b'\nassert solution('aa') == 'b'\nassert solution('aaaaaa') == 'b'\nassert solution('aaaaa') == 'b'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('atcoderregularcontest') == 'b'\nassert solution('abcdefg') == 'a'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('b') == 'c'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'b'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 4 4 3''') == '4\\n3\\n3\\n4'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 1''') == '1\\n1'\nassert solution('''4\n2 4 4 3''') == '4\\n3\\n3\\n4'\nassert solution('''100000\n1023 1087 1370 1790 1930 3081 3498 4683 5998 5431 6487 6789 7159 7534 7995 8081 8365 9060 9289 9689 975 9998 9998 9999''') == '2599933099\\n1099893799\\n9798878999\\n9899889999'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 4 4 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 4 4 3\") == \"2\"\nassert solution(\"1 2 4 4 3 4\") == \"3\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5') == '4 3 2 1'\nassert solution('1 2 3 4') == '3 2 1 4'\nassert solution('3 4 5 2 1') == '3 2 1 4'\nassert solution('1 4 3 2') == '4 3 2 1'\nassert solution('5 4 3 2 1') == '3 2 1 4'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n2 4 4 3\n\"\"\") == \"4\\n3\\n3\\n4\"\nassert solution(\"\"\"5\n2 4 4 3 5\n\"\"\") == \"4\\n3\\n3\\n4\\n5\"\nassert solution(\"\"\"10\n2 4 4 3 5 6 7 8 9 10\n\"\"\") == \"4\\n3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"\"\"5\n1 2 1 2 2\n\"\"\") == \"1\\n1\\n1\\n1\\n2\"\nassert solution(\"\"\"5\n5 4 2 1 2\n\"\"\") == \"4\\n3\\n2\\n1\\n2\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 4 4 3''') == '4'\nassert solution('''4\n2 4 4 3''') == '3'\nassert solution('''4\n2 4 4 3''') == '3'\nassert solution('''4\n2 4 4 3''') == '4'\nassert solution('''4\n2 4 4 3''') == '3'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 1 3') == '2'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"2 4 4\") == \"4\\n3\\n3\\n4\"\nassert solution(\"2 4\") == \"4\\n3\\n3\\n4\"\nassert solution(\"3 4 4 2\") == \"4\\n3\\n3\\n4\"\nassert solution(\"3 4 4\") == \"4\\n3\\n3\\n4\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2 4 4 3''') == '4'\nassert solution('''3\n2 4 4''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''10\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10''') == '10'\nassert solution('''100\n
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n1 1\\n\") == \"1\\n1\\n\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 1 1 1 1 1') == '6'\nassert solution('1 1 1 1 1 1') == '6'\nassert solution('1 1 1 1 1 1') == '6'\nassert solution('1 1 1 1 1 1') == '6'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3 1 2 4 2 1') == '2'\nassert solution('2\\n5 1 1 1 1') == '0'\nassert solution('2\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '2'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n1 1 1 1 1 1') == '0'\nassert solution('6\\n1 1 1 1 1 1') == '0'\nassert solution('5\\n1 1 1 1 1') == '0'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1 2 4 2 1') == '2'\nassert solution('3 2 1 4 2 1') == '2'\nassert solution('3 1 2 4 2 1') == '2'\nassert solution('3 2 1 4 2 1') == '2'\nassert solution('3 1 2 4 2 1') == '2'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 2 2 1') == 2\nassert solution('1 1 2 2 1') == 2\nassert solution('1 1 2 2 1') == 2\nassert solution('1 1 2 2 1') == 2\nassert solution('1 1 2 2 1') == 2\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6\") == \"2\"\nassert solution(\"1 3 5 9 12\") == \"1\"\nassert solution(\"3 1 2 4 2 1\") == \"2\"\nassert solution(\"1 1 1 1 1 1\") == \"0\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n3 1 2 4 2 1\\n') == '2\\n'\n\"\"\""
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == \"8\"\n'''"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('5\\n17 1\\n11 1\\n4 1\\n9 1') == '9'\nassert solution('2\\n7 3\\n1 2') == '6'\nassert solution('1\\n7 0\\n2\\n4') == '0'\nassert solution('1\\n4 0\\n2\\n1') == '2'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2\\n3 4\\n2 3\\n1 2') == 8\nassert solution('3 2\\n1 2\\n1 1\\n') == 1\nassert solution('7 3\\n1 2\\n2 3\\n2 1\\n1 1\\n1 1\\n') == 8\nassert solution('2 2\\n1 1\\n1 1\\n') == 1\nassert solution('7 3\\n1 2\\n3 1\\n2 1\\n1 1\\n1 1\\n') == 8\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == '8'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''10\n10\n10''') == '0'\nassert solution('''2\n100\n1\n10''') == '1'\nassert solution('''3\n5\n1\n2\n3\n4\n5''') == '6'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == '8'\nassert solution('''3\n3\n2\n1''') == '3'\nassert solution('''3\n6\n10\n1''') == '3'\nassert solution('''2\n4\n1\n10''') == '4'\nassert solution('''2\n4\n10\n1''') == '4'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n7 1\n2\n5\n10\n''') == '8'\n'''\nassert solution('''6\n1 6\n2\n5\n10\n50\n100\n''') == '3'\n\nassert solution('''20\n1 1\n2\n5\n10\n50\n100\n150\n200\n250\n300\n350\n400\n500\n750\n1000\n''') == '58'\n\nassert solution('''5\n1 5\n2\n5\n10\n50\n100\n''') == '11'\n\nassert solution('''12\n1 1\n2\n5\n10\n50\n100\n150\n200\n250\n300\n350\n400\n500\n750\n1000\n''') == '95'"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n1') == '1'\nassert solution('4\\n10\\n6\\n3\\n5\\n2\\n1') == '8'\nassert solution('5\\n20\\n2\\n10\\n10\\n8\\n7\\n5\\n3\\n2\\n1') == '5'\nassert solution('6\\n40\\n20\\n15\\n5\\n10\\n7\\n3\\n2\\n1') == '8'\nassert solution('7\\n50\\n25\\n10\\n5\\n5\\n1\\n5\\n1\\n5') == '5'\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('3\\n3 1\\n2\\n5\\n10') == '1'\nassert solution('3\\n4 1\\n2\\n5\\n10') == '8'\nassert solution('2\\n2 1\\n2\\n2\\n2') == '2'\nassert solution('2\\n2\\n2\\n2\\n2') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"3\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n500\") == \"1\"\nassert solution(\"2\\n2\\n2\\n500\") == \"1\"\nassert solution(\"2\\n2\\n2\\n100\") == \"2\"\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n3\\n') == '0'\nassert solution('2\\n2\\n2\\n20\\n') == '4'\nassert solution('2\\n2\\n2\\n50\\n') == '4'\nassert solution('2\\n2\\n2\\n500\\n') == '1'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n1000\\n') == '0'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('1\\n1\\n1\\n100\\n') == '0'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n10') == '0'\nassert solution('2\\n2\\n2\\n50') == '1'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n1000') == '0'\nassert solution('2\\n2\\n2\\n1000000') == '0'\nassert solution('2\\n2\\n2\\n10000000') == '0'\nassert solution('2\\n2\\n2\\n100000000') == '0'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n40\\n') == '0'\nassert solution('2\\n2\\n2\\n39\\n') == '0'\nassert solution('2\\n2\\n2\\n42\\n') == '0'\nassert solution('2\\n2\\n2\\n48\\n') == '0'\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n2\n2\n100\n''') == '2'\n\nassert solution('''3\n3\n3\n100\n''') == '0'\n\nassert solution('''6\n6\n6\n100\n''') == '0'\n\nassert solution('''2\n3\n2\n100\n''') == '0'\n\nassert solution('''4\n4\n4\n100\n''') == '0'"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('2\\n2\\n2\\n100') == '2'\nassert solution('3\\n3\\n3\\n100') == '3'\nassert solution('10\\n10\\n10\\n100') == '10'\nassert solution('10\\n10\\n10\\n1000') == '50'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"2 3 4\") == \"No\"\nassert solution(\"1 3 3\") == \"No\"\n\nfrom sys import stdin\nprint(solution(stdin.readline().strip()))\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\n\nassert solution(\"2 3 1\") == \"No\"\nassert solution(\"3 2 1\") == \"Yes\"\nassert solution(\"1 5 3\") == \"Yes\"\nassert solution(\"1 4 3\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\") == \"Yes\"\nassert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"-1 -3 2\") == \"No\"\nassert solution(\"1 -3 2\") == \"No\"\nassert solution(\"-1 3 2\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('-1 3 2') == 'No'\nassert solution('1 -3 2') == 'No'\nassert solution('1 3 2') == 'No'\nassert solution('1 -3 -2') == 'No'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"2 3 4\") == \"No\"\nassert solution(\"1 1 2\") == \"Yes\"\nassert solution(\"1 2 2\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('10 4 2') == 'No'\nassert solution('-1 2 3') == 'Yes'\nassert solution('1 -2 3') == 'No'\nassert solution('-1 2 -3') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == \"Yes\"\nassert solution('3 2 1') == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 4 2') == 'No'\nassert solution('1 4 2') == 'No'\nassert solution('2 3 2') == 'No'\nassert solution('2 3 1') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 5 2') == 'No'\nassert solution('3 5 4') == 'No'\nassert solution('-1 -2 -3') == 'Yes'\nassert solution('1 2 3') == 'Yes'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"input\") == \"9\"\n\"\"\""
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 1000\n120\n100\n140\n\"\"\".strip()) == '9'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"10 100\") == \"0\"\nassert solution(\"7 9\") == \"7\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"4\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"4 3\") == \"4\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10') == '1'\nassert solution('3 100') == '1'\nassert solution('3 1000') == '9'\nassert solution('3 1000') == '9'\nassert solution('1 1 1 1') == '0'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3 1000\n120\n100\n140\n''') == '9'\nassert solution('''\n2 7\n6\n1\n''') == '2'\nassert solution('''\n2 3\n1\n1\n''') == '2'\nassert solution('''\n1 1\n1\n1\n''') == '1'\nassert solution('''\n4 7\n1\n1\n1\n1\n''') == '5'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('1\\n2') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1apple\") == \"\"\nassert solution(\"1apple2\") == \"2\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apple\"\nassert solution(\"banana\") == \"banana\"\nassert solution(\"\") == \"\"\nassert solution(\"orange\") == \"orange\"\nassert solution(\"orange\") == \"orange\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('apple') == 2\nassert solution('orange') == 1\nassert solution('apple') == 2\nassert solution('apple') == 2\nassert solution('orange') == 1\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\napple\norange\napple\n''') == \"2\"\nassert solution('''\n2\na\nb\n''') == \"1\"\nassert solution('''\n3\na\nb\nc\n''') == \"3\"\n\nassert solution('''\n3\nb\nb\nb\n''') == \"1\"\n\nassert solution('''\n2\na\na\n''') == \"2\""
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('apple\\norange\\napple\\n') == '2'\nassert solution('apple\\norange\\napple\\n') == '2'\nassert solution('apple\\napple\\n') == '1'\nassert solution('apple\\napple\\norange\\n') == '2'\nassert solution('apple\\napple\\norange\\nbanana\\n') == '3'\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\napple\\napple\\n\") == \"2\"\nassert solution(\"2\\napple\\norange\\n\") == \"2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2100 2500 2700 2700') == '2 2'\n\nimport pytest\nfrom io import StringIO"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '2 1'\nassert solution('2\\n1 1') == '1 1'\nassert solution('5\\n0 400 909 851 2471') == '3 1'\nassert solution('10\\n30 269 331 949 123 131 214 162 255 207 152 103 123 205 197 215 166 144 107 107 199 200 202 60 59 54 49 49 126 138 163 53 33 65 73 30 95 49 138 14 161 64 142 159 141 173 24 104 162 82 145 111 107 113 109 176 171 143 130 121 114 70 102 62 102 89 217 189 180 183 116 105 152 177 26 157 145 103 143 141 163 151 122 165 178 205 44 165 105 81 188 80 84 150 136 70 147 175 40 176 111 170 45 189 166 131 187 226 144 149 164 148 155 17 54 146 147 163 169 54 143 173 168 32 86 70 71 77 91 98 152 109 137 129 181 173 57 49 138 144 108 131 165 167 163 144 163 126 170 58 79 45 115 214 126 143 80 217 173 18 44 167 145 123 143 110 141 190 135 154 108 103 216 114 149 152 85 155 133 177 134 192 96 56 80 138 45 57 94 169 169 71 50 132 122 65 60 130 95 20 73 98 59 116 93 101 90 90 25 50 107 109 124 121 100 91 93 89 77 115 105 97 90 44 58 72 79 67 47 113 34 29 141 34 171 90 85 93 73 72 87 83 122 82 81 88 78 111 41 109 34 119 87 70 94 93 82 75 127 131 101 130 151 148 119 129 106 90 88 121 117 107 112 74 94 107 73 130 104 146 112 75 131 116 123 112 112 73 119 107 126 100 105 50 127 133 102 122 81 166 73 66 23 106 24 131 158 122 84 115 49 121 122 109 25 152 88 77 120 112 115 144 84 116 132 125 83 114 94 143 108 127 134 114 171 45 110 121 102 148 122 110 142 118 143 134 126 157 156 113 144 124 115 31 128 110 103 91 120 151 106 149 110 124 139 111 120 128 113 115 92 118 102 118 109 111 171 197 114 146 110 129 122 178 145 127 181 114 138 197 97 122 165 118 166 85 154 104 164 97 156 134 152 122 141 80 198 150 169 172 30 112 89 216 172 40 167 68 182 216 37 141 113 117 128 121 106 52 114 179 208 69 138 112 93 19 192 46 143 15 217 141 50 198 128 112 127 132 92 176 84 138 132 80 137 208 206 73 170 198 134 184 137 135 214 175 168 116 118 156 134 148 141 139 114 106 119 98 160 129 127 116 52 113 129 186 120 84 123 141 123 110 153 109 101 118 138 139 128 141 128 115 171 208 118 88 173 41 154 173 94 138 112 132 141 131 84 219 56 175 219 73 41 122 226 110 115 144 141 120 131 80 157 164 131 205 84 155 235 107 108 113 215 129 163 139 117 144 111 138 144 132 127 176 130 218 17 110 196 131 132 131 185 187 208 73 214 186 174 109 138 203 125 129 182 107 163 146 181 120 150 136 150 221 111 162 143 137 188 161 170 169 126 153 158 137 91 138 152 122 114 173 143 132 197 134 153 148 137 76 165 204 161 178 112 114 153 142 92 189 102 171 143 195 151 111 132 134 165 112 137 147 142 133 113 221 118 114 110 143 181 142 136 131 149 117 157 141 121 222 116 111 145 142 104 17 194 181 131 137 121 110 153 199 190 173 129 132 118 143 146 141 130 161 156 116 191 166 141 121 169 222 141 213 84 144 121 148 143 201 131 139 152 141 196 164 106 112 131 131 196 69 122 133 131 121 89 134 231 140 198 146 132 113 161 118 112 116 131 168 165 152 111 145 119 131 63 126 93 131 101 130 110 122 130 106 138 132 131 126 146 142 131 126 115 123 114 131 136 131 112 125 125 155 130 157 131 148 120 115 171 158 16 100 143 181 182 141 123 150 110 142 137 144 131 174 132 150 118 125 181 131 119 124 111 184 206 207 212 194 177 176 172 115 129 195 204 109 178 193 180 181 183 50 122 132 144 61 126 162 98 207 170 167 19 164 125 134 212 119 82 171 19 176 141 136 185 208 212 166 91 155 179 19 170 81 175 91 107 174 79 18 156 122 92 170 121 130 138 140 142 134 150 112 160 83 129 69 157 152 93 170 79 141 121 132 129 161 131 148 175 76 158 120 130 151 115 167 208 119 90 188 148 121 145 124 132 160 172 156 133 180 124 170 56 169 124 159 109 127 155 58 11 143 159 48 129 170 57 48 156 130 131 143 22 142 126 138 111 208 74 149 115 15 152 106 131 141 130 147 177 138 112 141 105 143 87 104 109 107 141 76 97 121 147 108 103 103 180 149 105 101 148 112 141 109 139 108 81 120 144 133 21 190 121 119 115 170 157 214 59 111 170 27 71 178 183 150 143 112 114 208 182 122 181 107 121 134 142 141 131 158 183 143 145 107 124 121 198 184 150 121 154 108 175 111 104 178 164 179 139 131 151 155 156 179 135 118 180 76 158 143 141 131 151 160 159 116 223 24 172 193 174 149 122 110 192 98 172 137 28 165 203 63 23 173 203 65 14 125 143 141 114 31 168 16 139 121 57 50 1 174 139 132 151 136 181 64 21 44 19 177 144 141 199 128 93 109 200 54 76 140 142 141 121 213 150 149 140 200 139 151 141 120 169 160 46 85 130 124 131 77 19 109 96 144 120 155 17 137 107 180 35 175 192 19 0 104 139 125 122 96 95 77 121 115 132 97 49 73 100 95 107 129 121 98 118 123 141 143 120 149 82 101 139 151 130 109 185 127 153 122 119 129 26 147 143 142 71 65 143 118 113 129 159 108 187 158 132 126 115 118 124 202 118 108 152 156 105 193 180 147 124 149 112 145 110 112 131 114 201 247 48 72 0 65 120 171 149 1 67 92 78 46 141 100 221 137 141 80 141 61 70 122 83 138 143 27 137 70 135 118 82 197 81 189 92 87 85 84 87 104 149 142 102 104 134 119 143 129 159 127 153 188 106 171 167 89 149 165 97 108 120 122 127 146 85 115 188 80 163 15 145 101 72 123 110 146 111 34 99 66 105 151 114 168 109 31 105 79 115 176 100 67 166 86 108 127 172 77 121 145 77 141 76 131 98 115 95 175 124 121 87 142 99 141 55 90 121 111 94 115 190 58 178 112 137 141 88 113 143 105 125 145 142 93 120 72 171 164 115 109 132 139 170 95 107 129 120 134 127 147 113 170 85 104 80 154 156 148 31 221 123 135 94 121 133 111 190 145 64 131 183 89 26 158 105 143 139 74 105 141 117 124 72 145 116 120 178 109 143 157 134 165 117 87 40 188 169 89 141 111 43 73 171 118 131 144 70 178 74 142 120 143 22 92 132 110 128 34 170 98 142 17 143 93 54 122 65 65 106 105 143 84 145 155 121 65 121 49 122 87 156 54 122 112 134 136 107 119 143 122 110 95 114 141 80 146 163 124 118 133 85 114 122 134 109 132 52 91 81 52 142 125 146 161 104 136 137 48 96 54 106 164 129 158 106 189 101 122 162 166 185 144 118 107 192 92 154 108 146 141 59 144 113 76 82 168 33 134 116 73 50 46 108 34 147 54 40 183 21 136 137 44 90 139 142 141 96 140 87 108 38 164 69 153 24 148 106 125 142 82 121 131 129 93 115 82 99 121 137 118 127 89 134 154 103 92 118 98 52 85 120 111 186 118 62 146 119 149 105 156 142 78 97 122 106 114 152 95 115 121 184 75 149 34 59 29 104 115 108 153 118 137 122 75 147 51 149 107 103 134 122 118 144 57 117 143 119 51 143 111 145 104 159 103 62 121 48 101 126 74 143 172 142 121 93 123 102 56 127 121 134 141 148 115 155 107 124 142"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n2100 2500 2700 2700\n\"\"\"\n) == '2 2'\n\nassert solution(\n\"\"\"\n2\n22\n\"\"\"\n) == '2 2'\n\nassert solution(\n\"\"\"\n4\n2100 2500 2700 2700\n\"\"\"\n) == '2 2'\n\nassert solution(\n\"\"\"\n5\n2600 2600 2600 2600\n\"\"\"\n) == '2 2'\n\nassert solution(\n\"\"\"\n10\n
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\n\nassert solution('''\n5\n2000 2000 2000 2000 2000\n''') == '5 1'\n\nassert solution('''\n1\n1\n''') == '0 0'\n\nassert solution('''\n2\n1 2\n''') == '1 1'\n\nassert solution('''\n3\n2 1 1\n''') == '0 0'"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''\n4\n1500 1500 1500 1500\n''') == '1 1'\nassert solution('''\n4\n1500 1500 1500 1500\n''') == '1 1'\nassert solution('''\n4\n1500 1500 1500 1500\n''') == '1 1'\nassert solution('''\n4\n1500 1500 1500 1500\n''') == '1 1'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2100 2500 2700 2700''') == '2 2'\n'''\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''8\n2100 2500 2700 2700\n2000 2500 2900 2900\n2300 2500 3000 3200''') == '1 3'\nassert solution('''12\n2100 2500 2700 2700\n2000 2500 2900 2900\n2300 2500 3000 3200\n2300 2500 3000 3200\n2000 2500 2900 2900\n2000 2500 2900 2900\n2300 2500 3000 3200\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900''') == '2 2'\nassert solution('''100\n1000 2500 3000 3200\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n2000 2500 2900 2900\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700''') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"2\\n2100 2500 2700 2700\") == \"2 1\"\nassert solution(\"5\\n2100 2500 2700 2700 2300\") == \"1 2\"\nassert solution(\"5\\n2200 2500 2700 2700 2300\") == \"0 1\"\nassert solution(\"6\\n2200 2500 2700 2700 2300\") == \"2 3\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"0\"\nassert solution(\"xoxo\") == \"0\"\nassert solution(\"xoxooxo\") == \"2.5\"\nassert solution(\"xoxooxoo\") == \"2.5\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oxx\") == \"900\"\nassert solution(\"xoo\") == \"900\"\nassert solution(\"xox\") == \"900\"\nassert solution(\"xoxo\") == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ooxx') == 900\nassert solution('oxxo') == 900\nassert solution('xoxo') == 900\nassert solution('ooxx') == 900\nassert solution('xoxx') == 900\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oxx\") == \"1100\"\nassert solution(\"xox\") == \"0\"\nassert solution(\"xox\") == \"0\"\nassert solution(\"oxx\") == \"1100\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"xox\") == \"900\"\nassert solution(\"xo\") == \"700\"\nassert solution(\"o\") == \"700\"\nassert solution(\"x\") == \"400\"\nassert solution(\"xoox\") == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('oxo') == '900'\nassert solution('xox') == '0'\nassert solution('oxx') == '0'\nassert solution('oox') == '0'\nassert solution('xoxoxo') == '0'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"400\"\nassert solution(\"xoxo\") == \"600\"\nassert solution(\"ooxo\") == \"400\"\nassert solution(\"ooxo\") == \"400\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('o') == '900'\nassert solution('x') == '0'\nassert solution('oo') == '0'\nassert solution('oxo') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('oxo') == \"900\"\nassert solution('oxx') == \"800\"\nassert solution('oox') == \"800\"\nassert solution('xox') == \"800\"\nassert solution('xoo') == \"700\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('oxo') == '900'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"H H\") == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('H H') == 'H'\nassert solution('H H') == 'H'\nassert solution('D H') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('H D') == 'H'\nassert solution('H H') == 'H'\nassert solution('H H') == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'H'\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('H H') == 'H'\nassert solution('D H') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'\nassert solution('H D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\nassert solution('H D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n\"\"\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'H'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1222') == \"1+2+2+2=7\""
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nprint('Test1 passed')\n\nassert solution('3213') == '3-1+2+3-1=7'\nprint('Test2 passed')\n'''"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1133\") == \"-1-3+3-3=0\"\nassert solution(\"1133\") == \"-1-3+3-3=0\"\nassert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1133\") == \"-1-3+3-3=0\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1-2+2-2=7'\nassert solution('1222') == '1+2-2+2=7'\nassert solution('1222') == '1-2-2+2=7'\nassert solution('1222') == '1+2+2-2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n\"\"\"\n\nimport sys\n\na, b, c, d = sys.stdin.readline().strip().split()\n\nprint(\"{}+{}+{}+{}={}\".format(a, b, c, d, int(a) + int(b) + int(c) + int(d)))\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1222') == \"1+2+2+2=7\"\nassert solution('1232') == \"1+2-2+2=7\"\nassert solution('1221') == \"1-2+2-2=7\"\nassert solution('1223') == \"1-2+2+2=7\"\nassert solution('1203') == \"1-2+3-2=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123456') == '1+2+3+4+5+6=7'\nassert solution('1234567') == '1+2+3+4+5+6+7=7'\nassert solution('1222') == '1+2+2+2=7'\nassert solution('11234567') == '1+1+1+1+1+1+1+1+1=7'\nassert solution('1222') == '1+2+2+2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1234\") == \"1+2+3+4=7\"\nassert solution(\"12345\") == \"1+2+3+4=7\"\nassert solution(\"12342\") == \"1+2+3+4=7\"\nassert solution(\"123445\") == \"1+2+3+4=7\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 2 2''') == '2\\n2\\n0\\n0\\n0'\nassert solution('''7\n1 2 3 4 5 6 7''') == '0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''6\n2 1 2 3 4 5''') == '2\\n2\\n2\\n2\\n2\\n0'\nassert solution('''6\n2 3 1 2 3 4''') == '2\\n2\\n2\\n0\\n0\\n0'\nassert solution('''6\n2 3 1 2 3 4''') == '2\\n2\\n2\\n2\\n2\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2\\n2') == '2\\n2\\n0\\n0'\nassert solution('2\\n2\\n3\\n3') == '2\\n2\\n0\\n0'\nassert solution('4\\n4\\n5\\n5') == '0\\n0\\n0\\n0'\nassert solution('6\\n6\\n7\\n7') == '0\\n0\\n0\\n0'\nassert solution('8\\n8\\n9\\n9') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('2 2 3 3') == '2\\n2\\n0\\n0\\n0'\nassert solution('1 1 2 2') == '2\\n2\\n0\\n0\\n0'\nassert solution('3 3 2 2') == '3\\n0\\n0\\n0\\n0'\nassert solution('2 2 3 3') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 2 2') == '2'\nassert solution('5') == '2 0 0 0'\nassert solution('1 2 3 4') == '1 2 0 0'\nassert solution('1 1') == '1'\nassert solution('1 1 2 1') == '2'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n1 1 2 2\n\"\"\") == \"\"\"2\n2\n0\n0\n0\n\"\"\"\nassert solution(\"\"\"5\n2 2 1 2\n\"\"\") == \"\"\"2\n2\n0\n0\n0\n\"\"\"\nassert solution(\"\"\"5\n4 2 3 3\n\"\"\") == \"\"\"2\n2\n2\n1\n0\n\"\"\"\nassert solution(\"\"\"5\n6 1 1 1 1\n\"\"\") == \"\"\"2\n2\n2\n2\n2\n2\n\"\"\"\nassert solution(\"\"\"5\n7 1 1 1 1 1\n\"\"\") == \"\"\"2\n2\n2\n2\n2\n2\n2\n\"\"\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('2\\n1') == '0'\nassert solution('3\\n3') == '0'\nassert solution('3\\n1') == '0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2\\n2') == '2\\n2\\n0\\n0'\nassert solution('3\\n1 2 3\\n2 3 4\\n3 4 5') == '2\\n2\\n0\\n0\\n0'\nassert solution('4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6') == '3\\n2\\n2\\n2\\n0'\nassert solution('5\\n1 2 3 4 5') == '2\\n2\\n0\\n0\\n0'\nassert solution('6\\n1 2 3 4 5 6') == '3\\n2\\n2\\n2\\n2\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1\n2 2\n3 3\n4 1\"\"\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"\"\"1\n2 2\n3 3\n4 1\"\"\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"\"\"3\n2 1\n2 2\n1 3\n\"\"\") == \"1\\n0\\n0\\n0\"\nassert solution(\"\"\"1\n2 2\n1 3\n\"\"\") == \"2\\n0\\n0\"\nassert solution(\"\"\"3\n2 1\n2 2\n1 3\n\"\"\") == \"0\\n0\\n0\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('6') == '3'\n\n\"\"\""
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('10') == '5'\nassert solution('100') == '10'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"40\") == \"0\"\nassert solution(\"500\") == \"0\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('2 4') == '1'\nassert solution('2 4 10') == '4'\nassert solution('2 4 10 2') == '2'\nassert solution('2 4 10 2 2') == '4'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('6') == '3'\nassert solution('10') == '3'\nassert solution('15') == '4'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n6\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n10\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n10\n9\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n10\n9\n8\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n10\n9\n8\n7\n\"\"\") == \"2\""
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0''') == '0'\nassert solution('''5''') == '0'\nassert solution('''10''') == '0'\nassert solution('''4''') == '0'\nassert solution('''12''') == '0'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6''') == '3'\nassert solution('''10''') == '8'\nassert solution('''20''') == '16'\nassert solution('''15''') == '6'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('12345') == 'No'\nassert solution('1111') == 'Yes'\nassert solution('11110') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'Yes'\nassert solution('1123') == 'No'\nassert solution('1113') == 'Yes'\nassert solution('1019') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1118''') == 'Yes'\nassert solution('''1111''') == 'No'\nassert solution('''1111\n1111\n1111''') == 'Yes'\nassert solution(''''') == 'No'\nassert solution('''111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111''') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('12345') == 'No'\nassert solution('10101') == 'Yes'\nassert solution('1010') == 'Yes'\nassert solution('111') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"111\") == \"Yes\"\nassert solution(\"1113\") == \"Yes\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 1\") == \"\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"3\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"3 6\") == \"3\""
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n        \"\"\"\n        2\n        1 5\n        2 4\n        3 6\n        \"\"\"\n    ) == '3'\n\nassert solution(\n        \"\"\"\n        1\n        2\n        3\n        \"\"\"\n    ) == '1'\n\nassert solution(\n        \"\"\"\n        2\n        1 3\n        2 4\n        3 5\n        \"\"\"\n    ) == '2'\n\nassert solution(\n        \"\"\"\n        3\n        2 2 3\n        3 3 3\n        2 2 2\n        \"\"\"\n    ) == '3'\n\nassert solution(\n        \"\"\"\n        4\n        1 1 1 1\n        2 2 2 2\n        3 3 3 3\n        4 4 4 4\n        \"\"\"\n    ) == '4'"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\nassert solution('''2\n1 5\n2 4\n3 6\n1 2\n1 4\n2 1\n2 3\n2 4\n1 4\n1 3\n2 4\n1 2\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4''') == '5'\nassert solution('''2\n1 5\n2 4\n3 6\n1 2\n1 4\n2 1\n2 3\n2 4\n1 2\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4\n1 2\n1 3\n2 1\n1 4\n2 1\n2 3\n2 4''') == '10'\nassert solution('''1\n2''') == '1'\nassert solution('''2\n3''') == '1'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\nassert solution('''3\n1 5\n2 4\n3 6''') == '4'\nassert solution('''4\n1 5\n2 4\n3 6''') == '5'\nassert solution('''5\n1 5\n2 4\n3 6''') == '6'\nassert solution('''6\n1 5\n2 4\n3 6''') == '7'\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 5\\n2 4\\n3 6\") == 3\nassert solution(\"2\\n1 5\\n2 4\") == 3\nassert solution(\"2\\n2 1\\n2 4\") == 2\nassert solution(\"3\\n1 5\\n2 4\\n3 6\") == 2\nassert solution(\"1\\n1 1\\n1 1\") == 1\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"3\"\nassert solution(\"3\\n3\\n3\") == \"3\"\nassert solution(\"3\\n3\\n1\") == \"1\"\nassert solution(\"3\\n1\\n3\") == \"1\"\nassert solution(\"3\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A B') == '<'\nassert solution('AB') == '='\nassert solution('BA') == '>'\nassert solution('ABA') == '>'\nassert solution('ABB') == '<'\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"AA B\") == \">=\"\nassert solution(\"A A\") == \"=\"\nassert solution(\"AA BB\") == \">\"\nassert solution(\"AB B\") == \"<\"\n\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"B A\") == \"<\"\nassert solution(\"A B\") == \"=\"\nassert solution(\"B A\") == \"=\"\nassert solution(\"A\") == \">\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('A B') == '<'\nassert solution('A B') == '>'\nassert solution('A B') == '='\nassert solution('A B') == '= '\n\n\"\"\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[2:4]\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '>'\nassert solution('A B') == '=', 'Case: A < B; should be <'\nassert solution('B A') == '=', 'Case: A = B; should be ='\nassert solution('C D') == '=', 'Case: A = C; should be ='\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A B') == '<'\nassert solution('C D') == '='\nassert solution('B D') == '>'\nassert solution('F G') == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"B A\") == \"<\"\nassert solution(\"B B\") == \"=\"\nassert solution(\"A C\") == \">\"\nassert solution(\"B C\") == \"<\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == \">\nassert solution(\"C D\") == \"=\nassert solution(\"F F\") == \"=\nassert solution(\"G F\") == \">\nassert solution(\"H G\") == \">\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12345\\n12345\\n12345\\n12345\\n12345') == '11211'\nassert solution('12345\\n12345\\n12345\\n12345\\n12345') == '11211'\nassert solution('12345\\n12345\\n12345\\n12345\\n12345') == '11211'\nassert solution('12345\\n12345\\n12345\\n12345\\n12345') == '11211'\nassert solution('12345\\n12345\\n12345\\n12345\\n12345') == '11211'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1#'\nassert solution('2 1') == '#'\nassert solution('1 1') == '#'\nassert solution('2 2') == '1'\nassert solution('1 2') == '#'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1'\n\"\"\"\n\n\"\"\"\nHi, here's your problem today. This problem was recently asked by Microsoft:\n\nYou are given a string consisting of only digits 0-9, commas, and dots. \n\nYour task is to complete the regex_pattern defined below, which will be used to re.split() all of the, and. symbols in the string. \n\nbut first you should remove all commas and dots from the string.\n\"\"\"\n\nregex_pattern = r\"[^,.]+\""
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1\\n11211\\n'\n'''\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n''') == '11211'\nassert solution('''2 2\n.#\n.#''') == '1#'\nassert solution('''10 10\n.....\n....#\n.#.#.\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n''') == '''11211\n1#2#1\n11211\n'''\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('1 2') == '11'\nassert solution('..##') == '3'\nassert solution('..#.') == '5'\nassert solution('..#..') == '7'\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4''') == '110101'\nassert solution('''4 4''') == '110101'\nassert solution('''3 3''') == '11111'\nassert solution('''3 3''') == '11111'\nassert solution('''3 3''') == '11111'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n4 5 6') == '3'\nassert solution('1 2 3\\n4 5 6\\n9 8 7') == '3'\nassert solution('1 2 3\\n4 5 6\\n9 8 7\\n10 9 10') == '3'\nassert solution('1 2 3\\n4 5 6\\n9 8 7\\n10 9 10\\n11 12 13') == '4'\nassert solution('1 2 3\\n4 5 6\\n9 8 7\\n10 9 10\\n11 12 13\\n14 15 16') == '4'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('60 90 120') == '3'\nassert solution('80 150 80 150') == '3'\n\n\"\"\"\n\nN, M, K = [int(x) for x in stdin.split()]\nA = [int(x) for x in stdin.split()][:N]\nB = [int(x) for x in stdin.split()][:M]\n\nans = 0\ntot = 0\n\nfor i in range(N):\n    tot += A[i]\n    if tot > K:\n        ans = max(ans, i)\n        tot = 0\n\ntot = 0\nfor i in range(M):\n    tot += B[i]\n    if tot > K:\n        ans = max(ans, i)\n        tot = 0\n\ntot = 0\nfor i in range(N):\n    tot += A[i]\n    if tot > K:\n        ans = max(ans, i)\n        tot = 0\n\ntot = 0\nfor i in range(M):\n    tot += B[i]\n    if tot > K:\n        ans = max(ans, i)\n        tot = 0\n\nprint(ans)"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 1') == '2'\nassert solution('2 2 1') == '1'\nassert solution('2 2 4') == '2'\nassert solution('1 2 4') == '1'\nassert solution('1 2 3') == '2'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('60 90 120') == '3'\nassert solution('80 150 80 150') == '3'\nassert solution('1 2 3') == '3'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\n'''"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n\") == \"3\"\nassert solution(\"3 4 40\\n60 90 120\\n80 150 80 150\\n\") == \"2\"\nassert solution(\"2 4 120\\n70 80 110\\n50 100 50\\n\") == \"3\"\nassert solution(\"10 10 10\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '7900'\n\"\"\"\nfrom sys import stdin\n\na, b, c, x, y = map(int, stdin.readline().split())\n\nprint(int((a*x + b*y) * (a+b) / 2))\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == 7900\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"2 1 2 1 2\") == \"9\"\nassert solution(\"1 2 2 3 3\") == \"12\"\nassert solution(\"4 5 2 1 2\") == \"9\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1500 2000 1600 3 2\"\"\") == \"7900\"\nassert solution(\n\"\"\"1500 2000 1000 4 4\"\"\") == \"40000\"\nassert solution(\n\"\"\"1500 2000 1500 4 4\"\"\") == \"10000\"\nassert solution(\n\"\"\"1500 2000 1500 4 4\"\"\") == \"26900\"\nassert solution(\n\"\"\"1500 2000 1500 4 4\"\"\") == \"26000\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1500 2000 1600 3 2''') == '7900'\nassert solution('''1700 1749 1737 5 25''') == '20497'\nassert solution('''2300 2399 2397 5 25''') == '21151'\nassert solution('''2400 2299 2497 4 25''') == '22677'\nassert solution('''2500 2599 2597 5 25''') == '22777'\n'''\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[7:].strip()\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1500 2000 1600 3 2') == '7900'\n\"\"\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('0') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '5'\nassert solution('100') == '5'\nassert solution('120') == '8'\nassert solution('999999999') == '5'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n100\n\"\"\"\n) == \"25\"\n\nassert solution(\n\"\"\"\n11\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n124\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n3124\n\"\"\"\n) == \"42\""
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"12\") == 4\nassert solution(\"13\") == 1\nassert solution(\"20\") == 4\nassert solution(\"21\") == 2\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3) == 4\nassert solution(15) == 6\nassert solution(0) == 1\nassert solution(27) == 10\nassert solution(28) == 11\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == \"4\"\nassert solution('''1000''') == \"16\"\nassert solution('''12000''') == \"64\"\nassert solution('''12000''') == \"64\"\nassert solution('''27''') == \"4\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('3') == '4'\nassert solution('0') == '1'\nassert solution('6') == '4'\nassert solution('12') == '8'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3) == 4\nassert solution(1) == 1\nassert solution(8) == 6\nassert solution(15) == 8\nassert solution(15) == 8\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('3') == '4'\nassert solution('1') == '1'\nassert solution('12') == '4'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(1) == None\nassert solution(2) == None\nassert solution(3) == None\nassert solution(4) == '4'\nassert solution(5) == '2'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"12\") == \"12\"\nassert solution(\"1000\") == \"999\"\nassert solution(\"9\") == \"9\"\nassert solution(\"8\") == \"8\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'\nassert solution('10000') == '9999'\nassert solution('1000000') == '999999'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1'\nassert solution('10\\n') == '9'\nassert solution('100\\n') == '999999999'\nassert solution('10000\\n') == '9999999999999'\nassert solution('1000\\n') == '9999999999999'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10') == '9'\nassert solution('27') == '27'\nassert solution('100') == '27'\nassert solution('1000') == '27'\n\n\"\"\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\""
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"15\") == \"27\"\nassert solution(\"1000\") == \"1024\"\nassert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == str(9)"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n8\\n8\\n6\\n') == '3'\nassert solution('2\\n10\\n10\\n8\\n6\\n') == '2'\nassert solution('2\\n10\\n10\\n8\\n6\\n') == '2'\nassert solution('2\\n10\\n10\\n8\\n6\\n') == '2'\nassert solution('2\\n10\\n10\\n8\\n6\\n') == '2'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == '3'\n'''\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == '3'\nassert solution('''4\n3\n7\n2\n2''') == '2'\nassert solution('''10\n7\n3\n1''') == '5'\nassert solution('''15\n7\n1\n2\n8\n9\n6\n5\n4\n3\n3\n3\n2\n1''') == '7'\nassert solution('''20\n12\n7\n5\n6\n4\n3\n2\n1''') == '9'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1\\n1') == '2'\nassert solution('2\\n1\\n1\\n1') == '3'\nassert solution('2\\n2\\n1\\n1') == '2'\nassert solution('2\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n3\\n3\") == \"2\"\nassert solution(\"3\\n3\\n3\\n3\") == \"2\"\nassert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n10\n8\n8\n6\n\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"\n2\n5\n2\n3\n6\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"\n4\n11\n8\n10\n13\n\"\"\"\n) == '5'\n\nassert solution(\n\"\"\"\n4\n30\n20\n14\n18\n\"\"\"\n) == '4'\n\nassert solution(\n\"\"\"\n4\n30\n24\n18\n14\n\"\"\"\n) == '3'"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == '3'\nassert solution('''4\n10\n8\n8\n6\n4\n2''') == '5'\nassert solution('''5\n7\n5\n4\n4\n5''') == '6'\nassert solution('''8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8''') == '7'\nassert solution('''10\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8''') == '9'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('2\\n10\\n10') == '1'\nassert solution('4\\n10\\n10\\n10') == '1'\nassert solution('5\\n10\\n10\\n10\\n10') == '2'\nassert solution('5\\n10\\n10\\n10\\n10') == '2'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXC') == '5'\nassert solution('QWERTYASDFZXC') == '5'\nassert solution('QWERTYASDFZXC') == '5'\nassert solution('QWERTYASDFZXC') == '5'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCVDQWE') == '5'\nassert solution('QWERTYASDFZXCVDQWEQWE') == '5'\nassert solution('QWERTYASDFZXCVDQWEQWEWEQWE') == '5'\nassert solution('QWERTYASDFZXCVDQWEQWEWEQWEWEQWEWE') == '5'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('abcdefghijklmnop') == '4'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '26'\nassert solution('abcdefghijklmnopqrstuvwxyz12345') == '5'\n\"\"\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(stdin))\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('ABCD') == 0\nassert solution('ASD') == 1\nassert solution('ZXCV') == 2\nassert solution('QWERTYASDFZXCV') == 5\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"ASDFZ\"\nassert solution(\"QWERTYASDFZXC\") == \"ASDF\"\nassert solution(\"QWERTYASDFZXC\") == \"ASDF\"\nassert solution(\"QWERTYASDFZXC\") == \"ASDF\"\nassert solution(\"QWERTYASDFZXCV\") == \"ASDFZ\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[7:11]\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('QWERTYASDFZXCV') == 'ASDFZ'\nassert solution('qwertyasdfzxcv') == 'ASDFZ'"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('QWERTYASDFZXCV') == 'ASDFZ'\nassert solution('QWERTZYX') == 'QWERTZ'\nassert solution('QWERYTYZX') == 'QWERYTY'\nassert solution('QWERTYASDFZXCV') == 'ASDFZ'\nassert solution('QWERTYASDFZXC') == 'ASDFZ'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == 'ASDFZ'\nassert solution('QWERTYASDFZXC') == 'ASDFZ'\nassert solution('QWERTYASDFZX') == 'ASDFZ'\nassert solution('QWERTYASDFZX') == 'ASDFZ'\nassert solution('QWERTYASDFZX') == 'ASDFZ'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n8 12 40\\n') == '2'\nassert solution('4\\n8 12 40\\n') == '2'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '1'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 10 12 30') == '3'\nassert solution('1 1 1') == '0'\nassert solution('7 4 5') == '1'\nassert solution('2 3 2') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('8 12 40') == '2'\nassert solution('2 4 6 8 10 12 14 16 18') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '4'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 12 40\") == \"2\"\nassert solution(\"8 6 40\") == \"1\"\nassert solution(\"8 10 40\") == \"3\"\nassert solution(\"8 10 30\") == \"1\"\nassert solution(\"8 10 22\") == \"3\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"2\\n1\\n\") == \"0\"\nassert solution(\"2\\n2\\n\") == \"0\"\nassert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"2\"\nassert solution(\"3\\n1\\n2\\n3\\n\") == \"1\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('1 100 101') == '2'\nassert solution('2 1') == '2'\nassert solution('3 1') == '2'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 6\nassert solution('10') == 220\nassert solution('1000000') == 100000001\nassert solution('100000') == 10000001\nassert solution('100000') == 10000001\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 1\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 6\nassert solution('1000') == 2147483647\n\"\"\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '30'\nassert solution('20') == '164018'\nassert solution('1000') == '2470172'\nassert solution('1000000') == '2484699'\n\n\"\"\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 1\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 6\nassert solution('4') == 12\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == 1\nassert solution('2\\n') == 2\nassert solution('3\\n') == 6\nassert solution('5\\n') == 26\nassert solution('10\\n') == 576\nprint(solution(''))\n\n'''\n\n'''\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"2\"\nassert solution(\"1\\n1\\n1\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\") == \"4\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '10'\nassert solution('10') == '50'\nassert solution('1000') == '25050'"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''3\n    '''\n    ) == '6'\n\nassert solution(\n    '''3\n    '''\n    ) == '1+2+3=6'\n\nassert solution(\n    '''1\n    '''\n    ) == '1'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '4'\nassert solution('4\\n') == '5'\nassert solution('5\\n') == '6'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6'\n\"\"\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1+2\"\nassert solution(\"3\") == \"1+2+3\"\nassert solution(\"4\") == \"1+2+3+4\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('2') == '2'\nassert solution('12') == '12'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == str(6)\nassert solution('3') == str(6)\nassert solution('1') == str(1)\nassert solution('5') == str(5)\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n3 4') == '2'\nassert solution('2\\n2 1') == '1'\nassert solution('2\\n1 2') == '0'\nassert solution('2\\n2 1\\n2') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"2\\n2 1\") == \"0\"\nassert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"4\\n1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 2 1') == '1'\nassert solution('5 4 3 2 1') == '-2'\nassert solution('6 5 4 3 2 1') == '-1'\nassert solution('7 5 4 3 2 1') == '1'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 1 2\") == \"2\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"2 3 1\") == \"-1\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n3 1''') == '2'\nassert solution('''3\n1 2\n''') == '-1'\nassert solution('''4\n1 2 3 4\n''') == '-4'\nassert solution('''6\n1 2 3 4 5 6\n''') == '-18'\nassert solution('''8\n1 2 3 4 5 6 7 8\n''') == '-36'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('2\\n1 3') == '2'\nassert solution('2\\n4 4') == '-4'\nassert solution('3\\n1 1 1') == '-1'\nassert solution('3\\n3 1 3') == '2'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 2\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1') == '2'\nassert solution('2\\n2\\n2') == '0'\nassert solution('3\\n1\\n2') == '-1'\nassert solution('4\\n3\\n4') == '2'\nassert solution('5\\n3\\n4') == '-2'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1') == 2\nassert solution('3 1') == 2\nassert solution('3 2 1') == 1\nassert solution('3 3') == 0\nassert solution('10 10 10') == 0\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"2 3 1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\n\"\"\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n1 5\n1 AC\n2 WA\n2 AC\n2 WA\n\"\"\"\n) == \"2 2\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(SAMPLE_INPUT_0) == SAMPLE_OUTPUT_0\nassert solution(SAMPLE_INPUT_1) == SAMPLE_OUTPUT_1\nassert solution(SAMPLE_INPUT_2) == SAMPLE_OUTPUT_2\nassert solution(SAMPLE_INPUT_3) == SAMPLE_OUTPUT_3\nassert solution(SAMPLE_INPUT_4) == SAMPLE_OUTPUT_4\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 WA') == '1 AC'\nassert solution('1 AC') == '0 AC'\nassert solution('2 WA') == '1 AC'\nassert solution('2 AC') == '0 AC'\nassert solution('2 WA') == '1 AC'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 WA\\n1 AC') == '2 2'\nassert solution('2 WA\\n2 AC') == '2 2'\nassert solution('2 AC\\n2 WA') == '2 2'\n\"\"\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2 2\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"\nassert solution(\"3 3\\n1 AC\\n2 AC\\n3 AC\\n2 WA\\n\") == \"0 0\"\nassert solution(\"1 5\\n1 AC\\n2 WA\\n2 AC\\n3 AC\\n2 WA\\n\") == \"1 1\"\nassert solution(\"1 1\\n1 AC\\n2 AC\\n2 AC\\n3 AC\\n2 WA\\n\") == \"0 0\"\nassert solution(\"1 1\\n1 AC\\n2 WA\\n2 AC\\n3 AC\\n2 WA\\n\") == \"0 0\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '2 5'\n    '1 WA'\n    '1 AC'\n    '2 WA'\n    '2 AC'\n    '2 WA'\n) == '2 2'\nassert solution(\n    '2 3'\n    '1 AC'\n    '2 AC'\n    '2 WA'\n    '1 WA'\n) == '2 0'\nassert solution(\n    '3 4'\n    '1 AC'\n    '2 AC'\n    '1 WA'\n    '2 AC'\n    '3 WA'\n) == '1 1'\nassert solution(\n    '3 4'\n    '1 AC'\n    '2 AC'\n    '1 WA'\n    '2 AC'\n    '3 WA'\n) == '2 1'\nassert solution(\n    '3 4'\n    '1 AC'\n    '2 AC'\n    '1 WA'\n    '2 AC'\n    '3 WA'\n) == '2 0'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\n\"\"\"\n\n\"\"\"\n-----Description-----\n\n------Solution 1------\n\nTakahashi has participated in a contest on AtCoder.\nThe contest had N problems.\nTakahashi made M submissions during the contest.\nThe i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\nThe number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\nThe number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\nFind the numbers of Takahashi's correct answers and penalties.\n\n------Solution 2------\n\nTakahashi participated in a contest on AtCoder.\nThe contest had N problems.\nTakahashi made M submissions during the contest.\nThe i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\nThe number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\nThe number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\nFind the numbers of Takahashi's correct answers and penalties.\n\n------Solution 3------\n\nTakahashi participated in a contest on AtCoder.\nThe contest had N problems.\nTakahashi made M submissions during the contest.\nThe i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\nThe number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\nThe number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\nFind the numbers of Takahashi's correct answers and penalties.\n\n------Solution 4------\n\nTakahashi participated in a contest on AtCoder.\nThe contest had N problems.\nTakahashi made M submissions during the contest.\nThe i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\nThe number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\nThe number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\nFind the numbers of Takahashi's correct answers and penalties.\n\n------Solution 5------\n\nTakahashi participated in a contest on AtCoder.\nThe contest had N problems.\nTakahashi made M submissions during the contest.\nThe i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\nThe number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\nThe number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\nFind the numbers of Takahashi's correct answers and penalties.\n\"\"\""
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 WA\\n1 AC') == '2 2'\nassert solution('2 WA\\n2 AC') == '2 2'\nassert solution('2 WA\\n1 AC') == '2 1'\nassert solution('1 WA\\n1 AC') == '1 2'\nassert solution('2 WA\\n2 AC\\n2 WA\\n2 AC\\n2 WA\\n2 AC') == '6 4'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1''') == 5\nassert solution('''3 1''') == 5\nassert solution('''5 1''') == 6\nassert solution('''9 1''') == 9\nassert solution('''9 1''') == 9\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 1\n4 1 5''') == '5'\nassert solution('''3 1\n4 1 5''') == '5'\nassert solution('''3 1\n0 1 2''') == '5'\nassert solution('''3 1\n2 1 0''') == '5'\nassert solution('''3 1\n4 1 0''') == '5'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == '5'\n\"\"\"\n\nfrom functools import reduce\n\nn, k = map(int, stdin.split())\nh = list(map(int, stdin.split()))"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '5'\nassert solution('4 1 5') == '5'\nassert solution('3 10') == '10'\nassert solution('5 100') == '20'\nassert solution('100 1000') == '20'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 5\n\n\n\"\"\""
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1\n4 1 5\n''') == '5'\nassert solution('''5 5\n10 1 5 5\n''') == '5'\nassert solution('''10 2\n8 2\n9 2 1 3\n4 4\n7 1 3\n7 7\n8 9\n2 2\n5 2\n5 1\n5 3\n3 3\n4 5\n7 3\n8 5\n''') == '2'\nassert solution('''10 2\n3 2\n10 2 3 5\n4 3\n5 3\n6 5\n9 3\n9 3\n4 3\n1 2\n1 3\n5 1\n7 4\n7 5\n8 5\n5 3\n5 3\n5 3\n''') == '2'\nassert solution('''10 2\n3 2\n10 2 3 5\n4 3\n5 3\n6 5\n9 3\n9 3\n4 3\n1 2\n1 3\n5 1\n7 4\n7 5\n8 5\n5 3\n5 3\n5 3\n''') == '3'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1\n4 1 5''') == '5'\nassert solution('''3 1\n4 1 5''') == '5'\nassert solution('''3 1\n4 2''') == '2'\nassert solution('''3 1\n3 4''') == '2'\nassert solution('''3 1\n10 3''') == '4'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"5\"\nassert solution(\"3 1\") == \"5\"\nassert solution(\"10 1\") == \"5\"\nassert solution(\"100 1\") == \"5\"\nassert solution(\"1000 1\") == \"5\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1') == '5'\nassert solution('3 1') == '4'\nassert solution('2 1') == '2'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    stdin\n) == '4'\n\"\"\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10\\n2\") == \"4\"\nassert solution(\"2\\n10\\n2\") == \"16\"\nassert solution(\"1\\n10\\n3\") == \"5\"\nassert solution(\"3\\n10\\n3\") == \"25\"\nassert solution(\"2\\n10\\n2\\n2\") == \"20\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n10\n2\n''') == '4'\nassert solution('''1\n10\n3\n''') == '9'\nassert solution('''1\n10\n4\n''') == '13'\nassert solution('''2\n20\n2\n4\n2\n''') == '16'\nassert solution('''2\n20\n6\n6\n4\n4\n''') == '24'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n3\\n') == '6'\nassert solution('1\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '0'\nassert solution('1\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '0'\nassert solution('1\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '0'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('2\\n10\\n2\\n') == '16'\nassert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n2\\n\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4\\n0 0\\n0 2\\n2 3\\n3 1') == '4'\nassert solution('1\\n1\\n1 1\\n1 2\\n2 1') == '2'\nassert solution('2\\n3\\n1 3\\n2 3') == '4'\nassert solution('3\\n2\\n2 2\\n2 2') == '6'\nassert solution('3\\n1\\n2 1\\n3 2') == '5'\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 4\n'''\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"1 2\") == \"\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('600 300 220 420') == '520'\nassert solution('600 300 220 420') == '520'\nassert solution('100 100 100 100') == '100'\nassert solution('100 100 100 100') == '100'\nassert solution('1 10 1 10') == '10'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('100\\n100\\n100\\n100') == '100'\nassert solution('1000\\n1000\\n1000\\n1000') == '2000'\nassert solution('0\\n0\\n0\\n0') == '0'\nassert solution('1\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100') == '600'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('A\\nB\\nC\\nD') == 520\nassert solution('1\\n2\\n3\\n4') == 100\nassert solution('0\\n1\\n2\\n3') == 0\nassert solution('0\\n10\\n100\\n1000') == 0\nassert solution('5\\n0\\n0\\n0') == 0\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4') == '10'\nassert solution('2\\n2\\n2\\n2') == '8'\nassert solution('2\\n2\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '9'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n3\\n4\\n5') == '3'\nassert solution('6\\n7\\n8\\n9') == '5'\nassert solution('100\\n99\\n98\\n97') == '99'\nassert solution('1000\\n999\\n998\\n997') == '998'\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('0.5') == '0'\nassert solution('5') == '5'\nassert solution('5.5') == '5'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"2 4 4 0 2\") == \"4\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"\nassert solution(\"3 1 2 0 3\") == \"0\"\nassert solution(\"5 4 3 2 1\") == \"1\"\nassert solution(\"8 5 1 2 3 4 6 7\") == \"0\"\nassert solution(\"8 7 1 2 3 4 5 6\") == \"3\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n4 4 0 2\\n') == '4'\nassert solution('2\\n4 4 0 2\\n') == '4'\nassert solution('2\\n4 4 0 2\\n') == '4'\nassert solution('2\\n4 4 0 2\\n') == '4'\nassert solution('2\\n4 4 0 2\\n') == '4'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('3 2 2 2 0') == '0'\nassert solution('3 3 3 2 2') == '3'\nassert solution('3 3 3 2 2') == '6'\nassert solution('3 3 3 2 2') == '12'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('1 2 1 1') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\nassert solution('2 4 4 0 2') == '4'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 2 5''') == '84'\nassert solution('''20 2 5''') == '84'\nassert solution('''20 2 0''') == '84'\nassert solution('''20 2 35''') == '84'\nassert solution('''20 2 5''') == '84'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('50 100 36') == '48'\nassert solution('50 11 10') == '48'\nassert solution('50 100 10') == '48'\nassert solution('50 100 10') == '48'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n\"\"\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20 2 5') == '84'"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 2 5') == '84'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 2 5''') == '84'\nassert solution('''5 1 35''') == '7'\nassert solution('''3 4 5''') == '7'\nassert solution('''15 2 6''') == '14'\nassert solution('''20 4 25''') == '41'\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 5 5') == '84'\nassert solution('10 2 5') == '14'\nassert solution('10 3 5') == '6'\nassert solution('10 4 5') == '3'\nassert solution('10 5 5') == '0'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC2') == 'AB'\nassert solution('ABC1000') == 'ABC1000'\nassert solution('ABC10') == 'ABC1'\nassert solution('ABC') == 'ABC'\nassert solution('ABC8') == 'ABC8'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABC680') == 'ABC100'"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('101') == 'ABC101'\nassert solution('999') == 'ABC999'\nassert solution('1000') == 'ABC1000'\nassert solution('1001') == 'ABC1001'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abc') == 'ABC'\nassert solution('ab') == 'AB'\nassert solution('abc2') == 'ABC2'\nassert solution('abc01') == 'ABC01'\nassert solution('abc123') == 'ABC123'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"100\") == \"ABC100\"\nassert solution(\"200\") == \"ABC200\"\nassert solution(\"3000\") == \"ABC300\"\nassert solution(\"400\") == \"ABC400\"\nassert solution(\"500\") == \"ABC500\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('300') == 'ABC300'\nassert solution('700') == 'ABC700'\nassert solution('1000') == 'ABC1000'\nassert solution('1300') == 'ABC1300'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ABC680\") == \"ABC100\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABC100\") == \"ABC100\"\n\n\"\"\""
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ABC100\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('100\\n') == 'ABC100'\nassert solution('100\\n100\\n') == 'ABC1010'\nassert solution('100\\n100\\n100\\n') == 'ABC1110'\nassert solution('123\\n123\\n123\\n') == 'ABC1230'\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('200') == 'ABC200'\nassert solution('300') == 'ABC300'\nassert solution('400') == 'ABC400'\nassert solution('500') == 'ABC500'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''1 1\n''') == '0'\nassert solution('''1 1\n1\n''') == '0'\nassert solution('''2 2\n1\n''') == '0'\nassert solution('''2 2\n2\n''') == '0'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5') == '5'\nassert solution('1 1') == '1'\nassert solution('2 2') == '0'\nassert solution('1 3') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''4 6\n''') == '4'\nassert solution('''4 9\n''') == '3'\nassert solution('''1 3\n''') == '0'\nassert solution('''5 5\n''') == '4'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5') == '5'\nassert solution('2 3') == '3'\nassert solution('3 2') == '3'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 5\"\n) == \"5\"\n\nassert solution(\n    \"5 4\"\n) == \"5\"\n\nassert solution(\n    \"4 4\"\n) == \"4\"\n\nassert solution(\n    \"4 8\"\n) == \"5\"\n\nassert solution(\n    \"1 1\"\n) == \"5\""
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5') == '5'\nassert solution('1 10') == '5'\nassert solution('1 11') == '6'\nassert solution('1 12') == '7'\nassert solution('1 13') == '8'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 5') == '5'\nassert solution('2 2') == '1'\nassert solution('4 2') == '3'\nassert solution('5 5') == '5'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 5') == '5'\n\"\"\""
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 5') == '5'\nassert solution('10 5') == '5'\nassert solution('6 2') == '2'\nassert solution('9 12') == '12'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '5'\nassert solution('5 5') == '5'\nassert solution('5 1') == '5'\nassert solution('5 12') == '5'\nassert solution('1 12') == '5'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 1\nassert solution('3') == -1\nassert solution('3\\n1\\n2') == -1\nassert solution('3\\n1\\n2\\n2') == -1\nassert solution('1\\n2\\n3') == -1\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"-1\"\nassert solution(\"3\\n1\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n3\\n1\\n\") == \"3\"\nassert solution(\"3\\n2\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('2\\n1\\n2\\n') == '1'\nassert solution('1\\n1\\n1\\n') == '-1'\nassert solution('4\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '3'\nassert solution('3\\n3\\n1\\n2\\n') == '2'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_data) == '1\\n'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3\n1\n2\n''') == '2'\nassert solution('''3\n3\n3\n1\n2\n''') == '-1'\nassert solution('''5\n3\n1\n2\n4\n5\n''') == '-1'\nassert solution('''5\n3\n1\n3\n4\n5\n''') == '2'\nassert solution('''5\n3\n5\n1\n2\n4\n''') == '1'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[stdin.find('2'):]\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2'\nassert solution('5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '3'\nassert solution('4\\n3\\n2\\n1\\n') == '3'\nassert solution('3\\n1\\n2\\n3\\n') == '3'\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '3'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin[-1]\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1\") == 1\nassert solution(\"2\") == -1\nassert solution(\"3\") == 2\nassert solution(\"1 2\") == -1\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n2\\n6\\n') == '1'\nassert solution('6\\n2\\n6\\n') == '1'\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n6') == '1'\nassert solution('2\\n2\\n2') == '0'\nassert solution('2\\n2\\n1') == '1'\nassert solution('2\\n2\\n5') == '1'\nassert solution('2\\n2\\n7') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n6\n2\n6''') == '1'\nassert solution('''1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n1\n1000\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6') == '1'\nassert solution('6\\n6') == '1'\nassert solution('6\\n6\\n6') == '1'\nassert solution('6\\n6\\n6\\n6') == '1'\nassert solution('6\\n6\\n6\\n6\\n6') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3\n6\n2\n6\n''') == '1'\nassert solution(\n'''\n2\n1\n2\n1\n''') == '3'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n6\n2\n6''') == '1'\nassert solution('''1000\n1001\n1002\n1003''') == '4'\nassert solution('''10\n5\n8\n7\n2\n9\n1\n3\n4\n6''') == '5'\nassert solution('''2\n2\n3\n3\n5''') == '3'\nassert solution('''2\n3\n3\n5\n5''') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n2') == '1'\nassert solution('10\\n1') == '0'\nassert solution('6\\n2\\n1') == '1'\nassert solution('10\\n1\\n1') == '1'\nassert solution('10\\n1\\n10') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n6\n2\n6\n'''\n) == '1'\n\nassert solution(\n'''\n10\n123\n12\n123\n1\n5\n1\n3\n1\n8\n1\n4\n'''\n) == '9'\n\nassert solution(\n'''\n100\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n123"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n6\\n2') == '1'\nassert solution('3\\n6\\n6\\n6') == '1'\nassert solution('3\\n6\\n2\\n6') == '1'\nassert solution('3\\n6\\n2\\n6\\n6') == '2'\nassert solution('3\\n6\\n2\\n6\\n6\\n6') == '2'\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n6\n2\n6\n\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"\n3\n3\n3\n3\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"\n3\n4\n3\n3\n\"\"\"\n) == '2'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 1 2 2 5''') == '1'\nassert solution('''5 2\n1 1 2 2 5''') == '1'\nassert solution('''5 2\n2 1 1 1 1''') == '1'\nassert solution('''5 3\n1 1 2 2 5''') == '2'\nassert solution('''10 4\n2 4 3 5 2 4 3 4 5''') == '4'\n'''\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2''') == '1'\nassert solution('''1 1 2 2 5''') == '1'\nassert solution('''2 2''') == '0'\nassert solution('''1 3''') == '2'\nassert solution('''5 2''') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n2') == '1'\nassert solution('4\\n1') == '2'\nassert solution('4\\n2') == '2'\nassert solution('4\\n2') == '2'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('4\\n1\\n') == '3'\nassert solution('4\\n2\\n') == '0'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 4\\n1 1 2 2 5\") == \"0\"\nassert solution(\"7 3\\n1 1 2 2 3 4 5 6\") == \"0\"\nassert solution(\"7 4\\n1 1 2 2 3 4 5 6\") == \"1\"\nassert solution(\"7 5\\n1 1 2 2 3 4 5 6 7\") == \"0\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n\"\"\"\n\n\"\"\"\n---Submission Results---\nRuntime: 168 ms, faster than 24.40% of Python3 online submissions for Minimum Number of Balls in the Bin.\nMemory Usage: 15.8 MB, less than 62.63% of Python3 online submissions for Minimum Number of Balls in the Bin.\n\"\"\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == output(input(\"\"))\n\"\"\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 2\\n3 3 3 3 3 3') == '2'\nassert solution('5 2\\n1 2 1 1 1 1') == '2'\nassert solution('1 1\\n1') == '0'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2\\n6 1 1\\n') == 'Yes'\nassert solution('2\\n2 1 2\\n3 1 1\\n') == 'No'\nassert solution('1\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n11 0\\n12 0\\n13 0\\n14 0\\n15 0\\n16 0\\n17 0\\n18 0\\n19 0\\n20 0\\n21 0\\n22 0\\n23 0\\n24 0\\n25 0\\n26 0\\n27 0\\n28 0\\n29 0\\n30 0\\n31 0\\n32 0\\n33 0\\n34 0\\n35 0\\n36 0\\n37 0\\n38 0\\n39 0\\n40 0\\n41 0\\n42 0\\n43 0\\n44 0\\n45 0\\n46 0\\n47 0\\n48 0\\n49 0\\n50 0\\n51 0\\n52 0\\n53 0\\n54 0\\n55 0\\n56 0\\n57 0\\n58 0\\n59 0\\n60 0\\n61 0\\n62 0\\n63 0\\n64 0\\n65 0\\n66 0\\n67 0\\n68 0\\n69 0\\n70 0\\n71 0\\n72 0\\n73 0\\n74 0\\n75 0\\n76 0\\n77 0\\n78 0\\n79 0\\n80 0\\n81 0\\n82 0\\n83 0\\n84 0\\n85 0\\n86 0\\n87 0\\n88 0\\n89 0\\n90 0\\n91 0\\n92 0\\n93 0\\n94 0\\n95 0\\n96 0\\n97 0\\n98 0\\n99 0\\n100 0\\n') == 'Yes'\nassert solution('2\\n2 1 2\\n3 1 1\\n') == 'No'\nassert solution('2\\n2 1 2\\n3 1 1\\n4 1 1\\n5 1 1\\n6 1 1\\n7 1 1\\n8 1 1\\n9 1 1\\n10 1 1\\n11 1 1\\n12 1 1\\n13 1 1\\n14 1 1\\n15 1 1\\n16 1 1\\n17 1 1\\n18 1 1\\n19 1 1\\n20 1 1\\n21 1 1\\n22 1 1\\n23 1 1\\n24 1 1\\n25 1 1\\n26 1 1\\n27 1 1\\n28 1 1\\n29 1 1\\n30 1 1\\n31 1 1\\n32 1 1\\n33 1 1\\n34 1 1\\n35 1 1\\n36 1 1\\n37 1 1\\n38 1 1\\n39 1 1\\n40 1 1\\n41 1 1\\n42 1 1\\n43 1 1\\n44 1 1\\n45 1 1\\n46 1 1\\n47 1 1\\n48 1 1\\n49 1 1\\n50 1 1\\n51 1 1\\n52 1 1\\n53 1 1\\n54 1 1\\n55 1 1\\n56 1 1\\n57 1 1\\n58 1 1\\n59 1 1\\n60 1 1\\n61 1 1\\n62 1 1\\n63 1 1\\n64 1 1\\n65 1 1\\n66 1 1\\n67 1 1\\n68 1 1\\n69 1 1\\n70 1 1\\n71 1 1\\n72 1 1\\n73 1 1\\n74 1 1\\n75 1 1\\n76 1 1\\n77 1 1\\n78 1 1\\n79 1 1\\n80 1 1\\n81 1 1\\n82 1 1\\n83 1 1\\n84 1 1\\n85 1 1\\n86 1 1\\n87 1 1\\n88 1 1\\n89 1 1\\n90 1 1\\n91 1 1\\n92 1 1\\n93 1 1\\n94 1 1\\n95 1 1\\n96 1 1\\n97 1 1\\n98 1 1\\n99 1 1\\n100 1 1\\n') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 1') == 'No'\nassert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 1') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n3 1 2\n6 1 1''') == \"Yes\"\nassert solution('''4\n4 1 4\n1 4 2\n1 1 4\n1 2 3\n4 3 4\n4 4 4''') == \"No\"\nassert solution('''4\n6 1 4\n1 4 2\n1 1 4\n1 2 3\n4 3 4''') == \"Yes\"\nassert solution('''8\n4 1 6\n1 4 2\n1 1 4\n1 2 3\n4 3 4\n4 4 4\n4 4 4\n4 4 4''') == \"No\"\n'''\n'''\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == \"Yes\"\nassert solution('1\\n1 1 1') == \"Yes\"\nassert solution('2\\n1 2\\n2 1') == \"No\"\nassert solution('1\\n2\\n3\\n1') == \"No\"\nassert solution('1\\n3\\n1') == \"No\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n1 2 3\n2 1 3\n1 2 3\"\"\"\n) == \"No\"\nassert solution(\n\"\"\"3\n4 3 2\n3 2 2\n2 2 1\"\"\"\n) == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6') == 'Yes'\nassert solution('3\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\na b\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 'No'\nassert solution('2\\n3 2\\n6 3\\n9 2\\n12 3\\n15 2\\n18 2\\n21 2') == 'No'\nassert solution('3\\n0 0\\n1 1\\n2 2') == 'No'\nassert solution('2\\n3 2\\n5 3\\n8 2\\n11 3\\n14 2\\n17 2') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 2') == 'No'\nassert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n6 1 1\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 2') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n6 1 1\\n8 1 0\\n9 2 1') == 'No'\nassert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n2 1 1\\n4 1 0\\n5 2 1') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == '2'\nassert solution('10 9') == '11'\nassert solution('11 11') == '12'\nassert solution('100 100') == '100'\nassert solution('99 0') == '99'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\nprint(solution(stdin))"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 5') == '2'\nassert solution('1 1') == '2'\nassert solution('2 2') == '2'\nassert solution('2 1') == '3'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 5\") == \"7\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('2 3') == '4'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"10 12\") == \"11\"\nassert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"8\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"4 5\") == \"6\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"101 102\") == \"103\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == '2'\nassert solution('2 1') == '2'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == \"4\"\nassert solution('''7 7\n1 3\n1 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == \"4\"\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n5 6\n5 7\n6 7''') == \"4\"\nassert solution('''7 7\n1 3\n1 7\n1 8\n1 9\n3 4\n4 5\n4 6\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n13 14\n13 15\n13 16\n13 17\n13 18\n14 15\n14 16\n14 17\n14 18\n15 16\n15 17\n15 18\n16 17\n16 18\n17 18\n''') == \"24\"\nassert solution('''7 7\n1 3\n1 7\n1 8\n1 9\n3 4\n4 5\n4 6\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n7 19\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n8 17\n8 18\n8 19\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n9 19\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n14 15\n14 16\n14 17\n14 18\n14 19\n15 16\n15 17\n15 18\n15 19\n16 17\n16 18\n16 19\n17 18\n17 19\n18 19\n''') == \"40\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('1 2\\n2 3\\n3 1\\n') == '2'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '4'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '4'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\n\"\"\""
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7 7\") == \"4\"\nassert solution(\"7 5\") == \"1\"\nassert solution(\"7 6\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    7 7\n    1 3\n    2 7\n    3 4\n    4 5\n    4 6\n    5 6\n    6 7\n    '''\n    ) == '4'\n\nassert solution(\n    '''\n    5 5\n    1 2\n    2 3\n    3 4\n    4 5\n    4 1\n    '''\n    ) == '1'\n\nassert solution(\n    '''\n    5 5\n    1 2\n    2 3\n    3 4\n    4 5\n    4 1\n    4 1\n    '''\n    ) == '2'\n\nassert solution(\n    '''\n    3 3\n    1 2\n    2 3\n    3 1\n    '''\n    ) == '0'\n\nassert solution(\n    '''\n    6 5\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    5 4\n    '''\n    ) == '2'"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 7') == '4'\n\"\"\""
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split()[-1]\n\"\"\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 7''') == '4'\nassert solution('''1 3''') == '2'\nassert solution('''2 7''') == '1'\nassert solution('''3 4''') == '2'\nassert solution('''4 5''') == '1'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 7 5''') == '7'\nassert solution('''-1 -2 3''') == '-2'\nassert solution('''1 2 3''') == '-1'\nassert solution('''0 0 0''') == '-1'\nassert solution('''5 7 5''') == '7'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 7 5''') == '7'\nassert solution('''6 7 3''') == '6'\nassert solution('''5 7 7''') == '3'\nassert solution('''3 1 2''') == '2'\nassert solution('''1 2 2''') == '1'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('10 2 10') == '2'\nassert solution('9 2 9') == '2'\nassert solution('9 1 1') == '3'\nassert solution('9 9 9') == '3'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"5 7 5\") == \"7\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"4 3 2\") == \"3\"\nassert solution(\"5 7 5\") == \"7\"\nassert solution(\"7 7 7\") == \"7\"\nassert solution(\"-1 -2 -3\") == \"-1\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(5, 7, 5) == 7\n\"\"\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 2\nassert solution('1 2 5') == 3\nassert solution('1 2 1') == 5\nassert solution('5 7 5') == 1\nassert solution('3 2 3') == 1\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 22 40 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 22 40 50 100 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 22 40 50 100 200\") == \"110 10\"\nassert solution(\"1 2 10 22 40 50 100 200\") == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"110 110\"\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 19 15 200\") == \"110 10\"\nassert solution(\"1 2 19 19 15 200\") == \"110 10\"\nassert solution(\"1 2 19 19 19 15 200\") == \"110 10\"\nassert solution(\"1 2 19 19 19 19 15 200\") == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '-1 -1'\nassert solution('1 10 100 100 100 100 100 100') == '110 10'\nassert solution('1 1 100 100 100 100 100 100') == '110 10'\nassert solution('1 1 100 100 100 100 100 100') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 2 10 200') == '110 10'\nassert solution('1 2 10 2 10 200') == '110 10'\nassert solution('1 2 10 2 10 200') == '110 10'\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 10 15 200') == '110 10'\nassert solution('1 2 10 10 10 15 200') == '110 10'\nassert solution('1 1 10 10 10 10 15 200') == '110 10'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('india') == 'i18n'\nassert solution('sorted') =='srt'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('abc') == 'abc'\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\nassert solution('internationalization') == 'i18n'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('hello') == 'hl'\nassert solution('world') == 'w'\nassert solution('one') == 'o'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"hello\") == \"hl\"\nassert solution(\"hello world\") == \"hlw\"\nassert solution(\"internationalization\") == \"i18n\"\nassert solution(\"hello world\") == \"hlw\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''internationalization'''\n) == 'i18n'\nassert solution(\n'''i18n'''\n) == 'i18n'\nassert solution(\n'''internationalization'''\n) == 'i18n'\nassert solution(\n'''internationalization'''\n) == 'i18n'\nassert solution(\n'''i18n'''\n) == 'i18n'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('internationalization') == 'i18n'"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"deletetion\") == \"del\"\nassert solution(\"pneumonoultramicroscopicsilicovolcanoconiosis\") == \"pnu2m6s4o5sc5ic6o6s4\"\nassert solution(\"pneumonoultramicroscopicsilicovolcanoconiosis\") == \"pnu2m6s4o5sc5ic6o6s4\"\nassert solution(\"pneumonoultramicroscopicsilicovolcanoconiosis\") == \"pnu2m6s4o5sc5ic6o6s4\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n\nassert solution('pot') == 'NO'\nassert solution('top') == 'NO'\n\nassert solution('pot') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n\nassert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n\nassert solution('pot') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''C1C2C3''') == 'YES'\nassert solution('''C1C2C3''') == 'NO'\nassert solution('''C1C1C1''') == 'YES'\nassert solution('''C1C2C3''') == 'NO'\nassert solution('''C1C2C3''') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('pot') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('top') == 'YES'\nassert solution('pot') == 'NO'\nassert solution('pot') == 'YES'\nassert solution('top') == 'NO'\nassert solution('top') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES'\nassert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('potabc') == 'NO'\nassert solution('potabc') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES'\n\nassert solution('') == 'NO'\n\nassert solution('pot') == 'NO'\n\nassert solution('top') == 'YES'\n\nassert solution('x,x,x') == 'NO'"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n\"\"\""
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"top2\") == \"NO\"\nassert solution(\"pot2\") == \"NO\"\nassert solution(\"pot2\") == \"NO\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba', 3) == 'b'\nassert solution('ab', 2) == 'b'\nassert solution('abc', 3) == 'c'\nassert solution('abcd', 4) == 'cd'\nassert solution('abcda', 3) == 'ad'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aba', 3) == 'b'\nassert solution('abc', 3) == 'abc'\nassert solution('z', 3) == 'z'\nassert solution('ab', 3) == 'ab'\nassert solution('abcabcabc', 3) == 'abc'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('ab', 2) == 'a'\nassert solution('abcd', 3) == 'c'\nassert solution('abc', 1) == 'a'\nassert solution('abcd', 5) == 'd'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aba', 2) == 'b'\nassert solution('aba', 4) == 'ba'\nassert solution('abab', 2) == 'ab'\nassert solution('abab', 3) == 'ab'\nassert solution('ababc', 2) == 'ab'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('ab', 4) == 'b'\nassert solution('ab', 1) == 'a'\nassert solution('abcd', 1) == 'a'\nassert solution('abcd', 2) == 'ab'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('abab', 4) == 'ab'\nassert solution('abab', 6) == ''\nassert solution('abab', 1) == 'a'\nassert solution('abab', 2) == 'ab'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('abc', 1) == 'c'\nassert solution('abc', 2) == 'c'\nassert solution('abcd', 2) == 'cd'\nassert solution('abc', 3) == 'bc'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcd', 1) == 'b'\nassert solution('abcd', 2) == 'cd'\nassert solution('abcd', 3) == 'cd'\nassert solution('abcd', 4) == 'cd'\nassert solution('abcd', 5) == 'cd'\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ababc', 4) == 'b'\nassert solution('ac', 3) == 'a'\nassert solution('a', 1) == 'a'\nassert solution('aaaaa', 4) == 'a'\nassert solution('aaaa', 3) == 'aaa'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n3 3 4') == '18'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n3 3 4\\n3 3 4') == '18'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n3 3 4\\n3 3 4') == '18'\nassert solution('5 4 2\\n2 1 1\\n3 3 4\\n3 3 4\\n3 3 4\\n3 3 4') == '18'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('3 3 4') == '9'\nassert solution('2 1 1') == '9'\nassert solution('1 1 3') == '9'\nassert solution('0 0 4') == '4'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\nassert solution('1 1 1\\n3 3 4\\n4 4 4\\n2 2 2\\n1 1 1') == '0'\nassert solution('5 10 1\\n5 5 4\\n1 1 2\\n5 5 4\\n2 2 1\\n5 5 4\\n4 4 4') == '180'\nassert solution('2 2 1\\n1 1 1\\n2 2 1\\n2 2 1') == '0'\nassert solution('5 10 1\\n5 5 4\\n1 1 2\\n5 5 4\\n2 2 1\\n5 5 4\\n4 4 4') == '0'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\"\nassert solution(\"4 5 1\\n1 2 1\\n1 1 2\\n1 3 4\\n2 1 3\\n3 3 4\\n3 1 4\\n1 1 1\\n2 2 1\\n2 1 2\\n2 3 4\\n3 1 4\\n3 2 4\\n\") == \"9\"\nassert solution(\"5 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n2 2 1\\n2 1 2\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n3 1 4\\n3 1 4\\n\") == \"9\"\nassert solution(\"5 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n2 2 1\\n2 1 2\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n3 1 4\\n3 1 4\\n\") == \"9\"\nassert solution(\"5 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n2 1 1\\n3 3 3\\n1 2 1\\n1 1 2\\n1 3 3\\n3 1 4\\n3 1 4\\n\") == \"9\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"3 3 4\") == \"9\"\nassert solution(\"5 5 2\") == \"10\"\nassert solution(\"3 3 2\") == \"10\"\nassert solution(\"3 3 3\") == \"11\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''10 10 3\n2 2 3\n5 5 6\n8 8 9''') == '25'\nassert solution('''8 8 4\n8 8 4\n4 4 2''') == '16'\nassert solution('''5 10 2\n8 8 4\n4 4 2''') == '8'\nassert solution('''4 6 5\n8 6 4\n4 4 2''') == '12'\n'''\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5 2\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''2 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''5 6 3\n1 2 1\n1 3 2\n1 4 3\n2 3 4\n2 4 4''') == '12'\nassert solution('''8 5 1\n5 3 1\n4 3 2\n7 3 2\n5 2 3\n5 4 3\n1 4 2\n8 4 3''') == '0'\nassert solution('''8 5 1\n5 3 1\n4 3 2\n7 3 2\n5 2 3\n5 4 3\n1 4 2\n8 4 3''') == '20'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"5 4 2\n2 1 1\n3 3 4\"\"\"\n    ) == \"9\"\n\"\"\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('3 2 2 1') == '3 2 1'\nassert solution('10 3 10 2') == '10 3 2'\nassert solution('3 3 1 1') == '3 3 1'\nassert solution('2 2 2 2') == '2 2 2'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '0'\nassert solution('1 1 1') == '1'\nassert solution('2 3 1') == '0'\nassert solution('2 2 1') == '1'\nassert solution('1 4 1') == '2'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n6 5 1') == '12\\n11\\n0'\nassert solution('2\\n6 5 1') == '11\\n0'\nassert solution('2\\n6 5 1\\n1 10 1') == '11\\n0\\n1'\nassert solution('3\\n6 5 1\\n1 10 1\\n1 10 1') == '12\\n11\\n0\\n1'\nassert solution('2\\n6 5 1\\n1 10 1\\n1 10 1\\n1 10 1') == '11\\n0\\n1\\n1'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\""
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\nInputs:\n    - i\n    - C_1 S_1 F_1\n    - C_{N-1} S_{N-1} F_{N-1}\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"0\\n1\\n2\\n3\""
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\\n1 3 5\") == \"5\"\nassert solution(\"2 4 3\\n1 3 2\") == \"1\"\nassert solution(\"1 2 3\\n1 3 2\") == \"3\"\nassert solution(\"1 2 3\\n1 3 3\") == \"1\"\nassert solution(\"2 2 2\\n1 2 1\") == \"2\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3\\n3\\n3\\n\"\nassert solution(\"3 5 1\") == \"3\\n3\\n0\\n\"\nassert solution(\"2 1 2\") == \"1\\n1\\n1\\n\"\nassert solution(\"1 10 1\") == \"0\\n0\\n0\\n\"\n\"\"\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n3 3 1') == '12\\n11\\n0'\nassert solution('2\\n4 3 1') == '10\\n11\\n0'\nassert solution('3\\n5 2 1') == '11\\n12\\n0'\nassert solution('4\\n3 3 1') == '9\\n10\\n0'\nassert solution('5\\n2 3 1') == '8\\n9\\n0'\n"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n6 5 1\n1 10 1\n\"\"\") == \"\"\"\n12\n11\n0\n\"\"\"\nassert solution(\n\"\"\"\n3\n6 5 1\n1 10 1\n\"\"\") == \"\"\"\n12\n11\n0\n\"\"\"\nassert solution(\n\"\"\"\n3\n6 5 1\n1 10 1\n\"\"\") == \"\"\"\n12\n11\n0\n\"\"\"\nassert solution(\n\"\"\"\n3\n6 5 1\n1 10 1\n\"\"\") == \"\"\"\n12\n11\n0\n\"\"\"\nassert solution(\n\"\"\"\n3\n6 5 1\n1 10 1\n\"\"\") == \"\"\"\n12\n11\n0\n\"\"\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n.\\n.*\") == \".\\n.*\"\n\"\"\"\nH, W = list(map(int, stdin.split()))\nA = stdin.strip()\nprint(A[:H] + A[::2] + A[H::2] + A[1::2])\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '*.*\\n.*.*'\nassert solution('3 3') == '***\\n.*.*\\n.*.*\\n.*.*'\nassert solution('3 3\\n..\\n.\\n.\\n.*') == '***\\n.*.*\\n.*.*\\n.*.*'\nassert solution('3 2\\n..\\n.\\n.\\n.*') == '*..\\n.*.\\n.*.*'\nassert solution('3 2\\n.\\n.*\\n.*') == '*.*\\n.*.*'\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\".*..\") == \".*..\"\nassert solution(\"*.*.\") == \"**..\"\nassert solution(\"..*.\") == \".*..\"\nassert solution(\"..*.\") == \".*..\"\nassert solution(\"*.*.\") == \"**..\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\".*.\") == \"*.\\n*.\\n*.\\n*.\\n\"\nassert solution(\"..*\") == \"*.*\\n*.*\\n*.*\\n*.*\"\nassert solution(\"*.*\") == \"*.*\\n*.*\\n*.*\\n*.*\"\nprint(\"Testcase 1 passed.\")\n\nassert solution(\"*.*\") == \"*.*\\n*.*\\n*.*\\n*.*\"\nprint(\"Testcase 2 passed.\")\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\n.\\n.\\n') == '.*\\n.*\\n.*'\nassert solution('2 3\\n.*.\\n.*\\n') == '.*\\n.*\\n.*\\n.*\\n.*'\nassert solution('1 1\\n*') == '*'\nassert solution('2 2\\n.*\\n.*') == '.*\\n.*\\n.*\\n.*'\nassert solution('10 10\\n*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*') == '.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*'\nprint('Passed')\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"..*\") == \".*..*\"\nassert solution(\"***.***\") == \"***.*.*.*\"\nassert solution(\"*.**.**.**\") == \"*.*.*.*.*\"\nassert solution(\"**.**.***\") == \".*.*.*.*.*\"\nassert solution(\"**.**.*.*\") == \"*.*.*.*.*.*\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"..*.*.*\") == \".*.\\n.*.\\n.*.\\n.*.\"\nassert solution(\"******\") == \"***\\n**\\n*\\n**\"\nassert solution(\"**..*\") == \"**..\\n**..\\n*..\\n**..\"\nassert solution(\"*******\") == \"*.*.*.*.*.*.*.*.*.*.*.*.*.*.\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\\n*.*.*.*.*.*.*.*.*.*.*.*.*.*"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == input\n\n'''"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n.\\n.*') == '\\n.*\\n.*'\nassert solution('1 1\\n.\\n.\\n.\\n.\\n.*') == '\\n.\\n.*\\n.*\\n.*'\nassert solution('2 3\\n..\\n...\\n...\\n.*\\n.*') == '..\\n.*\\n.*\\n.*\\n.*'\nassert solution('2 3\\n.*\\n.*\\n.*\\n.*') == '.*\\n.*\\n.*\\n.*\\n.*'\nassert solution('2 3\\n.*\\n.*\\n.*\\n.*\\n.*') == '.*\\n.*\\n.*\\n.*\\n.*\\n.*'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 6 1 4 5') == \"YES\"\nassert solution('3\\n1 2 2') == \"NO\"\nassert solution('3\\n1 2 1') == \"YES\"\nassert solution('10\\n
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == 'YES'\nassert solution('1 1 1 1 1') == 'NO'\nassert solution('1 2 2 3 4 5 6 7 8 9 10') == 'YES'\nassert solution('1 2 2 3 3 4 4 4 5 5') == 'NO'\nassert solution('1 2 2 2 3 3 4 4 4') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 6 1 4 5') == 'YES'\nassert solution('2 6 1 4 3') == 'NO'\nassert solution('1 2 1 3 2') == 'NO'\nassert solution('1 2 2 3 3') == 'YES'\nassert solution('1 2 2 3 1') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES'\n'''\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 6 1 4 5') == 'YES'\nassert solution('2 6 1 4 5') == 'YES'\nassert solution('2 3 1 4 3') == 'NO'\nassert solution('2 3 1 4 2') == 'YES'\nassert solution('2 2 1 1 1') == 'NO'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n2 6 1 4 5\n'''\n    ) == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 6 1 4 5\") == \"YES\"\nassert solution(\"1 9 1 1 9\") == \"YES\"\nassert solution(\"2 6 1 4 5\") == \"NO\"\nassert solution(\"1 9 1 1 9\") == \"NO\"\nassert solution(\"2 6 1 4 5\") == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n2 6 1 4 5''') == \"NO\"\nassert solution('''5\n2 6 1 4 5''') == \"YES\"\nassert solution('''6\n2 6 1 4 5 6''') == \"NO\"\nassert solution('''6\n2 6 1 4 5 6''') == \"YES\"\nassert solution('''6\n2 4 1 4 5 6''') == \"YES\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 6 1 4 5') == \"YES\"\nassert solution('2 6 1 4 5') == \"NO\"\nassert solution('2 5 1 2 3 4') == \"NO\"\nassert solution('2 5 1 2 3 4') == \"NO\"\nassert solution('1 1') == \"YES\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '4'\nassert solution('1\\n5') == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"2\"\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"3\"\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"4\"\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"5\"\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"6\""
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2') == '2'\nassert solution('2\\n2\\n1 1\\n1 1') == '2'\nassert solution('4\\n1 2 2 1 2 1\\n3') == '4'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('6\\n1 1 1 1 1 1 1\\n1') == '1'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('3\\n1\\n') == '2'\nassert solution('2\\n2\\n') == '0'\nassert solution('3\\n2\\n') == '1'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('2\\n1') == '3'\nassert solution('3\\n1') == '1'\nassert solution('1\\n2') == '2'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\nassert solution('1\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '3'\nassert solution('1\\n5\\n1 2 3 4 5\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\nassert solution('1\\n5\\n1 2 3 4 5\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '6'\nassert solution('1\\n5\\n1 2 3 4 5\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '6'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''4\n7 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''6\n7 3\n1 5\n22 5\n987 13''') == '5'\nassert solution('''10\n5\n2 2''') == '4'\nassert solution('''5\n10\n2 2''') == '3'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n7 3\\n1 5') == '3'\nassert solution('2\\n7 3\\n1 5') == '1'\nassert solution('3\\n7 3\\n1 5') == '5'\nassert solution('4\\n7 3\\n1 5') == '77'\nassert solution('5\\n7 3\\n1 5') == '5'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''7 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''7 3\n1 5\n22 5\n987 13''') == '5'\nassert solution('''7 3\n1 5\n22 5\n987 13''') == '77'\nassert solution('''7 3\n2 5\n22 5\n987 13''') == '6'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '77'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '75'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n2 8\n3 9\n3 10\n4 11\n4 12\n4 13\n''') == '1'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77'\nassert solution('5\\n5\\n7 3\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77'\nassert solution('3\\n5\\n5\\n7 3\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77'\nassert solution('1\\n5\\n5\\n7 3\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77'\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('codeforces') == \"9 4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('abca') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('codeforces') == \"9 4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('codeforce') == \"9 4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('codeforce') == \"9 4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\"\n) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\n\"\nassert solution(\n    \"\"\"3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\"\n) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\n\"\nassert solution(\n    \"\"\"3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\"\n) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\n\"\nassert solution(\n    \"\"\"3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\"\n) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\n\"\nassert solution(\n    \"\"\"3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\"\n) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\n\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'''\n\nassert solution(\n'''26\n2 26\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '''0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'''\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abca') == 'a'\nassert solution('codeforces') == 'c'\nassert solution('codefor') == 'f'\nassert solution('codeforco') == 'o'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''3 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''3 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(\"codeforces\") == '0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution(\"codeforce\") == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution(\"codeforces\") == '0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\n\n\n-----Alternative solutions (Faster)-----"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''abca\n1 3\nabca\n1 3\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''codeforces\n2 8 3 2 9\n26 10\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''codeforces\n2 8 3 2 9\n26 10\ncodeforces\n2 8 3 2 9\n26 10\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''codeforces\n2 8 3 2 9\n26 10\ncodeforces\n2 8 3 2 9\n26 10\ncodeforces\n2 8 3 2 9\n26 10\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''codeforces\n2 8 3 2 9\n26 10\ncodeforces\n2 8 3 2 9\n26 10\ncodeforces\n2 8 3 2 9\n26 10\ncodeforces\n2 8 3 2 9\n26 10\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10''') == '''4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n\n'''\nThe tests are similar to the ones in HackerRank.\n\nCheck if two strings are anagrams\n'''\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''2 2\nabc\n1 3\n10 5\nqwertyuioplkjhgfdsazxcvbnm\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\nfrom collections import Counter\n\nt = int(sys.stdin.readline().strip())\nfor _ in range(t):\n    n, m = map(int, sys.stdin.readline().strip().split(' '))\n    s = sys.stdin.readline().strip()\n    p = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    c = Counter(s)\n    s = ''.join(sorted(s))\n    d = {}\n    for i in range(1, len(s)+1):\n        d[s[-i]] = i\n    ans = [0]*26\n    for i in range(n):\n        ans[d[s[i]]] += p[i]\n    for i in range(1, 26):\n        ans[i] += ans[i-1]\n    print(' '.join(map(str, ans)))\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n3 2 7\n3 2 8''') == '36'\nassert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n3 2 7\n3 2 8''') == '0'\nassert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n3 2 7\n3 2 8''') == '0'\nassert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n3 2 7\n3 2 8''') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n3 2 7\n3 2 8\n3 2 9\n3 2 10\n3 2 11\n3 2 12\n3 2 13\n3 2 14\n3 2 15\n3 2 16\n3 2 17\n3 2 18\n3 2 19\n3 2 20\n3 2 21\n3 2 22\n3 2 23\n3 2 24\n3 2 25\n3 2 26\n3 2 27\n3 2 28\n3 2 29\n3 2 30\n3 2 31\n3 2 32\n3 2 33\n3 2 34\n3 2 35\n3 2 36\n3 2 37\n3 2 38\n3 2 39\n3 2 40\n3 2 41\n3 2 42\n3 2 43\n3 2 44\n3 2 45\n3 2 46\n3 2 47\n3 2 48\n3 2 49\n3 2 50\n3 2 51\n3 2 52\n3 2 53\n3 2 54\n3 2 55\n3 2 56\n3 2 57\n3 2 58\n3 2 59\n3 2 60\n3 2 61\n3 2 62\n3 2 63\n3 2 64\n3 2 65\n3 2 66\n3 2 67\n3 2 68\n3 2 69\n3 2 70\n3 2 71\n3 2 72\n3 2 73\n3 2 74\n3 2 75\n3 2 76\n3 2 77\n3 2 78\n3 2 79\n3 2 80\n3 2 81\n3 2 82\n3 2 83\n3 2 84\n3 2 85\n3 2 86\n3 2 87\n3 2 88\n3 2 89\n3 2 90\n3 2 91\n3 2 92\n3 2 93\n3 2 94\n3 2 95\n3 2 96\n3 2 97\n3 2 98\n3 2 99\n3 2 100\n3 2 101\n3 2 102\n3 2 103\n3 2 104\n3 2 105\n3 2 106\n3 2 107\n3 2 108\n3 2 109\n3 2 110\n3 2 111\n3 2 112\n3 2 113\n3 2 114\n3 2 115\n3 2 116\n3 2 117\n3 2 118\n3 2 119\n3 2 120\n3 2 121\n3 2 122\n3 2 123\n3 2 124\n3 2 125\n3 2 126\n3 2 127\n3 2 128\n3 2 129\n3 2 130\n3 2 131\n3 2 132\n3 2 133\n3 2 134\n3 2 135\n3 2 136\n3 2 137\n3 2 138\n3 2 139\n3 2 140\n3 2 141\n3 2 142\n3 2 143\n3 2 144\n3 2 145\n3 2 146\n3 2 147\n3 2 148\n3 2 149\n3 2 150\n3 2 151\n3 2 152\n3 2 153\n3 2 154\n3 2 155\n3 2 156\n3 2 157\n3 2 158\n3 2 159\n3 2 160\n3 2 161\n3 2 162\n3 2 163\n3 2 164\n3 2 165\n3 2 166\n3 2 167\n3 2 168\n3 2 169\n3 2 170\n3 2 171\n3 2 172\n3 2 173\n3 2 174\n3 2 175\n3 2 176\n3 2 177\n3 2 178\n3 2 179\n3 2 180\n3 2 181\n3 2 182\n3 2 183\n3 2 184\n3 2 185\n3 2 186\n3 2 187\n3 2 188\n3 2 189\n3 2 190\n3 2 191\n3 2 192\n3 2 193\n3 2 194\n3 2 195\n3 2 196\n3 2 197\n3 2 198\n3 2 199\n3 2 200\n3 2 201\n3 2 202\n3 2 203\n3 2 204\n3 2 205\n3 2 206\n3 2 207\n3 2 208\n3 2 209\n3 2 210\n3 2 211\n3 2 212\n3 2 213\n3 2 214\n3 2 215\n3 2 216\n3 2 217\n3 2 218\n3 2 219\n3 2 220\n3 2 221\n3 2 222\n3 2 223\n3 2 224\n3 2 225\n3 2 226\n3 2 227\n3 2 228\n3 2 229\n3 2 230\n3 2 231\n3 2 232\n3 2 233\n3 2 234\n3 2 235\n3 2 236\n3 2 237\n3 2 238\n3 2 239\n3 2 240\n3 2 241\n3 2 242\n3 2 243\n3 2 244\n3 2 245\n3 2 246\n3 2 247\n3 2 248\n3 2 249\n3 2 250\n3 2 251\n3 2 252\n3 2 253\n3 2 254\n3 2 255\n3 2 256\n3 2 257\n3 2 258\n3 2 259\n3 2 260\n3 2 261\n3 2 262\n3 2 263\n3 2 264\n3 2 265\n3 2 266\n3 2 267\n3 2 268\n3 2 269\n3 2 270\n3 2 271\n3 2 272\n3 2 273\n3 2 274\n3 2 275\n3 2 276\n3 2 277\n3 2 278\n3 2 279\n3 2 280\n3 2 281\n3 2 282\n3 2 283\n3 2 284\n3 2 285\n3 2 286\n3 2 287\n3 2 288\n3 2 289\n3 2 290\n3 2 291\n3 2 292\n3 2 293\n3 2 294\n3 2 295\n3 2 296\n3 2 297\n3 2 298\n3 2 299\n3 2 300\n3 2 301\n3 2 302\n3 2 303\n3 2 304\n3 2 305\n3 2 306\n3 2 307\n3 2 308\n3 2 309\n3 2 310\n3 2 311\n3 2 312\n3 2 313\n3 2 314\n3 2 315\n3 2 316\n3 2 317\n3 2 318\n3 2 319\n3 2 320\n3 2 321\n3 2 322\n3 2 323\n3 2 324\n3 2 325\n3 2 326\n3 2 327\n3 2 328\n3 2 329"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n'''\n\n3\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n\n'''"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 3 4''') == '0'\nassert solution('''10\n10 10 10\n1 1 1\n3 2 5\n3 2 6''') == '36'\nassert solution('''5\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '9999999994'\nassert solution('''7\n10\n10 10 10\n1 1 1\n3 2 5\n3 2 6\n4 5 7\n1 1 1\n1 1 1\n3 2 5\n3 2 6''') == '9999999994'\nassert solution('''10\n10\n10 10 10\n1 1 1\n3 2 5\n3 2 6\n4 5 7\n1 1 1\n1 1 1\n3 2 5\n3 2 6''') == '9999999994'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('10 1 1') == '1'\nassert solution('3 3 4') == '0'\nassert solution('10 20 30') == '36'\nassert solution('5 5 5') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6'''\n) == '0'\n\nassert solution(\n'''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6'''\n) == '36'\n\nassert solution(\n'''8\n2 2 3\n1 2 3\n1 3 1\n1 2 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1'''\n) == '0'\n\nassert solution(\n'''4\n1 1 1\n1 1 1\n1 1 1\n1 1 1'''\n) == '999999999'\n\nassert solution(\n'''4\n1 1 1\n1 1 1\n1 1 1\n1 1 1'''\n) == '999999999'"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '36'\nassert solution('''10\n2 2 5\n1 1000000000 999999999\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''10\n2 2 5\n1 1000000000 999999999\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '2'\nassert solution('''10\n2 2 5\n1 1000000000 999999999\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '4'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n2') == 'YES'\nassert solution('2\\n1\\n3') == 'NO'\nassert solution('2\\n1\\n4') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''\n4\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n\nassert solution('''\n4\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''\n4\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n\nassert solution('''\n4\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6') == 'NO'\nassert solution('12 13') == 'NO'\nassert solution('1 2 1 3 4 5 6') == 'NO'\nassert solution('1 2 3 4 5 6 7 8') == 'NO'\nassert solution('2 4 4 4 4 4') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8') == 'YES\\n'\nassert solution('7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8') == 'NO\\n'\n\n\n\n'''\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('5') == 'NO'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 1 1 1') == 'YES'\nassert solution('1 2 3 4 5 6 7 8') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''8\n27\n1 9 9 3 1 1 9 9 9 3\n2\n1 3 1 3 1 3 1 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3 3 3 3 3 3 3 1\n1\n1 3 3"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8') == 'YES'\nassert solution('2\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('5\\n3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3') == 'YES'"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == 'YES'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('asdf') == ''\nassert solution('1 2 3 4 5') == 'YES'\nassert solution('12 14 16 12') == 'YES'\nassert solution('1 1 1 1') == 'NO'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\") == \"22\"\nassert solution(\"\"\"5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\") == \"13\""
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 5\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == 22\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == 13\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == 13\n\n\n\"\"\"\nfrom sys import stdin,stdout"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7 4\") == \"5\"\nassert solution(\"7 2\") == \"8\"\nassert solution(\"1 5 2\") == \"3\"\nassert solution(\"7 2\") == \"8\"\nassert solution(\"7 4\") == \"5\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1 2') == '22'\nassert solution('1 2 5') == '22'\nassert solution('2 3 7') == '22'\nassert solution('2 4 4') == '22'\nassert solution('4 5 2') == '22'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''7 7 6\n1 2 1\n2 3 2\n3 4 3\n4 5 2\n5 6 1\n6 7 1\n''') == '31'\nassert solution('''10 10 2\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 6 1\n6 7 1\n1 7 1\n6 7 1\n1 8 1\n7 8 1\n8 9 1\n7 9 1\n7 9 1\n7 9 1\n7 9 1\n''') == '48'\nassert solution('''10 10 2\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 6 1\n6 7 1\n1 7 1\n6 7 1\n1 8 1\n7 8 1\n8 9 1\n7 9 1\n7 9 1\n7 9 1\n7 9 1\n7 9 1\n''') == '49'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 5 2') == '22'\nassert solution('5 5 4') == '13'\nassert solution('1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '13'\nassert solution('2 5 4\\n1 2 5\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"13\"\n\n'''\n"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 5 2\") == 22\nassert solution(\"5 5 4\") == 13\nassert solution(\"1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\") == 22\nassert solution(\"3 6 4\") == 13\nassert solution(\"5 6 2\\n3 4 7\\n1 4 3\\n1 6 1\\n4 5 2\\n4 6 8\") == 13\n\n\"\"\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n'''"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n7\\n1') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n7\\n1000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n7\\n100000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n7\\n10000000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n7\\n100000000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n\n'''\nNotes\n\n- To make it faster, you may want to store \"fibonacci\" numbers in a table of size $n \\times 2$ and check if there is a table element equal to the sum of the $m$-th, $(m+1)$-th and $(m+2)$-th numbers.\n- For example, for $n = 10$ the table can look like this:"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('''1\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n0\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n6') == '1'\nassert solution('1\\n13') == '1'\nassert solution('1\\n14') == '1'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1\\n3\\n9\\n27\\n6561\\n19683\\n'\n'''\n\"\"\""
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('inputs/lab_8/1.in') == '1 1 1 1 1'\nassert solution('inputs/lab_8/2.in') == '3 3 3 3 3 3'\nassert solution('inputs/lab_8/3.in') == '2 3 3 2 3 2 1 3'\nassert solution('inputs/lab_8/4.in') == '1 1 1 1 1 1'\nassert solution('inputs/lab_8/5.in') == '5 5 5 5 5 5'\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1 1 1') == '1 1 1 1 1'\nassert solution('1 1 1 1 1\\n3 3 3 3 3\\n1 2 3 1\\n5\\n5 1 2 4 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3 3 3\\n1 2 3 1\\n5\\n5 1 2 4 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3'\nassert solution('1\\n2\\n3') == '1 1 1 1\\n3 3 3 3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n\n'''\nThe sequence of books is modified in the following way: The book of the $i$-th kid is passed to the following kids: after the $i$-th day it will belong to the $p_i$-th kid.\n\nFor example, if $n=6$ and $p=[4, 6, 1, 3, 5, 2]$ then the first day the book of the $1$-st kid will belong to the $4$-th kid, the $2$-nd day it will belong to the $6$-th kid and so on. After the second day the book of the $1$-st kid will belong to the $3$-th kid, the $2$-nd day it will belong to the $2$-th kid and so on.\n\nYou have to answer $q$ independent queries.\n\nFor each query, print the answer on it: $n$ integers $a_1, a_2, \\dots, a_n$, where $a_i$ is the number of the day the book of the $i$-th child is returned back to him for the first time in this query.\n\nInput\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\nOutput\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n4\\n4\\n4\\n4') == '1 1 1 1 1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1 1 1 1 1'\nassert solution('4\\n1\\n4\\n2\\n3') == '3 3 3'\nassert solution('5\\n4\\n5\\n4\\n5') == '3 3 3'\nassert solution('1\\n1\\n1\\n1\\n1') == '1 1 1 1 1'\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n6\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"4\\n6\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"4\\n6\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"4\\n6\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"4\\n6\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 6\n1 5\n''') == '8'\n\nassert solution(\n'''3 5\n0 3 1\n''') == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 6\n1 5''') == '8'\nassert solution('''3 5\n0 3 1''') == '7'\nassert solution('''2 5\n0 3 1''') == '7'\nassert solution('''4 5\n0 3 1 2 4''') == '7'\nassert solution('''5 5\n0 3 1 2 4 3''') == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1\\n') == '8'\nassert solution('3\\n0\\n1\\n') == '7'\nassert solution('4\\n-1\\n0\\n-1\\n1\\n') == '7'\nassert solution('4\\n0\\n1\\n') == '7'\nassert solution('4\\n1\\n0\\n') == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n0') == '0'\nassert solution('2\\n0') == '1'\nassert solution('2\\n0\\n0') == '0'\nassert solution('2\\n0\\n1') == '0'\nassert solution('2\\n0\\n2') == '2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 4') == '1'\nassert solution('2 4 3') == '1'\nassert solution('2 4 3 5') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5\\n1 5') == '8\\n-1 2 6 4 0 3'\nassert solution('2 6\\n1 5') == '7\\n5 -2 4 -1 2'\nassert solution('3 5\\n0 3 1') == '7\\n5 -2 4 -1 2'\nassert solution('4 5\\n-1 3 1 5\\n-2 4 3 7') == '10\\n-1 3 1 4 7'\nassert solution('5 5\\n-1 3 1 5\\n-2 4 3 7') == '10\\n-1 3 1 4 7'\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\n-----Template---"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3''') == 'YES'\nassert solution('''10\n10\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''10\n10\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\nassert solution('''10\n10\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''10\n10\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == answer_string\n\n\"\"\"\n\nfrom typing import List\n\nimport sys"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES\\nRUUURRRRUU\\nNO\\nYES'\n\nassert solution(\n'''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES\\nRUUURRRRUU\\nNO\\nYES'\n\nassert solution(\n'''4\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'NO\\nYES\\nYES\\nYES'\n\nassert solution(\n'''4\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'NO\\nYES\\nYES\\nYES'\n\nassert solution(\n'''4\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1''') == 'YES'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1''') == 'NO'\nassert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES'\nassert solution('''10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'YES'\nassert solution('''100\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == \"YES\"\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"RUUURRRRUU\"\n\n\"\"\"\n\n\nfrom typing import List"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(example)) == '8'\n\"\"\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n0') == '0'\nassert solution('1\\n0\\n0') == '0'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n0') == '0'\nassert solution('1\\n1\\n0') == '0'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('500 4') == '2'\nassert solution('217871987498122 10') == '2'\nassert solution('100000000000000001 1') == '8'\nassert solution('50 70') == '8'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '2'\nassert solution('500 4') == '500'\nassert solution('217871987498122 10') == '899999999999999999'\nassert solution('100000000000000001 1') == '8'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '8'\nassert solution(stdin) == '0'\nassert solution(stdin) == '500'\nassert solution(stdin) == '2128012501878'\nassert solution(stdin) == '899999999999999999'\n\"\"\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 1''') == '0'\nassert solution('''5\n2 1''') == '8'\nassert solution('''10\n1 1''') == '10'\nassert solution('''100000000000000001 1''') == '0'\nassert solution('''100000000000000001 2''') == '10'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('10 22') == '8'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('0') == '0'\nassert solution('1000000') == '1'\nassert solution('100000000') == '2'\n"
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8\\n0\\n500\\n2128012501878\\n899999999999999999'\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8\\n0\\n500\\n2128012501878\\n899999999999999999'\nassert solution('''6\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '5\\n0\\n500\\n2128012501878\\n899999999999999999'\nassert solution('''8\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '5\\n0\\n500\\n2128012501878\\n899999999999999999'\nassert solution('''9\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8\\n0\\n500\\n2128012501878\\n899999999999999999'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdef') == '12'\nassert solution('aabccccdddeee') == '4'\nassert solution('abcd') == '1'\nassert solution('aa') == '0'\nassert solution('abc') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '2'\nassert solution('''0\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\nassert solution('''0\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''0\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''0\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0') == '2'\nassert solution('3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '0'\nassert solution('2\\n5\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1') == '2'\nassert solution('2\\n5\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1') == '2'\nassert solution('2\\n5\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"2\\n0\\n2\\n4\\n1\"\n\nassert solution(\"\"\"\n1\n1\n0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n1\n0\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"2\\n0\\n2\\n4\\n1\""
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0\\n4') == '2'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1') == '2'\nassert solution('1\\n0') == '0'\nassert solution('5\\n1 1 0 0 1') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7\n3\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''4\n7\n0 0 1 0 1 0 1\n4\n1 0 0\n4\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''2\n4\n0 0 1 0 1\n3\n1 0 0\n3\n1 1 0 0 1\n3\n1 0 0 0 0 1\n3\n1 1 0 1 1\n''') == '0'\nassert solution('''2\n4\n0 0 1 0 1\n3\n1 0 0\n3\n1 1 0 0 1\n3\n1 0 0 0 0 1\n3\n1 1 0 1 1\n''') == '0'\nassert solution('''2\n4\n0 0 1 0 1\n3\n1 0 0\n3\n1 1 0 0 1\n3\n1 0 0 0 0 1\n3\n1 1 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0\\n2\\n1 1') == '0'\nassert solution('2 0\\n2\\n1 1') == '1'\nassert solution('3 0\\n2\\n1 1') == '2'\nassert solution('3 0\\n2\\n1 1') == '2'\nassert solution('3 0\\n2\\n1 1') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2\\n0\\n2\\n4\\n1'\nassert solution('''6\n4\n1 0 0 0 0 1\n1 0 0 0 0 1\n2\n0 1 0 1 0\n2\n1 0 0 0 0\n3\n1 1 0 1 1\n4\n1 0 0 0 0\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n''') == '2\\n0\\n2\\n4\\n1'\nassert solution('''7\n6\n1 0 0 0 0 1\n1 0 0 0 0 1\n2\n0 1 0 1 0\n2\n1 0 0 0 0\n3\n1 1 0 1 1\n4\n1 0 0 0 0\n5\n1 1 0 1 1\n6\n1 0 0 0 0 1\n''') == '2\\n0\\n2\\n4\\n1'\nassert solution('''8\n7\n1 0 0 0 0 1 0\n1 0 0 0 0 1 0\n2\n0 1 0 1 0 0\n2\n1 0 0 0 0 1\n3\n1 1 0 1 1 1\n4\n1 0 0 0 0 1\n5\n1 1 0 1 1 1\n6\n1 0 0 0 0 1\n7\n1 1 0 1 1 1\n8\n1 0 0 0 0 1\n''') == '2\\n0\\n2\\n4\\n1'\nassert solution('''9\n7\n1 0 0 0 0 1 0 1\n1 0 0 0 0 1 0 1\n2\n0 1 0 1 0 0 0\n2\n1 0 0 0 0 1 0\n3\n1 1 0 1 1 1 1\n4\n1 0 0 0 0 1 0\n5\n1 1 0 1 1 1 1\n6\n1 0 0 0 0 1 0\n7\n1 1 0 1 1 1 1\n8\n1 0 0 0 0 1 0\n9\n1 1 0 1 1 1 1\n10\n1 0 0 0 0 1 0\n''') == '2\\n0\\n2\\n4\\n1'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\\n0\") == \"0\"\nassert solution(\"1\\n0\\n0\\n0\") == \"0\"\nassert solution(\"2\\n1\") == \"0\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\n'''\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"\"\nassert solution(input) == \"\"\n\n\"\"\""
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n7 3\n4 4\n6 2\n\"\"\") == \"\"\"\ncbcacab\nabcd\nbaabab\n\"\"\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input.txt') == 'abbbbaaabaaaa'\nprint(solution('input.txt'))\n\"\"\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 3\n4 4\n6 2''') == 'cbcacab\\naabcd\\nbaabab'\nassert solution('''3 1\n4 4\n6 2''') == 'cbcacab'\nassert solution('''6 1\n5 2\n4 2\n6 2\n5 1\n4 1''') == 'baabab'\nassert solution('''1 3\n2 2\n3 1\n2 1\n3 2''') == 'aabc'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abracadabra') == 'abracadabra'\nassert solution('aaaaa') == 'a'\nassert solution('aab') == 'ab'\nassert solution('bbaaaaaaa') == 'aab'\nassert solution('bbaaaaaaa') == 'bbaaaaaaa'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcdefg') == 'abcdefg'\nassert solution('aabccbb') == 'aaababcc'\nassert solution('abccdefg') == 'abcdeabcc'\nassert solution('gabccbdef') == 'gabcdefa'\nassert solution('aabcccdef') == 'aaabcdefc'\n"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 3''') == 'cbcacab'\nassert solution('''4 4''') == 'abcd'\nassert solution('''6 2''') == 'baabab'\nassert solution('''8 1''') == 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcdef') == 'a'\nassert solution('cbcabcaabcd') == 'cbcabcaabcd'\nassert solution('baabab') == 'baabab'\nassert solution('baab') == 'baab'\nassert solution('abcdef') == 'a'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nprint(solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n'''))"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n\n\"\"\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n2\\n1\\n7\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution(\n'''3\n4\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''\n5\n12\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n' +\n    '5\\n' +\n    '3 1 4 1 5 9 2 6 5 3 5\\n' +\n    '1\\n' +\n    '1000\\n' +\n    '3\\n' +\n    '1 1 1\\n' +\n    '13\\n' +\n    '1 2 3 4 5 6 7 8 9 10 11 12 13\\n' +\n    '2\\n' +\n    '2 1\\n' +\n    '6\\n' +\n    '1 1 1 1 1 1\\n' +\n    '7\\n' +\n    '1 1 1 1 1 1 1\\n' +\n    '7\\n' +\n    '2 1') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('2\\n' +\n    '5\\n' +\n    '3 1 4 1 5 9 2 6 5 3 5\\n' +\n    '1\\n' +\n    '1000\\n' +\n    '3\\n' +\n    '1 1 1\\n' +\n    '13\\n' +\n    '1 2 3 4 5 6 7 8 9 10 11 12 13\\n' +\n    '2\\n' +\n    '2 1\\n' +\n    '6\\n' +\n    '1 1 1 1 1 1\\n' +\n    '7\\n' +\n    '1 1 1 1 1 1 1\\n' +\n    '7\\n' +\n    '2 1') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('2\\n' +\n    '5\\n' +\n    '3 1 4 1 5 9 2 6 5 3 5\\n' +\n    '1\\n' +\n    '1000\\n' +\n    '3\\n' +\n    '1 1 1\\n' +\n    '13\\n' +\n    '1 2 3 4 5 6 7 8 9 10 11 12 13\\n' +\n    '2\\n' +\n    '2 1\\n' +\n    '6\\n' +\n    '1 1 1 1 1 1\\n' +\n    '7\\n' +\n    '1 1 1 1 1 1 1\\n' +\n    '7\\n' +\n    '2 1') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('2\\n' +\n    '5\\n' +\n    '3 1 4 1 5 9 2 6 5 3 5\\n' +\n    '1\\n' +\n    '1000\\n' +\n    '3\\n' +\n    '1 1 1\\n' +\n    '13\\n' +\n    '1 2 3 4 5 6 7 8 9 10 11 12 13\\n' +\n    '2\\n' +\n    '2 1\\n' +\n    '6\\n' +\n    '1 1 1 1 1 1\\n' +\n    '7\\n' +\n    '1 1 1 1 1 1 1\\n' +\n    '7\\n' +\n    '2 1') == '6 22 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n\nassert solution('2\\n' +\n    '5\\n' +\n    '3 1 4 1 5 9 2 6 5 3 5\\n' +\n    '1\\n' +\n    '1000\\n' +\n    '3\\n' +\n    '1 1 1\\n' +\n    '13\\n' +\n    '1 2 3 4 5 6 7 8 9 10 11 12 13\\n' +\n    '2\\n' +\n    '2 1\\n' +\n    '6\\n' +\n    "
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1'"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n0\\n0\\n0\\n0\\n0') == '0 0 0'\nassert solution('2\\n4\\n1 2 3 4 5 6 7 8 9 10 11 12 13') == '4 25 18'\nassert solution('3\\n15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5 999 0'\nassert solution('4\\n16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5 999 0'\nassert solution('5\\n15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5 999 0'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n\"\"\") == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n\"\"\"\n\nassert solution(\n    \"\"\"2\n7\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n\"\"\") == \"\"\"3 0 0\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n\"\"\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n5\n15\n2 1 5 4 1 6 5 9 7 6 9\n4\n4 1 1 2 1 1 1 1\n4\n5 5 5 5 5 5 5\n5\n2 2 2 2 2 2 2\n3\n3 2 3 2 2 3\n''') == '6 6 26'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'a'\nassert solution('aa') == 'a'\nassert solution('aab') == 'aab'\nassert solution('aabc') == 'aabc'\nassert solution('abca') == 'aabc'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '6'\nassert solution('''5\n3 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '27'\nassert solution('''5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '39'\nassert solution('''5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '11'\nassert solution('''5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\n''') == '17'\n'''\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2') == '2'\nassert solution('2\\n2\\n1\\n2\\n1\\n2') == '8'\nassert solution('2\\n1\\n1\\n2\\n1\\n2') == '3'\nassert solution('1\\n1\\n1\\n2\\n1\\n2') == '3'\nassert solution('1\\n2\\n1\\n2\\n1\\n2') == '3'\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\n\n'''\nfrom collections import Counter\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\""
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '27'\n\"\"\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n2 3\") == \"3\\n1 2\\n2 3\"\nassert solution(\"4\\n1 2 3 4\\n2 4 3 4\\n3 4 5 4\\n4 5 5 5\") == \"4\\n1 2 3 4\\n2 4 3 4\\n3 4 5 4\\n4 5 5 5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20\\n21 22 23 24 25 26 27 28 29 30 31\") == \"10\\n1 2 3 4 5 6 7 8 9\\n11 12 13 14 15 16 17 18 19\\n21 22 23 24 25 26 27 28 29\\n31 32 33 34 35 36 37 38 39\"\nassert solution(\"4\\n1 2 3 4\\n2 4 3 4\\n3 4 5 4\\n4 5 5 5\") == \"4\\n1 2 3 4\\n2 4 3 4\\n3 4 5 4\\n4 5 5 5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20\\n21 22 23 24 25 26 27 28 29 30 31\\n32 33 34 35 36 37 38 39 40\") == \"10\\n1 2 3 4 5 6 7 8 9\\n11 12 13 14 15 16 17 18 19\\n21 22 23 24 25 26 27 28 29\\n31 32 33 34 35 36 37 38 39\\n40 41 42 43 44 45 46 47 48\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\n\nassert solution('''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\n\nassert solution('''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6\\n27\\n39\\n11\\n17'\n\nassert solution('''\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn = int(input())\nfor _ in range(n):\n    n, k = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    if k <= 0:\n        print(sum(a))\n    else:\n        max_value = 0\n        for _ in range(k):\n            for i in range(1, n):\n                temp = a[0]\n                a[0] = b[i]\n                b[i] = temp\n            a[0], b[0] = b[0], a[0]\n            max_value = max(max_value, sum(a))\n        print(max_value)\n"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''3 5\n2 3 4 1 2\n1 2 3 4 4 1 2 1''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''6 2\n1 2 3 4 4 5 6\n4 1 2 3 4 4 5 6\n1 2 3 4 4 5 6''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''5 3\n5 3 3 4 4\n4 3 4 4 5 4\n3 4 4 5 4 6\n4 3 4 5 4 6''') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 1\n7 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3 4 4 1 2 1 3\n1 2 3"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''10 1\n6 9 3 10 9 1 10 1 5''') == '0 2 4 7 8 11 13 14 16 17'\n\n\n\n\n\n\"\"\"\nfrom math import floor, ceil"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n') == '0 7 13 18 24 35 36 37 40 45'\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 2 3 1 3 3 1 4 1\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"2\\n6 9 3 10 9 1 10 1 5\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"2\\n1 2 3 4 4 1 2 1 3\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"1\\n3 2 3 1 3 3 1 4 1\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5'''\n) == '0 7 13 18 24 35 36 37 40 45 '\n\nassert solution(\n'''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3'''\n) == '0 2 4 7 8 11 13 14 16 17 '\n"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''1000 1000\n
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(map(chr, range(10)))) == 'aaaaabaaaaabaaaaaaaa'\nassert solution(''.join(map(chr, range(10)))) == 'aabab'\nassert solution(''.join(map(chr, range(10)))) == 'baaba'\nassert solution(''.join(map(chr, range(10)))) == 'bbaaa'\nassert solution(''.join(map(chr, range(10)))) == 'abb'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == '''aaabb\naabab\nbaaba\nbbaaa\nabb\nbab\naaaaabaaaaabaaaaaaaa\n'''\n\nassert solution('''5\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == '''aaabb\naabab\nbaaba\nbbaaa\nabb\nbab\naaaaabaaaaabaaaaaaaa\n'''\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == 'a'\nassert solution('2\\n2') == 'ab'\nassert solution('2\\n3') == 'ba'\nassert solution('2\\n4') == 'aa'\nassert solution('2\\n5') == 'ab'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abaaaaaaaaab') == 'aaaaabaaaaab'\nassert solution('baaaaaaaaaab') == 'baaaaaaaaaab'\nassert solution('aaaaaaaaaa') == 'aaaaaaaaaa'\nassert solution('baaaaaaaaaab') == 'baaaaaaaaaab'\nassert solution('abaaaaaaaaab') == 'baaaaaaaaaab'\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"aaabb\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb\\naabab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa\\n'\n\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb\\naabab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa\\n'\n\nassert solution('''\n7 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa\\n'\n\nassert solution('''\n7 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab\\naaba\\nabb\\nbaaa\\nbaaba\\nbbaa\\nbbab\\n'\n\nassert solution('''\n7 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bbaaa\\nbbaab\\nbaab\\nbbaa\\nbbaaa\\nbbaaa\\nbbaaa\\n'"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aaabb') == \"aaabb\"\nassert solution('aabab') == \"aabab\"\nassert solution('baaba') == \"baaba\"\nassert solution('bbaaa') == \"bbaaa\"\nassert solution('abb') == \"abb\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaabb'\nassert solution('''7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n3\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n20 100\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1\\n0') == '0'\nassert solution('2\\n2\\n5\\n1\\n0\\n2\\n0\\n1\\n2\\n1\\n0\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\n'''\n\n'''\n\nimport sys\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '1'\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '9'\n\nassert solution('''7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '8'"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\n\n\"\"\"\n\n\"\"\"\n\nSolution:\n\nFirst, we need to make a point variable, which will be used to represent a point.\n\nThen we need to construct a function which will take 2 points, and return the sum of their distance.\n\nFirst, we define a variable which will hold the maximum sum of points.\n\nThen we sort the list of points.\n\nThen we loop through the list of points.\n\nFor each point, we add the distance between that point and the previous point to the sum.\n\nIf the sum is higher than the maximum, we update the maximum.\n\nFinally we return the maximum.\n\n\"\"\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3') == '6\\n1\\n5\\n10'\n\n\"\"\""
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"inputs/test_01.txt\").read()) == \"1\\n\"\nassert solution(open(\"inputs/test_02.txt\").read()) == \"1\\n\"\nassert solution(open(\"inputs/test_03.txt\").read()) == \"3\\n\"\nassert solution(open(\"inputs/test_04.txt\").read()) == \"7\\n\"\nassert solution(open(\"inputs/test_05.txt\").read()) == \"1\\n\""
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\") == '6\\n1\\n5'\n\"\"\"\n\n\nfrom functools import lru_cache\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\n'''\n\n3\n0\n1\n1\n1\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n0\\n0\\n0\\n0\") == \"0\\n0\\n0\\n0\"\nassert solution(\"7 3\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n0\\n1\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('0\\n0\\n1\\n2\\n0\\n0\\n10') == '0\\n0\\n0\\n0'\nassert solution('0\\n0\\n1\\n2\\n0\\n0\\n10') == '0\\n0\\n0\\n0'\nassert solution('0\\n0\\n1\\n2\\n0\\n0\\n10') == '0\\n0\\n0\\n0'\nassert solution('0\\n0\\n1\\n2\\n0\\n0\\n10') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n2\n2\n0\n0\n10\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\nassert solution('''7 3\n1\n2\n1\n2\n0\n0\n10\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('''7 3\n1\n2\n1\n2\n0\n0\n10\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 1 2') == '3'\nassert solution('2 3 1') == '3'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0\\n1\\n2\\n2\\n0\\n0\\n10\\n') == '3'\nassert solution('3\\n2\\n1\\n2\\n0\\n0\\n10\\n') == '1'\nassert solution('3\\n2\\n1\\n2\\n0\\n0\\n10\\n') == '1'\nassert solution('3\\n2\\n1\\n2\\n0\\n0\\n10\\n') == '2'\nassert solution('3\\n2\\n1\\n2\\n0\\n0\\n10\\n') == '3'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10\n''') == '3'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0'\nassert solution('''4 3\n0\n1\n2\n2\n''') == '0'\nassert solution('''4 3\n0\n0\n1\n2\n''') == '0'\nassert solution('''4 3\n0\n0\n0\n0\n''') == '0'\n"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"5 0\") == \"4\"\nassert solution(\"1 10\") == \"9\"\nassert solution(\"1 100\") == \"99\"\nassert solution(\"1 1000\") == \"999\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3 4 5 6\") == \"3 4 5 6\"\nassert solution(\"3 4 5 6 7\") == \"3 4 5 6 7\"\nassert solution(\"3 4 5 6 7 8 9 10\") == \"3 4 5 6 7 8 9 10\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n'''"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('1 2 3 4 5 6 7 8 9') == '1 2 3 4 5 6 7 8 9'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49'\nassert solution('''10\n1 1 100\n2 1 99\n3 1 98\n4 1 97\n5 1 96\n6 1 95\n7 1 94\n8 1 93\n9 1 92\n10 1 91''') == '1 97'\nassert solution('''10\n5 4 3\n2 3 1''') == '4 3 2 1'\nassert solution('''10\n1 1 100\n2 1 99\n3 1 98\n4 1 97\n5 1 96\n6 1 95\n7 1 94\n8 1 93\n9 1 92\n10 1 91''') == '1 97'\nassert solution('''15\n11 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100''') == '64 93 39 25 90 87 75 32 34 61 22 78 93 22 58 19 38 38 21 37 26 41 65 19 10 25 21 43 22 19 54 50 40 32 19 22 41 33 19 47 21 21 22 19 17 16 19 19 22 19 22 19 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22 19 22"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''4 19 17\n2 1 3\n4 19 17\n3 19 17\n5 19 17\n''') == '1 17 3\\n2 19 17 4 19 17\\n3 19 17 5 19 17\\n4 19 17 6 19 17\\n19 17 7 19 17\\n19 17 8 19 17\\n19 17 9 19 17\\n19 17 10 19 17\\n19 17 11 19 17\\n19 17 12 19 17\\n19 17 13 19 17'\nassert solution('''5 11 5\n5 1 5\n5 11 5\n5 11 5\n5 1 5\n5 11 5\n5 11 5\n5 1 5\n5 11 5\n5 11 5\n5 1 5\n5 11 5\n5 11 5\n''') == '1 5 5\\n5 11 5 4 5\\n5 1 5 5 6 5\\n5 11 5 5 11 5\\n5 1 5 5 11 5\\n5 11 5 5 1 5\\n5 11 5 5 11 5\\n5 1 5 5 11 5\\n5 11 5 5 1 5\\n5 11 5 5 11 5\\n5 1 5 5 11 5\\n5 11 5 5 1 5\\n5 1 5 5 11 5\\n5 11 5 5 1 5\\n5 1 5 5 11 5\\n5 11 5 5 1 5\\n5 1 5 5 11 5'\nassert solution('''2 1 7\n5 4\n''') == '1 7\\n5 4'\nassert solution('''3 2 1\n4 2\n5 2\n6 2\n7 2\n8 2\n9 2\n10 2\n11 2\n12 2\n13 2\n14 2\n15 2\n16 2\n17 2\n18 2\n19 2\n20 2\n21 2\n22 2\n23 2\n24 2\n25 2\n26 2\n27 2\n28 2\n29 2\n30 2\n31 2\n32 2\n33 2\n34 2\n35 2\n36 2\n37 2\n38 2\n39 2\n40 2\n41 2\n42 2\n43 2\n44 2\n45 2\n46 2\n47 2\n48 2\n49 2\n50 2\n51 2\n52 2\n53 2\n54 2\n55 2\n56 2\n57 2\n58 2\n59 2\n60 2\n61 2\n62 2\n63 2\n64 2\n65 2\n66 2\n67 2\n68 2\n69 2\n70 2\n71 2\n72 2\n73 2\n74 2\n75 2\n76 2\n77 2\n78 2\n79 2\n80 2\n81 2\n82 2\n83 2\n84 2\n85 2\n86 2\n87 2\n88 2\n89 2\n90 2\n91 2\n92 2\n93 2\n94 2\n95 2\n96 2\n97 2\n98 2\n99 2\n100 2\n101 2\n102 2\n103 2\n104 2\n105 2\n106 2\n107 2\n108 2\n109 2\n110 2\n111 2\n112 2\n113 2\n114 2\n115 2\n116 2\n117 2\n118 2\n119 2\n120 2\n121 2\n122 2\n123 2\n124 2\n125 2\n126 2\n127 2\n128 2\n129 2\n130 2\n131 2\n132 2\n133 2\n134 2\n135 2\n136 2\n137 2\n138 2\n139 2\n140 2\n141 2\n142 2\n143 2\n144 2\n145 2\n146 2\n147 2\n148 2\n149 2\n150 2\n151 2\n152 2\n153 2\n154 2\n155 2\n156 2\n157 2\n158 2\n159 2\n160 2\n161 2\n162 2\n163 2\n164 2\n165 2\n166 2\n167 2\n168 2\n169 2\n170 2\n171 2\n172 2\n173 2\n174 2\n175 2\n176 2\n177 2\n178 2\n179 2\n180 2\n181 2\n182 2\n183 2\n184 2\n185 2\n186 2\n187 2\n188 2\n189 2\n190 2\n191 2\n192 2\n193 2\n194 2\n195 2\n196 2\n197 2\n198 2\n199 2\n200 2\n201 2\n202 2\n203 2\n204 2\n205 2\n206 2\n207 2\n208 2\n209 2\n210 2\n211 2\n212 2\n213 2\n214 2\n215 2\n216 2\n217 2\n218 2\n219 2\n220 2\n221 2\n222 2\n223 2\n224 2\n225 2\n226 2\n227 2\n228 2\n229 2\n230 2\n231 2\n232 2\n233 2\n234 2\n235 2\n236 2\n237 2\n238 2\n239 2\n240 2\n241 2\n242 2\n243 2\n244 2\n245 2\n246 2\n247 2\n248 2\n249 2\n250 2\n251 2\n252 2\n253 2\n254 2\n255 2\n256 2\n257 2\n258 2\n259 2\n260 2\n261 2\n262 2\n263 2\n264 2\n265 2\n266 2\n267 2\n268 2\n269 2\n270 2\n271 2\n272 2\n273 2\n274 2\n275 2\n276 2\n277 2\n278 2\n279 2\n280 2\n281 2\n282 2\n283 2\n284 2\n285 2\n286 2\n287 2\n288 2\n289 2\n290 2\n291 2\n292 2\n293 2\n294 2\n295 2\n296 2\n297 2\n298 2\n299 2\n300 2\n301 2\n302 2\n303 2\n304 2\n305 2\n306 2\n307 2\n308 2\n309 2\n310 2\n311 2\n312 2\n313 2\n314 2\n315 2\n316 2\n317 2\n318 2\n319 2\n320 2\n321 2\n322 2\n323 2\n324 2\n325 2\n326 2\n327 2\n328 2\n329 2\n330 2\n331 2\n332 2\n333 2\n334 2\n335 2\n336 2\n337 2\n338 2\n339 2\n340 2\n341 2\n342 2\n343 2\n344 2\n345 2\n346 2\n347 2\n348 2\n349 2\n350 2\n351 2\n352 2\n353 2\n354 2\n355 2\n356 2\n357 2\n358 2\n359 2\n360 2\n361 2\n362 2\n363 2\n364 2\n365 2\n366 2\n367 2\n368"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 1 1') == '2'\nassert solution('2 1 49') == '49'\nassert solution('2 1 50') == '49'\nassert solution('2 1 49\\n2 1 50') == '49'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '3\\n'\nassert solution('4\\n') == '4\\n'\nassert solution('5\\n') == '5\\n'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('2 1 3') == '1 2 3'\nassert solution('3 2 1') == '1 2 3'\nassert solution('3 2 1 4') == '1 2 3 4'\nassert solution('3 2 1 4 5') == '1 2 3 4 5'\n\"\"\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1 2\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"2 3 1\") == \"1 2 3\"\nassert solution(\"4 3 2 1\") == \"1 2 3 4\"\nassert solution(\"2 4 3 1\") == \"1 2 3 4\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 3 2\") == \"1 2 3\"\nassert solution(\"1 3 2\") == \"1 2 3\"\nassert solution(\"1 3 3\") == \"1 3 2\"\nassert solution(\"1 1 3\") == \"1 1 3\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3 1 2''') == '1 2 3'\nassert solution('''3 3 1 2''') == '1 2 3'\nassert solution('''3 3 1 2''') == '1 2 3'\nassert solution('''3 3 1 2''') == '1 2 3'\nassert solution('''3 3 1 2''') == '1 2 3'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '1 2 3'"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('3 3 3 3') == '3 3 3 3'\nassert solution('3 3 2 2') == '2 2 3 3'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('3 2 1') == '1 2'\nassert solution('2 3 1') == '1 2'\nassert solution('2 1 3') == '1 2'\nassert solution('1 3 2') == '1 2'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('3 3 4 3') == '3 3 4'\nassert solution('3 3 3 3') == '3 3 3'\nassert solution('1 3 2') == '1 2 3'\nassert solution('1 1 1 1') == '1 1 1'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"1 2 4 3\"\nassert solution(\"1 2 3 4 5\") == \"1 2 4 3 5\"\nassert solution(\"1 3 2 4 5\") == \"1 2 4 5 3\"\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\""
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n2\\n3\\n4\\n2\\n2\\n8\\n8') == \"YES\\n\"\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == \"NO\\n\"\nassert solution('3\\n2\\n2\\n2\\n2\\n2') == \"YES\\n\"\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == \"NO\\n\"\nassert solution('1\\n3\\n3\\n3\\n3\\n3') == \"NO\\n\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''3\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n3\n2 2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n3\n2 2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n5\n2 3 4 4 5\n3\n3 3 3"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n5''') == 'YES'\nassert solution('''1\n1''') == 'NO'\nassert solution('''2\n2\n2 3''') == 'YES'\nassert solution('''1\n1''') == 'NO'\nassert solution('''2\n2\n2 3''') == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''1\n3\n5\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''1\n3\n5\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n2\n2 2 2 2\n''') == 'YES'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == 'YES'\nassert solution('''5\n5\n2\n1\n1\n1\n1\n1\n1\n''') == 'NO'\n'''\nTest."
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n1\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n1\") == \"YES\"\nassert solution(\"2\\n2\\n2\\n1\\n1\") == \"NO\"\nassert solution(\"3\\n2\\n2\\n2\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == 'YES'\nassert solution('''2''') == 'NO'\nassert solution('''4''') == 'NO'\nassert solution('''5''') == 'NO'\nassert solution('''6''') == 'YES'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('2\\n3') == 'NO'\nassert solution('2\\n3\\n4') == 'YES'\nassert solution('3\\n3\\n3\\n4') == 'YES'\nassert solution('3\\n3\\n3\\n5') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES\\nNO\\nYES\\nNO\\nNO\\n'\n'''\n\n'''"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == '4 3 1 2 8 7 5 6 10 11 9 12 5 13 10 9 6 11 8 4 7 5 6 2 3 10 11 12 9 13 8'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14') == '2 1 4 3 8 7 5 6 10 11 9 12 5 13 10 9 6 11 8 4 7 5 6 2 3 10 11 12 9 13 8 14'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6\n10\n2\n4\n6\n7\n13\n\"\"\") == \"\"\"9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"-1\n3 1 4 2\n5 3 6 2 4 1\n5 1 3 6 2 4 7\n13 9 7 11 8 4 1 3 5 2 6 10 12\"\"\".strip()\n\nassert solution(\"1\\n1\") == \"\"\"-1\"\"\".strip()\n\nassert solution(\"1\\n2\\n3\") == \"\"\"-1\"\"\".strip()\n\nassert solution(\"1\\n2\\n3\\n4\") == \"\"\"-1\"\"\".strip()\n\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"\"\"-1\"\"\".strip()"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n100') == '-1'\nassert solution('2\\n10') == '-1'\nassert solution('3\\n10') == '-1'\nassert solution('4\\n10') == '9 8 7 6 5 4 3 1 2'\nassert solution('5\\n10') == '9 8 7 6 5 4 3 1 2'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n10\\n2\\n4\\n6\\n7\\n13') == '9 6 10 8 4 7 3 1 5 2 '\nassert solution('3\\n2') == '-1'\nassert solution('5\\n13') == '3 1 4 2'\nassert solution('5\\n2') == '-1'\n\n\n\"\"\"\n\nfrom bisect import bisect_left"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '-1\\n9 6 10 8 4 7 3 1 5 2'\nassert solution(stdin) == '9 6 10 8 4 7 3 1 5 2'\n\n\n\n--- 32 ms (65.29%)\n\n\"\"\""
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n7\\n9') == '5 6 3 1 4 2\\n1 2 3 4 5 6\\n2 4 1 5 3 6\\n1 5 2 4 3 6\\n2 5 6 1 4 3\\n1 4 2 5 3 6\\n5 6 3 1 4 2\\n'\nassert solution('3\\n7\\n9') == '2 3 4 1\\n1 4 2 3\\n4 3 2 1\\n2 1 4 3\\n1 4 2 3\\n4 3 2 1\\n'\nassert solution('3\\n7\\n9') == '2 3 4 1\\n1 4 2 3\\n4 3 2 1\\n2 1 4 3\\n1 4 2 3\\n4 3 2 1\\n'\nassert solution('5\\n11\\n9') == '3 1 4 2 5\\n4 1 3 5 2\\n1 4 2 3 5\\n5 4 1 3 2\\n1 3 4 2 5\\n3 1 4 2 5\\n'\nassert solution('6\\n11\\n9') == '2 3 4 1 5\\n3 1 4 2 5\\n4 1 3 5 2\\n5 4 1 3 2\\n1 3 4 2 5\\n2 3 4 1 5\\n'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n10\n2\n4\n6\n7\n13''') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('''2\n10\n2\n4\n6\n7\n13''') == '-1'\nassert solution('''3\n10\n2\n4\n6\n7\n13''') == '3 1 4 2'\nassert solution('''4\n10\n2\n4\n6\n7\n13''') == '5 3 6 2 4 1'\nassert solution('''5\n10\n2\n4\n6\n7\n13''') == '5 1 3 6 2 4 7'\n"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3\n1\n1\n2\n3\n3\n3\n2\n1\n2\n3\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n1\n3\n2\n3\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n3\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n3\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n3\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n3\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n3\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n3\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3\n3\n3\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\\n\") == \"2\\n1\\n-1\\n0\\n\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\\n\") == \"1\\n0\\n-1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1') == -1\nassert solution('1 2 3') == 0\nassert solution('1 2 3 4') == 2\nassert solution('1 2 3 4 5') == 1\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2\\n1\\n-1\\n0'\nassert solution('''4\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2\\n1\\n-1\\n0'\nassert solution('''4\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2\\n1\\n-1\\n0'\nassert solution('''4\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2\\n1\\n-1\\n0'\nassert solution('''4\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2\\n1\\n-1\\n0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"3\") == 3\nassert solution(\"4\") == -1\nassert solution(\"5\") == 4\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2\\n1\\n-1\\n0'\n'''\n'''\n\nimport sys\nassert sys.stdin.read() == '''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n'''\n\nsys.stdin = open('data/11.txt')\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '1'\nassert solution('2\\n2\\n1') == '1'\nassert solution('2\\n1\\n1') == '-1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5') == '0'\nassert solution('5\\n5') == '0'\nassert solution('5\\n5') == '0'\nassert solution('5\\n5') == '0'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n') == '0'\nassert solution('4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2'\nassert solution('5\\n4\\n4 2 3 1\\n3\\n3 2 1\\n1\\n1\\n1\\n1') == '-1'\n\n\n\n------\n\n## Submissions\n\n* [Online]: https://www.codechef.com/AUG20B/problems/SWAPPARITY\n* [Offline]: https://www.codechef.com/AUG20B/problems/SWAPPARITY\n* [Discussions]: https://www.codechef.com/AUG20B/discussions/problems/SWAPPARITY\n\n\n## Resources\n\n* [Swap Parity](https://en.wikipedia.org/wiki/Swap_parity_problem)\n* [Odd and Even](https://www.geeksforgeeks.org/count-inversions/)\n* [Best Practice](https://www.geeksforgeeks.org/maximum-swap-operations/)\n* [Parity Check](https://www.codechef.com/JUNE20B/problems/SWAPPARITY)\n* [Array Manipulation](https://www.geeksforgeeks.org/array-manipulation/)\n* [Parity](https://www.codechef.com/JUNE20B/problems/PARITY)\n* [Parity](https://www.codechef.com/JUNE20B/problems/PARITY)\n\n## Similar Problems\n\n* [Parity Check](https://www.codechef.com/JUNE20B/problems/PARDITY)\n* [Parity Check](https://www.codechef.com/JUNE20B/problems/PARDITY)\n* [Parity Check](https://www.codechef.com/JUNE20B/problems/PARDITY)\n* [Parity Check](https://www.codechef.com/JUNE20B/problems/PARDITY)\n"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n'\n'2\\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == \"2 2 2 2 2 1 1 0 2\"\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == \"0 -1 1 -1\"\n\nassert solution('''9\n0 0 1 1 1 0 0 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == \"0 -1 1 -1\"\n\nassert solution('''3\n1 2\n1 3\n2 3\n''') == \"0 -1 1 -1\"\n\nassert solution('''9\n0 0 1 0\n1 2\n1 3\n2 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == \"0 -1 1 -1\""
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 3\") == \"\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\n\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n\nassert solution('''\n5\n0 0 1 0 0\n1 2\n1 3\n1 4\n1 5\n2 6\n''') == '0 -1 1 -1'\n\nassert solution('''\n6\n0 0 1 0 0 0\n1 2\n1 3\n1 4\n1 5\n1 6\n2 7\n2 8\n2 9\n3 10\n3 11\n4 12\n4 13\n5 14\n5 15\n5 16\n6 17\n6 18\n6 19\n7 20\n7 21\n7 22\n7 23\n7 24\n7 25\n''') == '0 -1 1 -1'\n\nassert solution('''\n7\n0 0 1 0 0 0 0\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 8\n2 9\n3 10\n3 11\n3 12\n3 13\n3 14\n4 15\n4 16\n5 17\n5 18\n5 19\n5 20\n5 21\n6 22\n6 23\n6 24\n6 25\n6 26\n6 27\n6 28\n6 29\n6 30\n7 31\n7 32\n7 33\n7 34\n7 35\n7 36\n7 37\n7 38\n7 39\n7 40\n7 41\n7 42\n7 43\n7 44\n7 45\n7 46\n7 47\n7 48\n7 49\n7 50\n''') == '0 -1 1 -1'"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n'''\nSample Input:\n\n4\n0 0 1 0\n1 2\n1 3\n1 4\nSample Output:\n\n0 -1 1 -1\n'''\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\n\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n\nassert solution('''\n9\n0 0 1 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\n'''\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 1 1 0 0 0 0 1') == '2 2 2 2 2 1 1 0 2'\nassert solution('1 2') == '0 -1 1 -1'\nassert solution('1 3') == '0 -1 1 -1'\nassert solution('3 4') == '0 -1 1 -1'\nassert solution('1 2\\n1 3') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"12\") == \"0\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom __future__ import annotations\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36'\nassert solution('''1\n2\n3\n12\n12345\n15116544\n387420489\n7\n987654\n16216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216216"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n3') == '0'\nassert solution('4\\n4') == '0'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1 2 3') == '0'\nassert solution('1 2 3\\n1 2 3\\n1 2 3') == '-1'\nassert solution('1 2 3\\n1 2 3\\n1 2 3') == '0'\nassert solution('1 2 3\\n1 2 3\\n1 2 3') == '-1'\nassert solution('1 2 3\\n1 2 3\\n1 2 3') == '0'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '''0\n-1\n2\n-1\n-1\n12\n36\n'''\n\nassert solution('''1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '''0\n-1\n2\n-1\n-1\n12\n36\n'''\n\nassert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '''0\n-1\n2\n-1\n-1\n12\n36\n'''\n\nassert solution('''7\n12345\n15116544\n387420489\n''') == '''0\n-1\n-1\n-1\n12\n36\n'''\n\nassert solution('''7\n12345\n15116544\n387420489\n''') == '''0\n-1\n-1\n-1\n12\n36\n'''"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"BGGGG\") == \"RG\"\nassert solution(\"BGGGG\") == \"BR\"\nassert solution(\"BGGGG\") == \"GB\"\nassert solution(\"BGGGG\") == \"GB\"\nassert solution(\"BBBBRBB\") == \"BBBB\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''R\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '1'\nassert solution('''B\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '0'\nassert solution('''B\n5 2\nRRRB\n5 3\nRRRR\n5 5\nBBBBB''') == '3'\nassert solution('''B\n5 2\nRRRB\n5 3\nRRRR\n5 5\nBBBBB''') == '1'\nassert solution('''B\n5 2\nRRRB\n5 3\nRRRR\n5 5\nBBBBB''') == '0'\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom typing import List\nfrom unittest import TestCase\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('BGGGG') == '1'\nassert solution('BGGGG') == '0'\nassert solution('BBBRR') == '3'\n\n\n-----Best Practice-----"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"RGRGB\") == \"BRG\"\nassert solution(\"GBRG\") == \"BRG\"\nassert solution(\"BBBRR\") == 3\nassert solution(\"RRBRRR\") == 2\nassert solution(\"RBRRRR\") == 1\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BGGGG') == 'G'\nassert solution('BBBBBB') == 0\nassert solution('BBBRR') == 2\nassert solution('GGGGGG') == 1\nassert solution
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '1', \"First\"\n\nassert solution(\n'''7 3\nRBRGR\n7 5\nBBBRR''') == '0', \"Second\"\n\nassert solution(\n'''3 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '3', \"Third\"\n\nassert solution(\n'''8 5\nBBBRR\n8 8\nBGBGBGBGB''') == '4', \"Fourth\"\n\nassert solution(\n'''7 4\nBBBRR\n7 7\nBGBGBGBGB''') == '1', \"Fifth\""
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == answer_stdin\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('BGGGG') == 1\nassert solution('BGRGRGB') == 0\nassert solution('BRGB') == 3\n\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5\n3 1 2 3 1''') == '3'\nassert solution('''7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''7\n2\n1 1 1 1 1 2 2''') == '3'\nassert solution('''7\n7\n1 1 1 1 1 1 1''') == '7'\nassert solution('''7\n1\n1 1 1 1 1 1''') == '7'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n5\n3 1 2 3 1''') == '3'\nassert solution('''7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''1\n1\n1 1 1 1 1 2 2''') == '3'\nassert solution('''7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''7\n1 1 1 1 1 2 2''') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n3\\n1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3'\nassert solution('2\\n3\\n3 1 2 3 1\\n7\\n1 1 1 1 1 1 2 2') == '3'\nassert solution('2\\n3\\n1 1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1 1') == '3'\nassert solution('2\\n3\\n1 1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1 1') == '3'\nassert solution('2\\n3\\n1 1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1 1') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n1') == '3'\nassert solution('2\\n2') == '2'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '2'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n10\\n') == '0\\n0'\nassert solution('2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n'''\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''2\n5\n3 1 2 3 1\n3\n1 1 1 1 1 2 2''') == '3'\nassert solution('''2\n5\n3 1 2 3 1\n3\n1 1 1 1 1 2 2''') == '3'\nassert solution('''2\n5\n3 1 2 3 1\n3\n1 1 1 1 1 2 2''') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"hi\") == \"hi\"\nassert solution(\"z\") == \"z\"\nassert solution(\"hello hi\") == \"hello hi\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1,2\") == \"\"\nassert solution(\"1,2,3\") == \"\"\nassert solution(\"1,2,3,4\") == \"\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nassert solution('''5\n5\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''2\n3\n1 2 3\n1\n1\n2\n2\n''') == '1 2 3'\nassert solution('''2\n3\n1 2 3\n1\n2\n2\n2\n''') == '1 2 3'\nassert solution('''3\n3\n1 2 3\n1\n1\n2\n2\n''') == '1 2 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n\"\"\") == \"\"\n\nassert solution(\"\"\"\n3\n4\n4 3 2 1\n\n\"\"\") == \"1 2 3 4\"\n\nassert solution(\"\"\"\n1\n1\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n5 4 1 3 2\n\n\"\"\") == \"1 5 2 4 3\"\n\nassert solution(\"\"\"\n4\n1 2 4 3\n\n\"\"\") == \"1 2 3 4\""
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '''1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n'''\nassert solution('''4\n5\n5 4 1 3 2\n4\n1 3 2 4\n1\n1\n4\n4 3 2 1''') == '''1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n'''\nassert solution('''4\n5\n5 4 1 3 2\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1''') == '''1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n'''\nassert solution('''4\n5\n5 4 1 3 2\n4\n1 2 3 4\n2\n1\n4\n4 3 2 1''') == '''1 5 2 4 3 \n1 2 3 4 \n2 \n1 4 3 2 \n'''\nassert solution('''4\n5\n5 4 1 3 2\n4\n1 2 3 4\n3\n2\n4\n4 3 2 1''') == '''1 5 2 4 3 \n1 2 3 4 \n3 \n2 4 1 3 \n'''\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nassert solution('''4\n4\n1 2 4 3\n4\n1 3 2 1\n''') == '1 2 3 4'\nassert solution('''4\n4\n1 3 2 1\n4\n1 2 3 4\n''') == '1 3 2 4'\nassert solution('''3\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''3\n4\n1 2 4 3\n4\n1 2 3 4\n''') == '1 2 3 4'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('1\\n3') == '1 3'\nassert solution('1\\n4') == '1 4'\nassert solution('1\\n5') == '1 5'\nassert solution('2\\n5') == '1 2 5'\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4\\n') == '1 2 4 3'\nassert solution('2 3 1\\n') == '1 2 3'\nassert solution('2 3 4 1\\n') == '1 4 3 2'\nassert solution('5 4 1 3 2\\n') == '1 5 2 4 3'\nassert solution('1 2 4 3\\n') == '1 2 3 4'\n\n\"\"\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\n\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'NO'\n\nassert solution('''5\n4\n1 2 3 4\n3\n3 1 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\n\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n3\n5\n3 2 1 5 4\n''') == 'YES'\n\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n3\n5\n3 2 1 5 4\n''') == 'NO'"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\nassert solution('''2\n2\n1 1\n''') == 'NO'\nassert solution('''2\n2\n1 2\n''') == 'YES'\nassert solution('''1\n1\n''') == 'NO'\nassert solution('''1\n1\n2\n''') == 'YES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1') == 'YES'\nassert solution('1\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1') == 'YES'\nassert solution('1\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n5"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 3 2\") == \"NO\"\nassert solution(\"1 3 2 4\") == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('1') == 'NO'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2') == '0'\nassert solution('10') == '1'\nassert solution('100') == '0'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4\\n3 2\\n5 6\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5\\n18\\n10\\n6\\n75015'\nassert solution('2 3\\n5 1\\n10 2\\n1 2\\n100000 50010') == '2\\n2\\n1\\n1\\n1'\n\n\n-----My Analysis-----\n\nThe problem is too hard to do, it's time to use a library\n\n\"\"\"\n\n############################################################\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n\n1\n8\n1\n2\n2\n2\n1\n3\n1\n2\n1\n3\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n5\\n5\\n') == '5'\nassert solution('1\\n1\\n10\\n10\\n') == '10'\nassert solution('1\\n1\\n100000\\n100000\\n') == '100000'\nassert solution('5\\n5\\n') == '5'\nassert solution('5\\n5\\n1000000\\n1000000\\n') == '1000000'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\n2\\n4\\n2\\n4\\n4\\n2\\"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"5\"\n\"5 2\"\n\"19 4\"\n\"12 7\"\n\"6 2\"\n\"100000 50010\"\n) == \"5\"\n\nassert solution(\n\"5\"\n\"5 2\"\n\"19 4\"\n\"12 7\"\n\"6 2\"\n\"100000 50010\"\n) == \"5\"\n\nassert solution(\n\"5\"\n\"5 2\"\n\"19 4\"\n\"12 7\"\n\"6 2\"\n\"100000 50010\"\n) == \"5\"\n\nassert solution(\n\"5\"\n\"5 2\"\n\"19 4\"\n\"12 7\"\n\"6 2\"\n\"100000 50010\"\n) == \"5\"\n\nassert solution(\n\"5\"\n\"5 2\"\n\"19 4\"\n\"12 7\"\n\"6 2\"\n\"100000 50010\"\n) == \"5\""
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution(\n'''\n8\n1000000000 9\n''') == 'YES\\n1 1 1 1 1 1 1 1 1\\nNO'\n\nassert solution(\n'''\n8\n8 9\n8 8\n8 7\n8 6\n8 5\n8 4\n8 3\n8 2\n8 1\n8 0\n''') == 'YES\\n8 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\\nNO'\n\nassert solution(\n'''\n8\n10 8\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n10 21\n10 22\n10 23\n10 24\n10 25\n10 26\n10 27\n10 28\n10 29\n10 30\n10 31\n10 32\n10 33\n10 34\n10 35\n10 36\n10 37\n10 38\n10 39\n10 40\n10 41\n10 42\n10 43\n10 44\n10 45\n10 46\n10 47\n10 48\n10 49\n10 50\n10 51\n10 52\n10 53\n10 54\n10 55\n10 56\n10 57\n10 58\n10 59\n10 60\n10 61\n10 62\n10 63\n10 64\n10 65\n10 66\n10 67\n10 68\n10 69\n10 70\n10 71\n10 72\n10 73\n10 74\n10 75\n10 76\n10 77\n10 78\n10 79\n10 80\n10 81\n10 82\n10 83\n10 84\n10 85\n10 86\n10 87\n10 88\n10 89\n10 90\n10 91\n10 92\n10 93\n10 94\n10 95\n10 96\n10 97\n10 98\n10 99\n10 100\n''') == 'YES\\n10 91 10 90 10 91 10 90 10 91 10 90 10 91 10 90 10 91 10 90 10 91 10 90 10 91 10 90 10 91 10 89 10 90 10 91 10 88 10 89 10 90 10 91 10 85 10 89 10 89 10 88 10 91 10 84 10 89 10 89 10 88 10 91 10 82 10 89 10 89 10 88 10 91 10 75 10 89 10 89 10 88 10 91 10 74 10 89 10 89 10 88 10 91 10 72 10 89 10 89 10 88 10 91 10 6110 89 10 89 10 88 10 91 10 50 10 89 10 89 10 88 10 91 10 3910 89 10 89 10 88 10 9110 2610 89 10 89 10 88 10 9110 2310 89 10 89 10 88 10 9110 2210 89 10 89 10 88 10 9110 2110 89 10 89 10 8810 9110 2120 89 10 89 10 88 10 9110 2010 89 10 89 10 8810 9110 1810 89 10 89 10 8810 9110 1720 89 10 89 10 8810 9110 20168910 89 10 89 10 8810 9110 1954 8910 89 10 8810 9110 18148910 89 10 89 10 8810 9110 17348910 89 10 89 10 8810 9110 18348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 8910 89 10 8810 9110 17348910 89"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"   \\n\") == \"\"\nassert solution(\"a\\n\") == \"\"\nassert solution(\"abcd\") == \"\"\nassert solution(\"abcda\") == \"\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n4 2 4\\n'\nassert solution('''8\n100 3\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n55 5 5 35\\n'\nassert solution('''8\n100 3\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'NO\\n'\nassert solution('''8\n100 3\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n1 1 1 1 1 1 1 1 1\\n'\nassert solution('''8\n100 3\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n1 1 1 1 1 1 1 1 1\\n'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10 3\n8 5\n8 7\n4 3\n5 4\n100 4\n8 9\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10 3\n8 5\n8 7\n4 3\n5 4\n100 4\n8 9\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10 3\n8 5\n8 7\n4 3\n5 4\n100 4\n8 9\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == '''YES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'''\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == 'YES\\n1 1'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2\\n3') == 'YES\\n2 3'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\n\"\"\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4\\n55\\n15000000000000000\\n51'\n'''\n'''\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n2\\n2\\n') == '4'\nassert solution('3\\n3\\n3\\n') == '6'\nassert solution('4\\n4\\n4\\n') == '8'\nassert solution('5\\n5\\n5\\n') == '10'\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"4\\n55\\n15000000000000000\\n51\\n\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n    6 3\n    abcbac\n    3 6\n    aaa\n    7 1000\n    abczgyo\n    5 4\n    ababa\n    20 10\n    aaebdbabdbbddaadaadc\n    20 5\n    ecbedececacbcbccbdec''') == '6'\n\nassert solution('''3\n    3 3\n    a\n    b\n    c''') == '2'\n\nassert solution('''6\n    6 3\n    abcbac\n    3 6\n    aaa\n    7 1000\n    abczgyo\n    5 4\n    ababa\n    20 10\n    aaebdbabdbbddaadaadc\n    20 5\n    ecbedececacbcbccbdec''') == '6'\n\nassert solution('''3\n    3 3\n    a\n    b\n    c''') == '2'\n\nassert solution('''6\n    6 3\n    abcbac\n    3 6\n    aaa\n    7 1000\n    abczgyo\n    5 4\n    ababa\n    20 10\n    aaebdbabdbbddaadaadc\n    20 5\n    ecbedececacbcbccbdec''') == '6'"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\n\nassert solution('''6\n6 3\nacbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\n\nassert solution('''6\n6 3\naabca\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\n\nassert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '4'\n\nassert solution('''6\n6 3\nabcba\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6\\n3\\n5\\n4\\n15\\n10'\n\nassert solution('''4\n3 5\nabc\n123\n''') == '6'\n\nassert solution('''7\n7 5\naab\naaaaaaaaaaaaaa\nbbbbbbbbbbbbbbb\ncccccccccccccccc\ndddddddddddddddddddd\n''') == '0'\n\nassert solution('''100\n999999999 7\n''') == '0'\n\nassert solution('''5\n3 3\nabc\nabc\nabc\n''') == '3'"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('aa') == 'a'\nassert solution('ab') == 'b'\nassert solution('abcd') == 'ab'\nassert solution('abcde') == 'abc'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcbac\") == \"6\"\nassert solution(\"aaa\") == \"3\"\nassert solution(\"ecbedececacbcbccbdec\") == \"10\"\nassert solution(\"ababa\") == \"5\"\nassert solution(\"abc\") == \"3\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '4'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abcbac\") == \"abc\"\nassert solution(\"abcbac\") == \"abc\"\nassert solution(\"abcab\") == \"abc\"\nassert solution(\"abcab\") == \"abc\"\nassert solution(\"bcbac\") == \"bcb\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '1678'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '766'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '2036'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '1638'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '4'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5''') == 'YES\\n1 3 5'\nassert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5''') == 'NO'\nassert solution('''5 3\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'NO'\nassert solution('''6 2\n1 2 3 4 5 6\n4 2\n1 2 8 4 10 2''') == 'YES\\n1 3 5'\nassert solution('''7 3\n2 7 4 5 6 7\n5 3\n1 2 3 4 5 6''') == 'YES\\n1 3 5'\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\n\"\"\"\nHere's the idea: we have $n$ elements in the array and we need to divide it into exactly $k$ non-empty subsegments with odd sum.\n\nIf we have n = 5, and k = 3, the array is divided into the following 4 subsegments:\n\n[1, 2, 3, 4, 5]\n[1, 2, 3, 4, 5]\n[1, 2, 3, 4, 5]\n[1, 2, 3, 4, 5]\n\nIf we have n = 6, and k = 3, the array is divided into the following 3 subsegments:\n\n[1, 2, 3, 4, 5, 6]\n[1, 2, 3, 4, 5, 6]\n[1, 2, 3, 4, 5, 6]\n\nIf we have n = 5, and k = 2, the array is divided into the following 2 subsegments:\n\n[1, 2, 3, 4, 5]\n[1, 2, 3, 4, 5]\n\nIf we have n = 5, and k = 1, the array is divided into the following 1 subsegment:\n\n[1, 2, 3, 4, 5]\n\nIf we have n = 5, and k = 0, the array is divided into the following 0 subsegments:\n\n[]\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 2\") == \"\"\nassert solution(\"1 1 2 2\") == \"\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 3 5\\nNO\\nNO'\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 3 4 5 7 8 9 10''') == 'NO\\nNO\\nYES\\n1 3 5\\n1 3 5\\n1 3 5\\n1 3 5\\n1 3 5'\n'''\nfrom math import sqrt\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"test\") == \"NO\"\nassert solution(\"3\") == \"YES\\n2 3\"\nassert solution(\"5 3\") == \"YES\\n1 2 3\"\nassert solution(\"5 4\\n1 2 3 4 5\\n6 2\") == \"YES\\n1 3 5\\n6 2\"\nassert solution(\"5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\n6 2\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n\nN = int(input())\nfor i in range(N):\n    n, k = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    s = 0\n    for i in a:\n        if i % 2 == 1:\n            s += i\n    if s % 2!= 0:\n        print(\"NO\")\n    else:\n        d = []\n        for i in range(k):\n            d.append(a[i])\n        for i in range(k, n):\n            if a[i] % 2 == 0:\n                d.append(a[i])\n        if sum(d) % 2 == 0:\n            print(\"YES\", *d)\n        else:\n            print(\"NO\")"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == '''YES\n1 3 5\nNO\nNO'''\n\nassert solution('''3 3\n8 9 1\n7 6 2\n7 6 3\n1 2 3 4 5\n4 1\n1 2 3 4 5''') == '''YES\n3 1 3\nNO'''\n\nassert solution('''3 3\n5 3\n5 2 3 4 5\n5 2 3 4 5''') == '''NO\nNO'''\n\nassert solution('''1 3\n1 2 3 4 5\n1 2 3 4 5''') == '''YES\n1 1 3'''\n\nassert solution('''1 3\n2 3\n3 4 5\n1 2 3 4 5\n1 2 3 4 5''') == '''YES\n1 1 3\n2 1 3'''"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\""
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"11\") == 2\nassert solution(\"10\") == 1\nassert solution(\"100\") == 4\nassert solution(\"11111111\") == 4294967293\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\n\"\"\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('00000010100101000001111010011100') == '964176192'\nassert solution('111111111111111111111111111111101') == '3221225471'\nassert solution('00000101111010000010110100110110') == '54893614'\nassert solution('11111111111111111111111111111101') == '3221225472'\nassert solution('11111111111111111111111111111111') == '1'\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('00000010100101000001111010011100') == 964176192\nassert solution('111111111111111111111111111111101') == 3221225471\nassert solution('111110000110000010100101000000') == -43576567\nassert solution('111111111111111111111111111111110') == -68902866\nassert solution('11111111111111111111111111111111111') == -481209816\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"00000010100101000001111010011100\") == 964176192\nassert solution(\"111111111111111111111111111111101\") == 3221225471\nassert solution(\"111111111111111111111111111111111\") == 0\nassert solution(\"0\") == 0\nassert solution(\"1\") == 1\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\"\nassert solution(10) == \"16\"\nassert solution(100) == \"256\"\nassert solution(1000) == \"65536\"\nassert solution(10000) == \"4294967296\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('100') == '110'\nassert solution('1010') == '1110'\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('00000010100101000001111010011100') == 964176192\nassert solution('111111111111111111111111111111101') == 3221225471\n\n'''"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0000000000000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\n\n\"\"\""
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '[\\n [1],\\n [1, 1],\\n [1, 2, 1],\\n [1, 3, 3, 1],\\n [1, 4, 6, 4, 1]\\n]'"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(None) == None\nassert solution(0) == None\nassert solution(1) == [[1]]\nassert solution(2) == [[1], [1, 1]]\nassert solution(3) == [[1], [1, 1], [1, 2, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == [[1]]\nassert solution('2') == [[1], [1, 1]]\nassert solution('3') == [[1], [1, 1], [1, 2, 1]]\nassert solution('4') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\nassert solution('5') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(None) is None\nassert solution(\"asdfasdf\") == None\nassert solution(5) == [\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\nassert solution(1) == [[1]]\nassert solution(2) == [[1], [1,1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(5) == [\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n\nassert solution(1) == [\n    [1]\n]\n\nassert solution(10) == [\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1],\n[1,5,10,10,5,1],\n[1,6,15,20,15,6,1],\n[1,7,21,35,35,21,7,1],\n[1,8,28,56,70,56,28,8,1],\n[1,9,36,84,120,84,36,9,1]\n]\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\\n1\"\nassert solution(\"4\") == \"1\\n1\\n1\\n1\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == '[1]'\nassert solution('5') == '[1,1,1,1,1]'\nassert solution('6') == '[1,1,1,2,1,1]'\nassert solution('7') == '[1,1,1,3,3,1,1]'\nassert solution('8') == '[1,2,1,3,3,1,1,1]'\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\") == [[1]]\nassert solution(\"2\") == [[1],[1,1]]\nassert solution(\"3\") == [[1],[1,1],[1,2,1]]\nassert solution(\"4\") == [[1],[1,1],[1,2,1],[1,3,3,1]]\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\naditya@gmail.com\\nbob@gmail.com\\ncarl@gmail.com\") == ['bob@gmail.com', 'carl@gmail.com', 'aditya@gmail.com']\nassert solution(\"4\\naditya@gmail.com\\nbob@gmail.com\\ncarl@gmail.com\\ndonald@gmail.com\") == ['bob@gmail.com', 'carl@gmail.com', 'donald@gmail.com', 'aditya@gmail.com']\nassert solution(\"0\") == []\nassert solution(\"4\\naditya@gmail.com\\nbob@gmail.com\\ncarl@gmail.com\\ndonald@gmail.com\") == ['bob@gmail.com', 'carl@gmail.com', 'donald@gmail.com', 'aditya@gmail.com']\n\n\n=====Sample Input=====\n3\nbob@gmail.com\naditya@gmail.com\ncarl@gmail.com\n\n=====Sample Output=====\n['aditya@gmail.com', 'bob@gmail.com', 'carl@gmail.com']\n\n\n>>>> solution(\"3\\naditya@gmail.com\\nbob@gmail.com\\ncarl@gmail.com\")\n['bob@gmail.com', 'carl@gmail.com', 'aditya@gmail.com']\n>>>> solution(\"4\\naditya@gmail.com\\nbob@gmail.com\\ncarl@gmail.com\\ndonald@gmail.com\")\n['bob@gmail.com', 'carl@gmail.com', 'donald@gmail.com', 'aditya@gmail.com']\n>>>> solution(\"0\")\n[]\n>>>> solution(\"4\\naditya@gmail.com\\nbob@gmail.com\\ncarl@gmail.com\\ndonald@gmail.com\")\n['bob@gmail.com', 'carl@gmail.com', 'donald@gmail.com', 'aditya@gmail.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\nchris_rivers@gmail.com\\njoe_e_e@hotmail.com\\nkevin_e_e@hotmail.com\\nchris_e_e@yahoo.com\\njoe_e_e@hotmail.com\\nkevin_e_e@yahoo.com\\nchris_e_e@gmail.com\\njoe_e_e@yahoo.com\\nkevin_e_e@gmail.com') == ['kevin_e_e@gmail.com', 'chris_e_e@gmail.com', 'joe_e_e@gmail.com']\nassert solution('1\\njoe@gmail.com\\njoe@gmail.com') == ['joe@gmail.com']\nassert solution('100\\njoe@gmail.com\\njoe@gmail.com\\njoe_e_e@yahoo.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com') == ['kevin_e_e@gmail.com', 'joe_e_e@gmail.com', 'kevin_e_e@gmail.com']\nassert solution('100\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\njoe_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com\\nkevin_e_e@gmail.com') == ['kevin_e_e@gmail.com', 'joe_e_e@gmail.com', 'kevin_e_e@gmail.com']\n\n'''\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ['frodo.shire@shire.com','sauron@shire.com','merryman@shire.com', 'pippin@shire.com', 'aragorn@shire.com', 'boromir@shire.com', 'gandalf@shire.com', 'robin@shire.com','malfoy@shire.com']\n\n'''\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == []\nassert solution('3@abc.com') == ['abc.com']\nassert solution('3@def.com') == ['def.com']\nassert solution('abc@3@def.com') == ['def.com']\nassert solution('abc@3@def.xz') == ['def.xz']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9''') == ''\nassert solution('''9\npeter.allen@gmail.com\nbob.sue@microsoft.com\n''') == ['bob.sue@microsoft.com', 'peter.allen@gmail.com']\nassert solution('''4\ncharlie-charlie@charlies-company.com\ncharlie-charlie-joe@charlies-company.com\nJoey-Joey@joes-company.com\nJoey-Joey-charlie@joes-company.com\n''') == ['charlie-charlie@charlies-company.com', 'charlie-charlie-joe@charlies-company.com', 'Joey-Joey@joes-company.com', 'Joey-Joey-charlie@joes-company.com']\nassert solution('''100''') == []\nassert solution('''12345678901234567890@gmail.com''') == ['12345678901234567890@gmail.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == []\nassert solution(\"ab@a\") == [\"ab@a\"]\nassert solution(\"abc@abcd\") == [\"abc@abcd\"]\nassert solution(\"abc@abcd@efg\") == [\"abc@abcd@efg\"]\nassert solution(\"abc@abcd@efg@hij\") == [\"abc@abcd@efg@hij\"]\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\\n\") == []\nassert solution(\"1\\n2\\n3\\n4\") == []\nassert solution(\"1\\n2\\n3@\\n4\") == []\nassert solution(\"1\\n@\\n2\\n3\\n4\") == []\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\\nfoo@bar.com\\nbar@foo.com\\nfoo-bar@baz-biz.com\\n\") == ['bar@foo.com', 'foo-bar@baz-biz.com']\nassert solution(\"3\\nfoo@bar.com\\nbar@foo.com\\nfoo-bar@baz-biz.com\\n\") == ['bar@foo.com', 'foo-bar@baz-biz.com']\nassert solution(\"6\\nfoo@bar.com\\nbar@foo.com\\nfoo-bar@baz-biz.com\\n\") == ['foo@bar.com', 'bar@foo.com', 'foo-bar@baz-biz.com']\nassert solution(\"3\\nfoo@bar.com\\nbar@foo.com\\nfoo-bar@baz-biz.com\\n\") == ['foo@bar.com', 'bar@foo.com', 'foo-bar@baz-biz.com']\nassert solution(\"1\\nfoo@bar.com\\nbar@foo.com\\nfoo-bar@baz-biz.com\\n\") == ['foo@bar.com', 'foo-bar@baz-biz.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2@gmail.com') == ['2@gmail.com']\nassert solution('1\\n2@gmail.com\\n2@gmail.com') == ['2@gmail.com', '2@gmail.com']\nassert solution('1\\n3@gmail.com\\n2@gmail.com') == ['2@gmail.com']\nassert solution('1\\n2@gmail.com\\n2@gmail.com\\n2@gmail.com') == ['2@gmail.com']\nassert solution('1\\n2@gmail.com\\n2@gmail.com\\n3@gmail.com') == ['2@gmail.com', '3@gmail.com']\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == []\nassert solution(\"David,david,david0@david.com,David,david1@david.com,David,david2@david.com,David,david3@david.com\") == [\"david0@david.com\", \"david1@david.com\", \"david2@david.com\", \"david3@david.com\"]\n\nassert solution(\"Mike,mike,mike@example.com,Mike,mike1@example.com,Mike,mike2@example.com,Mike,mike3@example.com\") == [\"mike@example.com\", \"mike1@example.com\", \"mike2@example.com\", \"mike3@example.com\"]\n\nassert solution(\"a1,b2,a1@example.com,b2,a2@example.com,a3,a3@example.com,b3,b3@example.com\") == [\"a1@example.com\", \"a2@example.com\", \"a3@example.com\", \"b1@example.com\", \"b2@example.com\", \"b3@example.com\"]\n\nassert solution(\"Jason,jason,jason@jason.com,Jason,jason1@jason.com,Jason,jason2@jason.com,Jason,jason3@jason.com,Jason,jason4@jason.com,Jason,jason5@jason.com,Jason,jason6@jason.com,Jason,jason7@jason.com,Jason,jason8@jason.com,Jason,jason9@jason.com,Jason,jason10@jason.com\") == [\"jason@jason.com\", \"jason1@jason.com\", \"jason2@jason.com\", \"jason3@jason.com\", \"jason4@jason.com\", \"jason5@jason.com\", \"jason6@jason.com\", \"jason7@jason.com\", \"jason8@jason.com\", \"jason9@jason.com\", \"jason10@jason.com\"]\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '[0, 1, 1, 8, 27, 109, 858, 479, 211, 121]\n'''\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == [0, 1, 1, 8, 27]\nassert solution('10') == [0, 1, 1, 8, 27, 64, 125, 216, 343, 512]\nassert solution('50') == [0, 1, 1, 8, 27, 64, 125, 216, 343, 512, 9227465, 170525351, 277778613, 478395328, 727486475, 100000000000000]\n\n\n\n\"\"\""
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == [0, 1]\nassert solution(5) == [0, 1, 1, 8, 27]\nassert solution(10) == [0, 1, 1, 8, 27, 125, 384, 987, 1597, 2584]\nassert solution(15) == [0, 1, 1, 8, 27, 125, 384, 987, 1597, 2584, 61035, 110592, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4952451690, 7849852126, 14147925129, 2307861897, 3772018948, 5918369031, 9871551019, 1597258958, 25841975537, 43097037761, 71329586469, 12586269025, 19993186723, 31781189769, 51422939689, 83204024471, 134626912773, 217830968131, 352457818305, 570288717031, 9227465120671, 1493035206229, 2415781758953, 3908816959701, 632459861023, 10233415665801, 165580141508953, 26791429483949, 43349443694751, 70140873311349, 113490317072949, 1836311903245151, 29712150731804281, 49524516902054933, 7849852126659393, 14147925131263258, 23078618976921609, 37720189491646281, 59183690301494847, 98715510194968310, 15972589588928320, 25841975539371495, 43097037761417258, 71329586469563909, 12586269025483051, 19993186723616096, 31781189769391614, 51422939689376942, 83204024504793258, 13462691279303538, 21783096829176774, 35245781839071847, 570288717253012036, 92274651115883973, 14930352180385987, 24157817494799268, 39088169509155562, 63245986144701226, 10233415580505852, 16558014150839089, 26791429483776868, 43349443696296787, 7014087331134929, 11349031701672666, 183631190317548055, 29712150731201115, 49524516902026495, 78498521266897066, 14147925131266179, 23078618976810403, 37720189491658483, 59183690301812801, 987155101937196003, 159725895937607073, 258419755299385043, 43097037765826265, 71329586469557053, 125862690254636369, 199931867236960387, 317811897693856052, 51422939687739659, 83204024504823158, 134626912732473169, 21783096832768795, 35245781839055366, 570288717253013298, 922746511167002241, 149303521803022095, 24157817498172479, 39088169509159079, 632459861464796318, 102334155804920901, 165580141508551471, 267914294839063524, 43349443671466508, 701408733113478992, 113490317029686289, 183631190317750634, 29712150731702966, 495245169020398758, 78498521266920009, 141479251312695741, 230786189769148218, 377201894916592043, 591836903014737257, 987155101938294049, 159725895935788409, 258419755299442947, 430970377633092277, 713295864695597825, 12586269025483029, 199931867237117495, 317811897693927109, 514229396893691099, 832040245046059366, 134626912732497557, 217830968327654350, 35245781839038097, 570288717253017184, 922746511170310357, 149303521803650474, 241578174947174780, 390881695091591825, 632459861466651864, 1023341558049008229, 1655801415084908375, 267914294839083745, 433494436716133497, 701408733113477237, 113490317029758859, 183631190317689151, 297121507317026855, 495245169020978891, 784985212671459179, 1414792513126396354, 230786189768404916, 377201894916643814, 591836903017014645, 987155101938281272, 1597258959357114068, 2584197552993967759, 430970377632131636, 7132958646955603002, 1258626902548556311, 199931867237142930, 3178118976939291232, 514229396877259725, 8320402450491864289, 1346269127324972969, 217830968327684964, 352457818390251856, 570288717253017798, 922746511159691416, 149303521803023114, 2415781749473399042, 390881695091599144, 6324598614667575359, 1023341558048990477, 1655801415084979017, 2679142948386620659, 4334944367183388295, 701408733113475387, 113490317029753945, 1836311903176949176, 297121507317011475, 4952451690207976178, 7849852126715194059, 1414792513126402918, 2307861897691477686, 3772018949166467360, 5918369030171239479, 987155101939220329, 1597"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(8) == [0, 1, 1, 8, 27, 81, 149, 274]\n\nNote:\n\nN is guaranteed to be a positive integer.\n\n======Test Case======\n`Input`: \n8\n`Output`: \n[0, 1, 1, 8, 27, 81, 149, 274]\n\n`Input`: \n9\n`Output`: \n[0, 1, 1, 8, 27, 81, 149, 274, 945]\n\n`Input`: \n10\n`Output`: \n[0, 1, 1, 8, 27, 81, 149, 274, 945, 1159, 2789, 4181]\n\n`Input`: \n11\n`Output`: \n[0, 1, 1, 8, 27, 81, 149, 274, 945, 1159, 2789, 4181, \n5983, 9261, 17105, 28657, 46368, 75025, 121393, 196418, \n317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, \n9227465, 14930352, 24157817, 39088169, 63245986, 102334155, \n165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, \n2971215073, 4807526976, 7778742049, 12586269025, 20365011074, \n32951280099, 53316291173, 86267571272, 139583862445, 225851433717, \n363600888336, 576000227565, 106102098577, 171676801775, 286571064065, \n467761905483, 755165657189, 110904012935, 184466018065, 2971215073, \n53316291173, 86267571272, 139583862445, 225851433717, 363600888336, \n576004528133, 102334155, 165580141, 267914296, 433494437, 701408733, \n1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, \n20365011074, 32951280099, 53316291173, 86267571272, 139583862445, \n225851433717, 363600888336, 576000227565, 106102098577, 171676801775, \n286571064065, 4761905483, 755165657189, 110904012935, 184466018065, \n2971215073, 433494437, 701408733, 1134903170, 1836311903, 2971215073, \n53316291173, 86267571272, 139583862445, 225851433717, 363600888336, \n576004528133, 102334155, 165580141, 267914296, 433494437, 701408733, \n1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, \n20365011074, 32951280099, 53316291173, 86267571272, 139583862445, \n225851433717, 363600888336, 576004528133, 102334155, 165580141, \n267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, \n4807526976, 7778742049, 12586269025, 20365011074, 32951280099, \n53316291173, 86267571272, 139583862445, 225851433717, 363600888336, \n576004528133, 102334155, 165580141, 267914296, 433494437, 701408733, \n1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, \n20365011074, 32951280099, 53316291173, 86267571272, 139583862445, \n225851433717, 363600888336, 576004528133, 102334155, 165580141, \n267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, \n4807526976, 7778742049, 12586269025, 20365011074, 32951280099, \n53316291173, 86267571272, 139583862445, 225851433717, 363600888336, \n576004528133, 102334155, 165580141, 267914296, 433494437, 701408733, \n1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, \n20365011074, 32951280099, 53316291173, 86267571272, 139583862445, \n225851433717, 363600888336, 576004528133, 102334155, 165580141, \n267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, \n4807526976, 7778742049, 12586269025, 20365011074, 32951280099, \n53316291173, 86267571272, 139583862445, 225851433717, 363600888336, \n576004528133, 102334155, 165580141, 267914296, 433494437, 701408733, \n1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, \n20365011074, 32951280099, 53316291173, 86267571272, 139583862445, \n225851433717, 363600888336, 576004528133, 102334155, 165580141, \n267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, \n4807526976, 7778742049, 12586269025, 20365011074, 32951280099, \n53316291173, 86267571272, 139583862445, 225851433717, 363600888336, \n576004528133, 102334155, 165580141, 267914296, 433494437, 701408733, \n1134903170, 1836311903, 2971215073, 48075"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0') == [0]\nassert solution('1') == [0, 1]\nassert solution('2') == [0, 1, 1]\nassert solution('3') == [0, 1, 1, 2]\nassert solution('4') == [0, 1, 1, 2, 3]\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4') == [0, 1, 1, 8]\n\n=====Sample Input=====\n\n4\n\n=====Sample Output=====\n\n[0, 1, 1, 8]\n\n\"\"\"\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(6) == [0, 1, 1, 8, 27, 216]"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == [0, 1, 1, 8, 27, 109, 274, 489, 705, 1213, 2232, 3647, 4792]\nassert solution('10') == [0, 1, 1, 8, 27, 109, 274, 489, 705, 1213, 2232, 3647, 4792]\n\n'''\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(10) == [0, 1, 1, 8, 27, 123, 462, 729, 1701, 3701]\n\"\"\"\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0) == []\nassert solution(1) == [0]\nassert solution(2) == [0, 1]\nassert solution(3) == [0, 1, 1]\nassert solution(4) == [0, 1, 1, 2]\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"<a><b><c><d/></c></b></a>\") == 3\nassert solution(\"<a><b><c><d><e/></d></c></b></a>\") == 3\nassert solution(\"<a>  <b><c><d/></c></b>  <e/></a>\") == 3\nassert solution(\"<a> <b> <c><d/></c></b> <e/></a>\") == 3\nassert solution(\"<a>  <b> <c> <d><e/></d></c></b>  <e/></a>\") == 3\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('<a><b/></a>') == 0\nassert solution('<a><b></b><b/></a>') == 1\nassert solution('<a><b><b/></b></a>') == 2\nassert solution('<a><b><c><b/></c></b></a>') == 3\nassert solution('<a> <b> <c><b/></c></b> </b> </a>') == 3\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\n\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>Vikas</name>\\n</author>\\n<link>http://google.com</link>\\n<id>12345</id>\\n<updated>2013-12-25T12:00:00</updated>\\n<title>Test</title>\\n<summary>Programming challenges</summary>\\n</entry>\\n</feed>') == 1\n\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == 1\n\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>Vikas</name>\\n</author>\\n<link>http://google.com</link>\\n<id>12345</id>\\n<updated>2013-12-25T12:00:00</updated>\\n<title>Test</title>\\n<summary>Programming challenges</summary>\\n</entry>\\n</feed>') == 1\n\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == 1"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n    </feed>''') == 0\nassert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <entry>\n            <author>\n                <name>Harsh</name>\n                <email>harsh@hackerrank.com</email>\n            </author>\n            <link rel=\"self\" type=\"alternate\" href=\"http://hackerank.com/feed\" />\n            <link rel=\"edit\" type=\"application/atom+xml\" href=\"http://hackerank.com/index.xml\" />\n            <title>Learn XML in One Weekend</title>\n            <content type=\"xhtml\">\n                <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                    <b>XML</b> is a language <a href=\"http://xml.org/sax\">XML</a>-based \n                    standard that provides \n                    schemas for encoding and \n                    interpreting XML documents. Its standard includes basic \n                    elements, a \n                    set of \n                    clasification \n                    systems, a model for \n                    representing \n                    information, \n                    a set of \n                    conversions, and \n                    a set of \n                    processing \n                    steps. XML works on \n                    many \n                    languages, including many \n                    programming languages \n                    like JavaScript, Python, Ruby, Perl, \n                    PHP, Java, C++, and more.\n                </div>\n            </content>\n        </entry>\n    </feed>''') == 1\nassert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <entry>\n            <author>\n                <name>Harsh</name>\n                <email>harsh@hackerrank.com</email>\n            </author>\n            <link rel=\"self\" type=\"alternate\" href=\"http://hackerank.com/feed\" />\n            <link rel=\"edit\" type=\"application/atom+xml\" href=\"http://hackerank.com/index.xml\" />\n            <title>Learn XML in One Weekend</title>\n            <content type=\"xhtml\">\n                <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                    <b>XML</b> is a language <a href=\"http://xml.org/sax\">XML</a>-based \n                    standard that provides \n                    schemas for encoding and \n                    interpreting XML documents. Its standard includes basic \n                    elements, a \n                    set of \n                    clasification \n                    systems, a model for \n                    representing \n                    information, \n                    a set of \n                    conversions, and \n                    a set of \n                    processing \n                    steps. XML works on \n                    many \n                    languages, including many \n                    programming languages \n                    like JavaScript, Python, Ruby, Perl, \n                    PHP, Java, C++, and more.\n                </div>\n            </content>\n        </entry>\n    </feed>''') == 0\nassert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <entry>\n            <author>\n                <name>Harsh</name>\n                <email>harsh@hackerrank.com</email>\n            </author>\n            <link rel=\"self\" type=\"alternate\" href=\"http://hackerank.com/feed\" />\n            <link rel=\"edit\" type=\"application/atom+xml\" href=\"http://hackerank.com/index.xml\" />\n            <title>Learn XML in One Weekend</title>\n            <content type=\"xhtml\">\n                <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                    <b>XML</b> is a language <a href=\"http://xml.org/sax\">XML</a>-based \n                    standard that provides \n                    schemas for encoding and \n                    interpreting XML documents. Its standard includes basic \n                    elements, a \n                    set of \n                    clasification \n                    systems, a model for \n                    representing \n                    information, \n                    a set of \n                    conversions, and \n                    a set of \n                    processing \n                    steps. XML works on \n                    many \n                    languages, including many \n                    programming languages \n                    like JavaScript, Python, Ruby, Perl, \n                    PHP, Java, C++, and more.\n                </div>\n            </content>\n        </entry>\n    </feed>''') == 2\nassert solution('''\n    <feed xml:lang='en'>\n        <title>HackerRank</title>\n        <subtitle lang='en'>Programming challenges</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <entry>\n            <author>\n                <name>Harsh</name>\n                <email>harsh@hackerrank.com</email>\n            </author>\n            <link rel=\"self\" type=\"alternate\" href=\"http://hackerank.com/feed\" />\n            <link rel=\"edit\" type=\"application/atom+xml\" href=\"http://hackerank.com/index.xml\" />\n            <title>Learn XML in One Weekend</title>\n            <content type=\"xhtml\">\n                <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                    <b>XML</b> is a language <a href=\"http://xml.org/sax\">XML</a>-based \n                    standard that provides \n                    schemas for encoding and \n                    interpreting XML documents. Its standard includes basic \n                    elements, a \n                    set of \n                    clasification \n                    systems, a model for \n                    representing \n                    information, \n                    a set of \n                    conversions, and \n                    a set of \n                    processing \n                    steps. XML works on \n                    many \n                    languages, including many \n                    programming languages \n                    like JavaScript, Python, Ruby, Perl, \n                    PHP, Java, C++, and more.\n                </div>\n            </content>\n        </entry>\n    </feed>''') == 1\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 0\n\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 1\n\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 2\n\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 0\n\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == 1"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('<feed xml:lang=\"en\">\n<title>HackerRank</title>\n<subtitle lang=\"en\">Programming challenges</subtitle>\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\n<updated>2013-12-25T12:00:00</updated>\n<icon></icon>\n<rights>HackerRank</rights>\n<author>Ritesh B</author>\n<categories>\n<category>Chess</category>\n<category>Science: Computers</category>\n<category>Science: Mathematics</category>\n<category>Arts</category>\n<category>Sports</category>\n<category>Humanities</category>\n<category>Computers</category>\n<category>Mathematics</category>\n<category>Mythology</category>\n<category>History</category>\n</categories>\n</feed>') == 0\nprint(solution('<a><b><c/><d><e><f/></d></e></b></a><g/><h><i/></h></g>'))\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('<html><head><title>Title</title></head><body><h1>Title</h1><p>Paragraph.</p></body></html>') == 3\nassert solution('<a><b><c/></b></a>') == 3\nassert solution('<x><y/></x>') == 1\nassert solution('<x><y><z/></y></x>') == 2\nassert solution('<x>y<a>z</a></x>') == 2\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"<test></test>\") == \"0\"\nassert solution(\"<a><b></b></a>\") == \"1\"\nassert solution(\"<a><b><c></c></b></a>\") == \"2\"\nassert solution(\"<a><b><c><d></d></c></b></a>\") == \"3\"\nassert solution(\"<a><b><c><d></d></c></b><e><f/></e></a>\") == \"3\"\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n\"\"\"\n"
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text\">\\n<!--Optional:-->\\n<text xml:space=\"preserve\">G05</text>\\n<image src=\"krishna.png\" />\\n<!--Orthogonal to above line-->\\n<text xml:space=\"preserve\">IIT Bombay</text>\\n</content>\\n<title>\\n<!--Optional:-->\\n<text xml:space=\"preserve\">Challenge Problem</text>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/contests/25/challenges/1\"/>\\n<guid>\\n<!--Optional:-->\\n<text xml:space=\"preserve\">G051-HAND-LEARN-PROGRAMMING</text>\\n</guid>\\n<pubDate>\\n<!--Optional-->\\n<text xml:space=\"preserve\">2013-12-25T12:00:00</text>\\n</pubDate>\\n</entry>\\n</feed>') == 1\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text\">\\n<!--Optional:-->\\n<text xml:space=\"preserve\">G05</text>\\n<image src=\"krishna.png\" />\\n<!--Orthogonal to above line-->\\n<text xml:space=\"preserve\">IIT Bombay</text>\\n</content>\\n<title>\\n<!--Optional:-->\\n<text xml:space=\"preserve\">Challenge Problem</text>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/contests/25/challenges/1\"/>\\n<guid>\\n<!--Optional-->\\n<text xml:space=\"preserve\">G051-HAND-LEARN-PROGRAMMING</text>\\n</guid>\\n<pubDate>\\n<!--Optional-->\\n<text xml:space=\"preserve\">2013-12-25T12:00:00</text>\\n</pubDate>\\n</entry>\\n</feed>') == 2\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text\">\\n<!--Optional:-->\\n<text xml:space=\"preserve\">G05</text>\\n<image src=\"krishna.png\" />\\n<!--Orthogonal to above line-->\\n<text xml:space=\"preserve\">IIT Bombay</text>\\n</content>\\n<title>\\n<!--Optional:-->\\n<text xml:space=\"preserve\">Challenge Problem</text>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/contests/25/challenges/1\"/>\\n<guid>\\n<!--Optional-->\\n<text xml:space=\"preserve\">G051-HAND-LEARN-PROGRAMMING</text>\\n</guid>\\n<pubDate>\\n<!--Optional-->\\n<text xml:space=\"preserve\">2013-12-25T12:00:00</text>\\n</pubDate>\\n</entry>\\n</feed>') == 3\nassert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text\">\\n<!--Optional:-->\\n<text xml:space=\"preserve\">G05</text>\\n<image src=\"krishna.png\" />\\n<!--Orthogonal to above line-->\\n<text xml:space=\"preserve\">IIT Bombay</text>\\n</content>\\n<title>\\n<!--Optional:-->\\n<text xml:space=\"preserve\">Challenge Problem</text>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/contests/25/challenges/1\"/>\\n<guid>\\n<!--Optional-->\\n<text xml:space=\"preserve\">G051-HAND-LEARN-PROGRAMMING</text>\\n</guid>\\n<pubDate>\\n<!--Optional-->\\n<text xml:space=\"preserve\">2013-12-25T12:00:00</text>\\n</pubDate>\\n</entry>\\n<entry>\\n<author>\\n<name>krishna</name>\\n</author>\\n<content type=\"text\">\\n<!--Optional:-->\\n<text xml:space=\"preserve\">G05</text>\\n<image src=\"krishna.png\" />\\n<!--Orthogonal to above line-->\\n<text xml:space=\"preserve\">IIT Bombay</text>\\n</content>\\n<title>\\n<!--Optional:-->\\n<text xml:space=\"preserve\">Challenge Problem</text>\\n</title>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/contests/25/challenges/1\"/>\\n<guid>\\n<!--Optional-->\\n<text xml:space=\"preserve\">G051-HAND-LEARN-PROGRAMMING</text>\\n</guid>\\n<pubDate>\\n<!--Optional-->\\n<text xml:space=\"preserve\">2013-12-25T12:00:00</text>\\n</pubDate>\\n</entry>\\n</feed>') == 4\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"12344567\") == \"NO\"\nassert solution(\"12345678\") == \"NO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n77778888\\n1234567890\\n1111111111\\n1234567890\") == \"YES\\nYES\\nYES\\nNO\\n\""
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'NO', 'wrong result'"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"434\") == \"NO\"\nassert solution(\"43476\") == \"NO\"\nassert solution(\"43456\") == \"YES\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7034555549') == 'NO'\nassert solution('71234567') == 'NO'\nassert solution('912345678') == 'NO'\nassert solution('9123456789') == 'NO'\nassert solution('91234567890') == 'YES'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('\"72010805023\"') == 'YES'\nassert solution('\"91 5235818\"') == 'NO'\nassert solution('\"913012345678\"') == 'YES'\nassert solution('\"93712345678\"') == 'NO'\nassert solution('\"93712345678\"') == 'NO'\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"NO\"\nassert solution(\"136-5309647919\") == \"YES\"\nassert solution(\"136 5309 6479 19\") == \"NO\"\nassert solution(\"136-5309647919 3\") == \"NO\"\nassert solution(\"136 5309647919 3\") == \"NO\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1234567890\n1234567890\n\"\"\") == \"\"\"NO\nYES\nNO\n\"\"\"\nassert solution(\"\"\"\n1234567890\n1234567890\n\"\"\") == \"\"\"NO\nYES\n\"\"\"\nassert solution(\"\"\"\n123\n4567890\n1234\n\"\"\") == \"\"\"NO\nYES\nNO\n\"\"\"\nassert solution(\"\"\"\n\"\"\") == \"\"\"YES\n\"\"\"\nassert solution(\"\"\"\n12345678901234567890\n\"\"\") == \"\"\"YES\n\"\"\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1234567890\") == \"NO\"\nassert solution(\"71234567890\") == \"NO\"\nassert solution(\"7123456789\") == \"YES\"\nassert solution(\"1234567891\") == \"NO\"\nassert solution(\"123456789012\") == \"YES\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0')=='NO'\nassert solution('680840404')=='NO'\nassert solution('762440179')=='NO'\nassert solution('880840404')=='YES'\nassert solution('880840409')=='YES'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3 4\\n2 4 3 4\\n4\\n1 2 3 4') == '1\\n2\\n3\\n4'"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n4 1 5\\n2 4 11 22 33\\n3\\n1 2 3 4') == '1\\n2\\n3\\n4\\n5\\n11\\n22\\n33'\n\n=====Sample Input=====\n4\n2 4 5 9\n4\n2 4 11 22 33\n1\n2 3 4 5\n\n=====Sample Output=====\n1\n5\n11\n22\n33\n4\n3\n'''"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 4 3 2\\n2 4 3 1\\n1 3 2\\n1 3') == '3\\n4\\n1\\n2'\nassert solution('5\\n5 4 3 2\\n2 4 3 1\\n1 3 2\\n1 3\\n1 3') == '3\\n4\\n1\\n2'\nassert solution('5\\n5 4 3 2\\n2 4 3 1\\n1 3 2\\n1 3\\n1 3') == '3\\n4\\n1\\n2'\nassert solution('5\\n5 4 3 2\\n2 4 3 1\\n1 3 2\\n1 3\\n1 3') == '3\\n4\\n1\\n2'\nassert solution('5\\n5 4 3 2\\n2 4 3 1\\n1 3 2\\n1 3\\n1 3') == '3\\n4\\n1\\n2'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4\\n2 4 6 8\\n') == '5\\n3\\n6\\n7\\n9'\nassert solution('5\\n1 2 3 4\\n2 4 6 8\\n') == '1\\n3\\n5\\n7\\n9'\nassert solution('5\\n1 2 3 4\\n2 4 6 8\\n') == '1\\n3\\n5\\n7\\n9'\nassert solution('5\\n1 2 3 4\\n2 4 6 8\\n') == '1\\n3\\n5\\n7\\n9'\nassert solution('5\\n1 2 3 4\\n2 4 6 8\\n') == '1\\n3\\n5\\n7\\n9'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n2\\n1\") == \"1\\n2\\n\"\nassert solution(\"4\\n2 1 5 9\\n4\\n2 3 6 8\") == \"2\\n3\\n5\\n6\\n8\\n\"\n\"\"\""
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\\n8\\n9\\n5\\n7\\n1\\n3\\n2\\n6\\n\"\nprint(solution(stdin))\n\n=====Sample Input=====\n4\n2 4 5 9\n4\n2 4 11 12\n\n=====Sample Output=====\n5\n9\n11\n12\n\n\"\"\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"[1, 2, 4, 5, 6, 7, 9, 11, 12]\"\n\nassert solution(stdin) == \"[2, 3, 4, 5, 6, 7, 8, 9, 10]\"\n\nassert solution(stdin) == \"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\"\n\nassert solution(stdin) == \"[11, 12]\"\n\nassert solution(stdin) == \"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\""
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1') == '1'\nassert solution('1 2 3\\n1 2\\n1 2\\n2') == '2\\n3'\nassert solution('1 2 3\\n1 2\\n1 2\\n2 3') == '3\\n4'\nassert solution('1 2 3\\n2 3\\n2 3\\n2 3') == '3\\n4'\nassert solution('1 2 3\\n2 3\\n2 3\\n3') == '3\\n4'\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('input_problem03.txt') == '24.69'\n\n\"\"\"\n\nfrom __future__ import absolute_import\nfrom __future__ import print_function\nfrom __future__ import division\nfrom collections import namedtuple"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\nName,Marks,Class,Name\\nDhruv,99,V,Dhruv\\nAkshat,98,V,Akshat\\nAbhi,97,V,Abhi\\n') == 92.33\nassert solution('5\\nId,Marks,Class,Name\\n1,99,V,Dhruv\\n2,98,V,Akshat\\n3,97,V,Abhi\\n4,96,V,Dhruv\\n5,95,I,Dhruv\\n') == 96.00\nassert solution('6\\nId,Marks,Class,Name\\n1,99,V,Dhruv\\n2,98,V,Akshat\\n3,97,V,Abhi\\n4,96,V,Dhruv\\n5,95,I,Dhruv\\n6,94,V,Dhruv\\n') == 95.00\n\n'''\n\nfrom collections import namedtuple\n\nN = int(input())\nColumns = input().split()\n\nStudent = namedtuple('Student', Columns)\n\nstudents = []\nfor _ in range(N):\n    student = Student(*input().split())\n    students.append(student)\n\ntotal_marks = 0\n\nfor student in students:\n    total_marks += int(student.MARKS)\n\naverage_marks = total_marks / len(students)\nprint(average_marks)\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == str(round(average,2))\n\n=====Sample Input=====\n9\nID         MARKS      NAME       CLASS     \n1          97         Raymond    7         \n2          50         Steven     4         \n3          91         Adrian     9         \n4          72         Stewart    5         \n5          80         Peter      6   \n6          77         Stewart    5         \n7          93         Peter      6   \n8          75         Watson    4         \n9          83         Adrian     9         \n10         97         Raymond    7         \n\n=====Sample Output=====\n78.00\n\n\"\"\""
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n'5',\n'ID         MARKS      NAME       CLASS',\n'1          97         Raymond    7',\n'2          50         Steven     4',\n'3          91         Adrian     9',\n'4          72         Stewart    5',\n'5          80         Peter      6',\n])) == 'X'\nassert solution('\\n'.join([\n'5',\n'MARKS      CLASS      NAME       ID',\n'92         2          Calum      1',\n'82         5          Scott      2',\n'94         2          Jason      3',\n'55         8          Glenn      4',\n'82         2          Fergus     5',\n])) == 'X'\nassert solution('\\n'.join([\n'5',\n'ID         MARKS      NAME       CLASS',\n'1          97         Raymond    7',\n'2          50         Steven     4',\n'3          91         Adrian     9',\n'4          72         Stewart    5',\n'5          80         Peter      6',\n'6          75         Lauryn    7',\n])) == '92.33'\nassert solution('\\n'.join([\n'5',\n'MARKS      CLASS      NAME       ID',\n'92         2          Calum      1',\n'82         5          Scott      2',\n'94         2          Jason      3',\n'55         8          Glenn      4',\n'82         2          Fergus     5',\n'100        8          Liaocheng   6',\n])) == '81.0'\nassert solution('\\n'.join([\n'5',\n'MARKS      CLASS      NAME       ID',\n'92         2          Calum      1',\n'82         5          Scott      2',\n'94         2          Jason      3',\n'55         8          Glenn      4',\n'82         2          Fergus     5',\n'100        8          Liaocheng   6',\n'0          8          Kiawe     7',\n])) == '85.0'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('N\\nID MARKS CLASS NAME\\n 100 1 95 english history\\n 200 2 80 physics\\n 300 3 75 physics') == '80.50'\n'''"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('abcde') is None\nassert solution('ABCDE') is None\nassert solution('ID MARKS CLASS NAME') is None\nassert solution('ID     MARKS      CLASS  NAME') is None\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n100\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6\n6          74         Lauren     3\n\"\"\") == \"92.70\"\n\nassert solution(\"\"\"\n5\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n\"\"\") == \"81.25\"\n\nassert solution(\"\"\"\n5\nID         MARKS      NAME       CLASS\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n\"\"\") == \"81.25\"\n\n=====Sample Input=====\n5\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n\n=====Explanation=====\n\nThere are 5 students, whose ID numbers, marks, names and classes are given below.\n\n![Average](https://latex.codecogs.com/gif.latex?%5B%5BB%5D%5D%20Average%20marks%20of%20the%20students%20is%20%5B%5BF%5D%20%3D%20%284%2B%5B%281%2B%2BF%29%5D%20%2A%20%3D%20%284%2B%5B%281%2B%2BF%29%5D%20%2F%281%29%20%28%29%29)\n\nAverage = 489 / 5 = 92.0\n\n\"\"\"\n) = 92.0\n\nassert solution(\"\"\"\n5\nMARKS      CLASS      NAME       ID\n92         2          Calum      1\n82         5          Scott      2\n94         2          Jason      3\n55         8          Glenn      4\n82         2          Fergus     5\n\"\"\") = \"81.25\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"123.00\"\nassert solution(\"123 456 789\") == \"123.57\"\nassert solution(\"123 456 789 10\") == \"123.57\"\nassert solution(\"123 456 789 10 30\") == \"123.57\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == '0.00'\nassert solution('0\\n0') == '0.00'\nassert solution('0\\n0\\n0') == '0.00'\nassert solution('0\\n0\\n0\\n0') == '0.00'\nassert solution('0\\n0\\n0\\n0\\n0') == '0.00'\n"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n2\\n3') == 3.0\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == \"96.24\"\nassert solution('0\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == \"96.24\"\nassert solution('0\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == \"96.24\"\nassert solution('0\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == \"96.24\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(100) == \"Not Weird\"\nassert solution(59) == \"Weird\"\nassert solution(24) == \"Not Weird\"\nassert solution(21) == \"Weird\"\nassert solution(24) == \"Not Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10') == \"Not Weird\"\nassert solution('100') == \"Weird\"\nassert solution('81729') == \"Weird\"\nassert solution('50') == \"Not Weird\"\nassert solution('65') == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 'Weird'\nassert solution(2) == 'Not Weird'\nassert solution(3) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(5) == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(17) == \"Weird\"\nassert solution(21) == \"Weird\"\nassert solution(22) == \"Weird\"\nassert solution(28) == \"Not Weird\"\nassert solution(100) == \"Not Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(5) == 'Not Weird'\nassert solution(3) == 'Weird'\nassert solution(5) == 'Weird'\nassert solution(2) == 'Not Weird'\nassert solution(1) == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(n=10) == \"Not Weird\"\nassert solution(n=12) == \"Weird\"\nassert solution(n=17) == \"Weird\"\nassert solution(n=7) == \"Not Weird\"\nassert solution(n=14) == \"Not Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == 'Not Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Weird'\nassert solution('6') == 'Not Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('17' == 'Weird')\nassert solution('6' == 'Not Weird')\nassert solution('10' == 'Weird')\nassert solution('1' == 'Not Weird')\nassert solution('21' == 'Weird')\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 'Not Weird'\nassert solution('3') == 'Weird'\nassert solution('9') == 'Weird'\nassert solution('30') == 'Weird'\nassert solution('1') == 'Not Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == \"Weird\"\nassert solution(2) == \"Not Weird\"\nassert solution(3) == \"Weird\"\nassert solution(4) == \"Not Weird\"\nassert solution(5) == \"Weird\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('<feed xml:lang='en'>'\n    '<title>HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '</feed>') == '6'\n\nassert solution('<feed xml:lang='en-gb'>'\n    '<title type=\"html\">HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '</feed>') == '6'\n\nassert solution('<feed xml:lang='en-gb'>'\n    '<title type=\"html\">HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<generator uri=\"http://www.hackerrank.com/\"/>'\n    '</feed>') == '6'\n\nassert solution('<feed xml:lang='en-gb'>'\n    '<title type=\"html\">HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<generator uri=\"http://www.hackerrank.com/\"/>'\n    '<author>'\n        '<name>Shreyas</name>'\n        '<email>shreyas@shreyas.com</email>'\n    '</author>'\n    '</feed>') == '6'\n\nassert solution('<feed xml:lang='en-gb'>'\n    '<title type=\"html\">HackerRank</title>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<generator uri=\"http://www.hackerrank.com/\"/>'\n    '<author>'\n        '<name>Shreyas</name>'\n        '<email>shreyas@shreyas.com</email>'\n    '</author>'\n    '<subtitle lang=\"en\">Programming challenges</subtitle>'\n    '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n    '<updated>2013-12-25T12:00:00</updated>'\n    '<generator uri=\"http://www.hackerrank.com/\"/>'\n    '</feed>') == '6'"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('<feed xml:lang='en'>\\n <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == 1\nassert solution('<feed xml:lang='en'>\\n <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == 6\nassert solution('<feed xml:lang='en-gb'>\\n <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == 6\nassert solution('<feed xml:lang='en-us'>\\n <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == 6\nassert solution('<feed xml:lang='en-ca'>\\n <title>HackerRank</title> <subtitle>Programming challenges</subtitle> <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> <updated>2013-12-25T12:00:00</updated> </feed>') == 6\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '''7\n'''\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == '6'\n'''\n\nfrom xml.etree import ElementTree\n\ntree = ElementTree.fromstring(stdin)\n\nprint(sum(len(el.attrib) for el in tree.iter()))"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n    <title lang='en'>Algorithm Design</title>\n    <link rel='alternate' type='text/html' href='https://www.hackerrank.com/challenges/ctci-xml-1-finding-the-score/tutorial'/>\n    <published>2013-12-25T12:00:00</published>\n    <author>Harshal</author>\n    <content type='text/xml'>\n    <p>Find the score by traversing the XML document,\n    counting the attributes for each tag and assigning a score to it.</p>\n    </content>\n    </entry>\n    </feed>\"\"\") == '46'\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n    <title lang='en'>Algorithm Design</title>\n    <link rel='alternate' type='text/html' href='https://www.hackerrank.com/challenges/ctci-xml-1-finding-the-score/tutorial'/>\n    <published>2013-12-25T12:00:00</published>\n    <author>Harshal</author>\n    <content type='text/xml'>\n    <p>Find the score by traversing the XML document,\n    counting the attributes for each tag and assigning a score to it.</p>\n    <p>The answer will be the sum of attribute scores for all tags.</p>\n    </content>\n    </entry>\n    </feed>\"\"\") == '46'\n\n=====Sample Input=====\n\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n    <title lang='en'>Algorithm Design</title>\n    <link rel='alternate' type='text/html' href='https://www.hackerrank.com/challenges/ctci-xml-1-finding-the-score/tutorial'/>\n    <published>2013-12-25T12:00:00</published>\n    <author>Harshal</author>\n    <content type='text/xml'>\n    <p>Find the score by traversing the XML document,\n    counting the attributes for each tag and assigning a score to it.</p>\n    <p>The answer will be the sum of attribute scores for all tags.</p>\n    </content>\n    </entry>\n    </feed>\n\"\"\"\n\nimport xml.etree.ElementTree as etree\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\nassert solution('''\n<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-gb\">\\n<title type=\"text\">HackerRank</title>\\n<subtitle type=\"text\">Programming challenges</subtitle>\\n<link type=\"text\" rel=\"alternate\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-us\">\\n<title type=\"text\">HackerRank</title>\\n<subtitle type=\"text\">Programming challenges</subtitle>\\n<link type=\"text\" rel=\"alternate\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en-ca\">\\n<title type=\"text\">HackerRank</title>\\n<subtitle type=\"text\">Programming challenges</subtitle>\\n<link type=\"text\" rel=\"alternate\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"fr\">\\n<title type=\"text\">HackerRank</title>\\n<subtitle type=\"text\">Programming challenges</subtitle>\\n<link type=\"text\" rel=\"alternate\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('<feed xml:lang='en'>\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\nassert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == '6'\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n    <author>\n    <name>Harshal</name>\n    </author>\n    <content type='text'>\n    <!--Optional:-->\n    <!--write the code here-->\n    </content>\n    </entry>\n</feed>''') == '8','should work'\n\nassert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n    <author>\n    <name>Harshal</name>\n    </author>\n    <content type='text'>\n    <!--Optional:-->\n    <!--write the code here-->\n    </content>\n    </entry>\n</feed>''') == '8','should work'\n\nassert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n    <author>\n    <name>Harshal</name>\n    </author>\n    <content type='text'>\n    <!--Optional:-->\n    <!--write the code here-->\n    </content>\n    </entry>\n</feed>''') == '5','should work'\n\nassert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n    <author>\n    <name>Harshal</name>\n    </author>\n    <content type='text'>\n    <!--Optional:-->\n    <!--write the code here-->\n    </content>\n    </entry>\n</feed>''') == '8','should work'\n\nassert solution('''<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n    <author>\n    <name>Harshal</name>\n    </author>\n    <content type='text'>\n    <!--Optional:-->\n    <!--write the code here-->\n    </content>\n    </entry>\n</feed>''') == '7','should work'"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('<feed xml:lang=\"en\">'\n        '<title>HackerRank</title>'\n        '<subtitle lang=\"en\">Programming challenges</subtitle>'\n        '<link rel=\"alternate\" type=\"text/html\" href=\"http://hackerrank.com/\"/>'\n        '<updated>2013-12-25T12:00:00</updated>'\n        '<entry>'\n        '<author>Harsh</author>'\n        '<content type=\"text\">'\n        '<!-- Note: In real XML, this is a comment -->'\n        '<!-- Also note: In real XML, this is a comment -->'\n        '<!-- Also note: In real XML, this is a comment -->'\n        '<p>This is a new line</p>'\n        '</content>'\n        '</entry>'\n        '</feed>') == '8'"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1.0 2.0 3.0 4.0''') == 90.0\nassert solution('''3.0 4.0 9.0 9.0''') == 45.0\nassert solution('''3.0 4.0 8.0 5.0''') == 22.5\nassert solution('''1.0 1.0 1.0''') == 0.0\nassert solution('''0.0 0.0 0.0''') == 90.0\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 4 7 8\") == \"45.5\"\nassert solution(\"1 2 3 4\") == \"45.5\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 1 1 1\") == \"90\"\nassert solution(\"1 1 1 2\") == \"135\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    0.0 0.0 0.0\n    \"\"\") == \"90.0\"\nassert solution(\n    \"\"\"\n    1.0 0.0 0.0\n    \"\"\") == \"0.0\"\nassert solution(\n    \"\"\"\n    0.0 1.0 0.0\n    \"\"\") == \"45.0\"\nassert solution(\n    \"\"\"\n    1.0 1.0 0.0\n    \"\"\") == \"0.0\"\nassert solution(\n    \"\"\"\n    1.0 1.0 1.0\n    \"\"\") == \"90.0\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n-1 0 0') == 90.00000\nassert solution('1 0 0\\n0 1 0\\n0 0 1\\n-1 0 0') == 45.00000\nassert solution('1 0 0\\n0 1 0\\n0 0 1\\n-1 1 0') == 135.00000\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0') == 0.00000\n\n'''\nimport math"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"0 0 1 1\"\n) == \"90.00000\"\nassert solution(\n    \"1 0 0 1\"\n) == \"45.00000\"\nassert solution(\n    \"0 1 1 0\"\n) == \"90.00000\"\nassert solution(\n    \"1 1 0 1\"\n) == \"45.00000\"\nassert solution(\n    \"1 0 1 1\"\n) == \"45.00000\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 1\n1 1 1''') == '90'\nassert solution('''1 0 1\n2 2 2''') == '45'\nassert solution('''-1 0 1\n0 0 0''') == '90'\nassert solution('''0 -1 1\n1 1 1''') == '-45'\nassert solution('''1 1 1\n1 1 -1''') == '-45'\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\") == \"90\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"0 1 0\") == \"45\"\nassert solution(\"0 0 1\") == \"pi/4\"\nassert solution(\"0 1 1\") == \"3*pi/4\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3.0 1.0 4.0\n    3.0 -1.0 4.0\n    3.0 3.0 4.0\n    ''') == '0.14142'\nassert solution('''-1.0 3.0 4.0\n    3.0 3.0 4.0\n    -1.0 3.0 4.0\n    ''') == '0.2147'\nassert solution('''2.0 -2.0 -3.0\n    -3.0 -1.0 -2.0\n    3.0 -1.0 3.0\n    ''') == '-1.047'\nassert solution('''0.0 0.0 1.0\n    0.0 1.0 1.0\n    -1.0 1.0 0.0\n    ''') == '2.09439'\nassert solution('''-1.0 1.0 -1.0\n    -1.0 -1.0 1.0\n    -1.0 -1.0 1.0\n    ''') == '2.09439'\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 0 1\\n1 0 0\\n1 0 1') == '45.0\\n'\nassert solution('-1 -2 -3\\n0 -2 3\\n1 -1 2') == '-45.0\\n'\nassert solution('1 1 1\\n-1 -1 -1\\n-1 1 1') == '-45.0\\n'\nassert solution('-1 -2 -3\\n0 -2 3\\n1 1 1') == '-45.0\\n'\nassert solution('0 -1 0\\n0 0 1\\n1 0 0\\n1 0 1') == '45.0\\n'\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '60.00'"
    }
]