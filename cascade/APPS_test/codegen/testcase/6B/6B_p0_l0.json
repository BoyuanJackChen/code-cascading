[
    {
        "number": 4000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 5\n''') == '1 8 6'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 5\n''') == '1 8 6'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 5\n''') == '1 8 6'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 5\n''') == '1 8 6'\n"
    },
    {
        "number": 4001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n'''\n\nfrom collections import Counter"
    },
    {
        "number": 4002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"24\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nk = 1\nfor i in range(n):\n    if a[i] > a[i-1]:\n        k = max(k, i+1)\n\nprint(k)\n\ns = ''\nfor i in range(k):\n    if a[i] > a[i-1]:\n        s += 'L'\n    else:\n        s += 'R'\n\nprint(s)\n"
    },
    {
        "number": 4004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 4 4 7 4 1\n''') == '3'\nassert solution('''5\n2 2 5 2 5\n''') == '3'\nassert solution('''4\n1 3 3 7\n''') == '-1'\nassert solution('''2\n2 8\n''') == '3'\nassert solution('''3\n1 3 3 7\n''') == '-1'\n"
    },
    {
        "number": 4005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('100') == '100'\nassert solution('1000') == '1000'\n"
    },
    {
        "number": 4007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n"
    },
    {
        "number": 4008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'"
    },
    {
        "number": 4011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''2\n33\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''3\n11111\n9 8 7 6 5 4 3 2 1\n''') == '11111'\nassert solution('''4\n4\n1 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 4012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n\nassert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'"
    },
    {
        "number": 4013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\nassert solution('''2\n1 100000\n''') == '0'\nassert solution('''2\n1 100000\n''') == '0'\nassert solution('''2\n1 100000\n''') == '0'\n"
    },
    {
        "number": 4014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\naba''') == 'ababababa'\nassert solution('''3 2\ncat''') == 'catcat'\nassert solution('''3 2\ncat''') == 'catcat'\nassert solution('''3 2\ncat''') == 'catcat'\nassert solution('''3 2\ncat''') == 'catcat'\n"
    },
    {
        "number": 4017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3\\n4 1 5'\nassert solution('''4\n8 3 5 2\n''') == '2\\n1 4'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\n"
    },
    {
        "number": 4018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == '15'\nassert solution('aaaaa') == '15'\n"
    },
    {
        "number": 4019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict"
    },
    {
        "number": 4020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n"
    },
    {
        "number": 4021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\nassert solution(64) == 7\n"
    },
    {
        "number": 4022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'\n\nassert solution('''1\n2 3\n1 2\n9 20\n''') == '0'"
    },
    {
        "number": 4023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\nassert solution('1\\n1') == 'YES'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 4024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asdf') == '4'\nassert solution('aaaaa') == '15'\nassert solution('ajihiushda') == '233'\nassert solution('aaaaa') == '15'\nassert solution('aaaaa') == '15'\n"
    },
    {
        "number": 4025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''6''') == '1'\nassert solution('''7''') == '2'\nassert solution('''8''') == '2'\n"
    },
    {
        "number": 4028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('()') == '0'\nassert solution('(()') == '1'\nassert solution('()()') == '2'\nassert solution('(()())') == '3'\nassert solution('((()))') == '4'\n"
    },
    {
        "number": 4029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('123456789') == '-1'\nassert solution
    },
    {
        "number": 4030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == '1'\nassert solution('ab') == '2'\nassert solution('abc') == '3'\nassert solution('abcd') == '4'\n"
    },
    {
        "number": 4031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'YES'\nassert solution('aba') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('ba') == 'YES'\nassert solution('aba') == 'YES'\n"
    },
    {
        "number": 4032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\n"
    },
    {
        "number": 4033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4''') == '12'\nassert solution('''3 9''') == '14'\nassert solution('''9 3''') == '14'\nassert solution('''3 6''') == '12'\nassert solution('''506 2708''') == '3218'\n"
    },
    {
        "number": 4034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\nabacbecfd\n''') == 'YES'\nassert solution('''8\naaabbcbb\n''') == 'YES'\nassert solution('''7\nabcdedc\n''') == 'NO'\nassert solution('''5\nabcde\n''') == 'YES'\nassert solution('''4\nabcd\n''') == 'NO'\n"
    },
    {
        "number": 4035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('2 2') == '25'\n"
    },
    {
        "number": 4036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''26 6''') == 'YES'\nassert solution('''8 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''9 4''') == 'NO'\nassert solution('''9 4''') == 'NO'\n"
    },
    {
        "number": 4037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''3 2\n-300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''3 2\n-300 -300\n1 299\n1 123\n''') == '3'\n"
    },
    {
        "number": 4038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1''') == 'YES'\nassert solution('''3\n1 1 1 1 1 3 3 3 3 3''') == 'YES'\nassert solution('''4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1''') == 'NO'\nassert solution('''1\n10''') == 'YES'\nassert solution('''2\n1 1 1 1 1 3 3 3 3 3''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 4041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''bbaba\nbb\n''') == '3'\nassert solution('''baaba\nab\n''') == '2'\nassert solution('''abcde\nabcde\n''') == '0'\nassert solution('''asdfasdf\nfasd\n''') == '3'\nassert solution('''aaaaa\naaaaa\n''') == '0'\n"
    },
    {
        "number": 4042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1.200000) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"\n\n\"\"\""
    },
    {
        "number": 4043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\nassert solution('''8 5 3''') == 'YES'\n"
    },
    {
        "number": 4044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\nab\nbc''') == 'YES\\nacbbac'\nassert solution('''3\naa\nbc\n\n''') == 'YES\\ncacbacbab'\nassert solution('''1\ncb\nac\n\n''') == 'YES\\ncbacbacbab'\nassert solution('''2\nab\nbc\n\n''') == 'NO'\nassert solution('''3\naa\nbc\n\n''') == 'NO'\n"
    },
    {
        "number": 4046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\nassert solution('''6\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1'\nassert solution('''5''') == '2'\nassert solution('''2 2 2 3 3''') == '2'\nassert solution('''1 2 2 3 3''') == '2'\nassert solution('''1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '25'\nassert solution('1000') == '250'\nassert solution('10000') == '500'\nassert solution('100000') == '750'\n"
    },
    {
        "number": 4049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '0 1'\nassert solution('''0 1 1''') == '0 1'\nassert solution('''1 1 0''') == '0 1'\nassert solution('''1 1 0''') == '0 1'\nassert solution('''1 1 1''') == '0 1'\n"
    },
    {
        "number": 4050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''1\n1 1 1 1''') == '4'\nassert solution('''2\n1 1 1 1''') == '4'\n"
    },
    {
        "number": 4051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''3\n3 1 2''') == 'NO'\nassert solution('''3\n3 1 2''') == 'NO'\n"
    },
    {
        "number": 4052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nabcdef\nabdfec\n''') == '4'\nassert solution('''4\nabcd\naccd\n''') == '-1'\nassert solution('''4\nabcd\naccd\n''') == '0'\nassert solution('''4\nabcd\naccd\n''') == '3 5 4 5'\nassert solution('''4\nabcd\naccd\n''') == '3 5 4 5'\n"
    },
    {
        "number": 4053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '''SPPSPSPS'''\nassert solution('''3''') == '''PS'''\nassert solution('''2''') == '''PS'''\nassert solution('''4''') == '''PPSS'''\nassert solution('''6''') == '''PPSPSPSPS'''\n"
    },
    {
        "number": 4054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 1 0 1 1 0 1 0 1 0''') == '2'\nassert solution('''5\n1 1 0 0 0''') == '0'\nassert solution('''4\n1 1 1 1''') == '0'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '0'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 4056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n6 90 12 18 30 18''') == '4'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '4'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '4'\n"
    },
    {
        "number": 4057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''1\n100''') == '1'\nassert solution('''6\n1 2 4 3 3 2''') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1\\n') == '3'\nassert solution('5 3\\n1 0 0 0 1\\n') == '2'\nassert solution('5 10\\n0 0 0 0 0\\n') == '-1'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 1\\n') == '3'\nassert solution('10 10\\n0 0 1 1 0 1 0 0 1\\n') == '-1'\n"
    },
    {
        "number": 4059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '3'\nassert solution('''10''') == '3'\nassert solution('''100''') == '3'\nassert solution('''1000''') == '3'\nassert solution('''10000''') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('()') == 0\nassert solution('()()') == 0\nassert solution('((()') == 0\nassert solution('((()' == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''bbaba\nbb\n''') == '3'\nassert solution('''baaba\nab\n''') == '2'\nassert solution('''abcde\nabcde\n''') == '0'\nassert solution('''asdfasdf\nfasd\n''') == '3'\nassert solution('''aaaaa\naaaaa\n''') == '0'\n"
    },
    {
        "number": 4062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\nassert solution('1 2 1 1') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('6\\n9 1 4 4 6 7\\n9 1 4 4 6 7') == '2'\nassert solution('6\\n9 1 4 4 6 7\\n9 1 4 4 6 7\\n9 1 4 4 6 7') == '2'\nassert solution('6\\n9 1 4 4 6 7\\n9 1 4 4 6 7\\n9 1 4 4 6 7\\n9 1 4 4 6 7') == '2'\nassert solution('6\\n9 1 4 4 6 7\\n9 1 4 4 6 7\\n9 1 4 4 6 7\\n9 1 4 4 6 7\\n9 1 4 4 6 7') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\nassert solution('''16 17 14 20 20 11 22''') == '3'\nassert solution('''7 24 21 23''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\nassert solution('''6\n4 7 12 100 150 199''') == '3'\n"
    },
    {
        "number": 4066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n"
    },
    {
        "number": 4067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('11') == '21'\nassert solution('111') == '12'\nassert solution('1111') == '12'\n"
    },
    {
        "number": 4068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '5'\nassert solution('6 3') == '6'\nassert solution('6 4') == '7'\nassert solution('6 5') == '8'\n"
    },
    {
        "number": 4069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-6 2 4') == '2'\nassert solution('-6 -2 4') == '2'\nassert solution('-6 -2 -4') == '2'\nassert solution('-6 -2 -4') == '2'\n"
    },
    {
        "number": 4070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n"
    },
    {
        "number": 4071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"27\"\n\n\"\"\""
    },
    {
        "number": 4072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\nassert solution(10) == 0\nassert solution(999) == 1\n"
    },
    {
        "number": 4073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '8'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '1'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '999999733'\nassert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '999999733'\n"
    },
    {
        "number": 4075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes'\nassert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'No\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes'\nassert solution('''fced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\nassert solution('8 3 4') == '4'\n"
    },
    {
        "number": 4085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '48'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '4'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\nassert solution('''8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '-1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aab'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'a'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'b'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'c'\n"
    },
    {
        "number": 4089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('3') == 'c'\nassert solution('4') == 'd'\n"
    },
    {
        "number": 4090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '0'"
    },
    {
        "number": 4093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n"
    },
    {
        "number": 4094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == -1\nassert solution('7') == 0\nassert solution('77') == 1\nassert solution('777') == 2\nassert solution('7777') == 3\n"
    },
    {
        "number": 4095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('2\\n3') == '0'\nassert solution('2\\n4') == '1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 4097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n24 21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'\n"
    },
    {
        "number": 4098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\n"
    },
    {
        "number": 4099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('8 10 3 6') == '8'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '-1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '-1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '-1'\n"
    },
    {
        "number": 4100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1''') == 'YES'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0''') == 'NO'\n"
    },
    {
        "number": 4102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\nassert solution('1') == 'No'\nassert solution('0') == 'No'\n"
    },
    {
        "number": 4103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\nassert solution('-1+2+3+4+5+6+7+8+9+10') == 55\nassert solution('-1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100+101+102+103+104+105+106+107+108+109+110+111+112+113+114+115+116+117+118+119+120+121+122+123+124+125+126+127+128+129+130+131+132+133+134+135+136+137+138+139+140+141+142+143+144+145+146+147+148+149+150+151+152+153+154+155+156+157+158+159+160+161+162+163+164+165+166+167+168+169+170+171+172+173+174+175+176+177+178+179+180+181+182+183+184+185+186+187+188+189+190+191+192+193+194+195+196+197+198+199+200+201+202+203+204+205+206+207+208+209+210+211+212+213+214+215+216+217+218+219+220+221+222+223+224+225+226+227+228+229+230+231+232+233+234+235+236+237+238+239+240+241+242+243+244+245+246+247+248+249+250+251+252+253+254+255+256+257+258+259+260+261+262+263+264+265+266+267+268+269+270+271+272+273+274+275+276+277+278+279+280+281+282+283+284+285+286+287+288+289+290+291+292+293+294+295+296+297+298+299+300+301+302+303+304+305+306+307+308+309+310+311+312+313+314+315+316+317+318+319+320+321+322+323+324+325+326+327+328+329+330+331+332+333+334+335+336+337+338+339+340+341+342+343+344+345+346+347+348+349+350+351+352+353+354+355+356+357+358+359+360+361+362+363+364+365+366+367+368+369+370+371+372+373+374+375+376+377+378+379+380+381+382+383+384+385+386+387+388+389+390+391+392+393+394+395+396+397+398+399+400+401+402+403+404+405+406+407+408+409+410+411+412+413+414+415+416+417+418+419+420+421+422+423+424+425+426+427+428+429+430+431+432+433+434+435+436+437+438+439+440+441+442+443+444+445+446+447+448+449+450+451+452+453+454+455+456+457+458+459+460+461+462+463+464+465+466+467+468+469+470+471+472+473+474+475+476+477+478+479+480+481+482+483+484+485+486+487+488+489+490+491+492+493+494+495+496+497+498+499+500+501+502+503+504+505+506+507+508+509+510+511+512+513+514+515+516+517+518+519+520+521+522+523+524+525+526+527+528+529+530+531+532+533+534+535+536+537+538+539+540+541+542+543+544+545+546+547+548+549+550+551+552+553+554+555+556+557+558+559+560+561+562+563+564+565+566+567+568+569+570+571+572+573+574+575+576+577+578+579+580+581+582+583+584+585+586+587+588+589+590+591+592+593+594+595+596+597+598+599+600+601+602+603+604+605+606+607+608+609+610+611+612+613+614+615+616+617+618+619+620+621+622+623+624+625+626+627+628+629+630+631+632+633+634+635+636+637+638+639+640+641+642+643+644+645+646+647+648+649+650+651+652+653+654+655+656+657+658+659+660+661+662+663+664+665+666+667+668+669+670+671+672+673+674+675+676+677+678+679+680+681+682+683+684+685+686+687+688+689+690+691+692+693+694+695+696+697+698+699+700+701+702+703+704+705+706+707+708+709+710+711+712+713+714+715+716+717+718+719+720+721+722+723+724+725+726+727+728+729+730+731+732+733+734+735+736+737+738+739+740+741+742+743+744+745+746+747+748+749+750+751+752+753+754+755+756+757+758+759+760+761+762+763+764+765+766+767+768+769+770+771+772+773+774+775+776+777+778+779+780+781+782+783+784+785+786+787+788+789+790+791+792+793+794+795+796+797+798+799+800+801+802+803+804+805+806+807+808+809+810+811+812+813+814+815+816+817+818+819+820+821+822+823+824+825+826+827+828+829+830+831+832+833+834+835+836+837+838+839+840+841+"
    },
    {
        "number": 4105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == 'YES'\nassert solution('''10 4''') == 'YES'\nassert solution('''13 4''') == 'NO'\nassert solution('''1 2''') == 'YES'\nassert solution('''1 3''') == 'YES'\n"
    },
    {
        "number": 4106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3''') == '18'\nassert solution('''6 1 5''') == '-1'\nassert solution('''4 3 1''') == '100'\nassert solution('''10 30 30 70 10 10''') == '-1'\nassert solution('''10 30 30 70 10 10''') == '100'\n"
    },
    {
        "number": 4107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n00100\n''') == '3'\nassert solution('''6 1\n000000\n''') == '21'\nassert solution('''4 1\n0011\n''') == '4'\nassert solution('''12 6\n000010000100\n''') == '15'\nassert solution('''12 6\n000010000100\n''') == '15'\n"
    },
    {
        "number": 4108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'Yes'\nassert solution('aazzel') == 'Yes'\nassert solution('aapple') == 'Yes'\nassert solution('aazzel') == 'Yes'\n"
    },
    {
        "number": 4109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n2 3 4\n3 4 5\n''') == '2'\nassert solution('''\n3\n1 2 3\n2 3 4\n3 4 5\n''') == '0'\nassert solution('''\n3\n1 2 3\n2 3 4\n3 4 5\n''') == '1'\nassert solution('''\n3\n1 2 3\n2 3 4\n3 4 5\n''') == '2'\nassert solution('''\n3\n1 2 3\n2 3 4\n3 4 5\n''') == '2'\n"
    },
    {
        "number": 4110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '3'\nassert solution('5 800') == '3'\nassert solution('1 100') == '1'\nassert solution('1 100') == '1'\n"
    },
    {
        "number": 4111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\nassert solution('10\\n2 3 4 2 2 3 2 2 4 5\\n') == '3'\nassert solution('11\\n2 3 4 2 2 3 2 2 4 5 6\\n') == '3'\n"
    },
    {
        "number": 4112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'\nassert solution('''4 3 1\n1 100 1 1\n''') == '100'\nassert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'\n"
    },
    {
        "number": 4113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11') == 'Yes'\nassert solution('1') == 'No'\nassert solution('0') == 'Yes'\nassert solution('0') == 'Yes'\nassert solution('0') == 'Yes'\n"
    },
    {
        "number": 4114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nassert solution('''2\n2 3 5\n2 1 5\n1 2 5''') == '2 2 6'\nassert solution('''3\n1 2 3\n2 1 3\n3 2 1''') == '1 1 4'\nassert solution('''3\n1 2 3\n2 1 3\n3 2 1''') == '1 1 4'\nassert solution('''4\n1 2 3 4\n2 1 3 4\n3 2 1 4\n4 2 1 4''') == '1 1 4'\n"
    },
    {
        "number": 4115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('redcoder') == 1\nassert solution('redcoder') == 1\nassert solution('redcoder') == 1\nassert solution('redcoder') == 1\nassert solution('redcoder') == 1\n"
    },
    {
        "number": 4116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 4119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\n"
    },
    {
        "number": 4121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''3\n4 5 3\n''') == 'YES'\nassert solution('''2\n10 10\n''') == 'YES'\nassert solution('''3\n1 2 3\n''') == 'NO'\nassert solution('''4\n1 2 3 4\n''') == 'NO'\n"
    },
    {
        "number": 4122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\nassert solution('''10 4\n-3 -6 5 4''') == '-1'\n"
    },
    {
        "number": 4123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ABACABA''') == 'AB'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''ZZZAA''') == 'ZZ'\n"
    },
    {
        "number": 4124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abcdcba') == 'Yes'\nassert solution('abcdcbaa') == 'No'\nassert solution('abcdcbaaa') == 'No'\nassert solution('abcdcbaaab') == 'Yes'\n"
    },
    {
        "number": 4127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('1.1') == '1'\nassert solution('1.1 1') == '2'\nassert solution('1.1 1.1') == '2.1'\nassert solution('1.1 1.1 1') == '2.2'\n"
    },
    {
        "number": 4128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '0'\nassert solution('3\\n1') == '0'\nassert solution('4\\n1') == '0'\nassert solution('5\\n1') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '0'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '0'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '0'\n"
    },
    {
        "number": 4130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 1') == '2'\nassert solution('3\\n1 1 1') == '2'\n"
    },
    {
        "number": 4131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''2 3\n1 32\n2 63''') == '000001000002\\n000002000001\\n000001000001'\n"
    },
    {
        "number": 4132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('?(_-_/___*__):-___>__') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n"
    },
    {
        "number": 4134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('2+3-7') == '++>'\nassert solution('2+3-7+9') == '++>'\n"
    },
    {
        "number": 4138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom itertools import accumulate"
    },
    {
        "number": 4139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('0' * 10) == 0\nassert solution('0' * 100) == 0\nassert solution('0' * 1000) == 0\n"
    },
    {
        "number": 4141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n6 7 9 10 31''') == 'DENIED'\nassert solution('''5\n6 7 9 10 31''') == 'DENIED'\nassert solution('''5\n6 7 9 10 31''') == 'DENIED'\nassert solution('''5\n6 7 9 10 31''') == 'DENIED'\n"
    },
    {
        "number": 4142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDRUDLDR') == 'No'\nassert solution('RDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDLDRUDL"
    },
    {
        "number": 4143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20''') == '23'\nassert solution('''2''') == '3'\nassert solution('''3''') == '5'\nassert solution('''4''') == '5'\nassert solution('''6''') == '7'\n"
    },
    {
        "number": 4146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\nassert solution('''4\n3 1 3 2''') == '1'\n"
    },
    {
        "number": 4147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\n"
    },
    {
        "number": 4148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\nassert solution('ABCXYZ') == 'CDEZAB'\n"
    },
    {
        "number": 4149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\nassert solution('''1\n3 6''') == '6'\nassert solution('''2\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''2\n3 5 2 3 2 4''') == '3 4 2'\n"
    },
    {
        "number": 4150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'\nassert solution('''6\n1 2 1 2 3 4 5\n''') == '2'\nassert solution('''7\n1 2 1 2 3 4 5 6 7\n''') == '2'\n"
    },
    {
        "number": 4152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0011') == 4\nassert solution('0111') == 2\nassert solution('1111') == 1\nassert solution('01110111') == 1\nassert solution('011101110111') == 1\n"
    },
    {
        "number": 4154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4\\n-1 1\\n') == '2'\nassert solution('2 4\\n2 1 -3\\n') == '3'\nassert solution('2 4\\n2 1 -3\\n') == '4'\nassert solution('2 4\\n2 1 -3\\n') == '4'\nassert solution('2 4\\n2 1 -3\\n') == '4'\n"
    },
    {
        "number": 4157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n4 8 6 3 12 9''') == '9 3 6 12 4 8'\nassert solution('''4\n42 28 84 126''') == '126 42 84 28'\nassert solution('''2\n1000000000000000000 3000000000000000000''') == '3000000000000000000 1000000000000000000'\nassert solution('''1\n1000000000000000000 3000000000000000000''') == '3000000000000000000 1000000000000000000'\nassert solution('''1\n1000000000000000000 3000000000000000000''') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '0 0'\nassert solution('1 1 1') == '0 0'\nassert solution('1 1 1') == '0 0'\nassert solution('1 1 1') == '0 0'\n"
    },
    {
        "number": 4160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''103''') == '3'\nassert solution('''1''') == '1'\nassert solution('''1000000000''') == '1'\nassert solution('''1000000000000''') == '1'\nassert solution('''1000000000000000''') == '1'\n"
    },
    {
        "number": 4161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '9'\nassert solution('''3''') == '18'\nassert solution('''4''') == '36'\nassert solution('''5''') == '105'\nassert solution('''6''') == '210'\n"
    },
    {
        "number": 4162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('3\\n3 4 6') == '10'\nassert solution('3\\n3 4 6') == '10'\nassert solution('3\\n3 4 6') == '10'\nassert solution('3\\n3 4 6') == '10'\n"
    },
    {
        "number": 4163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 4\nassert solution(3) == 9\nassert solution(4) == 16\nassert solution(5) == 25\nassert solution(6) == 36\n"
    },
    {
        "number": 4165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 5 1') == 'Yes'\nassert solution('3 8 5 1') == 'No'\nassert solution('3 8 5 1') == 'Yes'\nassert solution('3 8 5 1') == 'No'\nassert solution('3 8 5 1') == 'Yes'\n"
    },
    {
        "number": 4166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 7') == '702'\nassert solution('3 2') == '702'\nassert solution('1 7') == '702'\n"
    },
    {
        "number": 4167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\n"
    },
    {
        "number": 4168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('-9') == '1011'\nassert solution('-10') == '1010'\nassert solution('-11') == '1011'\nassert solution('-12') == '1100'\n"
    },
    {
        "number": 4169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 3 3''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3''') == '4'\nassert solution('''10 10\n1 2 2 4 2 3 3 4 5 6 7 8 9 10''') == '0'\nassert solution('''10 10\n1 2 2 4 2 3 3 4 5 6 7 8 9 10''') == '0'\nassert solution('''10 10\n1 2 2 4 2 3 3 4 5 6 7 8 9 10''') == '0'\n"
    },
    {
        "number": 4173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '10\\n9\\n1000\\n42000000000000'\n'''\n\n'''\n"
    },
    {
        "number": 4174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\nassert solution('''3 6\n3 4 5\n''') == '2'\n"
    },
    {
        "number": 4175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 4177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\n"
    },
    {
        "number": 4178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\n"
    },
    {
        "number": 4180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1900') == '100'\nassert solution('1000') == '1'\nassert solution('2000') == '2'\nassert solution('3000') == '3'\nassert solution('4000') == '4'\n"
    },
    {
        "number": 4181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5''') == '9'\n"
    },
    {
        "number": 4182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22') == 'War'\n"
    },
    {
        "number": 4183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n3''') == '6'\nassert solution('''2\n2\n3''') == '6'\n"
    },
    {
        "number": 4184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n"
    },
    {
        "number": 4186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\nassert solution('2\\n1 100\\n1 100') == '99'\nassert solution('2\\n1 100\\n1 100\\n1 100') == '99'\nassert solution('2\\n1 100\\n1 100\\n1 100\\n1 100') == '99'\n"
    },
    {
        "number": 4187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '2'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\nassert solution('3\\n0 0 0') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('7') == 0\nassert solution('0') == 0\nassert solution('2') == 0\n"
    },
    {
        "number": 4189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3'\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == '4'\nassert solution('1\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '0'\n"
    },
    {
        "number": 4190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n1\\n0') == '1'\nassert solution('0\\n0\\n0\\n0') == '0'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('0\\n0\\n0\\n1') == '1'\n"
    },
    {
        "number": 4192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 80') == 'No'\nassert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 80') == 'No'\nassert solution('1000 15 80') == 'Yes'\n"
    },
    {
        "number": 4193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'Yes'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'No'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'Yes'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'No'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'Yes'\n"
    },
    {
        "number": 4194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 30\n"
    },
    {
        "number": 4195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 5''') == '5'\nassert solution('''1 2''') == '1'\nassert solution('''2 3''') == '1'\nassert solution('''3 4''') == '1'\nassert solution('''4 5''') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7 6 8''') == '2'\nassert solution('''3\n7 6 8''') == '2'\nassert solution('''3\n7 6 8''') == '2'\nassert solution('''3\n7 6 8''') == '2'\nassert solution('''3\n7 6 8''') == '2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\nassert solution('3\\n2 3 1') == '3 1 2'\n"
    },
    {
        "number": 4198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\nassert solution('10 7 100') == '9'\n"
    },
    {
        "number": 4199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''2 3 2\n..#\n###''') == '5'\n"
    },
    {
        "number": 4202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AtCoder') == 'WA'\nassert solution('AtCoder') == 'WA'\nassert solution('AtCoder') == 'WA'\nassert solution('AtCoder') == 'WA'\n"
    },
    {
        "number": 4204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1214', 4) == '2'\nassert solution('1214', 5) == '2'\nassert solution('1214', 6) == '2'\nassert solution('1214', 7) == '2'\nassert solution('1214', 8) == '2'\n"
    },
    {
        "number": 4205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('9') == '1'\n"
    },
    {
        "number": 4207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5'\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''9\nbambarbia\nhellocode\n''') == '0'\nassert solution('''10\ncode??????\n??????test\n''') == '10'\nassert solution('''10\ncode??????\n??????test\n''') == '10'\n"
    },
    {
        "number": 4209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2'\nassert solution('''4\n1 1 1 1''') == '4'\nassert solution('''1\n1 1 1 1''') == '4'\nassert solution('''2\n1 1 1 1''') == '4'\n"
    },
    {
        "number": 4210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 78 4 10\\n') == '7'\nassert solution('2 2\\n2 78 4 10\\n') == '12'\nassert solution('3 2\\n3 7 19 3 3\\n') == '0'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'\n"
    },
    {
        "number": 4211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 4 6 3''') == '5'\nassert solution('''4\n1 4 6 3''') == '5'\nassert solution('''4\n1 4 6 3''') == '5'\nassert solution('''4\n1 4 6 3''') == '5'\nassert solution('''4\n1 4 6 3''') == '5'\n"
    },
    {
        "number": 4214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '2.2761423749'\nassert solution('''3\n0 0\n1 0\n0 1''') == '2.2761423749'\nassert solution('''3\n0 0\n1 0\n0 1\n0 2\n1 2\n1 3\n2 3\n2 4\n3 4\n3 5\n4 5\n4 6\n5 6\n5 7\n6 7\n6 8\n7 8\n7 9\n8 9\n8 10\n9 10\n9 11\n10 11\n10 12\n11 12\n11 13\n12 13\n12 14\n13 14\n13 15\n14 15\n14 16\n15 16\n15 17\n16 17\n16 18\n17 18\n17 19\n18 19\n18 20\n19 20\n19 21\n20 21\n20 22\n21 22\n20 23\n22 23\n20 24\n23 24\n20 25\n22 25\n20 26\n23 26\n20 27\n22 27\n20 28\n23 28\n20 29\n22 29\n20 30\n23 30\n20 31\n22 31\n20 32\n23 32\n20 33\n22 33\n20 34\n23 34\n20 35\n22 35\n20 36\n23 36\n20 37\n22 37\n20 38\n23 38\n20 39\n22 39\n20 40\n23 40\n20 41\n22 41\n20 42\n23 42\n20 43\n22 43\n20 44\n23 44\n20 45\n22 45\n20 46\n23 46\n20 47\n22 47\n20 48\n23 48\n20 49\n22 49\n20 50\n23 50\n20 51\n22 51\n20 52\n23 52\n20 53\n22 53\n20 54\n23 54\n20 55\n22 55\n20 56\n23 56\n20 57\n22 57\n20 58\n23 58\n20 59\n22 59\n20 60\n23 60\n20 61\n22 61\n20 62\n23 62\n20 63\n22 63\n20 64\n23 64\n20 65\n22 65\n20 66\n23 66\n20 67\n22 67\n20 68\n23 68\n20 69\n22 69\n20 70\n23 70\n20 71\n22 71\n20 72\n23 72\n20 73\n22 73\n20 74\n23 74\n20 75\n22 75\n20 76\n23 76\n20 77\n22 77\n20 78\n23 78\n20 79\n22 79\n20 80\n23 80\n20 81\n22 81\n20 82\n23 82\n20 83\n22 83\n20 84\n23 84\n20 85\n22 85\n20 86\n23 86\n20 87\n22 87\n20 88\n23 88\n20 89\n22 89\n20 90\n23 90\n20 91\n22 91\n20 92\n23 92\n20 93\n22 93\n20 94\n23 94\n20 95\n22 95\n20 96\n23 96\n20 97\n22 97\n20 98\n23 98\n20 99\n22 99\n20 100\n23 100\n20 101\n22 101\n20 102\n23 102\n20 103\n22 103\n20 104\n23 104\n20 105\n22 105\n20 106\n23 106\n20 107\n22 107\n20 108\n23 108\n20 109\n22 109\n20 110\n23 110\n20 111\n22 111\n20 112\n23 112\n20 113\n22 113\n20 114\n23 114\n20 115\n22 115\n20 116\n23 116\n20 117\n22 117\n20 118\n23 118\n20 119\n22 119\n20 120\n23 120\n20 121\n22 121\n20 122\n23 122\n20 123\n22 123\n20 124\n23 124\n20 125\n22 125\n20 126\n23 126\n20 127\n22 127\n20 128\n23 128\n20 129\n22 129\n20 130\n23 130\n20 131\n22 131\n20 132\n23 132\n20 133\n22 133\n20 134\n23 134\n20 135\n22 135\n20 136\n23 136\n20 137\n22 137\n20 138\n23 138\n20 139\n22 139\n20 140\n23 140\n20 141\n22 141\n20 142\n23 142\n20 143\n22 143\n20 144\n23 144\n20 145\n22 145\n20 146\n23 146\n20 147\n22 147\n20 148\n23 148\n20 149\n22 149\n20 150\n23 150\n20 151\n22 151\n20 152\n23 152\n20 153\n22 153\n20 154\n23 154\n20 155\n22 155\n20 156\n23 156\n20 157\n22 157\n20 158\n23 158\n20 159\n22 159\n20 160\n23 160\n20 161\n22 161\n20 162\n23 162\n20 163\n22 163\n20 164\n23 164\n20 165\n22 165\n20 166\n23 166\n20 167\n22 167\n20 168\n23 168\n20 169\n22 169\n20 170\n23 170\n20 171\n22 171\n20 172\n23 172\n20 173\n22 173\n20 174\n23 174\n20 175\n22 175\n20 176\n23 176\n20 177\n22 177\n20 178\n23 178\n20 179\n22 179\n20 180\n23 180\n20 181\n22 181\n20 182\n23 182\n20 183\n22 183\n20 184\n23 184\n20 185\n22 185\n20 186\n23 186\n20 187\n22 187\n20 188\n23 188\n20 189\n22 189\n20 190\n23 190\n20 191\n22 191\n20 192\n23 192\n20 193\n22 193\n20 194\n23 194\n20 195\n22 195\n20 196\n23 196\n20 197\n22 197\n20 198\n23 198\n20 199\n22 199\n20 200\n23 200\n20 201\n22 201\n20 202\n23 202\n20 203\n22 203\n20 204\n23 204\n20 205\n22 205\n20 206\n23 206\n20 207\n22 207\n20 208\n23 208\n20 209\n22 209\n20 210\n23 210\n20 211\n22 211\n20 212\n23 212\n20 213\n22 213\n20 214\n23 214\n20 215\n22 215\n20 216\n23 216\n20 217\n22 217\n20 218\n23 218\n20 219\n22 219\n20 220\n23 220\n20 221\n22 221\n20 222\n23 222\n20 223\n22 223\n20 224\n23 224\n20 225\n22 225\n20 226\n23 226\n20 227\n22 227\n20 228\n23 228\n20 229\n22 229\n20"
    },
    {
        "number": 4215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12 4') == '4'\nassert solution('12 4') == '4'\nassert solution('12 4') == '4'\nassert solution('12 4') == '4'\nassert solution('12 4') == '4'\n"
    },
    {
        "number": 4216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10000') == '3'\nassert solution('100000') == '3'\nassert solution('1000000') == '3'\nassert solution('10000000') == '3'\nassert solution('100000000') == '3'\n"
    },
    {
        "number": 4217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '0.5000000000'\nassert solution('''1''') == '0.5000000000'\nassert solution('''2''') == '0.25000000'\nassert solution('''3''') == '0.16666666667'\nassert solution('''4''') == '0.08333333333333333'\n"
    },
    {
        "number": 4219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('7\\n') == 'nikoand'\nassert solution('7\\n') == 'nikoand'\nassert solution('7\\n') == 'nikoand'\nassert solution('7\\n') == 'nikoand'\n"
    },
    {
        "number": 4221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('apple') == 'apples'\n"
    },
    {
        "number": 4222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'\nassert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabbbbaaca') == '5'\nassert solution('aabbbbaac') == '5'\nassert solution('aabbbbaac') == '5'\nassert solution('aabbbbaac') == '5'\nassert solution('aabbbbaac') == '5'\n"
    },
    {
        "number": 4224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\n"
    },
    {
        "number": 4226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('3 4') == 'No'\nassert solution('3 4') == 'No'\nassert solution('3 4') == 'No'\n"
    },
    {
        "number": 4227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\n"
    },
    {
        "number": 4228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 2') == '18'\nassert solution('5 2') == '18'\nassert solution('5 2') == '18'\nassert solution('5 2') == '18'\n"
    },
    {
        "number": 4229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('15') == '60'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == 'Fizz'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''6 5\n4 7 10 6 5''') == '8'\nassert solution('''6 5\n4 7 10 6 5''') == '8'\n"
    },
    {
        "number": 4231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '-1'\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '-1'"
    },
    {
        "number": 4234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('good') == ''\nassert solution('good') == ''\nassert solution('good') == ''\nassert solution('good') == ''\n"
    },
    {
        "number": 4235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2\\n3 4\\n'\nassert solution('''1 7\n1 7''') == '0\\n'\nassert solution('''1 1\n1 1''') == '0\\n'\nassert solution('''1 1\n1 1\n1 1''') == '0\\n'\nassert solution('''1 1\n1 1\n1 1\n1 1''') == '0\\n'\n"
    },
    {
        "number": 4237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(123456789) == \"No\"\nassert solution(123456789) == \"Yes\"\nassert solution(123456789) == \"No\"\nassert solution(123456789) == \"Yes\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('127') == '4'\nassert solution('1') == '1'\nassert solution('9') == '1'\nassert solution('36') == '1'\nassert solution('81') == '1'\n"
    },
    {
        "number": 4240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'No'\nassert solution('tokyo') == 'No'\n"
    },
    {
        "number": 4241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('abcabc') == 0\nassert solution('abcabcabc') == 0\nassert solution('abcabcabcabc') == 0\n"
    },
    {
        "number": 4242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 12 3') == '4'\nassert solution('8 12 4') == '2'\nassert solution('8 12 5') == '2'\nassert solution('8 12 6') == '2'\n"
    },
    {
        "number": 4243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 10') == '3'\nassert solution('4 10') == '3'\nassert solution('4 10') == '3'\nassert solution('4 10') == '3'\nassert solution('4 10') == '3'\n"
    },
    {
        "number": 4246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CS') == '0'\nassert solution('CSR') == '0'\nassert solution('CSRS') == '0'\n"
    },
    {
        "number": 4247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\nassert solution('1 3 5 4 2') == '2'\n"
    },
    {
        "number": 4248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'\n"
    },
    {
        "number": 4249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1''') == '1 1'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1''') == '1 1'\nassert solution('''15 2\n1 2 1 1 1 1 2 1 1 1 1 1''') == '1 1'\n"
    },
    {
        "number": 4251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n''') == '0'\n"
    },
    {
        "number": 4252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxxxxx') == '0'\nassert solution('xxxxxx') == '0'\n"
    },
    {
        "number": 4253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('1 1') == 'unsafe'\nassert solution('1 1') == 'unsafe'\n"
    },
    {
        "number": 4255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\nassert solution('3 4 5') == '6'\n"
    },
    {
        "number": 4256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 11 4') == '4'\nassert solution('2 11 4') == '4'\nassert solution('2 11 4') == '4'\nassert solution('2 11 4') == '4'\n"
    },
    {
        "number": 4257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('1 4') == '4'\n"
    },
    {
        "number": 4258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == '3'\n"
    },
    {
        "number": 4259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3''') == '2.6666666667'\nassert solution('''8 3''') == '2.6666666667'\nassert solution('''8 3''') == '2.6666666667'\nassert solution('''8 3''') == '2.6666666667'\nassert solution('''8 3''') == '2.6666666667'\n"
    },
    {
        "number": 4261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 4262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('1 3 2') == '3'\n"
    },
    {
        "number": 4263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\nassert solution('ATCODER') == 'ATC'\n"
    },
    {
        "number": 4264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[::-1]\n\"\"\""
    },
    {
        "number": 4266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 7''') == '5 6 7 8 9'\nassert solution('''3 7''') == '5 6 7 8 9'\nassert solution('''3 7''') == '5 6 7 8 9'\nassert solution('''3 7''') == '5 6 7 8 9'\nassert solution('''3 7''') == '5 6 7 8 9'\n"
    },
    {
        "number": 4267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\n"
    },
    {
        "number": 4269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3776') == 'Good'\nassert solution('3777') == 'Bad'\nassert solution('3778') == 'Good'\nassert solution('3779') == 'Good'\nassert solution('3780') == 'Good'\n"
    },
    {
        "number": 4270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('2\\n3 4\\n2 1') == '3.5'\nassert solution('2\\n3 4\\n2 1\\n1 1') == '3.5'\nassert solution('2\\n3 4\\n2 1\\n1 1\\n1 1') == '3.5'\nassert solution('2\\n3 4\\n2 1\\n1 1\\n1 1\\n1 1') == '3.5'\n"
    },
    {
        "number": 4271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\n"
    },
    {
        "number": 4272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''10\nZABCDBABCQ''') == '2'\nassert solution('''10\nZABCDBABCQ''') == '2'\n"
    },
    {
        "number": 4273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\nassert solution('MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n"
    },
    {
        "number": 4274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('3 1') == 'Yes'\nassert solution('3 1') == 'No'\nassert solution('3 1') == 'Yes'\n"
    },
    {
        "number": 4275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippu') == 'No'\nassert solution('sipp') == 'No'\nassert solution('sipp') == 'No'\nassert solution('sipp') == 'No'\n"
    },
    {
        "number": 4276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 70') == '4'\nassert solution('7 60') == 'TLE'\nassert solution('1 80') == '4'\nassert solution('4 50') == '4'\nassert solution('1 100') == 'TLE'\n"
    },
    {
        "number": 4277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('acornistnt\\npeanutbomb\\nconstraint\\n') == '1'\n"
    },
    {
        "number": 4279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom itertools import accumulate"
    },
    {
        "number": 4280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '1'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '1'\n"
    },
    {
        "number": 4281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\n"
    },
    {
        "number": 4282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5'\nassert solution('''3\n2 3\n3 1\n1 2''') == '3 1 2'\nassert solution('''3\n2 3\n3 1\n1 2''') == '3 1 2'\nassert solution('''3\n2 3\n3 1\n1 2''') == '3 1 2'\nassert solution('''3\n2 3\n3 1\n1 2''') == '3 1 2'\n"
    },
    {
        "number": 4283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '1'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nac?b?c\n''') == '24'\nassert solution('''7\n???????\n''') == '2835'\nassert solution('''9\ncccbbbaaa\n''') == '0'\nassert solution('''5\na???c\n''') == '46'\nassert solution('''6\na???c\n''') == '24'\n"
    },
    {
        "number": 4286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\nassert solution('''4 0\n1 3 3 7\n2 3 5\n2 1 1''') == '16'\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15''') == '18'\n'''\n\n'''\n"
    },
    {
        "number": 4287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('1 1 1') == 'No'\nassert solution('1 1 1') == 'No'\nassert solution('1 1 1') == 'No'\n"
    },
    {
        "number": 4289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n12 5\n1000 2000''') == '1'\nassert solution('''2\n12 5\n1000 2000''') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 2') == '0'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 4291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8''') == '2\\n0\\n3'\nassert solution('''ACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2 3\n1 8\nACACTACG\n3 7\n2"
    },
    {
        "number": 4292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('5 3\\n50 100 80 120 80') == '210'\nassert solution('5 3\\n50 100 80 120 80') == '210'\n"
    },
    {
        "number": 4293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == '7'\nassert solution('1 2 3 4 5') == '7'\nassert solution('1 2 3 4 5 6') == '7'\n"
    },
    {
        "number": 4294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 5') == '0'\nassert solution('3 5') == '0'\nassert solution('3 5') == '0'\nassert solution('3 5') == '0'\n"
    },
    {
        "number": 4295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 4296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'win'\nassert solution('5 7 9') == 'win'\n"
    },
    {
        "number": 4297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('100') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(16) == \"pon\"\nassert solution(1) == \"hon\"\nassert solution(2) == \"pon\"\nassert solution(3) == \"bon\"\nassert solution(4) == \"pon\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('3\\n3 1 2\\n3 1 2') == '11'\nassert solution('3\\n3 1 2\\n3 1 2\\n3 1 2') == '11'\nassert solution('3\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2') == '11'\nassert solution('3\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2') == '11'\n"
    },
    {
        "number": 4301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\nassert solution('''3\n1\n4\n3''') == '4\\n3\\n4'\n"
    },
    {
        "number": 4302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 3') == '9'\nassert solution('5 3') == '9'\nassert solution('5 3') == '9'\nassert solution('5 3') == '9'\n"
    },
    {
        "number": 4303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\nassert solution('8 13') == '2'\n"
    },
    {
        "number": 4305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''105''') == '1'\nassert solution('''1''') == '0'\nassert solution('''2''') == '0'\nassert solution('''3''') == '0'\nassert solution('''4''') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3') == '1'\nassert solution('7 3') == '1'\nassert solution('7 3') == '1'\nassert solution('7 3') == '1'\nassert solution('7 3') == '1'\n"
    },
    {
        "number": 4309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('111') == '111'\nassert solution('1111') == '111'\nassert solution('111111') == '111'\nassert solution('1111111') == '111'\n"
    },
    {
        "number": 4310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 6 3\") == \"5\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'No'\n"
    },
    {
        "number": 4313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('3\\n10 2 5\\n6 3 4\\n7 4 5') == '7'\nassert solution('3\\n10 2 5\\n6 3 4\\n7 4 5\\n8 5 6') == '8'\nassert solution('3\\n10 2 5\\n6 3 4\\n7 4 5\\n8 5 6\\n9 6 7') == '9'\nassert solution('3\\n10 2 5\\n6 3 4\\n7 4 5\\n8 5 6\\n9 6 7\\n10 7 8') == '10'\n"
    },
    {
        "number": 4314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\nassert solution('''4 4\n##.#\n....\n##.#\n.#.#\n''') == '###'\n"
    },
    {
        "number": 4315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.566370614359172'\nassert solution('3') == '19.076923076923077'\nassert solution('4') == '25.416494845360824'\nassert solution('5') == '30.92709503162435'\n"
    },
    {
        "number": 4316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASSS') == 'No'\nassert solution('ASSSS') == 'Yes'\nassert solution('ASSSSS') == 'No'\nassert solution('ASSSSSS') == 'Yes'\n"
    },
    {
        "number": 4317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 2 3 1 2 3 4\n''') == '2\\n3 4\\n'\nassert solution('''4\n1 1 1 1\n''') == '4\\n1 1 1 1\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '1\\n5\\n'\nassert solution('''5\n1 2 1 2 1\n''') == '3\\n2 2 1\\n'\nassert solution('''6\n1 2 3 4 5 6\n''') == '2\\n6 6\\n'\n"
    },
    {
        "number": 4320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1''') == '5'\nassert solution('''5\n3 7 5 1 5''') == '2'\nassert solution('''3\n5 1 4''') == '2'\nassert solution('''7\n2 2 3 2 1 2 2''') == '7'\nassert solution('''7\n2 2 3 2 1 2 2''') == '7'\n"
    },
    {
        "number": 4323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '2'\nassert solution('1 2') == '1'\nassert solution('2 2') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1 2'\nassert solution('2 1') == '1 2'\n"
    },
    {
        "number": 4329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudaiz') == 'No'\nassert solution('chokudai', 'chokudaiz') == 'Yes'\nassert solution('chokudai', 'chokudaiz') == 'No'\nassert solution('chokudai', 'chokudaiz') == 'Yes'\n"
    },
    {
        "number": 4330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 16') == '9'\nassert solution('2 16') == '9'\nassert solution('2 16') == '9'\nassert solution('2 16') == '9'\nassert solution('2 16') == '9'\n"
    },
    {
        "number": 4331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcabc') == 'Yes'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
    },
    {
        "number": 4336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('G W Y P Y W') == 'Four'\nassert solution('P P P P P') == 'Three'\nassert solution('P P P P P') == 'Three'\nassert solution('P P P P P') == 'Three'\nassert solution('P P P P P') == 'Three'\n"
    },
    {
        "number": 4338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\n"
    },
    {
        "number": 4340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '''1 1 3 5 9'''\nassert solution('''10''') == '''9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\nassert solution('''100''') == '''9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\nassert solution('''1000''') == '''9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\nassert solution('''10000''') == '''9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'''\n"
    },
    {
        "number": 4341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n\nassert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420"
    },
    {
        "number": 4342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n1 1 2\n2 3\n1 3\n''') == '4'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0'\n"
    },
    {
        "number": 4343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\nprint(solution('''7\nzaz\nzaz\nzaz'''))\n"
    },
    {
        "number": 4344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'\nassert solution('4 4\\n20 10 40 30\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\nassert solution('''5\n1 2 4 0 2''') == 'NO'\n"
    },
    {
        "number": 4346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\n"
    },
    {
        "number": 4347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''8''') == '1260'\nassert solution('''20''') == '12164510040883200'\nassert solution('''2''') == '1'\n"
    },
    {
        "number": 4348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''cccaabababaccbc''') == 'cccbbabaccbc'\nassert solution('''cccaabababaccbc''') == 'cccccc'\nassert solution('''cccaabababaccbc''') == ''\nassert solution('''cccaabababaccbc''') == ''\nassert solution('''cccaabababaccbc''') == ''\n"
    },
    {
        "number": 4349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n"
    },
    {
        "number": 4350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '-1'\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '-1'"
    },
    {
        "number": 4351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 6') == 'Bob'\nassert solution('8 6') == 'Draw'\nassert solution('8 6') == 'Alice'\nassert solution('8 6') == 'Bob'\n"
    },
    {
        "number": 4353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\nassert solution('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z') == 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'\n"
    },
    {
        "number": 4354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1\\n1'\nassert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '1\\n1'\n"
    },
    {
        "number": 4355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 14\nassert solution(3) == 28\nassert solution(4) == 56\nassert solution(5) == 125\nassert solution(6) == 216\n"
    },
    {
        "number": 4356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == '10'\nassert solution('1 2 3 4 5') == '15'\nassert solution('1 2 3 4 5 6') == '21'\n"
    },
    {
        "number": 4358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('10 30') == '7.5'\n"
    },
    {
        "number": 4361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\nassert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\n"
    },
    {
        "number": 4362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\nassert solution('B') == 'A'\n"
    },
    {
        "number": 4363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''2 2''') == '6'\nassert solution('''2 2''') == '6'\nassert solution('''2 2''') == '6'\nassert solution('''2 2''') == '6'\n"
    },
    {
        "number": 4364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\nassert solution('1905') == 'AMBIGUOUS'\nassert solution('0519') == 'NA'\nassert solution('1905') == 'NA'\n"
    },
    {
        "number": 4365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 12''') == '21'\nassert solution('''9 12''') == '21'\nassert solution('''9 12''') == '21'\nassert solution('''9 12''') == '21'\nassert solution('''9 12''') == '21'\n"
    },
    {
        "number": 4367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('2 2919') == '3719'\nassert solution('2 2919') == '3719'\nassert solution('2 2919') == '3719'\nassert solution('2 2919') == '3719'\n"
    },
    {
        "number": 4368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nA, B = map(int, input().split())"
    },
    {
        "number": 4371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456789') == '34'\nassert solution
    },
    {
        "number": 4372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '12 13'\n"
    },
    {
        "number": 4373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2\n2 3\n''') == '2'\nassert solution('''2 0\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''3 2\n1 3\n2 3\n''') == '1'\nassert solution('''3 2\n1 3\n2 3\n''') == '1'\n"
    },
    {
        "number": 4375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n'''\n\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''\n\nassert solution('''3 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''\n\nassert solution('''3 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''\n\nassert solution('''3 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994\n'''"
    },
    {
        "number": 4377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\nRBGRRBRGG\n''') == '2\\nRBGRGBRGR'\nassert solution('''8\nBBBGBRRR\n''') == '2\\nBRBGBRGR'\nassert solution('''13\nBBRRRRGGGGGRR\n''') == '6\\nBGRBRBGBGBGRG'\nassert solution('''14\nBBRRRRGGGGGRRGGGGGRR\n''') == '6\\nBGRBRBGBGBGRG'\nassert solution('''15\nBBRRRRGGGGGRRGGGGGRRGGGGGRR\n''') == '6\\nBGRBRBGBGBGRG'\n"
    },
    {
        "number": 4379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8''') == '4'\nassert solution('''6\n1 3 5 2 4 6''') == '2'\nassert solution('''4\n10 9 8 7''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '6'\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == '1 2 3 7 8 9'\n"
    },
    {
        "number": 4380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\nassert solution('2 2') == 'Yes'\n"
    },
    {
        "number": 4381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('81 58') == '110'\nassert solution('81 58') == '110'\nassert solution('81 58') == '110'\nassert solution('81 58') == '110'\nassert solution('81 58') == '110'\n"
    },
    {
        "number": 4382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 4383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'NO'\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == 'ABC'\nassert solution('2') == 'ABD'\nassert solution('3') == 'ABC'\nassert solution('4') == 'ABD'\n"
    },
    {
        "number": 4385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n16') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n16\\n17') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n16\\n17\\n18') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n16\\n17\\n18\\n19') == 'Yay!'\n"
    },
    {
        "number": 4386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3200\\npink') == 'pink'\nassert solution('3200\\nred') =='red'\nassert solution('3200\\n') =='red'\nassert solution('3200\\n') =='red'\nassert solution('3200\\n') =='red'\n"
    },
    {
        "number": 4387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ABC\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(119) == \"991\"\nassert solution(111) == \"11\"\nassert solution(999) == \"999\"\nassert solution(999) == \"999\"\nassert solution(999) == \"999\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''1\nab\n''') == 'ab'\nassert solution('''2\nab\n''') == 'ab'\nassert solution('''3\nab\n''') == 'ab'\nassert solution('''4\nab\n''') == 'ab'\n"
    },
    {
        "number": 4390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\nassert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\nassert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\nassert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\nassert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '2\\n5\\n4\\n333\\n0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.666666666666667'\n\nInput\n5 4\n1 2 3 4 5\n\nOutput\n3.0\n\nassert solution(stdin) == '3.0'\n\nInput\n5 5\n1 2 3 4 5\n\nOutput\n4.0\n\nassert solution(stdin) == '4.0'\n\nInput\n5 6\n1 2 3 4 5 6\n\nOutput\n5.0\n\nassert solution(stdin) == '5.0'\n\nInput\n5 7\n1 2 3 4 5 6 7\n\nOutput\n6.0\n\nassert solution(stdin) == '6.0'\n\nInput\n5 8\n1 2 3 4 5 6 7 8\n\nOutput\n7.0"
    },
    {
        "number": 4392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'YES'\nassert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4''') == 'NO'\n"
    },
    {
        "number": 4393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nbaabbb\n''') == 'bab'\nassert solution('''10\nooopppssss\n''') == 'oops'\nassert solution('''1\nz\n''') == 'z'\nassert solution('''2\nab\n''') == 'ab'\nassert solution('''3\nabc\n''') == 'abc'\n"
    },
    {
        "number": 4394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '1'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '1'"
    },
    {
        "number": 4395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nBRB''') == '1'\nassert solution('''7\nRGBGRBB''') == '3'\nassert solution('''7\nBRB''') == '1'\nassert solution('''7\nRGBGRBB''') == '3'\nassert solution('''7\nBRB''') == '1'\n"
    },
    {
        "number": 4396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\nassert solution('''2\n10000 JPY\n0.10000000 BTC''') == '48000.0'\n"
    },
    {
        "number": 4397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[1]\n"
    },
    {
        "number": 4398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\nassert solution(\"ABB\") == \"Yes\"\nassert solution(\"ABB\") == \"Yes\"\nassert solution(\"ABB\") == \"Yes\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RRS') == 2\nassert solution('RRR') == 1\nassert solution('RRSRRS') == 3\nassert solution('RRRR') == 0\nassert solution('RRRRSRRS') == 4\n"
    },
    {
        "number": 4401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"3 1 4 2\"\nassert solution(\"1 2 3 4 5\") == \"3 1 4 5 2\"\nassert solution(\"1 2 3 4 5 6\") == \"3 1 4 5 6 2\"\nassert solution(\"1 2 3 4 5 6 7\") == \"3 1 4 5 6 7 2\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\nassert solution('30 100') == '100'\n"
    },
    {
        "number": 4403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\n"
    },
    {
        "number": 4404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Heisei\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''3\n1337 1337 1337\n''') == '3'\nassert solution('''1\n1\n''') == '1'\nassert solution('''2\n1 1\n''') == '2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n''') == '0'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''7 1\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''7 1\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n"
    },
    {
        "number": 4412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '31'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '10'\n"
    },
    {
        "number": 4413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\n"
    },
    {
        "number": 4416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n5 0 0\n3 0 0\n"
    },
    {
        "number": 4417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 15 16 8 23 15 16 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\n"
    },
    {
        "number": 4419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\n"
    },
    {
        "number": 4422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution('''3\nkhabarovsk 20\nmoscow 10\nkazan 50''') == '3\\n4\\n6'\nassert solution('''3\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3\\n4\\n6\\n1\\n5'\nassert solution('''3\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nkhabarovsk 30\nmoscow 40\nkazan 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\nmoscow 30\nkazan 30\nkhabarovsk 30\n"
    },
    {
        "number": 4424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 901') == 'No'\nassert solution('2 902') == 'No'\nassert solution('2 903') == 'No'\nassert solution('2 904') == 'No'\n"
    },
    {
        "number": 4425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\nassert solution('3 10') == '0.145833333333'\n"
    },
    {
        "number": 4426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n"
    },
    {
        "number": 4427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n"
    },
    {
        "number": 4428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'\n\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'"
    },
    {
        "number": 4430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1\\n6\\n-2999999997'\n"
    },
    {
        "number": 4433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\nassert solution('''8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n6 5\n4 5\n2 7\n5 8\n''') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n"
    },
    {
        "number": 4434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n1''') == '0'\nassert solution('''1\n2\n1''') == '1'\nassert solution('''1\n3\n1''') == '2'\nassert solution('''1\n4\n1''') == '3'\nassert solution('''1\n5\n1''') == '4'\n"
    },
    {
        "number": 4435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''64\n32\n97\n2\n12345''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('''64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nYES\\n3 5 823'\n"
    },
    {
        "number": 4437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '0'\n"
    },
    {
        "number": 4439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('3\\n2') == '1'\nassert solution('3\\n3') == '3'\nassert solution('3\\n4') == '2'\nassert solution('3\\n5') == '1'\n"
    },
    {
        "number": 4440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('A') == ''\nassert solution('B') == ''\n"
    },
    {
        "number": 4442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'c'\nassert solution('c') == 'd'\nassert solution('d') == 'e'\nassert solution('e') == 'f'\n"
    },
    {
        "number": 4444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('abcde') == 'abcde'\nassert solution('abcdef') == 'abcdef'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('abcdefgh') == 'abcdefgh'\n"
    },
    {
        "number": 4445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 5 7 8 2''') == '0'\nassert solution('''6\n5 1 2 4 6 3''') == '1000000'\nassert solution('''2\n1000000 1000000''') == '1000000'\nassert solution('''3\n1000000 1000000''') == '1000000'\nassert solution('''4\n1000000 1000000''') == '1000000'\n"
    },
    {
        "number": 4446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''7 10 50 12 1 8''') == '6'\nassert solution('''1 1 100 99''') == '1'\nassert solution('''100''') == '1'\nassert solution('''7 4 2 1''') == '6'\n"
    },
    {
        "number": 4447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n"
    },
    {
        "number": 4449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n''') == 'YES'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n''') == 'NO'\n\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n1 1 1 1 1 1 1 1\n''') == 'YES'"
    },
    {
        "number": 4450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\n"
    },
    {
        "number": 4451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n"
    },
    {
        "number": 4452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5009\n7\n9876\n10000\n10\n''') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754"
    },
    {
        "number": 4453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'"
    },
    {
        "number": 4454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 4457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '3'\nassert solution('''1\n1\n''') == '2'\n"
    },
    {
        "number": 4458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\n"
    },
    {
        "number": 4459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 3 3') == '1'\nassert solution('3\\n3 3 3 3') == '0'\nassert solution('3\\n3 3 3 3') == '0'\nassert solution('3\\n3 3 3 3') == '0'\nassert solution('3\\n3 3 3 3') == '0'\n"
    },
    {
        "number": 4460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 0') == '1'\nassert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 5') == '1'\n"
    },
    {
        "number": 4461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('atcoder') == 'No'\nassert solution('atlas') == 'Yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'\n"
    },
    {
        "number": 4464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 1') == 'NO'\nassert solution('7 5 1') == 'NO'\nassert solution('7 5 1') == 'NO'\nassert solution('7 5 1') == 'NO'\n"
    },
    {
        "number": 4465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5''') == '2'\nassert solution('''3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\nassert solution('''4\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\nassert solution('''5\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\nassert solution('''6\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n"
    },
    {
        "number": 4468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 3') == '7'\nassert solution('1 2') == '3'\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == '5'\nassert solution('1 2 3 4 5') == '6'\n"
    },
    {
        "number": 4469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''L 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '2'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '1'\nassert solution('''L 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115''') == '0'\n"
    },
    {
        "number": 4470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'"
    },
    {
        "number": 4472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 4474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'"
    },
    {
        "number": 4475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 4476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''1\n1\n1\n1''') == '1'\nassert solution('''1\n2\n2\n2''') == '2'\nassert solution('''1\n3\n3\n3''') == '3'\nassert solution('''1\n4\n4\n4''') == '4'\n"
    },
    {
        "number": 4478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2'\n\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'\n\nassert solution('''5\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'NO'\n\nassert solution('''6\n2\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'"
    },
    {
        "number": 4479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == False\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\n"
    },
    {
        "number": 4481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('beat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\n"
    },
    {
        "number": 4482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8') == '8'\nassert solution('2 4 8') == '8'\nassert solution('2 4 8') == '8'\nassert solution('2 4 8') == '8'\nassert solution('2 4 8') == '8'\n"
    },
    {
        "number": 4483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 4484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\nassert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\n"
    },
    {
        "number": 4488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"1 0 1\") == \"No\"\nassert solution(\"1 0 1\") == \"No\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ARC') == 'ARC'\nassert solution('ARC') == 'ARC'\nassert solution('ARC') == 'ARC'\n"
    },
    {
        "number": 4495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('1 1 1') == '0'\nassert solution('1 1 2') == '0'\nassert solution('1 1 3') == '1'\nassert solution('1 1 4') == '1'\n"
    },
    {
        "number": 4496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('50 100 120') == 'Yes'\nassert solution('50 100 120') == 'No'\nassert solution('50 100 120') == 'Yes'\n"
    },
    {
        "number": 4501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 8') == '5'\nassert solution('7 9 8 9') == '5'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 6') == '1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 3 4''') == '4 2 1 3'\nassert solution('''4\n1 2 3 4''') == '4 2 1 3'\nassert solution('''4\n1 2 3 4''') == '4 2 1 3'\nassert solution('''4\n1 2 3 4''') == '4 2 1 3'\nassert solution('''4\n1 2 3 4''') == '4 2 1 3'\n"
    },
    {
        "number": 4503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3\n4 5 6''') == 'Yes'\nassert solution('''10 3\n4 5 6''') == 'No'\nassert solution('''10 3\n4 5 6''') == 'No'\nassert solution('''10 3\n4 5 6''') == 'No'\nassert solution('''10 3\n4 5 6''') == 'No'\n"
    },
    {
        "number": 4504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '0'\nassert solution('abaababa') == '6'\nassert solution('abaabab') == '6'\nassert solution('abaaba') == '6'\n"
    },
    {
        "number": 4505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bac') == 'No'\nassert solution('bac') == 'Yes'\nassert solution('bac') == 'No'\nassert solution('bac') == 'Yes'\n"
    },
    {
        "number": 4506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''1\n1000000\n1000000\n''') == '757402647'\nassert solution('''2\n1 3\n4 2\n''') == '20'\nassert solution('''3\n1 3\n4 2\n5\n''') == '6'\nassert solution('''4\n1 3\n4 2\n5\n6\n''') == '7'\n"
    },
    {
        "number": 4507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == '7'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n"
    },
    {
        "number": 4508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '0'\nassert solution('''7\n1 2\n1 3\n2 4\n3 5\n3 6\n3 7''') == '1'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n1 7''') == '1'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 4"
    },
    {
        "number": 4509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n"
    },
    {
        "number": 4510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n'''\n"
    },
    {
        "number": 4512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''a''') == '1'\nassert solution('''a''') == '1'\nassert solution('''a''') == '1'\n"
    },
    {
        "number": 4513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n"
    },
    {
        "number": 4514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9''') == '3 6 8 -1 9 4'\nassert solution('''9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\nassert solution('''5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\n"
    },
    {
        "number": 4516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'\n"
    },
    {
        "number": 4517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'"
    },
    {
        "number": 4518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n'\n\nassert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO\\n'\n\nassert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\n\nassert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO\\n'\n\nassert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO\\n'"
    },
    {
        "number": 4519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '3'\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''7 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''8 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n2 3\n2 3\n''') == '4'\n"
    },
    {
        "number": 4521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\nassert solution('''2\n2 1\n-3 0''') == '0'\nassert solution('''3\n1 3 2\n-100 2 3''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4''') == '19'\n"
    },
    {
        "number": 4522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n"
    },
    {
        "number": 4524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\nassert solution('4 5\\n1010\\n10101\\n') == '11'\nassert solution('4 5\\n1010\\n10101\\n') == '11'\nassert solution('4 5\\n1010\\n10101\\n') == '11'\n"
    },
    {
        "number": 4525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4\n6\n8\n10''') == 'NO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''2\n4\n6\n8\n10''') == 'NO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''2\n4\n6\n8\n10''') == 'NO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''2\n4\n6\n8\n10''') == 'NO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nassert solution('''2\n4\n6\n8\n10''') == 'NO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\n"
    },
    {
        "number": 4526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'\n\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5\\n1\\n0\\n4\\n0'"
    },
    {
        "number": 4527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '2'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '7'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '7'\n"
    },
    {
        "number": 4528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('''23 55\n23 0\n0 1\n4 20\n23 59''') == '5\\n60\\n1439\\n1180\\n1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n1337\\n') == '0'\nassert solution('1\\n1337\\n') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3''') == '1'\nassert solution('''1\n1\n2\n3''') == '2'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808"
    },
    {
        "number": 4534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == [1,3,3,1]\nassert solution('''0''') == []\nassert solution('''1''') == [1]\nassert solution('''2''') == [1,1]\nassert solution('''3''') == [1,3,3,1]\n"
    },
    {
        "number": 4535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\nassert solution(\"00000000000000000000000000000001\") == 1\nassert solution(\"11111111111111111111111111111111\") == 31\n"
    },
    {
        "number": 4536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"1,2,3,4,5,6,7,8,9\") == \"1,2,3,4,5,6,7,8,9\"\nassert solution(\"1,2,3,4,5,6,7,8,9,0\") == \"1,2,3,4,5,6,7,8,9,1\"\nassert solution(\"1,2,3,4,5,6,7,8,9,0,0\") == \"1,2,3,4,5,6,7,8,9,1,0\"\n"
    },
    {
        "number": 4537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '4'\nassert solution('3 2') == '1'\nassert solution('3 3') == '6'\nassert solution('3 4') == '7'\nassert solution('3 5') == '8'\n"
    },
    {
        "number": 4538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('1 2\\n-1 1') == '0'\nassert solution('1 2\\n1 1') == '0'\nassert solution('1 2\\n1 1\\n1 1') == '0'\nassert solution('1 2\\n1 1\\n1 1\\n1 1') == '0'\n"
    },
    {
        "number": 4539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 4540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 5 -1''') == '12'\nassert solution('''3\n3 5 -1''') == '8'\nassert solution('''3\n3 5 -1''') == '10'\nassert solution('''3\n3 5 -1''') == '12'\nassert solution('''3\n3 5 -1''') == '8'\n"
    },
    {
        "number": 4541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution
    },
    {
        "number": 4543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 21') == 'Yes'\nassert solution('1 21') == 'Yes'\nassert solution('1 21') == 'Yes'\nassert solution('1 21') == 'Yes'\n"
    },
    {
        "number": 4544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4') == '5'\nassert solution('3\\n0') == '0'\nassert solution('3\\n1') == '1'\nassert solution('3\\n2') == '2'\nassert solution('3\\n3') == '3'\n"
    },
    {
        "number": 4546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 4 5') == 'NO'\nassert solution('2 4 6') == 'YES'\nassert solution('2 4 5') == 'NO'\nassert solution('2 4 5') == 'NO'\n"
    },
    {
        "number": 4547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(29) == \"Yes\"\nassert solution(10) == \"No\"\nassert solution(11) == \"Yes\"\nassert solution(12) == \"No\"\nassert solution(13) == \"Yes\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n-----SOLUTION-----\n\"\"\""
    },
    {
        "number": 4549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''3 3\n.#.\n###\n.#.\n''') == 'No'\nassert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''3 3\n.#.\n###\n.#.\n''') == 'No'\nassert solution('''3 3\n.#.\n###\n.#.\n''') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\na, b, c = map(int, stdin.split())"
    },
    {
        "number": 4551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Right'\nassert solution('3 8 7 1') == 'Balanced'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Right'\n"
    },
    {
        "number": 4552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution(\n'''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n"
    },
    {
        "number": 4553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('269-6650') == 'Yes'\nassert solution('269-6650') == 'Yes'\nassert solution('269-6650') == 'Yes'\nassert solution('269-6650') == 'Yes'\nassert solution('269-6650') == 'Yes'\n"
    },
    {
        "number": 4554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('3 8 2') == '3\\n4\\n7\\n8'\n"
    },
    {
        "number": 4556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0] + stdin[1].lower()\n\"\"\""
    },
    {
        "number": 4557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 5 4') == 'NO'\nassert solution('3 5 4') == 'NO'\nassert solution('3 5 4') == 'NO'\nassert solution('3 5 4') == 'NO'\n"
    },
    {
        "number": 4558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100 17') == '83'\nassert solution('100 17') == '83'\nassert solution('100 17') == '83'\nassert solution('100 17') == '83'\nassert solution('100 17') == '83'\n"
    },
    {
        "number": 4559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\nassert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\nassert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\nassert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\nassert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\n"
    },
    {
        "number": 4560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2018\n218''') == 'Yes'\nassert solution('''2018\n0''') == 'No'\nassert solution('''0\n0''') == 'No'\nassert solution('''0\n1''') == 'No'\nassert solution('''0\n2''') == 'No'\n"
    },
    {
        "number": 4561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '9'\nassert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 4563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 1\n3 2''') == '10'\n"
    },
    {
        "number": 4564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightable') == 'no'\nassert solution('uncopyrightable') == 'yes'\nassert solution('uncopyrightable') == 'no'\nassert solution('uncopyrightable') == 'yes'\n"
    },
    {
        "number": 4565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('WEEWW') == '1'\nassert solution('EEWWE') == '0'\nassert solution('WEEWWE') == '1'\nassert solution('WEEWEW') == '2'\nassert solution('WEEWEWE') == '3'\n"
    },
    {
        "number": 4566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n1 2\n1 3\n1 4\n1 2\n1 3\n1 4''') == '2\\n2\\n1\\n1'\n"
    },
    {
        "number": 4567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n20\") == \"30\"\nassert solution(\"3\\n5\\n10\\n15\\n20\\n25\") == \"30\"\nassert solution(\"3\\n5\\n10\\n15\\n20\\n25\\n30\") == \"30\"\nassert solution(\"3\\n5\\n10\\n15\\n20\\n25\\n30\\n35\") == \"30\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabbca') == '2'\nassert solution('aabbcc') == '3'\nassert solution('aabbccdd') == '4'\nassert solution('aabbccddee') == '5'\nassert solution('aabbccddeeff') == '6'\n"
    },
    {
        "number": 4569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\n"
    },
    {
        "number": 4570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('7 17 120') == '119'\n"
    },
    {
        "number": 4571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '6000'\nassert solution('3 3') == '9000'\nassert solution('4 4') == '12000'\nassert solution('5 5') == '15000'\n"
    },
    {
        "number": 4572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\n"
    },
    {
        "number": 4573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 4 4 3''') == '4\\n3\\n3\\n4'\nassert solution('''2\n2 4 4 3''') == '3\\n3'\nassert solution('''3\n2 4 4 3''') == '3\\n3\\n4'\nassert solution('''4\n2 4 4 3''') == '4\\n3\\n3\\n4'\nassert solution('''5\n2 4 4 3''') == '3\\n3\\n4'\n"
    },
    {
        "number": 4574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\n"
    },
    {
        "number": 4577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\nassert solution('1 3 2') == 'Yes'\n"
    },
    {
        "number": 4578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('apple\\norange\\napple\\n') == '2'\nassert solution('apple\\napple\\n') == '1'\nassert solution('apple\\napple\\napple\\n') == '1'\nassert solution('apple\\napple\\napple\\napple\\n') == '1'\nassert solution('apple\\napple\\napple\\napple\\n') == '1'\n"
    },
    {
        "number": 4580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700''') == '2 2'\n"
    },
    {
        "number": 4581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"0\"\nassert solution(\"xoxo\") == \"0\"\nassert solution(\"xoxx\") == \"0\"\nassert solution(\"xoxxo\") == \"0\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\nassert solution('H H') == 'H'\n"
    },
    {
        "number": 4583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2-2=7'\nassert solution('1222') == '1+2+2-2=7'\nassert solution('1222') == '1+2+2-2=7'\nassert solution('1222') == '1+2+2-2=7'\n"
    },
    {
        "number": 4584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 2 2''') == '2\\n2\\n0\\n0\\n0'\nassert solution('''5\n1 1 2 2''') == '2\\n2\\n0\\n0\\n0'\nassert solution('''5\n1 1 2 2''') == '2\\n2\\n0\\n0\\n0'\nassert solution('''5\n1 1 2 2''') == '2\\n2\\n0\\n0\\n0'\nassert solution('''5\n1 1 2 2''') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6''') == '3'\nassert solution('''1''') == '0'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '3'\n"
    },
    {
        "number": 4586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '>'\nassert solution('A B') == '='\nassert solution('B A') == '='\nassert solution('A B') == '='\n"
    },
    {
        "number": 4589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n''') == '11211'\nassert solution('''3 5\n.....\n.#.#.\n.....\n''') == '1#2#1'\nassert solution('''3 5\n.....\n.#.#.\n.....\n''') == '11211'\nassert solution('''3 5\n.....\n.#.#.\n.....\n''') == '1#2#1'\nassert solution('''3 5\n.....\n.#.#.\n.....\n''') == '11211'\n"
    },
    {
        "number": 4590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('0') == '1'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == '3'\nassert solution('''1\n10\n8\n8\n6''') == '1'\nassert solution('''2\n10\n8\n8\n6''') == '2'\nassert solution('''3\n10\n8\n8\n6''') == '3'\nassert solution('''4\n10\n8\n8\n6''') == '3'\n"
    },
    {
        "number": 4595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('QWERTYASDFZXCV') == 'QWERTY'\nassert solution('QWERTYASDFZXC') == 'QWERTY'\nassert solution('QWERTYASDFZXC') == 'QWERTY'\nassert solution('QWERTYASDFZXC') == 'QWERTY'\n"
    },
    {
        "number": 4596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\nassert solution('8 12 40') == '2'\n"
    },
    {
        "number": 4597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '12'\n"
    },
    {
        "number": 4598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '6'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\n"
    },
    {
        "number": 4599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('1 1') == '0'\nassert solution('1 1 1') == '-1'\nassert solution('1 1 1 1') == '-2'\nassert solution('1 1 1 1 1') == '-3'\n"
    },
    {
        "number": 4600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\n"
    },
    {
        "number": 4601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('600\\n300\\n220\\n420\\n') == '520'\nassert solution('600\\n300\\n220\\n420\\n\\n') == '520'\nassert solution('600\\n300\\n220\\n420\\n\\n\\n') == '520'\nassert solution('600\\n300\\n220\\n420\\n\\n\\n\\n') == '520'\n"
    },
    {
        "number": 4604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC680') == 'ABC100'\nassert solution('ABC100') == 'ABC100'\nassert solution('ABC100') == 'ABC100'\nassert solution('ABC100') == 'ABC100'\nassert solution('ABC100') == 'ABC100'\n"
    },
    {
        "number": 4607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5') == '5'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('1 4') == '4'\n"
    },
    {
        "number": 4608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n2\\n6') == '1'\nassert solution('6\\n2\\n6\\n6') == '1'\nassert solution('6\\n2\\n6\\n6\\n6') == '1'\nassert solution('6\\n2\\n6\\n6\\n6\\n6') == '1'\nassert solution('6\\n2\\n6\\n6\\n6\\n6\\n6') == '1'\n"
    },
    {
        "number": 4610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1'\nassert solution('5 2') == '1'\nassert solution('5 2') == '1'\nassert solution('5 2') == '1'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 4611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '2'\nassert solution('1 1') == '2'\nassert solution('1 1') == '2'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7''') == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7''') == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7''') == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7''') == '4'\n"
    },
    {
        "number": 4614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 4615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n"
    },
    {
        "number": 4616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello') == 'hl'\nassert solution('hello world') == 'hlw'\nassert solution('hello world') == 'hlw'\nassert solution('hello world') == 'hlw'\n"
    },
    {
        "number": 4617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\nassert solution(\"pot\") == \"YES\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba', 4) == 'b'\nassert solution('ab', 4) == 'ab'\nassert solution('abc', 4) == 'b'\nassert solution('abc', 3) == 'abc'\nassert solution('abc', 2) == 'bc'\n"
    },
    {
        "number": 4619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n5 5 5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1"
    },
    {
        "number": 4620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\".*..\") == \".*..\"\nassert solution(\"..*\") == \"..*\"\nassert solution(\"*.*\") == \"*.*\"\nassert solution(\"*.*.*\") == \"*.*.*\"\nassert solution(\"*.*.*.*\") == \"*.*.*.*\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 6 1 4 5') == 'YES'\nassert solution('2\\n2 6 1 4 5\\n2 6 1 4 5') == 'NO'\nassert solution('2\\n2 6 1 4 5\\n2 6 1 4 5\\n2 6 1 4 5') == 'NO'\nassert solution('2\\n2 6 1 4 5\\n2 6 1 4 5\\n2 6 1 4 5\\n2 6 1 4 5') == 'NO'\nassert solution('2\\n2 6 1 4 5\\n2 6 1 4 5\\n2 6 1 4 5\\n2 6 1 4 5\\n2 6 1 4 5') == 'NO'\n"
    },
    {
        "number": 4623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\n\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'"
    },
    {
        "number": 4624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'"
    },
    {
        "number": 4626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'"
    },
    {
        "number": 4627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'"
    },
    {
        "number": 4628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n"
    },
    {
        "number": 4629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('''1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'\n"
    },
    {
        "number": 4630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'"
    },
    {
        "number": 4631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7'\nassert solution('''2 3\n1 2\n''') == '1'\nassert solution('''2 3\n1 2\n1 3\n''') == '2'\nassert solution('''2 3\n1 2\n1 3\n1 4\n''') == '2'\n"
    },
    {
        "number": 4632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\n"
    },
    {
        "number": 4634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\n\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'"
    },
    {
        "number": 4635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\nassert solution('''7 3\n4 4\n6 2''') == 'cbcacab'\n"
    },
    {
        "number": 4636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n\nassert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'"
    },
    {
        "number": 4637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'baaba'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bbaaa'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'abb'\n"
    },
    {
        "number": 4640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n1\n2\n2\n0\n0\n10\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\nassert solution('''7 3\n0\n1\n2\n2\n0\n0\n10\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('''7 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0'\nassert solution('''7 3\n1\n2\n1\n2\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\n"
    },
    {
        "number": 4642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\n"
    },
    {
        "number": 4643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 1 1 1') == '1 1 1 1'\nassert solution('1 1 1 1 1') == '1 1 1 1 1'\nassert solution('1 1 1 1 1 1') == '1 1 1 1 1 1'\nassert solution('1 1 1 1 1 1 1') == '1 1 1 1 1 1 1'\n"
    },
    {
        "number": 4644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''2\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'"
    },
    {
        "number": 4645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n10\n2\n4\n6\n7\n13''') == '9 6 10 8 4 7 3 1 5 2 \\n-1\\n3 1 4 2 \\n5 3 6 2 4 1 \\n5 1 3 6 2 4 7 \\n13 9 7 11 8 4 1 3 5 2 6 10 12'\nassert solution('''2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 4646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '-1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '0'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '0'\n"
    },
    {
        "number": 4647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nassert solution('''4\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''4\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''4\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''4\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\n"
    },
    {
        "number": 4652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES'\n"
    },
    {
        "number": 4653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\nassert solution('''5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5\\n18\\n10\\n6\\n75015'\n"
    },
    {
        "number": 4654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'"
    },
    {
        "number": 4655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\nassert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '4'\nassert solution('''6\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'\n"
    },
    {
        "number": 4657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\nassert solution(\"00000000000000000000000000000000\") == \"0\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"0000000000000000000000000000000000000000\") == \"0\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a@a.com\\nb@b.com\\nc@c.com') == ['a@a.com', 'b@b.com', 'c@c.com']\nassert solution('a@a-com\\nb@b.com\\nc@c.com') == ['a@a-com', 'b@b.com', 'c@c.com']\nassert solution('a@a_com\\nb@b.com\\nc@c.com') == ['a@a_com', 'b@b.com', 'c@c.com']\nassert solution('a@a-com.com\\nb@b.com\\nc@c.com') == ['a@a-com.com', 'b@b.com', 'c@c.com']\nassert solution('a@a-com.com\\nb@b.com\\nc@c.com') == ['a@a-com.com', 'b@b.com', 'c@c.com']\n"
    },
    {
        "number": 4661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == [0, 1, 1, 2, 3, 5, 8, 13]\n\n\"\"\""
    },
    {
        "number": 4662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 1\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 2\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 0\n\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == 1"
    },
    {
        "number": 4663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"123456789\") == \"NO\"\nassert solution(\"1234567890\") == \"YES\"\nassert solution(\"1234567890\") == \"YES\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"YES\"\n"
    },
    {
        "number": 4664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340"
    },
    {
        "number": 4665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('\\n'.join([\n    '5',\n    'ID         MARKS      NAME       CLASS',\n    '1          97         Raymond    7',\n    '2          50         Steven     4',\n    '3          91         Adrian     9',\n    '4          72         Stewart    5',\n    '5          80         Peter      6',\n])) == '80.00'\n\nassert solution('\\n'.join([\n    '5',\n    'MARKS      CLASS      NAME       ID',\n    '92         2          Calum      1',\n    '82         5          Scott      2',\n    '94         2          Jason      3',\n    '55         8          Glenn      4',\n    '82         2          Fergus     5',\n])) == '55.00'\n\nassert solution('\\n'.join([\n    '5',\n    'ID         MARKS      NAME       CLASS',\n    '1          97         Raymond    7',\n    '2          50         Steven     4',\n    '3          91         Adrian     9',\n    '4          72         Stewart    5',\n    '5          80         Peter      6',\n    '6          75         Lauren     2',\n])) == '81.25'\n\nassert solution('\\n'.join([\n    '5',\n    'MARKS      CLASS      NAME       ID',\n    '92         2          Calum      1',\n    '82         5          Scott      2',\n    '94         2          Jason      3',\n    '55         8          Glenn      4',\n    '82         2          Fergus     5',\n    '2          91         Adrian     9',\n    '4          72         Stewart    5',\n])) == '81.25'\n\nassert solution('\\n'.join([\n    '5',\n    'MARKS      CLASS      NAME       ID',\n    '92         2          Calum      1',\n    '82         5          Scott      2',\n    '94         2          Jason      3',\n    '55         8          Glenn      4',\n    '82         2          Fergus     5',\n    '2          91         Adrian     9',\n    '4          72         Stewart    5',\n    '0          70         Peter      6',\n])) == '70.00'"
    },
    {
        "number": 4666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(3) == \"Weird\"\nassert solution(4) == \"Not Weird\"\nassert solution(5) == \"Weird\"\nassert solution(6) == \"Not Weird\"\nassert solution(20) == \"Weird\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '7'\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '6'\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '5'\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '4'\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == '3'\n"
    },
    {
        "number": 4668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"0 0 0\\n0 0 1\\n0 1 0\\n0 1 1\\n1 0 0\\n1 0 1\\n1 1 0\\n1 1 1\"\n) == \"45.0\"\nassert solution(\n    \"0 0 0\\n0 0 1\\n0 1 0\\n0 1 1\\n1 0 0\\n1 0 1\\n1 1 0\\n1 1 1\"\n) == \"45.0\"\nassert solution(\n    \"0 0 0\\n0 0 1\\n0 1 0\\n0 1 1\\n1 0 0\\n1 0 1\\n1 1 0\\n1 1 1\"\n) == \"45.0\"\nassert solution(\n    \"0 0 0\\n0 0 1\\n0 1 0\\n0 1 1\\n1 0 0\\n1 0 1\\n1 1 0\\n1 1 1\"\n) == \"45.0\"\nassert solution(\n    \"0 0 0\\n0 0 1\\n0 1 0\\n0 1 1\\n1 0 0\\n1 0 1\\n1 1 0\\n1 1 1\"\n) == \"45.0\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nhacker\n''') == '1'\nassert solution('''5\nnot bad\n''') == '2'\nassert solution('''5\nto be or not to be\n''') == '2'\nassert solution('''5\nhacker\n''') == '1'\nassert solution('''5\nis the best\n''') == '2'\n"
    },
    {
        "number": 4670,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"X\") == False\nassert solution(\"VII\") == True\nassert solution(\"MMMCMXCIX\") == False\nassert solution(\"MMMM\") == False\nassert solution(\"MMMCCCLXXXVIII\") == True\n"
    },
    {
        "number": 4671,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('+91 9999999999') == '+91 9999999999'\nassert solution('+91 9999999999') == '+91 9999999999'\nassert solution('+91 9999999999') == '+91 9999999999'\nassert solution('+91 9999999999') == '+91 9999999999'\nassert solution('+91 9999999999') == '+91 9999999999'\n"
    },
    {
        "number": 4672,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('alpha\\nbeta\\nalpha\\n') == '50.00'\nassert solution('alpha\\nbeta\\nalpha\\n') == '50.00'\nassert solution('alpha\\nbeta\\nalpha\\n') == '50.00'\nassert solution('alpha\\nbeta\\nalpha\\n') == '50.00'\nassert solution('alpha\\nbeta\\nalpha\\n') == '50.00'\n"
    },
    {
        "number": 4673,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\nMike Thomson 20 M\\nRobert Bustle 32 M\\nAndria Bustle 30 F\\n') == 'Mr. Mike Thomson\\nMs. Andria Bustle\\nMr. Robert Bustle'\nassert solution('2\\nMike Thomson 20 M\\nRobert Bustle 32 M\\nAndria Bustle 30 F\\n') == 'Mr. Mike Thomson\\nMr. Robert Bustle\\nMs. Andria Bustle'\nassert solution('3\\nMike Thomson 20 M\\nRobert Bustle 32 M\\nAndria Bustle 30 F\\n') == 'Mr. Mike Thomson\\nMr. Robert Bustle\\nMs. Andria Bustle'\nassert solution('4\\nMike Thomson 20 M\\nRobert Bustle 32 M\\nAndria Bustle 30 F\\n') == 'Mr. Mike Thomson\\nMr. Robert Bustle\\nMs. Andria Bustle\\nMs. Andria Bustle'\nassert solution('5\\nMike Thomson 20 M\\nRobert Bustle 32 M\\nAndria Bustle 30 F\\n') == 'Mr. Mike Thomson\\nMr. Robert Bustle\\nMs. Andria Bustle\\nMs. Andria Bustle\\nMs. Andria Bustle'\n"
    },
    {
        "number": 4674,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n1\n2''') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('''1\n1\n1\n2''') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('''1\n1\n1\n2''') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('''1\n1\n1\n2''') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\nassert solution('''1\n1\n1\n2''') == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1.1 2.2') == '3.3 -1.1'\nassert solution('1.1 2.2') == '3.3 -1.1'\nassert solution('1.1 2.2') == '3.3 -1.1'\nassert solution('1.1 2.2') == '3.3 -1.1'\nassert solution('1.1 2.2') == '3.3 -1.1'\n"
    },
    {
        "number": 4676,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('xyz') == 'xaybzc'\n"
    },
    {
        "number": 4677,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('01') == '00'\nassert solution('01B0') == '00'\nassert solution
    },
    {
        "number": 4678,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 5 4 3') == '4'\nassert solution('2 1 5 4 3') == '4'\nassert solution('2 1 5 4 3') == '4'\nassert solution('2 1 5 4 3') == '4'\nassert solution('2 1 5 4 3') == '4'\n"
    },
    {
        "number": 4679,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\nassert solution('ac') == 'A'\nassert solution('ac') == 'A'\n"
    },
    {
        "number": 4680,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 5 5') == 'NO'\nassert solution('5 5 7') == 'YES'\nassert solution('5 5 5') == 'NO'\nassert solution('5 5 5') == 'NO'\n"
    },
    {
        "number": 4681,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '11'\nassert solution('10') == '55'\nassert solution('100') == '220'\nassert solution('1000') == '1270'\nassert solution('10000') == '1118446744073709551615'\n"
    },
    {
        "number": 4682,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4\\n2') == '7'\nassert solution('3\\n4\\n2\\n') == '7'\nassert solution('3\\n4\\n2\\n\\n') == '7'\nassert solution('3\\n4\\n2\\n\\n\\n') == '7'\nassert solution('3\\n4\\n2\\n\\n\\n\\n') == '7'\n"
    },
    {
        "number": 4683,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('1 2 3 4') == '10'\nassert solution('1 2 3 4 5') == '45'\nassert solution('1 2 3 4 5 6') == '45'\nassert solution('1 2 3 4 5 6 7') == '123'\n"
    },
    {
        "number": 4684,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('5 3 11') == '30'\nassert solution('5 3 11') == '30'\nassert solution('5 3 11') == '30'\nassert solution('5 3 11') == '30'\n"
    },
    {
        "number": 4686,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abacaba') == 'No'\nassert solution('abacabac') == 'Yes'\nassert solution('abacabac') == 'No'\nassert solution('abacabac') == 'Yes'\n"
    },
    {
        "number": 4687,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\n"
    },
    {
        "number": 4688,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 1') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4689,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4690,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 5 2 7') == '15'\nassert solution('3 5 2 7') == '15'\nassert solution('3 5 2 7') == '15'\nassert solution('3 5 2 7') == '15'\n"
    },
    {
        "number": 4691,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AC') == 'AC x 3'\nassert solution('TLE') == 'TLE x 2'\nassert solution('AC') == 'AC x 3'\nassert solution('AC') == 'AC x 3'\nassert solution('WA') == 'WA x 1'\n"
    },
    {
        "number": 4692,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4693,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('6 3') == '9'\nassert solution('10 11') == 'error'\nassert solution('10 10') == '10'\nassert solution('10 9') == 'error'\n"
    },
    {
        "number": 4694,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 7 9') == '7'\nassert solution('2 3 4 5') == '3'\nassert solution('2 3 4 5 6') == '4'\nassert solution('2 3 4 5 6 7') == '5'\nassert solution('2 3 4 5 6 7 8') == '6'\n"
    },
    {
        "number": 4695,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4696,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('1 2') == 'Odd'\nassert solution('1 1') == 'Even'\nassert solution('1 1') == 'Even'\nassert solution('1 1') == 'Even'\n"
    },
    {
        "number": 4697,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 6') == '2'\nassert solution('2 3') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 4698,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9'\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9'\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9'\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9'\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9'\n"
    },
    {
        "number": 4699,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\nassert solution('1000 8') == '2000'\n"
    },
    {
        "number": 4700,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\n"
    },
    {
        "number": 4701,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4702,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == 0\nassert solution(0) == 1\nassert solution(0.1) == 0\nassert solution(0.9) == 1\nassert solution(0.99) == 0\n"
    },
    {
        "number": 4703,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\nassert solution('1+2+5+5') == '10'\n"
    },
    {
        "number": 4704,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 3 4 5 6''') == '1'\nassert solution('''6\n1 2 3 4 5 6''') == '1'\nassert solution('''6\n1 2 3 4 5 6''') == '1'\nassert solution('''6\n1 2 3 4 5 6''') == '1'\nassert solution('''6\n1 2 3 4 5 6''') == '1'\n"
    },
    {
        "number": 4705,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20') == '15800'\nassert solution('10') == '0'\nassert solution('100') == '0'\nassert solution('1000') == '0'\nassert solution('10000') == '0'\n"
    },
    {
        "number": 4706,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4707,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('101') == 2\nassert solution('10101') == 1\nassert solution('1010101') == 0\nassert solution('101010101') == 0\nassert solution('10101010101') == 0\n"
    },
    {
        "number": 4708,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4709,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 + 2') == 3\nassert solution('1 - 2') == -1\nassert solution('2 - 1') == 1\nassert solution('1 + 2 + 3') == 6\nassert solution('1 + 2 - 3') == -4\n"
    },
    {
        "number": 4710,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input()) == 'ARC'\nassert solution(input()) == 'ARC'\nassert solution(input()) == 'ARC'\nassert solution(input()) == 'ARC'\n"
    },
    {
        "number": 4711,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\n"
    },
    {
        "number": 4712,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\nabc\narc''') == '#####\\n#abc#\\n#arc#\\n#####'\nassert solution('''2 3\nabc\narc''') == '#####\\n#abc#\\n#arc#\\n#####'\nassert solution('''2 3\nabc\narc''') == '#####\\n#abc#\\n#arc#\\n#####'\nassert solution('''2 3\nabc\narc''') == '#####\\n#abc#\\n#arc#\\n#####'\nassert solution('''2 3\nabc\narc''') == '#####\\n#abc#\\n#arc#\\n#####'\n"
    },
    {
        "number": 4713,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('IIDID') == '2'\nassert solution('DDIID') == '1'\nassert solution('DDIID') == '1'\nassert solution('DDIID') == '1'\nassert solution('DDIID') == '1'\n"
    },
    {
        "number": 4714,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4715,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('3 1 4') == '3'\nassert solution('3 1 4') == '3'\nassert solution('3 1 4') == '3'\nassert solution('3 1 4') == '3'\n"
    },
    {
        "number": 4716,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3') == '12'\nassert solution('1 2 3 4 5') == '12'\nassert solution('1 2 3 4 5 6') == '12'\nassert solution('1 2 3 4 5 6 7') == '12'\nassert solution('1 2 3 4 5 6 7 8') == '12'\n"
    },
    {
        "number": 4717,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4718,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/23\") == \"2018/01/23\"\nassert solution(\"2017/01/23\") == \"2018/01/23\"\nassert solution(\"2017/01/23\") == \"2018/01/23\"\nassert solution(\"2017/01/23\") == \"2018/01/23\"\n"
    },
    {
        "number": 4719,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('cbaa\\ndaacc\\nacacac') == 'aac'\nassert solution('cbaa\\ndaacc\\nacacac') == 'aac'\nassert solution('cbaa\\ndaacc\\nacacac') == 'aac'\nassert solution('cbaa\\ndaacc\\nacacac') == 'aac'\nassert solution('cbaa\\ndaacc\\nacacac') == 'aac'\n"
    },
    {
        "number": 4720,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4721,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4722,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('1 2') == 'Possible'\nassert solution('1 1') == 'Possible'\nassert solution('1 1') == 'Possible'\nassert solution('1 1') == 'Possible'\n"
    },
    {
        "number": 4723,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('coder') == 'atcoder'\n"
    },
    {
        "number": 4724,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2002\\n2017') == '2032'\nassert solution('2002\\n2017\\n2032') == '2032'\nassert solution('2002\\n2017\\n2032\\n2032') == '2032'\nassert solution('2002\\n2017\\n2032\\n2032\\n2032') == '2032'\nassert solution('2002\\n2017\\n2032\\n2032\\n2032\\n2032') == '2032'\n"
    },
    {
        "number": 4725,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4726,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''100000000 500 3''') == 'TLE'\nassert solution('''100000000 50 3''') == 'AC'\nassert solution('''100000000 10001 5''') == 'TLE'\nassert solution('''100000000 10000 5''') == 'AC'\nassert solution('''19931568 1000000 6''') == 'TLE'\n"
    },
    {
        "number": 4727,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'\n\nassert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n4\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'"
    },
    {
        "number": 4728,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''H2\nO\n''') == '0'\nassert solution('''C2H6\nO\n''') == '0'\nassert solution('''C2H6\nC3H8\n''') == '6'\nassert solution('''CH3OH\nCH4\n''') == '1'\nassert solution('''C6H6OCH2O\nHCN\n''') == '0'\n"
    },
    {
        "number": 4729,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n\n\"\"\""
    },
    {
        "number": 4730,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('([] [] )') == '] 7'\nassert solution('([] [] )') == '] 7'\nassert solution('([] [] )') == '] 7'\nassert solution('([] [] )') == '] 7'\nassert solution('([] [] )') == '] 7'\n"
    },
    {
        "number": 4731,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''3\napple\nextra\napple\n''') == 'Player 2 lost'\nassert solution('''2\napple\nneat\n''') == 'Player 1 lost'\nassert solution('''1\na\n''') == 'Player 1 lost'\nassert solution('''0\n''') == 'Player 1 lost'\n"
    },
    {
        "number": 4732,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000\\n*\\n100\\n') == '100000'\nassert solution('1000\\n+\\n100\\n') == '10010'\nassert solution('10\\n+\\n1000\\n') == '1010'\nassert solution('10\\n*\\n1000\\n') == '10000'\nassert solution('10\\n*\\n10\\n') == '100'\n"
    },
    {
        "number": 4733,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nassert solution('52 in') == '6'\nassert solution('8 in') == '6'\n"
    },
    {
        "number": 4734,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4735,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'no'\nassert solution('1') == 'no'\nassert solution('2') == 'no'\nassert solution('3') == 'no'\nassert solution('4') == 'no'\n"
    },
    {
        "number": 4736,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4''') == '1820000'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n5''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n6''') == '0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'\nassert solution('''7 3\n30 270 995 996 997 998 999''') == '0 0'\nassert solution('''7 4\n30 270 995 996 997 998 999''') == '0 0'\n"
    },
    {
        "number": 4738,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\nassert solution('abcd') == 1\nassert solution('abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd"
    },
    {
        "number": 4739,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\\n1 2\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '0\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '0\\n1\\n'\nassert solution('''3 6\n1 2 4\n11 12 15 19 24 30\n''') == '0\\n1\\n'\n"
    },
    {
        "number": 4740,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nassert solution('5555555') == '0'\nassert solution('55555555') == '0'\n"
    },
    {
        "number": 4741,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nprint(solution(input()))\n"
    },
    {
        "number": 4742,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Nonsense'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Nonsense'\n"
    },
    {
        "number": 4743,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''I love ba-na-na''') == 'Gah kove bababa'\nassert solution('''Cat-a-pil-lar''') == 'Catacillar'\nassert solution('''Co-ding is the best''') == 'Cociccah gs the bestuh'\nassert solution('''I love ba-na-na''') == 'Gah kove bababa'\nassert solution('''Cat-a-pil-lar''') == 'Catacillar'\n"
    },
    {
        "number": 4744,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '6'\nassert solution('2') == '16'\nassert solution('3') == '14'\nassert solution('4') == '24'\n"
    },
    {
        "number": 4745,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''5 10\n1 3 1 7\n''') == '4'\nassert solution('''5 10\n1 3 1 7\n''') == '4'\nassert solution('''5 10\n1 3 1 7\n''') == '4'\n"
    },
    {
        "number": 4746,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0''') == 'possible'\nassert solution('''1 2\n1 0 0\n0 1 0''') == 'impossible'\nassert solution('''1 2\n0 1 0\n1 0 1''') == 'impossible'\nassert solution('''1 2\n1 0 0\n0 1 0''') == 'impossible'\nassert solution('''1 2\n1 0 0\n1 0 1''') == 'impossible'\n"
    },
    {
        "number": 4747,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nassert solution('6 3') == '5.125'\nassert solution('6 4') == '5.0625'\n"
    },
    {
        "number": 4748,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 0''') == '0 0'\nassert solution('''4 2 7''') == '1 4'\nassert solution('''3 0 0''') == '1 6'\nassert solution('''2 2 2''') == '0 0'\nassert solution('''1 1 1''') == '0 0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW''') == '1'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB''') == '0'\nassert solution('''8\nBWWBBW\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\nWBWBWB\nBWWBBW''') == '0'\nassert solution('''10\nBWWBBWB\nWBWBWBW\nWBBWBWB\nBBWBWWB\nBWWBBWB\nWWBWBBB\nWBWBWBW\nBWWBBWB\nWBWBWBW\nBWWBBWB''') == '0'\nassert solution('''12\nBWWBBWBWB\nWBWBWBWB\nWBBWBWBW\nBBWBWWBW\nBWWBBWBW\nWWBWBBBW\nWBWBWBWB\nBWWBBWBW\nWBWBWBWB\nBWWBBWBW\nWBWBWBWB''') == '0'\n"
    },
    {
        "number": 4750,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\n"
    },
    {
        "number": 4751,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4752,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\n552\\n553\\n554\\n555\\n556\\n557\\n558\\n559\\n560\\n561\\n562\\n563\\n564\\n565\\n566\\n567\\n568\\n569\\n570\\n571\\n572\\n573\\n574\\n575\\n576\\n577\\n578\\n579\\n580\\n581\\n582\\n583\\n584\\n585\\n586\\n587\\n588\\n589\\n590\\n591\\n592\\n593\\n594\\n595\\n596\\n597\\n598\\n599\\n600\\n601\\n602\\n603\\n604\\n605\\n606\\n607\\n608\\n609\\n610\\n611\\n612\\n613\\n614\\n615\\n616\\n617\\n618\\n619\\n620\\n621\\n622\\n623\\n624\\n625\\n626\\n627\\n628\\n629\\n630\\n631\\n632\\n6"
    },
    {
        "number": 4753,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '0'\nassert solution('''4''') == '1'\nassert solution('''5''') == '2'\nassert solution('''6''') == '3'\nassert solution('''7''') == '4'\n"
    },
    {
        "number": 4754,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''184 1''') == '180'\nassert solution('''123450995 1''') == '123451000'\nassert solution('''123450995 1''') == '123451000'\nassert solution('''123450995 1''') == '123451000'\nassert solution('''123450995 1''') == '123451000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''3\n0 1\n1 0\n1 1''') == '0.000000'\nassert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\n"
    },
    {
        "number": 4757,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1''') == '1\\n2\\n4\\n'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\nSample Output 2:\n1\n2\n6\n8\n''') == '1\\n2\\n6\\n8\\n'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\nSample Output 2:\n1\n2\n6\n8\n''') == '1\\n2\\n6\\n8\\n'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\nSample Output 2:\n1\n2\n6\n8\n''') == '1\\n2\\n6\\n8\\n'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\nSample Output 2:\n1\n2\n6\n8\n''') == '1\\n2\\n6\\n8\\n'\n"
    },
    {
        "number": 4758,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4759,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n3 0 2') == '1.6666666666666667'\n"
    },
    {
        "number": 4760,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4761,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4762,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('4') == '0.75'\nassert solution('5') == '0.83333333'\nassert solution('6') == '0.9166667'\n"
    },
    {
        "number": 4763,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\nassert solution('96') == 'double 15'\nassert solution('96') =='single 9'\nassert solution('96') == 'impossible'\n"
    },
    {
        "number": 4764,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 4 7''') == '168'\nassert solution('''5 2 2''') == '36'\nassert solution('''5 2 2''') == '36'\nassert solution('''5 2 2''') == '36'\nassert solution('''5 2 2''') == '36'\n"
    },
    {
        "number": 4765,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n3 10\n''') == '7'\nassert solution('''2\n3 8\n5 8\n''') == '1'\nassert solution('''3\n3 10\n5 8\n7 9\n''') == '1'\nassert solution('''4\n3 10\n5 8\n7 9\n10 11\n''') == '0'\nassert solution('''5\n3 10\n5 8\n7 9\n10 11\n12 13\n''') == '0'\n"
    },
    {
        "number": 4766,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\nSimon says smile.\n''') =='smile.\\n'\nassert solution('''3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n''') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('''2\nSimon says smile.\nSimon says raise your right hand.\n''') =='smile.\\n raise your right hand.\\n'\nassert solution('''4\nSimon says smile.\nSimon says raise your right hand.\nSimon says raise your left hand.\nSimon says lower your right hand.\n''') =='smile.\\n raise your right hand.\\n raise your left hand.\\n lower your right hand.\\n'\nassert solution('''5\nSimon says smile.\nSimon says raise your right hand.\nSimon says raise your left hand.\nSimon says lower your right hand.\nSimon says lower your left hand.\n''') =='smile.\\n raise your right hand.\\n raise your left hand.\\n lower your right hand.\\n lower your left hand.\\n'\n"
    },
    {
        "number": 4767,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4768,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nassert solution('''4 1\nA\nA\nG\nT\nA\nA\nG\nT''') == '0 1'\nassert solution('''4 1\nA\nA\nG\nT\nA\nA\nG\nT\nA\nA\nG\nT''') == '0 2'\nassert solution('''4 1\nA\nA\nG\nT\nA\nA\nG\nT\nA\nA\nG\nT\nA\nA\nG\nT''') == '0 3'\n"
    },
    {
        "number": 4769,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\nassert solution('bbabab') == 'bba'\nassert solution('bba') == 'bba'\nassert solution('bbbbbb') == 'bba'\n"
    },
    {
        "number": 4770,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz needs 1 more piece of chicken!'\nassert solution('2 3') == 'Dr. Chaz needs 1 more piece of chicken!'\nassert solution('2 3') == 'Dr. Chaz needs 1 more piece of chicken!'\n"
    },
    {
        "number": 4771,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4772,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as''') == 'as'\nassert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'as'\nassert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'as'\nassert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'as'\n"
    },
    {
        "number": 4773,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"WNEENWEENEEN\") == \"10\"\nassert solution(\"NSEW\") == \"4\"\nassert solution(\"NENWEENWEENEWS\") == \"13\"\nassert solution(\"NENWEENWEENEWS\") == \"13\"\nassert solution(\"NENWEENWEENEWS\") == \"13\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4775,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\nassert solution('BANANA') == '.P....\\n.I....\\n.D....\\n.Z....'\nassert solution('MAMA') == '.T..\\nMAMA'\nassert solution('PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....'\n"
    },
    {
        "number": 4776,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\nassert solution('''1\n1 1\n1 1''') == '1'\nassert solution('''2\n1 1\n1 1''') == '1'\nassert solution('''3\n1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 4777,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0 1'\nassert solution('1') == '0 1'\nassert solution('4') == '2 3'\nassert solution('5') == '2 3'\nassert solution('6') == '2 3'\n"
    },
    {
        "number": 4778,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == '''B 100 49\nA 1 197\nA 49 100\n0.1965897693'''\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n''') == '''A 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372'''\nassert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == '''B 100 49\nA 1 197\nA 49 100\n0.1965897693'''\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n''') == '''A 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372'''\nassert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98''') == '''B 100 49\nA 1 197\nA 49 100\n0.1965897693'''\n"
    },
    {
        "number": 4779,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '168'\nassert solution('''2''') == '1'\nassert solution('''1''') == '1'\nassert solution('''4''') == '36'\nassert solution('''3''') == '9'\n"
    },
    {
        "number": 4780,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\nABC\nDEF\n0''') == 'CBADEF'\nassert solution('''3 3\nABC\nDEF\n2''') == 'CDBEAF'\nassert solution('''3 3\nABC\nDEF\n3''') == 'CABDE'\nassert solution('''3 3\nABC\nDEF\n4''') == 'CABDE'\nassert solution('''3 3\nABC\nDEF\n5''') == 'CABDE'\n"
    },
    {
        "number": 4781,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '5'\nassert solution('''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N''') == '4'\nassert solution('''1\n1\n100 T\n100 N\n100 T\n100 T\n100 N''') == '1'\nassert solution('''1\n2\n100 T\n100 N\n100 T\n100 T\n100 N''') == '2'\nassert solution('''1\n3\n100 T\n100 N\n100 T\n100 T\n100 N''') == '3'\n"
    },
    {
        "number": 4782,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == '6'\nassert solution('''6 8''') == '22'\nassert solution('''6 7''') == '14'\nassert solution('''6 5''') == '10'\nassert solution('''6 4''') == '8'\n"
    },
    {
        "number": 4783,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4784,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n3\n4\n6\n2''') == '28'\nassert solution('''10\n3\n10\n2\n12''') == '16'\nassert solution('''10\n3\n10\n2\n12\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100''') == '100'\nassert solution('''10\n3\n10\n2\n12\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100''') == '28'\nassert solution('''10\n3\n10\n2\n12\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100''') == '16'\n"
    },
    {
        "number": 4785,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('mississippi') == 'no hiss'\nassert solution('hiss') == 'hiss'\nassert solution('hisss') == 'no hiss'\n"
    },
    {
        "number": 4786,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nc++\nC++\nc\nc#''') == '3'\nassert solution('''5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\nassert solution('''1\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '0'\nassert solution('''2\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '0'\nassert solution('''3\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '0'\n"
    },
    {
        "number": 4787,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('TCGTTC') == 21\nassert solution('CCC') == 9\nassert solution('GTCGTG') == 21\nassert solution('GTCGTGCC') == 21\nassert solution('GTCGTGCCG') == 21\n"
    },
    {
        "number": 4788,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4789,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\nassert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n1\n23\n18\n13\n99''') == '3'\n"
    },
    {
        "number": 4790,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBB') == '0'\nassert solution
    },
    {
        "number": 4791,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4792,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('robertapalaxiamethostenesapaxianqueen') == 'robert'\nassert solution('robertapalaxiamethostenesapaxianqueenapaxianqueen') == 'robert'\n"
    },
    {
        "number": 4793,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4794,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\n    \"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\"\nassert solution(\n    \"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\n    \"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\"\nassert solution(\n    \"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n212\\n1253') == '1953566'\nassert solution('5\\n23\\n17\\n43\\n52\\n22') == '102'\nassert solution('1\\n2\\n3\\n4\\n5') == '15'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '21'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '21'\n"
    },
    {
        "number": 4796,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 10 10''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\nassert solution('''9 9 9''') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4797,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4798,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nassert solution('KMP') == 'KMP'\nassert solution('MS') == 'MS'\nassert solution('-') == '-'\n"
    },
    {
        "number": 4799,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('1 1 1') == 'Province or Gold'\nassert solution('1 1 1') == 'Province or Gold'\nassert solution('1 1 1') == 'Province or Gold'\n"
    },
    {
        "number": 4800,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1\\n70 50') == '90.00'\nassert solution('10 3\\n80 90') == '75.7142857'\nassert solution('10 3\\n70 50') == '90.00'\nassert solution('10 3\\n80 90') == '75.7142857'\nassert solution('10 3\\n70 50') == '90.00'\n"
    },
    {
        "number": 4801,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 1 5 4 7 6''') == '4\\n2 3 5 7'\nassert solution('''5\n1 2 3 4 5''') == '5\\n1 2 3 4 5'\nassert solution('''7\n2 3 1 5 4 7 6''') == '4\\n2 3 5 7'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '5\\n1 2 3 4 5'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '5\\n1 2 3 4 5'\n"
    },
    {
        "number": 4802,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4803,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4804,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1:2'\nassert solution('3') == '1:2:3'\nassert solution('4') == '1:2:3:4'\n"
    },
    {
        "number": 4805,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN IN THE PLAIN IN THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nassert solution
    },
    {
        "number": 4807,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7'\n"
    },
    {
        "number": 4808,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4809,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\nassert solution('10 100') == '7'\nassert solution('100 10') == '7'\nassert solution('100 100') == '7'\n"
    },
    {
        "number": 4810,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\nassert solution('boudonuimilcbsai') == 'boudonuimilcbsai'\nassert solution('boudonuilcbsai') == 'boudonuilcbsai'\nassert solution('boudonuilcbsai') == 'boudonuilcbsai'\n"
    },
    {
        "number": 4811,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6''') == '8 2'\nassert solution('''7''') == '8 3'\nassert solution('''1''') == '1 1'\nassert solution('''2''') == '2 1'\nassert solution('''3''') == '3 2'\n"
    },
    {
        "number": 4812,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet') == 'NO'\nassert solution('eater') == 'NO'\nassert solution('eater') == 'NO'\n"
    },
    {
        "number": 4813,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE'\nassert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE'\nassert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\n"
    },
    {
        "number": 4814,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'INCREASING'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'DECREASING'\nassert solution('''2\nJOE\nBOB''') == 'NEITHER'\nassert solution('''3\nJOE\nBOB\nANDY''') == 'INCREASING'\nassert solution('''4\nJOE\nBOB\nANDY\nAL''') == 'INCREASING'\n"
    },
    {
        "number": 4815,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!\\nNina wins!\\nJess wins!\\n'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\n'\nassert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'No winner!\\n'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Bob wins!\\nNina wins!\\n'\nassert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'No winner!\\n'\n"
    },
    {
        "number": 4816,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4817,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0\nassert solution(999) == 0\nassert solution(0) == 0\nassert solution(1) == 1\n"
    },
    {
        "number": 4818,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\nassert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\n"
    },
    {
        "number": 4819,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84\\n420\\n126\\n42\\n84"
    },
    {
        "number": 4820,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4821,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nassert solution('P01K02H03H04P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02P01K02H03H04') == 'GRESKA'\nassert solution('P01K02H03H04P01K02H03H04P01K02H03H04') == '12 12 11 13'\n"
    },
    {
        "number": 4822,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4823,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('2C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4824,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4825,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''All your base are belong to us.\n''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n'\nassert solution('''What's the Frequency, Kenneth?\n''') == '\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n'\nassert solution('''\n''') == '\\n'\nassert solution('''\n''') == '\\n'\nassert solution('''\n''') == '\\n'\n"
    },
    {
        "number": 4826,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"\nassert solution(3) == \"Alice\"\nassert solution(4) == \"Bob\"\nassert solution(5) == \"Alice\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''this\nsentence\nhas\n$\nletters''') == 'this sentence has thirtyone letters'\nassert solution('''$\nis\nthe\nnumber\nof\nletters\nhere''') == 'thirty is the number of letters here'\nassert solution('''this\nsentence\nhas\n$\nletters''') == 'this sentence has thirtyone letters'\nassert solution('''$\nis\nthe\nnumber\nof\nletters\nhere''') == 'thirty is the number of letters here'\nassert solution('''this\nsentence\nhas\n$\nletters''') == 'this sentence has thirtyone letters'\n"
    },
    {
        "number": 4828,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5\nassert solution('A') == 0\nassert solution('B') == 1\nassert solution('C') == 2\n"
    },
    {
        "number": 4829,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('0 0') == 'Not a moose'\nassert solution('1 1') == 'Not a moose'\nassert solution('1 2') == 'Not a moose'\n"
    },
    {
        "number": 4830,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''tomo\nmono\ndak\n''') == '1'\nassert solution('''ja\nla\n52\n''') == '2'\nassert solution('''tomo\nmono\ndak\n''') == '1'\nassert solution('''ja\nla\n52\n''') == '2'\nassert solution('''tomo\nmono\ndak\n''') == '1'\n"
    },
    {
        "number": 4831,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\nassert solution('ABC') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('ABCD') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('ABCDE') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\n"
    },
    {
        "number": 4832,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '3.141593'\nassert solution('''21''') == '1385.442360'\nassert solution('''21''') == '1385.442360'\nassert solution('''21''') == '1385.442360'\nassert solution('''21''') == '1385.442360'\n"
    },
    {
        "number": 4833,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 -2 3''') == '2'\nassert solution('''5\n129 44 394 253 147''') == '0'\nassert solution('''5\n-129 -44 -39 -253 -147''') == '0'\nassert solution('''5\n-129 -44 -39 -253 -147''') == '0'\nassert solution('''5\n-129 -44 -39 -253 -147''') == '0'\n"
    },
    {
        "number": 4834,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 2 2''') == '6'\nassert solution('''3\n4 1 2''') == '8'\nassert solution('''3\n1 1 1''') == '3'\nassert solution('''3\n2 1 1''') == '4'\nassert solution('''3\n1 1 1''') == '3'\n"
    },
    {
        "number": 4835,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11\n0U11"
    },
    {
        "number": 4836,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4837,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n''') == '10'\nassert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '15'\nassert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '10'\nassert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '15'\nassert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '10'\n"
    },
    {
        "number": 4838,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n7\n11\n''') == '4'\nassert solution('''5\n2\n5\n9\n10\n17\n''') =='still running'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4839,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n6 1 3 2 2 3''') == '0.6'\nassert solution('''2\n2 2''') == 'impossible'\nassert solution('''1\n1''') == '1.0'\nassert solution('''2\n2 1''') == 'impossible'\nassert solution('''3\n3 1 2''') == 'impossible'\n"
    },
    {
        "number": 4840,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 4 1 4\n1 6 1 6\n''') == 'Emma'\nassert solution('''1 8 1 8\n1 10 2 5\n''') == 'Tie'\nassert solution('''1 1 1 1\n1 1 1 1\n''') == 'Tie'\nassert solution('''1 1 1 1\n1 1 1 1\n''') == 'Tie'\nassert solution('''1 1 1 1\n1 1 1 1\n''') == 'Tie'\n"
    },
    {
        "number": 4841,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 mumble 5''') =='makes sense'\nassert solution('''8\n1 2 3 mumble mumble 7 mumble 8''') =='something is fishy'\nassert solution('''1\n1''') =='something is fishy'\nassert solution('''1\n1''') =='something is fishy'\nassert solution('''1\n1''') =='something is fishy'\n"
    },
    {
        "number": 4842,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nassert solution('1 2 3 4 5') == '0 0'\nassert solution('1 2 3 4 5 6') == '0 0'\nassert solution('1 2 3 4 5 6 7') == '0 0'\n"
    },
    {
        "number": 4843,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8''') == 'CORRECT'\nassert solution('''4''') == 'CORRECT'\nassert solution('''8''') == 'INCORRECT'\nassert solution('''8''') == 'INCORRECT'\nassert solution('''8''') == 'INCORRECT'\n"
    },
    {
        "number": 4844,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 1 1\n1 0 1\n1 1 0''') == '1 1 1'\nassert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0''') == '1 2 3 1 11'\nassert solution('''7\n0 0 1 1 1 1\n0 0 2 0 2 2\n1 2 0 1 3 3\n1 0 1 0 1 1\n1 2 3 1 0 0\n1 0 1 0 1 1\n1 2 3 1 0 0''') == '1 2 3 1 11'\nassert solution('''9\n0 0 1 1 1 1 1\n0 0 2 0 2 2 2\n1 2 0 1 3 3 3\n1 0 1 0 1 1 1\n1 2 3 1 0 0 0\n1 0 1 0 1 1 1\n1 2 3 1 0 0 0\n1 0 1 0 1 1 1''') == '1 2 3 1 11'\nassert solution('''10\n0 0 1 1 1 1 1 1\n0 0 2 0 2 2 2 2\n1 2 0 1 3 3 3 3\n1 0 1 0 1 1 1 1\n1 2 3 1 0 0 0 0\n1 0 1 0 1 1 1 1\n1 2 3 1 0 0 0 0\n1 0 1 0 1 1 1 1\n1 2 3 1 0 0 0 0''') == '1 2 3 1 11'\n"
    },
    {
        "number": 4845,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\nassert solution('1 17') == 'Sunday'\nassert solution('17 17') == 'Saturday'\nassert solution('1 17') == 'Sunday'\n"
    },
    {
        "number": 4846,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n100\n4\n''') == '4'\nassert solution('''1\n100\n4\n''') == '40'\nassert solution('''1\n100\n12\n''') == '129'\nassert solution('''1\n100\n12\n''') == '480'\nassert solution('''1\n100\n12\n''') == '480'\n"
    },
    {
        "number": 4847,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '4.0\\n3'\nassert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '6.0\\n3'\nassert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '6.0\\n3'\nassert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '6.0\\n3'\nassert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '6.0\\n3'\n"
    },
    {
        "number": 4848,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '2'\nassert solution('''30''') == '7'\nassert solution('''4''') == '2'\nassert solution('''5''') == '3'\nassert solution('''6''') == '2'\n"
    },
    {
        "number": 4849,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '1\\n'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!\\n'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 4850,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 3 3\n4 4 5''') == '8.0'\nassert solution('''2\n3 3 3\n4 5 4''') == '6.843530573929037'\nassert solution('''2\n3 3 3\n4 4 4''') == '6.843530573929037'\nassert solution('''2\n3 3 3\n4 4 4''') == '6.843530573929037'\nassert solution('''2\n3 3 3\n4 4 4''') == '6.843530573929037'\n"
    },
    {
        "number": 4851,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4852,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nassert solution('1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100+101+102+103+104+105+106+107+108+109+110+111+112+113+114+115+116+117+118+119+120+121+122+123+124+125+126+127+128+129+130+131+132+133+134+135+136+137+138+139+140+141+142+143+144+145+146+147+148+149+150+151+152+153+154+155+156+157+158+159+160+161+162+163+164+165+166+167+168+169+170+171+172+173+174+175+176+177+178+179+180+181+182+183+184+185+186+187+188+189+190+191+192+193+194+195+196+197+198+199+200+201+202+203+204+205+206+207+208+209+210+211+212+213+214+215+216+217+218+219+220+221+222+223+224+225+226+227+228+229+230+231+232+233+234+235+236+237+238+239+240+241+242+243+244+245+246+247+248+249+250+251+252+253+254+255+256+257+258+259+260+261+262+263+264+265+266+267+268+269+270+271+272+273+274+275+276+277+278+279+280+281+282+283+284+285+286+287+288+289+290+291+292+293+294+295+296+297+298+299+300+301+302+303+304+305+306+307+308+309+310+311+312+313+314+315+316+317+318+319+320+321+322+323+324+325+326+327+328+329+330+331+332+333+334+335+336+337+338+339+340+341+342+343+344+345+346+347+348+349+350+351+352+353+354+355+356+357+358+359+360+361+362+363+364+365+366+367+368+369+370+371+372+373+374+375+376+377+378+379+380+381+382+383+384+385+386+387+388+389+390+391+392+393+394+395+396+397+398+399+400+401+402+403+404+405+406+407+408+409+410+411+412+413+414+415+416+417+418+419+420+421+422+423+424+425+426+427+428+429+430+431+432+433+434+435+436+437+438+439+440+441+442+443+444+445+446+447+448+449+450+451+452+453+454+455+456+457+458+459+460+461+462+463+464+465+466+467+468+469+470+471+472+473+474+475+476+477+478+479+480+481+482+483+484+485+486+487+488+489+490+491+492+493+494+495+496+497+498+499+500+501+502+503+504+505+506+507+508+509+510+511+512+513+514+515+516+517+518+519+520+521+522+523+524+525+526+527+528+529+530+531+532+533+534+535+536+537+538+539+540+541+542+543+544+545+546+547+548+549+550+551+552+553+554+555+556+557+558+559+560+561+562+563+564+565+566+567+568+569+570+571+572+573+574+575+576+577+578+579+580+581+582+583+584+585+586+587+588+589+590+591+592+593+594+595+596+597+598+599+600+601+602+603+604+605+606+607+608+609+610+611+612+613+614+615+616+617+618+619+620+621+622+623+624+625+626+627+628+629+630+631+632+633+634+635+636+637+638+639+640+641+642+643+644+645+646+647+648+649+650+651+652+653+654+655+656+657+658+659+660+661+662+663+664+665+666+667+668+669+670+671+672+673+674+675+676+677+678+679+680+681+682+683+"
    },
    {
        "number": 4853,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\nassert solution('1 1 1 1 1 1') == '1 1 1 1 1'\nassert solution
    },
    {
        "number": 4854,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4855,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4856,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('734 893') == '437'\n"
    },
    {
        "number": 4857,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4858,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n\n'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''"
    },
    {
        "number": 4859,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n'\n"
    },
    {
        "number": 4860,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13''') == 'good job'\nassert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793"
    },
    {
        "number": 4861,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'\n'''\n\nimport sys"
    },
    {
        "number": 4862,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 3\n"
    },
    {
        "number": 4863,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nA\nA\nA\nA''') == '3'\nassert solution('''4\nA\nB\nC\nD''') == '0'\nassert solution('''4\nA\nB\nC\nD\nA\nB\nC\nD''') == '0'\nassert solution('''4\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\n"
    },
    {
        "number": 4864,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..\\nxx..xx\\n..xx..'\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..\\nxx..xx\\n..xx..'\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..\\nxx..xx\\n..xx..'\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..\\nxx..xx\\n..xx..'\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..\\nxx..xx\\n..xx..'\n"
    },
    {
        "number": 4865,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''F 60 13 20''') == '14 20'\nassert solution('''B -60 13 20''') == '14 20'\nassert solution('''F 60 13 20''') == '14 20'\nassert solution('''B -60 13 20''') == '14 20'\nassert solution('''F 60 13 20''') == '14 20'\n"
    },
    {
        "number": 4866,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('DEC 25') == 'yup'\nassert solution('FEB 9') == 'nope'\nassert solution('JAN 1') == 'nope'\nassert solution('FEB 9, 31') == 'yup'\n"
    },
    {
        "number": 4867,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '''#.#.#.#.\n.#.#.#.#\n"
    },
    {
        "number": 4868,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n\nassert solution('''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P"
    },
    {
        "number": 4869,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"\n\nassert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\n\nassert solution(\"1.000000 4.000000\") == \"Need more materials!\"\n\nassert solution(\"1.000000 4.000000\") == \"Need more materials!\"\n\nassert solution(\"1.000000 4.000000\") == \"Need more materials!\""
    },
    {
        "number": 4870,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"use the stairs\"\n\n\"\"\""
    },
    {
        "number": 4871,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n500\n120\n75''') == '128.8'\nassert solution('''3\n500\n120\n75\n500\n120\n75''') == '89.06666666666666'\nassert solution('''3\n500\n120\n75\n500\n120\n75\n500\n120\n75''') == '89.06666666666666'\nassert solution('''3\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75\n500\n120\n75"
    },
    {
        "number": 4872,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 45 65 84 346\n''') == '4'\nassert solution('''1\n1\n''') == '0'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4873,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 4\n#######\n"
    },
    {
        "number": 4874,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n\nassert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n\nassert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n\nassert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$"
    },
    {
        "number": 4875,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''i cant speak pig latin\n''') == 'iyay antcay eakspay igpay atinlay'\nassert solution('''i cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig latin\ni cant speak pig"
    },
    {
        "number": 4876,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch''') == 'nymble'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n"
    },
    {
        "number": 4877,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 0 15''') == '3'\nassert solution('''5 0 10''') == '3'\nassert solution('''5 0 5''') == '3'\nassert solution('''5 0 1''') == '3'\nassert solution('''5 0 0''') == '3'\n"
    },
    {
        "number": 4878,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"19\"\n\n\"\"\""
    },
    {
        "number": 4879,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('North South East') == 'Yes'\nassert solution('North South West') == 'No'\nassert solution('North South East') == 'Yes'\nassert solution('North South West') == 'No'\nassert solution('North South East') == 'Yes'\n"
    },
    {
        "number": 4880,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''5 16\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''5 16\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''5 16\nagain\npirpumsemoystoal''') =='marywasnosyagain'\nassert solution('''5 16\nagain\npirpumsemoystoal''') =='marywasnosyagain'\n"
    },
    {
        "number": 4881,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == \"Either\"\nassert solution(2) == \"Odd\"\nassert solution(3) == \"Even\"\nassert solution(4) == \"Odd\"\nassert solution(5) == \"Odd\"\n"
    },
    {
        "number": 4882,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n314\n1\n5926\n5\n35897''') == '3\\n1\\n4\\n1\\n5'\nassert solution('''5\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897''') == '3\\n1\\n4\\n1\\n5'\nassert solution('''5\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n35897\n314\n1\n5926\n5\n"
    },
    {
        "number": 4883,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''c t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'yes\\nno\\nno\\nyes\\nyes\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno"
    },
    {
        "number": 4884,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\ncarrots?\nbunnies''') == '1'\nassert solution('''2 1\ncarrots?\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies''') == '5'\nassert solution('''2 1\ncarrots?\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\nbunnies\n"
    },
    {
        "number": 4885,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n'''\n\nassert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g"
    },
    {
        "number": 4886,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3''') == 'Your wish is granted!'\nassert solution('''8 4''') == 'You will become a flying monkey!'\nassert solution('''8 5''') == 'Your wish is granted!'\nassert solution('''8 6''') == 'You will become a flying monkey!'\nassert solution('''8 7''') == 'Your wish is granted!'\n"
    },
    {
        "number": 4887,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(16) == \"16\"\nassert solution(1) == \"1\"\nassert solution(10) == \"10\"\nassert solution(100) == \"100\"\nassert solution(1000) == \"1000\"\n"
    },
    {
        "number": 4888,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 180\n45 30 55 20 80 20''') == '4'\n"
    },
    {
        "number": 4889,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n21\n34\n18\n9''') == '79'\nassert solution('''1\n1\n1\n1\n1''') == '1'\nassert solution('''2\n1\n2''') == '3'\nassert solution('''3\n1\n2\n3''') == '6'\nassert solution('''4\n1\n2\n3\n4''') == '10'\n"
    },
    {
        "number": 4890,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4891,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 4892,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n123456 0.6666\nqwerty 0.3334''') == '1.3334'\nassert solution('''1\n123456 0.6666\nqwerty 0.3334''') == '0.3334'\nassert solution('''1\n123456 0.6666\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.3334\nqwerty 0.33"
    },
    {
        "number": 4893,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4894,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('C C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: ----------------------------------------------------------\nE:\nD: ----------------------------------------------------------\nC:\nB: ----------------------------------------------------------\nA:\ng: ----------------------------------------------------------\nf:\ne: ----------------------------------------------------------\nd:\nc:\nb:\na: ----------------------------------------------------------\"\"\"\nassert solution('C C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: ----------------------------------------------------------\nE:\nD: ----------------------------------------------------------\nC:\nB: ----------------------------------------------------------\nA:\ng: ----------------------------------------------------------\nf:\ne: ----------------------------------------------------------\nd:\nc:\nb:\na: ----------------------------------------------------------\"\"\"\nassert solution('C C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: ----------------------------------------------------------\nE:\nD: ----------------------------------------------------------\nC:\nB: ----------------------------------------------------------\nA:\ng: ----------------------------------------------------------\nf:\ne: ----------------------------------------------------------\nd:\nc:\nb:\na: ----------------------------------------------------------\"\"\"\nassert solution('C C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: ----------------------------------------------------------\nE:\nD: ----------------------------------------------------------\nC:\nB: ----------------------------------------------------------\nA:\ng: ----------------------------------------------------------\nf:\ne: ----------------------------------------------------------\nd:\nc:\nb:\na: ----------------------------------------------------------\"\"\"\nassert solution('C C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == \"\"\"G:\nF: ----------------------------------------------------------\nE:\nD: ----------------------------------------------------------\nC:\nB: ----------------------------------------------------------\nA:\ng: ----------------------------------------------------------\nf:\ne: ----------------------------------------------------------\nd:\nc:\nb:\na: ----------------------------------------------------------\"\"\"\n"
    },
    {
        "number": 4895,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 4896,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 3 3 2 1 2 2 1 1 3''') == '3'\nassert solution('''4\n1 1 1 1 1 1 1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1 1 1 1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1 1 1 1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4897,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '''\n35.54\nCARTER\nBOLT\nPOWELL\nBLAKE\n'''\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '''\n35.54\nCARTER\nBOLT\nPOWELL\nBLAKE\n'''\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '''\n35.54\nCARTER\nBOLT\nPOWELL\nBLAKE\n'''\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '''\n35.54\nCARTER\nBOLT\nPOWELL\nBLAKE\n'''\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '''\n35.54\nCARTER\nBOLT\nPOWELL\nBLAKE\n'''\n"
    },
    {
        "number": 4898,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 4\n5 6''') == '2'\nassert solution('''3\n1 2\n2 4\n5 6''') == '2'\nassert solution('''3\n1 2\n2 4\n5 6''') == '2'\nassert solution('''3\n1 2\n2 4\n5 6''') == '2'\nassert solution('''3\n1 2\n2 4\n5 6''') == '2'\n"
    },
    {
        "number": 4899,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(hey) == heey\nassert solution(heeey) == heeeey\nassert solution(heeeey) == heeeey\nassert solution(heeee) == heeee\nassert solution(heeee) == heeee\n"
    },
    {
        "number": 4900,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0''') == '1 2\\n1 3\\n1 4\\n'\n"
    },
    {
        "number": 4901,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('ABCD') == 'ABCD'\nassert solution('ABCDGHIJKLMNOPQRSTUVWXYZ') == 'ABCDGHIJKLMNOPQRSTUVWXYZ'\nassert solution('ABCDGHIJKLMNOPQRSTUVWXYZ') == 'ABCDGHIJKLMNOPQRSTUVWXYZ'\nassert solution('ABCDGHIJKLMNOPQRSTUVWXYZ') == 'ABCDGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 4902,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 2\nassert solution('abcd') == 1\nassert solution('abcde') == 1\nassert solution('abcdef') == 0\nassert solution('abcdefgh') == 1\n"
    },
    {
        "number": 4903,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''aaah\naaaaah''') == 'no'\nassert solution('''aaah\naaaaaah''') == 'go'\nassert solution('''aaah\naaaaaah''') == 'go'\nassert solution('''aaah\naaaaaaah''') == 'go'\nassert solution('''aaah\naaaaaaaaah''') == 'go'\n"
    },
    {
        "number": 4904,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2') == 'A'\nassert solution('A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1B1A1"
    },
    {
        "number": 4905,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15''') == '21'\nassert solution('''6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15''') == '21'\nassert solution('''6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15''') == '21'\nassert solution('''6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15''') == '21'\nassert solution('''6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15''') == '21'\n"
    },
    {
        "number": 4906,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4907,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Alice'\nassert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Bob'\nassert solution('4') == 'Alice'\n"
    },
    {
        "number": 4908,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 3 8\") == \"5+3=8\"\n"
    },
    {
        "number": 4909,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n3 2 2 1 1 3 1 1''') == 'YES'\nassert solution('''8\n3 2 2 1 1 3 1 1''') == 'NO'\nassert solution('''8\n3 2 2 1 1 3 1 1''') == 'NO'\nassert solution('''8\n3 2 2 1 1 3 1 1''') == 'NO'\nassert solution('''8\n3 2 2 1 1 3 1 1''') == 'NO'\n"
    },
    {
        "number": 4910,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'ghost'\nassert solution('''\n10\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\n''') =='mummy'\nassert solution('''\n10\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\n''') =='mummy'\nassert solution('''\n10\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\n''') =='mummy'\nassert solution('''\n10\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\nmummy\n''') =='mummy'\n"
    },
    {
        "number": 4911,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''Artist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n''') == '''Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n'''\n\nassert solution('''Artist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n''') == '''Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n'''\n\nassert solution('''Artist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n''') == '''Artist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n'''\n\nassert solution('''Artist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n''') == '''Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n'''\n\nassert solution('''Artist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n''') == '''Artist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n'''"
    },
    {
        "number": 4912,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 10 7\n5 5 5 5 5 5 5''') == 'YES'\nassert solution('''2 10 7\n5 5 5 5 5 5 5''') == 'NO'\nassert solution('''2 10 7\n5 5 5 5 5 5 5''') == 'NO'\nassert solution('''2 10 7\n5 5 5 5 5 5 5''') == 'NO'\nassert solution('''2 10 7\n5 5 5 5 5 5 5''') == 'NO'\n"
    },
    {
        "number": 4913,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == 'Not Effective'\nassert solution('''10\nYNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\n''') == '66.666667'\nassert solution('''10\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\n''') == '50.000000'\nassert solution('''10\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\n''') == '66.666667'\nassert solution('''10\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\nNNNN\n''') == '50.000000'\n"
    },
    {
        "number": 4914,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nBAACC''') == '3'\nassert solution('''5\nACCA\nACCB\nACCC''') == '3'\nassert solution('''5\nACCA\nACCB\nACCC\nACCA\nACCB\nACCC''') == '3'\nassert solution('''5\nACCA\nACCB\nACCC\nACCA\nACCB\nACCC''') == '3'\nassert solution('''5\nACCA\nACCB\nACCC\nACCA\nACCB\nACCC''') == '3'\n"
    },
    {
        "number": 4915,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '3 543'\nassert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n"
    },
    {
        "number": 4916,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4"
    },
    {
        "number": 4917,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 7\n5 5''') == 'gunilla has a point'\nassert solution('''2\n1 7\n5 5''') == 'edward is right'\nassert solution('''3\n1 7\n5 5\n1 7\n5 5''') == 'gunilla has a point'\nassert solution('''4\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5''') == 'gunilla has a point'\nassert solution('''5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n1 7\n5 5\n"
    },
    {
        "number": 4918,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\n"
    },
    {
        "number": 4919,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2''') == '''2015\n1982\n2016\n'''\n\nassert solution('''4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nNorway 1\nIceland 1\nIceland 2''') == '''2015\n1982\n'''\n\nassert solution('''4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nNorway 1\nIceland 1\nIceland 2''') == '''2015\n1982\n'''\n\nassert solution('''4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nNorway 1\nNorway 2\nNorway 3\nNorway 4\nNorway 5\nNorway 6\nNorway 7\nNorway 8\nNorway 9\nNorway 10\nNorway 11\nNorway 12\nNorway 13\nNorway 14\nNorway 15\nNorway 16\nNorway 17\nNorway 18\nNorway 19\nNorway 20\nNorway 21\nNorway 22\nNorway 23\nNorway 24\nNorway 25\nNorway 26\nNorway 27\nNorway 28\nNorway 29\nNorway 30\nNorway 31\nNorway 32\nNorway 33\nNorway 34\nNorway 35\nNorway 36\nNorway 37\nNorway 38\nNorway 39\nNorway 40\nNorway 41\nNorway 42\nNorway 43\nNorway 44\nNorway 45\nNorway 46\nNorway 47\nNorway 48\nNorway 49\nNorway 50\nNorway 51\nNorway 52\nNorway 53\nNorway 54\nNorway 55\nNorway 56\nNorway 57\nNorway 58\nNorway 59\nNorway 60\nNorway 61\nNorway 62\nNorway 63\nNorway 64\nNorway 65\nNorway 66\nNorway 67\nNorway 68\nNorway 69\nNorway 70\nNorway 71\nNorway 72\nNorway 73\nNorway 74\nNorway 75\nNorway 76\nNorway 77\nNorway 78\nNorway 79\nNorway 80\nNorway 81\nNorway 82\nNorway 83\nNorway 84\nNorway 85\nNorway 86\nNorway 87\nNorway 88\nNorway 89\nNorway 90\nNorway 91\nNorway 92\nNorway 93\nNorway 94\nNorway 95\nNorway 96\nNorway 97\nNorway 98\nNorway 99\nNorway 100\nNorway 101\nNorway 102\nNorway 103\nNorway 104\nNorway 105\nNorway 106\nNorway 107\nNorway 108\nNorway 109\nNorway 110\nNorway 111\nNorway 112\nNorway 113\nNorway 114\nNorway 115\nNorway 116\nNorway 117\nNorway 118\nNorway 119\nNorway 120\nNorway 121\nNorway 122\nNorway 123\nNorway 124\nNorway 125\nNorway 126\nNorway 127\nNorway 128\nNorway 129\nNorway 130\nNorway 131\nNorway 132\nNorway 133\nNorway 134\nNorway 135\nNorway 136\nNorway 137\nNorway 138\nNorway 139\nNorway 140\nNorway 141\nNorway 142\nNorway 143\nNorway 144\nNorway 145\nNorway 146\nNorway 147\nNorway 148\nNorway 149\nNorway 150\nNorway 151\nNorway 152\nNorway 153\nNorway 154\nNorway 155\nNorway 156\nNorway 157\nNorway 158\nNorway 159\nNorway 160\nNorway 161\nNorway 162\nNorway 163\nNorway 164\nNorway 165\nNorway 166\nNorway 167\nNorway 168\nNorway 169\nNorway 170\nNorway 171\nNorway 172\nNorway 173\nNorway 174\nNorway 175\nNorway 176\nNorway 177\nNorway 178\nNorway 179\nNorway 180\nNorway 181\nNorway 182\nNorway 183\nNorway 184\nNorway 185\nNorway 186\nNorway 187\nNorway 188\nNorway 189\nNorway 190\nNorway 191\nNorway 192\nNorway 193\nNorway 194\nNorway 195\nNorway 196\nNorway 197\nNorway 198\nNorway 199\nNorway 200\nNorway 201\nNorway 202\nNorway 203\nNorway 204\nNorway 205\nNorway 206\nNorway 207\nNorway 208\nNorway 209\nNorway 210\nNorway 211\nNorway 212\nNorway 213\nNorway 214\nNorway 215\nNorway 216\nNorway 217\nNorway 218\nNorway 219\nNorway 220\nNorway 221\nNorway 222\nNorway 223\nNorway 224\nNorway 225\nNorway 226\nNorway 227\nNorway 228\nNorway 229\nNorway 230\nNorway 231\nNorway 232\nNorway 233\nNorway 234\nNorway 235\nNorway 236\nNorway 237\nNorway 238\nNorway 239\nNorway 240\nNorway 241\nNorway 242\nNorway 243\nNorway 244\nNorway 245\nNorway 246\nNorway 247\nNorway 248\nNorway 249\nNorway 250\nNorway 251\nNorway 252\nNorway 253\nNorway 254\nNorway 255\nNorway 256\nNorway 257\nNorway 258\nNorway 259\nNorway 260\nNorway 261\nNorway 262\nNorway 263\nNorway 264\nNorway 265\nNorway 266\nNorway 267\nNorway 268\nNorway 269\nNorway 270\nNorway 271\nNorway 272\nNorway 273\nNorway 274\nNorway 275\nNorway 276\nNorway 277\nNorway 278\nNorway 279\nNorway 280\nNorway 281\nNorway 282\nNorway 283\nNorway 284\nNorway 285\nNorway 286\nNorway 287\nNorway 288\nNorway 289\nNorway 290\nNorway 291\nNorway 292\nNorway 293\nNorway 294\nNorway 295\nNorway 296\nNorway 297\nNorway 298\nNorway 299\nNorway 300\nNorway 301\nNorway 302\nNorway 303\nNorway 304\nNorway 305\nNorway 306\nNorway 307\nNorway 308\nNorway 309\nNorway 310\nNorway 311\nNorway 312\nNorway 313\nNorway 314\nNorway 315\nNorway 316\nNorway 317\nNorway 318\nNorway 319\nNorway 320\nNorway 321\nNorway 322\nNorway 323\nNorway 324\nNorway 325\nNorway 326\nNorway 327\nNorway 328\nNorway 329\nNorway 330\nNorway 331\nNorway 332\nNor"
    },
    {
        "number": 4920,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('ab') == 0\nassert solution('abc') == 0\nassert solution('abcd') == 1\n"
    },
    {
        "number": 4921,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity''') == 'Engineering will save the world from inefficiency.. is a blight on.. and its humanity'\nassert solution('''Inefficiency is a blight on the world and its\nhumanity''') == 'Inefficiency is a blight on the world and its humanity'\nassert solution('''Inefficiency is a blight on the world and its\nhumanity''') == 'Inefficiency is a blight on the world and its humanity'\nassert solution('''Inefficiency is a blight on the world and its\nhumanity''') == 'Inefficiency is a blight on the world and its humanity'\nassert solution('''Inefficiency is a blight on the world and its\nhumanity''') == 'Inefficiency is a blight on the world and its humanity'\n"
    },
    {
        "number": 4922,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\n"
    },
    {
        "number": 4923,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1 1 1 5 3 4 6 6''') == '4'\nassert solution('''8\n1 1 1 5 3 4 6 6''') == '4'\nassert solution('''8\n1 1 1 5 3 4 6 6''') == '4'\nassert solution('''8\n1 1 1 5 3 4 6 6''') == '4'\nassert solution('''8\n1 1 1 5 3 4 6 6''') == '4'\n"
    },
    {
        "number": 4924,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"20:00:00\"\n    \"04:00:00\"\n) == \"08:00:00\"\nassert solution(\n    \"20:00:00\"\n    \"04:00:00\"\n) == \"08:00:00\"\nassert solution(\n    \"20:00:00\"\n    \"04:00:00\"\n) == \"08:00:00\"\nassert solution(\n    \"20:00:00\"\n    \"04:00:00\"\n) == \"08:00:00\"\nassert solution(\n    \"20:00:00\"\n    \"04:00:00\"\n) == \"08:00:00\"\n"
    },
    {
        "number": 4925,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4926,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == 2.6666666666666665\nassert solution('''0''') == 1\nassert solution('''1''') == 1.0\nassert solution('''2''') == 1.5\nassert solution('''3''') == 2.0\n"
    },
    {
        "number": 4927,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"paul\""
    },
    {
        "number": 4928,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4929,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n123\n123a\n''') == 'No'\nassert solution('''\n123\n123a\n''') == 'Yes'\nassert solution('''\n123\n123a\n''') == 'Yes'\nassert solution('''\n123\n123a\n''') == 'Yes'\nassert solution('''\n123\n123a\n''') == 'Yes'\n"
    },
    {
        "number": 4930,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\nassert solution('paprika papapripikapa') == 'paprika papapripikapa'\nassert solution('paprika papapripikapa') == 'paprika papapripikapa'\nassert solution('paprika papapripikapa') == 'paprika papapripikapa'\nassert solution('paprika papapripikapa') == 'paprika papapripikapa'\n"
    },
    {
        "number": 4931,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 4932,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 3 3\n1 3 4\n''') == 'both'\nassert solution('''2 2 3 3\n1 3 4\n''') == 'one'\nassert solution('''2 2 3 3\n1 3 4\n''') == 'none'\nassert solution('''2 2 3 3\n1 3 4\n''') == 'both'\nassert solution('''2 2 3 3\n1 3 4\n''') == 'one'\n"
    },
    {
        "number": 4933,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == '5'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5 6') == '7'\n"
    },
    {
        "number": 4934,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"533\"\n"
    },
    {
        "number": 4935,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 9\n69 60\n100 60''') == '39.0 30.0'\nassert solution('''2 9\n69 60\n100 60\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4936,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n23 27 31 28 30''') == '2 28'\nassert solution('''5\n23 27 31 28 30''') == '2 28'\nassert solution('''5\n23 27 31 28 30''') == '2 28'\nassert solution('''5\n23 27 31 28 30''') == '2 28'\nassert solution('''5\n23 27 31 28 30''') == '2 28'\n"
    },
    {
        "number": 4937,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\n1 2 3\n''') == '2'\nassert solution('''3 6\n1 2 3\n''') == '2'\nassert solution('''3 6\n1 2 3\n''') == '2'\nassert solution('''3 6\n1 2 3\n''') == '2'\nassert solution('''3 6\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 4938,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('W') == '1'\nassert solution('WMMMMMMMM') == '1'\nassert solution('WMMMMMMMMMM') == '1'\nassert solution('WMMMMMMMMMMMM') == '1'\n"
    },
    {
        "number": 4939,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n8 -2 3 undo 2''') == '3'\nassert solution('''5 4\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8 -2 3 undo 2\n8"
    },
    {
        "number": 4940,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2 3\n3 2 1''') == '6 7'\nassert solution('''2 3\n1 2 3\n3 2 1''') == '6 7'\nassert solution('''2 3\n1 2 3\n3 2 1''') == '6 7'\nassert solution('''2 3\n1 2 3\n3 2 1''') == '6 7'\nassert solution('''2 3\n1 2 3\n3 2 1''') == '6 7'\n"
    },
    {
        "number": 4941,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect''') == '64 correct\\n665 incorrect'\nassert solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect''') == '64 correct\\n665 incorrect'\nassert solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect''') == '64 correct\\n665 incorrect'\nassert solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect''') == '64 correct\\n665 incorrect'\nassert solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect''') == '64 correct\\n665 incorrect'\n"
    },
    {
        "number": 4942,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 4 3''') == '7'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n2''') == '2'\nassert solution('''1\n2\n3''') == '4'\nassert solution('''1\n2\n3\n4''') == '5'\n"
    },
    {
        "number": 4943,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1 1\n0 2\n4''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''0 0\n1 1\n0 2\n4''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''0 0\n1 1\n0 2\n4''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''0 0\n1 1\n0 2\n4''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''0 0\n1 1\n0 2\n4''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n"
    },
    {
        "number": 4944,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5\n"
    },
    {
        "number": 4945,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"34\"\n\n\"\"\""
    },
    {
        "number": 4946,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 3 1''') == '3'\nassert solution('''4\n1 2 3 1''') == '3'\nassert solution('''4\n1 2 3 1''') == '3'\nassert solution('''4\n1 2 3 1''') == '3'\nassert solution('''4\n1 2 3 1''') == '3'\n"
    },
    {
        "number": 4947,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1.0) == 1088\nassert solution(0.5) == 10\nassert solution(0.1) == 10\nassert solution(0.01) == 10\nassert solution(0.001) == 10\n"
    },
    {
        "number": 4948,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 4\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0"
    },
    {
        "number": 4949,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3 4\n3\n4\n5\n6\n7''') == 'DA\\nDA\\nDA\\nNE\\nNE'\nassert solution('''5 3 4\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796"
    },
    {
        "number": 4950,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n7 42''') == '6'\nassert solution('''0 0\n7 42\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0"
    },
    {
        "number": 4951,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == '2'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE"
    },
    {
        "number": 4952,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == 'Connie Froggatt'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == 'Runoff!'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == 'Penny Franklin'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == 'Penny Franklin'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == 'Penny Franklin'\n"
    },
    {
        "number": 4953,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic''') == '2'\nassert solution('''7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n"
    },
    {
        "number": 4954,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"stay home\"\n"
    },
    {
        "number": 4955,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('C D F D C D F F F C') == 'A# C D# F'\nassert solution('C D F D C D F F F C') == 'A# C D# F'\nassert solution('C D F D C D F F F C') == 'A# C D# F'\nassert solution('C D F D C D F F F C') == 'A# C D# F'\nassert solution('C D F D C D F F F C') == 'A# C D# F'\n"
    },
    {
        "number": 4956,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\n"
    },
    {
        "number": 4957,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n....#.\n....#.\n"
    },
    {
        "number": 4958,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4959,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 0 3''') == '4'\nassert solution('''9 0 3''') == '4'\nassert solution('''9 0 3''') == '4'\nassert solution('''9 0 3''') == '4'\nassert solution('''9 0 3''') == '4'\n"
    },
    {
        "number": 4960,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1010') == '12'\nassert solution('10101') == '13'\nassert solution
    },
    {
        "number": 4961,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 4962,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\n"
    },
    {
        "number": 4963,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n0''') == '1 2'\nassert solution('''1\n0''') == '1 2'\nassert solution('''2\n0 1''') == '1 2'\nassert solution('''2\n1 0''') == '1 2'\nassert solution('''2\n1 1''') == '1 2'\n"
    },
    {
        "number": 4964,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '0'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '0'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n"
    },
    {
        "number": 4965,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4966,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 20 15\n3 10\n''') == '18.400'\nassert solution('''2 20 15\n3 10\n''') == '18.400'\nassert solution('''2 20 15\n3 10\n''') == '18.400'\nassert solution('''2 20 15\n3 10\n''') == '18.400'\nassert solution('''2 20 15\n3 10\n''') == '18.400'\n"
    },
    {
        "number": 4967,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n....H\n.....\nS....\n....H\n.....\n''') == '5'\nassert solution('''5\n....H\n.....\nS....\n....H\n.....\n''') == '5'\nassert solution('''5\n....H\n.....\nS....\n....H\n.....\n''') == '5'\nassert solution('''5\n....H\n.....\nS....\n....H\n.....\n''') == '5'\nassert solution('''5\n....H\n.....\nS....\n....H\n.....\n''') == '5'\n"
    },
    {
        "number": 4968,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n2 4\n1 3 5''') == '0'\nassert solution('''5 2 3\n2 4\n1 3 5\n2 4\n1 3 5''') == '0'\nassert solution('''5 2 3\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5''') == '0'\nassert solution('''5 2 3\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5''') == '0'\nassert solution('''5 2 3\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4\n1 3 5\n2 4"
    },
    {
        "number": 4969,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 4970,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4971,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1730''') == '1729'\nassert solution('''1729''') == '1729'\nassert solution('''1729''') == '1729'\nassert solution('''1729''') == '1729'\nassert solution('''1729''') == '1729'\n"
    },
    {
        "number": 4972,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(65536) == \"16\"\nassert solution(65535) == \"15\"\nassert solution(65534) == \"14\"\nassert solution(65533) == \"13\"\nassert solution(65532) == \"12\"\n"
    },
    {
        "number": 4973,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n....\n....\n....\n...K''') == '2'\nassert solution('''4\n....\n....\n....\nK''') == '-1'\nassert solution('''4\n....\n....\n....\nK''') == '-1'\nassert solution('''4\n....\n....\n....\nK''') == '-1'\nassert solution('''4\n....\n....\n....\nK''') == '-1'\n"
    },
    {
        "number": 4974,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''100 5\n42\n3\n2\n99\n1''') == '23'\nassert solution('''100 5\n42\n3\n2\n99\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '23'\nassert solution('''100 5\n42\n3\n2\n99\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '23'\nassert solution('''100 5\n42\n3\n2\n99\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '23'\nassert solution('''100 5\n42\n3\n2\n99\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '23'\n"
    },
    {
        "number": 4975,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''playfair example\nhide the gold in the tree stump''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''a b c d e f g h i j k l m n o p q r s t u v w x y z''') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('''a b c d e f g h i j k l m n o p q r s t u v w x y z''') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('''a b c d e f g h i j k l m n o p q r s t u v w x y z''') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('''a b c d e f g h i j k l m n o p q r s t u v w x y z''') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 4976,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher cannot escape.'\nassert solution('''1.000 1.000 2.000 2.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at (1.500, 1.500).'\nassert solution('''1.000 1.000 2.000 2.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at (1.500, 1.500).'\nassert solution('''1.000 1.000 2.000 2.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n1.500 1.500\n1.000 1.000\n"
    },
    {
        "number": 4977,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Y\"\nassert solution(stdin) == \"N\"\nassert solution(stdin) == \"Y\"\nassert solution(stdin) == \"Y\"\nassert solution(stdin) == \"Y\"\n"
    },
    {
        "number": 4978,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\nassert solution('''5 7\n.......\n.......\n...#...\n..###..\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\nassert solution('''5 7\n.......\n.......\n...#...\n..###..\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\nassert solution('''5 7\n.......\n.......\n...#...\n..###..\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\nassert solution('''5 7\n.......\n.......\n...#...\n..###..\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\n"
    },
    {
        "number": 4979,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(13) == 11\nassert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\n"
    },
    {
        "number": 4980,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n12\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon\n''') == '9'\nassert solution('''\n1\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon\n''') == 'I must watch Star Wars with my daughter'\nassert solution('''\n2\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon\n''') == 'I must watch Star Wars with my daughter'\nassert solution('''\n3\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon\n''') == 'I must watch Star Wars with my daughter'\nassert solution('''\n4\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon\n''') == 'I must watch Star Wars with my daughter'\n"
    },
    {
        "number": 4981,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4982,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''buy 1 15\nsplit 3\nsell 1 5\ndie 4''') == '8.00000000'\nassert solution('''buy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\nbuy 1 15\nbuy 1 15\nsplit 3\nsell 1 5\n"
    },
    {
        "number": 4983,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(808) == 8\nassert solution(8) == 8\nassert solution(7) == 7\nassert solution(7) == 7\nassert solution(7) == 7\n"
    },
    {
        "number": 4984,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == 0\nassert solution('''4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == 0\nassert solution('''4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == 0\nassert solution('''4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == 0\nassert solution('''4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == 0\n"
    },
    {
        "number": 4985,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\n"
    },
    {
        "number": 4986,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nassert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n"
    },
    {
        "number": 4987,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3 0''') == '3'\nassert solution('''5 3 0''') == '3'\nassert solution('''5 3 0''') == '3'\nassert solution('''5 3 0''') == '3'\nassert solution('''5 3 0''') == '3'\n"
    },
    {
        "number": 4988,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 4989,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 1 2''') == '4 2'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 2''') == '3'\nassert solution('''3\n1 2 3''') == '6'\nassert solution('''4\n1 2 3 4''') == '10'\n"
    },
    {
        "number": 4990,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 1''') == '2'\nassert solution('''5 2 3''') == '3'\nassert solution('''5 2 3''') == '3'\nassert solution('''5 2 3''') == '3'\nassert solution('''5 2 3''') == '3'\n"
    },
    {
        "number": 4991,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(5) == 36\nassert solution(7) == 288\nassert solution(10) == 10\nassert solution(20) == 10\nassert solution(50) == 10\n"
    },
    {
        "number": 4992,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4993,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar''') == '4'\nassert solution('''3 5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\nhull\nright_oar\n"
    },
    {
        "number": 4994,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n5 7\n7 5''') == '7 7'\nassert solution('''5 5\n5 7\n7 5''') == '7 7'\nassert solution('''5 5\n5 7\n7 5''') == '7 7'\nassert solution('''5 5\n5 7\n7 5''') == '7 7'\nassert solution('''5 5\n5 7\n7 5''') == '7 7'\n"
    },
    {
        "number": 4995,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1 61\n''') == '1.016666667'\nassert solution('''2\n1 61\n2 61\n''') =='measurement error'\nassert solution('''3\n1 61\n2 61\n3 61\n''') =='measurement error'\nassert solution('''4\n1 61\n2 61\n3 61\n4 61\n''') =='measurement error'\nassert solution('''5\n1 61\n2 61\n3 61\n4 61\n5 61\n''') =='measurement error'\n"
    },
    {
        "number": 4996,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\nassert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\nassert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\nassert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\nassert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\n"
    },
    {
        "number": 4997,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AB') == 3\nassert solution('ABC') == 2\nassert solution('ABCD') == 1\nassert solution('ABCDE') == 1\nassert solution('ABCDEF') == 1\n"
    },
    {
        "number": 4998,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 4999,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    }
]